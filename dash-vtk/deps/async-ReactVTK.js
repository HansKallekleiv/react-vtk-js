(window["webpackJsonpdash_vtk"] = window["webpackJsonpdash_vtk"] || []).push([["async-ReactVTK"],{

/***/ "../dist/esm/core/Algorithm.js":
/*!*************************************!*\
  !*** ../dist/esm/core/Algorithm.js ***!
  \*************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return g; });
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "../node_modules/@babel/runtime/helpers/defineProperty.js");
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js");
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ "../node_modules/@babel/runtime/helpers/inherits.js");
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js");
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "../node_modules/@babel/runtime/helpers/getPrototypeOf.js");
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! prop-types */ "prop-types");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _View_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./View.js */ "../dist/esm/core/View.js");
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../utils.js */ "../dist/esm/utils.js");
/* harmony import */ var _kitware_vtk_js_vtk_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @kitware/vtk.js/vtk.js */ "../node_modules/@kitware/vtk.js/vtk.js");












function m(t, e) {
  var r = Object.keys(t);

  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(t);
    e && (o = o.filter(function (e) {
      return Object.getOwnPropertyDescriptor(t, e).enumerable;
    })), r.push.apply(r, o);
  }

  return r;
}

function h(e) {
  for (var r = 1; r < arguments.length; r++) {
    var o = null != arguments[r] ? arguments[r] : {};
    r % 2 ? m(Object(o), !0).forEach(function (r) {
      _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(e, r, o[r]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(o)) : m(Object(o)).forEach(function (t) {
      Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(o, t));
    });
  }

  return e;
}

function v(t) {
  var e = function () {
    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
    if (Reflect.construct.sham) return !1;
    if ("function" == typeof Proxy) return !0;

    try {
      return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})), !0;
    } catch (t) {
      return !1;
    }
  }();

  return function () {
    var r,
        o = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default()(t);

    if (e) {
      var i = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default()(this).constructor;
      r = Reflect.construct(o, arguments, i);
    } else r = o.apply(this, arguments);

    return _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4___default()(this, r);
  };
}

var g = function (t) {
  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3___default()(s, react__WEBPACK_IMPORTED_MODULE_6__["Component"]);
  var n = v(s);

  function s(t) {
    var r;
    return _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default()(this, s), (r = n.call(this, t)).algo = null, r;
  }

  return _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2___default()(s, [{
    key: "render",
    value: function () {
      var t = this;
      return react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(_View_js__WEBPACK_IMPORTED_MODULE_8__["RepresentationContext"].Consumer, null, function (e) {
        return react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(_View_js__WEBPACK_IMPORTED_MODULE_8__["DownstreamContext"].Consumer, null, function (r) {
          if (t.representation = e, !t.algo) {
            var o = t.props,
                n = o.vtkClass,
                s = o.state;
            t.algo = Object(_kitware_vtk_js_vtk_js__WEBPACK_IMPORTED_MODULE_10__["default"])(h({
              vtkClass: n
            }, s));
          }

          return t.downstream || (r.setInputConnection(t.algo.getOutputPort(), t.props.port), t.downstream = r), react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(_View_js__WEBPACK_IMPORTED_MODULE_8__["DownstreamContext"].Provider, {
            value: t.algo
          }, react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement("div", {
            key: t.props.id,
            id: t.props.id
          }, t.props.children));
        });
      });
    }
  }, {
    key: "componentDidMount",
    value: function () {
      this.update(this.props);
    }
  }, {
    key: "componentDidUpdate",
    value: function (t, e, r) {
      this.update(this.props, t);
    }
  }, {
    key: "componentWillUnmount",
    value: function () {
      this.algo.delete(), this.algo = null;
    }
  }, {
    key: "update",
    value: function (t, e) {
      var r = t.vtkClass,
          o = t.state;

      if (r && (!e || r !== e.vtkClass)) {
        if (this.algo) {
          if (this.algo.getClassName() !== r) {
            var n = this.algo;
            this.algo = Object(_kitware_vtk_js_vtk_js__WEBPACK_IMPORTED_MODULE_10__["default"])(h({
              vtkClass: r
            }, o));

            for (var s = n.getNumberOfInputPorts(), i = 0; i < s; i++) {
              var a = n.getInputConnection(i);
              a ? this.algo.setInputConnection(a, i) : this.algo.setInputData(n.getInputData(i), i);
            }
          }
        } else this.algo = Object(_kitware_vtk_js_vtk_js__WEBPACK_IMPORTED_MODULE_10__["default"])(h({
          vtkClass: r
        }, o));

        this.downstream.setInputConnection(this.algo.getOutputPort(), this.props.port);
      }

      !o || e && Object(_utils_js__WEBPACK_IMPORTED_MODULE_9__["smartEqualsShallow"])(o, e.state) || (this.algo.set(o), this.representation && this.representation.dataChanged()), 0 === this.algo.getNumberOfInputPorts() && this.representation && this.representation.dataAvailable();
    }
  }]), s;
}();

g.defaultProps = {
  port: 0,
  vtkClass: "vtkConeSource",
  state: {}
}, g.propTypes = {
  id: prop_types__WEBPACK_IMPORTED_MODULE_7___default.a.string,
  port: prop_types__WEBPACK_IMPORTED_MODULE_7___default.a.number,
  vtkClass: prop_types__WEBPACK_IMPORTED_MODULE_7___default.a.string,
  state: prop_types__WEBPACK_IMPORTED_MODULE_7___default.a.object,
  children: prop_types__WEBPACK_IMPORTED_MODULE_7___default.a.oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_7___default.a.arrayOf(prop_types__WEBPACK_IMPORTED_MODULE_7___default.a.node), prop_types__WEBPACK_IMPORTED_MODULE_7___default.a.node])
};


/***/ }),

/***/ "../dist/esm/core/Calculator.js":
/*!**************************************!*\
  !*** ../dist/esm/core/Calculator.js ***!
  \**************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return f; });
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js");
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ "../node_modules/@babel/runtime/helpers/inherits.js");
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js");
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "../node_modules/@babel/runtime/helpers/getPrototypeOf.js");
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! prop-types */ "prop-types");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _View_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./View.js */ "../dist/esm/core/View.js");
/* harmony import */ var _kitware_vtk_js_Filters_General_Calculator_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @kitware/vtk.js/Filters/General/Calculator.js */ "../node_modules/@kitware/vtk.js/Filters/General/Calculator.js");
/* harmony import */ var _kitware_vtk_js_Common_DataModel_DataSet_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @kitware/vtk.js/Common/DataModel/DataSet.js */ "../node_modules/@kitware/vtk.js/Common/DataModel/DataSet.js");











function p(r) {
  var t = function () {
    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
    if (Reflect.construct.sham) return !1;
    if ("function" == typeof Proxy) return !0;

    try {
      return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})), !0;
    } catch (r) {
      return !1;
    }
  }();

  return function () {
    var e,
        a = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default()(r);

    if (t) {
      var l = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default()(this).constructor;
      e = Reflect.construct(a, arguments, l);
    } else e = a.apply(this, arguments);

    return _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3___default()(this, e);
  };
}

var m = _kitware_vtk_js_Common_DataModel_DataSet_js__WEBPACK_IMPORTED_MODULE_9__["default"].FieldDataTypes,
    f = function (o) {
  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2___default()(i, react__WEBPACK_IMPORTED_MODULE_5__["Component"]);
  var n = p(i);

  function i(t) {
    var e;
    return _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, i), (e = n.call(this, t)).calculator = _kitware_vtk_js_Filters_General_Calculator_js__WEBPACK_IMPORTED_MODULE_8__["default"].newInstance(), e;
  }

  return _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(i, [{
    key: "render",
    value: function () {
      var r = this,
          t = this.props,
          e = t.name,
          o = t.arrays,
          n = t.location,
          l = t.formula;
      return this.calculator.setFormulaSimple(m[n], o, e, l), react__WEBPACK_IMPORTED_MODULE_5___default.a.createElement(_View_js__WEBPACK_IMPORTED_MODULE_7__["DownstreamContext"].Consumer, null, function (t) {
        return r.downstream || (t.setInputConnection(r.calculator.getOutputPort(), r.props.port), r.downstream = t), react__WEBPACK_IMPORTED_MODULE_5___default.a.createElement(_View_js__WEBPACK_IMPORTED_MODULE_7__["DownstreamContext"].Provider, {
          value: r.calculator
        }, react__WEBPACK_IMPORTED_MODULE_5___default.a.createElement("div", {
          key: r.props.id,
          id: r.props.id
        }, r.props.children));
      });
    }
  }, {
    key: "componentWillUnmount",
    value: function () {
      this.calculator.delete(), this.calculator = null;
    }
  }]), i;
}();

f.defaultProps = {
  port: 0,
  name: "scalars",
  location: "POINT",
  arrays: [],
  formula: function (r) {
    return r[0];
  }
}, f.propTypes = {
  id: prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.string,
  port: prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.number,
  name: prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.string,
  location: prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.string,
  arrays: prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.arrayOf(prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.string),
  formula: prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.func,
  children: prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.arrayOf(prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.node), prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.node])
};


/***/ }),

/***/ "../dist/esm/core/CellData.js":
/*!************************************!*\
  !*** ../dist/esm/core/CellData.js ***!
  \************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return n; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! prop-types */ "prop-types");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _View_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./View.js */ "../dist/esm/core/View.js");




function n(r) {
  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_View_js__WEBPACK_IMPORTED_MODULE_2__["DataSetContext"].Consumer, null, function (t) {
    return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_View_js__WEBPACK_IMPORTED_MODULE_2__["FieldsContext"].Provider, {
      value: t.getDataSet().getCellData()
    }, r.children);
  });
}

n.defaultProps = {}, n.propTypes = {
  children: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.arrayOf(prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.node), prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.node])
};


/***/ }),

/***/ "../dist/esm/core/DataArray.js":
/*!*************************************!*\
  !*** ../dist/esm/core/DataArray.js ***!
  \*************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return y; });
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js");
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ "../node_modules/@babel/runtime/helpers/inherits.js");
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js");
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "../node_modules/@babel/runtime/helpers/getPrototypeOf.js");
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! prop-types */ "prop-types");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../utils.js */ "../dist/esm/utils.js");
/* harmony import */ var _View_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./View.js */ "../dist/esm/core/View.js");
/* harmony import */ var _kitware_vtk_js_Common_Core_DataArray_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @kitware/vtk.js/Common/Core/DataArray.js */ "../node_modules/@kitware/vtk.js/Common/Core/DataArray.js");
/* harmony import */ var _kitware_vtk_js_macros_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @kitware/vtk.js/macros.js */ "../node_modules/@kitware/vtk.js/macros.js");












function p(t) {
  var r = function () {
    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
    if (Reflect.construct.sham) return !1;
    if ("function" == typeof Proxy) return !0;

    try {
      return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})), !0;
    } catch (t) {
      return !1;
    }
  }();

  return function () {
    var e,
        s = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default()(t);

    if (r) {
      var i = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default()(this).constructor;
      e = Reflect.construct(s, arguments, i);
    } else e = s.apply(this, arguments);

    return _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3___default()(this, e);
  };
}

var y = function (n) {
  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2___default()(o, react__WEBPACK_IMPORTED_MODULE_5__["Component"]);
  var a = p(o);

  function o(r) {
    var e;
    return _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, o), (e = a.call(this, r)).array = _kitware_vtk_js_Common_Core_DataArray_js__WEBPACK_IMPORTED_MODULE_9__["default"].newInstance({
      name: "scalars",
      empty: !0
    }), e.arrayAttached = !1, e;
  }

  return _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(o, [{
    key: "render",
    value: function () {
      var t = this;
      return react__WEBPACK_IMPORTED_MODULE_5___default.a.createElement(_View_js__WEBPACK_IMPORTED_MODULE_8__["DataSetContext"].Consumer, null, function (r) {
        return t.dataset = r, react__WEBPACK_IMPORTED_MODULE_5___default.a.createElement(_View_js__WEBPACK_IMPORTED_MODULE_8__["FieldsContext"].Consumer, null, function (r) {
          return t.fields || (t.fields = r), react__WEBPACK_IMPORTED_MODULE_5___default.a.createElement("div", {
            key: t.props.id,
            name: t.props.name
          });
        });
      });
    }
  }, {
    key: "componentDidMount",
    value: function () {
      this.update(this.props);
    }
  }, {
    key: "componentDidUpdate",
    value: function (t, r, e) {
      this.update(this.props, t);
    }
  }, {
    key: "componentWillUnmount",
    value: function () {
      this.fields.removeArray(this.array), this.array.delete(), this.array = null;
    }
  }, {
    key: "update",
    value: function (t, r) {
      var e = t.name,
          n = t.type,
          a = t.values,
          s = t.numberOfComponents,
          i = _kitware_vtk_js_macros_js__WEBPACK_IMPORTED_MODULE_10__["TYPED_ARRAYS"][n],
          o = !1;
      this.array.setName(e), !n || r && n === r.type || (o = !0), !s || r && s === r.numberOfComponents || (o = !0), !a || !o && r && a === r.values || (this.array.setData(Object(_utils_js__WEBPACK_IMPORTED_MODULE_7__["toTypedArray"])(a, i), s), o = !0), this.arrayAttached || (this.fields[this.props.registration](this.array), this.arrayAttached = !0, o = !0), o && this.dataset && this.dataset.modified();
    }
  }]), o;
}();

y.defaultProps = {
  name: "scalars",
  type: "Float32Array",
  values: [],
  numberOfComponents: 1,
  registration: "addArray"
}, y.propTypes = {
  id: prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.string,
  type: prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.string,
  name: prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.string,
  values: prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.arrayOf(prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.number), prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.object, prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.instanceOf(Float64Array), prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.instanceOf(Float32Array), prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.instanceOf(Int32Array), prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.instanceOf(Int16Array), prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.instanceOf(Int8Array), prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.instanceOf(Uint32Array), prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.instanceOf(Uint16Array), prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.instanceOf(Uint8Array)]),
  numberOfComponents: prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.number,
  registration: prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.string
};


/***/ }),

/***/ "../dist/esm/core/FieldData.js":
/*!*************************************!*\
  !*** ../dist/esm/core/FieldData.js ***!
  \*************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return n; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! prop-types */ "prop-types");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _View_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./View.js */ "../dist/esm/core/View.js");




function n(r) {
  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_View_js__WEBPACK_IMPORTED_MODULE_2__["DataSetContext"].Consumer, null, function (t) {
    return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_View_js__WEBPACK_IMPORTED_MODULE_2__["FieldsContext"].Provider, {
      value: t.getDataSet().getFieldData()
    }, r.children);
  });
}

n.defaultProps = {}, n.propTypes = {
  children: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.arrayOf(prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.node), prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.node])
};


/***/ }),

/***/ "../dist/esm/core/Geometry2DRepresentation.js":
/*!****************************************************!*\
  !*** ../dist/esm/core/Geometry2DRepresentation.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return C; });
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "../node_modules/@babel/runtime/helpers/toConsumableArray.js");
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js");
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ "../node_modules/@babel/runtime/helpers/inherits.js");
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js");
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "../node_modules/@babel/runtime/helpers/getPrototypeOf.js");
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! prop-types */ "prop-types");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _View_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./View.js */ "../dist/esm/core/View.js");
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../utils.js */ "../dist/esm/utils.js");
/* harmony import */ var _kitware_vtk_js_Rendering_Core_Actor2D_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @kitware/vtk.js/Rendering/Core/Actor2D.js */ "../node_modules/@kitware/vtk.js/Rendering/Core/Actor2D.js");
/* harmony import */ var _kitware_vtk_js_Rendering_Core_Mapper2D_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @kitware/vtk.js/Rendering/Core/Mapper2D.js */ "../node_modules/@kitware/vtk.js/Rendering/Core/Mapper2D.js");
/* harmony import */ var _kitware_vtk_js_Rendering_Core_ColorTransferFunction_ColorMaps_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @kitware/vtk.js/Rendering/Core/ColorTransferFunction/ColorMaps.js */ "../node_modules/@kitware/vtk.js/Rendering/Core/ColorTransferFunction/ColorMaps.js");
/* harmony import */ var _kitware_vtk_js_Rendering_Core_ColorTransferFunction_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @kitware/vtk.js/Rendering/Core/ColorTransferFunction.js */ "../node_modules/@kitware/vtk.js/Rendering/Core/ColorTransferFunction.js");
/* harmony import */ var _kitware_vtk_js_Rendering_Core_Coordinate_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @kitware/vtk.js/Rendering/Core/Coordinate.js */ "../node_modules/@kitware/vtk.js/Rendering/Core/Coordinate.js");
/* harmony import */ var _kitware_vtk_js_Rendering_Core_Coordinate_Constants_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @kitware/vtk.js/Rendering/Core/Coordinate/Constants.js */ "../node_modules/@kitware/vtk.js/Rendering/Core/Coordinate/Constants.js");

















function k(e) {
  var t = function () {
    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
    if (Reflect.construct.sham) return !1;
    if ("function" == typeof Proxy) return !0;

    try {
      return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})), !0;
    } catch (e) {
      return !1;
    }
  }();

  return function () {
    var r,
        o = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default()(e);

    if (t) {
      var n = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default()(this).constructor;
      r = Reflect.construct(o, arguments, n);
    } else r = o.apply(this, arguments);

    return _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4___default()(this, r);
  };
}

var C = function (i) {
  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3___default()(l, react__WEBPACK_IMPORTED_MODULE_6__["Component"]);
  var a = k(l);

  function l(e) {
    var r, o, i;
    return _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default()(this, l), (i = a.call(this, e)).validData = !1, i.currentVisibility = !0, i.actor = _kitware_vtk_js_Rendering_Core_Actor2D_js__WEBPACK_IMPORTED_MODULE_10__["default"].newInstance({
      visibility: !1,
      representationId: e.id
    }), i.lookupTable = _kitware_vtk_js_Rendering_Core_ColorTransferFunction_js__WEBPACK_IMPORTED_MODULE_13__["default"].newInstance(), i.transformCoordinate = _kitware_vtk_js_Rendering_Core_Coordinate_js__WEBPACK_IMPORTED_MODULE_14__["default"].newInstance({
      coordinateSystem: null !== (r = null === (o = i.props.transformCoordinate) || void 0 === o ? void 0 : o.coordinateSystem) && void 0 !== r ? r : _kitware_vtk_js_Rendering_Core_Coordinate_Constants_js__WEBPACK_IMPORTED_MODULE_15__["Coordinate"].DISPLAY
    }), i.mapper = _kitware_vtk_js_Rendering_Core_Mapper2D_js__WEBPACK_IMPORTED_MODULE_11__["default"].newInstance({
      lookupTable: i.lookupTable,
      useLookupTableScalarRange: !1,
      scalarVisibility: !1,
      transformCoordinate: i.transformCoordinate
    }), i.actor.setMapper(i.mapper), i.subscriptions = [], i;
  }

  return _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2___default()(l, [{
    key: "render",
    value: function () {
      var e = this;
      return react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(_View_js__WEBPACK_IMPORTED_MODULE_8__["ViewContext"].Consumer, null, function (t) {
        return e.view || (t.renderer.addActor2D(e.actor), e.view = t), react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(_View_js__WEBPACK_IMPORTED_MODULE_8__["RepresentationContext"].Provider, {
          value: e
        }, react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(_View_js__WEBPACK_IMPORTED_MODULE_8__["DownstreamContext"].Provider, {
          value: e.mapper
        }, react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement("div", {
          key: e.props.id,
          id: e.props.id
        }, e.props.children)));
      });
    }
  }, {
    key: "componentDidMount",
    value: function () {
      this.update(this.props);
    }
  }, {
    key: "componentDidUpdate",
    value: function (e, t, r) {
      this.update(this.props, e);
    }
  }, {
    key: "componentWillUnmount",
    value: function () {
      for (; this.subscriptions.length;) this.subscriptions.pop().unsubscribe();

      this.view && this.view.renderer && this.view.renderer.removeActor(this.actor), this.actor.delete(), this.actor = null, this.mapper.delete(), this.mapper = null, this.lookupTable.delete(), this.lookupTable = null, this.transformCoordinate.delete(), this.transformCoordinate = null;
    }
  }, {
    key: "update",
    value: function (t, r) {
      var o,
          i = t.actor,
          a = t.mapper,
          n = t.property,
          s = t.colorMapPreset,
          l = t.colorDataRange,
          p = t.transformCoordinate,
          c = !1;

      if (!i || r && i === r.actor || (c = this.actor.set(i) || c), !a || r && a === r.mapper || (c = this.mapper.set(a) || c), !n || r && n === r.property || (c = this.actor.getProperty().set(n) || c), s && this.lookupTable && (!r || s !== r.colorMapPreset)) {
        var u;
        c = !0;
        var d = _kitware_vtk_js_Rendering_Core_ColorTransferFunction_ColorMaps_js__WEBPACK_IMPORTED_MODULE_12__["default"].getPresetByName(s);
        this.lookupTable.applyColorMap(d), (u = this.lookupTable).setMappingRange.apply(u, _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(l)), this.lookupTable.updateRange();
      }

      !l || !this.lookupTable || r && Object(_utils_js__WEBPACK_IMPORTED_MODULE_9__["vec2Equals"])(l, r.colorDataRange) || (c = !0, (o = this.lookupTable).setMappingRange.apply(o, _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(l)), this.lookupTable.updateRange());
      !p || !this.transformCoordinate || r && p === r.transformCoordinate || (c = !0, this.transformCoordinate.set(p)), i && void 0 !== i.visibility && (this.currentVisibility = i.visibility, c = this.actor.setVisibility(this.currentVisibility && this.validData) || c), c && this.dataChanged();
    }
  }, {
    key: "dataAvailable",
    value: function () {
      this.validData || (this.validData = !0, this.actor.setVisibility(this.currentVisibility), this.dataChanged());
    }
  }, {
    key: "dataChanged",
    value: function () {
      this.view && this.view.renderView();
    }
  }]), l;
}();

C.defaultProps = {
  colorMapPreset: "erdc_rainbow_bright",
  colorDataRange: [0, 1]
}, C.propTypes = {
  id: prop_types__WEBPACK_IMPORTED_MODULE_7___default.a.string,
  actor: prop_types__WEBPACK_IMPORTED_MODULE_7___default.a.object,
  mapper: prop_types__WEBPACK_IMPORTED_MODULE_7___default.a.object,
  property: prop_types__WEBPACK_IMPORTED_MODULE_7___default.a.object,
  colorMapPreset: prop_types__WEBPACK_IMPORTED_MODULE_7___default.a.string,
  colorDataRange: prop_types__WEBPACK_IMPORTED_MODULE_7___default.a.arrayOf(prop_types__WEBPACK_IMPORTED_MODULE_7___default.a.number),
  transformCoordinate: prop_types__WEBPACK_IMPORTED_MODULE_7___default.a.object,
  children: prop_types__WEBPACK_IMPORTED_MODULE_7___default.a.oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_7___default.a.arrayOf(prop_types__WEBPACK_IMPORTED_MODULE_7___default.a.node), prop_types__WEBPACK_IMPORTED_MODULE_7___default.a.node])
};


/***/ }),

/***/ "../dist/esm/core/GeometryRepresentation.js":
/*!**************************************************!*\
  !*** ../dist/esm/core/GeometryRepresentation.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return g; });
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "../node_modules/@babel/runtime/helpers/toConsumableArray.js");
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js");
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ "../node_modules/@babel/runtime/helpers/inherits.js");
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js");
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "../node_modules/@babel/runtime/helpers/getPrototypeOf.js");
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! prop-types */ "prop-types");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _View_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./View.js */ "../dist/esm/core/View.js");
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../utils.js */ "../dist/esm/utils.js");
/* harmony import */ var _kitware_vtk_js_Rendering_Core_Actor_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @kitware/vtk.js/Rendering/Core/Actor.js */ "../node_modules/@kitware/vtk.js/Rendering/Core/Actor.js");
/* harmony import */ var _kitware_vtk_js_Rendering_Core_Mapper_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @kitware/vtk.js/Rendering/Core/Mapper.js */ "../node_modules/@kitware/vtk.js/Rendering/Core/Mapper.js");
/* harmony import */ var _kitware_vtk_js_Rendering_Core_ColorTransferFunction_ColorMaps_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @kitware/vtk.js/Rendering/Core/ColorTransferFunction/ColorMaps.js */ "../node_modules/@kitware/vtk.js/Rendering/Core/ColorTransferFunction/ColorMaps.js");
/* harmony import */ var _kitware_vtk_js_Rendering_Core_ColorTransferFunction_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @kitware/vtk.js/Rendering/Core/ColorTransferFunction.js */ "../node_modules/@kitware/vtk.js/Rendering/Core/ColorTransferFunction.js");
/* harmony import */ var _kitware_vtk_js_Rendering_Core_CubeAxesActor_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @kitware/vtk.js/Rendering/Core/CubeAxesActor.js */ "../node_modules/@kitware/vtk.js/Rendering/Core/CubeAxesActor.js");
/* harmony import */ var _kitware_vtk_js_Rendering_Core_ScalarBarActor_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @kitware/vtk.js/Rendering/Core/ScalarBarActor.js */ "../node_modules/@kitware/vtk.js/Rendering/Core/ScalarBarActor.js");

















function A(e) {
  var t = function () {
    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
    if (Reflect.construct.sham) return !1;
    if ("function" == typeof Proxy) return !0;

    try {
      return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})), !0;
    } catch (e) {
      return !1;
    }
  }();

  return function () {
    var r,
        i = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default()(e);

    if (t) {
      var o = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default()(this).constructor;
      r = Reflect.construct(i, arguments, o);
    } else r = i.apply(this, arguments);

    return _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4___default()(this, r);
  };
}

var g = function (s) {
  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3___default()(l, react__WEBPACK_IMPORTED_MODULE_6__["Component"]);
  var a = A(l);

  function l(e) {
    var r;
    return _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default()(this, l), (r = a.call(this, e)).validData = !1, r.currentVisibility = !0, r.actor = _kitware_vtk_js_Rendering_Core_Actor_js__WEBPACK_IMPORTED_MODULE_10__["default"].newInstance({
      visibility: !1,
      representationId: e.id
    }), r.lookupTable = _kitware_vtk_js_Rendering_Core_ColorTransferFunction_js__WEBPACK_IMPORTED_MODULE_13__["default"].newInstance(), r.mapper = _kitware_vtk_js_Rendering_Core_Mapper_js__WEBPACK_IMPORTED_MODULE_11__["default"].newInstance({
      lookupTable: r.lookupTable,
      useLookupTableScalarRange: !0
    }), r.actor.setMapper(r.mapper), r.scalarBar = _kitware_vtk_js_Rendering_Core_ScalarBarActor_js__WEBPACK_IMPORTED_MODULE_15__["default"].newInstance(), r.scalarBar.setScalarsToColors(r.lookupTable), r.scalarBar.setVisibility(!1), r.subscriptions = [], e.showCubeAxes && r.initCubeAxes(), r;
  }

  return _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2___default()(l, [{
    key: "initCubeAxes",
    value: function () {
      var e = this;
      this.cubeAxes = _kitware_vtk_js_Rendering_Core_CubeAxesActor_js__WEBPACK_IMPORTED_MODULE_14__["default"].newInstance({
        visibility: !1,
        dataBounds: [-1, 1, -1, 1, -1, 1]
      }), Array.from(this.cubeAxes.getActors()).forEach(function (e) {
        return (0, e.setVisibility)(!1);
      });
      this.subscriptions.push(this.mapper.onModified(function t() {
        if (e.mapper.getInputData()) {
          1 === e.subscriptions.length && e.subscriptions.push(e.mapper.getInputData().onModified(t));
          var r = e.mapper.getInputData().getBounds();
          r[0] < r[1] && (e.cubeAxes && e.cubeAxes.setDataBounds(r), e.view && e.view.renderView());
        }
      }));
    }
  }, {
    key: "render",
    value: function () {
      var e = this;
      return react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(_View_js__WEBPACK_IMPORTED_MODULE_8__["ViewContext"].Consumer, null, function (t) {
        return e.view || (e.cubeAxes && (e.cubeAxes.setCamera(t.renderer.getActiveCamera()), t.renderer.addActor(e.cubeAxes)), t.renderer.addActor(e.scalarBar), t.renderer.addActor(e.actor), e.view = t), react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(_View_js__WEBPACK_IMPORTED_MODULE_8__["RepresentationContext"].Provider, {
          value: e
        }, react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(_View_js__WEBPACK_IMPORTED_MODULE_8__["DownstreamContext"].Provider, {
          value: e.mapper
        }, react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement("div", {
          key: e.props.id,
          id: e.props.id
        }, e.props.children)));
      });
    }
  }, {
    key: "componentDidMount",
    value: function () {
      this.update(this.props);
    }
  }, {
    key: "componentDidUpdate",
    value: function (e, t, r) {
      this.update(this.props, e);
    }
  }, {
    key: "componentWillUnmount",
    value: function () {
      for (; this.subscriptions.length;) this.subscriptions.pop().unsubscribe();

      this.view && this.view.renderer && (this.view.renderer.removeActor(this.scalarBar), this.view.renderer.removeActor(this.cubeAxes), this.view.renderer.removeActor(this.actor)), this.scalarBar.delete(), this.scalarBar = null, this.cubeAxes && (this.cubeAxes.delete(), this.cubeAxes = null), this.actor.delete(), this.actor = null, this.mapper.delete(), this.mapper = null, this.lookupTable.delete(), this.lookupTable = null;
    }
  }, {
    key: "update",
    value: function (t, r) {
      var i,
          s = this,
          a = t.cubeAxesStyle,
          o = t.showCubeAxes,
          n = t.actor,
          l = t.mapper,
          c = t.property,
          u = t.colorMapPreset,
          p = t.colorDataRange,
          b = !1;

      if (!n || r && n === r.actor || (b = this.actor.set(n) || b), !l || r && l === r.mapper || (b = this.mapper.set(l) || b), !c || r && c === r.property || (b = this.actor.getProperty().set(c) || b), u && (!r || u !== r.colorMapPreset)) {
        var d;
        b = !0;
        var f = _kitware_vtk_js_Rendering_Core_ColorTransferFunction_ColorMaps_js__WEBPACK_IMPORTED_MODULE_12__["default"].getPresetByName(u);
        this.lookupTable.applyColorMap(f), (d = this.lookupTable).setMappingRange.apply(d, _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(p)), this.lookupTable.updateRange();
      }

      !p || r && Object(_utils_js__WEBPACK_IMPORTED_MODULE_9__["vec2Equals"])(p, r.colorDataRange) || (b = !0, (i = this.lookupTable).setMappingRange.apply(i, _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(p)), this.lookupTable.updateRange());
      o && null == this.cubeAxes && (b = !0, this.initCubeAxes(), !a || r && a === r.cubeAxesStyle || this.cubeAxes.set(a)), null != this.cubeAxes && o !== this.cubeAxes.getVisibility() && (b = !0, this.cubeAxes.setVisibility(o && this.validData), Array.from(this.cubeAxes.getActors()).forEach(function (e) {
        return (0, e.setVisibility)(o && s.validData);
      })), b = this.scalarBar.setVisibility(t.showScalarBar && this.validData) || b, b = this.scalarBar.setAxisLabel(t.scalarBarTitle) || b, b = this.scalarBar.set(t.scalarBarStyle || {}) || b, n && void 0 !== n.visibility && (this.currentVisibility = n.visibility, b = this.actor.setVisibility(this.currentVisibility && this.validData) || b), b && this.dataChanged();
    }
  }, {
    key: "dataAvailable",
    value: function () {
      var e = this;
      this.validData || (this.validData = !0, this.actor.setVisibility(this.currentVisibility), this.scalarBar.setVisibility(this.props.showScalarBar), this.cubeAxes && (this.cubeAxes.setVisibility(this.props.showCubeAxes), Array.from(this.cubeAxes.getActors()).forEach(function (t) {
        return (0, t.setVisibility)(e.props.showCubeAxes);
      })), this.dataChanged());
    }
  }, {
    key: "dataChanged",
    value: function () {
      this.view && this.view.renderView();
    }
  }]), l;
}();

g.defaultProps = {
  colorMapPreset: "erdc_rainbow_bright",
  colorDataRange: [0, 1],
  showCubeAxes: !1,
  showScalarBar: !1,
  scalarBarTitle: ""
}, g.propTypes = {
  id: prop_types__WEBPACK_IMPORTED_MODULE_7___default.a.string,
  actor: prop_types__WEBPACK_IMPORTED_MODULE_7___default.a.object,
  mapper: prop_types__WEBPACK_IMPORTED_MODULE_7___default.a.object,
  property: prop_types__WEBPACK_IMPORTED_MODULE_7___default.a.object,
  colorMapPreset: prop_types__WEBPACK_IMPORTED_MODULE_7___default.a.string,
  colorDataRange: prop_types__WEBPACK_IMPORTED_MODULE_7___default.a.arrayOf(prop_types__WEBPACK_IMPORTED_MODULE_7___default.a.number),
  showCubeAxes: prop_types__WEBPACK_IMPORTED_MODULE_7___default.a.bool,
  cubeAxesStyle: prop_types__WEBPACK_IMPORTED_MODULE_7___default.a.object,
  showScalarBar: prop_types__WEBPACK_IMPORTED_MODULE_7___default.a.bool,
  scalarBarTitle: prop_types__WEBPACK_IMPORTED_MODULE_7___default.a.string,
  scalarBarStyle: prop_types__WEBPACK_IMPORTED_MODULE_7___default.a.object,
  children: prop_types__WEBPACK_IMPORTED_MODULE_7___default.a.oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_7___default.a.arrayOf(prop_types__WEBPACK_IMPORTED_MODULE_7___default.a.node), prop_types__WEBPACK_IMPORTED_MODULE_7___default.a.node])
};


/***/ }),

/***/ "../dist/esm/core/GlyphRepresentation.js":
/*!***********************************************!*\
  !*** ../dist/esm/core/GlyphRepresentation.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return y; });
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "../node_modules/@babel/runtime/helpers/toConsumableArray.js");
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js");
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ "../node_modules/@babel/runtime/helpers/inherits.js");
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js");
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "../node_modules/@babel/runtime/helpers/getPrototypeOf.js");
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! prop-types */ "prop-types");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _View_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./View.js */ "../dist/esm/core/View.js");
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../utils.js */ "../dist/esm/utils.js");
/* harmony import */ var _kitware_vtk_js_Rendering_Core_Actor_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @kitware/vtk.js/Rendering/Core/Actor.js */ "../node_modules/@kitware/vtk.js/Rendering/Core/Actor.js");
/* harmony import */ var _kitware_vtk_js_Rendering_Core_Glyph3DMapper_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @kitware/vtk.js/Rendering/Core/Glyph3DMapper.js */ "../node_modules/@kitware/vtk.js/Rendering/Core/Glyph3DMapper.js");
/* harmony import */ var _kitware_vtk_js_Rendering_Core_ColorTransferFunction_ColorMaps_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @kitware/vtk.js/Rendering/Core/ColorTransferFunction/ColorMaps.js */ "../node_modules/@kitware/vtk.js/Rendering/Core/ColorTransferFunction/ColorMaps.js");
/* harmony import */ var _kitware_vtk_js_Rendering_Core_ColorTransferFunction_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @kitware/vtk.js/Rendering/Core/ColorTransferFunction.js */ "../node_modules/@kitware/vtk.js/Rendering/Core/ColorTransferFunction.js");















function b(e) {
  var t = function () {
    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
    if (Reflect.construct.sham) return !1;
    if ("function" == typeof Proxy) return !0;

    try {
      return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})), !0;
    } catch (e) {
      return !1;
    }
  }();

  return function () {
    var r,
        o = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default()(e);

    if (t) {
      var n = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default()(this).constructor;
      r = Reflect.construct(o, arguments, n);
    } else r = o.apply(this, arguments);

    return _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4___default()(this, r);
  };
}

var y = function (i) {
  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3___default()(s, react__WEBPACK_IMPORTED_MODULE_6__["Component"]);
  var a = b(s);

  function s(e) {
    var r;
    return _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default()(this, s), (r = a.call(this, e)).validData = !1, r.currentVisibility = !0, r.actor = _kitware_vtk_js_Rendering_Core_Actor_js__WEBPACK_IMPORTED_MODULE_10__["default"].newInstance({
      visibility: !1
    }), r.lookupTable = _kitware_vtk_js_Rendering_Core_ColorTransferFunction_js__WEBPACK_IMPORTED_MODULE_13__["default"].newInstance(), r.mapper = _kitware_vtk_js_Rendering_Core_Glyph3DMapper_js__WEBPACK_IMPORTED_MODULE_11__["default"].newInstance({
      lookupTable: r.lookupTable,
      useLookupTableScalarRange: !0
    }), r.actor.setMapper(r.mapper), r;
  }

  return _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2___default()(s, [{
    key: "render",
    value: function () {
      var e = this;
      return react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(_View_js__WEBPACK_IMPORTED_MODULE_8__["ViewContext"].Consumer, null, function (t) {
        return e.view || (t.renderer.addActor(e.actor), e.view = t), react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(_View_js__WEBPACK_IMPORTED_MODULE_8__["RepresentationContext"].Provider, {
          value: e
        }, react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(_View_js__WEBPACK_IMPORTED_MODULE_8__["DownstreamContext"].Provider, {
          value: e.mapper
        }, react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement("div", {
          key: e.props.id,
          id: e.props.id
        }, e.props.children)));
      });
    }
  }, {
    key: "componentDidMount",
    value: function () {
      this.update(this.props);
    }
  }, {
    key: "componentDidUpdate",
    value: function (e, t, r) {
      this.update(this.props, e);
    }
  }, {
    key: "componentWillUnmount",
    value: function () {
      this.view && this.view.renderer && this.view.renderer.removeActor(this.actor), this.actor.delete(), this.actor = null, this.mapper.delete(), this.mapper = null, this.lookupTable.delete(), this.lookupTable = null;
    }
  }, {
    key: "update",
    value: function (t, r) {
      var o,
          i = t.actor,
          a = t.mapper,
          n = t.property,
          l = t.colorMapPreset,
          s = t.colorDataRange,
          p = !1;

      if (!i || r && i === r.actor || (p = this.actor.set(i) || p), !a || r && a === r.mapper || (p = this.mapper.set(a) || p), !n || r && n === r.property || (p = this.actor.getProperty().set(n) || p), l && (!r || l !== r.colorMapPreset)) {
        var c;
        p = !0;
        var u = _kitware_vtk_js_Rendering_Core_ColorTransferFunction_ColorMaps_js__WEBPACK_IMPORTED_MODULE_12__["default"].getPresetByName(l);
        this.lookupTable.applyColorMap(u), (c = this.lookupTable).setMappingRange.apply(c, _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(s)), this.lookupTable.updateRange();
      }

      !s || r && Object(_utils_js__WEBPACK_IMPORTED_MODULE_9__["smartEqualsShallow"])(s, r.colorDataRange) || (p = !0, (o = this.lookupTable).setMappingRange.apply(o, _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(s)), this.lookupTable.updateRange());
      i && void 0 !== i.visibility && (this.currentVisibility = i.visibility, p = this.actor.setVisibility(this.currentVisibility && this.validData) || p), p && this.dataChanged();
    }
  }, {
    key: "dataAvailable",
    value: function () {
      this.validData || (this.validData = !0, this.actor.setVisibility(this.currentVisibility), this.dataChanged());
    }
  }, {
    key: "dataChanged",
    value: function () {
      this.view && this.view.renderView();
    }
  }]), s;
}();

y.defaultProps = {
  colorMapPreset: "erdc_rainbow_bright",
  colorDataRange: [0, 1]
}, y.propTypes = {
  id: prop_types__WEBPACK_IMPORTED_MODULE_7___default.a.string,
  actor: prop_types__WEBPACK_IMPORTED_MODULE_7___default.a.object,
  mapper: prop_types__WEBPACK_IMPORTED_MODULE_7___default.a.object,
  property: prop_types__WEBPACK_IMPORTED_MODULE_7___default.a.object,
  colorMapPreset: prop_types__WEBPACK_IMPORTED_MODULE_7___default.a.string,
  colorDataRange: prop_types__WEBPACK_IMPORTED_MODULE_7___default.a.arrayOf(prop_types__WEBPACK_IMPORTED_MODULE_7___default.a.number),
  children: prop_types__WEBPACK_IMPORTED_MODULE_7___default.a.oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_7___default.a.arrayOf(prop_types__WEBPACK_IMPORTED_MODULE_7___default.a.node), prop_types__WEBPACK_IMPORTED_MODULE_7___default.a.node])
};


/***/ }),

/***/ "../dist/esm/core/ImageData.js":
/*!*************************************!*\
  !*** ../dist/esm/core/ImageData.js ***!
  \*************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return f; });
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js");
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ "../node_modules/@babel/runtime/helpers/inherits.js");
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js");
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "../node_modules/@babel/runtime/helpers/getPrototypeOf.js");
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! prop-types */ "prop-types");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _View_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./View.js */ "../dist/esm/core/View.js");
/* harmony import */ var _kitware_vtk_js_Common_DataModel_ImageData_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @kitware/vtk.js/Common/DataModel/ImageData.js */ "../node_modules/@kitware/vtk.js/Common/DataModel/ImageData.js");










function l(e) {
  var t = function () {
    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
    if (Reflect.construct.sham) return !1;
    if ("function" == typeof Proxy) return !0;

    try {
      return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})), !0;
    } catch (e) {
      return !1;
    }
  }();

  return function () {
    var r,
        a = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default()(e);

    if (t) {
      var o = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default()(this).constructor;
      r = Reflect.construct(a, arguments, o);
    } else r = a.apply(this, arguments);

    return _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3___default()(this, r);
  };
}

var f = function (n) {
  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2___default()(s, react__WEBPACK_IMPORTED_MODULE_5__["Component"]);
  var i = l(s);

  function s(t) {
    var r;
    return _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, s), (r = i.call(this, t)).imageData = _kitware_vtk_js_Common_DataModel_ImageData_js__WEBPACK_IMPORTED_MODULE_8__["default"].newInstance(), r;
  }

  return _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(s, [{
    key: "render",
    value: function () {
      var e = this;
      return react__WEBPACK_IMPORTED_MODULE_5___default.a.createElement(_View_js__WEBPACK_IMPORTED_MODULE_7__["RepresentationContext"].Consumer, null, function (t) {
        return react__WEBPACK_IMPORTED_MODULE_5___default.a.createElement(_View_js__WEBPACK_IMPORTED_MODULE_7__["DownstreamContext"].Consumer, null, function (r) {
          return e.representation = t, e.downstream || (e.downstream = r), react__WEBPACK_IMPORTED_MODULE_5___default.a.createElement(_View_js__WEBPACK_IMPORTED_MODULE_7__["DataSetContext"].Provider, {
            value: e
          }, react__WEBPACK_IMPORTED_MODULE_5___default.a.createElement("div", {
            key: e.props.id,
            id: e.props.id
          }, e.props.children));
        });
      });
    }
  }, {
    key: "componentDidMount",
    value: function () {
      this.update(this.props);
    }
  }, {
    key: "componentDidUpdate",
    value: function (e, t, r) {
      this.update(this.props, e);
    }
  }, {
    key: "componentWillUnmount",
    value: function () {
      this.imageData.delete(), this.imageData = null;
    }
  }, {
    key: "update",
    value: function (e, t) {
      var r = e.dimensions,
          n = e.spacing,
          i = e.origin,
          a = e.direction;
      this.imageData.set({
        dimensions: r,
        spacing: n,
        origin: i,
        direction: a
      });
    }
  }, {
    key: "getDataSet",
    value: function () {
      return this.imageData;
    }
  }, {
    key: "modified",
    value: function () {
      this.imageData.modified(), this.representation && this.imageData.getPointData().getScalars() && (this.downstream.setInputData(this.imageData, this.props.port), this.representation.dataAvailable(), this.representation.dataChanged());
    }
  }]), s;
}();

f.defaultProps = {
  port: 0,
  dimensions: [1, 1, 1],
  spacing: [1, 1, 1],
  origin: [0, 0, 0],
  direction: [1, 0, 0, 0, 1, 0, 0, 0, 1]
}, f.propTypes = {
  id: prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.string,
  port: prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.number,
  dimensions: prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.arrayOf(prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.number),
  spacing: prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.arrayOf(prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.number),
  origin: prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.arrayOf(prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.number),
  direction: prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.arrayOf(prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.number),
  children: prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.arrayOf(prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.node), prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.node])
};


/***/ }),

/***/ "../dist/esm/core/PointData.js":
/*!*************************************!*\
  !*** ../dist/esm/core/PointData.js ***!
  \*************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return n; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! prop-types */ "prop-types");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _View_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./View.js */ "../dist/esm/core/View.js");




function n(r) {
  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_View_js__WEBPACK_IMPORTED_MODULE_2__["DataSetContext"].Consumer, null, function (t) {
    return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_View_js__WEBPACK_IMPORTED_MODULE_2__["FieldsContext"].Provider, {
      value: t.getDataSet().getPointData()
    }, r.children);
  });
}

n.defaultProps = {}, n.propTypes = {
  children: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.arrayOf(prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.node), prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.node])
};


/***/ }),

/***/ "../dist/esm/core/PolyData.js":
/*!************************************!*\
  !*** ../dist/esm/core/PolyData.js ***!
  \************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return m; });
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js");
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ "../node_modules/@babel/runtime/helpers/inherits.js");
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js");
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "../node_modules/@babel/runtime/helpers/getPrototypeOf.js");
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! prop-types */ "prop-types");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../utils.js */ "../dist/esm/utils.js");
/* harmony import */ var _View_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./View.js */ "../dist/esm/core/View.js");
/* harmony import */ var _kitware_vtk_js_Common_DataModel_PolyData_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @kitware/vtk.js/Common/DataModel/PolyData.js */ "../node_modules/@kitware/vtk.js/Common/DataModel/PolyData.js");











function d(t) {
  var e = function () {
    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
    if (Reflect.construct.sham) return !1;
    if ("function" == typeof Proxy) return !0;

    try {
      return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})), !0;
    } catch (t) {
      return !1;
    }
  }();

  return function () {
    var r,
        i = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default()(t);

    if (e) {
      var o = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default()(this).constructor;
      r = Reflect.construct(i, arguments, o);
    } else r = i.apply(this, arguments);

    return _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3___default()(this, r);
  };
}

var m = function (n) {
  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2___default()(s, react__WEBPACK_IMPORTED_MODULE_5__["Component"]);
  var a = d(s);

  function s(e) {
    var r;
    return _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, s), (r = a.call(this, e)).polydata = _kitware_vtk_js_Common_DataModel_PolyData_js__WEBPACK_IMPORTED_MODULE_9__["default"].newInstance(), r;
  }

  return _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(s, [{
    key: "render",
    value: function () {
      var t = this;
      return react__WEBPACK_IMPORTED_MODULE_5___default.a.createElement(_View_js__WEBPACK_IMPORTED_MODULE_8__["RepresentationContext"].Consumer, null, function (e) {
        return react__WEBPACK_IMPORTED_MODULE_5___default.a.createElement(_View_js__WEBPACK_IMPORTED_MODULE_8__["DownstreamContext"].Consumer, null, function (r) {
          return t.representation = e, t.downstream || (t.downstream = r), react__WEBPACK_IMPORTED_MODULE_5___default.a.createElement(_View_js__WEBPACK_IMPORTED_MODULE_8__["DataSetContext"].Provider, {
            value: t
          }, react__WEBPACK_IMPORTED_MODULE_5___default.a.createElement("div", {
            key: t.props.id,
            id: t.props.id
          }, t.props.children));
        });
      });
    }
  }, {
    key: "componentDidMount",
    value: function () {
      this.update(this.props);
    }
  }, {
    key: "componentDidUpdate",
    value: function (t, e, r) {
      this.update(this.props, t);
    }
  }, {
    key: "componentWillUnmount",
    value: function () {
      this.polydata.delete(), this.polydata = null;
    }
  }, {
    key: "update",
    value: function (t, e) {
      var r,
          n = t.connectivity,
          a = t.points,
          i = t.verts,
          o = t.lines,
          s = t.polys,
          c = t.strips,
          f = !1,
          y = Uint32Array;

      if (a && (!e || !Object(_utils_js__WEBPACK_IMPORTED_MODULE_7__["smartEqualsShallow"])(a, e.points))) {
        var u = Object(_utils_js__WEBPACK_IMPORTED_MODULE_7__["toTypedArray"])(a, Float64Array);
        this.polydata.getPoints().setData(u, 3), f = !0, y = u.length > 196608 ? Uint32Array : Uint16Array;
      }

      if (!i || e && Object(_utils_js__WEBPACK_IMPORTED_MODULE_7__["smartEqualsShallow"])(i, e.verts) || (this.polydata.getVerts().setData(Object(_utils_js__WEBPACK_IMPORTED_MODULE_7__["toTypedArray"])(i, y)), f = !0), !o || e && Object(_utils_js__WEBPACK_IMPORTED_MODULE_7__["smartEqualsShallow"])(o, e.lines) || (this.polydata.getLines().setData(Object(_utils_js__WEBPACK_IMPORTED_MODULE_7__["toTypedArray"])(o, y)), f = !0), !s || e && Object(_utils_js__WEBPACK_IMPORTED_MODULE_7__["smartEqualsShallow"])(s, e.polys) || (this.polydata.getPolys().setData(Object(_utils_js__WEBPACK_IMPORTED_MODULE_7__["toTypedArray"])(s, y)), f = !0), !c || e && Object(_utils_js__WEBPACK_IMPORTED_MODULE_7__["smartEqualsShallow"])(c, e.strips) || (this.polydata.getStrips().setData(Object(_utils_js__WEBPACK_IMPORTED_MODULE_7__["toTypedArray"])(c, y)), f = !0), n && (!e || (null == a ? void 0 : a.length) !== (null === (r = e.points) || void 0 === r ? void 0 : r.length) || n !== e.connectivity)) {
        var d = a.length / 3;

        switch (n) {
          case "points":
            var m = new Uint32Array(d + 1);
            m[0] = d;

            for (var h = 0; h < d; h++) m[h + 1] = h;

            this.polydata.getVerts().setData(m), f = !0;
            break;

          case "triangles":
            for (var v = new Uint32Array(d + d / 3), O = 0, b = 0; b < d; b += 3) v[O++] = 3, v[O++] = b + 0, v[O++] = b + 1, v[O++] = b + 2;

            this.polydata.getPolys().setData(v), f = !0;
            break;

          case "strips":
            var A = new Uint32Array(d + 1);
            A[0] = d;

            for (var g = 0; g < d; g++) A[g + 1] = g;

            this.polydata.getStrips().setData(A), f = !0;
        }
      }

      f && this.modified();
    }
  }, {
    key: "getDataSet",
    value: function () {
      return this.polydata;
    }
  }, {
    key: "modified",
    value: function () {
      this.polydata.modified(), this.downstream.setInputData(this.polydata, this.props.port), this.representation && this.polydata.getPoints().getData().length && (this.representation.dataAvailable(), this.representation.dataChanged());
    }
  }]), s;
}();

m.defaultProps = {
  port: 0,
  points: [],
  connectivity: "manual"
}, m.propTypes = {
  id: prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.string,
  port: prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.number,
  points: prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.arrayOf(prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.number), prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.object, prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.instanceOf(Float64Array), prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.instanceOf(Float32Array)]),
  verts: prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.arrayOf(prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.number), prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.object, prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.instanceOf(Uint8Array), prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.instanceOf(Uint16Array), prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.instanceOf(Uint32Array)]),
  lines: prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.arrayOf(prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.number), prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.object, prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.instanceOf(Uint8Array), prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.instanceOf(Uint16Array), prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.instanceOf(Uint32Array)]),
  polys: prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.arrayOf(prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.number), prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.object, prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.instanceOf(Uint8Array), prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.instanceOf(Uint16Array), prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.instanceOf(Uint32Array)]),
  strips: prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.arrayOf(prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.number), prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.object, prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.instanceOf(Uint8Array), prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.instanceOf(Uint16Array), prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.instanceOf(Uint32Array)]),
  connectivity: prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.string,
  children: prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.arrayOf(prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.node), prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.node])
};


/***/ }),

/***/ "../dist/esm/core/Reader.js":
/*!**********************************!*\
  !*** ../dist/esm/core/Reader.js ***!
  \**********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return m; });
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js");
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ "../node_modules/@babel/runtime/helpers/inherits.js");
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js");
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "../node_modules/@babel/runtime/helpers/getPrototypeOf.js");
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! prop-types */ "prop-types");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _View_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./View.js */ "../dist/esm/core/View.js");
/* harmony import */ var _kitware_vtk_js_vtk_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @kitware/vtk.js/vtk.js */ "../node_modules/@kitware/vtk.js/vtk.js");
/* harmony import */ var _kitware_vtk_js_Common_Core_Base64_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @kitware/vtk.js/Common/Core/Base64.js */ "../node_modules/@kitware/vtk.js/Common/Core/Base64.js");











function f(e) {
  var r = function () {
    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
    if (Reflect.construct.sham) return !1;
    if ("function" == typeof Proxy) return !0;

    try {
      return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})), !0;
    } catch (e) {
      return !1;
    }
  }();

  return function () {
    var t,
        s = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default()(e);

    if (r) {
      var o = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default()(this).constructor;
      t = Reflect.construct(s, arguments, o);
    } else t = s.apply(this, arguments);

    return _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3___default()(this, t);
  };
}

var m = function (n) {
  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2___default()(i, react__WEBPACK_IMPORTED_MODULE_5__["Component"]);
  var a = f(i);

  function i(r) {
    var t;
    return _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, i), (t = a.call(this, r)).reader = null, t;
  }

  return _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(i, [{
    key: "render",
    value: function () {
      var e = this;
      return react__WEBPACK_IMPORTED_MODULE_5___default.a.createElement(_View_js__WEBPACK_IMPORTED_MODULE_7__["ViewContext"].Consumer, null, function (r) {
        return react__WEBPACK_IMPORTED_MODULE_5___default.a.createElement(_View_js__WEBPACK_IMPORTED_MODULE_7__["RepresentationContext"].Consumer, null, function (t) {
          return e.representation = t, react__WEBPACK_IMPORTED_MODULE_5___default.a.createElement(_View_js__WEBPACK_IMPORTED_MODULE_7__["DownstreamContext"].Consumer, null, function (t) {
            return e.reader || (e.reader = e.createReader(e.props)), e.downstream || (t.setInputConnection(e.reader.getOutputPort(), e.props.port), e.downstream = t), e.view = r, react__WEBPACK_IMPORTED_MODULE_5___default.a.createElement(_View_js__WEBPACK_IMPORTED_MODULE_7__["DownstreamContext"].Provider, {
              value: e.reader
            }, react__WEBPACK_IMPORTED_MODULE_5___default.a.createElement("div", {
              key: e.props.id,
              id: e.props.id
            }, e.props.children));
          });
        });
      });
    }
  }, {
    key: "componentDidMount",
    value: function () {
      this.update(this.props);
    }
  }, {
    key: "componentDidUpdate",
    value: function (e, r, t) {
      this.update(this.props, e);
    }
  }, {
    key: "componentWillUnmount",
    value: function () {
      this.reader.delete(), this.reader = null;
    }
  }, {
    key: "createReader",
    value: function (e) {
      var r = e.vtkClass,
          t = e.options;
      return Object(_kitware_vtk_js_vtk_js__WEBPACK_IMPORTED_MODULE_8__["default"])({
        vtkClass: r,
        progressCallback: t.progressCallback
      });
    }
  }, {
    key: "update",
    value: function (e, r) {
      var t = this,
          n = e.vtkClass,
          a = e.url,
          s = e.parseAsText,
          o = e.parseAsArrayBuffer,
          i = e.options;
      !n || r && n === r.vtkClass || (this.reader = this.createReader(e), this.downstream.setInputConnection(this.reader.getOutputPort(), this.props.port)), !a || r && a === r.url || this.reader.setUrl(a, i).then(function () {
        t.reader && (t.representation && t.representation.dataAvailable(), t.view && (t.props.resetCameraOnUpdate && t.view.resetCamera(), t.props.renderOnUpdate && t.view.renderView()));
      }), !s || r && s === r.parseAsText || (this.reader.parseAsText(s), this.representation && this.representation.dataAvailable()), !o || r && o === r.parseAsArrayBuffer || (this.reader.parseAsArrayBuffer(_kitware_vtk_js_Common_Core_Base64_js__WEBPACK_IMPORTED_MODULE_9__["default"].toArrayBuffer(o)), this.representation && this.representation.dataAvailable()), this.view && (this.props.resetCameraOnUpdate && this.view.resetCamera(), this.props.renderOnUpdate && this.view.renderView());
    }
  }]), i;
}();

m.defaultProps = {
  port: 0,
  vtkClass: "",
  renderOnUpdate: !0,
  resetCameraOnUpdate: !0,
  options: {
    binary: !0
  }
}, m.propTypes = {
  id: prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.string,
  port: prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.number,
  vtkClass: prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.string,
  url: prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.string,
  parseAsText: prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.string,
  parseAsArrayBuffer: prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.string,
  renderOnUpdate: prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.bool,
  resetCameraOnUpdate: prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.bool,
  options: prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.object,
  children: prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.arrayOf(prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.node), prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.node])
};


/***/ }),

/***/ "../dist/esm/core/ShareDataSet.js":
/*!****************************************!*\
  !*** ../dist/esm/core/ShareDataSet.js ***!
  \****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return d; });
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js");
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ "../node_modules/@babel/runtime/helpers/inherits.js");
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js");
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "../node_modules/@babel/runtime/helpers/getPrototypeOf.js");
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! prop-types */ "prop-types");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _kitware_vtk_js_macros_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @kitware/vtk.js/macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _View_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./View.js */ "../dist/esm/core/View.js");










function p(t) {
  var e = function () {
    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
    if (Reflect.construct.sham) return !1;
    if ("function" == typeof Proxy) return !0;

    try {
      return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})), !0;
    } catch (t) {
      return !1;
    }
  }();

  return function () {
    var r,
        a = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default()(t);

    if (e) {
      var o = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default()(this).constructor;
      r = Reflect.construct(a, arguments, o);
    } else r = a.apply(this, arguments);

    return _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3___default()(this, r);
  };
}

function h(t, e) {
  e.classHierarchy.push("vtkTrivialProducer"), t.requestData = function (t, e) {
    e.length = t.length;

    for (var r = 0; r < t.length; r++) e[r] = t[r];
  };
}

var f = _kitware_vtk_js_macros_js__WEBPACK_IMPORTED_MODULE_7__["default"].newInstance(function (t, e) {
  var r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
  Object.assign(e, r), _kitware_vtk_js_macros_js__WEBPACK_IMPORTED_MODULE_7__["default"].obj(t, e), _kitware_vtk_js_macros_js__WEBPACK_IMPORTED_MODULE_7__["default"].algo(t, e, 1, 1), _kitware_vtk_js_macros_js__WEBPACK_IMPORTED_MODULE_7__["default"].event(t, e, "DataAvailable"), h(t, e);
}, "vtkTrivialProducer"),
    v = {},
    d = function (n) {
  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2___default()(s, react__WEBPACK_IMPORTED_MODULE_5__["Component"]);
  var i = p(s);

  function s() {
    return _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, s), i.apply(this, arguments);
  }

  return _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(s, [{
    key: "getTrivialProducer",
    value: function () {
      var t = v[this.props.name];
      return t || (t = f(), v[this.props.name] = t), t;
    }
  }, {
    key: "componentDidMount",
    value: function () {
      var t = this.getTrivialProducer().getOutputData();
      t && !t.isDeleted() && this.dataAvailable();
    }
  }, {
    key: "componentWillUnmount",
    value: function () {
      this.subscription && (this.subscription.unsubscribe(), this.subscription = null);
    }
  }, {
    key: "render",
    value: function () {
      var t = this;
      return this.update(), react__WEBPACK_IMPORTED_MODULE_5___default.a.createElement(_View_js__WEBPACK_IMPORTED_MODULE_8__["RepresentationContext"].Consumer, null, function (e) {
        return react__WEBPACK_IMPORTED_MODULE_5___default.a.createElement(_View_js__WEBPACK_IMPORTED_MODULE_8__["DownstreamContext"].Consumer, null, function (r) {
          return t.representation = e, t.downstream || (t.downstream = r), react__WEBPACK_IMPORTED_MODULE_5___default.a.createElement(_View_js__WEBPACK_IMPORTED_MODULE_8__["RepresentationContext"].Provider, {
            value: t
          }, react__WEBPACK_IMPORTED_MODULE_5___default.a.createElement(_View_js__WEBPACK_IMPORTED_MODULE_8__["DownstreamContext"].Provider, {
            value: t.getTrivialProducer()
          }, react__WEBPACK_IMPORTED_MODULE_5___default.a.createElement("div", {
            key: t.props.id,
            id: t.props.id
          }, t.props.children)));
        });
      });
    }
  }, {
    key: "update",
    value: function () {
      var t = this;
      this.subscription && (this.subscription.unsubscribe(), this.subscription = null), this.subscription = this.getTrivialProducer().onDataAvailable(function () {
        t.dataAvailable();
      });
    }
  }, {
    key: "dataAvailable",
    value: function () {
      this.downstream && this.downstream.setInputConnection(this.getTrivialProducer().getOutputPort(), this.props.port), this.validData || (this.validData = !0, this.getTrivialProducer().invokeDataAvailable()), this.representation && this.representation.dataAvailable();
    }
  }, {
    key: "dataChanged",
    value: function () {
      this.representation && this.representation.dataChanged();
    }
  }]), s;
}();

d.defaultProps = {
  port: 0,
  name: "shared"
}, d.propTypes = {
  id: prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.string,
  port: prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.number,
  name: prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.string,
  children: prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.arrayOf(prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.node), prop_types__WEBPACK_IMPORTED_MODULE_6___default.a.node])
};


/***/ }),

/***/ "../dist/esm/core/SliceRepresentation.js":
/*!***********************************************!*\
  !*** ../dist/esm/core/SliceRepresentation.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return g; });
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "../node_modules/@babel/runtime/helpers/toConsumableArray.js");
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js");
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ "../node_modules/@babel/runtime/helpers/inherits.js");
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js");
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "../node_modules/@babel/runtime/helpers/getPrototypeOf.js");
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! prop-types */ "prop-types");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _View_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./View.js */ "../dist/esm/core/View.js");
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../utils.js */ "../dist/esm/utils.js");
/* harmony import */ var _kitware_vtk_js_Rendering_Core_ImageSlice_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @kitware/vtk.js/Rendering/Core/ImageSlice.js */ "../node_modules/@kitware/vtk.js/Rendering/Core/ImageSlice.js");
/* harmony import */ var _kitware_vtk_js_Rendering_Core_ImageMapper_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @kitware/vtk.js/Rendering/Core/ImageMapper.js */ "../node_modules/@kitware/vtk.js/Rendering/Core/ImageMapper.js");
/* harmony import */ var _kitware_vtk_js_Rendering_Core_ColorTransferFunction_ColorMaps_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @kitware/vtk.js/Rendering/Core/ColorTransferFunction/ColorMaps.js */ "../node_modules/@kitware/vtk.js/Rendering/Core/ColorTransferFunction/ColorMaps.js");
/* harmony import */ var _kitware_vtk_js_Rendering_Core_ColorTransferFunction_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @kitware/vtk.js/Rendering/Core/ColorTransferFunction.js */ "../node_modules/@kitware/vtk.js/Rendering/Core/ColorTransferFunction.js");
/* harmony import */ var _kitware_vtk_js_Common_DataModel_PiecewiseFunction_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @kitware/vtk.js/Common/DataModel/PiecewiseFunction.js */ "../node_modules/@kitware/vtk.js/Common/DataModel/PiecewiseFunction.js");
















function b(e) {
  var t = function () {
    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
    if (Reflect.construct.sham) return !1;
    if ("function" == typeof Proxy) return !0;

    try {
      return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})), !0;
    } catch (e) {
      return !1;
    }
  }();

  return function () {
    var r,
        i = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default()(e);

    if (t) {
      var n = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default()(this).constructor;
      r = Reflect.construct(i, arguments, n);
    } else r = i.apply(this, arguments);

    return _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4___default()(this, r);
  };
}

var g = function (a) {
  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3___default()(p, react__WEBPACK_IMPORTED_MODULE_6__["Component"]);
  var o = b(p);

  function p(e) {
    var r, i;
    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default()(this, p), (i = o.call(this, e)).validData = !1, i.currentVisibility = !0, i.lookupTable = _kitware_vtk_js_Rendering_Core_ColorTransferFunction_js__WEBPACK_IMPORTED_MODULE_13__["default"].newInstance();
    var a = _kitware_vtk_js_Rendering_Core_ColorTransferFunction_ColorMaps_js__WEBPACK_IMPORTED_MODULE_12__["default"].getPresetByName(null !== (r = i.props.colorMapPreset) && void 0 !== r ? r : "Grayscale");
    return i.lookupTable.applyColorMap(a), i.piecewiseFunction = _kitware_vtk_js_Common_DataModel_PiecewiseFunction_js__WEBPACK_IMPORTED_MODULE_14__["default"].newInstance(), i.actor = _kitware_vtk_js_Rendering_Core_ImageSlice_js__WEBPACK_IMPORTED_MODULE_10__["default"].newInstance({
      visibility: !1
    }), i.mapper = _kitware_vtk_js_Rendering_Core_ImageMapper_js__WEBPACK_IMPORTED_MODULE_11__["default"].newInstance(), i.actor.setMapper(i.mapper), i.actor.getProperty().setRGBTransferFunction(0, i.lookupTable), i.actor.getProperty().setInterpolationTypeToLinear(), i;
  }

  return _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2___default()(p, [{
    key: "render",
    value: function () {
      var e = this;
      return react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(_View_js__WEBPACK_IMPORTED_MODULE_8__["ViewContext"].Consumer, null, function (t) {
        return e.view || (t.renderer.addActor(e.actor), e.view = t), react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(_View_js__WEBPACK_IMPORTED_MODULE_8__["RepresentationContext"].Provider, {
          value: e
        }, react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(_View_js__WEBPACK_IMPORTED_MODULE_8__["DownstreamContext"].Provider, {
          value: e.mapper
        }, react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement("div", {
          key: e.props.id,
          id: e.props.id
        }, e.props.children)));
      });
    }
  }, {
    key: "componentDidMount",
    value: function () {
      this.update(this.props);
    }
  }, {
    key: "componentDidUpdate",
    value: function (e, t, r) {
      this.update(this.props, e);
    }
  }, {
    key: "componentWillUnmount",
    value: function () {
      this.view && this.view.renderer && this.view.renderer.removeActor(this.actor), this.actor.delete(), this.actor = null, this.mapper.delete(), this.mapper = null;
    }
  }, {
    key: "update",
    value: function (t, r) {
      var i,
          a = t.actor,
          o = t.property,
          n = t.mapper,
          s = t.colorMapPreset,
          p = t.colorDataRange,
          l = t.iSlice,
          c = t.jSlice,
          u = t.kSlice,
          h = t.xSlice,
          d = t.ySlice,
          y = t.zSlice,
          v = !1;

      if (!a || r && a === r.actor || (v = this.actor.set(a) || v), !o || r && o === r.property || (v = this.actor.getProperty().set(o) || v), !n || r && n === r.mapper || (v = this.mapper.set(n) || v), s && (!r || s !== r.colorMapPreset)) {
        v = !0;
        var b = _kitware_vtk_js_Rendering_Core_ColorTransferFunction_ColorMaps_js__WEBPACK_IMPORTED_MODULE_12__["default"].getPresetByName(s);
        this.lookupTable.applyColorMap(b);
      }

      !p || r && Object(_utils_js__WEBPACK_IMPORTED_MODULE_9__["smartEqualsShallow"])(p, r.colorDataRange) || (v = !0, "string" == typeof p ? r ? this.dataChanged() : (this.lookupTable.setMappingRange(0, 1), this.lookupTable.updateRange(), this.piecewiseFunction.setNodes([{
        x: 0,
        y: 0,
        midpoint: .5,
        sharpness: 0
      }, {
        x: 1,
        y: 1,
        midpoint: .5,
        sharpness: 0
      }])) : ((i = this.lookupTable).setMappingRange.apply(i, _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(p)), this.lookupTable.updateRange(), this.piecewiseFunction.setNodes([{
        x: p[0],
        y: 0,
        midpoint: .5,
        sharpness: 0
      }, {
        x: p[1],
        y: 1,
        midpoint: .5,
        sharpness: 0
      }])));
      null == l || r && l === r.iSlice || (v = this.mapper.setISlice(l) || v), null == c || r && c === r.jSlice || (v = this.mapper.setJSlice(c) || v), null == u || r && u === r.kSlice || (v = this.mapper.setKSlice(u) || v), null == h || r && h === r.xSlice || (v = this.mapper.setXSlice(h) || v), null == d || r && d === r.ySlice || (v = this.mapper.setYSlice(d) || v), null == y || r && y === r.zSlice || (v = this.mapper.setZSlice(y) || v), a && void 0 !== a.visibility && (this.currentVisibility = a.visibility, v = this.actor.setVisibility(this.currentVisibility && this.validData) || v), v && this.dataChanged();
    }
  }, {
    key: "dataAvailable",
    value: function () {
      this.validData || (this.validData = !0, this.actor.setVisibility(this.currentVisibility), this.dataChanged());
    }
  }, {
    key: "dataChanged",
    value: function () {
      if ("auto" === this.props.colorDataRange) {
        var t;
        this.mapper.update();
        var r,
            i = this.mapper.getInputData(),
            a = i && (null === (t = i.getPointData()) || void 0 === t ? void 0 : t.getScalars()),
            o = a && a.getRange();
        if (o) (r = this.lookupTable).setMappingRange.apply(r, _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(o)), this.lookupTable.updateRange(), this.piecewiseFunction.setNodes([{
          x: o[0],
          y: 0,
          midpoint: .5,
          sharpness: 0
        }, {
          x: o[1],
          y: 1,
          midpoint: .5,
          sharpness: 0
        }]);
        this.view && this.view.renderView();
      }
    }
  }]), p;
}();

g.defaultProps = {
  colorMapPreset: "Grayscale",
  colorDataRange: "auto"
}, g.propTypes = {
  id: prop_types__WEBPACK_IMPORTED_MODULE_7___default.a.string,
  mapper: prop_types__WEBPACK_IMPORTED_MODULE_7___default.a.object,
  actor: prop_types__WEBPACK_IMPORTED_MODULE_7___default.a.object,
  property: prop_types__WEBPACK_IMPORTED_MODULE_7___default.a.object,
  colorMapPreset: prop_types__WEBPACK_IMPORTED_MODULE_7___default.a.string,
  colorDataRange: prop_types__WEBPACK_IMPORTED_MODULE_7___default.a.oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_7___default.a.arrayOf(prop_types__WEBPACK_IMPORTED_MODULE_7___default.a.number), prop_types__WEBPACK_IMPORTED_MODULE_7___default.a.string]),
  iSlice: prop_types__WEBPACK_IMPORTED_MODULE_7___default.a.number,
  jSlice: prop_types__WEBPACK_IMPORTED_MODULE_7___default.a.number,
  kSlice: prop_types__WEBPACK_IMPORTED_MODULE_7___default.a.number,
  xSlice: prop_types__WEBPACK_IMPORTED_MODULE_7___default.a.number,
  ySlice: prop_types__WEBPACK_IMPORTED_MODULE_7___default.a.number,
  zSlice: prop_types__WEBPACK_IMPORTED_MODULE_7___default.a.number,
  children: prop_types__WEBPACK_IMPORTED_MODULE_7___default.a.oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_7___default.a.arrayOf(prop_types__WEBPACK_IMPORTED_MODULE_7___default.a.node), prop_types__WEBPACK_IMPORTED_MODULE_7___default.a.node])
};


/***/ }),

/***/ "../dist/esm/core/View.js":
/*!********************************!*\
  !*** ../dist/esm/core/View.js ***!
  \********************************/
/*! exports provided: DataSetContext, DownstreamContext, FieldsContext, RepresentationContext, ViewContext, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DataSetContext", function() { return D; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DownstreamContext", function() { return U; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FieldsContext", function() { return z; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RepresentationContext", function() { return V; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ViewContext", function() { return B; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return N; });
/* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ "../node_modules/@babel/runtime/helpers/slicedToArray.js");
/* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "../node_modules/@babel/runtime/helpers/defineProperty.js");
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "../node_modules/@babel/runtime/helpers/toConsumableArray.js");
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js");
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/assertThisInitialized */ "../node_modules/@babel/runtime/helpers/assertThisInitialized.js");
/* harmony import */ var _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ "../node_modules/@babel/runtime/helpers/inherits.js");
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js");
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "../node_modules/@babel/runtime/helpers/getPrototypeOf.js");
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! prop-types */ "prop-types");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var _kitware_vtk_js_macros_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @kitware/vtk.js/macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _kitware_vtk_js_Rendering_OpenGL_RenderWindow_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @kitware/vtk.js/Rendering/OpenGL/RenderWindow.js */ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/RenderWindow.js");
/* harmony import */ var _kitware_vtk_js_Rendering_Core_RenderWindow_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @kitware/vtk.js/Rendering/Core/RenderWindow.js */ "../node_modules/@kitware/vtk.js/Rendering/Core/RenderWindow.js");
/* harmony import */ var _kitware_vtk_js_Rendering_Core_RenderWindowInteractor_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @kitware/vtk.js/Rendering/Core/RenderWindowInteractor.js */ "../node_modules/@kitware/vtk.js/Rendering/Core/RenderWindowInteractor.js");
/* harmony import */ var _kitware_vtk_js_Rendering_Core_Renderer_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @kitware/vtk.js/Rendering/Core/Renderer.js */ "../node_modules/@kitware/vtk.js/Rendering/Core/Renderer.js");
/* harmony import */ var _kitware_vtk_js_Interaction_Style_InteractorStyleManipulator_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @kitware/vtk.js/Interaction/Style/InteractorStyleManipulator.js */ "../node_modules/@kitware/vtk.js/Interaction/Style/InteractorStyleManipulator.js");
/* harmony import */ var _kitware_vtk_js_Common_DataModel_BoundingBox_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @kitware/vtk.js/Common/DataModel/BoundingBox.js */ "../node_modules/@kitware/vtk.js/Common/DataModel/BoundingBox.js");
/* harmony import */ var _kitware_vtk_js_Rendering_Core_CubeAxesActor_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @kitware/vtk.js/Rendering/Core/CubeAxesActor.js */ "../node_modules/@kitware/vtk.js/Rendering/Core/CubeAxesActor.js");
/* harmony import */ var _kitware_vtk_js_Rendering_Core_AxesActor__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @kitware/vtk.js/Rendering/Core/AxesActor */ "../node_modules/@kitware/vtk.js/Rendering/Core/AxesActor.js");
/* harmony import */ var _kitware_vtk_js_Interaction_Widgets_OrientationMarkerWidget__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @kitware/vtk.js/Interaction/Widgets/OrientationMarkerWidget */ "../node_modules/@kitware/vtk.js/Interaction/Widgets/OrientationMarkerWidget.js");
/* harmony import */ var _kitware_vtk_js_Interaction_Manipulators_MouseCameraTrackballMultiRotateManipulator_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @kitware/vtk.js/Interaction/Manipulators/MouseCameraTrackballMultiRotateManipulator.js */ "../node_modules/@kitware/vtk.js/Interaction/Manipulators/MouseCameraTrackballMultiRotateManipulator.js");
/* harmony import */ var _kitware_vtk_js_Interaction_Manipulators_MouseCameraTrackballPanManipulator_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! @kitware/vtk.js/Interaction/Manipulators/MouseCameraTrackballPanManipulator.js */ "../node_modules/@kitware/vtk.js/Interaction/Manipulators/MouseCameraTrackballPanManipulator.js");
/* harmony import */ var _kitware_vtk_js_Interaction_Manipulators_MouseCameraTrackballRollManipulator_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! @kitware/vtk.js/Interaction/Manipulators/MouseCameraTrackballRollManipulator.js */ "../node_modules/@kitware/vtk.js/Interaction/Manipulators/MouseCameraTrackballRollManipulator.js");
/* harmony import */ var _kitware_vtk_js_Interaction_Manipulators_MouseCameraTrackballRotateManipulator_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! @kitware/vtk.js/Interaction/Manipulators/MouseCameraTrackballRotateManipulator.js */ "../node_modules/@kitware/vtk.js/Interaction/Manipulators/MouseCameraTrackballRotateManipulator.js");
/* harmony import */ var _kitware_vtk_js_Interaction_Manipulators_MouseCameraTrackballZoomManipulator_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! @kitware/vtk.js/Interaction/Manipulators/MouseCameraTrackballZoomManipulator.js */ "../node_modules/@kitware/vtk.js/Interaction/Manipulators/MouseCameraTrackballZoomManipulator.js");
/* harmony import */ var _kitware_vtk_js_Interaction_Manipulators_MouseCameraTrackballZoomToMouseManipulator_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! @kitware/vtk.js/Interaction/Manipulators/MouseCameraTrackballZoomToMouseManipulator.js */ "../node_modules/@kitware/vtk.js/Interaction/Manipulators/MouseCameraTrackballZoomToMouseManipulator.js");
/* harmony import */ var _kitware_vtk_js_Interaction_Manipulators_GestureCameraManipulator_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! @kitware/vtk.js/Interaction/Manipulators/GestureCameraManipulator.js */ "../node_modules/@kitware/vtk.js/Interaction/Manipulators/GestureCameraManipulator.js");
/* harmony import */ var _kitware_vtk_js_Interaction_Manipulators_MouseBoxSelectorManipulator_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! @kitware/vtk.js/Interaction/Manipulators/MouseBoxSelectorManipulator.js */ "../node_modules/@kitware/vtk.js/Interaction/Manipulators/MouseBoxSelectorManipulator.js");
/* harmony import */ var _kitware_vtk_js_Rendering_OpenGL_HardwareSelector_js__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! @kitware/vtk.js/Rendering/OpenGL/HardwareSelector.js */ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/HardwareSelector.js");
/* harmony import */ var _kitware_vtk_js_Common_DataModel_DataSet_Constants_js__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! @kitware/vtk.js/Common/DataModel/DataSet/Constants.js */ "../node_modules/@kitware/vtk.js/Common/DataModel/DataSet/Constants.js");
































function O(e, t) {
  var r = Object.keys(e);

  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    t && (o = o.filter(function (t) {
      return Object.getOwnPropertyDescriptor(e, t).enumerable;
    })), r.push.apply(r, o);
  }

  return r;
}

function T(e) {
  for (var r = 1; r < arguments.length; r++) {
    var o = null != arguments[r] ? arguments[r] : {};
    r % 2 ? O(Object(o), !0).forEach(function (r) {
      _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1___default()(e, r, o[r]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(o)) : O(Object(o)).forEach(function (t) {
      Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(o, t));
    });
  }

  return e;
}

function E(e) {
  var t = function () {
    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
    if (Reflect.construct.sham) return !1;
    if ("function" == typeof Proxy) return !0;

    try {
      return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})), !0;
    } catch (e) {
      return !1;
    }
  }();

  return function () {
    var r,
        o = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_8___default()(e);

    if (t) {
      var n = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_8___default()(this).constructor;
      r = Reflect.construct(o, arguments, n);
    } else r = o.apply(this, arguments);

    return _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_7___default()(this, r);
  };
}

var B = react__WEBPACK_IMPORTED_MODULE_9___default.a.createContext(null),
    V = react__WEBPACK_IMPORTED_MODULE_9___default.a.createContext(null),
    D = react__WEBPACK_IMPORTED_MODULE_9___default.a.createContext(null),
    z = react__WEBPACK_IMPORTED_MODULE_9___default.a.createContext(null),
    U = react__WEBPACK_IMPORTED_MODULE_9___default.a.createContext(null),
    F = {
  None: null,
  Pan: _kitware_vtk_js_Interaction_Manipulators_MouseCameraTrackballPanManipulator_js__WEBPACK_IMPORTED_MODULE_22__["default"],
  Zoom: _kitware_vtk_js_Interaction_Manipulators_MouseCameraTrackballZoomManipulator_js__WEBPACK_IMPORTED_MODULE_25__["default"],
  Roll: _kitware_vtk_js_Interaction_Manipulators_MouseCameraTrackballRollManipulator_js__WEBPACK_IMPORTED_MODULE_23__["default"],
  Rotate: _kitware_vtk_js_Interaction_Manipulators_MouseCameraTrackballRotateManipulator_js__WEBPACK_IMPORTED_MODULE_24__["default"],
  MultiRotate: _kitware_vtk_js_Interaction_Manipulators_MouseCameraTrackballMultiRotateManipulator_js__WEBPACK_IMPORTED_MODULE_21__["default"],
  ZoomToMouse: _kitware_vtk_js_Interaction_Manipulators_MouseCameraTrackballZoomToMouseManipulator_js__WEBPACK_IMPORTED_MODULE_26__["default"],
  Select: _kitware_vtk_js_Interaction_Manipulators_MouseBoxSelectorManipulator_js__WEBPACK_IMPORTED_MODULE_28__["default"]
};

var L = {
  position: "absolute",
  width: "100%",
  height: "100%",
  overflow: "hidden"
},
    N = function (a) {
  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_6___default()(u, react__WEBPACK_IMPORTED_MODULE_9__["Component"]);
  var l = E(u);

  function u(n) {
    var s;
    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_3___default()(this, u), (s = l.call(this, n)).containerRef = react__WEBPACK_IMPORTED_MODULE_9___default.a.createRef(), s.renderWindow = _kitware_vtk_js_Rendering_Core_RenderWindow_js__WEBPACK_IMPORTED_MODULE_13__["default"].newInstance(), s.renderer = _kitware_vtk_js_Rendering_Core_Renderer_js__WEBPACK_IMPORTED_MODULE_15__["default"].newInstance(), s.renderWindow.addRenderer(s.renderer), s.camera = s.renderer.getActiveCamera(), s.openglRenderWindow = _kitware_vtk_js_Rendering_OpenGL_RenderWindow_js__WEBPACK_IMPORTED_MODULE_12__["default"].newInstance(), s.renderWindow.addView(s.openglRenderWindow), n.interactive && (s.interactor = _kitware_vtk_js_Rendering_Core_RenderWindowInteractor_js__WEBPACK_IMPORTED_MODULE_14__["default"].newInstance(), s.interactor.setView(s.openglRenderWindow), s.interactor.initialize(), s.style = _kitware_vtk_js_Interaction_Style_InteractorStyleManipulator_js__WEBPACK_IMPORTED_MODULE_16__["default"].newInstance(), s.interactor.setInteractorStyle(s.style)), s.axesActor = _kitware_vtk_js_Rendering_Core_AxesActor__WEBPACK_IMPORTED_MODULE_19__["default"].newInstance(), s.orientationWidget = _kitware_vtk_js_Interaction_Widgets_OrientationMarkerWidget__WEBPACK_IMPORTED_MODULE_20__["default"].newInstance({
      actor: s.axesActor,
      interactor: s.interactor
    }), s.orientationWidget.setEnabled(!0), s.orientationWidget.setViewportCorner(_kitware_vtk_js_Interaction_Widgets_OrientationMarkerWidget__WEBPACK_IMPORTED_MODULE_20__["default"].Corners.BOTTOM_LEFT), s.orientationWidget.setViewportSize(.15), s.orientationWidget.setMinPixelSize(100), s.orientationWidget.setMaxPixelSize(300), s.selector = _kitware_vtk_js_Rendering_OpenGL_HardwareSelector_js__WEBPACK_IMPORTED_MODULE_29__["default"].newInstance({
      captureZValues: !0
    }), s.selector.setFieldAssociation(_kitware_vtk_js_Common_DataModel_DataSet_Constants_js__WEBPACK_IMPORTED_MODULE_30__["FieldAssociations"].FIELD_ASSOCIATION_POINTS), s.selector.attach(s.openglRenderWindow, s.renderer), s.resizeObserver = new ResizeObserver(function () {
      return s.onResize();
    }), s.renderView = function () {
      s.updateCubeBounds(), s.renderWindow.render();
    }, s.resetCamera = s.resetCamera.bind(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5___default()(s));
    var a = _kitware_vtk_js_Common_DataModel_BoundingBox_js__WEBPACK_IMPORTED_MODULE_17__["default"].newInstance({
      bounds: [0, 0, 0, 0, 0, 0]
    });
    s.updateCubeBounds = function () {
      if (s.props.showCubeAxes) {
        a.reset();

        for (var e = s.renderer.get("props").props, t = 0; t < e.length; t++) {
          var o = e[t];
          o.getVisibility() && o.getUseBounds() && o !== s.cubeAxes && a.addBounds.apply(a, _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_2___default()(o.getBounds()));
        }

        s.cubeAxes.setDataBounds(a.getBounds());
      }
    }, s.debouncedCubeBounds = Object(_kitware_vtk_js_macros_js__WEBPACK_IMPORTED_MODULE_11__["debounce"])(s.updateCubeBounds, 50), s.hasFocus = !1, s.handleKey = function (e) {
      if (s.hasFocus && "KeyR" === e.code) s.resetCamera();
    }, s.onEnter = function () {
      s.hasFocus = !0;
    }, s.onLeave = function () {
      s.hasFocus = !1;
    };

    var d = function (e, r, o, n) {
      var i = o.x,
          a = o.y;

      if (-1 !== s.props.pickingModes.indexOf(r)) {
        var l = s.getPointerSizeTolerance(),
            c = s.pickClosest(Math.floor(i), Math.floor(a), l);
        "click" === r && null != c && c.length && s.style.setCenterOfRotation(c[0].worldPosition), e && e(c[0], n), "setProps" in s.props && s.props.setProps(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1___default()({}, "".concat(r, "Info"), c[0]));
      }
    };

    s.hover = Object(_kitware_vtk_js_macros_js__WEBPACK_IMPORTED_MODULE_11__["debounce"])(function (e, t) {
      var r = e.x,
          o = e.y;

      if (-1 !== s.props.pickingModes.indexOf("hover")) {
        var n = s.getPointerSizeTolerance(),
            i = s.pickClosest(Math.floor(r), Math.floor(o), n);
        0 === s.lastSelection.length && 0 === i.length || (s.lastSelection = i, s.props.onHover && s.props.onHover(i[0], t), "setProps" in s.props && s.props.setProps({
          hoverInfo: i[0]
        }));
      }
    }, 10);
    return s.onClick = function (e) {
      return d(s.props.onClick, "click", s.getScreenEventPositionFor(e), e);
    }, s.onMouseDown = function (e) {
      return d(s.props.onMouseDown, "mouseDown", s.getScreenEventPositionFor(e), e);
    }, s.onMouseUp = function (e) {
      return d(s.props.onMouseUp, "mouseUp", s.getScreenEventPositionFor(e), e);
    }, s.onMouseMove = function (e) {
      return s.hover(s.getScreenEventPositionFor(e), e);
    }, s.lastSelection = [], s.onBoxSelectChange = function (t) {
      var r = t.selection;

      if (-1 !== s.props.pickingModes.indexOf("select")) {
        var o = _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0___default()(r, 4),
            n = o[0],
            i = o[1],
            a = o[2],
            l = o[3],
            c = s.pick(n, a, i, l, !0);
        s.props.onSelect && s.props.onSelect(c, event), "setProps" in s.props && s.props.setProps({
          selectInfo: c
        });
      }
    }, s.cubeAxes = _kitware_vtk_js_Rendering_Core_CubeAxesActor_js__WEBPACK_IMPORTED_MODULE_18__["default"].newInstance({
      visibility: !1,
      dataBounds: [-1, 1, -1, 1, -1, 1]
    }), Array.from(s.cubeAxes.getActors()).forEach(function (e) {
      return (0, e.setVisibility)(!1);
    }), s.cubeAxes.setCamera(s.camera), s.renderer.addActor(s.cubeAxes), s.subscriptions = [], s.subscriptions.push(s.renderer.onEvent(function (e) {
      var t = e.type;
      e.renderer && "ComputeVisiblePropBoundsEvent" === t && s.debouncedCubeBounds();
    })), s;
  }

  return _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_4___default()(u, [{
    key: "getPointerSizeTolerance",
    value: function () {
      return this.props.pointerSize / 2;
    }
  }, {
    key: "getScreenEventPositionFor",
    value: function (t) {
      var r = this.containerRef.current.getBoundingClientRect(),
          o = this.openglRenderWindow.getSize(),
          n = _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0___default()(o, 2),
          i = n[0],
          s = n[1],
          a = i / r.width,
          l = s / r.height;
      return {
        x: a * (t.clientX - r.left),
        y: l * (r.height - t.clientY + r.top),
        z: 0
      };
    }
  }, {
    key: "render",
    value: function () {
      var e = this.props,
          t = e.id,
          r = e.children,
          o = e.style,
          n = e.className;
      return react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement("div", {
        key: t,
        id: t,
        className: n,
        style: T({
          position: "relative"
        }, o),
        onMouseEnter: this.onEnter,
        onMouseLeave: this.onLeave,
        onClick: this.onClick,
        onMouseUp: this.onMouseUp,
        onMouseMove: this.onMouseMove
      }, react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement("div", {
        style: L,
        ref: this.containerRef
      }), react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement("div", null, react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement(B.Provider, {
        value: this
      }, r)));
    }
  }, {
    key: "onResize",
    value: function () {
      var e = this.containerRef.current;

      if (e) {
        var t = window.devicePixelRatio || 1,
            r = e.getBoundingClientRect(),
            o = r.width,
            n = r.height,
            i = Math.floor(o * t),
            s = Math.floor(n * t);
        this.openglRenderWindow.setSize(Math.max(i, 10), Math.max(s, 10)), this.renderWindow.render();
      }
    }
  }, {
    key: "componentDidMount",
    value: function () {
      var e = this,
          t = this.containerRef.current;
      this.openglRenderWindow.setContainer(t), this.props.interactive && this.interactor.bindEvents(t), this.onResize(), this.resizeObserver.observe(t), this.update(this.props), document.addEventListener("keyup", this.handleKey), this.resetCamera(), this.firstResetTimeout = setTimeout(function () {
        return e.resetCamera();
      }, 100);
    }
  }, {
    key: "componentDidUpdate",
    value: function (e, t, r) {
      this.update(this.props, e);
    }
  }, {
    key: "componentWillUnmount",
    value: function () {
      for (this.debouncedCubeBounds && this.debouncedCubeBounds.cancel(), this.hover && this.hover.cancel(), clearTimeout(this.resetCameraTimeout), clearTimeout(this.renderViewTimeout), clearTimeout(this.firstResetTimeout); this.subscriptions.length;) this.subscriptions.pop().unsubscribe();

      document.removeEventListener("keyup", this.handleKey), this.resizeObserver.disconnect(), this.resizeObserver = null, this.interactor && this.interactor.unbindEvents(), this.openglRenderWindow.setContainer(null), this.renderWindow.removeRenderer(this.renderer), this.renderWindow.removeView(this.openglRenderWindow), this.interactor && (this.interactor.delete(), this.interactor = null), this.renderer.delete(), this.renderer = null, this.renderWindow.delete(), this.renderWindow = null, this.openglRenderWindow.delete(), this.openglRenderWindow = null;
    }
  }, {
    key: "update",
    value: function (e, t) {
      var r,
          o,
          n,
          i = e.background,
          s = e.interactorSettings,
          a = e.interactive,
          l = e.cameraPosition,
          c = e.cameraViewUp,
          d = e.cameraParallelProjection,
          u = e.triggerRender,
          p = e.triggerResetCamera,
          h = e.showCubeAxes,
          m = e.cubeAxesStyle,
          f = e.showOrientationAxes;
      (!i || t && i === t.background || this.renderer.setBackground(i), !a || !s || t && s === t.interactorSettings || (r = this.style, o = s, n = this, r.removeAllMouseManipulators(), o.forEach(function (e) {
        var t = F[e.action];

        if (t) {
          var o = e.button,
              i = e.shift,
              s = e.control,
              a = e.alt,
              l = e.scrollEnabled,
              c = e.dragEnabled,
              d = e.useWorldUpVec,
              u = e.worldUpVec,
              p = e.useFocalPointAsCenterOfRotation,
              h = t.newInstance();
          h.setButton(o), h.setShift(!!i), h.setControl(!!s), h.setAlt(!!a), void 0 !== l && h.setScrollEnabled(l), void 0 !== c && h.setDragEnabled(c), r.addMouseManipulator(h), h.onBoxSelectChange && n.onBoxSelectChange && h.onBoxSelectChange(n.onBoxSelectChange), void 0 !== d && h.setUseWorldUpVec(d), void 0 !== u && h.setWorldUpVec(u), void 0 !== p && h.setUseFocalPointAsCenterOfRotation(p);
        }
      }), r.addGestureManipulator(_kitware_vtk_js_Interaction_Manipulators_GestureCameraManipulator_js__WEBPACK_IMPORTED_MODULE_27__["default"].newInstance())), !d || t && d === t.cameraParallelProjection) || (this.renderer.getActiveCamera().setParallelProjection(d), t && this.resetCamera());
      !l || t && JSON.stringify(l) === JSON.stringify(t.cameraPosition) || (this.renderer.getActiveCamera().set({
        position: l,
        viewUp: c,
        focalPoint: [0, 0, 0]
      }), t && this.resetCamera());
      this.cubeAxes.setVisibility(h) && (Array.from(this.cubeAxes.getActors()).forEach(function (e) {
        return (0, e.setVisibility)(h);
      }), this.renderView()), this.cubeAxes.set(m || {}) && this.renderView(), f !== this.orientationWidget.getEnabled() && this.orientationWidget.setEnabled(f), t && u !== t.triggerRender && (this.renderViewTimeout = setTimeout(this.renderView, 0)), t && p !== t.triggerResetCamera && (this.resetCameraTimeout = setTimeout(this.resetCamera, 0)), this.openglRenderWindow.getCanvas().addEventListener("mousedown", this.onMouseDown);
    }
  }, {
    key: "resetCamera",
    value: function () {
      this.renderer.resetCamera(), this.props.interactive && this.style.setCenterOfRotation(this.renderer.getActiveCamera().getFocalPoint()), this.renderWindow.render();
    }
  }, {
    key: "pickClosest",
    value: function (e, t, r) {
      var o = Math.floor(e - r),
          n = Math.floor(t - r),
          i = Math.ceil(e + r),
          s = Math.ceil(t + r);

      if (this.selector.setArea(o, n, i, s), this.previousSelectedData = null, this.selector.captureBuffers()) {
        var a = [e, t],
            l = this.selector.getPixelInformation(a, r, [0, 0]);
        if (null == l || null == l.prop) return [];
        var c = this.openglRenderWindow.displayToWorld(Math.round((o + i) / 2), Math.round((n + s) / 2), 0, this.renderer),
            d = this.openglRenderWindow.displayToWorld(Math.round((o + i) / 2), Math.round((n + s) / 2), 1, this.renderer),
            u = [Array.from(c), Array.from(d)],
            p = Array.from(this.openglRenderWindow.displayToWorld(l.displayPosition[0], l.displayPosition[1], l.zValue, this.renderer)),
            h = [l.displayPosition[0], l.displayPosition[1], l.zValue],
            m = [];
        return m[0] = T(T({
          worldPosition: p,
          displayPosition: h,
          compositeID: l.compositeID
        }, l.prop.get("representationId")), {}, {
          ray: u
        }), m;
      }

      return [];
    }
  }, {
    key: "pick",
    value: function (e, t, r, o) {
      var n = this,
          i = arguments.length > 4 && void 0 !== arguments[4] && arguments[4];

      if (this.selector.setArea(e, t, r, o), this.previousSelectedData = null, this.selector.captureBuffers()) {
        if (this.selections = this.selector.generateSelection(e, t, r, o) || [], i) {
          var s = [Array.from(this.openglRenderWindow.displayToWorld(e, t, 0, this.renderer)), Array.from(this.openglRenderWindow.displayToWorld(r, t, 0, this.renderer)), Array.from(this.openglRenderWindow.displayToWorld(r, o, 0, this.renderer)), Array.from(this.openglRenderWindow.displayToWorld(e, o, 0, this.renderer)), Array.from(this.openglRenderWindow.displayToWorld(e, t, 1, this.renderer)), Array.from(this.openglRenderWindow.displayToWorld(r, t, 1, this.renderer)), Array.from(this.openglRenderWindow.displayToWorld(r, o, 1, this.renderer)), Array.from(this.openglRenderWindow.displayToWorld(e, o, 1, this.renderer))],
              a = [];
          return this.selections.forEach(function (e) {
            var t = e.getProperties().prop,
                r = null == t ? void 0 : t.get("representationId").representationId;
            r && a.push(r);
          }), {
            frustrum: s,
            representationIds: a
          };
        }

        var l = [Array.from(this.openglRenderWindow.displayToWorld(Math.round((e + r) / 2), Math.round((t + o) / 2), 0, this.renderer)), Array.from(this.openglRenderWindow.displayToWorld(Math.round((e + r) / 2), Math.round((t + o) / 2), 1, this.renderer))];
        return this.selections.map(function (e) {
          var t = e.getProperties(),
              r = t.prop,
              o = t.compositeID,
              i = t.displayPosition;
          return null != r && T(T({
            worldPosition: Array.from(n.openglRenderWindow.displayToWorld(i[0], i[1], i[2], n.renderer)),
            displayPosition: i,
            compositeID: o
          }, r.get("representationId")), {}, {
            ray: l
          });
        }).filter(Boolean);
      }

      return [];
    }
  }]), u;
}();

N.defaultProps = {
  style: {
    width: "100%",
    height: "100%"
  },
  background: [.2, .3, .4],
  cameraPosition: [0, 0, 1],
  cameraViewUp: [0, 1, 0],
  cameraParallelProjection: !1,
  triggerRender: 0,
  triggerResetCamera: 0,
  interactorSettings: [{
    button: 1,
    action: "Rotate"
  }, {
    button: 2,
    action: "Pan"
  }, {
    button: 3,
    action: "Zoom",
    scrollEnabled: !0
  }, {
    button: 1,
    action: "Pan",
    alt: !0
  }, {
    button: 1,
    action: "Zoom",
    control: !0
  }, {
    button: 1,
    action: "Select",
    shift: !0
  }, {
    button: 1,
    action: "Roll",
    alt: !0,
    shift: !0
  }],
  interactive: !0,
  pickingModes: [],
  showCubeAxes: !1,
  pointerSize: 0,
  showOrientationAxes: !1
}, N.propTypes = {
  id: prop_types__WEBPACK_IMPORTED_MODULE_10___default.a.string,
  style: prop_types__WEBPACK_IMPORTED_MODULE_10___default.a.object,
  className: prop_types__WEBPACK_IMPORTED_MODULE_10___default.a.string,
  background: prop_types__WEBPACK_IMPORTED_MODULE_10___default.a.array,
  interactorSettings: prop_types__WEBPACK_IMPORTED_MODULE_10___default.a.array,
  interactive: prop_types__WEBPACK_IMPORTED_MODULE_10___default.a.bool,
  cameraPosition: prop_types__WEBPACK_IMPORTED_MODULE_10___default.a.array,
  cameraViewUp: prop_types__WEBPACK_IMPORTED_MODULE_10___default.a.array,
  cameraParallelProjection: prop_types__WEBPACK_IMPORTED_MODULE_10___default.a.bool,
  triggerRender: prop_types__WEBPACK_IMPORTED_MODULE_10___default.a.number,
  triggerResetCamera: prop_types__WEBPACK_IMPORTED_MODULE_10___default.a.number,
  children: prop_types__WEBPACK_IMPORTED_MODULE_10___default.a.oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_10___default.a.arrayOf(prop_types__WEBPACK_IMPORTED_MODULE_10___default.a.node), prop_types__WEBPACK_IMPORTED_MODULE_10___default.a.node]),
  pickingModes: prop_types__WEBPACK_IMPORTED_MODULE_10___default.a.arrayOf(prop_types__WEBPACK_IMPORTED_MODULE_10___default.a.oneOf(["click", "hover", "select", "mouseDown", "mouseUp"])),
  onClick: prop_types__WEBPACK_IMPORTED_MODULE_10___default.a.func,
  clickInfo: prop_types__WEBPACK_IMPORTED_MODULE_10___default.a.object,
  onMouseDown: prop_types__WEBPACK_IMPORTED_MODULE_10___default.a.func,
  mouseDownInfo: prop_types__WEBPACK_IMPORTED_MODULE_10___default.a.object,
  onMouseUp: prop_types__WEBPACK_IMPORTED_MODULE_10___default.a.func,
  mouseUpInfo: prop_types__WEBPACK_IMPORTED_MODULE_10___default.a.object,
  onHover: prop_types__WEBPACK_IMPORTED_MODULE_10___default.a.func,
  hoverInfo: prop_types__WEBPACK_IMPORTED_MODULE_10___default.a.object,
  onSelect: prop_types__WEBPACK_IMPORTED_MODULE_10___default.a.func,
  selectInfo: prop_types__WEBPACK_IMPORTED_MODULE_10___default.a.object,
  pointerSize: prop_types__WEBPACK_IMPORTED_MODULE_10___default.a.number,
  showCubeAxes: prop_types__WEBPACK_IMPORTED_MODULE_10___default.a.bool,
  cubeAxesStyle: prop_types__WEBPACK_IMPORTED_MODULE_10___default.a.object,
  showOrientationAxes: prop_types__WEBPACK_IMPORTED_MODULE_10___default.a.bool
};


/***/ }),

/***/ "../dist/esm/core/VolumeController.js":
/*!********************************************!*\
  !*** ../dist/esm/core/VolumeController.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return m; });
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "../node_modules/@babel/runtime/helpers/toConsumableArray.js");
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js");
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ "../node_modules/@babel/runtime/helpers/inherits.js");
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js");
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "../node_modules/@babel/runtime/helpers/getPrototypeOf.js");
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! prop-types */ "prop-types");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _View_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./View.js */ "../dist/esm/core/View.js");
/* harmony import */ var _kitware_vtk_js_Interaction_UI_VolumeController_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @kitware/vtk.js/Interaction/UI/VolumeController.js */ "../node_modules/@kitware/vtk.js/Interaction/UI/VolumeController.js");











function f(e) {
  var t = function () {
    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
    if (Reflect.construct.sham) return !1;
    if ("function" == typeof Proxy) return !0;

    try {
      return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})), !0;
    } catch (e) {
      return !1;
    }
  }();

  return function () {
    var r,
        n = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default()(e);

    if (t) {
      var a = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default()(this).constructor;
      r = Reflect.construct(n, arguments, a);
    } else r = n.apply(this, arguments);

    return _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4___default()(this, r);
  };
}

var m = function (o) {
  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3___default()(l, react__WEBPACK_IMPORTED_MODULE_6__["Component"]);
  var i = f(l);

  function l(e) {
    var r;
    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default()(this, l), (r = i.call(this, e)).subscriptions = [], r.containerRef = react__WEBPACK_IMPORTED_MODULE_6___default.a.createRef();
    var n = e.size,
        o = e.rescaleColorMap;
    return r.controller = _kitware_vtk_js_Interaction_UI_VolumeController_js__WEBPACK_IMPORTED_MODULE_9__["default"].newInstance({
      size: n,
      rescaleColorMap: o
    }), r;
  }

  return _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2___default()(l, [{
    key: "render",
    value: function () {
      var e = this;
      return react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(_View_js__WEBPACK_IMPORTED_MODULE_8__["ViewContext"].Consumer, null, function (t) {
        return react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(_View_js__WEBPACK_IMPORTED_MODULE_8__["RepresentationContext"].Consumer, null, function (r) {
          return e.view = t, e.representation = r, react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement("div", {
            ref: e.containerRef
          });
        });
      });
    }
  }, {
    key: "componentDidMount",
    value: function () {
      this.init();
    }
  }, {
    key: "componentDidUpdate",
    value: function (t, r, n) {
      var o;
      (o = this.controller).setSize.apply(o, _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(this.props.size)), this.controller.render();
    }
  }, {
    key: "componentWillUnmount",
    value: function () {
      for (; this.subscriptions.length;) this.subscriptions.pop().unsubscribe();

      this.controller.setContainer(null), this.controller.delete(), this.controller = null;
    }
  }, {
    key: "init",
    value: function () {
      var e = this,
          t = this.containerRef.current,
          r = this.view,
          n = r.renderWindow,
          o = r.props,
          i = this.representation.volume,
          a = o.background[0] + o.background[1] + o.background[2] < 1.5;

      if (i && i.getMapper() && i.getMapper().getInputData()) {
        var s = i.getMapper().getInputData();
        this.controller.setContainer(t), this.controller.setupContent(n, i, a), this.controller.render(), this.view.resetCamera(), this.view.renderView(), this.subscriptions.push(s.onModified(function () {
          return e.onDataChange();
        }, -1));
      } else setTimeout(function () {
        return e.init();
      }, 100);
    }
  }, {
    key: "onDataChange",
    value: function () {
      var e = this.controller.getWidget();

      if (this.representation && this.representation.volume) {
        var t = this.representation.volume.getMapper().getInputData(),
            r = t.getPointData().getScalars() || t.getPointData().getArrays()[0];
        e.setDataArray(r.getData());
      }
    }
  }]), l;
}();

m.defaultProps = {
  size: [400, 150],
  rescaleColorMap: !0
}, m.propTypes = {
  id: prop_types__WEBPACK_IMPORTED_MODULE_7___default.a.string,
  size: prop_types__WEBPACK_IMPORTED_MODULE_7___default.a.arrayOf(prop_types__WEBPACK_IMPORTED_MODULE_7___default.a.number),
  rescaleColorMap: prop_types__WEBPACK_IMPORTED_MODULE_7___default.a.bool
};


/***/ }),

/***/ "../dist/esm/core/VolumeRepresentation.js":
/*!************************************************!*\
  !*** ../dist/esm/core/VolumeRepresentation.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return g; });
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "../node_modules/@babel/runtime/helpers/toConsumableArray.js");
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js");
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ "../node_modules/@babel/runtime/helpers/inherits.js");
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js");
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "../node_modules/@babel/runtime/helpers/getPrototypeOf.js");
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! prop-types */ "prop-types");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _View_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./View.js */ "../dist/esm/core/View.js");
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../utils.js */ "../dist/esm/utils.js");
/* harmony import */ var _kitware_vtk_js_Rendering_Core_Volume_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @kitware/vtk.js/Rendering/Core/Volume.js */ "../node_modules/@kitware/vtk.js/Rendering/Core/Volume.js");
/* harmony import */ var _kitware_vtk_js_Rendering_Core_VolumeMapper_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @kitware/vtk.js/Rendering/Core/VolumeMapper.js */ "../node_modules/@kitware/vtk.js/Rendering/Core/VolumeMapper.js");
/* harmony import */ var _kitware_vtk_js_Rendering_Core_ColorTransferFunction_ColorMaps_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @kitware/vtk.js/Rendering/Core/ColorTransferFunction/ColorMaps.js */ "../node_modules/@kitware/vtk.js/Rendering/Core/ColorTransferFunction/ColorMaps.js");
/* harmony import */ var _kitware_vtk_js_Rendering_Core_ColorTransferFunction_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @kitware/vtk.js/Rendering/Core/ColorTransferFunction.js */ "../node_modules/@kitware/vtk.js/Rendering/Core/ColorTransferFunction.js");
/* harmony import */ var _kitware_vtk_js_Common_DataModel_PiecewiseFunction_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @kitware/vtk.js/Common/DataModel/PiecewiseFunction.js */ "../node_modules/@kitware/vtk.js/Common/DataModel/PiecewiseFunction.js");
















function b(e) {
  var t = function () {
    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
    if (Reflect.construct.sham) return !1;
    if ("function" == typeof Proxy) return !0;

    try {
      return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})), !0;
    } catch (e) {
      return !1;
    }
  }();

  return function () {
    var r,
        i = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default()(e);

    if (t) {
      var n = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default()(this).constructor;
      r = Reflect.construct(i, arguments, n);
    } else r = i.apply(this, arguments);

    return _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4___default()(this, r);
  };
}

var g = function (o) {
  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3___default()(p, react__WEBPACK_IMPORTED_MODULE_6__["Component"]);
  var a = b(p);

  function p(e) {
    var r;
    return _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default()(this, p), (r = a.call(this, e)).validData = !1, r.currentVisibility = !0, r.lookupTable = _kitware_vtk_js_Rendering_Core_ColorTransferFunction_js__WEBPACK_IMPORTED_MODULE_13__["default"].newInstance(), r.piecewiseFunction = _kitware_vtk_js_Common_DataModel_PiecewiseFunction_js__WEBPACK_IMPORTED_MODULE_14__["default"].newInstance(), r.volume = _kitware_vtk_js_Rendering_Core_Volume_js__WEBPACK_IMPORTED_MODULE_10__["default"].newInstance({
      visibility: !1
    }), r.mapper = _kitware_vtk_js_Rendering_Core_VolumeMapper_js__WEBPACK_IMPORTED_MODULE_11__["default"].newInstance(), r.volume.setMapper(r.mapper), r.volume.getProperty().setRGBTransferFunction(0, r.lookupTable), r.volume.getProperty().setScalarOpacity(0, r.piecewiseFunction), r.volume.getProperty().setInterpolationTypeToLinear(), r;
  }

  return _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2___default()(p, [{
    key: "render",
    value: function () {
      var e = this;
      return react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(_View_js__WEBPACK_IMPORTED_MODULE_8__["ViewContext"].Consumer, null, function (t) {
        return e.view || (t.renderer.addVolume(e.volume), e.view = t), react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(_View_js__WEBPACK_IMPORTED_MODULE_8__["RepresentationContext"].Provider, {
          value: e
        }, react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(_View_js__WEBPACK_IMPORTED_MODULE_8__["DownstreamContext"].Provider, {
          value: e.mapper
        }, react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement("div", {
          key: e.props.id,
          id: e.props.id
        }, e.props.children)));
      });
    }
  }, {
    key: "componentDidMount",
    value: function () {
      this.update(this.props);
    }
  }, {
    key: "componentDidUpdate",
    value: function (e, t, r) {
      this.update(this.props, e);
    }
  }, {
    key: "componentWillUnmount",
    value: function () {
      this.view && this.view.renderer && (this.view.renderer.removeVolume(this.volume), this.view = null), this.volume.delete(), this.volume = null, this.mapper.delete(), this.mapper = null;
    }
  }, {
    key: "update",
    value: function (t, r) {
      var i,
          o = t.volume,
          a = t.property,
          n = t.mapper,
          s = t.colorMapPreset,
          p = t.colorDataRange,
          l = !1;

      if (!o || r && o === r.volume || (l = this.volume.set(o) || l), !a || r && a === r.property || (l = this.volume.getProperty().set(a) || l), !n || r && n === r.mapper || (l = this.mapper.set(n) || l), s && (!r || s !== r.colorMapPreset)) {
        var u;
        l = !0;
        var m = _kitware_vtk_js_Rendering_Core_ColorTransferFunction_ColorMaps_js__WEBPACK_IMPORTED_MODULE_12__["default"].getPresetByName(s);
        this.lookupTable.applyColorMap(m), (u = this.lookupTable).setMappingRange.apply(u, _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(p)), this.lookupTable.updateRange();
      }

      !p || r && Object(_utils_js__WEBPACK_IMPORTED_MODULE_9__["smartEqualsShallow"])(p, r.colorDataRange) || (l = !0, "string" == typeof p ? r ? this.dataChanged() : (this.lookupTable.setMappingRange(0, 1), this.lookupTable.updateRange(), this.piecewiseFunction.setNodes([{
        x: 0,
        y: 0,
        midpoint: .5,
        sharpness: 0
      }, {
        x: 1,
        y: 1,
        midpoint: .5,
        sharpness: 0
      }])) : ((i = this.lookupTable).setMappingRange.apply(i, _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(p)), this.lookupTable.updateRange(), this.piecewiseFunction.setNodes([{
        x: p[0],
        y: 0,
        midpoint: .5,
        sharpness: 0
      }, {
        x: p[1],
        y: 1,
        midpoint: .5,
        sharpness: 0
      }])));
      o && void 0 !== o.visibility && (this.currentVisibility = o.visibility, l = this.volume.setVisibility(this.currentVisibility && this.validData) || l), l && this.dataChanged();
    }
  }, {
    key: "dataAvailable",
    value: function () {
      this.validData || (this.validData = !0, this.volume.setVisibility(this.currentVisibility), this.dataChanged());
    }
  }, {
    key: "dataChanged",
    value: function () {
      if ("auto" === this.props.colorDataRange) {
        this.mapper.update();
        var t,
            r = this.mapper.getInputData(),
            i = r && r.getPointData().getScalars(),
            o = i && i.getRange();
        if (o) (t = this.lookupTable).setMappingRange.apply(t, _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(o)), this.lookupTable.updateRange(), this.piecewiseFunction.setNodes([{
          x: o[0],
          y: 0,
          midpoint: .5,
          sharpness: 0
        }, {
          x: o[1],
          y: 1,
          midpoint: .5,
          sharpness: 0
        }]);
        this.view && this.view.renderView();
      }
    }
  }]), p;
}();

g.defaultProps = {
  colorMapPreset: "erdc_rainbow_bright",
  colorDataRange: "auto"
}, g.propTypes = {
  id: prop_types__WEBPACK_IMPORTED_MODULE_7___default.a.string,
  mapper: prop_types__WEBPACK_IMPORTED_MODULE_7___default.a.object,
  volume: prop_types__WEBPACK_IMPORTED_MODULE_7___default.a.object,
  property: prop_types__WEBPACK_IMPORTED_MODULE_7___default.a.object,
  colorMapPreset: prop_types__WEBPACK_IMPORTED_MODULE_7___default.a.string,
  colorDataRange: prop_types__WEBPACK_IMPORTED_MODULE_7___default.a.oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_7___default.a.arrayOf(prop_types__WEBPACK_IMPORTED_MODULE_7___default.a.number), prop_types__WEBPACK_IMPORTED_MODULE_7___default.a.string]),
  children: prop_types__WEBPACK_IMPORTED_MODULE_7___default.a.oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_7___default.a.arrayOf(prop_types__WEBPACK_IMPORTED_MODULE_7___default.a.node), prop_types__WEBPACK_IMPORTED_MODULE_7___default.a.node])
};


/***/ }),

/***/ "../dist/esm/core/index.js":
/*!*********************************!*\
  !*** ../dist/esm/core/index.js ***!
  \*********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return h; });
/* harmony import */ var _VolumeRepresentation_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./VolumeRepresentation.js */ "../dist/esm/core/VolumeRepresentation.js");
/* harmony import */ var _SliceRepresentation_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./SliceRepresentation.js */ "../dist/esm/core/SliceRepresentation.js");
/* harmony import */ var _VolumeController_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./VolumeController.js */ "../dist/esm/core/VolumeController.js");
/* harmony import */ var _PointData_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./PointData.js */ "../dist/esm/core/PointData.js");
/* harmony import */ var _PolyData_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./PolyData.js */ "../dist/esm/core/PolyData.js");
/* harmony import */ var _Reader_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Reader.js */ "../dist/esm/core/Reader.js");
/* harmony import */ var _ShareDataSet_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./ShareDataSet.js */ "../dist/esm/core/ShareDataSet.js");
/* harmony import */ var _View_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./View.js */ "../dist/esm/core/View.js");
/* harmony import */ var _GeometryRepresentation_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./GeometryRepresentation.js */ "../dist/esm/core/GeometryRepresentation.js");
/* harmony import */ var _Geometry2DRepresentation_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./Geometry2DRepresentation.js */ "../dist/esm/core/Geometry2DRepresentation.js");
/* harmony import */ var _GlyphRepresentation_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./GlyphRepresentation.js */ "../dist/esm/core/GlyphRepresentation.js");
/* harmony import */ var _ImageData_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./ImageData.js */ "../dist/esm/core/ImageData.js");
/* harmony import */ var _DataArray_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./DataArray.js */ "../dist/esm/core/DataArray.js");
/* harmony import */ var _FieldData_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./FieldData.js */ "../dist/esm/core/FieldData.js");
/* harmony import */ var _Algorithm_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./Algorithm.js */ "../dist/esm/core/Algorithm.js");
/* harmony import */ var _Calculator_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./Calculator.js */ "../dist/esm/core/Calculator.js");
/* harmony import */ var _CellData_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./CellData.js */ "../dist/esm/core/CellData.js");

















var h = {
  VolumeRepresentation: _VolumeRepresentation_js__WEBPACK_IMPORTED_MODULE_0__["default"],
  SliceRepresentation: _SliceRepresentation_js__WEBPACK_IMPORTED_MODULE_1__["default"],
  VolumeController: _VolumeController_js__WEBPACK_IMPORTED_MODULE_2__["default"],
  PointData: _PointData_js__WEBPACK_IMPORTED_MODULE_3__["default"],
  PolyData: _PolyData_js__WEBPACK_IMPORTED_MODULE_4__["default"],
  Reader: _Reader_js__WEBPACK_IMPORTED_MODULE_5__["default"],
  ShareDataSet: _ShareDataSet_js__WEBPACK_IMPORTED_MODULE_6__["default"],
  View: _View_js__WEBPACK_IMPORTED_MODULE_7__["default"],
  GeometryRepresentation: _GeometryRepresentation_js__WEBPACK_IMPORTED_MODULE_8__["default"],
  Geometry2DRepresentation: _Geometry2DRepresentation_js__WEBPACK_IMPORTED_MODULE_9__["default"],
  GlyphRepresentation: _GlyphRepresentation_js__WEBPACK_IMPORTED_MODULE_10__["default"],
  ImageData: _ImageData_js__WEBPACK_IMPORTED_MODULE_11__["default"],
  DataArray: _DataArray_js__WEBPACK_IMPORTED_MODULE_12__["default"],
  FieldData: _FieldData_js__WEBPACK_IMPORTED_MODULE_13__["default"],
  Algorithm: _Algorithm_js__WEBPACK_IMPORTED_MODULE_14__["default"],
  Calculator: _Calculator_js__WEBPACK_IMPORTED_MODULE_15__["default"],
  CellData: _CellData_js__WEBPACK_IMPORTED_MODULE_16__["default"]
};


/***/ }),

/***/ "../dist/esm/index.js":
/*!****************************!*\
  !*** ../dist/esm/index.js ***!
  \****************************/
/*! exports provided: Algorithm, Calculator, CellData, Contexts, DataArray, FieldData, Geometry2DRepresentation, GeometryRepresentation, GlyphRepresentation, ImageData, PointCloudRepresentation, PointData, PolyData, Reader, ShareDataSet, SliceRepresentation, View, VolumeController, VolumeDataRepresentation, VolumeRepresentation, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Algorithm", function() { return D; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Calculator", function() { return F; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CellData", function() { return O; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Contexts", function() { return I; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DataArray", function() { return R; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FieldData", function() { return d; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Geometry2DRepresentation", function() { return v; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GeometryRepresentation", function() { return u; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GlyphRepresentation", function() { return S; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ImageData", function() { return C; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PointCloudRepresentation", function() { return y; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PointData", function() { return l; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PolyData", function() { return j; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Reader", function() { return m; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ShareDataSet", function() { return c; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SliceRepresentation", function() { return p; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "View", function() { return w; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VolumeController", function() { return k; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VolumeDataRepresentation", function() { return G; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VolumeRepresentation", function() { return n; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return P; });
/* harmony import */ var _kitware_vtk_js_Rendering_OpenGL_Profiles_Volume__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @kitware/vtk.js/Rendering/OpenGL/Profiles/Volume */ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/Profiles/Volume.js");
/* harmony import */ var _kitware_vtk_js_Rendering_OpenGL_Profiles_Geometry__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @kitware/vtk.js/Rendering/OpenGL/Profiles/Geometry */ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/Profiles/Geometry.js");
/* harmony import */ var _kitware_vtk_js_Rendering_OpenGL_Profiles_Glyph__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @kitware/vtk.js/Rendering/OpenGL/Profiles/Glyph */ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/Profiles/Glyph.js");
/* harmony import */ var _kitware_vtk_js_IO_Core_DataAccessHelper_HttpDataAccessHelper__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @kitware/vtk.js/IO/Core/DataAccessHelper/HttpDataAccessHelper */ "../node_modules/@kitware/vtk.js/IO/Core/DataAccessHelper/HttpDataAccessHelper.js");
/* harmony import */ var _kitware_vtk_js_IO_Core_DataAccessHelper_JSZipDataAccessHelper__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @kitware/vtk.js/IO/Core/DataAccessHelper/JSZipDataAccessHelper */ "../node_modules/@kitware/vtk.js/IO/Core/DataAccessHelper/JSZipDataAccessHelper.js");
/* harmony import */ var _kitware_vtk_js_Filters_Sources_ConcentricCylinderSource_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @kitware/vtk.js/Filters/Sources/ConcentricCylinderSource.js */ "../node_modules/@kitware/vtk.js/Filters/Sources/ConcentricCylinderSource.js");
/* harmony import */ var _kitware_vtk_js_Filters_Sources_ConeSource_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @kitware/vtk.js/Filters/Sources/ConeSource.js */ "../node_modules/@kitware/vtk.js/Filters/Sources/ConeSource.js");
/* harmony import */ var _kitware_vtk_js_Filters_Sources_CubeSource_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @kitware/vtk.js/Filters/Sources/CubeSource.js */ "../node_modules/@kitware/vtk.js/Filters/Sources/CubeSource.js");
/* harmony import */ var _kitware_vtk_js_Filters_Sources_CylinderSource_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @kitware/vtk.js/Filters/Sources/CylinderSource.js */ "../node_modules/@kitware/vtk.js/Filters/Sources/CylinderSource.js");
/* harmony import */ var _kitware_vtk_js_Filters_Sources_LineSource_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @kitware/vtk.js/Filters/Sources/LineSource.js */ "../node_modules/@kitware/vtk.js/Filters/Sources/LineSource.js");
/* harmony import */ var _kitware_vtk_js_Filters_Sources_PlaneSource_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @kitware/vtk.js/Filters/Sources/PlaneSource.js */ "../node_modules/@kitware/vtk.js/Filters/Sources/PlaneSource.js");
/* harmony import */ var _kitware_vtk_js_Filters_Sources_PointSource_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @kitware/vtk.js/Filters/Sources/PointSource.js */ "../node_modules/@kitware/vtk.js/Filters/Sources/PointSource.js");
/* harmony import */ var _kitware_vtk_js_Filters_Sources_SphereSource_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @kitware/vtk.js/Filters/Sources/SphereSource.js */ "../node_modules/@kitware/vtk.js/Filters/Sources/SphereSource.js");
/* harmony import */ var _kitware_vtk_js_Filters_Core_Cutter_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @kitware/vtk.js/Filters/Core/Cutter.js */ "../node_modules/@kitware/vtk.js/Filters/Core/Cutter.js");
/* harmony import */ var _kitware_vtk_js_Filters_General_WarpScalar_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @kitware/vtk.js/Filters/General/WarpScalar.js */ "../node_modules/@kitware/vtk.js/Filters/General/WarpScalar.js");
/* harmony import */ var _kitware_vtk_js_Filters_General_TubeFilter_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @kitware/vtk.js/Filters/General/TubeFilter.js */ "../node_modules/@kitware/vtk.js/Filters/General/TubeFilter.js");
/* harmony import */ var _kitware_vtk_js_IO_Geometry_PLYReader_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @kitware/vtk.js/IO/Geometry/PLYReader.js */ "../node_modules/@kitware/vtk.js/IO/Geometry/PLYReader.js");
/* harmony import */ var _kitware_vtk_js_IO_Geometry_STLReader_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @kitware/vtk.js/IO/Geometry/STLReader.js */ "../node_modules/@kitware/vtk.js/IO/Geometry/STLReader.js");
/* harmony import */ var _kitware_vtk_js_IO_Misc_ElevationReader_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @kitware/vtk.js/IO/Misc/ElevationReader.js */ "../node_modules/@kitware/vtk.js/IO/Misc/ElevationReader.js");
/* harmony import */ var _kitware_vtk_js_IO_Misc_OBJReader_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @kitware/vtk.js/IO/Misc/OBJReader.js */ "../node_modules/@kitware/vtk.js/IO/Misc/OBJReader.js");
/* harmony import */ var _kitware_vtk_js_IO_Misc_PDBReader_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @kitware/vtk.js/IO/Misc/PDBReader.js */ "../node_modules/@kitware/vtk.js/IO/Misc/PDBReader.js");
/* harmony import */ var _kitware_vtk_js_IO_XML_XMLImageDataReader_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @kitware/vtk.js/IO/XML/XMLImageDataReader.js */ "../node_modules/@kitware/vtk.js/IO/XML/XMLImageDataReader.js");
/* harmony import */ var _kitware_vtk_js_IO_XML_XMLPolyDataReader_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! @kitware/vtk.js/IO/XML/XMLPolyDataReader.js */ "../node_modules/@kitware/vtk.js/IO/XML/XMLPolyDataReader.js");
/* harmony import */ var _core_index_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./core/index.js */ "../dist/esm/core/index.js");
/* harmony import */ var _representations_index_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./representations/index.js */ "../dist/esm/representations/index.js");
/* harmony import */ var _core_View_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./core/View.js */ "../dist/esm/core/View.js");


























var n = _core_index_js__WEBPACK_IMPORTED_MODULE_23__["default"].VolumeRepresentation,
    p = _core_index_js__WEBPACK_IMPORTED_MODULE_23__["default"].SliceRepresentation,
    k = _core_index_js__WEBPACK_IMPORTED_MODULE_23__["default"].VolumeController,
    l = _core_index_js__WEBPACK_IMPORTED_MODULE_23__["default"].PointData,
    j = _core_index_js__WEBPACK_IMPORTED_MODULE_23__["default"].PolyData,
    m = _core_index_js__WEBPACK_IMPORTED_MODULE_23__["default"].Reader,
    c = _core_index_js__WEBPACK_IMPORTED_MODULE_23__["default"].ShareDataSet,
    w = _core_index_js__WEBPACK_IMPORTED_MODULE_23__["default"].View,
    u = _core_index_js__WEBPACK_IMPORTED_MODULE_23__["default"].GeometryRepresentation,
    v = _core_index_js__WEBPACK_IMPORTED_MODULE_23__["default"].Geometry2DRepresentation,
    S = _core_index_js__WEBPACK_IMPORTED_MODULE_23__["default"].GlyphRepresentation,
    C = _core_index_js__WEBPACK_IMPORTED_MODULE_23__["default"].ImageData,
    R = _core_index_js__WEBPACK_IMPORTED_MODULE_23__["default"].DataArray,
    d = _core_index_js__WEBPACK_IMPORTED_MODULE_23__["default"].FieldData,
    D = _core_index_js__WEBPACK_IMPORTED_MODULE_23__["default"].Algorithm,
    F = _core_index_js__WEBPACK_IMPORTED_MODULE_23__["default"].Calculator,
    O = _core_index_js__WEBPACK_IMPORTED_MODULE_23__["default"].CellData,
    y = _representations_index_js__WEBPACK_IMPORTED_MODULE_24__["default"].PointCloudRepresentation,
    G = _representations_index_js__WEBPACK_IMPORTED_MODULE_24__["default"].VolumeDataRepresentation,
    I = {
  ViewContext: _core_View_js__WEBPACK_IMPORTED_MODULE_25__["ViewContext"],
  RepresentationContext: _core_View_js__WEBPACK_IMPORTED_MODULE_25__["RepresentationContext"],
  DataSetContext: _core_View_js__WEBPACK_IMPORTED_MODULE_25__["DataSetContext"],
  FieldsContext: _core_View_js__WEBPACK_IMPORTED_MODULE_25__["FieldsContext"],
  DownstreamContext: _core_View_js__WEBPACK_IMPORTED_MODULE_25__["DownstreamContext"]
},
    P = {
  Core: _core_index_js__WEBPACK_IMPORTED_MODULE_23__["default"],
  Representations: _representations_index_js__WEBPACK_IMPORTED_MODULE_24__["default"],
  Contexts: I
};


/***/ }),

/***/ "../dist/esm/representations/PointCloudRepresentation.js":
/*!***************************************************************!*\
  !*** ../dist/esm/representations/PointCloudRepresentation.js ***!
  \***************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return l; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! prop-types */ "prop-types");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _core_GeometryRepresentation_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/GeometryRepresentation.js */ "../dist/esm/core/GeometryRepresentation.js");
/* harmony import */ var _core_PolyData_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/PolyData.js */ "../dist/esm/core/PolyData.js");
/* harmony import */ var _core_PointData_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../core/PointData.js */ "../dist/esm/core/PointData.js");
/* harmony import */ var _core_DataArray_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../core/DataArray.js */ "../dist/esm/core/DataArray.js");







function l(a) {
  var l = 0,
      c = null,
      n = null;
  return a.rgb && (c = a.rgb, l = 3, n = "Uint8Array"), a.rgba && (c = a.rgb, l = 4, n = "Uint8Array"), a.scalars && (c = a.scalars, l = 1, n = "Float32Array"), console.log("nbComponents", l), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_core_GeometryRepresentation_js__WEBPACK_IMPORTED_MODULE_2__["default"], {
    id: a.id,
    colorMapPreset: a.colorMapPreset,
    colorDataRange: a.colorDataRange,
    property: a.property,
    showCubeAxes: a.showCubeAxes,
    cubeAxesStyle: a.cubeAxesStyle,
    showScalarBar: a.showScalarBar,
    scalarBarTitle: a.scalarBarTitle,
    scalarBarStyle: a.scalarBarStyle
  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_core_PolyData_js__WEBPACK_IMPORTED_MODULE_3__["default"], {
    points: a.xyz,
    connectivity: "points"
  }, l && react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_core_PointData_js__WEBPACK_IMPORTED_MODULE_4__["default"], null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_core_DataArray_js__WEBPACK_IMPORTED_MODULE_5__["default"], {
    registration: "setScalars",
    numberOfComponents: l,
    values: c,
    type: n
  }))));
}

l.defaultProps = {
  xyz: [0, 0, 0],
  colorMapPreset: "erdc_rainbow_bright",
  colorDataRange: [0, 1],
  showCubeAxes: !1,
  showScalarBar: !1,
  scalarBarTitle: ""
}, l.propTypes = {
  id: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string,
  xyz: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.arrayOf(prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number),
  rgb: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.arrayOf(prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number),
  rgba: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.arrayOf(prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number),
  scalars: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.arrayOf(prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number),
  colorMapPreset: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string,
  colorDataRange: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.arrayOf(prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number),
  property: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.object,
  showCubeAxes: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.bool,
  cubeAxesStyle: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.object,
  showScalarBar: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.bool,
  scalarBarTitle: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string,
  scalarBarStyle: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.object
};


/***/ }),

/***/ "../dist/esm/representations/VolumeDataRepresentation.js":
/*!***************************************************************!*\
  !*** ../dist/esm/representations/VolumeDataRepresentation.js ***!
  \***************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return s; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! prop-types */ "prop-types");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _core_VolumeRepresentation_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/VolumeRepresentation.js */ "../dist/esm/core/VolumeRepresentation.js");
/* harmony import */ var _core_ImageData_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/ImageData.js */ "../dist/esm/core/ImageData.js");
/* harmony import */ var _core_PointData_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../core/PointData.js */ "../dist/esm/core/PointData.js");
/* harmony import */ var _core_DataArray_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../core/DataArray.js */ "../dist/esm/core/DataArray.js");
/* harmony import */ var _core_VolumeController_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../core/VolumeController.js */ "../dist/esm/core/VolumeController.js");








function s(e) {
  var s = 0,
      p = null,
      m = null;
  return e.rgb && (p = e.rgb, s = 3, m = "Uint8Array"), e.rgba && (p = e.rgb, s = 4, m = "Uint8Array"), e.scalars && (p = e.scalars, s = 1, m = e.scalarsType), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_core_VolumeRepresentation_js__WEBPACK_IMPORTED_MODULE_2__["default"], {
    id: e.id,
    colorMapPreset: e.colorMapPreset,
    colorDataRange: e.colorDataRange,
    property: e.property,
    mapper: e.mapper,
    volume: e.volume
  }, e.volumeController && react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_core_VolumeController_js__WEBPACK_IMPORTED_MODULE_6__["default"], {
    rescaleColorMap: e.rescaleColorMap,
    size: e.controllerSize
  }), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_core_ImageData_js__WEBPACK_IMPORTED_MODULE_3__["default"], {
    dimensions: e.dimensions,
    origin: e.origin,
    spacing: e.spacing
  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_core_PointData_js__WEBPACK_IMPORTED_MODULE_4__["default"], null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_core_DataArray_js__WEBPACK_IMPORTED_MODULE_5__["default"], {
    registration: "setScalars",
    numberOfComponents: s,
    values: p,
    type: m
  }))));
}

s.defaultProps = {
  scalarsType: "Float32Array",
  colorMapPreset: "erdc_rainbow_bright",
  colorDataRange: "auto",
  volumeController: !0,
  rescaleColorMap: !0,
  controllerSize: [400, 150]
}, s.propTypes = {
  id: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string,
  dimensions: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.arrayOf(prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number),
  spacing: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.arrayOf(prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number),
  origin: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.arrayOf(prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number),
  rgb: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.arrayOf(prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number),
  rgba: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.arrayOf(prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number),
  scalars: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.arrayOf(prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number),
  scalarsType: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string,
  mapper: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.object,
  volume: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.object,
  property: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.object,
  colorMapPreset: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string,
  volumeController: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.bool,
  controllerSize: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.arrayOf(prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number),
  rescaleColorMap: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.bool,
  colorDataRange: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.arrayOf(prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number), prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string])
};


/***/ }),

/***/ "../dist/esm/representations/index.js":
/*!********************************************!*\
  !*** ../dist/esm/representations/index.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return o; });
/* harmony import */ var _PointCloudRepresentation_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./PointCloudRepresentation.js */ "../dist/esm/representations/PointCloudRepresentation.js");
/* harmony import */ var _VolumeDataRepresentation_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./VolumeDataRepresentation.js */ "../dist/esm/representations/VolumeDataRepresentation.js");


var o = {
  PointCloudRepresentation: _PointCloudRepresentation_js__WEBPACK_IMPORTED_MODULE_0__["default"],
  VolumeDataRepresentation: _VolumeDataRepresentation_js__WEBPACK_IMPORTED_MODULE_1__["default"]
};


/***/ }),

/***/ "../dist/esm/utils.js":
/*!****************************!*\
  !*** ../dist/esm/utils.js ***!
  \****************************/
/*! exports provided: arrayEquals, isArrayLike, smartEqualsShallow, toTypedArray, vec2Equals */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "arrayEquals", function() { return f; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isArrayLike", function() { return o; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "smartEqualsShallow", function() { return u; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "toTypedArray", function() { return e; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vec2Equals", function() { return i; });
/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "../node_modules/@babel/runtime/helpers/typeof.js");
/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _kitware_vtk_js_Common_Core_Base64_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @kitware/vtk.js/Common/Core/Base64.js */ "../node_modules/@kitware/vtk.js/Common/Core/Base64.js");


var n = {
  int32: Int32Array,
  int16: Int16Array,
  int8: Int8Array,
  uint32: Uint32Array,
  uint16: Uint16Array,
  uint8: Uint8Array,
  float32: Float32Array,
  float64: Float64Array
};

function e(r, e) {
  if (!r) return null;
  if (Array.isArray(r)) return e.from(r);

  if (r.dtype) {
    var i = r.bvals,
        a = r.dtype,
        f = _kitware_vtk_js_Common_Core_Base64_js__WEBPACK_IMPORTED_MODULE_1__["default"].toArrayBuffer(i);
    return new n[a](f);
  }

  return r;
}

function i(r, t) {
  return !(!r || 2 !== r.length || !t || 2 !== t.length) && r[0] === t[0] && r[1] === t[1];
}

function a(r, t) {
  for (var n in r) if (!(n in t) || r[n] !== t[n]) return !1;

  return !0;
}

function f(r, t) {
  if (r.length !== t.length) return !1;

  for (var n = 0; n < r.length; n++) if (r[n] !== t[n]) return !1;

  return !0;
}

function o(r) {
  return Array.isArray(r) || ArrayBuffer.isView(r) && !(r instanceof DataView);
}

function u(t, n) {
  return _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(t) === _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(n) && (o(t) && o(n) ? f(t, n) : "object" === _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(t) && t && n ? a(t, n) && a(n, t) : t === n);
}



/***/ }),

/***/ "../node_modules/@babel/runtime/helpers/arrayLikeToArray.js":
/*!******************************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/arrayLikeToArray.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;

  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }

  return arr2;
}

module.exports = _arrayLikeToArray, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ "../node_modules/@babel/runtime/helpers/arrayWithHoles.js":
/*!****************************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/arrayWithHoles.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}

module.exports = _arrayWithHoles, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ "../node_modules/@babel/runtime/helpers/arrayWithoutHoles.js":
/*!*******************************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/arrayWithoutHoles.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var arrayLikeToArray = __webpack_require__(/*! ./arrayLikeToArray.js */ "../node_modules/@babel/runtime/helpers/arrayLikeToArray.js");

function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) return arrayLikeToArray(arr);
}

module.exports = _arrayWithoutHoles, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ "../node_modules/@babel/runtime/helpers/assertThisInitialized.js":
/*!***********************************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/assertThisInitialized.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

module.exports = _assertThisInitialized, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ "../node_modules/@babel/runtime/helpers/asyncToGenerator.js":
/*!******************************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/asyncToGenerator.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
  try {
    var info = gen[key](arg);
    var value = info.value;
  } catch (error) {
    reject(error);
    return;
  }

  if (info.done) {
    resolve(value);
  } else {
    Promise.resolve(value).then(_next, _throw);
  }
}

function _asyncToGenerator(fn) {
  return function () {
    var self = this,
        args = arguments;
    return new Promise(function (resolve, reject) {
      var gen = fn.apply(self, args);

      function _next(value) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
      }

      function _throw(err) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
      }

      _next(undefined);
    });
  };
}

module.exports = _asyncToGenerator, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ "../node_modules/@babel/runtime/helpers/classCallCheck.js":
/*!****************************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/classCallCheck.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

module.exports = _classCallCheck, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ "../node_modules/@babel/runtime/helpers/construct.js":
/*!***********************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/construct.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var setPrototypeOf = __webpack_require__(/*! ./setPrototypeOf.js */ "../node_modules/@babel/runtime/helpers/setPrototypeOf.js");

var isNativeReflectConstruct = __webpack_require__(/*! ./isNativeReflectConstruct.js */ "../node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js");

function _construct(Parent, args, Class) {
  if (isNativeReflectConstruct()) {
    module.exports = _construct = Reflect.construct, module.exports.__esModule = true, module.exports["default"] = module.exports;
  } else {
    module.exports = _construct = function _construct(Parent, args, Class) {
      var a = [null];
      a.push.apply(a, args);
      var Constructor = Function.bind.apply(Parent, a);
      var instance = new Constructor();
      if (Class) setPrototypeOf(instance, Class.prototype);
      return instance;
    }, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }

  return _construct.apply(null, arguments);
}

module.exports = _construct, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ "../node_modules/@babel/runtime/helpers/createClass.js":
/*!*************************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/createClass.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", {
    writable: false
  });
  return Constructor;
}

module.exports = _createClass, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ "../node_modules/@babel/runtime/helpers/defineProperty.js":
/*!****************************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/defineProperty.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

module.exports = _defineProperty, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ "../node_modules/@babel/runtime/helpers/get.js":
/*!*****************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/get.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var superPropBase = __webpack_require__(/*! ./superPropBase.js */ "../node_modules/@babel/runtime/helpers/superPropBase.js");

function _get() {
  if (typeof Reflect !== "undefined" && Reflect.get) {
    module.exports = _get = Reflect.get, module.exports.__esModule = true, module.exports["default"] = module.exports;
  } else {
    module.exports = _get = function _get(target, property, receiver) {
      var base = superPropBase(target, property);
      if (!base) return;
      var desc = Object.getOwnPropertyDescriptor(base, property);

      if (desc.get) {
        return desc.get.call(arguments.length < 3 ? target : receiver);
      }

      return desc.value;
    }, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }

  return _get.apply(this, arguments);
}

module.exports = _get, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ "../node_modules/@babel/runtime/helpers/getPrototypeOf.js":
/*!****************************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/getPrototypeOf.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _getPrototypeOf(o) {
  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  }, module.exports.__esModule = true, module.exports["default"] = module.exports;
  return _getPrototypeOf(o);
}

module.exports = _getPrototypeOf, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ "../node_modules/@babel/runtime/helpers/inherits.js":
/*!**********************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/inherits.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var setPrototypeOf = __webpack_require__(/*! ./setPrototypeOf.js */ "../node_modules/@babel/runtime/helpers/setPrototypeOf.js");

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  Object.defineProperty(subClass, "prototype", {
    writable: false
  });
  if (superClass) setPrototypeOf(subClass, superClass);
}

module.exports = _inherits, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ "../node_modules/@babel/runtime/helpers/isNativeFunction.js":
/*!******************************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/isNativeFunction.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _isNativeFunction(fn) {
  return Function.toString.call(fn).indexOf("[native code]") !== -1;
}

module.exports = _isNativeFunction, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ "../node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js":
/*!**************************************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;

  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

module.exports = _isNativeReflectConstruct, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ "../node_modules/@babel/runtime/helpers/iterableToArray.js":
/*!*****************************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/iterableToArray.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _iterableToArray(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}

module.exports = _iterableToArray, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ "../node_modules/@babel/runtime/helpers/iterableToArrayLimit.js":
/*!**********************************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/iterableToArrayLimit.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _iterableToArrayLimit(arr, i) {
  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];

  if (_i == null) return;
  var _arr = [];
  var _n = true;
  var _d = false;

  var _s, _e;

  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);

      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }

  return _arr;
}

module.exports = _iterableToArrayLimit, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ "../node_modules/@babel/runtime/helpers/nonIterableRest.js":
/*!*****************************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/nonIterableRest.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

module.exports = _nonIterableRest, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ "../node_modules/@babel/runtime/helpers/nonIterableSpread.js":
/*!*******************************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/nonIterableSpread.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

module.exports = _nonIterableSpread, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ "../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js":
/*!***************************************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _typeof = __webpack_require__(/*! ./typeof.js */ "../node_modules/@babel/runtime/helpers/typeof.js")["default"];

var assertThisInitialized = __webpack_require__(/*! ./assertThisInitialized.js */ "../node_modules/@babel/runtime/helpers/assertThisInitialized.js");

function _possibleConstructorReturn(self, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
  } else if (call !== void 0) {
    throw new TypeError("Derived constructors may only return object or undefined");
  }

  return assertThisInitialized(self);
}

module.exports = _possibleConstructorReturn, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ "../node_modules/@babel/runtime/helpers/setPrototypeOf.js":
/*!****************************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/setPrototypeOf.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _setPrototypeOf(o, p) {
  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  }, module.exports.__esModule = true, module.exports["default"] = module.exports;
  return _setPrototypeOf(o, p);
}

module.exports = _setPrototypeOf, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ "../node_modules/@babel/runtime/helpers/slicedToArray.js":
/*!***************************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/slicedToArray.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var arrayWithHoles = __webpack_require__(/*! ./arrayWithHoles.js */ "../node_modules/@babel/runtime/helpers/arrayWithHoles.js");

var iterableToArrayLimit = __webpack_require__(/*! ./iterableToArrayLimit.js */ "../node_modules/@babel/runtime/helpers/iterableToArrayLimit.js");

var unsupportedIterableToArray = __webpack_require__(/*! ./unsupportedIterableToArray.js */ "../node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js");

var nonIterableRest = __webpack_require__(/*! ./nonIterableRest.js */ "../node_modules/@babel/runtime/helpers/nonIterableRest.js");

function _slicedToArray(arr, i) {
  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();
}

module.exports = _slicedToArray, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ "../node_modules/@babel/runtime/helpers/superPropBase.js":
/*!***************************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/superPropBase.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var getPrototypeOf = __webpack_require__(/*! ./getPrototypeOf.js */ "../node_modules/@babel/runtime/helpers/getPrototypeOf.js");

function _superPropBase(object, property) {
  while (!Object.prototype.hasOwnProperty.call(object, property)) {
    object = getPrototypeOf(object);
    if (object === null) break;
  }

  return object;
}

module.exports = _superPropBase, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ "../node_modules/@babel/runtime/helpers/toConsumableArray.js":
/*!*******************************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/toConsumableArray.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var arrayWithoutHoles = __webpack_require__(/*! ./arrayWithoutHoles.js */ "../node_modules/@babel/runtime/helpers/arrayWithoutHoles.js");

var iterableToArray = __webpack_require__(/*! ./iterableToArray.js */ "../node_modules/@babel/runtime/helpers/iterableToArray.js");

var unsupportedIterableToArray = __webpack_require__(/*! ./unsupportedIterableToArray.js */ "../node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js");

var nonIterableSpread = __webpack_require__(/*! ./nonIterableSpread.js */ "../node_modules/@babel/runtime/helpers/nonIterableSpread.js");

function _toConsumableArray(arr) {
  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();
}

module.exports = _toConsumableArray, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ "../node_modules/@babel/runtime/helpers/typeof.js":
/*!********************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/typeof.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _typeof(obj) {
  "@babel/helpers - typeof";

  return (module.exports = _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) {
    return typeof obj;
  } : function (obj) {
    return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
  }, module.exports.__esModule = true, module.exports["default"] = module.exports), _typeof(obj);
}

module.exports = _typeof, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ "../node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js":
/*!****************************************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var arrayLikeToArray = __webpack_require__(/*! ./arrayLikeToArray.js */ "../node_modules/@babel/runtime/helpers/arrayLikeToArray.js");

function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);
}

module.exports = _unsupportedIterableToArray, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ "../node_modules/@babel/runtime/helpers/wrapNativeSuper.js":
/*!*****************************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/wrapNativeSuper.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var getPrototypeOf = __webpack_require__(/*! ./getPrototypeOf.js */ "../node_modules/@babel/runtime/helpers/getPrototypeOf.js");

var setPrototypeOf = __webpack_require__(/*! ./setPrototypeOf.js */ "../node_modules/@babel/runtime/helpers/setPrototypeOf.js");

var isNativeFunction = __webpack_require__(/*! ./isNativeFunction.js */ "../node_modules/@babel/runtime/helpers/isNativeFunction.js");

var construct = __webpack_require__(/*! ./construct.js */ "../node_modules/@babel/runtime/helpers/construct.js");

function _wrapNativeSuper(Class) {
  var _cache = typeof Map === "function" ? new Map() : undefined;

  module.exports = _wrapNativeSuper = function _wrapNativeSuper(Class) {
    if (Class === null || !isNativeFunction(Class)) return Class;

    if (typeof Class !== "function") {
      throw new TypeError("Super expression must either be null or a function");
    }

    if (typeof _cache !== "undefined") {
      if (_cache.has(Class)) return _cache.get(Class);

      _cache.set(Class, Wrapper);
    }

    function Wrapper() {
      return construct(Class, arguments, getPrototypeOf(this).constructor);
    }

    Wrapper.prototype = Object.create(Class.prototype, {
      constructor: {
        value: Wrapper,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
    return setPrototypeOf(Wrapper, Class);
  }, module.exports.__esModule = true, module.exports["default"] = module.exports;
  return _wrapNativeSuper(Class);
}

module.exports = _wrapNativeSuper, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ "../node_modules/@babel/runtime/regenerator/index.js":
/*!***********************************************************!*\
  !*** ../node_modules/@babel/runtime/regenerator/index.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! regenerator-runtime */ "../node_modules/regenerator-runtime/runtime.js");


/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Common/Core/Base64.js":
/*!*************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Common/Core/Base64.js ***!
  \*************************************************************/
/*! exports provided: default, fromArrayBuffer, toArrayBuffer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Base64; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromArrayBuffer", function() { return fromArrayBuffer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "toArrayBuffer", function() { return toArrayBuffer; });
/* eslint-disable no-bitwise */
// ----------------------------------------------------------------------------
// Decoding infrastructure
// ----------------------------------------------------------------------------
var REVERSE_LOOKUP = [];
REVERSE_LOOKUP['-'.charCodeAt(0)] = 62;
REVERSE_LOOKUP['_'.charCodeAt(0)] = 63;
var BASE64_CODE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';

for (var i = 0; i < BASE64_CODE.length; i++) {
  REVERSE_LOOKUP[BASE64_CODE.charCodeAt(i)] = i;
} // ----------------------------------------------------------------------------
// Base64 analysis
// ----------------------------------------------------------------------------


function isValidChar(c) {
  return REVERSE_LOOKUP[c.charCodeAt(0)] !== undefined;
}

function extractChunks(b64Str) {
  var strSize = b64Str.length;
  var chunks = [];
  var currentChunk = null;

  for (var _i = 0; _i < strSize; _i++) {
    if (isValidChar(b64Str[_i])) {
      if (!currentChunk) {
        currentChunk = {
          start: _i,
          count: 0
        };
      }

      currentChunk.count++;
      currentChunk.end = _i;
    } else if (b64Str[_i] === '=' && currentChunk) {
      // End of chunk (found padding char)
      chunks.push(currentChunk);
      currentChunk = null;
    }
  }

  if (currentChunk) {
    chunks.push(currentChunk);
  }

  return chunks;
}

function writeChunk(b64Str, chunk, dstOffset, uint8) {
  var start = chunk.start,
      count = chunk.count;
  var remain = count % 4;
  var fourCharProcessCount = Math.floor(count / 4);
  var charIdx = start;
  var tmp = null;
  var offset = dstOffset; // Handle 4=>3

  for (var _i2 = 0; _i2 < fourCharProcessCount; _i2++) {
    while (!isValidChar(b64Str[charIdx])) {
      charIdx++;
    }

    tmp = REVERSE_LOOKUP[b64Str.charCodeAt(charIdx++)] << 18;

    while (!isValidChar(b64Str[charIdx])) {
      charIdx++;
    }

    tmp |= REVERSE_LOOKUP[b64Str.charCodeAt(charIdx++)] << 12;

    while (!isValidChar(b64Str[charIdx])) {
      charIdx++;
    }

    tmp |= REVERSE_LOOKUP[b64Str.charCodeAt(charIdx++)] << 6;

    while (!isValidChar(b64Str[charIdx])) {
      charIdx++;
    }

    tmp |= REVERSE_LOOKUP[b64Str.charCodeAt(charIdx++)];
    uint8[offset++] = tmp >> 16 & 0xff;
    uint8[offset++] = tmp >> 8 & 0xff;
    uint8[offset++] = tmp & 0xff;
  } // Handle remain


  switch (remain) {
    case 3:
      while (!isValidChar(b64Str[charIdx])) {
        charIdx++;
      }

      tmp = REVERSE_LOOKUP[b64Str.charCodeAt(charIdx++)] << 10;

      while (!isValidChar(b64Str[charIdx])) {
        charIdx++;
      }

      tmp |= REVERSE_LOOKUP[b64Str.charCodeAt(charIdx++)] << 4;

      while (!isValidChar(b64Str[charIdx])) {
        charIdx++;
      }

      tmp |= REVERSE_LOOKUP[b64Str.charCodeAt(charIdx++)] >> 2;
      uint8[offset++] = tmp >> 8 & 0xff;
      uint8[offset++] = tmp & 0xff;
      break;

    case 2:
      while (!isValidChar(b64Str[charIdx])) {
        charIdx++;
      }

      tmp = REVERSE_LOOKUP[b64Str.charCodeAt(charIdx++)] << 2;

      while (!isValidChar(b64Str[charIdx])) {
        charIdx++;
      }

      tmp |= REVERSE_LOOKUP[b64Str.charCodeAt(charIdx++)] >> 4;
      uint8[offset++] = tmp & 0xff;
      break;

    case 1:
      throw new Error('BASE64: remain 1 should not happen');
  }

  return offset;
}

function toArrayBuffer(b64Str) {
  var chunks = extractChunks(b64Str);
  var totalEncodedLength = chunks[chunks.length - 1].end + 1;
  var padding = (4 - totalEncodedLength % 4) % 4; // -length mod 4
  // Any padding chars in the middle of b64Str is to be interpreted as \x00,
  // whereas the terminating padding chars are to be interpreted as literal padding.

  var totalSize = (totalEncodedLength + padding) * 3 / 4 - padding;
  var arrayBuffer = new ArrayBuffer(totalSize);
  var view = new Uint8Array(arrayBuffer);
  var dstOffset = 0;

  for (var _i3 = 0; _i3 < chunks.length; _i3++) {
    dstOffset += writeChunk(b64Str, chunks[_i3], dstOffset, view);
    dstOffset += (4 - chunks[_i3].count % 4) % 4;
  }

  return arrayBuffer;
}

function encodeTriplet(v1, v2, v3) {
  var triplet = (v1 << 16) + (v2 << 8) + v3;
  return BASE64_CODE[triplet >> 18] + BASE64_CODE[triplet >> 12 & 0x3f] + BASE64_CODE[triplet >> 6 & 0x3f] + BASE64_CODE[triplet & 0x3f];
}

function fromArrayBuffer(ab) {
  var uint8 = new Uint8Array(ab);
  var leftoverLength = ab.byteLength % 3;
  var maxTripletIndex = ab.byteLength - leftoverLength;
  var segments = Array(maxTripletIndex / 3);

  for (var _i4 = 0; _i4 < segments.length; _i4++) {
    var bufOffset = _i4 * 3;
    segments[_i4] = encodeTriplet(uint8[bufOffset], uint8[bufOffset + 1], uint8[bufOffset + 2]);
  }

  if (leftoverLength > 0) {
    var segment = encodeTriplet(uint8[maxTripletIndex], uint8[maxTripletIndex + 1] || 0, uint8[maxTripletIndex + 2] || 0);

    if (leftoverLength === 1) {
      segments.push("".concat(segment.substr(0, 2), "=="));
    } else if (leftoverLength === 2) {
      segments.push("".concat(segment.substr(0, 3), "="));
    }
  }

  return segments.join('');
}
var Base64 = {
  toArrayBuffer: toArrayBuffer,
  fromArrayBuffer: fromArrayBuffer
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Common/Core/CellArray.js":
/*!****************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Common/Core/CellArray.js ***!
  \****************************************************************/
/*! exports provided: STATIC, default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "STATIC", function() { return STATIC; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkCellArray$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "../node_modules/@babel/runtime/helpers/defineProperty.js");
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _DataArray_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./DataArray.js */ "../node_modules/@kitware/vtk.js/Common/Core/DataArray.js");
/* harmony import */ var _DataArray_Constants_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./DataArray/Constants.js */ "../node_modules/@kitware/vtk.js/Common/Core/DataArray/Constants.js");





function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
// Global methods
// ----------------------------------------------------------------------------

function extractCellSizes(cellArray) {
  var currentIdx = 0;
  return cellArray.filter(function (value, index) {
    if (index === currentIdx) {
      currentIdx += value + 1;
      return true;
    }

    return false;
  });
}

function getNumberOfCells(cellArray) {
  return extractCellSizes(cellArray).length;
} // ----------------------------------------------------------------------------
// Static API
// ----------------------------------------------------------------------------


var STATIC = {
  extractCellSizes: extractCellSizes,
  getNumberOfCells: getNumberOfCells
}; // ----------------------------------------------------------------------------
// vtkCellArray methods
// ----------------------------------------------------------------------------

function vtkCellArray(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkCellArray');

  publicAPI.getNumberOfCells = function (recompute) {
    if (model.numberOfCells !== undefined && !recompute) {
      return model.numberOfCells;
    }

    model.cellSizes = extractCellSizes(model.values);
    model.numberOfCells = model.cellSizes.length;
    return model.numberOfCells;
  };

  publicAPI.getCellSizes = function (recompute) {
    if (model.cellSizes !== undefined && !recompute) {
      return model.cellSizes;
    }

    model.cellSizes = extractCellSizes(model.values);
    return model.cellSizes;
  };

  var superSetData = publicAPI.setData;

  publicAPI.setData = function (typedArray) {
    superSetData(typedArray, 1);
    model.numberOfCells = undefined;
    model.cellSizes = undefined;
  };
  /**
   * Returns the point indexes at the given location as a subarray.
   */


  publicAPI.getCell = function (loc) {
    var cellLoc = loc;
    var numberOfPoints = model.values[cellLoc++];
    return model.values.subarray(cellLoc, cellLoc + numberOfPoints);
  };
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


function defaultValues(initialValues) {
  return _objectSpread({
    empty: true,
    numberOfComponents: 1,
    dataType: _DataArray_Constants_js__WEBPACK_IMPORTED_MODULE_3__["VtkDataTypes"].UNSIGNED_INT
  }, initialValues);
} // ----------------------------------------------------------------------------


function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  _DataArray_js__WEBPACK_IMPORTED_MODULE_2__["default"].extend(publicAPI, model, defaultValues(initialValues));
  vtkCellArray(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].newInstance(extend, 'vtkCellArray'); // ----------------------------------------------------------------------------

var vtkCellArray$1 = _objectSpread({
  newInstance: newInstance,
  extend: extend
}, STATIC);




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Common/Core/ClassHierarchy.js":
/*!*********************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Common/Core/ClassHierarchy.js ***!
  \*********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return ClassHierarchy; });
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "../node_modules/@babel/runtime/helpers/toConsumableArray.js");
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js");
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/get */ "../node_modules/@babel/runtime/helpers/get.js");
/* harmony import */ var _babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ "../node_modules/@babel/runtime/helpers/inherits.js");
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js");
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "../node_modules/@babel/runtime/helpers/getPrototypeOf.js");
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _babel_runtime_helpers_wrapNativeSuper__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @babel/runtime/helpers/wrapNativeSuper */ "../node_modules/@babel/runtime/helpers/wrapNativeSuper.js");
/* harmony import */ var _babel_runtime_helpers_wrapNativeSuper__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_wrapNativeSuper__WEBPACK_IMPORTED_MODULE_7__);









function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6___default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6___default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5___default()(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

var ClassHierarchy = /*#__PURE__*/function (_Array) {
  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4___default()(ClassHierarchy, _Array);

  var _super = _createSuper(ClassHierarchy);

  function ClassHierarchy() {
    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default()(this, ClassHierarchy);

    return _super.apply(this, arguments);
  }

  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2___default()(ClassHierarchy, [{
    key: "push",
    value: function push() {
      var _this = this,
          _get2;

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      // no perf issue since args.length should be small
      var newArgs = args.filter(function (arg) {
        return !_this.includes(arg);
      });
      return (_get2 = _babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_3___default()(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6___default()(ClassHierarchy.prototype), "push", this)).call.apply(_get2, [this].concat(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(newArgs)));
    }
  }]);

  return ClassHierarchy;
}( /*#__PURE__*/_babel_runtime_helpers_wrapNativeSuper__WEBPACK_IMPORTED_MODULE_7___default()(Array));




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Common/Core/DataArray.js":
/*!****************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Common/Core/DataArray.js ***!
  \****************************************************************/
/*! exports provided: STATIC, default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "STATIC", function() { return STATIC; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkDataArray$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "../node_modules/@babel/runtime/helpers/defineProperty.js");
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _DataArray_Constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./DataArray/Constants.js */ "../node_modules/@kitware/vtk.js/Common/Core/DataArray/Constants.js");
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _Math_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Math/index.js */ "../node_modules/@kitware/vtk.js/Common/Core/Math/index.js");





function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var DefaultDataType = _DataArray_Constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].DefaultDataType;
var TUPLE_HOLDER = []; // ----------------------------------------------------------------------------
// Global methods
// ----------------------------------------------------------------------------
// Original source from https://www.npmjs.com/package/compute-range
// Modified to accept type arrays

function fastComputeRange(arr, offset, numberOfComponents) {
  var len = arr.length;
  var min;
  var max;
  var x;
  var i;

  if (len === 0) {
    return {
      min: Number.MAX_VALUE,
      max: -Number.MAX_VALUE
    };
  }

  min = arr[offset];
  max = min;

  for (i = offset; i < len; i += numberOfComponents) {
    x = arr[i];

    if (x < min) {
      min = x;
    } else if (x > max) {
      max = x;
    }
  }

  return {
    min: min,
    max: max
  };
}
/**
 * @deprecated please use fastComputeRange instead
 */


function createRangeHelper() {
  var min = Number.MAX_VALUE;
  var max = -Number.MAX_VALUE;
  var count = 0;
  var sum = 0;
  return {
    add: function add(value) {
      if (min > value) {
        min = value;
      }

      if (max < value) {
        max = value;
      }

      count++;
      sum += value;
    },
    get: function get() {
      return {
        min: min,
        max: max,
        count: count,
        sum: sum,
        mean: sum / count
      };
    },
    getRange: function getRange() {
      return {
        min: min,
        max: max
      };
    }
  };
}

function computeRange(values) {
  var component = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
  var numberOfComponents = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;

  if (component < 0 && numberOfComponents > 1) {
    // Compute magnitude
    var size = values.length;
    var numberOfValues = size / numberOfComponents;
    var data = new Float64Array(numberOfValues);

    for (var i = 0, j = 0; i < numberOfValues; ++i) {
      var _i;

      for (var nextJ = j + numberOfComponents; j < nextJ; ++j) {
        data[i] += values[j] * values[j];
      }

      _i = i, data[_i] = Math.pow(data[_i], 0.5);
    }

    return fastComputeRange(data, 0, 1);
  }

  return fastComputeRange(values, component < 0 ? 0 : component, numberOfComponents);
}

function ensureRangeSize(rangeArray) {
  var size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
  var ranges = rangeArray || []; // Pad ranges with null value to get the

  while (ranges.length <= size) {
    ranges.push(null);
  }

  return ranges;
}

function getDataType(typedArray) {
  // Expects toString() to return "[object ...Array]"
  return Object.prototype.toString.call(typedArray).slice(8, -1);
}

function getMaxNorm(normArray) {
  var numComps = normArray.getNumberOfComponents();
  var maxNorm = 0.0;

  for (var i = 0; i < normArray.getNumberOfTuples(); ++i) {
    var norm$1 = Object(_Math_index_js__WEBPACK_IMPORTED_MODULE_3__["n"])(normArray.getTuple(i), numComps);

    if (norm$1 > maxNorm) {
      maxNorm = norm$1;
    }
  }

  return maxNorm;
} // ----------------------------------------------------------------------------
// Static API
// ----------------------------------------------------------------------------


var STATIC = {
  computeRange: computeRange,
  createRangeHelper: createRangeHelper,
  fastComputeRange: fastComputeRange,
  getDataType: getDataType,
  getMaxNorm: getMaxNorm
}; // ----------------------------------------------------------------------------
// vtkDataArray methods
// ----------------------------------------------------------------------------

function vtkDataArray(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkDataArray');

  function dataChange() {
    model.ranges = null;
    publicAPI.modified();
  }

  publicAPI.getElementComponentSize = function () {
    return model.values.BYTES_PER_ELEMENT;
  }; // Description:
  // Return the data component at the location specified by tupleIdx and
  // compIdx.


  publicAPI.getComponent = function (tupleIdx) {
    var compIdx = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
    return model.values[tupleIdx * model.numberOfComponents + compIdx];
  }; // Description:
  // Set the data component at the location specified by tupleIdx and compIdx
  // to value.
  // Note that i is less than NumberOfTuples and j is less than
  //  NumberOfComponents. Make sure enough memory has been allocated
  // (use SetNumberOfTuples() and SetNumberOfComponents()).


  publicAPI.setComponent = function (tupleIdx, compIdx, value) {
    if (value !== model.values[tupleIdx * model.numberOfComponents + compIdx]) {
      model.values[tupleIdx * model.numberOfComponents + compIdx] = value;
      dataChange();
    }
  };

  publicAPI.getData = function () {
    return model.values;
  };

  publicAPI.getRange = function () {
    var componentIndex = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : -1;
    var rangeIdx = componentIndex < 0 ? model.numberOfComponents : componentIndex;
    var range = null;

    if (!model.ranges) {
      model.ranges = ensureRangeSize(model.ranges, model.numberOfComponents);
    }

    range = model.ranges[rangeIdx];

    if (range) {
      model.rangeTuple[0] = range.min;
      model.rangeTuple[1] = range.max;
      return model.rangeTuple;
    } // Need to compute ranges...


    range = computeRange(model.values, componentIndex, model.numberOfComponents);
    model.ranges[rangeIdx] = range;
    model.rangeTuple[0] = range.min;
    model.rangeTuple[1] = range.max;
    return model.rangeTuple;
  };

  publicAPI.setRange = function (rangeValue, componentIndex) {
    if (!model.ranges) {
      model.ranges = ensureRangeSize(model.ranges, model.numberOfComponents);
    }

    var range = {
      min: rangeValue.min,
      max: rangeValue.max
    };
    model.ranges[componentIndex] = range;
    model.rangeTuple[0] = range.min;
    model.rangeTuple[1] = range.max;
    return model.rangeTuple;
  };

  publicAPI.setTuple = function (idx, tuple) {
    var offset = idx * model.numberOfComponents;

    for (var i = 0; i < model.numberOfComponents; i++) {
      model.values[offset + i] = tuple[i];
    }
  };

  publicAPI.getTuple = function (idx) {
    var tupleToFill = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : TUPLE_HOLDER;
    var numberOfComponents = model.numberOfComponents || 1;

    if (tupleToFill.length !== numberOfComponents) {
      tupleToFill.length = numberOfComponents;
    }

    var offset = idx * numberOfComponents; // Check most common component sizes first
    // to avoid doing a for loop if possible

    if (numberOfComponents === 1) {
      tupleToFill[0] = model.values[offset];
    } else if (numberOfComponents === 2) {
      tupleToFill[0] = model.values[offset];
      tupleToFill[1] = model.values[offset + 1];
    } else if (numberOfComponents === 3) {
      tupleToFill[0] = model.values[offset];
      tupleToFill[1] = model.values[offset + 1];
      tupleToFill[2] = model.values[offset + 2];
    } else if (numberOfComponents === 4) {
      tupleToFill[0] = model.values[offset];
      tupleToFill[1] = model.values[offset + 1];
      tupleToFill[2] = model.values[offset + 2];
      tupleToFill[3] = model.values[offset + 3];
    } else {
      for (var i = 0; i < numberOfComponents; i++) {
        tupleToFill[i] = model.values[offset + i];
      }
    }

    return tupleToFill;
  };

  publicAPI.getTupleLocation = function () {
    var idx = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;
    return idx * model.numberOfComponents;
  };

  publicAPI.getNumberOfComponents = function () {
    return model.numberOfComponents;
  };

  publicAPI.getNumberOfValues = function () {
    return model.values.length;
  };

  publicAPI.getNumberOfTuples = function () {
    return model.values.length / model.numberOfComponents;
  };

  publicAPI.getDataType = function () {
    return model.dataType;
  };
  /* eslint-disable no-use-before-define */


  publicAPI.newClone = function () {
    return newInstance({
      empty: true,
      name: model.name,
      dataType: model.dataType,
      numberOfComponents: model.numberOfComponents
    });
  };
  /* eslint-enable no-use-before-define */


  publicAPI.getName = function () {
    if (!model.name) {
      publicAPI.modified();
      model.name = "vtkDataArray".concat(publicAPI.getMTime());
    }

    return model.name;
  };

  publicAPI.setData = function (typedArray, numberOfComponents) {
    model.values = typedArray;
    model.size = typedArray.length;
    model.dataType = getDataType(typedArray);

    if (numberOfComponents) {
      model.numberOfComponents = numberOfComponents;
    }

    if (model.size % model.numberOfComponents !== 0) {
      model.numberOfComponents = 1;
    }

    dataChange();
  }; // Override serialization support


  publicAPI.getState = function () {
    var jsonArchive = _objectSpread(_objectSpread({}, model), {}, {
      vtkClass: publicAPI.getClassName()
    }); // Convert typed array to regular array


    jsonArchive.values = Array.from(jsonArchive.values);
    delete jsonArchive.buffer; // Clean any empty data

    Object.keys(jsonArchive).forEach(function (keyName) {
      if (!jsonArchive[keyName]) {
        delete jsonArchive[keyName];
      }
    }); // Sort resulting object by key name

    var sortedObj = {};
    Object.keys(jsonArchive).sort().forEach(function (name) {
      sortedObj[name] = jsonArchive[name];
    }); // Remove mtime

    if (sortedObj.mtime) {
      delete sortedObj.mtime;
    }

    return sortedObj;
  };
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {
  name: '',
  numberOfComponents: 1,
  size: 0,
  dataType: DefaultDataType,
  rangeTuple: [0, 0] // values: null,
  // ranges: null,

}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues);

  if (!model.empty && !model.values && !model.size) {
    throw new TypeError('Cannot create vtkDataArray object without: size > 0, values');
  }

  if (!model.values) {
    model.values = Object(_macros_js__WEBPACK_IMPORTED_MODULE_2__["newTypedArray"])(model.dataType, model.size);
  } else if (Array.isArray(model.values)) {
    model.values = Object(_macros_js__WEBPACK_IMPORTED_MODULE_2__["newTypedArrayFrom"])(model.dataType, model.values);
  }

  if (model.values) {
    model.size = model.values.length;
    model.dataType = getDataType(model.values);
  } // Object methods


  Object(_macros_js__WEBPACK_IMPORTED_MODULE_2__["obj"])(publicAPI, model);
  Object(_macros_js__WEBPACK_IMPORTED_MODULE_2__["set"])(publicAPI, model, ['name', 'numberOfComponents']); // Object specific methods

  vtkDataArray(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = Object(_macros_js__WEBPACK_IMPORTED_MODULE_2__["newInstance"])(extend, 'vtkDataArray'); // ----------------------------------------------------------------------------

var vtkDataArray$1 = _objectSpread(_objectSpread({
  newInstance: newInstance,
  extend: extend
}, STATIC), _DataArray_Constants_js__WEBPACK_IMPORTED_MODULE_1__["default"]);




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Common/Core/DataArray/Constants.js":
/*!**************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Common/Core/DataArray/Constants.js ***!
  \**************************************************************************/
/*! exports provided: DataTypeByteSize, DefaultDataType, VtkDataTypes, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DataTypeByteSize", function() { return DataTypeByteSize; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DefaultDataType", function() { return DefaultDataType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VtkDataTypes", function() { return VtkDataTypes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Constants; });
var DataTypeByteSize = {
  Int8Array: 1,
  Uint8Array: 1,
  Uint8ClampedArray: 1,
  Int16Array: 2,
  Uint16Array: 2,
  Int32Array: 4,
  Uint32Array: 4,
  Float32Array: 4,
  Float64Array: 8
};
var VtkDataTypes = {
  VOID: '',
  // not sure to know what that should be
  CHAR: 'Int8Array',
  SIGNED_CHAR: 'Int8Array',
  UNSIGNED_CHAR: 'Uint8Array',
  SHORT: 'Int16Array',
  UNSIGNED_SHORT: 'Uint16Array',
  INT: 'Int32Array',
  UNSIGNED_INT: 'Uint32Array',
  FLOAT: 'Float32Array',
  DOUBLE: 'Float64Array'
};
var DefaultDataType = VtkDataTypes.FLOAT;
var Constants = {
  DefaultDataType: DefaultDataType,
  DataTypeByteSize: DataTypeByteSize,
  VtkDataTypes: VtkDataTypes
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Common/Core/Endian.js":
/*!*************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Common/Core/Endian.js ***!
  \*************************************************************/
/*! exports provided: ENDIANNESS, default, getEndianness, swapBytes */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ENDIANNESS", function() { return ENDIANNESS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Endian; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getEndianness", function() { return getEndianness; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "swapBytes", function() { return swapBytes; });
function getEndianness() {
  var a = new ArrayBuffer(4);
  var b = new Uint8Array(a);
  var c = new Uint32Array(a);
  b[0] = 0xa1;
  b[1] = 0xb2;
  b[2] = 0xc3;
  b[3] = 0xd4;
  if (c[0] === 0xd4c3b2a1) return 'LittleEndian';
  if (c[0] === 0xa1b2c3d4) return 'BigEndian';
  return null;
}
var ENDIANNESS = getEndianness();
function swapBytes(buffer, wordSize) {
  if (wordSize < 2) {
    return;
  }

  var bytes = new Int8Array(buffer);
  var size = bytes.length;
  var tempBuffer = [];

  for (var i = 0; i < size; i += wordSize) {
    for (var j = 0; j < wordSize; j++) {
      tempBuffer.push(bytes[i + j]);
    }

    for (var _j = 0; _j < wordSize; _j++) {
      bytes[i + _j] = tempBuffer.pop();
    }
  }
}
var Endian = {
  ENDIANNESS: ENDIANNESS,
  getEndianness: getEndianness,
  swapBytes: swapBytes
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Common/Core/HalfFloat.js":
/*!****************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Common/Core/HalfFloat.js ***!
  \****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return HalfFloat; });
/* eslint-disable no-bitwise */
var floatView = new Float32Array(1);
var int32View = new Int32Array(floatView.buffer);
/* eslint-disable no-bitwise */

/* This method is faster than the OpenEXR implementation (very often
 * used, eg. in Ogre), with the additional benefit of rounding, inspired
 * by James Tursa?s half-precision code. */

function toHalf(val) {
  floatView[0] = val;
  var x = int32View[0];
  var bits = x >> 16 & 0x8000;
  /* Get the sign */

  var m = x >> 12 & 0x07ff;
  /* Keep one extra bit for rounding */

  var e = x >> 23 & 0xff;
  /* Using int is faster here */

  /* If zero, or denormal, or exponent underflows too much for a denormal
   * half, return signed zero. */

  if (e < 103) {
    return bits;
  }
  /* If NaN, return NaN. If Inf or exponent overflow, return Inf. */


  if (e > 142) {
    bits |= 0x7c00;
    /* If exponent was 0xff and one mantissa bit was set, it means NaN,
     * not Inf, so make sure we set one mantissa bit too. */

    bits |= (e === 255 ? 0 : 1) && x & 0x007fffff;
    return bits;
  }
  /* If exponent underflows but not too much, return a denormal */


  if (e < 113) {
    m |= 0x0800;
    /* Extra rounding may overflow and set mantissa to 0 and exponent
     * to 1, which is OK. */

    bits |= (m >> 114 - e) + (m >> 113 - e & 1);
    return bits;
  }

  bits |= e - 112 << 10 | m >> 1;
  /* Extra rounding. An overflow will set mantissa to 0 and increment
   * the exponent, which is OK. */

  bits += m & 1;
  return bits;
}

function fromHalf(h) {
  var s = (h & 0x8000) >> 15;
  var e = (h & 0x7c00) >> 10;
  var f = h & 0x03ff;

  if (e === 0) {
    return (s ? -1 : 1) * Math.pow(2, -14) * (f / Math.pow(2, 10));
  }

  if (e === 0x1f) {
    return f ? NaN : (s ? -1 : 1) * Infinity;
  }

  return (s ? -1 : 1) * Math.pow(2, e - 15) * (1 + f / Math.pow(2, 10));
}

var HalfFloat = {
  fromHalf: fromHalf,
  toHalf: toHalf
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Common/Core/LookupTable.js":
/*!******************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Common/Core/LookupTable.js ***!
  \******************************************************************/
/*! exports provided: default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkLookupTable$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _Math_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Math/index.js */ "../node_modules/@kitware/vtk.js/Common/Core/Math/index.js");
/* harmony import */ var _ScalarsToColors_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ScalarsToColors.js */ "../node_modules/@kitware/vtk.js/Common/Core/ScalarsToColors.js");
/* harmony import */ var _ScalarsToColors_Constants_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ScalarsToColors/Constants.js */ "../node_modules/@kitware/vtk.js/Common/Core/ScalarsToColors/Constants.js");
/* harmony import */ var _DataArray_Constants_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./DataArray/Constants.js */ "../node_modules/@kitware/vtk.js/Common/Core/DataArray/Constants.js");






var vtkErrorMacro = _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].vtkErrorMacro; // ----------------------------------------------------------------------------
// Global methods
// ----------------------------------------------------------------------------
// Add module-level functions or api that you want to expose statically via
// the next section...
// ----------------------------------------------------------------------------
// Static API
// ----------------------------------------------------------------------------

var BELOW_RANGE_COLOR_INDEX = 0;
var ABOVE_RANGE_COLOR_INDEX = 1;
var NAN_COLOR_INDEX = 2; // ----------------------------------------------------------------------------
// vtkMyClass methods
// ----------------------------------------------------------------------------

function vtkLookupTable(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkLookupTable'); //----------------------------------------------------------------------------
  // Description:
  // Return true if all of the values defining the mapping have an opacity
  // equal to 1. Default implementation return true.

  publicAPI.isOpaque = function () {
    if (model.opaqueFlagBuildTime.getMTime() < publicAPI.getMTime()) {
      var opaque = true;

      if (model.nanColor[3] < 1.0) {
        opaque = 0;
      }

      if (model.useBelowRangeColor && model.belowRangeColor[3] < 1.0) {
        opaque = 0;
      }

      if (model.useAboveRangeColor && model.aboveRangeColor[3] < 1.0) {
        opaque = 0;
      }

      for (var i = 3; i < model.table.length && opaque; i += 4) {
        if (model.table[i] < 255) {
          opaque = false;
        }
      }

      model.opaqueFlag = opaque;
      model.opaqueFlagBuildTime.modified();
    }

    return model.opaqueFlag;
  };

  publicAPI.usingLogScale = function () {
    return false;
  }; //----------------------------------------------------------------------------


  publicAPI.getNumberOfAvailableColors = function () {
    return model.table.length;
  }; //----------------------------------------------------------------------------
  // Apply shift/scale to the scalar value v and return the index.


  publicAPI.linearIndexLookup = function (v, p) {
    var dIndex = 0;

    if (v < p.range[0]) {
      dIndex = p.maxIndex + BELOW_RANGE_COLOR_INDEX + 1.5;
    } else if (v > p.range[1]) {
      dIndex = p.maxIndex + ABOVE_RANGE_COLOR_INDEX + 1.5;
    } else {
      dIndex = (v + p.shift) * p.scale; // This conditional is needed because when v is very close to
      // p.Range[1], it may map above p.MaxIndex in the linear mapping
      // above.

      dIndex = dIndex < p.maxIndex ? dIndex : p.maxIndex;
    }

    return Math.floor(dIndex);
  };

  publicAPI.linearLookup = function (v, table, p) {
    var index = 0;

    if (Object(_Math_index_js__WEBPACK_IMPORTED_MODULE_1__["i"])(v)) {
      index = Math.floor(p.maxIndex + 1.5 + NAN_COLOR_INDEX);
    } else {
      index = publicAPI.linearIndexLookup(v, p);
    }

    var offset = 4 * index;
    return [table[offset], table[offset + 1], table[offset + 2], table[offset + 3]];
  };

  publicAPI.indexedLookupFunction = function (v, table, p) {
    var index = publicAPI.getAnnotatedValueIndexInternal(v);

    if (index === -1) {
      index = model.numberOfColors + NAN_COLOR_INDEX;
    }

    var offset = 4 * index;
    return [table[offset], table[offset + 1], table[offset + 2], table[offset + 3]];
  }; //----------------------------------------------------------------------------


  publicAPI.lookupShiftAndScale = function (range, p) {
    p.shift = -range[0];
    p.scale = Number.MAX_VALUE;

    if (range[1] > range[0]) {
      p.scale = (p.maxIndex + 1) / (range[1] - range[0]);
    }
  }; // Public API methods


  publicAPI.mapScalarsThroughTable = function (input, output, outFormat, inputOffset) {
    var lookupFunc = publicAPI.linearLookup;

    if (model.indexedLookup) {
      lookupFunc = publicAPI.indexedLookupFunction;
    }

    var trange = publicAPI.getMappingRange();
    var p = {
      maxIndex: publicAPI.getNumberOfColors() - 1,
      range: trange,
      shift: 0.0,
      scale: 0.0
    };
    publicAPI.lookupShiftAndScale(trange, p);
    var alpha = publicAPI.getAlpha();
    var length = input.getNumberOfTuples();
    var inIncr = input.getNumberOfComponents();
    var outputV = output.getData();
    var inputV = input.getData();

    if (alpha >= 1.0) {
      if (outFormat === _ScalarsToColors_Constants_js__WEBPACK_IMPORTED_MODULE_3__["ScalarMappingTarget"].RGBA) {
        for (var i = 0; i < length; i++) {
          var cptr = lookupFunc(inputV[i * inIncr + inputOffset], model.table, p);
          outputV[i * 4] = cptr[0];
          outputV[i * 4 + 1] = cptr[1];
          outputV[i * 4 + 2] = cptr[2];
          outputV[i * 4 + 3] = cptr[3];
        }
      }
    } else {
      /* eslint-disable no-lonely-if */
      if (outFormat === _ScalarsToColors_Constants_js__WEBPACK_IMPORTED_MODULE_3__["ScalarMappingTarget"].RGBA) {
        for (var _i = 0; _i < length; _i++) {
          var _cptr = lookupFunc(inputV[_i * inIncr + inputOffset], model.table, p);

          outputV[_i * 4] = _cptr[0];
          outputV[_i * 4 + 1] = _cptr[1];
          outputV[_i * 4 + 2] = _cptr[2];
          outputV[_i * 4 + 3] = Math.floor(_cptr[3] * alpha + 0.5);
        }
      }
    } // alpha blending

  };

  publicAPI.forceBuild = function () {
    var hinc = 0.0;
    var sinc = 0.0;
    var vinc = 0.0;
    var ainc = 0.0;
    var maxIndex = model.numberOfColors - 1;

    if (maxIndex) {
      hinc = (model.hueRange[1] - model.hueRange[0]) / maxIndex;
      sinc = (model.saturationRange[1] - model.saturationRange[0]) / maxIndex;
      vinc = (model.valueRange[1] - model.valueRange[0]) / maxIndex;
      ainc = (model.alphaRange[1] - model.alphaRange[0]) / maxIndex;
    }

    var hsv = [];
    var rgba = [];

    for (var i = 0; i <= maxIndex; i++) {
      hsv[0] = model.hueRange[0] + i * hinc;
      hsv[1] = model.saturationRange[0] + i * sinc;
      hsv[2] = model.valueRange[0] + i * vinc;
      Object(_Math_index_js__WEBPACK_IMPORTED_MODULE_1__["h"])(hsv, rgba);
      rgba[3] = model.alphaRange[0] + i * ainc; //  case VTK_RAMP_LINEAR:

      model.table[i * 4] = rgba[0] * 255.0 + 0.5;
      model.table[i * 4 + 1] = rgba[1] * 255.0 + 0.5;
      model.table[i * 4 + 2] = rgba[2] * 255.0 + 0.5;
      model.table[i * 4 + 3] = rgba[3] * 255.0 + 0.5;
    }

    publicAPI.buildSpecialColors();
    model.buildTime.modified();
  };

  publicAPI.setTable = function (table) {
    if (table.getNumberOfComponents() !== 4) {
      vtkErrorMacro('Expected 4 components for RGBA colors');
      return;
    }

    if (table.getDataType() !== _DataArray_Constants_js__WEBPACK_IMPORTED_MODULE_4__["VtkDataTypes"].UNSIGNED_CHAR) {
      vtkErrorMacro('Expected unsigned char values for RGBA colors');
      return;
    }

    model.numberOfColors = table.getNumberOfTuples();
    var data = table.getData();

    for (var i = 0; i < data.length; i++) {
      model.table[i] = data[i];
    }

    publicAPI.buildSpecialColors();
    model.insertTime.modified();
    publicAPI.modified();
  };

  publicAPI.buildSpecialColors = function () {
    // Add "special" colors (NaN, below range, above range) to table here.
    var numberOfColors = model.numberOfColors;
    var tptr = model.table;
    var base = (numberOfColors + BELOW_RANGE_COLOR_INDEX) * 4; // Below range color

    if (model.useBelowRangeColor || numberOfColors === 0) {
      tptr[base] = model.belowRangeColor[0] * 255.0 + 0.5;
      tptr[base + 1] = model.belowRangeColor[1] * 255.0 + 0.5;
      tptr[base + 2] = model.belowRangeColor[2] * 255.0 + 0.5;
      tptr[base + 3] = model.belowRangeColor[3] * 255.0 + 0.5;
    } else {
      // Duplicate the first color in the table.
      tptr[base] = tptr[0];
      tptr[base + 1] = tptr[1];
      tptr[base + 2] = tptr[2];
      tptr[base + 3] = tptr[3];
    } // Above range color


    base = (numberOfColors + ABOVE_RANGE_COLOR_INDEX) * 4;

    if (model.useAboveRangeColor || numberOfColors === 0) {
      tptr[base] = model.aboveRangeColor[0] * 255.0 + 0.5;
      tptr[base + 1] = model.aboveRangeColor[1] * 255.0 + 0.5;
      tptr[base + 2] = model.aboveRangeColor[2] * 255.0 + 0.5;
      tptr[base + 3] = model.aboveRangeColor[3] * 255.0 + 0.5;
    } else {
      // Duplicate the last color in the table.
      tptr[base] = tptr[4 * (numberOfColors - 1) + 0];
      tptr[base + 1] = tptr[4 * (numberOfColors - 1) + 1];
      tptr[base + 2] = tptr[4 * (numberOfColors - 1) + 2];
      tptr[base + 3] = tptr[4 * (numberOfColors - 1) + 3];
    } // Always use NanColor


    base = (numberOfColors + NAN_COLOR_INDEX) * 4;
    tptr[base] = model.nanColor[0] * 255.0 + 0.5;
    tptr[base + 1] = model.nanColor[1] * 255.0 + 0.5;
    tptr[base + 2] = model.nanColor[2] * 255.0 + 0.5;
    tptr[base + 3] = model.nanColor[3] * 255.0 + 0.5;
  };

  publicAPI.build = function () {
    if (model.table.length < 1 || publicAPI.getMTime() > model.buildTime.getMTime() && model.insertTime.getMTime() <= model.buildTime.getMTime()) {
      publicAPI.forceBuild();
    }
  };

  if (model.table.length > 0) {
    // ensure insertTime is more recently modified than buildTime if
    // a table is provided via the constructor
    model.insertTime.modified();
  }
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {
  numberOfColors: 256,
  // table: null,
  hueRange: [0.0, 0.66667],
  saturationRange: [1.0, 1.0],
  valueRange: [1.0, 1.0],
  alphaRange: [1.0, 1.0],
  nanColor: [0.5, 0.0, 0.0, 1.0],
  belowRangeColor: [0.0, 0.0, 0.0, 1.0],
  aboveRangeColor: [1.0, 1.0, 1.0, 1.0],
  useAboveRangeColor: false,
  useBelowRangeColor: false,
  alpha: 1.0 // buildTime: null,
  // opaqueFlagBuildTime: null,
  // insertTime: null,

}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance

  _ScalarsToColors_js__WEBPACK_IMPORTED_MODULE_2__["default"].extend(publicAPI, model, initialValues); // Internal objects initialization

  if (!model.table) {
    model.table = [];
  }

  model.buildTime = {};
  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].obj(model.buildTime);
  model.opaqueFlagBuildTime = {};
  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].obj(model.opaqueFlagBuildTime, {
    mtime: 0
  });
  model.insertTime = {};
  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].obj(model.insertTime, {
    mtime: 0
  }); // Create get-only macros

  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].get(publicAPI, model, ['buildTime']); // Create get-set macros

  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].setGet(publicAPI, model, ['numberOfColors', 'useAboveRangeColor', 'useBelowRangeColor']); // Create set macros for array (needs to know size)

  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].setArray(publicAPI, model, ['alphaRange', 'hueRange', 'saturationRange', 'valueRange'], 2);
  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].setArray(publicAPI, model, ['nanColor', 'belowRangeColor', 'aboveRangeColor'], 4); // Create get macros for array

  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].getArray(publicAPI, model, ['hueRange', 'saturationRange', 'valueRange', 'alphaRange', 'nanColor', 'belowRangeColor', 'aboveRangeColor']); // For more macro methods, see "Sources/macros.js"
  // Object specific methods

  vtkLookupTable(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].newInstance(extend, 'vtkLookupTable'); // ----------------------------------------------------------------------------

var vtkLookupTable$1 = {
  newInstance: newInstance,
  extend: extend
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Common/Core/Math/index.js":
/*!*****************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Common/Core/Math/index.js ***!
  \*****************************************************************/
/*! exports provided: $, A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z, _, a, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, aA, aB, aC, aD, aE, aF, aG, aH, aI, aJ, aK, aL, aM, aN, aO, aP, aQ, aR, aS, aa, ab, ac, ad, ae, af, ag, ah, ai, aj, ak, al, am, an, ao, ap, aq, ar, as, at, au, av, aw, ax, ay, az, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "$", function() { return binomial; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "A", function() { return clampValue; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "B", function() { return projectVector; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "C", function() { return arrayRange; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "D", function() { return getMajorAxisIndex; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "E", function() { return isInf; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "F", function() { return rgb2hsv; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "G", function() { return rgb2lab; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "H", function() { return lab2rgb; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "I", function() { return floor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "J", function() { return round; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "K", function() { return normalize2D; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "L", function() { return nearestPowerOfTwo; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "M", function() { return createUninitializedBounds; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "N", function() { return multiply3x3_vect3; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "O", function() { return areBoundsInitialized; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "P", function() { return isPowerOfTwo; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Q", function() { return multiplyAccumulate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "R", function() { return angleBetweenVectors; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "S", function() { return signedAngleBetweenVectors; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "T", function() { return Pi; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "U", function() { return ceil; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "V", function() { return min; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "W", function() { return max; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "X", function() { return arrayMin; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Y", function() { return arrayMax; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Z", function() { return ceilLog2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_", function() { return factorial; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return areMatricesEqual; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a0", function() { return beginCombination; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a1", function() { return nextCombination; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a2", function() { return randomSeed; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a3", function() { return getSeed; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a4", function() { return gaussian; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a5", function() { return multiplyScalar2D; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a6", function() { return multiplyAccumulate2D; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a7", function() { return outer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a8", function() { return dot2D; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a9", function() { return projectVector2D; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "aA", function() { return hex2float; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "aB", function() { return lab2xyz; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "aC", function() { return xyz2lab; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "aD", function() { return xyz2rgb; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "aE", function() { return rgb2xyz; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "aF", function() { return clampAndNormalizeValue; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "aG", function() { return getScalarTypeFittingRange; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "aH", function() { return getAdjustedScalarRange; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "aI", function() { return extentIsWithinOtherExtent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "aJ", function() { return boundsIsWithinOtherBounds; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "aK", function() { return pointIsWithinBounds; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "aL", function() { return solve3PointCircle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "aM", function() { return inf; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "aN", function() { return negInf; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "aO", function() { return isFinite; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "aP", function() { return isNaN; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "aQ", function() { return floatToHex2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "aR", function() { return floatRGB2HexCode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "aS", function() { return float2CssRGBA; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "aa", function() { return gaussianAmplitude; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ab", function() { return gaussianWeight; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ac", function() { return outer2D; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ad", function() { return norm2D; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ae", function() { return LUFactor3x3; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "af", function() { return LUSolve3x3; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ag", function() { return linearSolve3x3; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ah", function() { return multiply3x3_mat3; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ai", function() { return multiplyMatrix; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "aj", function() { return transpose3x3; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ak", function() { return invert3x3; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "al", function() { return identity3x3; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "am", function() { return quaternionToMatrix3x3; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "an", function() { return roundNumber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ao", function() { return matrix3x3ToQuaternion; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ap", function() { return multiplyQuaternion; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "aq", function() { return orthogonalize3x3; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ar", function() { return diagonalize3x3; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "as", function() { return singularValueDecomposition3x3; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "at", function() { return luFactorLinearSystem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "au", function() { return luSolveLinearSystem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "av", function() { return invertMatrix; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "aw", function() { return estimateMatrixCondition; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ax", function() { return jacobi; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ay", function() { return solveHomogeneousLeastSquares; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "az", function() { return solveLeastSquares; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return roundVector; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return computeBoundsFromPoints; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return dot; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return clampVector; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "f", function() { return distance2BetweenPoints; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "g", function() { return subtract; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "h", function() { return hsv2rgb; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "i", function() { return isNan; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "j", function() { return cross; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "k", function() { return add; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "l", function() { return normalize; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "m", function() { return determinant2x2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "n", function() { return norm; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "o", function() { return jacobiN; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "p", function() { return perpendiculars; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "q", function() { return vtkMath; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "r", function() { return radiansFromDegrees; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "s", function() { return solveLinearSystem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "t", function() { return multiplyScalar; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "u", function() { return uninitializeBounds; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "v", function() { return vtkMath$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "w", function() { return random; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "x", function() { return determinant3x3; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "y", function() { return degreesFromRadians; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "z", function() { return areEquals; });
/* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ "../node_modules/@babel/runtime/helpers/slicedToArray.js");
/* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var seedrandom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! seedrandom */ "../node_modules/seedrandom/index.js");
/* harmony import */ var seedrandom__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(seedrandom__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");




var vtkErrorMacro = _macros_js__WEBPACK_IMPORTED_MODULE_2__["default"].vtkErrorMacro,
    vtkWarningMacro = _macros_js__WEBPACK_IMPORTED_MODULE_2__["default"].vtkWarningMacro; // ----------------------------------------------------------------------------

/* eslint-disable camelcase                                                  */

/* eslint-disable no-cond-assign                                             */

/* eslint-disable no-bitwise                                                 */

/* eslint-disable no-multi-assign                                            */
// ----------------------------------------------------------------------------

var randomSeedValue = 0;
var VTK_MAX_ROTATIONS = 20;
var VTK_SMALL_NUMBER = 1.0e-12;

function notImplemented(method) {
  return function () {
    return vtkErrorMacro("vtkMath::".concat(method, " - NOT IMPLEMENTED"));
  };
}

function vtkSwapVectors3(v1, v2) {
  for (var i = 0; i < 3; i++) {
    var tmp = v1[i];
    v1[i] = v2[i];
    v2[i] = tmp;
  }
}

function createArray() {
  var size = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 3;
  var array = [];

  while (array.length < size) {
    array.push(0);
  }

  return array;
} // ----------------------------------------------------------------------------
// Global methods
// ----------------------------------------------------------------------------


var Pi = function Pi() {
  return Math.PI;
};
function radiansFromDegrees(deg) {
  return deg / 180 * Math.PI;
}
function degreesFromRadians(rad) {
  return rad * 180 / Math.PI;
}
var round = Math.round,
    floor = Math.floor,
    ceil = Math.ceil,
    min = Math.min,
    max = Math.max;
function arrayMin(arr) {
  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
  var stride = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;
  var minValue = Infinity;

  for (var i = offset, len = arr.length; i < len; i += stride) {
    if (arr[i] < minValue) {
      minValue = arr[i];
    }
  }

  return minValue;
}
function arrayMax(arr) {
  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
  var stride = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;
  var maxValue = -Infinity;

  for (var i = offset, len = arr.length; i < len; i += stride) {
    if (maxValue < arr[i]) {
      maxValue = arr[i];
    }
  }

  return maxValue;
}
function arrayRange(arr) {
  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
  var stride = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;
  var minValue = Infinity;
  var maxValue = -Infinity;

  for (var i = offset, len = arr.length; i < len; i += stride) {
    if (arr[i] < minValue) {
      minValue = arr[i];
    }

    if (maxValue < arr[i]) {
      maxValue = arr[i];
    }
  }

  return [minValue, maxValue];
}
var ceilLog2 = notImplemented('ceilLog2');
var factorial = notImplemented('factorial');
function nearestPowerOfTwo(xi) {
  var v = 1;

  while (v < xi) {
    v *= 2;
  }

  return v;
}
function isPowerOfTwo(x) {
  return x === nearestPowerOfTwo(x);
}
function binomial(m, n) {
  var r = 1;

  for (var i = 1; i <= n; ++i) {
    r *= (m - i + 1) / i;
  }

  return Math.floor(r);
}
function beginCombination(m, n) {
  if (m < n) {
    return 0;
  }

  var r = createArray(n);

  for (var i = 0; i < n; ++i) {
    r[i] = i;
  }

  return r;
}
function nextCombination(m, n, r) {
  var status = 0;

  for (var i = n - 1; i >= 0; --i) {
    if (r[i] < m - n + i) {
      var j = r[i] + 1;

      while (i < n) {
        r[i++] = j++;
      }

      status = 1;
      break;
    }
  }

  return status;
}
function randomSeed(seed) {
  seedrandom__WEBPACK_IMPORTED_MODULE_1___default()("".concat(seed), {
    global: true
  });
  randomSeedValue = seed;
}
function getSeed() {
  return randomSeedValue;
}
function random() {
  var minValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
  var maxValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;
  var delta = maxValue - minValue;
  return minValue + delta * Math.random();
}
var gaussian = notImplemented('gaussian'); // Vect3 operations

function add(a, b, out) {
  out[0] = a[0] + b[0];
  out[1] = a[1] + b[1];
  out[2] = a[2] + b[2];
  return out;
}
function subtract(a, b, out) {
  out[0] = a[0] - b[0];
  out[1] = a[1] - b[1];
  out[2] = a[2] - b[2];
  return out;
}
function multiplyScalar(vec, scalar) {
  vec[0] *= scalar;
  vec[1] *= scalar;
  vec[2] *= scalar;
  return vec;
}
function multiplyScalar2D(vec, scalar) {
  vec[0] *= scalar;
  vec[1] *= scalar;
  return vec;
}
function multiplyAccumulate(a, b, scalar, out) {
  out[0] = a[0] + b[0] * scalar;
  out[1] = a[1] + b[1] * scalar;
  out[2] = a[2] + b[2] * scalar;
  return out;
}
function multiplyAccumulate2D(a, b, scalar, out) {
  out[0] = a[0] + b[0] * scalar;
  out[1] = a[1] + b[1] * scalar;
  return out;
}
function dot(x, y) {
  return x[0] * y[0] + x[1] * y[1] + x[2] * y[2];
}
function outer(x, y, out_3x3) {
  for (var i = 0; i < 3; i++) {
    for (var j = 0; j < 3; j++) {
      out_3x3[i][j] = x[i] * y[j];
    }
  }
}
function cross(x, y, out) {
  var Zx = x[1] * y[2] - x[2] * y[1];
  var Zy = x[2] * y[0] - x[0] * y[2];
  var Zz = x[0] * y[1] - x[1] * y[0];
  out[0] = Zx;
  out[1] = Zy;
  out[2] = Zz;
  return out;
}
function norm(x) {
  var n = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 3;

  switch (n) {
    case 1:
      return Math.abs(x);

    case 2:
      return Math.sqrt(x[0] * x[0] + x[1] * x[1]);

    case 3:
      return Math.sqrt(x[0] * x[0] + x[1] * x[1] + x[2] * x[2]);

    default:
      {
        var sum = 0;

        for (var i = 0; i < n; i++) {
          sum += x[i] * x[i];
        }

        return Math.sqrt(sum);
      }
  }
}
function normalize(x) {
  var den = norm(x);

  if (den !== 0.0) {
    x[0] /= den;
    x[1] /= den;
    x[2] /= den;
  }

  return den;
}
function perpendiculars(x, y, z, theta) {
  var x2 = x[0] * x[0];
  var y2 = x[1] * x[1];
  var z2 = x[2] * x[2];
  var r = Math.sqrt(x2 + y2 + z2);
  var dx;
  var dy;
  var dz; // transpose the vector to avoid divide-by-zero error

  if (x2 > y2 && x2 > z2) {
    dx = 0;
    dy = 1;
    dz = 2;
  } else if (y2 > z2) {
    dx = 1;
    dy = 2;
    dz = 0;
  } else {
    dx = 2;
    dy = 0;
    dz = 1;
  }

  var a = x[dx] / r;
  var b = x[dy] / r;
  var c = x[dz] / r;
  var tmp = Math.sqrt(a * a + c * c);

  if (theta !== 0) {
    var sintheta = Math.sin(theta);
    var costheta = Math.cos(theta);

    if (y) {
      y[dx] = (c * costheta - a * b * sintheta) / tmp;
      y[dy] = sintheta * tmp;
      y[dz] = (-(a * costheta) - b * c * sintheta) / tmp;
    }

    if (z) {
      z[dx] = (-(c * sintheta) - a * b * costheta) / tmp;
      z[dy] = costheta * tmp;
      z[dz] = (a * sintheta - b * c * costheta) / tmp;
    }
  } else {
    if (y) {
      y[dx] = c / tmp;
      y[dy] = 0;
      y[dz] = -a / tmp;
    }

    if (z) {
      z[dx] = -a * b / tmp;
      z[dy] = tmp;
      z[dz] = -b * c / tmp;
    }
  }
}
function projectVector(a, b, projection) {
  var bSquared = dot(b, b);

  if (bSquared === 0) {
    projection[0] = 0;
    projection[1] = 0;
    projection[2] = 0;
    return false;
  }

  var scale = dot(a, b) / bSquared;

  for (var i = 0; i < 3; i++) {
    projection[i] = b[i];
  }

  multiplyScalar(projection, scale);
  return true;
}
function dot2D(x, y) {
  return x[0] * y[0] + x[1] * y[1];
}
function projectVector2D(a, b, projection) {
  var bSquared = dot2D(b, b);

  if (bSquared === 0) {
    projection[0] = 0;
    projection[1] = 0;
    return false;
  }

  var scale = dot2D(a, b) / bSquared;

  for (var i = 0; i < 2; i++) {
    projection[i] = b[i];
  }

  multiplyScalar2D(projection, scale);
  return true;
}
function distance2BetweenPoints(x, y) {
  return (x[0] - y[0]) * (x[0] - y[0]) + (x[1] - y[1]) * (x[1] - y[1]) + (x[2] - y[2]) * (x[2] - y[2]);
}
function angleBetweenVectors(v1, v2) {
  var crossVect = [0, 0, 0];
  cross(v1, v2, crossVect);
  return Math.atan2(norm(crossVect), dot(v1, v2));
}
function signedAngleBetweenVectors(v1, v2, vN) {
  var crossVect = [0, 0, 0];
  cross(v1, v2, crossVect);
  var angle = Math.atan2(norm(crossVect), dot(v1, v2));
  return dot(crossVect, vN) >= 0 ? angle : -angle;
}
function gaussianAmplitude(mean, variance, position) {
  var distanceFromMean = Math.abs(mean - position);
  return 1 / Math.sqrt(2 * Math.PI * variance) * Math.exp(-Math.pow(distanceFromMean, 2) / (2 * variance));
}
function gaussianWeight(mean, variance, position) {
  var distanceFromMean = Math.abs(mean - position);
  return Math.exp(-Math.pow(distanceFromMean, 2) / (2 * variance));
}
function outer2D(x, y, out_2x2) {
  for (var i = 0; i < 2; i++) {
    for (var j = 0; j < 2; j++) {
      out_2x2[i][j] = x[i] * y[j];
    }
  }
}
function norm2D(x2D) {
  return Math.sqrt(x2D[0] * x2D[0] + x2D[1] * x2D[1]);
}
function normalize2D(x) {
  var den = norm2D(x);

  if (den !== 0.0) {
    x[0] /= den;
    x[1] /= den;
  }

  return den;
}
function determinant2x2() {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  if (args.length === 2) {
    return args[0][0] * args[1][1] - args[1][0] * args[0][1];
  }

  if (args.length === 4) {
    return args[0] * args[3] - args[1] * args[2];
  }

  return Number.NaN;
}
function LUFactor3x3(mat_3x3, index_3) {
  var maxI;
  var tmp;
  var largest;
  var scale = [0, 0, 0]; // Loop over rows to get implicit scaling information

  for (var i = 0; i < 3; i++) {
    largest = Math.abs(mat_3x3[i][0]);

    if ((tmp = Math.abs(mat_3x3[i][1])) > largest) {
      largest = tmp;
    }

    if ((tmp = Math.abs(mat_3x3[i][2])) > largest) {
      largest = tmp;
    }

    scale[i] = 1 / largest;
  } // Loop over all columns using Crout's method
  // first column


  largest = scale[0] * Math.abs(mat_3x3[0][0]);
  maxI = 0;

  if ((tmp = scale[1] * Math.abs(mat_3x3[1][0])) >= largest) {
    largest = tmp;
    maxI = 1;
  }

  if ((tmp = scale[2] * Math.abs(mat_3x3[2][0])) >= largest) {
    maxI = 2;
  }

  if (maxI !== 0) {
    vtkSwapVectors3(mat_3x3[maxI], mat_3x3[0]);
    scale[maxI] = scale[0];
  }

  index_3[0] = maxI;
  mat_3x3[1][0] /= mat_3x3[0][0];
  mat_3x3[2][0] /= mat_3x3[0][0]; // second column

  mat_3x3[1][1] -= mat_3x3[1][0] * mat_3x3[0][1];
  mat_3x3[2][1] -= mat_3x3[2][0] * mat_3x3[0][1];
  largest = scale[1] * Math.abs(mat_3x3[1][1]);
  maxI = 1;

  if ((tmp = scale[2] * Math.abs(mat_3x3[2][1])) >= largest) {
    maxI = 2;
    vtkSwapVectors3(mat_3x3[2], mat_3x3[1]);
    scale[2] = scale[1];
  }

  index_3[1] = maxI;
  mat_3x3[2][1] /= mat_3x3[1][1]; // third column

  mat_3x3[1][2] -= mat_3x3[1][0] * mat_3x3[0][2];
  mat_3x3[2][2] -= mat_3x3[2][0] * mat_3x3[0][2] + mat_3x3[2][1] * mat_3x3[1][2];
  index_3[2] = 2;
}
function LUSolve3x3(mat_3x3, index_3, x_3) {
  // forward substitution
  var sum = x_3[index_3[0]];
  x_3[index_3[0]] = x_3[0];
  x_3[0] = sum;
  sum = x_3[index_3[1]];
  x_3[index_3[1]] = x_3[1];
  x_3[1] = sum - mat_3x3[1][0] * x_3[0];
  sum = x_3[index_3[2]];
  x_3[index_3[2]] = x_3[2];
  x_3[2] = sum - mat_3x3[2][0] * x_3[0] - mat_3x3[2][1] * x_3[1]; // back substitution

  x_3[2] /= mat_3x3[2][2];
  x_3[1] = (x_3[1] - mat_3x3[1][2] * x_3[2]) / mat_3x3[1][1];
  x_3[0] = (x_3[0] - mat_3x3[0][1] * x_3[1] - mat_3x3[0][2] * x_3[2]) / mat_3x3[0][0];
}
function linearSolve3x3(mat_3x3, x_3, y_3) {
  var a1 = mat_3x3[0][0];
  var b1 = mat_3x3[0][1];
  var c1 = mat_3x3[0][2];
  var a2 = mat_3x3[1][0];
  var b2 = mat_3x3[1][1];
  var c2 = mat_3x3[1][2];
  var a3 = mat_3x3[2][0];
  var b3 = mat_3x3[2][1];
  var c3 = mat_3x3[2][2]; // Compute the adjoint

  var d1 = +determinant2x2(b2, b3, c2, c3);
  var d2 = -determinant2x2(a2, a3, c2, c3);
  var d3 = +determinant2x2(a2, a3, b2, b3);
  var e1 = -determinant2x2(b1, b3, c1, c3);
  var e2 = +determinant2x2(a1, a3, c1, c3);
  var e3 = -determinant2x2(a1, a3, b1, b3);
  var f1 = +determinant2x2(b1, b2, c1, c2);
  var f2 = -determinant2x2(a1, a2, c1, c2);
  var f3 = +determinant2x2(a1, a2, b1, b2); // Compute the determinant

  var det = a1 * d1 + b1 * d2 + c1 * d3; // Multiply by the adjoint

  var v1 = d1 * x_3[0] + e1 * x_3[1] + f1 * x_3[2];
  var v2 = d2 * x_3[0] + e2 * x_3[1] + f2 * x_3[2];
  var v3 = d3 * x_3[0] + e3 * x_3[1] + f3 * x_3[2]; // Divide by the determinant

  y_3[0] = v1 / det;
  y_3[1] = v2 / det;
  y_3[2] = v3 / det;
}
function multiply3x3_vect3(mat_3x3, in_3, out_3) {
  var x = mat_3x3[0][0] * in_3[0] + mat_3x3[0][1] * in_3[1] + mat_3x3[0][2] * in_3[2];
  var y = mat_3x3[1][0] * in_3[0] + mat_3x3[1][1] * in_3[1] + mat_3x3[1][2] * in_3[2];
  var z = mat_3x3[2][0] * in_3[0] + mat_3x3[2][1] * in_3[1] + mat_3x3[2][2] * in_3[2];
  out_3[0] = x;
  out_3[1] = y;
  out_3[2] = z;
}
function multiply3x3_mat3(a_3x3, b_3x3, out_3x3) {
  var tmp = [[0, 0, 0], [0, 0, 0], [0, 0, 0]];

  for (var i = 0; i < 3; i++) {
    tmp[0][i] = a_3x3[0][0] * b_3x3[0][i] + a_3x3[0][1] * b_3x3[1][i] + a_3x3[0][2] * b_3x3[2][i];
    tmp[1][i] = a_3x3[1][0] * b_3x3[0][i] + a_3x3[1][1] * b_3x3[1][i] + a_3x3[1][2] * b_3x3[2][i];
    tmp[2][i] = a_3x3[2][0] * b_3x3[0][i] + a_3x3[2][1] * b_3x3[1][i] + a_3x3[2][2] * b_3x3[2][i];
  }

  for (var j = 0; j < 3; j++) {
    out_3x3[j][0] = tmp[j][0];
    out_3x3[j][1] = tmp[j][1];
    out_3x3[j][2] = tmp[j][2];
  }
}
function multiplyMatrix(a, b, rowA, colA, rowB, colB, out_rowXcol) {
  // we need colA == rowB
  if (colA !== rowB) {
    vtkErrorMacro('Number of columns of A must match number of rows of B.');
  } // output matrix is rowA*colB
  // output row


  for (var i = 0; i < rowA; i++) {
    // output col
    for (var j = 0; j < colB; j++) {
      out_rowXcol[i][j] = 0; // sum for this point

      for (var k = 0; k < colA; k++) {
        out_rowXcol[i][j] += a[i][k] * b[k][j];
      }
    }
  }
}
function transpose3x3(in_3x3, outT_3x3) {
  var tmp;
  tmp = in_3x3[1][0];
  outT_3x3[1][0] = in_3x3[0][1];
  outT_3x3[0][1] = tmp;
  tmp = in_3x3[2][0];
  outT_3x3[2][0] = in_3x3[0][2];
  outT_3x3[0][2] = tmp;
  tmp = in_3x3[2][1];
  outT_3x3[2][1] = in_3x3[1][2];
  outT_3x3[1][2] = tmp;
  outT_3x3[0][0] = in_3x3[0][0];
  outT_3x3[1][1] = in_3x3[1][1];
  outT_3x3[2][2] = in_3x3[2][2];
}
function invert3x3(in_3x3, outI_3x3) {
  var a1 = in_3x3[0][0];
  var b1 = in_3x3[0][1];
  var c1 = in_3x3[0][2];
  var a2 = in_3x3[1][0];
  var b2 = in_3x3[1][1];
  var c2 = in_3x3[1][2];
  var a3 = in_3x3[2][0];
  var b3 = in_3x3[2][1];
  var c3 = in_3x3[2][2]; // Compute the adjoint

  var d1 = +determinant2x2(b2, b3, c2, c3);
  var d2 = -determinant2x2(a2, a3, c2, c3);
  var d3 = +determinant2x2(a2, a3, b2, b3);
  var e1 = -determinant2x2(b1, b3, c1, c3);
  var e2 = +determinant2x2(a1, a3, c1, c3);
  var e3 = -determinant2x2(a1, a3, b1, b3);
  var f1 = +determinant2x2(b1, b2, c1, c2);
  var f2 = -determinant2x2(a1, a2, c1, c2);
  var f3 = +determinant2x2(a1, a2, b1, b2); // Divide by the determinant

  var det = a1 * d1 + b1 * d2 + c1 * d3;
  outI_3x3[0][0] = d1 / det;
  outI_3x3[1][0] = d2 / det;
  outI_3x3[2][0] = d3 / det;
  outI_3x3[0][1] = e1 / det;
  outI_3x3[1][1] = e2 / det;
  outI_3x3[2][1] = e3 / det;
  outI_3x3[0][2] = f1 / det;
  outI_3x3[1][2] = f2 / det;
  outI_3x3[2][2] = f3 / det;
}
function identity3x3(mat_3x3) {
  for (var i = 0; i < 3; i++) {
    mat_3x3[i][0] = mat_3x3[i][1] = mat_3x3[i][2] = 0;
    mat_3x3[i][i] = 1;
  }
}
function determinant3x3(mat_3x3) {
  return mat_3x3[0][0] * mat_3x3[1][1] * mat_3x3[2][2] + mat_3x3[1][0] * mat_3x3[2][1] * mat_3x3[0][2] + mat_3x3[2][0] * mat_3x3[0][1] * mat_3x3[1][2] - mat_3x3[0][0] * mat_3x3[2][1] * mat_3x3[1][2] - mat_3x3[1][0] * mat_3x3[0][1] * mat_3x3[2][2] - mat_3x3[2][0] * mat_3x3[1][1] * mat_3x3[0][2];
}
function quaternionToMatrix3x3(quat_4, mat_3x3) {
  var ww = quat_4[0] * quat_4[0];
  var wx = quat_4[0] * quat_4[1];
  var wy = quat_4[0] * quat_4[2];
  var wz = quat_4[0] * quat_4[3];
  var xx = quat_4[1] * quat_4[1];
  var yy = quat_4[2] * quat_4[2];
  var zz = quat_4[3] * quat_4[3];
  var xy = quat_4[1] * quat_4[2];
  var xz = quat_4[1] * quat_4[3];
  var yz = quat_4[2] * quat_4[3];
  var rr = xx + yy + zz; // normalization factor, just in case quaternion was not normalized

  var f = 1 / (ww + rr);
  var s = (ww - rr) * f;
  f *= 2;
  mat_3x3[0][0] = xx * f + s;
  mat_3x3[1][0] = (xy + wz) * f;
  mat_3x3[2][0] = (xz - wy) * f;
  mat_3x3[0][1] = (xy - wz) * f;
  mat_3x3[1][1] = yy * f + s;
  mat_3x3[2][1] = (yz + wx) * f;
  mat_3x3[0][2] = (xz + wy) * f;
  mat_3x3[1][2] = (yz - wx) * f;
  mat_3x3[2][2] = zz * f + s;
}
/**
 * Returns true if elements of both arrays are equals.
 * @param {Array} a an array of numbers (vector, point, matrix...)
 * @param {Array} b an array of numbers (vector, point, matrix...)
 * @param {Number} eps tolerance
 */

function areEquals(a, b) {
  var eps = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1e-6;

  if (a.length !== b.length) {
    return false;
  }

  function isEqual(element, index) {
    return Math.abs(element - b[index]) <= eps;
  }

  return a.every(isEqual);
}
var areMatricesEqual = areEquals;
function roundNumber(num) {
  var digits = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;

  if (!"".concat(num).includes('e')) {
    return +"".concat(Math.round("".concat(num, "e+").concat(digits)), "e-").concat(digits);
  }

  var arr = "".concat(num).split('e');
  var sig = '';

  if (+arr[1] + digits > 0) {
    sig = '+';
  }

  return +"".concat(Math.round("".concat(+arr[0], "e").concat(sig).concat(+arr[1] + digits)), "e-").concat(digits);
}
function roundVector(vector) {
  var out = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [0, 0, 0];
  var digits = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
  out[0] = roundNumber(vector[0], digits);
  out[1] = roundNumber(vector[1], digits);
  out[2] = roundNumber(vector[2], digits);
  return out;
}
function jacobiN(a, n, w, v) {
  var i;
  var j;
  var k;
  var iq;
  var ip;
  var numPos;
  var tresh;
  var theta;
  var t;
  var tau;
  var sm;
  var s;
  var h;
  var g;
  var c;
  var tmp;
  var b = createArray(n);
  var z = createArray(n);

  var vtkROTATE = function vtkROTATE(aa, ii, jj, kk, ll) {
    g = aa[ii][jj];
    h = aa[kk][ll];
    aa[ii][jj] = g - s * (h + g * tau);
    aa[kk][ll] = h + s * (g - h * tau);
  }; // initialize


  for (ip = 0; ip < n; ip++) {
    for (iq = 0; iq < n; iq++) {
      v[ip][iq] = 0.0;
    }

    v[ip][ip] = 1.0;
  }

  for (ip = 0; ip < n; ip++) {
    b[ip] = w[ip] = a[ip][ip];
    z[ip] = 0.0;
  } // begin rotation sequence


  for (i = 0; i < VTK_MAX_ROTATIONS; i++) {
    sm = 0.0;

    for (ip = 0; ip < n - 1; ip++) {
      for (iq = ip + 1; iq < n; iq++) {
        sm += Math.abs(a[ip][iq]);
      }
    }

    if (sm === 0.0) {
      break;
    } // first 3 sweeps


    if (i < 3) {
      tresh = 0.2 * sm / (n * n);
    } else {
      tresh = 0.0;
    }

    for (ip = 0; ip < n - 1; ip++) {
      for (iq = ip + 1; iq < n; iq++) {
        g = 100.0 * Math.abs(a[ip][iq]); // after 4 sweeps

        if (i > 3 && Math.abs(w[ip]) + g === Math.abs(w[ip]) && Math.abs(w[iq]) + g === Math.abs(w[iq])) {
          a[ip][iq] = 0.0;
        } else if (Math.abs(a[ip][iq]) > tresh) {
          h = w[iq] - w[ip];

          if (Math.abs(h) + g === Math.abs(h)) {
            t = a[ip][iq] / h;
          } else {
            theta = 0.5 * h / a[ip][iq];
            t = 1.0 / (Math.abs(theta) + Math.sqrt(1.0 + theta * theta));

            if (theta < 0.0) {
              t = -t;
            }
          }

          c = 1.0 / Math.sqrt(1 + t * t);
          s = t * c;
          tau = s / (1.0 + c);
          h = t * a[ip][iq];
          z[ip] -= h;
          z[iq] += h;
          w[ip] -= h;
          w[iq] += h;
          a[ip][iq] = 0.0; // ip already shifted left by 1 unit

          for (j = 0; j <= ip - 1; j++) {
            vtkROTATE(a, j, ip, j, iq);
          } // ip and iq already shifted left by 1 unit


          for (j = ip + 1; j <= iq - 1; j++) {
            vtkROTATE(a, ip, j, j, iq);
          } // iq already shifted left by 1 unit


          for (j = iq + 1; j < n; j++) {
            vtkROTATE(a, ip, j, iq, j);
          }

          for (j = 0; j < n; j++) {
            vtkROTATE(v, j, ip, j, iq);
          }
        }
      }
    }

    for (ip = 0; ip < n; ip++) {
      b[ip] += z[ip];
      w[ip] = b[ip];
      z[ip] = 0.0;
    }
  } // this is NEVER called


  if (i >= VTK_MAX_ROTATIONS) {
    vtkWarningMacro('vtkMath::Jacobi: Error extracting eigenfunctions');
    return 0;
  } // sort eigenfunctions: these changes do not affect accuracy


  for (j = 0; j < n - 1; j++) {
    // boundary incorrect
    k = j;
    tmp = w[k];

    for (i = j + 1; i < n; i++) {
      // boundary incorrect, shifted already
      if (w[i] >= tmp) {
        // why exchange if same?
        k = i;
        tmp = w[k];
      }
    }

    if (k !== j) {
      w[k] = w[j];
      w[j] = tmp;

      for (i = 0; i < n; i++) {
        tmp = v[i][j];
        v[i][j] = v[i][k];
        v[i][k] = tmp;
      }
    }
  } // ensure eigenvector consistency (i.e., Jacobi can compute vectors that
  // are negative of one another (.707,.707,0) and (-.707,-.707,0). This can
  // reek havoc in hyperstreamline/other stuff. We will select the most
  // positive eigenvector.


  var ceil_half_n = (n >> 1) + (n & 1);

  for (j = 0; j < n; j++) {
    for (numPos = 0, i = 0; i < n; i++) {
      if (v[i][j] >= 0.0) {
        numPos++;
      }
    } //    if ( numPos < ceil(double(n)/double(2.0)) )


    if (numPos < ceil_half_n) {
      for (i = 0; i < n; i++) {
        v[i][j] *= -1.0;
      }
    }
  }

  return 1;
}
function matrix3x3ToQuaternion(mat_3x3, quat_4) {
  var tmp = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]; // on-diagonal elements

  tmp[0][0] = mat_3x3[0][0] + mat_3x3[1][1] + mat_3x3[2][2];
  tmp[1][1] = mat_3x3[0][0] - mat_3x3[1][1] - mat_3x3[2][2];
  tmp[2][2] = -mat_3x3[0][0] + mat_3x3[1][1] - mat_3x3[2][2];
  tmp[3][3] = -mat_3x3[0][0] - mat_3x3[1][1] + mat_3x3[2][2]; // off-diagonal elements

  tmp[0][1] = tmp[1][0] = mat_3x3[2][1] - mat_3x3[1][2];
  tmp[0][2] = tmp[2][0] = mat_3x3[0][2] - mat_3x3[2][0];
  tmp[0][3] = tmp[3][0] = mat_3x3[1][0] - mat_3x3[0][1];
  tmp[1][2] = tmp[2][1] = mat_3x3[1][0] + mat_3x3[0][1];
  tmp[1][3] = tmp[3][1] = mat_3x3[0][2] + mat_3x3[2][0];
  tmp[2][3] = tmp[3][2] = mat_3x3[2][1] + mat_3x3[1][2];
  var eigenvectors = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]];
  var eigenvalues = [0, 0, 0, 0]; // convert into format that JacobiN can use,
  // then use Jacobi to find eigenvalues and eigenvectors

  var NTemp = [0, 0, 0, 0];
  var eigenvectorsTemp = [0, 0, 0, 0];

  for (var i = 0; i < 4; i++) {
    NTemp[i] = tmp[i];
    eigenvectorsTemp[i] = eigenvectors[i];
  }

  jacobiN(NTemp, 4, eigenvalues, eigenvectorsTemp); // the first eigenvector is the one we want

  quat_4[0] = eigenvectors[0][0];
  quat_4[1] = eigenvectors[1][0];
  quat_4[2] = eigenvectors[2][0];
  quat_4[3] = eigenvectors[3][0];
}
function multiplyQuaternion(quat_1, quat_2, quat_out) {
  var ww = quat_1[0] * quat_2[0];
  var wx = quat_1[0] * quat_2[1];
  var wy = quat_1[0] * quat_2[2];
  var wz = quat_1[0] * quat_2[3];
  var xw = quat_1[1] * quat_2[0];
  var xx = quat_1[1] * quat_2[1];
  var xy = quat_1[1] * quat_2[2];
  var xz = quat_1[1] * quat_2[3];
  var yw = quat_1[2] * quat_2[0];
  var yx = quat_1[2] * quat_2[1];
  var yy = quat_1[2] * quat_2[2];
  var yz = quat_1[2] * quat_2[3];
  var zw = quat_1[3] * quat_2[0];
  var zx = quat_1[3] * quat_2[1];
  var zy = quat_1[3] * quat_2[2];
  var zz = quat_1[3] * quat_2[3];
  quat_out[0] = ww - xx - yy - zz;
  quat_out[1] = wx + xw + yz - zy;
  quat_out[2] = wy - xz + yw + zx;
  quat_out[3] = wz + xy - yx + zw;
}
function orthogonalize3x3(a_3x3, out_3x3) {
  // copy the matrix
  for (var i = 0; i < 3; i++) {
    out_3x3[0][i] = a_3x3[0][i];
    out_3x3[1][i] = a_3x3[1][i];
    out_3x3[2][i] = a_3x3[2][i];
  } // Pivot the matrix to improve accuracy


  var scale = createArray(3);
  var index = createArray(3);
  var largest; // Loop over rows to get implicit scaling information

  for (var _i = 0; _i < 3; _i++) {
    var _x = Math.abs(out_3x3[_i][0]);

    var _x2 = Math.abs(out_3x3[_i][1]);

    var _x3 = Math.abs(out_3x3[_i][2]);

    largest = _x2 > _x ? _x2 : _x;
    largest = _x3 > largest ? _x3 : largest;
    scale[_i] = 1;

    if (largest !== 0) {
      scale[_i] /= largest;
    }
  } // first column


  var x1 = Math.abs(out_3x3[0][0]) * scale[0];
  var x2 = Math.abs(out_3x3[1][0]) * scale[1];
  var x3 = Math.abs(out_3x3[2][0]) * scale[2];
  index[0] = 0;
  largest = x1;

  if (x2 >= largest) {
    largest = x2;
    index[0] = 1;
  }

  if (x3 >= largest) {
    index[0] = 2;
  }

  if (index[0] !== 0) {
    vtkSwapVectors3(out_3x3[index[0]], out_3x3[0]);
    scale[index[0]] = scale[0];
  } // second column


  var y2 = Math.abs(out_3x3[1][1]) * scale[1];
  var y3 = Math.abs(out_3x3[2][1]) * scale[2];
  index[1] = 1;
  largest = y2;

  if (y3 >= largest) {
    index[1] = 2;
    vtkSwapVectors3(out_3x3[2], out_3x3[1]);
  } // third column


  index[2] = 2; // A quaternion can only describe a pure rotation, not
  // a rotation with a flip, therefore the flip must be
  // removed before the matrix is converted to a quaternion.

  var flip = 0;

  if (determinant3x3(out_3x3) < 0) {
    flip = 1;

    for (var _i2 = 0; _i2 < 3; _i2++) {
      out_3x3[0][_i2] = -out_3x3[0][_i2];
      out_3x3[1][_i2] = -out_3x3[1][_i2];
      out_3x3[2][_i2] = -out_3x3[2][_i2];
    }
  } // Do orthogonalization using a quaternion intermediate
  // (this, essentially, does the orthogonalization via
  // diagonalization of an appropriately constructed symmetric
  // 4x4 matrix rather than by doing SVD of the 3x3 matrix)


  var quat = createArray(4);
  matrix3x3ToQuaternion(out_3x3, quat);
  quaternionToMatrix3x3(quat, out_3x3); // Put the flip back into the orthogonalized matrix.

  if (flip) {
    for (var _i3 = 0; _i3 < 3; _i3++) {
      out_3x3[0][_i3] = -out_3x3[0][_i3];
      out_3x3[1][_i3] = -out_3x3[1][_i3];
      out_3x3[2][_i3] = -out_3x3[2][_i3];
    }
  } // Undo the pivoting


  if (index[1] !== 1) {
    vtkSwapVectors3(out_3x3[index[1]], out_3x3[1]);
  }

  if (index[0] !== 0) {
    vtkSwapVectors3(out_3x3[index[0]], out_3x3[0]);
  }
}
function diagonalize3x3(a_3x3, w_3, v_3x3) {
  var i;
  var j;
  var k;
  var maxI;
  var tmp;
  var maxVal; // do the matrix[3][3] to **matrix conversion for Jacobi

  var C = [createArray(3), createArray(3), createArray(3)];
  var ATemp = createArray(3);
  var VTemp = createArray(3);

  for (i = 0; i < 3; i++) {
    C[i][0] = a_3x3[i][0];
    C[i][1] = a_3x3[i][1];
    C[i][2] = a_3x3[i][2];
    ATemp[i] = C[i];
    VTemp[i] = v_3x3[i];
  } // diagonalize using Jacobi


  jacobiN(ATemp, 3, w_3, VTemp); // if all the eigenvalues are the same, return identity matrix

  if (w_3[0] === w_3[1] && w_3[0] === w_3[2]) {
    identity3x3(v_3x3);
    return;
  } // transpose temporarily, it makes it easier to sort the eigenvectors


  transpose3x3(v_3x3, v_3x3); // if two eigenvalues are the same, re-orthogonalize to optimally line
  // up the eigenvectors with the x, y, and z axes

  for (i = 0; i < 3; i++) {
    // two eigenvalues are the same
    if (w_3[(i + 1) % 3] === w_3[(i + 2) % 3]) {
      // find maximum element of the independent eigenvector
      maxVal = Math.abs(v_3x3[i][0]);
      maxI = 0;

      for (j = 1; j < 3; j++) {
        if (maxVal < (tmp = Math.abs(v_3x3[i][j]))) {
          maxVal = tmp;
          maxI = j;
        }
      } // swap the eigenvector into its proper position


      if (maxI !== i) {
        tmp = w_3[maxI];
        w_3[maxI] = w_3[i];
        w_3[i] = tmp;
        vtkSwapVectors3(v_3x3[i], v_3x3[maxI]);
      } // maximum element of eigenvector should be positive


      if (v_3x3[maxI][maxI] < 0) {
        v_3x3[maxI][0] = -v_3x3[maxI][0];
        v_3x3[maxI][1] = -v_3x3[maxI][1];
        v_3x3[maxI][2] = -v_3x3[maxI][2];
      } // re-orthogonalize the other two eigenvectors


      j = (maxI + 1) % 3;
      k = (maxI + 2) % 3;
      v_3x3[j][0] = 0.0;
      v_3x3[j][1] = 0.0;
      v_3x3[j][2] = 0.0;
      v_3x3[j][j] = 1.0;
      cross(v_3x3[maxI], v_3x3[j], v_3x3[k]);
      normalize(v_3x3[k]);
      cross(v_3x3[k], v_3x3[maxI], v_3x3[j]); // transpose vectors back to columns

      transpose3x3(v_3x3, v_3x3);
      return;
    }
  } // the three eigenvalues are different, just sort the eigenvectors
  // to align them with the x, y, and z axes
  // find the vector with the largest x element, make that vector
  // the first vector


  maxVal = Math.abs(v_3x3[0][0]);
  maxI = 0;

  for (i = 1; i < 3; i++) {
    if (maxVal < (tmp = Math.abs(v_3x3[i][0]))) {
      maxVal = tmp;
      maxI = i;
    }
  } // swap eigenvalue and eigenvector


  if (maxI !== 0) {
    tmp = w_3[maxI];
    w_3[maxI] = w_3[0];
    w_3[0] = tmp;
    vtkSwapVectors3(v_3x3[maxI], v_3x3[0]);
  } // do the same for the y element


  if (Math.abs(v_3x3[1][1]) < Math.abs(v_3x3[2][1])) {
    tmp = w_3[2];
    w_3[2] = w_3[1];
    w_3[1] = tmp;
    vtkSwapVectors3(v_3x3[2], v_3x3[1]);
  } // ensure that the sign of the eigenvectors is correct


  for (i = 0; i < 2; i++) {
    if (v_3x3[i][i] < 0) {
      v_3x3[i][0] = -v_3x3[i][0];
      v_3x3[i][1] = -v_3x3[i][1];
      v_3x3[i][2] = -v_3x3[i][2];
    }
  } // set sign of final eigenvector to ensure that determinant is positive


  if (determinant3x3(v_3x3) < 0) {
    v_3x3[2][0] = -v_3x3[2][0];
    v_3x3[2][1] = -v_3x3[2][1];
    v_3x3[2][2] = -v_3x3[2][2];
  } // transpose the eigenvectors back again


  transpose3x3(v_3x3, v_3x3);
}
function singularValueDecomposition3x3(a_3x3, u_3x3, w_3, vT_3x3) {
  var i;
  var B = [createArray(3), createArray(3), createArray(3)]; // copy so that A can be used for U or VT without risk

  for (i = 0; i < 3; i++) {
    B[0][i] = a_3x3[0][i];
    B[1][i] = a_3x3[1][i];
    B[2][i] = a_3x3[2][i];
  } // temporarily flip if determinant is negative


  var d = determinant3x3(B);

  if (d < 0) {
    for (i = 0; i < 3; i++) {
      B[0][i] = -B[0][i];
      B[1][i] = -B[1][i];
      B[2][i] = -B[2][i];
    }
  } // orthogonalize, diagonalize, etc.


  orthogonalize3x3(B, u_3x3);
  transpose3x3(B, B);
  multiply3x3_mat3(B, u_3x3, vT_3x3);
  diagonalize3x3(vT_3x3, w_3, vT_3x3);
  multiply3x3_mat3(u_3x3, vT_3x3, u_3x3);
  transpose3x3(vT_3x3, vT_3x3); // re-create the flip

  if (d < 0) {
    w_3[0] = -w_3[0];
    w_3[1] = -w_3[1];
    w_3[2] = -w_3[2];
  }
}
function luFactorLinearSystem(A, index, size) {
  var i;
  var j;
  var k;
  var largest;
  var maxI = 0;
  var sum;
  var temp1;
  var temp2;
  var scale = createArray(size); //
  // Loop over rows to get implicit scaling information
  //

  for (i = 0; i < size; i++) {
    for (largest = 0.0, j = 0; j < size; j++) {
      if ((temp2 = Math.abs(A[i][j])) > largest) {
        largest = temp2;
      }
    }

    if (largest === 0.0) {
      vtkWarningMacro('Unable to factor linear system');
      return 0;
    }

    scale[i] = 1.0 / largest;
  } //
  // Loop over all columns using Crout's method
  //


  for (j = 0; j < size; j++) {
    for (i = 0; i < j; i++) {
      sum = A[i][j];

      for (k = 0; k < i; k++) {
        sum -= A[i][k] * A[k][j];
      }

      A[i][j] = sum;
    } //
    // Begin search for largest pivot element
    //


    for (largest = 0.0, i = j; i < size; i++) {
      sum = A[i][j];

      for (k = 0; k < j; k++) {
        sum -= A[i][k] * A[k][j];
      }

      A[i][j] = sum;

      if ((temp1 = scale[i] * Math.abs(sum)) >= largest) {
        largest = temp1;
        maxI = i;
      }
    } //
    // Check for row interchange
    //


    if (j !== maxI) {
      for (k = 0; k < size; k++) {
        temp1 = A[maxI][k];
        A[maxI][k] = A[j][k];
        A[j][k] = temp1;
      }

      scale[maxI] = scale[j];
    } //
    // Divide by pivot element and perform elimination
    //


    index[j] = maxI;

    if (Math.abs(A[j][j]) <= VTK_SMALL_NUMBER) {
      vtkWarningMacro('Unable to factor linear system');
      return 0;
    }

    if (j !== size - 1) {
      temp1 = 1.0 / A[j][j];

      for (i = j + 1; i < size; i++) {
        A[i][j] *= temp1;
      }
    }
  }

  return 1;
}
function luSolveLinearSystem(A, index, x, size) {
  var i;
  var j;
  var ii;
  var idx;
  var sum; //
  // Proceed with forward and backsubstitution for L and U
  // matrices.  First, forward substitution.
  //

  for (ii = -1, i = 0; i < size; i++) {
    idx = index[i];
    sum = x[idx];
    x[idx] = x[i];

    if (ii >= 0) {
      for (j = ii; j <= i - 1; j++) {
        sum -= A[i][j] * x[j];
      }
    } else if (sum !== 0.0) {
      ii = i;
    }

    x[i] = sum;
  } //
  // Now, back substitution
  //


  for (i = size - 1; i >= 0; i--) {
    sum = x[i];

    for (j = i + 1; j < size; j++) {
      sum -= A[i][j] * x[j];
    }

    x[i] = sum / A[i][i];
  }
}
function solveLinearSystem(A, x, size) {
  // if we solving something simple, just solve it
  if (size === 2) {
    var y = createArray(2);
    var det = determinant2x2(A[0][0], A[0][1], A[1][0], A[1][1]);

    if (det === 0.0) {
      // Unable to solve linear system
      return 0;
    }

    y[0] = (A[1][1] * x[0] - A[0][1] * x[1]) / det;
    y[1] = (-(A[1][0] * x[0]) + A[0][0] * x[1]) / det;
    x[0] = y[0];
    x[1] = y[1];
    return 1;
  }

  if (size === 1) {
    if (A[0][0] === 0.0) {
      // Unable to solve linear system
      return 0;
    }

    x[0] /= A[0][0];
    return 1;
  } //
  // System of equations is not trivial, use Crout's method
  //
  // Check on allocation of working vectors


  var index = createArray(size); // Factor and solve matrix

  if (luFactorLinearSystem(A, index, size) === 0) {
    return 0;
  }

  luSolveLinearSystem(A, index, x, size);
  return 1;
}
function invertMatrix(A, AI, size) {
  var index = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;
  var column = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;
  var tmp1Size = index || createArray(size);
  var tmp2Size = column || createArray(size); // Factor matrix; then begin solving for inverse one column at a time.
  // Note: tmp1Size returned value is used later, tmp2Size is just working
  // memory whose values are not used in LUSolveLinearSystem

  if (luFactorLinearSystem(A, tmp1Size, size) === 0) {
    return 0;
  }

  for (var j = 0; j < size; j++) {
    for (var i = 0; i < size; i++) {
      tmp2Size[i] = 0.0;
    }

    tmp2Size[j] = 1.0;
    luSolveLinearSystem(A, tmp1Size, tmp2Size, size);

    for (var _i4 = 0; _i4 < size; _i4++) {
      AI[_i4][j] = tmp2Size[_i4];
    }
  }

  return 1;
}
function estimateMatrixCondition(A, size) {
  var minValue = +Number.MAX_VALUE;
  var maxValue = -Number.MAX_VALUE; // find the maximum value

  for (var i = 0; i < size; i++) {
    for (var j = i; j < size; j++) {
      if (Math.abs(A[i][j]) > max) {
        maxValue = Math.abs(A[i][j]);
      }
    }
  } // find the minimum diagonal value


  for (var _i5 = 0; _i5 < size; _i5++) {
    if (Math.abs(A[_i5][_i5]) < min) {
      minValue = Math.abs(A[_i5][_i5]);
    }
  }

  if (minValue === 0.0) {
    return Number.MAX_VALUE;
  }

  return maxValue / minValue;
}
function jacobi(a_3x3, w, v) {
  return jacobiN(a_3x3, 3, w, v);
}
function solveHomogeneousLeastSquares(numberOfSamples, xt, xOrder, mt) {
  // check dimensional consistency
  if (numberOfSamples < xOrder) {
    vtkWarningMacro('Insufficient number of samples. Underdetermined.');
    return 0;
  }

  var i;
  var j;
  var k; // set up intermediate variables
  // Allocate matrix to hold X times transpose of X

  var XXt = createArray(xOrder); // size x by x
  // Allocate the array of eigenvalues and eigenvectors

  var eigenvals = createArray(xOrder);
  var eigenvecs = createArray(xOrder); // Clear the upper triangular region (and btw, allocate the eigenvecs as well)

  for (i = 0; i < xOrder; i++) {
    eigenvecs[i] = createArray(xOrder);
    XXt[i] = createArray(xOrder);

    for (j = 0; j < xOrder; j++) {
      XXt[i][j] = 0.0;
    }
  } // Calculate XXt upper half only, due to symmetry


  for (k = 0; k < numberOfSamples; k++) {
    for (i = 0; i < xOrder; i++) {
      for (j = i; j < xOrder; j++) {
        XXt[i][j] += xt[k][i] * xt[k][j];
      }
    }
  } // now fill in the lower half of the XXt matrix


  for (i = 0; i < xOrder; i++) {
    for (j = 0; j < i; j++) {
      XXt[i][j] = XXt[j][i];
    }
  } // Compute the eigenvectors and eigenvalues


  jacobiN(XXt, xOrder, eigenvals, eigenvecs); // Smallest eigenval is at the end of the list (xOrder-1), and solution is
  // corresponding eigenvec.

  for (i = 0; i < xOrder; i++) {
    mt[i][0] = eigenvecs[i][xOrder - 1];
  }

  return 1;
}
function solveLeastSquares(numberOfSamples, xt, xOrder, yt, yOrder, mt) {
  var checkHomogeneous = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : true;

  // check dimensional consistency
  if (numberOfSamples < xOrder || numberOfSamples < yOrder) {
    vtkWarningMacro('Insufficient number of samples. Underdetermined.');
    return 0;
  }

  var homogenFlags = createArray(yOrder);
  var allHomogeneous = 1;
  var hmt;
  var homogRC = 0;
  var i;
  var j;
  var k;
  var someHomogeneous = 0; // Ok, first init some flags check and see if all the systems are homogeneous

  if (checkHomogeneous) {
    // If Y' is zero, it's a homogeneous system and can't be solved via
    // the pseudoinverse method. Detect this case, warn the user, and
    // invoke SolveHomogeneousLeastSquares instead. Note that it doesn't
    // really make much sense for yOrder to be greater than one in this case,
    // since that's just yOrder occurrences of a 0 vector on the RHS, but
    // we allow it anyway. N
    // Initialize homogeneous flags on a per-right-hand-side basis
    for (j = 0; j < yOrder; j++) {
      homogenFlags[j] = 1;
    }

    for (i = 0; i < numberOfSamples; i++) {
      for (j = 0; j < yOrder; j++) {
        if (Math.abs(yt[i][j]) > VTK_SMALL_NUMBER) {
          allHomogeneous = 0;
          homogenFlags[j] = 0;
        }
      }
    } // If we've got one system, and it's homogeneous, do it and bail out quickly.


    if (allHomogeneous && yOrder === 1) {
      vtkWarningMacro('Detected homogeneous system (Y=0), calling SolveHomogeneousLeastSquares()');
      return solveHomogeneousLeastSquares(numberOfSamples, xt, xOrder, mt);
    } // Ok, we've got more than one system of equations.
    // Figure out if we need to calculate the homogeneous equation solution for
    // any of them.


    if (allHomogeneous) {
      someHomogeneous = 1;
    } else {
      for (j = 0; j < yOrder; j++) {
        if (homogenFlags[j]) {
          someHomogeneous = 1;
        }
      }
    }
  } // If necessary, solve the homogeneous problem


  if (someHomogeneous) {
    // hmt is the homogeneous equation version of mt, the general solution.
    hmt = createArray(xOrder);

    for (j = 0; j < xOrder; j++) {
      // Only allocate 1 here, not yOrder, because here we're going to solve
      // just the one homogeneous equation subset of the entire problem
      hmt[j] = [0];
    } // Ok, solve the homogeneous problem


    homogRC = solveHomogeneousLeastSquares(numberOfSamples, xt, xOrder, hmt);
  } // set up intermediate variables


  var XXt = createArray(xOrder); // size x by x

  var XXtI = createArray(xOrder); // size x by x

  var XYt = createArray(xOrder); // size x by y

  for (i = 0; i < xOrder; i++) {
    XXt[i] = createArray(xOrder);
    XXtI[i] = createArray(xOrder);

    for (j = 0; j < xOrder; j++) {
      XXt[i][j] = 0.0;
      XXtI[i][j] = 0.0;
    }

    XYt[i] = createArray(yOrder);

    for (j = 0; j < yOrder; j++) {
      XYt[i][j] = 0.0;
    }
  } // first find the pseudoinverse matrix


  for (k = 0; k < numberOfSamples; k++) {
    for (i = 0; i < xOrder; i++) {
      // first calculate the XXt matrix, only do the upper half (symmetrical)
      for (j = i; j < xOrder; j++) {
        XXt[i][j] += xt[k][i] * xt[k][j];
      } // now calculate the XYt matrix


      for (j = 0; j < yOrder; j++) {
        XYt[i][j] += xt[k][i] * yt[k][j];
      }
    }
  } // now fill in the lower half of the XXt matrix


  for (i = 0; i < xOrder; i++) {
    for (j = 0; j < i; j++) {
      XXt[i][j] = XXt[j][i];
    }
  }

  var successFlag = invertMatrix(XXt, XXtI, xOrder); // next get the inverse of XXt

  if (successFlag) {
    for (i = 0; i < xOrder; i++) {
      for (j = 0; j < yOrder; j++) {
        mt[i][j] = 0.0;

        for (k = 0; k < xOrder; k++) {
          mt[i][j] += XXtI[i][k] * XYt[k][j];
        }
      }
    }
  } // Fix up any of the solutions that correspond to the homogeneous equation
  // problem.


  if (someHomogeneous) {
    for (j = 0; j < yOrder; j++) {
      if (homogenFlags[j]) {
        // Fix this one
        for (i = 0; i < xOrder; i++) {
          mt[i][j] = hmt[i][0];
        }
      }
    }
  }

  if (someHomogeneous) {
    return homogRC && successFlag;
  }

  return successFlag;
}
function hex2float(hexStr) {
  var outFloatArray = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [0, 0.5, 1];

  switch (hexStr.length) {
    case 3:
      // abc => #aabbcc
      outFloatArray[0] = parseInt(hexStr[0], 16) * 17 / 255;
      outFloatArray[1] = parseInt(hexStr[1], 16) * 17 / 255;
      outFloatArray[2] = parseInt(hexStr[2], 16) * 17 / 255;
      return outFloatArray;

    case 4:
      // #abc => #aabbcc
      outFloatArray[0] = parseInt(hexStr[1], 16) * 17 / 255;
      outFloatArray[1] = parseInt(hexStr[2], 16) * 17 / 255;
      outFloatArray[2] = parseInt(hexStr[3], 16) * 17 / 255;
      return outFloatArray;

    case 6:
      // ab01df => #ab01df
      outFloatArray[0] = parseInt(hexStr.substr(0, 2), 16) / 255;
      outFloatArray[1] = parseInt(hexStr.substr(2, 2), 16) / 255;
      outFloatArray[2] = parseInt(hexStr.substr(4, 2), 16) / 255;
      return outFloatArray;

    case 7:
      // #ab01df
      outFloatArray[0] = parseInt(hexStr.substr(1, 2), 16) / 255;
      outFloatArray[1] = parseInt(hexStr.substr(3, 2), 16) / 255;
      outFloatArray[2] = parseInt(hexStr.substr(5, 2), 16) / 255;
      return outFloatArray;

    case 9:
      // #ab01df00
      outFloatArray[0] = parseInt(hexStr.substr(1, 2), 16) / 255;
      outFloatArray[1] = parseInt(hexStr.substr(3, 2), 16) / 255;
      outFloatArray[2] = parseInt(hexStr.substr(5, 2), 16) / 255;
      outFloatArray[3] = parseInt(hexStr.substr(7, 2), 16) / 255;
      return outFloatArray;

    default:
      return outFloatArray;
  }
}
function rgb2hsv(rgb, hsv) {
  var h;
  var s;

  var _rgb = _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0___default()(rgb, 3),
      r = _rgb[0],
      g = _rgb[1],
      b = _rgb[2];

  var onethird = 1.0 / 3.0;
  var onesixth = 1.0 / 6.0;
  var twothird = 2.0 / 3.0;
  var cmax = r;
  var cmin = r;

  if (g > cmax) {
    cmax = g;
  } else if (g < cmin) {
    cmin = g;
  }

  if (b > cmax) {
    cmax = b;
  } else if (b < cmin) {
    cmin = b;
  }

  var v = cmax;

  if (v > 0.0) {
    s = (cmax - cmin) / cmax;
  } else {
    s = 0.0;
  }

  if (s > 0) {
    if (r === cmax) {
      h = onesixth * (g - b) / (cmax - cmin);
    } else if (g === cmax) {
      h = onethird + onesixth * (b - r) / (cmax - cmin);
    } else {
      h = twothird + onesixth * (r - g) / (cmax - cmin);
    }

    if (h < 0.0) {
      h += 1.0;
    }
  } else {
    h = 0.0;
  } // Set the values back to the array


  hsv[0] = h;
  hsv[1] = s;
  hsv[2] = v;
}
function hsv2rgb(hsv, rgb) {
  var _hsv = _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0___default()(hsv, 3),
      h = _hsv[0],
      s = _hsv[1],
      v = _hsv[2];

  var onethird = 1.0 / 3.0;
  var onesixth = 1.0 / 6.0;
  var twothird = 2.0 / 3.0;
  var fivesixth = 5.0 / 6.0;
  var r;
  var g;
  var b; // compute RGB from HSV

  if (h > onesixth && h <= onethird) {
    // green/red
    g = 1.0;
    r = (onethird - h) / onesixth;
    b = 0.0;
  } else if (h > onethird && h <= 0.5) {
    // green/blue
    g = 1.0;
    b = (h - onethird) / onesixth;
    r = 0.0;
  } else if (h > 0.5 && h <= twothird) {
    // blue/green
    b = 1.0;
    g = (twothird - h) / onesixth;
    r = 0.0;
  } else if (h > twothird && h <= fivesixth) {
    // blue/red
    b = 1.0;
    r = (h - twothird) / onesixth;
    g = 0.0;
  } else if (h > fivesixth && h <= 1.0) {
    // red/blue
    r = 1.0;
    b = (1.0 - h) / onesixth;
    g = 0.0;
  } else {
    // red/green
    r = 1.0;
    g = h / onesixth;
    b = 0.0;
  } // add Saturation to the equation.


  r = s * r + (1.0 - s);
  g = s * g + (1.0 - s);
  b = s * b + (1.0 - s);
  r *= v;
  g *= v;
  b *= v; // Assign back to the array

  rgb[0] = r;
  rgb[1] = g;
  rgb[2] = b;
}
function lab2xyz(lab, xyz) {
  // LAB to XYZ
  var _lab = _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0___default()(lab, 3),
      L = _lab[0],
      a = _lab[1],
      b = _lab[2];

  var var_Y = (L + 16) / 116;
  var var_X = a / 500 + var_Y;
  var var_Z = var_Y - b / 200;

  if (Math.pow(var_Y, 3) > 0.008856) {
    var_Y = Math.pow(var_Y, 3);
  } else {
    var_Y = (var_Y - 16.0 / 116.0) / 7.787;
  }

  if (Math.pow(var_X, 3) > 0.008856) {
    var_X = Math.pow(var_X, 3);
  } else {
    var_X = (var_X - 16.0 / 116.0) / 7.787;
  }

  if (Math.pow(var_Z, 3) > 0.008856) {
    var_Z = Math.pow(var_Z, 3);
  } else {
    var_Z = (var_Z - 16.0 / 116.0) / 7.787;
  }

  var ref_X = 0.9505;
  var ref_Y = 1.0;
  var ref_Z = 1.089;
  xyz[0] = ref_X * var_X; // ref_X = 0.9505  Observer= 2 deg Illuminant= D65

  xyz[1] = ref_Y * var_Y; // ref_Y = 1.000

  xyz[2] = ref_Z * var_Z; // ref_Z = 1.089
}
function xyz2lab(xyz, lab) {
  var _xyz = _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0___default()(xyz, 3),
      x = _xyz[0],
      y = _xyz[1],
      z = _xyz[2];

  var ref_X = 0.9505;
  var ref_Y = 1.0;
  var ref_Z = 1.089;
  var var_X = x / ref_X; // ref_X = 0.9505  Observer= 2 deg, Illuminant= D65

  var var_Y = y / ref_Y; // ref_Y = 1.000

  var var_Z = z / ref_Z; // ref_Z = 1.089

  if (var_X > 0.008856) var_X = Math.pow(var_X, 1.0 / 3.0);else var_X = 7.787 * var_X + 16.0 / 116.0;
  if (var_Y > 0.008856) var_Y = Math.pow(var_Y, 1.0 / 3.0);else var_Y = 7.787 * var_Y + 16.0 / 116.0;
  if (var_Z > 0.008856) var_Z = Math.pow(var_Z, 1.0 / 3.0);else var_Z = 7.787 * var_Z + 16.0 / 116.0;
  lab[0] = 116 * var_Y - 16;
  lab[1] = 500 * (var_X - var_Y);
  lab[2] = 200 * (var_Y - var_Z);
}
function xyz2rgb(xyz, rgb) {
  var _xyz2 = _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0___default()(xyz, 3),
      x = _xyz2[0],
      y = _xyz2[1],
      z = _xyz2[2];

  var r = x * 3.2406 + y * -1.5372 + z * -0.4986;
  var g = x * -0.9689 + y * 1.8758 + z * 0.0415;
  var b = x * 0.0557 + y * -0.204 + z * 1.057; // The following performs a "gamma correction" specified by the sRGB color
  // space.  sRGB is defined by a canonical definition of a display monitor and
  // has been standardized by the International Electrotechnical Commission (IEC
  // 61966-2-1).  The nonlinearity of the correction is designed to make the
  // colors more perceptually uniform.  This color space has been adopted by
  // several applications including Adobe Photoshop and Microsoft Windows color
  // management.  OpenGL is agnostic on its RGB color space, but it is reasonable
  // to assume it is close to this one.

  if (r > 0.0031308) r = 1.055 * Math.pow(r, 1 / 2.4) - 0.055;else r *= 12.92;
  if (g > 0.0031308) g = 1.055 * Math.pow(g, 1 / 2.4) - 0.055;else g *= 12.92;
  if (b > 0.0031308) b = 1.055 * Math.pow(b, 1 / 2.4) - 0.055;else b *= 12.92; // Clip colors. ideally we would do something that is perceptually closest
  // (since we can see colors outside of the display gamut), but this seems to
  // work well enough.

  var maxVal = r;
  if (maxVal < g) maxVal = g;
  if (maxVal < b) maxVal = b;

  if (maxVal > 1.0) {
    r /= maxVal;
    g /= maxVal;
    b /= maxVal;
  }

  if (r < 0) r = 0;
  if (g < 0) g = 0;
  if (b < 0) b = 0; // Push values back to array

  rgb[0] = r;
  rgb[1] = g;
  rgb[2] = b;
}
function rgb2xyz(rgb, xyz) {
  var _rgb2 = _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0___default()(rgb, 3),
      r = _rgb2[0],
      g = _rgb2[1],
      b = _rgb2[2]; // The following performs a "gamma correction" specified by the sRGB color
  // space.  sRGB is defined by a canonical definition of a display monitor and
  // has been standardized by the International Electrotechnical Commission (IEC
  // 61966-2-1).  The nonlinearity of the correction is designed to make the
  // colors more perceptually uniform.  This color space has been adopted by
  // several applications including Adobe Photoshop and Microsoft Windows color
  // management.  OpenGL is agnostic on its RGB color space, but it is reasonable
  // to assume it is close to this one.


  if (r > 0.04045) r = Math.pow((r + 0.055) / 1.055, 2.4);else r /= 12.92;
  if (g > 0.04045) g = Math.pow((g + 0.055) / 1.055, 2.4);else g /= 12.92;
  if (b > 0.04045) b = Math.pow((b + 0.055) / 1.055, 2.4);else b /= 12.92; // Observer. = 2 deg, Illuminant = D65

  xyz[0] = r * 0.4124 + g * 0.3576 + b * 0.1805;
  xyz[1] = r * 0.2126 + g * 0.7152 + b * 0.0722;
  xyz[2] = r * 0.0193 + g * 0.1192 + b * 0.9505;
}
function rgb2lab(rgb, lab) {
  var xyz = [0, 0, 0];
  rgb2xyz(rgb, xyz);
  xyz2lab(xyz, lab);
}
function lab2rgb(lab, rgb) {
  var xyz = [0, 0, 0];
  lab2xyz(lab, xyz);
  xyz2rgb(xyz, rgb);
}
function uninitializeBounds(bounds) {
  bounds[0] = 1.0;
  bounds[1] = -1.0;
  bounds[2] = 1.0;
  bounds[3] = -1.0;
  bounds[4] = 1.0;
  bounds[5] = -1.0;
  return bounds;
}
function areBoundsInitialized(bounds) {
  return !(bounds[1] - bounds[0] < 0.0);
}
function computeBoundsFromPoints(point1, point2, bounds) {
  bounds[0] = Math.min(point1[0], point2[0]);
  bounds[1] = Math.max(point1[0], point2[0]);
  bounds[2] = Math.min(point1[1], point2[1]);
  bounds[3] = Math.max(point1[1], point2[1]);
  bounds[4] = Math.min(point1[2], point2[2]);
  bounds[5] = Math.max(point1[2], point2[2]);
  return bounds;
}
function clampValue(value, minValue, maxValue) {
  if (value < minValue) {
    return minValue;
  }

  if (value > maxValue) {
    return maxValue;
  }

  return value;
}
function clampVector(vector, minVector, maxVector) {
  var out = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [0, 0, 0];
  out[0] = clampValue(vector[0], minVector[0], maxVector[0]);
  out[1] = clampValue(vector[1], minVector[1], maxVector[1]);
  out[2] = clampValue(vector[2], minVector[2], maxVector[2]);
  return out;
}
function clampAndNormalizeValue(value, range) {
  var result = 0;

  if (range[0] !== range[1]) {
    // clamp
    if (value < range[0]) {
      result = range[0];
    } else if (value > range[1]) {
      result = range[1];
    } else {
      result = value;
    } // normalize


    result = (result - range[0]) / (range[1] - range[0]);
  }

  return result;
}
var getScalarTypeFittingRange = notImplemented('GetScalarTypeFittingRange');
var getAdjustedScalarRange = notImplemented('GetAdjustedScalarRange');
function extentIsWithinOtherExtent(extent1, extent2) {
  if (!extent1 || !extent2) {
    return 0;
  }

  for (var i = 0; i < 6; i += 2) {
    if (extent1[i] < extent2[i] || extent1[i] > extent2[i + 1] || extent1[i + 1] < extent2[i] || extent1[i + 1] > extent2[i + 1]) {
      return 0;
    }
  }

  return 1;
}
function boundsIsWithinOtherBounds(bounds1_6, bounds2_6, delta_3) {
  if (!bounds1_6 || !bounds2_6) {
    return 0;
  }

  for (var i = 0; i < 6; i += 2) {
    if (bounds1_6[i] + delta_3[i / 2] < bounds2_6[i] || bounds1_6[i] - delta_3[i / 2] > bounds2_6[i + 1] || bounds1_6[i + 1] + delta_3[i / 2] < bounds2_6[i] || bounds1_6[i + 1] - delta_3[i / 2] > bounds2_6[i + 1]) {
      return 0;
    }
  }

  return 1;
}
function pointIsWithinBounds(point_3, bounds_6, delta_3) {
  if (!point_3 || !bounds_6 || !delta_3) {
    return 0;
  }

  for (var i = 0; i < 3; i++) {
    if (point_3[i] + delta_3[i] < bounds_6[2 * i] || point_3[i] - delta_3[i] > bounds_6[2 * i + 1]) {
      return 0;
    }
  }

  return 1;
}
function solve3PointCircle(p1, p2, p3, center) {
  var v21 = createArray(3);
  var v32 = createArray(3);
  var v13 = createArray(3);
  var v12 = createArray(3);
  var v23 = createArray(3);
  var v31 = createArray(3);

  for (var i = 0; i < 3; ++i) {
    v21[i] = p1[i] - p2[i];
    v32[i] = p2[i] - p3[i];
    v13[i] = p3[i] - p1[i];
    v12[i] = -v21[i];
    v23[i] = -v32[i];
    v31[i] = -v13[i];
  }

  var norm12 = norm(v12);
  var norm23 = norm(v23);
  var norm13 = norm(v13);
  var crossv21v32 = createArray(3);
  cross(v21, v32, crossv21v32);
  var normCross = norm(crossv21v32);
  var radius = norm12 * norm23 * norm13 / (2 * normCross);
  var normCross22 = 2 * normCross * normCross;
  var alpha = norm23 * norm23 * dot(v21, v31) / normCross22;
  var beta = norm13 * norm13 * dot(v12, v32) / normCross22;
  var gamma = norm12 * norm12 * dot(v13, v23) / normCross22;

  for (var _i6 = 0; _i6 < 3; ++_i6) {
    center[_i6] = alpha * p1[_i6] + beta * p2[_i6] + gamma * p3[_i6];
  }

  return radius;
}
var inf = Infinity;
var negInf = -Infinity;
var isInf = function isInf(value) {
  return !Number.isFinite(value);
};
var isFinite = Number.isFinite,
    isNaN = Number.isNaN;
var isNan = isNaN; // JavaScript - add-on ----------------------

function createUninitializedBounds() {
  return [].concat([Number.MAX_VALUE, -Number.MAX_VALUE, // X
  Number.MAX_VALUE, -Number.MAX_VALUE, // Y
  Number.MAX_VALUE, -Number.MAX_VALUE // Z
  ]);
}
function getMajorAxisIndex(vector) {
  var maxValue = -1;
  var axisIndex = -1;

  for (var i = 0; i < vector.length; i++) {
    var value = Math.abs(vector[i]);

    if (value > maxValue) {
      axisIndex = i;
      maxValue = value;
    }
  }

  return axisIndex;
}
function floatToHex2(value) {
  var integer = Math.floor(value * 255);

  if (integer > 15) {
    return integer.toString(16);
  }

  return "0".concat(integer.toString(16));
}
function floatRGB2HexCode(rgbArray) {
  var prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '#';
  return "".concat(prefix).concat(rgbArray.map(floatToHex2).join(''));
}

function floatToChar(f) {
  return Math.round(f * 255);
}

function float2CssRGBA(rgbArray) {
  if (rgbArray.length === 3) {
    return "rgb(".concat(rgbArray.map(floatToChar).join(', '), ")");
  }

  return "rgba(".concat(floatToChar(rgbArray[0] || 0), ", ").concat(floatToChar(rgbArray[1] || 0), ", ").concat(floatToChar(rgbArray[2] || 0), ", ").concat(rgbArray[3] || 0, ")");
} // ----------------------------------------------------------------------------
// Only Static API
// ----------------------------------------------------------------------------

var vtkMath = {
  Pi: Pi,
  radiansFromDegrees: radiansFromDegrees,
  degreesFromRadians: degreesFromRadians,
  round: round,
  floor: floor,
  ceil: ceil,
  ceilLog2: ceilLog2,
  min: min,
  max: max,
  arrayMin: arrayMin,
  arrayMax: arrayMax,
  arrayRange: arrayRange,
  isPowerOfTwo: isPowerOfTwo,
  nearestPowerOfTwo: nearestPowerOfTwo,
  factorial: factorial,
  binomial: binomial,
  beginCombination: beginCombination,
  nextCombination: nextCombination,
  randomSeed: randomSeed,
  getSeed: getSeed,
  random: random,
  gaussian: gaussian,
  add: add,
  subtract: subtract,
  multiplyScalar: multiplyScalar,
  multiplyScalar2D: multiplyScalar2D,
  multiplyAccumulate: multiplyAccumulate,
  multiplyAccumulate2D: multiplyAccumulate2D,
  dot: dot,
  outer: outer,
  cross: cross,
  norm: norm,
  normalize: normalize,
  perpendiculars: perpendiculars,
  projectVector: projectVector,
  projectVector2D: projectVector2D,
  distance2BetweenPoints: distance2BetweenPoints,
  angleBetweenVectors: angleBetweenVectors,
  gaussianAmplitude: gaussianAmplitude,
  gaussianWeight: gaussianWeight,
  dot2D: dot2D,
  outer2D: outer2D,
  norm2D: norm2D,
  normalize2D: normalize2D,
  determinant2x2: determinant2x2,
  LUFactor3x3: LUFactor3x3,
  LUSolve3x3: LUSolve3x3,
  linearSolve3x3: linearSolve3x3,
  multiply3x3_vect3: multiply3x3_vect3,
  multiply3x3_mat3: multiply3x3_mat3,
  multiplyMatrix: multiplyMatrix,
  transpose3x3: transpose3x3,
  invert3x3: invert3x3,
  identity3x3: identity3x3,
  determinant3x3: determinant3x3,
  quaternionToMatrix3x3: quaternionToMatrix3x3,
  areEquals: areEquals,
  areMatricesEqual: areMatricesEqual,
  roundNumber: roundNumber,
  roundVector: roundVector,
  matrix3x3ToQuaternion: matrix3x3ToQuaternion,
  multiplyQuaternion: multiplyQuaternion,
  orthogonalize3x3: orthogonalize3x3,
  diagonalize3x3: diagonalize3x3,
  singularValueDecomposition3x3: singularValueDecomposition3x3,
  solveLinearSystem: solveLinearSystem,
  invertMatrix: invertMatrix,
  luFactorLinearSystem: luFactorLinearSystem,
  luSolveLinearSystem: luSolveLinearSystem,
  estimateMatrixCondition: estimateMatrixCondition,
  jacobi: jacobi,
  jacobiN: jacobiN,
  solveHomogeneousLeastSquares: solveHomogeneousLeastSquares,
  solveLeastSquares: solveLeastSquares,
  hex2float: hex2float,
  rgb2hsv: rgb2hsv,
  hsv2rgb: hsv2rgb,
  lab2xyz: lab2xyz,
  xyz2lab: xyz2lab,
  xyz2rgb: xyz2rgb,
  rgb2xyz: rgb2xyz,
  rgb2lab: rgb2lab,
  lab2rgb: lab2rgb,
  uninitializeBounds: uninitializeBounds,
  areBoundsInitialized: areBoundsInitialized,
  computeBoundsFromPoints: computeBoundsFromPoints,
  clampValue: clampValue,
  clampVector: clampVector,
  clampAndNormalizeValue: clampAndNormalizeValue,
  getScalarTypeFittingRange: getScalarTypeFittingRange,
  getAdjustedScalarRange: getAdjustedScalarRange,
  extentIsWithinOtherExtent: extentIsWithinOtherExtent,
  boundsIsWithinOtherBounds: boundsIsWithinOtherBounds,
  pointIsWithinBounds: pointIsWithinBounds,
  solve3PointCircle: solve3PointCircle,
  inf: inf,
  negInf: negInf,
  isInf: isInf,
  isNan: isNaN,
  isNaN: isNaN,
  isFinite: isFinite,
  // JS add-on
  createUninitializedBounds: createUninitializedBounds,
  getMajorAxisIndex: getMajorAxisIndex,
  floatToHex2: floatToHex2,
  floatRGB2HexCode: floatRGB2HexCode,
  float2CssRGBA: float2CssRGBA
};

var vtkMath$1 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  Pi: Pi,
  radiansFromDegrees: radiansFromDegrees,
  degreesFromRadians: degreesFromRadians,
  round: round,
  floor: floor,
  ceil: ceil,
  min: min,
  max: max,
  arrayMin: arrayMin,
  arrayMax: arrayMax,
  arrayRange: arrayRange,
  ceilLog2: ceilLog2,
  factorial: factorial,
  nearestPowerOfTwo: nearestPowerOfTwo,
  isPowerOfTwo: isPowerOfTwo,
  binomial: binomial,
  beginCombination: beginCombination,
  nextCombination: nextCombination,
  randomSeed: randomSeed,
  getSeed: getSeed,
  random: random,
  gaussian: gaussian,
  add: add,
  subtract: subtract,
  multiplyScalar: multiplyScalar,
  multiplyScalar2D: multiplyScalar2D,
  multiplyAccumulate: multiplyAccumulate,
  multiplyAccumulate2D: multiplyAccumulate2D,
  dot: dot,
  outer: outer,
  cross: cross,
  norm: norm,
  normalize: normalize,
  perpendiculars: perpendiculars,
  projectVector: projectVector,
  dot2D: dot2D,
  projectVector2D: projectVector2D,
  distance2BetweenPoints: distance2BetweenPoints,
  angleBetweenVectors: angleBetweenVectors,
  signedAngleBetweenVectors: signedAngleBetweenVectors,
  gaussianAmplitude: gaussianAmplitude,
  gaussianWeight: gaussianWeight,
  outer2D: outer2D,
  norm2D: norm2D,
  normalize2D: normalize2D,
  determinant2x2: determinant2x2,
  LUFactor3x3: LUFactor3x3,
  LUSolve3x3: LUSolve3x3,
  linearSolve3x3: linearSolve3x3,
  multiply3x3_vect3: multiply3x3_vect3,
  multiply3x3_mat3: multiply3x3_mat3,
  multiplyMatrix: multiplyMatrix,
  transpose3x3: transpose3x3,
  invert3x3: invert3x3,
  identity3x3: identity3x3,
  determinant3x3: determinant3x3,
  quaternionToMatrix3x3: quaternionToMatrix3x3,
  areEquals: areEquals,
  areMatricesEqual: areMatricesEqual,
  roundNumber: roundNumber,
  roundVector: roundVector,
  jacobiN: jacobiN,
  matrix3x3ToQuaternion: matrix3x3ToQuaternion,
  multiplyQuaternion: multiplyQuaternion,
  orthogonalize3x3: orthogonalize3x3,
  diagonalize3x3: diagonalize3x3,
  singularValueDecomposition3x3: singularValueDecomposition3x3,
  luFactorLinearSystem: luFactorLinearSystem,
  luSolveLinearSystem: luSolveLinearSystem,
  solveLinearSystem: solveLinearSystem,
  invertMatrix: invertMatrix,
  estimateMatrixCondition: estimateMatrixCondition,
  jacobi: jacobi,
  solveHomogeneousLeastSquares: solveHomogeneousLeastSquares,
  solveLeastSquares: solveLeastSquares,
  hex2float: hex2float,
  rgb2hsv: rgb2hsv,
  hsv2rgb: hsv2rgb,
  lab2xyz: lab2xyz,
  xyz2lab: xyz2lab,
  xyz2rgb: xyz2rgb,
  rgb2xyz: rgb2xyz,
  rgb2lab: rgb2lab,
  lab2rgb: lab2rgb,
  uninitializeBounds: uninitializeBounds,
  areBoundsInitialized: areBoundsInitialized,
  computeBoundsFromPoints: computeBoundsFromPoints,
  clampValue: clampValue,
  clampVector: clampVector,
  clampAndNormalizeValue: clampAndNormalizeValue,
  getScalarTypeFittingRange: getScalarTypeFittingRange,
  getAdjustedScalarRange: getAdjustedScalarRange,
  extentIsWithinOtherExtent: extentIsWithinOtherExtent,
  boundsIsWithinOtherBounds: boundsIsWithinOtherBounds,
  pointIsWithinBounds: pointIsWithinBounds,
  solve3PointCircle: solve3PointCircle,
  inf: inf,
  negInf: negInf,
  isInf: isInf,
  isFinite: isFinite,
  isNaN: isNaN,
  isNan: isNan,
  createUninitializedBounds: createUninitializedBounds,
  getMajorAxisIndex: getMajorAxisIndex,
  floatToHex2: floatToHex2,
  floatRGB2HexCode: floatRGB2HexCode,
  float2CssRGBA: float2CssRGBA,
  'default': vtkMath
});




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Common/Core/MatrixBuilder.js":
/*!********************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Common/Core/MatrixBuilder.js ***!
  \********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkMatrixBuilder; });
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "../node_modules/@babel/runtime/helpers/toConsumableArray.js");
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js");
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! gl-matrix */ "../node_modules/gl-matrix/esm/index.js");
/* harmony import */ var _Math_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Math/index.js */ "../node_modules/@kitware/vtk.js/Common/Core/Math/index.js");






var NoOp = function NoOp(v) {
  return v;
};

var IDENTITY = gl_matrix__WEBPACK_IMPORTED_MODULE_3__["mat4"].identity(new Float64Array(16));
var EPSILON = 1e-6;

var Transform = /*#__PURE__*/function () {
  function Transform() {
    var useDegree = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default()(this, Transform);

    this.matrix = gl_matrix__WEBPACK_IMPORTED_MODULE_3__["mat4"].identity(new Float64Array(16));
    this.tmp = new Float64Array(3);
    this.angleConv = useDegree ? gl_matrix__WEBPACK_IMPORTED_MODULE_3__["glMatrix"].toRadian : NoOp;
  }

  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2___default()(Transform, [{
    key: "rotateFromDirections",
    value: function rotateFromDirections(originDirection, targetDirection) {
      var src = new Float64Array(3);
      var dst = new Float64Array(3);
      var transf = new Float64Array(16);
      gl_matrix__WEBPACK_IMPORTED_MODULE_3__["vec3"].set(src, originDirection[0], originDirection[1], originDirection[2]);
      gl_matrix__WEBPACK_IMPORTED_MODULE_3__["vec3"].set(dst, targetDirection[0], targetDirection[1], targetDirection[2]);
      gl_matrix__WEBPACK_IMPORTED_MODULE_3__["vec3"].normalize(src, src);
      gl_matrix__WEBPACK_IMPORTED_MODULE_3__["vec3"].normalize(dst, dst);
      var cosAlpha = gl_matrix__WEBPACK_IMPORTED_MODULE_3__["vec3"].dot(src, dst);

      if (cosAlpha >= 1) {
        return this;
      }

      gl_matrix__WEBPACK_IMPORTED_MODULE_3__["vec3"].cross(this.tmp, src, dst);

      if (gl_matrix__WEBPACK_IMPORTED_MODULE_3__["vec3"].length(this.tmp) < EPSILON) {
        // cross product is 0, so pick arbitrary axis perpendicular
        // to originDirection.
        gl_matrix__WEBPACK_IMPORTED_MODULE_3__["vec3"].cross(this.tmp, [1, 0, 0], originDirection);

        if (gl_matrix__WEBPACK_IMPORTED_MODULE_3__["vec3"].length(this.tmp) < EPSILON) {
          gl_matrix__WEBPACK_IMPORTED_MODULE_3__["vec3"].cross(this.tmp, [0, 1, 0], originDirection);
        }
      }

      gl_matrix__WEBPACK_IMPORTED_MODULE_3__["mat4"].fromRotation(transf, Math.acos(cosAlpha), this.tmp);
      gl_matrix__WEBPACK_IMPORTED_MODULE_3__["mat4"].multiply(this.matrix, this.matrix, transf);
      return this;
    }
  }, {
    key: "rotate",
    value: function rotate(angle, axis) {
      gl_matrix__WEBPACK_IMPORTED_MODULE_3__["vec3"].set.apply(gl_matrix__WEBPACK_IMPORTED_MODULE_3__["vec3"], [this.tmp].concat(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(axis)));
      gl_matrix__WEBPACK_IMPORTED_MODULE_3__["vec3"].normalize(this.tmp, this.tmp);
      gl_matrix__WEBPACK_IMPORTED_MODULE_3__["mat4"].rotate(this.matrix, this.matrix, this.angleConv(angle), this.tmp);
      return this;
    }
  }, {
    key: "rotateX",
    value: function rotateX(angle) {
      gl_matrix__WEBPACK_IMPORTED_MODULE_3__["mat4"].rotateX(this.matrix, this.matrix, this.angleConv(angle));
      return this;
    }
  }, {
    key: "rotateY",
    value: function rotateY(angle) {
      gl_matrix__WEBPACK_IMPORTED_MODULE_3__["mat4"].rotateY(this.matrix, this.matrix, this.angleConv(angle));
      return this;
    }
  }, {
    key: "rotateZ",
    value: function rotateZ(angle) {
      gl_matrix__WEBPACK_IMPORTED_MODULE_3__["mat4"].rotateZ(this.matrix, this.matrix, this.angleConv(angle));
      return this;
    }
  }, {
    key: "translate",
    value: function translate(x, y, z) {
      gl_matrix__WEBPACK_IMPORTED_MODULE_3__["vec3"].set(this.tmp, x, y, z);
      gl_matrix__WEBPACK_IMPORTED_MODULE_3__["mat4"].translate(this.matrix, this.matrix, this.tmp);
      return this;
    }
  }, {
    key: "scale",
    value: function scale(sx, sy, sz) {
      gl_matrix__WEBPACK_IMPORTED_MODULE_3__["vec3"].set(this.tmp, sx, sy, sz);
      gl_matrix__WEBPACK_IMPORTED_MODULE_3__["mat4"].scale(this.matrix, this.matrix, this.tmp);
      return this;
    }
  }, {
    key: "multiply",
    value: function multiply(mat4x4) {
      gl_matrix__WEBPACK_IMPORTED_MODULE_3__["mat4"].multiply(this.matrix, this.matrix, mat4x4);
      return this;
    }
  }, {
    key: "identity",
    value: function identity() {
      gl_matrix__WEBPACK_IMPORTED_MODULE_3__["mat4"].identity(this.matrix);
      return this;
    } //-----------

  }, {
    key: "apply",
    value: function apply(typedArray) {
      var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
      var nbIterations = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : -1;

      if (Object(_Math_index_js__WEBPACK_IMPORTED_MODULE_4__["a"])(IDENTITY, this.matrix)) {
        // Make sure we can chain apply...
        return this;
      }

      var size = nbIterations === -1 ? typedArray.length : offset + nbIterations * 3;

      for (var i = offset; i < size; i += 3) {
        gl_matrix__WEBPACK_IMPORTED_MODULE_3__["vec3"].set(this.tmp, typedArray[i], typedArray[i + 1], typedArray[i + 2]);
        gl_matrix__WEBPACK_IMPORTED_MODULE_3__["vec3"].transformMat4(this.tmp, this.tmp, this.matrix);
        typedArray[i] = this.tmp[0];
        typedArray[i + 1] = this.tmp[1];
        typedArray[i + 2] = this.tmp[2];
      } // Make sure we can chain apply...


      return this;
    }
  }, {
    key: "getMatrix",
    value: function getMatrix() {
      return this.matrix;
    }
  }, {
    key: "setMatrix",
    value: function setMatrix(mat4x4) {
      if (!!mat4x4 && mat4x4.length === 16) {
        gl_matrix__WEBPACK_IMPORTED_MODULE_3__["mat4"].copy(this.matrix, mat4x4);
      }

      return this;
    }
  }]);

  return Transform;
}();

function buildFromDegree() {
  return new Transform(true);
}

function buildFromRadian() {
  return new Transform(false);
}

var vtkMatrixBuilder = {
  buildFromDegree: buildFromDegree,
  buildFromRadian: buildFromRadian
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Common/Core/Points.js":
/*!*************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Common/Core/Points.js ***!
  \*************************************************************/
/*! exports provided: default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkPoints$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _DataArray_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./DataArray.js */ "../node_modules/@kitware/vtk.js/Common/Core/DataArray.js");
/* harmony import */ var _DataArray_Constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./DataArray/Constants.js */ "../node_modules/@kitware/vtk.js/Common/Core/DataArray/Constants.js");




var vtkErrorMacro = _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].vtkErrorMacro;
var INVALID_BOUNDS = [1, -1, 1, -1, 1, -1]; // ----------------------------------------------------------------------------
// vtkPoints methods
// ----------------------------------------------------------------------------

function vtkPoints(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkPoints'); // Forwarding methods

  publicAPI.getNumberOfPoints = publicAPI.getNumberOfTuples;

  publicAPI.setNumberOfPoints = function (nbPoints) {
    var dimension = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 3;

    if (publicAPI.getNumberOfPoints() !== nbPoints) {
      model.size = nbPoints * dimension;
      model.values = _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].newTypedArray(model.dataType, model.size);
      publicAPI.setNumberOfComponents(dimension);
      publicAPI.modified();
    }
  };

  publicAPI.setPoint = function (idx) {
    var offset = idx * model.numberOfComponents;

    for (var i = 0; i < model.numberOfComponents; i++) {
      model.values[offset + i] = i + 1 < 1 || arguments.length <= i + 1 ? undefined : arguments[i + 1];
    }
  };

  publicAPI.getPoint = publicAPI.getTuple;

  publicAPI.getBounds = function () {
    if (publicAPI.getNumberOfComponents() === 3) {
      var _xRange = publicAPI.getRange(0);

      model.bounds[0] = _xRange[0];
      model.bounds[1] = _xRange[1];

      var _yRange = publicAPI.getRange(1);

      model.bounds[2] = _yRange[0];
      model.bounds[3] = _yRange[1];
      var zRange = publicAPI.getRange(2);
      model.bounds[4] = zRange[0];
      model.bounds[5] = zRange[1];
      return model.bounds;
    }

    if (publicAPI.getNumberOfComponents() !== 2) {
      vtkErrorMacro("getBounds called on an array with components of\n        ".concat(publicAPI.getNumberOfComponents()));
      return INVALID_BOUNDS;
    }

    var xRange = publicAPI.getRange(0);
    model.bounds[0] = xRange[0];
    model.bounds[1] = xRange[1];
    var yRange = publicAPI.getRange(1);
    model.bounds[2] = yRange[0];
    model.bounds[3] = yRange[1];
    model.bounds[4] = 0;
    model.bounds[5] = 0;
    return model.bounds;
  }; // Trigger the computation of bounds


  publicAPI.computeBounds = publicAPI.getBounds; // Initialize

  publicAPI.setNumberOfComponents(model.numberOfComponents < 2 ? 3 : model.numberOfComponents);
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {
  empty: true,
  numberOfComponents: 3,
  dataType: _DataArray_Constants_js__WEBPACK_IMPORTED_MODULE_2__["VtkDataTypes"].FLOAT,
  bounds: [1, -1, 1, -1, 1, -1]
}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues);
  _DataArray_js__WEBPACK_IMPORTED_MODULE_1__["default"].extend(publicAPI, model, initialValues);
  vtkPoints(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].newInstance(extend, 'vtkPoints'); // ----------------------------------------------------------------------------

var vtkPoints$1 = {
  newInstance: newInstance,
  extend: extend
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Common/Core/ScalarsToColors.js":
/*!**********************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Common/Core/ScalarsToColors.js ***!
  \**********************************************************************/
/*! exports provided: default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkScalarsToColors$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "../node_modules/@babel/runtime/helpers/defineProperty.js");
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _DataArray_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./DataArray.js */ "../node_modules/@kitware/vtk.js/Common/Core/DataArray.js");
/* harmony import */ var _ScalarsToColors_Constants_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ScalarsToColors/Constants.js */ "../node_modules/@kitware/vtk.js/Common/Core/ScalarsToColors/Constants.js");
/* harmony import */ var _Rendering_Core_Mapper_Constants_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../Rendering/Core/Mapper/Constants.js */ "../node_modules/@kitware/vtk.js/Rendering/Core/Mapper/Constants.js");






function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

var ScalarMappingTarget = _ScalarsToColors_Constants_js__WEBPACK_IMPORTED_MODULE_3__["default"].ScalarMappingTarget,
    VectorMode = _ScalarsToColors_Constants_js__WEBPACK_IMPORTED_MODULE_3__["default"].VectorMode;
var VtkDataTypes = _DataArray_js__WEBPACK_IMPORTED_MODULE_2__["default"].VtkDataTypes;
var ColorMode = _Rendering_Core_Mapper_Constants_js__WEBPACK_IMPORTED_MODULE_4__["default"].ColorMode;
var vtkErrorMacro = _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].vtkErrorMacro; // ----------------------------------------------------------------------------
// Global methods
// ----------------------------------------------------------------------------
// Add module-level functions or api that you want to expose statically via
// the next section...
// ----------------------------------------------------------------------------
// Static API
// ----------------------------------------------------------------------------

function intColorToUChar(c) {
  return c;
}

function floatColorToUChar(c) {
  return Math.floor(c * 255.0 + 0.5);
} // ----------------------------------------------------------------------------
// vtkScalarsToColors methods
// ----------------------------------------------------------------------------


function vtkScalarsToColors(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkScalarsToColors');

  publicAPI.setVectorModeToMagnitude = function () {
    return publicAPI.setVectorMode(VectorMode.MAGNITUDE);
  };

  publicAPI.setVectorModeToComponent = function () {
    return publicAPI.setVectorMode(VectorMode.COMPONENT);
  };

  publicAPI.setVectorModeToRGBColors = function () {
    return publicAPI.setVectorMode(VectorMode.RGBCOLORS);
  };

  publicAPI.build = function () {};

  publicAPI.isOpaque = function () {
    return true;
  }; //----------------------------------------------------------------------------


  publicAPI.setAnnotations = function (values, annotations) {
    if (values && !annotations || !values && annotations) {
      return;
    }

    if (values && annotations && values.length !== annotations.length) {
      vtkErrorMacro('Values and annotations do not have the same number of tuples so ignoring');
      return;
    }

    model.annotationArray = [];

    if (annotations && values) {
      var num = annotations.length;

      for (var i = 0; i < num; i++) {
        model.annotationArray.push({
          value: values[i],
          annotation: String(annotations[i])
        });
      }
    }

    publicAPI.updateAnnotatedValueMap();
    publicAPI.modified();
  }; //----------------------------------------------------------------------------


  publicAPI.setAnnotation = function (value, annotation) {
    var i = publicAPI.checkForAnnotatedValue(value);
    var modified = false;

    if (i >= 0) {
      if (model.annotationArray[i].annotation !== annotation) {
        model.annotationArray[i].annotation = annotation;
        modified = true;
      }
    } else {
      model.annotationArray.push({
        value: value,
        annotation: annotation
      });
      i = model.annotationArray.length - 1;
      modified = true;
    }

    if (modified) {
      publicAPI.updateAnnotatedValueMap();
      publicAPI.modified();
    }

    return i;
  }; //----------------------------------------------------------------------------


  publicAPI.getNumberOfAnnotatedValues = function () {
    return model.annotationArray.length;
  }; //----------------------------------------------------------------------------


  publicAPI.getAnnotatedValue = function (idx) {
    if (idx < 0 || idx >= model.annotationArray.length) {
      return null;
    }

    return model.annotationArray[idx].value;
  }; //----------------------------------------------------------------------------


  publicAPI.getAnnotation = function (idx) {
    if (model.annotationArray[idx] === undefined) {
      return null;
    }

    return model.annotationArray[idx].annotation;
  }; //----------------------------------------------------------------------------


  publicAPI.getAnnotatedValueIndex = function (val) {
    return model.annotationArray.length ? publicAPI.checkForAnnotatedValue(val) : -1;
  }; //----------------------------------------------------------------------------


  publicAPI.removeAnnotation = function (value) {
    var i = publicAPI.checkForAnnotatedValue(value);
    var needToRemove = i >= 0;

    if (needToRemove) {
      model.annotationArray.splice(i, 1);
      publicAPI.updateAnnotatedValueMap();
      publicAPI.modified();
    }

    return needToRemove;
  }; //----------------------------------------------------------------------------


  publicAPI.resetAnnotations = function () {
    model.annotationArray = [];
    model.annotatedValueMap = [];
    publicAPI.modified();
  }; //----------------------------------------------------------------------------


  publicAPI.getAnnotationColor = function (val, rgba) {
    if (model.indexedLookup) {
      var i = publicAPI.getAnnotatedValueIndex(val);
      publicAPI.getIndexedColor(i, rgba);
    } else {
      publicAPI.getColor(parseFloat(val), rgba);
      rgba[3] = 1.0;
    }
  }; //----------------------------------------------------------------------------


  publicAPI.checkForAnnotatedValue = function (value) {
    return publicAPI.getAnnotatedValueIndexInternal(value);
  }; //----------------------------------------------------------------------------
  // An unsafe version of vtkScalarsToColors::CheckForAnnotatedValue for
  // internal use (no pointer checks performed)


  publicAPI.getAnnotatedValueIndexInternal = function (value) {
    if (model.annotatedValueMap[value] !== undefined) {
      var na = model.annotationArray.length;
      return model.annotatedValueMap[value] % na;
    } // Treat as a NaN


    return -1;
  }; //----------------------------------------------------------------------------


  publicAPI.getIndexedColor = function (val, rgba) {
    rgba[0] = 0.0;
    rgba[1] = 0.0;
    rgba[2] = 0.0;
    rgba[3] = 0.0;
  }; //----------------------------------------------------------------------------


  publicAPI.updateAnnotatedValueMap = function () {
    model.annotatedValueMap = [];
    var na = model.annotationArray.length;

    for (var i = 0; i < na; i++) {
      model.annotatedValueMap[model.annotationArray[i].value] = i;
    }
  }; // Description:
  // Internal methods that map a data array into a 4-component,
  // unsigned char RGBA array. The color mode determines the behavior
  // of mapping. If ColorMode.DEFAULT is set, then unsigned char
  // data arrays are treated as colors (and converted to RGBA if
  // necessary); If ColorMode.DIRECT_SCALARS is set, then all arrays
  // are treated as colors (integer types are clamped in the range 0-255,
  // floating point arrays are clamped in the range 0.0-1.0. Note 'char' does
  // not have enough values to represent a color so mapping this type is
  // considered an error);
  // otherwise, the data is mapped through this instance
  // of ScalarsToColors. The component argument is used for data
  // arrays with more than one component; it indicates which component
  // to use to do the blending.  When the component argument is -1,
  // then the this object uses its own selected technique to change a
  // vector into a scalar to map.


  publicAPI.mapScalars = function (scalars, colorMode, componentIn) {
    var numberOfComponents = scalars.getNumberOfComponents();
    var newColors = null; // map scalars through lookup table only if needed

    if (colorMode === ColorMode.DEFAULT && scalars.getDataType() === VtkDataTypes.UNSIGNED_CHAR || colorMode === ColorMode.DIRECT_SCALARS && scalars) {
      newColors = publicAPI.convertToRGBA(scalars, numberOfComponents, scalars.getNumberOfTuples());
    } else {
      var newscalars = {
        type: 'vtkDataArray',
        name: 'temp',
        numberOfComponents: 4,
        dataType: VtkDataTypes.UNSIGNED_CHAR
      };
      var s = _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].newTypedArray(newscalars.dataType, 4 * scalars.getNumberOfTuples());
      newscalars.values = s;
      newscalars.size = s.length;
      newColors = _DataArray_js__WEBPACK_IMPORTED_MODULE_2__["default"].newInstance(newscalars);
      var component = componentIn; // If mapper did not specify a component, use the VectorMode

      if (component < 0 && numberOfComponents > 1) {
        publicAPI.mapVectorsThroughTable(scalars, newColors, ScalarMappingTarget.RGBA, -1, -1);
      } else {
        if (component < 0) {
          component = 0;
        }

        if (component >= numberOfComponents) {
          component = numberOfComponents - 1;
        } // Map the scalars to colors


        publicAPI.mapScalarsThroughTable(scalars, newColors, ScalarMappingTarget.RGBA, component);
      }
    }

    return newColors;
  };

  publicAPI.mapVectorsToMagnitude = function (input, output, compsToUse) {
    var length = input.getNumberOfTuples();
    var inIncr = input.getNumberOfComponents();
    var outputV = output.getData();
    var inputV = input.getData();

    for (var i = 0; i < length; i++) {
      var sum = 0.0;

      for (var j = 0; j < compsToUse; j++) {
        sum += inputV[i * inIncr + j] * inputV[i * inIncr + j];
      }

      outputV[i] = Math.sqrt(sum);
    }
  }; //----------------------------------------------------------------------------
  // Map a set of vector values through the table


  publicAPI.mapVectorsThroughTable = function (input, output, outputFormat, vectorComponentIn, vectorSizeIn) {
    var vectorMode = publicAPI.getVectorMode();
    var vectorSize = vectorSizeIn;
    var vectorComponent = vectorComponentIn;
    var inComponents = input.getNumberOfComponents();

    if (vectorMode === VectorMode.COMPONENT) {
      // make sure vectorComponent is within allowed range
      if (vectorComponent === -1) {
        // if set to -1, use default value provided by table
        vectorComponent = publicAPI.getVectorComponent();
      }

      if (vectorComponent < 0) {
        vectorComponent = 0;
      }

      if (vectorComponent >= inComponents) {
        vectorComponent = inComponents - 1;
      }
    } else {
      // make sure vectorSize is within allowed range
      if (vectorSize === -1) {
        // if set to -1, use default value provided by table
        vectorSize = publicAPI.getVectorSize();
      }

      if (vectorSize <= 0) {
        vectorComponent = 0;
        vectorSize = inComponents;
      } else {
        if (vectorComponent < 0) {
          vectorComponent = 0;
        }

        if (vectorComponent >= inComponents) {
          vectorComponent = inComponents - 1;
        }

        if (vectorComponent + vectorSize > inComponents) {
          vectorSize = inComponents - vectorComponent;
        }
      }

      if (vectorMode === VectorMode.MAGNITUDE && (inComponents === 1 || vectorSize === 1)) {
        vectorMode = VectorMode.COMPONENT;
      }
    } // increment input pointer to the first component to map


    var inputOffset = 0;

    if (vectorComponent > 0) {
      inputOffset = vectorComponent;
    } // map according to the current vector mode


    switch (vectorMode) {
      case VectorMode.COMPONENT:
        {
          publicAPI.mapScalarsThroughTable(input, output, outputFormat, inputOffset);
          break;
        }

      case VectorMode.RGBCOLORS:
        {
          // publicAPI.mapColorsToColors(
          //   input, output, inComponents, vectorSize,
          //   outputFormat);
          break;
        }
      // MAGNITUDE is considered default

      case VectorMode.MAGNITUDE:
      default:
        {
          var magValues = _DataArray_js__WEBPACK_IMPORTED_MODULE_2__["default"].newInstance({
            numberOfComponents: 1,
            values: new Float32Array(input.getNumberOfTuples())
          });
          publicAPI.mapVectorsToMagnitude(input, magValues, vectorSize);
          publicAPI.mapScalarsThroughTable(magValues, output, outputFormat, 0);
          break;
        }
    }
  };

  publicAPI.luminanceToRGBA = function (newColors, colors, alpha, convtFun) {
    var a = convtFun(alpha);
    var values = colors.getData();
    var newValues = newColors.getData();
    var size = values.length;
    var component = 0;
    var tuple = 1;
    var count = 0;

    for (var i = component; i < size; i += tuple) {
      var l = convtFun(values[i]);
      newValues[count * 4] = l;
      newValues[count * 4 + 1] = l;
      newValues[count * 4 + 2] = l;
      newValues[count * 4 + 3] = a;
      count++;
    }
  };

  publicAPI.luminanceAlphaToRGBA = function (newColors, colors, alpha, convtFun) {
    var values = colors.getData();
    var newValues = newColors.getData();
    var size = values.length;
    var component = 0;
    var tuple = 2;
    var count = 0;

    for (var i = component; i < size; i += tuple) {
      var l = convtFun(values[i]);
      newValues[count] = l;
      newValues[count + 1] = l;
      newValues[count + 2] = l;
      newValues[count + 3] = convtFun(values[i + 1]) * alpha;
      count += 4;
    }
  };

  publicAPI.rGBToRGBA = function (newColors, colors, alpha, convtFun) {
    var a = floatColorToUChar(alpha);
    var values = colors.getData();
    var newValues = newColors.getData();
    var size = values.length;
    var component = 0;
    var tuple = 3;
    var count = 0;

    for (var i = component; i < size; i += tuple) {
      newValues[count * 4] = convtFun(values[i]);
      newValues[count * 4 + 1] = convtFun(values[i + 1]);
      newValues[count * 4 + 2] = convtFun(values[i + 2]);
      newValues[count * 4 + 3] = a;
      count++;
    }
  };

  publicAPI.rGBAToRGBA = function (newColors, colors, alpha, convtFun) {
    var values = colors.getData();
    var newValues = newColors.getData();
    var size = values.length;
    var component = 0;
    var tuple = 4;
    var count = 0;

    for (var i = component; i < size; i += tuple) {
      newValues[count * 4] = convtFun(values[i]);
      newValues[count * 4 + 1] = convtFun(values[i + 1]);
      newValues[count * 4 + 2] = convtFun(values[i + 2]);
      newValues[count * 4 + 3] = convtFun(values[i + 3]) * alpha;
      count++;
    }
  }; //----------------------------------------------------------------------------


  publicAPI.convertToRGBA = function (colors, numComp, numTuples) {
    var alpha = model.alpha;

    if (numComp === 4 && alpha >= 1.0 && colors.getDataType() === VtkDataTypes.UNSIGNED_CHAR) {
      return colors;
    }

    var newColors = _DataArray_js__WEBPACK_IMPORTED_MODULE_2__["default"].newInstance({
      numberOfComponents: 4,
      empty: true,
      size: 4 * numTuples,
      dataType: VtkDataTypes.UNSIGNED_CHAR
    });

    if (numTuples <= 0) {
      return newColors;
    }

    alpha = alpha > 0 ? alpha : 0;
    alpha = alpha < 1 ? alpha : 1;
    var convtFun = intColorToUChar;

    if (colors.getDataType() === VtkDataTypes.FLOAT || colors.getDataType() === VtkDataTypes.DOUBLE) {
      convtFun = floatColorToUChar;
    }

    switch (numComp) {
      case 1:
        publicAPI.luminanceToRGBA(newColors, colors, alpha, convtFun);
        break;

      case 2:
        publicAPI.luminanceAlphaToRGBA(newColors, colors, convtFun);
        break;

      case 3:
        publicAPI.rGBToRGBA(newColors, colors, alpha, convtFun);
        break;

      case 4:
        publicAPI.rGBAToRGBA(newColors, colors, alpha, convtFun);
        break;

      default:
        vtkErrorMacro('Cannot convert colors');
        return null;
    }

    return newColors;
  };

  publicAPI.usingLogScale = function () {
    return false;
  };

  publicAPI.getNumberOfAvailableColors = function () {
    return 256 * 256 * 256;
  };

  publicAPI.setRange = function (min, max) {
    return publicAPI.setMappingRange(min, max);
  };

  publicAPI.getRange = function (min, max) {
    return publicAPI.getMappingRange();
  };
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {
  alpha: 1.0,
  vectorComponent: 0,
  vectorSize: -1,
  vectorMode: VectorMode.COMPONENT,
  mappingRange: null,
  annotationArray: null,
  annotatedValueMap: null,
  indexedLookup: false
}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Object methods

  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].obj(publicAPI, model);
  model.mappingRange = [0, 255];
  model.annotationArray = [];
  model.annotatedValueMap = []; // Create get-set macros

  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].setGet(publicAPI, model, ['vectorSize', 'vectorComponent', 'vectorMode', 'alpha', 'indexedLookup']); // Create set macros for array (needs to know size)

  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].setArray(publicAPI, model, ['mappingRange'], 2); // Create get macros for array

  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].getArray(publicAPI, model, ['mappingRange']); // For more macro methods, see "Sources/macros.js"
  // Object specific methods

  vtkScalarsToColors(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].newInstance(extend, 'vtkScalarsToColors'); // ----------------------------------------------------------------------------

var vtkScalarsToColors$1 = _objectSpread({
  newInstance: newInstance,
  extend: extend
}, _ScalarsToColors_Constants_js__WEBPACK_IMPORTED_MODULE_3__["default"]);




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Common/Core/ScalarsToColors/Constants.js":
/*!********************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Common/Core/ScalarsToColors/Constants.js ***!
  \********************************************************************************/
/*! exports provided: ScalarMappingTarget, VectorMode, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ScalarMappingTarget", function() { return ScalarMappingTarget; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VectorMode", function() { return VectorMode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkScalarsToColors; });
var VectorMode = {
  MAGNITUDE: 0,
  COMPONENT: 1,
  RGBCOLORS: 2
};
var ScalarMappingTarget = {
  LUMINANCE: 1,
  LUMINANCE_ALPHA: 2,
  RGB: 3,
  RGBA: 4
};
var vtkScalarsToColors = {
  VectorMode: VectorMode,
  ScalarMappingTarget: ScalarMappingTarget
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Common/DataModel/BoundingBox.js":
/*!***********************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Common/DataModel/BoundingBox.js ***!
  \***********************************************************************/
/*! exports provided: STATIC, addBounds, addPoint, computeCornerPoints, computeLocalBounds, computeScale3, contains, containsPoint, cutWithPlane, default, equals, getCenter, getCorners, getDiagonalLength, getLength, getLengths, getMaxLength, getMaxPoint, getMinPoint, getXRange, getYRange, getZRange, inflate, intersect, intersectBox, intersectPlane, intersects, isValid, reset, scale, setBounds, setMaxPoint, setMinPoint */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "STATIC", function() { return STATIC; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addBounds", function() { return _addBounds; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addPoint", function() { return _addPoint; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "computeCornerPoints", function() { return _computeCornerPoints; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "computeLocalBounds", function() { return _computeLocalBounds; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "computeScale3", function() { return _computeScale; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "contains", function() { return contains; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "containsPoint", function() { return _containsPoint; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cutWithPlane", function() { return _cutWithPlane; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkBoundingBox; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "equals", function() { return _equals; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getCenter", function() { return _getCenter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getCorners", function() { return _getCorners; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getDiagonalLength", function() { return _getDiagonalLength; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getLength", function() { return _getLength; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getLengths", function() { return _getLengths; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getMaxLength", function() { return _getMaxLength; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getMaxPoint", function() { return _getMaxPoint; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getMinPoint", function() { return _getMinPoint; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getXRange", function() { return _getXRange; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getYRange", function() { return _getYRange; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getZRange", function() { return _getZRange; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "inflate", function() { return _inflate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "intersect", function() { return _intersect; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "intersectBox", function() { return _intersectBox; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "intersectPlane", function() { return _intersectPlane; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "intersects", function() { return _intersects; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isValid", function() { return _isValid; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "reset", function() { return _reset; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scale", function() { return _scale; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setBounds", function() { return _setBounds; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setMaxPoint", function() { return _setMaxPoint; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setMinPoint", function() { return _setMinPoint; });
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "../node_modules/@babel/runtime/helpers/defineProperty.js");
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js");
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "../node_modules/@babel/runtime/helpers/toConsumableArray.js");
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ "../node_modules/@babel/runtime/helpers/slicedToArray.js");
/* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _Core_Math_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../Core/Math/index.js */ "../node_modules/@kitware/vtk.js/Common/Core/Math/index.js");
/* harmony import */ var _Plane_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Plane.js */ "../node_modules/@kitware/vtk.js/Common/DataModel/Plane.js");








function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var INIT_BOUNDS = [Number.MAX_VALUE, -Number.MAX_VALUE, // X
Number.MAX_VALUE, -Number.MAX_VALUE, // Y
Number.MAX_VALUE, -Number.MAX_VALUE // Z
]; // ----------------------------------------------------------------------------
// Global methods
// ----------------------------------------------------------------------------

function _equals(a, b) {
  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5];
}

function _isValid(bounds) {
  return bounds[0] <= bounds[1] && bounds[2] <= bounds[3] && bounds[4] <= bounds[5];
}

function _setBounds(bounds, otherBounds) {
  bounds[0] = otherBounds[0];
  bounds[1] = otherBounds[1];
  bounds[2] = otherBounds[2];
  bounds[3] = otherBounds[3];
  bounds[4] = otherBounds[4];
  bounds[5] = otherBounds[5];
  return bounds;
}

function _reset(bounds) {
  return _setBounds(bounds, INIT_BOUNDS);
}

function _addPoint(bounds) {
  var _bounds = _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_4___default()(bounds, 6),
      xMin = _bounds[0],
      xMax = _bounds[1],
      yMin = _bounds[2],
      yMax = _bounds[3],
      zMin = _bounds[4],
      zMax = _bounds[5];

  bounds[0] = xMin < (arguments.length <= 1 ? undefined : arguments[1]) ? xMin : arguments.length <= 1 ? undefined : arguments[1];
  bounds[1] = xMax > (arguments.length <= 1 ? undefined : arguments[1]) ? xMax : arguments.length <= 1 ? undefined : arguments[1];
  bounds[2] = yMin < (arguments.length <= 2 ? undefined : arguments[2]) ? yMin : arguments.length <= 2 ? undefined : arguments[2];
  bounds[3] = yMax > (arguments.length <= 2 ? undefined : arguments[2]) ? yMax : arguments.length <= 2 ? undefined : arguments[2];
  bounds[4] = zMin < (arguments.length <= 3 ? undefined : arguments[3]) ? zMin : arguments.length <= 3 ? undefined : arguments[3];
  bounds[5] = zMax > (arguments.length <= 3 ? undefined : arguments[3]) ? zMax : arguments.length <= 3 ? undefined : arguments[3];
}

function _addBounds(bounds, xMin, xMax, yMin, yMax, zMin, zMax) {
  var _bounds2 = _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_4___default()(bounds, 6),
      _xMin = _bounds2[0],
      _xMax = _bounds2[1],
      _yMin = _bounds2[2],
      _yMax = _bounds2[3],
      _zMin = _bounds2[4],
      _zMax = _bounds2[5];

  if (zMax === undefined) {
    bounds[0] = Math.min(xMin[0], _xMin);
    bounds[1] = Math.max(xMin[1], _xMax);
    bounds[2] = Math.min(xMin[2], _yMin);
    bounds[3] = Math.max(xMin[3], _yMax);
    bounds[4] = Math.min(xMin[4], _zMin);
    bounds[5] = Math.max(xMin[5], _zMax);
  } else {
    bounds[0] = Math.min(xMin, _xMin);
    bounds[1] = Math.max(xMax, _xMax);
    bounds[2] = Math.min(yMin, _yMin);
    bounds[3] = Math.max(yMax, _yMax);
    bounds[4] = Math.min(zMin, _zMin);
    bounds[5] = Math.max(zMax, _zMax);
  }
}

function _setMinPoint(bounds, x, y, z) {
  var _bounds3 = _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_4___default()(bounds, 6),
      xMin = _bounds3[0],
      xMax = _bounds3[1],
      yMin = _bounds3[2],
      yMax = _bounds3[3],
      zMin = _bounds3[4],
      zMax = _bounds3[5];

  bounds[0] = x;
  bounds[1] = x > xMax ? x : xMax;
  bounds[2] = y;
  bounds[3] = y > yMax ? y : yMax;
  bounds[4] = z;
  bounds[5] = z > zMax ? z : zMax;
  return xMin !== x || yMin !== y || zMin !== z;
}

function _setMaxPoint(bounds, x, y, z) {
  var _bounds4 = _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_4___default()(bounds, 6),
      xMin = _bounds4[0],
      xMax = _bounds4[1],
      yMin = _bounds4[2],
      yMax = _bounds4[3],
      zMin = _bounds4[4],
      zMax = _bounds4[5];

  bounds[0] = x < xMin ? x : xMin;
  bounds[1] = x;
  bounds[2] = y < yMin ? y : yMin;
  bounds[3] = y;
  bounds[4] = z < zMin ? z : zMin;
  bounds[5] = z;
  return xMax !== x || yMax !== y || zMax !== z;
}

function _inflate(bounds, delta) {
  bounds[0] -= delta;
  bounds[1] += delta;
  bounds[2] -= delta;
  bounds[3] += delta;
  bounds[4] -= delta;
  bounds[5] += delta;
}

function _scale(bounds, sx, sy, sz) {
  if (!_isValid(bounds)) {
    return false;
  }

  if (sx >= 0.0) {
    bounds[0] *= sx;
    bounds[1] *= sx;
  } else {
    bounds[0] = sx * bounds[1];
    bounds[1] = sx * bounds[0];
  }

  if (sy >= 0.0) {
    bounds[2] *= sy;
    bounds[3] *= sy;
  } else {
    bounds[2] = sy * bounds[3];
    bounds[3] = sy * bounds[2];
  }

  if (sz >= 0.0) {
    bounds[4] *= sz;
    bounds[5] *= sz;
  } else {
    bounds[4] = sz * bounds[5];
    bounds[5] = sz * bounds[4];
  }

  return true;
}

function _getCenter(bounds) {
  return [0.5 * (bounds[0] + bounds[1]), 0.5 * (bounds[2] + bounds[3]), 0.5 * (bounds[4] + bounds[5])];
}

function _getLength(bounds, index) {
  return bounds[index * 2 + 1] - bounds[index * 2];
}

function _getLengths(bounds) {
  return [_getLength(bounds, 0), _getLength(bounds, 1), _getLength(bounds, 2)];
}

function _getXRange(bounds) {
  return bounds.slice(0, 2);
}

function _getYRange(bounds) {
  return bounds.slice(2, 4);
}

function _getZRange(bounds) {
  return bounds.slice(4, 6);
}

function _getMaxLength(bounds) {
  var l = _getLengths(bounds);

  if (l[0] > l[1]) {
    if (l[0] > l[2]) {
      return l[0];
    }

    return l[2];
  }

  if (l[1] > l[2]) {
    return l[1];
  }

  return l[2];
}

function _getDiagonalLength(bounds) {
  if (_isValid(bounds)) {
    var l = _getLengths(bounds);

    return Math.sqrt(l[0] * l[0] + l[1] * l[1] + l[2] * l[2]);
  }

  return null;
}

function _getMinPoint(bounds) {
  return [bounds[0], bounds[2], bounds[4]];
}

function _getMaxPoint(bounds) {
  return [bounds[1], bounds[3], bounds[5]];
}

function oppositeSign(a, b) {
  return a <= 0 && b >= 0 || a >= 0 && b <= 0;
}

function _getCorners(bounds, corners) {
  var count = 0;

  for (var ix = 0; ix < 2; ix++) {
    for (var iy = 2; iy < 4; iy++) {
      for (var iz = 4; iz < 6; iz++) {
        corners[count] = [bounds[ix], bounds[iy], bounds[iz]];
        count++;
      }
    }
  }
} // Computes the two corners with minimal and miximal coordinates

function _computeCornerPoints(bounds, point1, point2) {
  point1[0] = bounds[0];
  point1[1] = bounds[2];
  point1[2] = bounds[4];
  point2[0] = bounds[1];
  point2[1] = bounds[3];
  point2[2] = bounds[5];
}

function _computeScale(bounds) {
  var scale3 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];

  var center = _getCenter(bounds);

  scale3[0] = bounds[1] - center[0];
  scale3[1] = bounds[3] - center[1];
  scale3[2] = bounds[5] - center[2];
  return scale3;
}

function _computeLocalBounds(points, u, v, w) {
  var bounds = [].concat(INIT_BOUNDS);
  var pointsData = points.getData();

  for (var i = 0; i < pointsData.length; i += 3) {
    var point = [pointsData[i], pointsData[i + 1], pointsData[i + 2]];
    var du = Object(_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_5__["d"])(point, u);
    bounds[0] = Math.min(du, bounds[0]);
    bounds[1] = Math.max(du, bounds[1]);
    var dv = Object(_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_5__["d"])(point, v);
    bounds[2] = Math.min(dv, bounds[2]);
    bounds[3] = Math.max(dv, bounds[3]);
    var dw = Object(_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_5__["d"])(point, w);
    bounds[4] = Math.min(dw, bounds[4]);
    bounds[5] = Math.max(dw, bounds[5]);
  }

  return bounds;
} // The method returns a non-zero value if the bounding box is hit.

function _intersectBox(bounds, origin, dir, coord, tolerance) {
  var inside = true;
  var quadrant = [];
  var whichPlane = 0;
  var maxT = [];
  var candidatePlane = [0.0, 0.0, 0.0];
  var RIGHT = 0;
  var LEFT = 1;
  var MIDDLE = 2; // First find closest planes

  for (var i = 0; i < 3; i++) {
    if (origin[i] < bounds[2 * i]) {
      quadrant[i] = LEFT;
      candidatePlane[i] = bounds[2 * i];
      inside = false;
    } else if (origin[i] > bounds[2 * i + 1]) {
      quadrant[i] = RIGHT;
      candidatePlane[i] = bounds[2 * i + 1];
      inside = false;
    } else {
      quadrant[i] = MIDDLE;
    }
  } // Check whether origin of ray is inside bbox


  if (inside) {
    coord[0] = origin[0];
    coord[1] = origin[1];
    coord[2] = origin[2];
    tolerance[0] = 0;
    return 1;
  } // Calculate parametric distance to plane


  for (var _i = 0; _i < 3; _i++) {
    if (quadrant[_i] !== MIDDLE && dir[_i] !== 0.0) {
      maxT[_i] = (candidatePlane[_i] - origin[_i]) / dir[_i];
    } else {
      maxT[_i] = -1.0;
    }
  } // Find the largest parametric value of intersection


  for (var _i2 = 0; _i2 < 3; _i2++) {
    if (maxT[whichPlane] < maxT[_i2]) {
      whichPlane = _i2;
    }
  } // Check for valie intersection along line


  if (maxT[whichPlane] > 1.0 || maxT[whichPlane] < 0.0) {
    return 0;
  }

  tolerance[0] = maxT[whichPlane]; // Intersection point along line is okay. Check bbox.

  for (var _i3 = 0; _i3 < 3; _i3++) {
    if (whichPlane !== _i3) {
      coord[_i3] = origin[_i3] + maxT[whichPlane] * dir[_i3];

      if (coord[_i3] < bounds[2 * _i3] || coord[_i3] > bounds[2 * _i3 + 1]) {
        return 0;
      }
    } else {
      coord[_i3] = candidatePlane[_i3];
    }
  }

  return 1;
} // Plane intersection with box

function _intersectPlane(bounds, origin, normal) {
  var p = [];
  var d = 0;
  var sign = 1;
  var firstOne = 1; // Evaluate the eight points. If there is a sign change, there is an intersection

  for (var z = 4; z <= 5; ++z) {
    p[2] = bounds[z];

    for (var y = 2; y <= 3; ++y) {
      p[1] = bounds[y];

      for (var x = 0; x <= 1; ++x) {
        p[0] = bounds[x];
        d = _Plane_js__WEBPACK_IMPORTED_MODULE_6__["default"].evaluate(normal, origin, p);

        if (firstOne) {
          sign = d >= 0 ? 1 : -1;
          firstOne = 0;
        }

        if (d === 0.0 || sign > 0 && d < 0.0 || sign < 0 && d > 0.0) {
          return 1;
        }
      }
    }
  }

  return 0; // no intersection
}

function _intersect(bounds, bBounds) {
  if (!(_isValid(bounds) && _isValid(bBounds))) {
    return false;
  }

  var newBounds = [0, 0, 0, 0, 0, 0];
  var intersection;

  for (var i = 0; i < 3; i++) {
    intersection = false;

    if (bBounds[i * 2] >= bounds[i * 2] && bBounds[i * 2] <= bounds[i * 2 + 1]) {
      intersection = true;
      newBounds[i * 2] = bBounds[i * 2];
    } else if (bounds[i * 2] >= bBounds[i * 2] && bounds[i * 2] <= bBounds[i * 2 + 1]) {
      intersection = true;
      newBounds[i * 2] = bounds[i * 2];
    }

    if (bBounds[i * 2 + 1] >= bounds[i * 2] && bBounds[i * 2 + 1] <= bounds[i * 2 + 1]) {
      intersection = true;
      newBounds[i * 2 + 1] = bBounds[2 * i + 1];
    } else if (bounds[i * 2 + 1] >= bBounds[i * 2] && bounds[i * 2 + 1] <= bBounds[i * 2 + 1]) {
      intersection = true;
      newBounds[i * 2 + 1] = bounds[i * 2 + 1];
    }

    if (!intersection) {
      return false;
    }
  } // OK they did intersect - set the box to be the result


  bounds[0] = newBounds[0];
  bounds[1] = newBounds[1];
  bounds[2] = newBounds[2];
  bounds[3] = newBounds[3];
  bounds[4] = newBounds[4];
  bounds[5] = newBounds[5];
  return true;
}

function _intersects(bounds, bBounds) {
  if (!(_isValid(bounds) && _isValid(bBounds))) {
    return false;
  }
  /* eslint-disable no-continue */


  for (var i = 0; i < 3; i++) {
    if (bBounds[i * 2] >= bounds[i * 2] && bBounds[i * 2] <= bounds[i * 2 + 1]) {
      continue;
    } else if (bounds[i * 2] >= bBounds[i * 2] && bounds[i * 2] <= bBounds[i * 2 + 1]) {
      continue;
    }

    if (bBounds[i * 2 + 1] >= bounds[i * 2] && bBounds[i * 2 + 1] <= bounds[i * 2 + 1]) {
      continue;
    } else if (bounds[i * 2 + 1] >= bBounds[i * 2] && bounds[i * 2 + 1] <= bBounds[i * 2 + 1]) {
      continue;
    }

    return false;
  }
  /* eslint-enable no-continue */


  return true;
}

function _containsPoint(bounds, x, y, z) {
  if (x < bounds[0] || x > bounds[1]) {
    return false;
  }

  if (y < bounds[2] || y > bounds[3]) {
    return false;
  }

  if (z < bounds[4] || z > bounds[5]) {
    return false;
  }

  return true;
}
function contains(bounds, otherBounds) {
  // if either box is not valid or they don't intersect
  if (!_intersects(bounds, otherBounds)) {
    return false;
  }

  if (!_containsPoint.apply(void 0, [bounds].concat(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_3___default()(_getMinPoint(otherBounds))))) {
    return false;
  }

  if (!_containsPoint.apply(void 0, [bounds].concat(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_3___default()(_getMaxPoint(otherBounds))))) {
    return false;
  }

  return true;
}
/**
 * Returns true if plane intersects bounding box.
 * If so, the box is cut by the plane
 * @param {array} origin
 * @param {array} normal
 */

function _cutWithPlane(bounds, origin, normal) {
  // Index[0..2] represents the order of traversing the corners of a cube
  // in (x,y,z), (y,x,z) and (z,x,y) ordering, respectively
  var index = [[0, 1, 2, 3, 4, 5, 6, 7], [0, 1, 4, 5, 2, 3, 6, 7], [0, 2, 4, 6, 1, 3, 5, 7]]; // stores the signed distance to a plane

  var d = [0, 0, 0, 0, 0, 0, 0, 0];
  var idx = 0;

  for (var ix = 0; ix < 2; ix++) {
    for (var iy = 2; iy < 4; iy++) {
      for (var iz = 4; iz < 6; iz++) {
        var x = [bounds[ix], bounds[iy], bounds[iz]];
        d[idx++] = _Plane_js__WEBPACK_IMPORTED_MODULE_6__["default"].evaluate(normal, origin, x);
      }
    }
  }

  var dir = 2;

  while (dir--) {
    // in each direction, we test if the vertices of two orthogonal faces
    // are on either side of the plane
    if (oppositeSign(d[index[dir][0]], d[index[dir][4]]) && oppositeSign(d[index[dir][1]], d[index[dir][5]]) && oppositeSign(d[index[dir][2]], d[index[dir][6]]) && oppositeSign(d[index[dir][3]], d[index[dir][7]])) {
      break;
    }
  }

  if (dir < 0) {
    return false;
  }

  var sign = Math.sign(normal[dir]);
  var size = Math.abs((bounds[dir * 2 + 1] - bounds[dir * 2]) * normal[dir]);
  var t = sign > 0 ? 1 : 0;
  /* eslint-disable no-continue */

  for (var i = 0; i < 4; i++) {
    if (size === 0) {
      continue; // shouldn't happen
    }

    var ti = Math.abs(d[index[dir][i]]) / size;

    if (sign > 0 && ti < t) {
      t = ti;
    }

    if (sign < 0 && ti > t) {
      t = ti;
    }
  }
  /* eslint-enable no-continue */


  var bound = (1.0 - t) * bounds[dir * 2] + t * bounds[dir * 2 + 1];

  if (sign > 0) {
    bounds[dir * 2] = bound;
  } else {
    bounds[dir * 2 + 1] = bound;
  }

  return true;
} // ----------------------------------------------------------------------------

var BoundingBox = /*#__PURE__*/function () {
  function BoundingBox(refBounds) {
    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default()(this, BoundingBox);

    this.bounds = refBounds;

    if (!this.bounds) {
      this.bounds = new Float64Array(6);

      _setBounds(this.bounds, INIT_BOUNDS);
    }
  }

  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2___default()(BoundingBox, [{
    key: "getBounds",
    value: function getBounds() {
      return this.bounds;
    }
  }, {
    key: "equals",
    value: function equals(otherBounds) {
      return _equals(this.bounds, otherBounds);
    }
  }, {
    key: "isValid",
    value: function isValid() {
      return _isValid(this.bounds);
    }
  }, {
    key: "setBounds",
    value: function setBounds(otherBounds) {
      return _setBounds(this.bounds, otherBounds);
    }
  }, {
    key: "reset",
    value: function reset() {
      return _reset(this.bounds);
    }
  }, {
    key: "addPoint",
    value: function addPoint() {
      for (var _len = arguments.length, xyz = new Array(_len), _key = 0; _key < _len; _key++) {
        xyz[_key] = arguments[_key];
      }

      return _addPoint(this.bounds, xyz);
    }
  }, {
    key: "addBounds",
    value: function addBounds(xMin, xMax, yMin, yMax, zMin, zMax) {
      return _addBounds(this.bounds, xMin, xMax, yMin, yMax, zMin, zMax);
    }
  }, {
    key: "setMinPoint",
    value: function setMinPoint(x, y, z) {
      return _setMinPoint(this.bounds, x, y, z);
    }
  }, {
    key: "setMaxPoint",
    value: function setMaxPoint(x, y, z) {
      return _setMaxPoint(this.bounds, x, y, z);
    }
  }, {
    key: "inflate",
    value: function inflate(delta) {
      return _inflate(this.bounds, delta);
    }
  }, {
    key: "scale",
    value: function scale(sx, sy, sz) {
      return _scale(this.bounds, sx, sy, sz);
    }
  }, {
    key: "getCenter",
    value: function getCenter() {
      return _getCenter(this.bounds);
    }
  }, {
    key: "getLength",
    value: function getLength(index) {
      return _getLength(this.bounds, index);
    }
  }, {
    key: "getLengths",
    value: function getLengths() {
      return _getLengths(this.bounds);
    }
  }, {
    key: "getMaxLength",
    value: function getMaxLength() {
      return _getMaxLength(this.bounds);
    }
  }, {
    key: "getDiagonalLength",
    value: function getDiagonalLength() {
      return _getDiagonalLength(this.bounds);
    }
  }, {
    key: "getMinPoint",
    value: function getMinPoint() {
      return _getMinPoint(this.bounds);
    }
  }, {
    key: "getMaxPoint",
    value: function getMaxPoint() {
      return _getMaxPoint(this.bounds);
    }
  }, {
    key: "getXRange",
    value: function getXRange() {
      return _getXRange(this.bounds);
    }
  }, {
    key: "getYRange",
    value: function getYRange() {
      return _getYRange(this.bounds);
    }
  }, {
    key: "getZRange",
    value: function getZRange() {
      return _getZRange(this.bounds);
    }
  }, {
    key: "getCorners",
    value: function getCorners(corners) {
      return _getCorners(this.bounds, corners);
    }
  }, {
    key: "computeCornerPoints",
    value: function computeCornerPoints(point1, point2) {
      return _computeCornerPoints(this.bounds, point1, point2);
    }
  }, {
    key: "computeLocalBounds",
    value: function computeLocalBounds(u, v, w) {
      return _computeLocalBounds(this.bounds, u, v, w);
    }
  }, {
    key: "computeScale3",
    value: function computeScale3(scale3) {
      return _computeScale(this.bounds, scale3);
    }
  }, {
    key: "cutWithPlane",
    value: function cutWithPlane(origin, normal) {
      return _cutWithPlane(this.bounds, origin, normal);
    }
  }, {
    key: "intersectBox",
    value: function intersectBox(origin, dir, coord, tolerance) {
      return _intersectBox(this.bounds, origin, dir, coord, tolerance);
    }
  }, {
    key: "intersectPlane",
    value: function intersectPlane(origin, normal) {
      return _intersectPlane(this.bounds, origin, normal);
    }
  }, {
    key: "intersect",
    value: function intersect(otherBounds) {
      return _intersect(this.bounds, otherBounds);
    }
  }, {
    key: "intersects",
    value: function intersects(otherBounds) {
      return _intersects(this.bounds, otherBounds);
    }
  }, {
    key: "containsPoint",
    value: function containsPoint(x, y, z) {
      return _containsPoint(this.bounds, x, y, z);
    }
  }, {
    key: "contains",
    value: function contains(otherBounds) {
      return _intersects(this.bounds, otherBounds);
    }
  }]);

  return BoundingBox;
}();

function newInstance(initialValues) {
  var bounds = initialValues && initialValues.bounds;
  return new BoundingBox(bounds);
} // ----------------------------------------------------------------------------
// Static API
// ----------------------------------------------------------------------------


var STATIC = {
  equals: _equals,
  isValid: _isValid,
  setBounds: _setBounds,
  reset: _reset,
  addPoint: _addPoint,
  addBounds: _addBounds,
  setMinPoint: _setMinPoint,
  setMaxPoint: _setMaxPoint,
  inflate: _inflate,
  scale: _scale,
  getCenter: _getCenter,
  getLength: _getLength,
  getLengths: _getLengths,
  getMaxLength: _getMaxLength,
  getDiagonalLength: _getDiagonalLength,
  getMinPoint: _getMinPoint,
  getMaxPoint: _getMaxPoint,
  getXRange: _getXRange,
  getYRange: _getYRange,
  getZRange: _getZRange,
  getCorners: _getCorners,
  computeCornerPoints: _computeCornerPoints,
  computeLocalBounds: _computeLocalBounds,
  computeScale3: _computeScale,
  cutWithPlane: _cutWithPlane,
  intersectBox: _intersectBox,
  intersectPlane: _intersectPlane,
  intersect: _intersect,
  intersects: _intersects,
  containsPoint: _containsPoint,
  contains: contains,
  INIT_BOUNDS: INIT_BOUNDS
};
var vtkBoundingBox = _objectSpread({
  newInstance: newInstance
}, STATIC);




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Common/DataModel/Cell.js":
/*!****************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Common/DataModel/Cell.js ***!
  \****************************************************************/
/*! exports provided: default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkCell$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _Core_Math_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Core/Math/index.js */ "../node_modules/@kitware/vtk.js/Common/Core/Math/index.js");
/* harmony import */ var _Core_Points_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Core/Points.js */ "../node_modules/@kitware/vtk.js/Common/Core/Points.js");




// vtkCell methods
// ----------------------------------------------------------------------------

function vtkCell(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkCell');

  publicAPI.initialize = function (points) {
    var pointIdsList = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

    if (!pointIdsList) {
      model.points = points;
      model.pointsIds = new Array(points.getNumberOfPoints());

      for (var i = points.getNumberOfPoints() - 1; i >= 0; --i) {
        model.pointsIds[i] = i;
      }
    } else {
      model.pointsIds = pointIdsList;
      var triangleData = model.points.getData();

      if (triangleData.length !== 3 * model.pointsIds.length) {
        triangleData = _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].newTypedArray(points.getDataType(), 3 * model.pointsIds.length);
      }

      var pointsData = points.getData();
      model.pointsIds.forEach(function (pointId, index) {
        // const start = 3 * pointId;
        // pointsData.set(p.subarray(start, start + 3), 3 * index);
        var pointOffset = 3 * pointId;
        var trianglePointOffset = 3 * index;
        triangleData[trianglePointOffset] = pointsData[pointOffset];
        triangleData[++trianglePointOffset] = pointsData[++pointOffset];
        triangleData[++trianglePointOffset] = pointsData[++pointOffset];
      });
      model.points.setData(triangleData);
    }
  };

  publicAPI.getBounds = function () {
    var nbPoints = model.points.getNumberOfPoints();
    var x = [];

    if (nbPoints) {
      model.points.getPoint(0, x);
      model.bounds[0] = x[0];
      model.bounds[1] = x[0];
      model.bounds[2] = x[1];
      model.bounds[3] = x[1];
      model.bounds[4] = x[2];
      model.bounds[5] = x[2];

      for (var i = 1; i < nbPoints; i++) {
        model.points.getPoint(i, x);
        model.bounds[0] = x[0] < model.bounds[0] ? x[0] : model.bounds[0];
        model.bounds[1] = x[0] > model.bounds[1] ? x[0] : model.bounds[1];
        model.bounds[2] = x[1] < model.bounds[2] ? x[1] : model.bounds[2];
        model.bounds[3] = x[1] > model.bounds[3] ? x[1] : model.bounds[3];
        model.bounds[4] = x[2] < model.bounds[4] ? x[2] : model.bounds[4];
        model.bounds[5] = x[2] > model.bounds[5] ? x[2] : model.bounds[5];
      }
    } else {
      Object(_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_1__["u"])(model.bounds);
    }

    return model.bounds;
  };

  publicAPI.getLength2 = function () {
    publicAPI.getBounds();
    var length = 0.0;
    var diff = 0;

    for (var i = 0; i < 3; i++) {
      diff = model.bounds[2 * i + 1] - model.bounds[2 * i];
      length += diff * diff;
    }

    return length;
  };

  publicAPI.getParametricDistance = function (pcoords) {
    var pDist;
    var pDistMax = 0.0;

    for (var i = 0; i < 3; i++) {
      if (pcoords[i] < 0.0) {
        pDist = -pcoords[i];
      } else if (pcoords[i] > 1.0) {
        pDist = pcoords[i] - 1.0;
      } else {
        // inside the cell in the parametric direction
        pDist = 0.0;
      }

      if (pDist > pDistMax) {
        pDistMax = pDist;
      }
    }

    return pDistMax;
  };

  publicAPI.getNumberOfPoints = function () {
    return model.points.getNumberOfPoints();
  };

  publicAPI.deepCopy = function (cell) {
    cell.initialize(model.points, model.pointsIds);
  };

  publicAPI.getCellDimension = function () {}; // virtual


  publicAPI.intersectWithLine = function (p1, p2, tol, t, x, pcoords, subId) {}; // virtual


  publicAPI.evaluatePosition = function (x, closestPoint, subId, pcoords, dist2, weights) {}; // virtual

} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {
  bounds: [-1, -1, -1, -1, -1, -1],
  pointsIds: []
}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues);
  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].obj(publicAPI, model);

  if (!model.points) {
    model.points = _Core_Points_js__WEBPACK_IMPORTED_MODULE_2__["default"].newInstance();
  }

  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].get(publicAPI, model, ['points', 'pointsIds']);
  vtkCell(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].newInstance(extend, 'vtkCell'); // ----------------------------------------------------------------------------

var vtkCell$1 = {
  newInstance: newInstance,
  extend: extend
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Common/DataModel/CellLinks.js":
/*!*********************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Common/DataModel/CellLinks.js ***!
  \*********************************************************************/
/*! exports provided: InitLink, default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InitLink", function() { return InitLink; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkCellLinks$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "../node_modules/@babel/runtime/helpers/toConsumableArray.js");
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _Cell_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Cell.js */ "../node_modules/@kitware/vtk.js/Common/DataModel/Cell.js");




// Global methods
// ----------------------------------------------------------------------------

var InitLink = {
  ncells: 0,
  cells: null
};

function resize(model, sz) {
  var newSize = sz;

  if (sz >= model.array.length) {
    newSize += model.array.length;
  }

  while (newSize > model.array.length) {
    model.array.push({
      ncells: 0,
      cells: null
    });
  }

  model.array.length = newSize;
} // ----------------------------------------------------------------------------
// vtkCellLinks methods
// ----------------------------------------------------------------------------


function vtkCellLinks(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkCellLinks');
  /**
   * Build the link list array. All subclasses of vtkAbstractCellLinks
   * must support this method.
   */

  publicAPI.buildLinks = function (data) {
    var numPts = data.getPoints().getNumberOfPoints();
    var numCells = data.getNumberOfCells(); // fill out lists with number of references to cells

    var linkLoc = new Uint32Array(numPts); // Use fast path if polydata

    if (data.isA('vtkPolyData')) {
      // traverse data to determine number of uses of each point
      for (var cellId = 0; cellId < numCells; ++cellId) {
        var _data$getCellPoints = data.getCellPoints(cellId),
            cellPointIds = _data$getCellPoints.cellPointIds;

        cellPointIds.forEach(function (cellPointId) {
          publicAPI.incrementLinkCount(cellPointId);
        });
      } // now allocate storage for the links


      publicAPI.allocateLinks(numPts);
      model.maxId = numPts - 1;

      var _loop = function _loop(_cellId) {
        var _data$getCellPoints2 = data.getCellPoints(_cellId),
            cellPointIds = _data$getCellPoints2.cellPointIds;

        cellPointIds.forEach(function (cellPointId) {
          publicAPI.insertCellReference(cellPointId, linkLoc[cellPointId]++, _cellId);
        });
      };

      for (var _cellId = 0; _cellId < numCells; ++_cellId) {
        _loop(_cellId);
      }
    } // any other type of dataset
    else {
      // traverse data to determine number of uses of each point
      for (var _cellId2 = 0; _cellId2 < numCells; _cellId2++) {
        // TODO: Currently not supported: const cell = data.getCell(cellId);
        var cell = _Cell_js__WEBPACK_IMPORTED_MODULE_2__["default"].newInstance();
        cell.getPointsIds().forEach(function (cellPointId) {
          publicAPI.incrementLinkCount(cellPointId);
        });
      } // now allocate storage for the links


      publicAPI.allocateLinks(numPts);
      model.maxId = numPts - 1;

      var _loop2 = function _loop2(_cellId3) {
        // TODO: Currently not supported: const cell = data.getCell(cellId);
        var cell = _Cell_js__WEBPACK_IMPORTED_MODULE_2__["default"].newInstance();
        cell.getPointsIds().forEach(function (cellPointId) {
          publicAPI.insertCellReference(cellPointId, linkLoc[cellPointId]++, _cellId3);
        });
      };

      for (var _cellId3 = 0; _cellId3 < numCells; ++_cellId3) {
        _loop2(_cellId3);
      }
    } // end else

  };
  /**
   * Build the link list array with a provided connectivity array.
   */
  // publicAPI.buildLinks = (data, connectivity) => {};

  /**
   * Allocate the specified number of links (i.e., number of points) that
   * will be built.
   */


  publicAPI.allocate = function (numLinks) {
    var ext = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1000;
    model.array = Array(numLinks).fill().map(function () {
      return {
        ncells: 0,
        cells: null
      };
    });
    model.extend = ext;
    model.maxId = -1;
  };

  publicAPI.initialize = function () {
    model.array = null;
  };
  /**
   * Get a link structure given a point id.
   */


  publicAPI.getLink = function (ptId) {
    return model.array[ptId];
  };
  /**
   * Get the number of cells using the point specified by ptId.
   */


  publicAPI.getNcells = function (ptId) {
    return model.array[ptId].ncells;
  };
  /**
   * Return a list of cell ids using the point.
   */


  publicAPI.getCells = function (ptId) {
    return model.array[ptId].cells;
  };
  /**
   * Insert a new point into the cell-links data structure. The size parameter
   * is the initial size of the list.
   */


  publicAPI.insertNextPoint = function (numLinks) {
    model.array.push({
      ncells: numLinks,
      cells: Array(numLinks)
    });
    ++model.maxId;
  };
  /**
   * Insert a cell id into the list of cells (at the end) using the cell id
   * provided. (Make sure to extend the link list (if necessary) using the
   * method resizeCellList().)
   */


  publicAPI.insertNextCellReference = function (ptId, cellId) {
    model.array[ptId].cells[model.array[ptId].ncells++] = cellId;
  };
  /**
   * Delete point (and storage) by destroying links to using cells.
   */


  publicAPI.deletePoint = function (ptId) {
    model.array[ptId].ncells = 0;
    model.array[ptId].cells = null;
  };
  /**
   * Delete the reference to the cell (cellId) from the point (ptId). This
   * removes the reference to the cellId from the cell list, but does not
   * resize the list (recover memory with resizeCellList(), if necessary).
   */


  publicAPI.removeCellReference = function (cellId, ptId) {
    model.array[ptId].cells = model.array[ptId].cells.filter(function (cell) {
      return cell !== cellId;
    });
    model.array[ptId].ncells = model.array[ptId].cells.length;
  };
  /**
   * Add the reference to the cell (cellId) from the point (ptId). This
   * adds a reference to the cellId from the cell list, but does not resize
   * the list (extend memory with resizeCellList(), if necessary).
   */


  publicAPI.addCellReference = function (cellId, ptId) {
    model.array[ptId].cells[model.array[ptId].ncells++] = cellId;
  };
  /**
   * Change the length of a point's link list (i.e., list of cells using a
   * point) by the size specified.
   */


  publicAPI.resizeCellList = function (ptId, size) {
    model.array[ptId].cells.length = size;
  };
  /**
   * Reclaim any unused memory.
   */


  publicAPI.squeeze = function () {
    resize(model, model.maxId + 1);
  };
  /**
   * Reset to a state of no entries without freeing the memory.
   */


  publicAPI.reset = function () {
    model.maxId = -1;
  };
  /**
   * Standard DeepCopy method.  Since this object contains no reference
   * to other objects, there is no ShallowCopy.
   */


  publicAPI.deepCopy = function (src) {
    model.array = _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(src.array);
    model.extend = src.extend;
    model.maxId = src.maxId;
  };
  /**
   * Increment the count of the number of cells using the point.
   */


  publicAPI.incrementLinkCount = function (ptId) {
    ++model.array[ptId].ncells;
  };

  publicAPI.allocateLinks = function (n) {
    for (var i = 0; i < n; ++i) {
      model.array[i].cells = new Array(model.array[i].ncells);
    }
  };
  /**
   * Insert a cell id into the list of cells using the point.
   */


  publicAPI.insertCellReference = function (ptId, pos, cellId) {
    model.array[ptId].cells[pos] = cellId;
  };
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {
  array: null,
  // pointer to data
  maxId: 0,
  // maximum index inserted thus far
  extend: 0 // grow array by this point

}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues);
  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].obj(publicAPI, model);
  vtkCellLinks(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].newInstance(extend, 'vtkCellLinks'); // ----------------------------------------------------------------------------

var vtkCellLinks$1 = {
  newInstance: newInstance,
  extend: extend
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Common/DataModel/CellTypes.js":
/*!*********************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Common/DataModel/CellTypes.js ***!
  \*********************************************************************/
/*! exports provided: STATIC, default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "STATIC", function() { return STATIC; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkCellTypes$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "../node_modules/@babel/runtime/helpers/defineProperty.js");
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _CellTypes_Constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./CellTypes/Constants.js */ "../node_modules/@kitware/vtk.js/Common/DataModel/CellTypes/Constants.js");




function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
// Global methods
// ----------------------------------------------------------------------------

/**
 * Given an int (as defined in vtkCellType.h) identifier for a class
 * return it's classname.
 */

function getClassNameFromTypeId(typeId) {
  return typeId < _CellTypes_Constants_js__WEBPACK_IMPORTED_MODULE_2__["CellTypesStrings"].length ? _CellTypes_Constants_js__WEBPACK_IMPORTED_MODULE_2__["CellTypesStrings"][typeId] : 'UnknownClass';
}
/**
 * Given a data object classname, return it's int identified (as
 * defined in vtkCellType.h)
 */


function getTypeIdFromClassName(cellTypeString) {
  return _CellTypes_Constants_js__WEBPACK_IMPORTED_MODULE_2__["CellTypesStrings"].findIndex(cellTypeString);
}
/**
 * This convenience method is a fast check to determine if a cell type
 * represents a linear or nonlinear cell.  This is generally much more
 * efficient than getting the appropriate vtkCell and checking its IsLinear
 * method.
 */


function isLinear(type) {
  return type < _CellTypes_Constants_js__WEBPACK_IMPORTED_MODULE_2__["CellType"].VTK_QUADRATIC_EDGE || type === _CellTypes_Constants_js__WEBPACK_IMPORTED_MODULE_2__["CellType"].VTK_CONVEX_POINT_SET || type === _CellTypes_Constants_js__WEBPACK_IMPORTED_MODULE_2__["CellType"].VTK_POLYHEDRON;
} // ----------------------------------------------------------------------------
// Static API
// ----------------------------------------------------------------------------


var STATIC = {
  getClassNameFromTypeId: getClassNameFromTypeId,
  getTypeIdFromClassName: getTypeIdFromClassName,
  isLinear: isLinear
}; // ----------------------------------------------------------------------------
// vtkCellTypes methods
// ----------------------------------------------------------------------------

function vtkCellTypes(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkCellTypes');
  /**
   * Allocate memory for this array. Delete old storage only if necessary.
   */

  publicAPI.allocate = function () {
    var sz = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 512;
    var ext = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1000;
    model.size = sz > 0 ? sz : 1;
    model.extend = ext > 0 ? ext : 1;
    model.maxId = -1;
    model.typeArray = new Uint8Array(sz);
    model.locationArray = new Uint32Array(sz);
  };
  /**
   * Add a cell at specified id.
   */


  publicAPI.insertCell = function (cellId, type, loc) {
    model.typeArray[cellId] = type;
    model.locationArray[cellId] = loc;

    if (cellId > model.maxId) {
      model.maxId = cellId;
    }
  };
  /**
   * Add a cell to the object in the next available slot.
   */


  publicAPI.insertNextCell = function (type, loc) {
    publicAPI.insertCell(++model.maxId, type, loc);
    return model.maxId;
  };
  /**
   * Specify a group of cell types. This version is provided to maintain
   * backwards compatibility and does a copy of the cellLocations
   */


  publicAPI.setCellTypes = function (ncells, cellTypes, cellLocations) {
    model.size = ncells;
    model.typeArray = cellTypes;
    model.locationArray = cellLocations;
    model.maxId = ncells - 1;
  };
  /**
   * Return the location of the cell in the associated vtkCellArray.
   */


  publicAPI.getCellLocation = function (cellId) {
    return model.locationArray[cellId];
  };
  /**
   * Delete cell by setting to nullptr cell type.
   */


  publicAPI.deleteCell = function (cellId) {
    model.typeArray[cellId] = _CellTypes_Constants_js__WEBPACK_IMPORTED_MODULE_2__["CellType"].VTK_EMPTY_CELL;
  };
  /**
   * Return the number of types in the list.
   */


  publicAPI.getNumberOfTypes = function () {
    return model.maxId + 1;
  };
  /**
   * Return true if type specified is contained in list; false otherwise.
   */


  publicAPI.isType = function (type) {
    var numTypes = publicAPI.getNumberOfTypes();

    for (var i = 0; i < numTypes; ++i) {
      if (type === publicAPI.getCellType(i)) {
        return true;
      }
    }

    return false;
  };
  /**
   * Add the type specified to the end of the list. Range checking is performed.
   */


  publicAPI.insertNextType = function (type) {
    return publicAPI.insertNextCell(type, -1);
  };
  /**
   * Return the type of cell.
   */


  publicAPI.getCellType = function (cellId) {
    return model.typeArray[cellId];
  };
  /**
   * Reclaim any extra memory.
   */
  // TODO: publicAPI.squeeze = () =>  {};

  /**
   * Initialize object without releasing memory.
   */


  publicAPI.reset = function () {
    model.maxId = -1;
  };
  /**
   * Standard DeepCopy method.  Since this object contains no reference
   * to other objects, there is no ShallowCopy.
   */


  publicAPI.deepCopy = function (src) {
    publicAPI.allocate(src.getSize(), src.getExtend());
    model.typeArray.set(src.getTypeArray());
    model.locationArray.set(src.getLocationArray());
    model.maxId = src.getMaxId();
  };
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {
  // typeArray: null, // pointer to types array
  // locationArray: null;   // pointer to array of offsets
  size: 0,
  // allocated size of data
  maxId: -1,
  // maximum index inserted thus far
  extend: 1000 // grow array by this point

}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues);
  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].obj(publicAPI, model);
  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].get(publicAPI, model, ['size', 'maxId', 'extend']);
  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].getArray(publicAPI, model, ['typeArray', 'locationArray']);
  vtkCellTypes(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].newInstance(extend, 'vtkCellTypes'); // ----------------------------------------------------------------------------

var vtkCellTypes$1 = _objectSpread({
  newInstance: newInstance,
  extend: extend
}, STATIC);




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Common/DataModel/CellTypes/Constants.js":
/*!*******************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Common/DataModel/CellTypes/Constants.js ***!
  \*******************************************************************************/
/*! exports provided: CellType, CellTypesStrings, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CellType", function() { return CellType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CellTypesStrings", function() { return CellTypesStrings; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Constants; });
var CellType = {
  // Linear cells
  VTK_EMPTY_CELL: 0,
  VTK_VERTEX: 1,
  VTK_POLY_VERTEX: 2,
  VTK_LINE: 3,
  VTK_POLY_LINE: 4,
  VTK_TRIANGLE: 5,
  VTK_TRIANGLE_STRIP: 6,
  VTK_POLYGON: 7,
  VTK_PIXEL: 8,
  VTK_QUAD: 9,
  VTK_TETRA: 10,
  VTK_VOXEL: 11,
  VTK_HEXAHEDRON: 12,
  VTK_WEDGE: 13,
  VTK_PYRAMID: 14,
  VTK_PENTAGONAL_PRISM: 15,
  VTK_HEXAGONAL_PRISM: 16,
  // Quadratic, isoparametric cells
  VTK_QUADRATIC_EDGE: 21,
  VTK_QUADRATIC_TRIANGLE: 22,
  VTK_QUADRATIC_QUAD: 23,
  VTK_QUADRATIC_POLYGON: 36,
  VTK_QUADRATIC_TETRA: 24,
  VTK_QUADRATIC_HEXAHEDRON: 25,
  VTK_QUADRATIC_WEDGE: 26,
  VTK_QUADRATIC_PYRAMID: 27,
  VTK_BIQUADRATIC_QUAD: 28,
  VTK_TRIQUADRATIC_HEXAHEDRON: 29,
  VTK_QUADRATIC_LINEAR_QUAD: 30,
  VTK_QUADRATIC_LINEAR_WEDGE: 31,
  VTK_BIQUADRATIC_QUADRATIC_WEDGE: 32,
  VTK_BIQUADRATIC_QUADRATIC_HEXAHEDRON: 33,
  VTK_BIQUADRATIC_TRIANGLE: 34,
  // Cubic, isoparametric cell
  VTK_CUBIC_LINE: 35,
  // Special class of cells formed by convex group of points
  VTK_CONVEX_POINT_SET: 41,
  // Polyhedron cell (consisting of polygonal faces)
  VTK_POLYHEDRON: 42,
  // Higher order cells in parametric form
  VTK_PARAMETRIC_CURVE: 51,
  VTK_PARAMETRIC_SURFACE: 52,
  VTK_PARAMETRIC_TRI_SURFACE: 53,
  VTK_PARAMETRIC_QUAD_SURFACE: 54,
  VTK_PARAMETRIC_TETRA_REGION: 55,
  VTK_PARAMETRIC_HEX_REGION: 56,
  // Higher order cells
  VTK_HIGHER_ORDER_EDGE: 60,
  VTK_HIGHER_ORDER_TRIANGLE: 61,
  VTK_HIGHER_ORDER_QUAD: 62,
  VTK_HIGHER_ORDER_POLYGON: 63,
  VTK_HIGHER_ORDER_TETRAHEDRON: 64,
  VTK_HIGHER_ORDER_WEDGE: 65,
  VTK_HIGHER_ORDER_PYRAMID: 66,
  VTK_HIGHER_ORDER_HEXAHEDRON: 67,
  // Arbitrary order Lagrange elements (formulated separated from generic higher order cells)
  VTK_LAGRANGE_CURVE: 68,
  VTK_LAGRANGE_TRIANGLE: 69,
  VTK_LAGRANGE_QUADRILATERAL: 70,
  VTK_LAGRANGE_TETRAHEDRON: 71,
  VTK_LAGRANGE_HEXAHEDRON: 72,
  VTK_LAGRANGE_WEDGE: 73,
  VTK_LAGRANGE_PYRAMID: 74,
  VTK_NUMBER_OF_CELL_TYPES: 75
}; // This list should contain the cell class names in
// the same order as in CellType.

var CellTypesStrings = ['vtkEmptyCell', 'vtkVertex', 'vtkPolyVertex', 'vtkLine', 'vtkPolyLine', 'vtkTriangle', 'vtkTriangleStrip', 'vtkPolygon', 'vtkPixel', 'vtkQuad', 'vtkTetra', 'vtkVoxel', 'vtkHexahedron', 'vtkWedge', 'vtkPyramid', 'vtkPentagonalPrism', 'vtkHexagonalPrism', 'UnknownClass', 'UnknownClass', 'UnknownClass', 'UnknownClass', 'vtkQuadraticEdge', 'vtkQuadraticTriangle', 'vtkQuadraticQuad', 'vtkQuadraticTetra', 'vtkQuadraticHexahedron', 'vtkQuadraticWedge', 'vtkQuadraticPyramid', 'vtkBiQuadraticQuad', 'vtkTriQuadraticHexahedron', 'vtkQuadraticLinearQuad', 'vtkQuadraticLinearWedge', 'vtkBiQuadraticQuadraticWedge', 'vtkBiQuadraticQuadraticHexahedron', 'vtkBiQuadraticTriangle', 'vtkCubicLine', 'vtkQuadraticPolygon', 'UnknownClass', 'UnknownClass', 'UnknownClass', 'UnknownClass', 'vtkConvexPointSet', 'UnknownClass', 'UnknownClass', 'UnknownClass', 'UnknownClass', 'UnknownClass', 'UnknownClass', 'UnknownClass', 'UnknownClass', 'UnknownClass', 'vtkParametricCurve', 'vtkParametricSurface', 'vtkParametricTriSurface', 'vtkParametricQuadSurface', 'vtkParametricTetraRegion', 'vtkParametricHexRegion', 'UnknownClass', 'UnknownClass', 'UnknownClass', 'vtkHigherOrderEdge', 'vtkHigherOrderTriangle', 'vtkHigherOrderQuad', 'vtkHigherOrderPolygon', 'vtkHigherOrderTetrahedron', 'vtkHigherOrderWedge', 'vtkHigherOrderPyramid', 'vtkHigherOrderHexahedron'];
var Constants = {
  CellType: CellType,
  CellTypesStrings: CellTypesStrings
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Common/DataModel/DataSet.js":
/*!*******************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Common/DataModel/DataSet.js ***!
  \*******************************************************************/
/*! exports provided: default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkDataSet$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "../node_modules/@babel/runtime/helpers/defineProperty.js");
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _vtk_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../vtk.js */ "../node_modules/@kitware/vtk.js/vtk.js");
/* harmony import */ var _DataSetAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./DataSetAttributes.js */ "../node_modules/@kitware/vtk.js/Common/DataModel/DataSetAttributes.js");
/* harmony import */ var _DataSet_Constants_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./DataSet/Constants.js */ "../node_modules/@kitware/vtk.js/Common/DataModel/DataSet/Constants.js");






function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
// import * as vtkMath from '../../Core/Math';
//
// function getBounds(dataset) {
//   if (dataset.bounds) {
//     return dataset.bounds;
//   }
//   if (dataset.type && dataset[dataset.type]) {
//     const ds = dataset[dataset.type];
//     if (ds.bounds) {
//       return ds.bounds;
//     }
//     if (ds.Points && ds.Points.bounds) {
//       return ds.Points.bounds;
//     }
//     if (ds.Points && ds.Points.values) {
//       const array = ds.Points.values;
//       const bbox = [...vtkBoundingBox.INIT_BOUNDS];
//       const size = array.length;
//       const delta = ds.Points.numberOfComponents ? ds.Points.numberOfComponents : 3;
//       for (let idx = 0; idx < size; idx += delta) {
//         vtkBoundingBox.addPoint(bbox, array[idx * delta], array[(idx * delta) + 1], array[(idx * delta) + 2]);
//       }
//       ds.Points.bounds = bbox;
//       return ds.Points.bounds;
//     }
//   }
//   return vtkMath.createUninitializedBounds();
// }
// ----------------------------------------------------------------------------
// Global methods
// ----------------------------------------------------------------------------

var DATASET_FIELDS = ['pointData', 'cellData', 'fieldData']; // ----------------------------------------------------------------------------
// vtkDataSet methods
// ----------------------------------------------------------------------------

function vtkDataSet(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkDataSet'); // Add dataset attributes

  DATASET_FIELDS.forEach(function (fieldName) {
    if (!model[fieldName]) {
      model[fieldName] = _DataSetAttributes_js__WEBPACK_IMPORTED_MODULE_3__["default"].newInstance();
    } else {
      model[fieldName] = Object(_vtk_js__WEBPACK_IMPORTED_MODULE_2__["default"])(model[fieldName]);
    }
  });
  var superShallowCopy = publicAPI.shallowCopy;

  publicAPI.shallowCopy = function (other) {
    var debug = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
    superShallowCopy(other, debug);
    DATASET_FIELDS.forEach(function (fieldName) {
      model[fieldName] = _DataSetAttributes_js__WEBPACK_IMPORTED_MODULE_3__["default"].newInstance();
      model[fieldName].shallowCopy(other.getReferenceByName(fieldName));
    });
  };
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {// pointData: null,
  // cellData: null,
  // fieldData: null,
}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Object methods

  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].obj(publicAPI, model);
  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].setGet(publicAPI, model, DATASET_FIELDS); // Object specific methods

  vtkDataSet(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].newInstance(extend, 'vtkDataSet'); // ----------------------------------------------------------------------------

var vtkDataSet$1 = _objectSpread({
  newInstance: newInstance,
  extend: extend
}, _DataSet_Constants_js__WEBPACK_IMPORTED_MODULE_4__["default"]);




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Common/DataModel/DataSet/Constants.js":
/*!*****************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Common/DataModel/DataSet/Constants.js ***!
  \*****************************************************************************/
/*! exports provided: FieldAssociations, FieldDataTypes, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FieldAssociations", function() { return FieldAssociations; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FieldDataTypes", function() { return FieldDataTypes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Constants; });
// Specify how data arrays can be used by data objects
var FieldDataTypes = {
  UNIFORM: 0,
  // data that does not vary over points/cells/etc.
  DATA_OBJECT_FIELD: 0,
  // to match VTK
  COORDINATE: 1,
  // data that specifies the location of each point
  POINT_DATA: 1,
  // to match VTK
  POINT: 2,
  // data defined at each point, but that does not specify the point location
  POINT_FIELD_DATA: 2,
  // to match VTK
  CELL: 3,
  // data defined at each cell, but that does not specify the cell
  CELL_FIELD_DATA: 3,
  // to match VTK
  VERTEX: 4,
  // data defined at each graph vertex, but that does not specify the graph vertex
  VERTEX_FIELD_DATA: 4,
  // to match VTK
  EDGE: 5,
  // data defined at each graph edge, but that does not specify the graph edge
  EDGE_FIELD_DATA: 5,
  // to match VTK
  ROW: 6,
  // data specifying a table row
  ROW_DATA: 6 // to match VTK

};
var FieldAssociations = {
  FIELD_ASSOCIATION_POINTS: 0,
  FIELD_ASSOCIATION_CELLS: 1,
  FIELD_ASSOCIATION_NONE: 2,
  FIELD_ASSOCIATION_POINTS_THEN_CELLS: 3,
  FIELD_ASSOCIATION_VERTICES: 4,
  FIELD_ASSOCIATION_EDGES: 5,
  FIELD_ASSOCIATION_ROWS: 6,
  NUMBER_OF_ASSOCIATIONS: 7
};
var Constants = {
  FieldDataTypes: FieldDataTypes,
  FieldAssociations: FieldAssociations
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Common/DataModel/DataSetAttributes.js":
/*!*****************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Common/DataModel/DataSetAttributes.js ***!
  \*****************************************************************************/
/*! exports provided: default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkDataSetAttributes$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "../node_modules/@babel/runtime/helpers/defineProperty.js");
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _DataSetAttributes_FieldData_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./DataSetAttributes/FieldData.js */ "../node_modules/@kitware/vtk.js/Common/DataModel/DataSetAttributes/FieldData.js");
/* harmony import */ var _DataSetAttributes_Constants_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./DataSetAttributes/Constants.js */ "../node_modules/@kitware/vtk.js/Common/DataModel/DataSetAttributes/Constants.js");
/* harmony import */ var _Core_DataArray_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Core/DataArray.js */ "../node_modules/@kitware/vtk.js/Common/Core/DataArray.js");






function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var AttributeTypes = _DataSetAttributes_Constants_js__WEBPACK_IMPORTED_MODULE_3__["default"].AttributeTypes,
    AttributeCopyOperations = _DataSetAttributes_Constants_js__WEBPACK_IMPORTED_MODULE_3__["default"].AttributeCopyOperations;
var vtkWarningMacro = _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].vtkWarningMacro; // ----------------------------------------------------------------------------
// vtkDataSetAttributes methods
// ----------------------------------------------------------------------------

function vtkDataSetAttributes(publicAPI, model) {
  var attrTypes = ['Scalars', 'Vectors', 'Normals', 'TCoords', 'Tensors', 'GlobalIds', 'PedigreeIds'];

  function cleanAttributeType(attType) {
    // Given an integer or string, convert the result to one of the
    // strings in the "attrTypes" array above or null (if
    // no match is found)
    var cleanAttType = attrTypes.find(function (ee) {
      return AttributeTypes[ee.toUpperCase()] === attType || typeof attType !== 'number' && ee.toLowerCase() === attType.toLowerCase();
    });

    if (typeof cleanAttType === 'undefined') {
      cleanAttType = null;
    }

    return cleanAttType;
  } // Set our className


  model.classHierarchy.push('vtkDataSetAttributes');

  publicAPI.checkNumberOfComponents = function (x) {
    return true;
  }; // TODO


  publicAPI.setAttribute = function (arr, uncleanAttType) {
    var attType = cleanAttributeType(uncleanAttType);

    if (arr && attType.toUpperCase() === 'PEDIGREEIDS' && !arr.isA('vtkDataArray')) {
      vtkWarningMacro("Cannot set attribute ".concat(attType, ". The attribute must be a vtkDataArray."));
      return -1;
    }

    if (arr && !publicAPI.checkNumberOfComponents(arr, attType)) {
      vtkWarningMacro("Cannot set attribute ".concat(attType, ". Incorrect number of components."));
      return -1;
    }

    var currentAttribute = model["active".concat(attType)];

    if (currentAttribute >= 0 && currentAttribute < model.arrays.length) {
      if (model.arrays[currentAttribute] === arr) {
        return currentAttribute;
      }

      publicAPI.removeArrayByIndex(currentAttribute);
    }

    if (arr) {
      currentAttribute = publicAPI.addArray(arr);
      model["active".concat(attType)] = currentAttribute;
    } else {
      model["active".concat(attType)] = -1;
    }

    publicAPI.modified();
    return model["active".concat(attType)];
  };

  publicAPI.setActiveAttributeByName = function (arrayName, attType) {
    return publicAPI.setActiveAttributeByIndex(publicAPI.getArrayWithIndex(arrayName).index, attType);
  };

  publicAPI.setActiveAttributeByIndex = function (arrayIdx, uncleanAttType) {
    var attType = cleanAttributeType(uncleanAttType);

    if (arrayIdx >= 0 && arrayIdx < model.arrays.length) {
      if (attType.toUpperCase() !== 'PEDIGREEIDS') {
        var arr = publicAPI.getArrayByIndex(arrayIdx);

        if (!arr.isA('vtkDataArray')) {
          vtkWarningMacro("Cannot set attribute ".concat(attType, ". Only vtkDataArray subclasses can be set as active attributes."));
          return -1;
        }

        if (!publicAPI.checkNumberOfComponents(arr, attType)) {
          vtkWarningMacro("Cannot set attribute ".concat(attType, ". Incorrect number of components."));
          return -1;
        }
      }

      model["active".concat(attType)] = arrayIdx;
      publicAPI.modified();
      return arrayIdx;
    }

    if (arrayIdx === -1) {
      model["active".concat(attType)] = arrayIdx;
      publicAPI.modified();
    }

    return -1;
  };

  publicAPI.getActiveAttribute = function (attType) {
    // Given an integer enum value or a string (with random capitalization),
    // find the matching string in attrTypes.
    var cleanAttType = cleanAttributeType(attType);
    return publicAPI["get".concat(cleanAttType)]();
  }; // Override to allow proper handling of active attributes


  publicAPI.removeAllArrays = function () {
    model.arrays = [];
    attrTypes.forEach(function (attType) {
      model["active".concat(attType)] = -1;
    });
  }; // Override to allow proper handling of active attributes


  publicAPI.removeArray = function (arrayName) {
    model.arrays = model.arrays.filter(function (entry, idx) {
      if (arrayName === entry.data.getName()) {
        // Found the array to remove, but is it an active attribute?
        attrTypes.forEach(function (attType) {
          if (idx === model["active".concat(attType)]) {
            model["active".concat(attType)] = -1;
          }
        });
        return false;
      }

      return true;
    });
  }; // Override to allow proper handling of active attributes


  publicAPI.removeArrayByIndex = function (arrayIdx) {
    model.arrays = model.arrays.filter(function (entry, idx) {
      return idx !== arrayIdx;
    });
    attrTypes.forEach(function (attType) {
      if (arrayIdx === model["active".concat(attType)]) {
        model["active".concat(attType)] = -1;
      }
    });
  };

  attrTypes.forEach(function (value) {
    var activeVal = "active".concat(value);

    publicAPI["get".concat(value)] = function () {
      return publicAPI.getArrayByIndex(model[activeVal]);
    };

    publicAPI["set".concat(value)] = function (da) {
      return publicAPI.setAttribute(da, value);
    };

    publicAPI["setActive".concat(value)] = function (arrayName) {
      return publicAPI.setActiveAttributeByIndex(publicAPI.getArrayWithIndex(arrayName).index, value);
    };

    publicAPI["copy".concat(value, "Off")] = function () {
      var attType = value.toUpperCase();
      model.copyAttributeFlags[AttributeCopyOperations.PASSDATA][AttributeTypes[attType]] = false;
    };
  });

  publicAPI.initializeAttributeCopyFlags = function () {
    // Default to copying all attributes in every circumstance:
    model.copyAttributeFlags = [];
    Object.keys(AttributeCopyOperations).filter(function (op) {
      return op !== 'ALLCOPY';
    }).forEach(function (attCopyOp) {
      model.copyAttributeFlags[AttributeCopyOperations[attCopyOp]] = Object.keys(AttributeTypes).filter(function (ty) {
        return ty !== 'NUM_ATTRIBUTES';
      }).reduce(function (a, b) {
        a[AttributeTypes[b]] = true;
        return a;
      }, []);
    }); // Override some operations where we don't want to copy:

    model.copyAttributeFlags[AttributeCopyOperations.COPYTUPLE][AttributeTypes.GLOBALIDS] = false;
    model.copyAttributeFlags[AttributeCopyOperations.INTERPOLATE][AttributeTypes.GLOBALIDS] = false;
    model.copyAttributeFlags[AttributeCopyOperations.COPYTUPLE][AttributeTypes.PEDIGREEIDS] = false;
  };

  publicAPI.initialize = _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].chain(publicAPI.initialize, publicAPI.initializeAttributeCopyFlags); // Process dataArrays if any

  if (model.dataArrays && Object.keys(model.dataArrays).length) {
    Object.keys(model.dataArrays).forEach(function (name) {
      if (!model.dataArrays[name].ref && model.dataArrays[name].type === 'vtkDataArray') {
        publicAPI.addArray(_Core_DataArray_js__WEBPACK_IMPORTED_MODULE_4__["default"].newInstance(model.dataArrays[name]));
      }
    });
  }

  var superShallowCopy = publicAPI.shallowCopy;

  publicAPI.shallowCopy = function (other, debug) {
    superShallowCopy(other, debug);
    model.arrays = other.getArrays().map(function (arr) {
      var arrNew = arr.newClone();
      arrNew.shallowCopy(arr, debug);
      return {
        data: arrNew
      };
    });
  };

  publicAPI.initializeAttributeCopyFlags();
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {
  activeScalars: -1,
  activeVectors: -1,
  activeTensors: -1,
  activeNormals: -1,
  activeTCoords: -1,
  activeGlobalIds: -1,
  activePedigreeIds: -1
}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Object methods

  _DataSetAttributes_FieldData_js__WEBPACK_IMPORTED_MODULE_2__["default"].extend(publicAPI, model, initialValues);
  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].setGet(publicAPI, model, ['activeScalars', 'activeNormals', 'activeTCoords', 'activeVectors', 'activeTensors', 'activeGlobalIds', 'activePedigreeIds']);

  if (!model.arrays) {
    model.arrays = {};
  } // Object specific methods


  vtkDataSetAttributes(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].newInstance(extend, 'vtkDataSetAttributes'); // ----------------------------------------------------------------------------

var vtkDataSetAttributes$1 = _objectSpread({
  newInstance: newInstance,
  extend: extend
}, _DataSetAttributes_Constants_js__WEBPACK_IMPORTED_MODULE_3__["default"]);




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Common/DataModel/DataSetAttributes/Constants.js":
/*!***************************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Common/DataModel/DataSetAttributes/Constants.js ***!
  \***************************************************************************************/
/*! exports provided: AttributeCopyOperations, AttributeLimitTypes, AttributeTypes, CellGhostTypes, DesiredOutputPrecision, PointGhostTypes, default, ghostArrayName */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AttributeCopyOperations", function() { return AttributeCopyOperations; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AttributeLimitTypes", function() { return AttributeLimitTypes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AttributeTypes", function() { return AttributeTypes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CellGhostTypes", function() { return CellGhostTypes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DesiredOutputPrecision", function() { return DesiredOutputPrecision; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PointGhostTypes", function() { return PointGhostTypes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Constants; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ghostArrayName", function() { return ghostArrayName; });
var AttributeTypes = {
  SCALARS: 0,
  VECTORS: 1,
  NORMALS: 2,
  TCOORDS: 3,
  TENSORS: 4,
  GLOBALIDS: 5,
  PEDIGREEIDS: 6,
  EDGEFLAG: 7,
  NUM_ATTRIBUTES: 8
};
var AttributeLimitTypes = {
  MAX: 0,
  EXACT: 1,
  NOLIMIT: 2
};
var CellGhostTypes = {
  DUPLICATECELL: 1,
  // the cell is present on multiple processors
  HIGHCONNECTIVITYCELL: 2,
  // the cell has more neighbors than in a regular mesh
  LOWCONNECTIVITYCELL: 4,
  // the cell has less neighbors than in a regular mesh
  REFINEDCELL: 8,
  // other cells are present that refines it.
  EXTERIORCELL: 16,
  // the cell is on the exterior of the data set
  HIDDENCELL: 32 // the cell is needed to maintain connectivity, but the data values should be ignored.

};
var PointGhostTypes = {
  DUPLICATEPOINT: 1,
  // the cell is present on multiple processors
  HIDDENPOINT: 2 // the point is needed to maintain connectivity, but the data values should be ignored.

};
var AttributeCopyOperations = {
  COPYTUPLE: 0,
  INTERPOLATE: 1,
  PASSDATA: 2,
  ALLCOPY: 3 // all of the above

};
var ghostArrayName = 'vtkGhostType';
var DesiredOutputPrecision = {
  DEFAULT: 0,
  // use the point type that does not truncate any data
  SINGLE: 1,
  // use Float32Array
  DOUBLE: 2 // use Float64Array

};
var Constants = {
  AttributeCopyOperations: AttributeCopyOperations,
  AttributeLimitTypes: AttributeLimitTypes,
  AttributeTypes: AttributeTypes,
  CellGhostTypes: CellGhostTypes,
  DesiredOutputPrecision: DesiredOutputPrecision,
  PointGhostTypes: PointGhostTypes,
  ghostArrayName: ghostArrayName
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Common/DataModel/DataSetAttributes/FieldData.js":
/*!***************************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Common/DataModel/DataSetAttributes/FieldData.js ***!
  \***************************************************************************************/
/*! exports provided: default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkFieldData$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var _vtk_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../vtk.js */ "../node_modules/@kitware/vtk.js/vtk.js");
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _Core_DataArray_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../Core/DataArray.js */ "../node_modules/@kitware/vtk.js/Common/Core/DataArray.js");




// vtkFieldData methods
// ----------------------------------------------------------------------------

function vtkFieldData(publicAPI, model) {
  model.classHierarchy.push('vtkFieldData');
  var superGetState = publicAPI.getState; // Decode serialized data if any

  if (model.arrays) {
    model.arrays = model.arrays.map(function (item) {
      return {
        data: Object(_vtk_js__WEBPACK_IMPORTED_MODULE_0__["default"])(item.data)
      };
    });
  }

  publicAPI.initialize = function () {
    publicAPI.initializeFields();
    publicAPI.copyAllOn();
    publicAPI.clearFieldFlags();
  };

  publicAPI.initializeFields = function () {
    model.arrays = [];
    model.copyFieldFlags = {};
    publicAPI.modified();
  };

  publicAPI.copyStructure = function (other) {
    publicAPI.initializeFields();
    model.copyFieldFlags = other.getCopyFieldFlags().map(function (x) {
      return x;
    }); // Deep-copy

    model.arrays = other.arrays().map(function (x) {
      return {
        array: x
      };
    }); // Deep-copy
    // TODO: Copy array information objects (once we support information objects)
  };

  publicAPI.getNumberOfArrays = function () {
    return model.arrays.length;
  };

  publicAPI.getNumberOfActiveArrays = function () {
    return model.arrays.length;
  };

  publicAPI.addArray = function (arr) {
    model.arrays = [].concat(model.arrays, {
      data: arr
    });
    return model.arrays.length - 1;
  };

  publicAPI.removeAllArrays = function () {
    model.arrays = [];
  };

  publicAPI.removeArray = function (arrayName) {
    model.arrays = model.arrays.filter(function (entry) {
      return arrayName !== entry.data.getName();
    });
  };

  publicAPI.removeArrayByIndex = function (arrayIdx) {
    model.arrays = model.arrays.filter(function (entry, idx) {
      return idx !== arrayIdx;
    });
  };

  publicAPI.getArrays = function () {
    return model.arrays.map(function (entry) {
      return entry.data;
    });
  };

  publicAPI.getArray = function (arraySpec) {
    return typeof arraySpec === 'number' ? publicAPI.getArrayByIndex(arraySpec) : publicAPI.getArrayByName(arraySpec);
  };

  publicAPI.getArrayByName = function (arrayName) {
    return model.arrays.reduce(function (a, b, i) {
      return b.data.getName() === arrayName ? b.data : a;
    }, null);
  };

  publicAPI.getArrayWithIndex = function (arrayName) {
    return model.arrays.reduce(function (a, b, i) {
      return b.data && b.data.getName() === arrayName ? {
        array: b.data,
        index: i
      } : a;
    }, {
      array: null,
      index: -1
    });
  };

  publicAPI.getArrayByIndex = function (idx) {
    return idx >= 0 && idx < model.arrays.length ? model.arrays[idx].data : null;
  };

  publicAPI.hasArray = function (arrayName) {
    return publicAPI.getArrayWithIndex(arrayName).index >= 0;
  };

  publicAPI.getArrayName = function (idx) {
    var arr = model.arrays[idx];
    return arr ? arr.data.getName() : '';
  };

  publicAPI.getCopyFieldFlags = function () {
    return model.copyFieldFlags;
  };

  publicAPI.getFlag = function (arrayName) {
    return model.copyFieldFlags[arrayName];
  };

  publicAPI.passData = function (other) {
    var fromId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : -1;
    var toId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : -1;
    other.getArrays().forEach(function (arr) {
      var copyFlag = publicAPI.getFlag(arr.getName());

      if (copyFlag !== false && !(model.doCopyAllOff && copyFlag !== true) && arr) {
        var destArr = publicAPI.getArrayByName(arr.getName());

        if (!destArr) {
          if (fromId < 0 || fromId > arr.getNumberOfTuples()) {
            publicAPI.addArray(arr);
          } else {
            var ncomps = arr.getNumberOfComponents();
            var newSize = arr.getNumberOfValues();
            var tId = toId > -1 ? toId : fromId;

            if (newSize < tId * ncomps) {
              newSize = (tId + 1) * ncomps;
            }

            destArr = _Core_DataArray_js__WEBPACK_IMPORTED_MODULE_2__["default"].newInstance({
              name: arr.getName(),
              dataType: arr.getDataType(),
              numberOfComponents: arr.getNumberOfComponents(),
              size: newSize
            });
            destArr.setTuple(tId, arr.getTuple(fromId));
            publicAPI.addArray(destArr);
          }
        } else if (arr.getNumberOfComponents() === destArr.getNumberOfComponents()) {
          if (fromId > -1 && fromId < arr.getNumberOfTuples()) {
            var _tId = toId > -1 ? toId : fromId;

            destArr.setTuple(_tId, arr.getTuple(fromId));
          } else {
            // if fromId and not provided, just copy all (or as much possible)
            // of arr to destArr.
            for (var i = 0; i < arr.getNumberOfTuples(); ++i) {
              destArr.setTuple(i, arr.getTuple(i));
            }
          }
        }
      }
    });
  };

  publicAPI.copyFieldOn = function (arrayName) {
    model.copyFieldFlags[arrayName] = true;
  };

  publicAPI.copyFieldOff = function (arrayName) {
    model.copyFieldFlags[arrayName] = false;
  };

  publicAPI.copyAllOn = function () {
    if (!model.doCopyAllOn || model.doCopyAllOff) {
      model.doCopyAllOn = true;
      model.doCopyAllOff = false;
      publicAPI.modified();
    }
  };

  publicAPI.copyAllOff = function () {
    if (model.doCopyAllOn || !model.doCopyAllOff) {
      model.doCopyAllOn = false;
      model.doCopyAllOff = true;
      publicAPI.modified();
    }
  };

  publicAPI.clearFieldFlags = function () {
    model.copyFieldFlags = {};
  };

  publicAPI.deepCopy = function (other) {
    model.arrays = other.getArrays().map(function (arr) {
      var arrNew = arr.newClone();
      arrNew.deepCopy(arr);
      return {
        data: arrNew
      };
    });
  };

  publicAPI.copyFlags = function (other) {
    return other.getCopyFieldFlags().map(function (x) {
      return x;
    });
  }; // TODO: publicAPI.squeeze = () => model.arrays.forEach(entry => entry.data.squeeze());


  publicAPI.reset = function () {
    return model.arrays.forEach(function (entry) {
      return entry.data.reset();
    });
  }; // TODO: getActualMemorySize


  publicAPI.getMTime = function () {
    return model.arrays.reduce(function (a, b) {
      return b.data.getMTime() > a ? b.data.getMTime() : a;
    }, model.mtime);
  }; // TODO: publicAPI.getField = (ids, other) => { copy ids from other into this model's arrays }
  // TODO: publicAPI.getArrayContainingComponent = (component) => ...


  publicAPI.getNumberOfComponents = function () {
    return model.arrays.reduce(function (a, b) {
      return a + b.data.getNumberOfComponents();
    }, 0);
  };

  publicAPI.getNumberOfTuples = function () {
    return model.arrays.length > 0 ? model.arrays[0].getNumberOfTuples() : 0;
  };

  publicAPI.getState = function () {
    var result = superGetState();
    result.arrays = model.arrays.map(function (item) {
      return {
        data: item.data.getState()
      };
    });
    return result;
  };
}

var DEFAULT_VALUES = {
  arrays: [],
  copyFieldFlags: [],
  // fields not to copy
  doCopyAllOn: true,
  doCopyAllOff: false
};
function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues);
  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].obj(publicAPI, model);
  vtkFieldData(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].newInstance(extend, 'vtkFieldData'); // ----------------------------------------------------------------------------

var vtkFieldData$1 = {
  newInstance: newInstance,
  extend: extend
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Common/DataModel/ImageData.js":
/*!*********************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Common/DataModel/ImageData.js ***!
  \*********************************************************************/
/*! exports provided: default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkImageData$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ "../node_modules/@babel/runtime/helpers/slicedToArray.js");
/* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _Core_Math_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Core/Math/index.js */ "../node_modules/@kitware/vtk.js/Common/Core/Math/index.js");
/* harmony import */ var _BoundingBox_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./BoundingBox.js */ "../node_modules/@kitware/vtk.js/Common/DataModel/BoundingBox.js");
/* harmony import */ var _DataSet_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./DataSet.js */ "../node_modules/@kitware/vtk.js/Common/DataModel/DataSet.js");
/* harmony import */ var _StructuredData_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./StructuredData.js */ "../node_modules/@kitware/vtk.js/Common/DataModel/StructuredData.js");
/* harmony import */ var _StructuredData_Constants_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./StructuredData/Constants.js */ "../node_modules/@kitware/vtk.js/Common/DataModel/StructuredData/Constants.js");
/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! gl-matrix */ "../node_modules/gl-matrix/esm/index.js");









var vtkErrorMacro = _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].vtkErrorMacro; // ----------------------------------------------------------------------------
// vtkImageData methods
// ----------------------------------------------------------------------------

function vtkImageData(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkImageData');

  publicAPI.setExtent = function () {
    if (model.deleted) {
      vtkErrorMacro('instance deleted - cannot call any method');
      return false;
    }

    for (var _len = arguments.length, inExtent = new Array(_len), _key = 0; _key < _len; _key++) {
      inExtent[_key] = arguments[_key];
    }

    var extentArray = inExtent.length === 1 ? inExtent[0] : inExtent;

    if (extentArray.length !== 6) {
      return false;
    }

    var changeDetected = false;
    model.extent.forEach(function (item, index) {
      if (item !== extentArray[index]) {
        if (changeDetected) {
          return;
        }

        changeDetected = true;
      }
    });

    if (changeDetected) {
      model.extent = extentArray.slice();
      model.dataDescription = _StructuredData_js__WEBPACK_IMPORTED_MODULE_5__["default"].getDataDescriptionFromExtent(model.extent);
      publicAPI.modified();
    }

    return changeDetected;
  };

  publicAPI.setDimensions = function () {
    var i;
    var j;
    var k;

    if (model.deleted) {
      vtkErrorMacro('instance deleted - cannot call any method');
      return;
    }

    if (arguments.length === 1) {
      var array = arguments.length <= 0 ? undefined : arguments[0];
      i = array[0];
      j = array[1];
      k = array[2];
    } else if (arguments.length === 3) {
      i = arguments.length <= 0 ? undefined : arguments[0];
      j = arguments.length <= 1 ? undefined : arguments[1];
      k = arguments.length <= 2 ? undefined : arguments[2];
    } else {
      vtkErrorMacro('Bad dimension specification');
      return;
    }

    publicAPI.setExtent(0, i - 1, 0, j - 1, 0, k - 1);
  };

  publicAPI.getDimensions = function () {
    return [model.extent[1] - model.extent[0] + 1, model.extent[3] - model.extent[2] + 1, model.extent[5] - model.extent[4] + 1];
  };

  publicAPI.getNumberOfCells = function () {
    var dims = publicAPI.getDimensions();
    var nCells = 1;

    for (var i = 0; i < 3; i++) {
      if (dims[i] === 0) {
        return 0;
      }

      if (dims[i] > 1) {
        nCells *= dims[i] - 1;
      }
    }

    return nCells;
  };

  publicAPI.getNumberOfPoints = function () {
    var dims = publicAPI.getDimensions();
    return dims[0] * dims[1] * dims[2];
  };

  publicAPI.getPoint = function (index) {
    var dims = publicAPI.getDimensions();

    if (dims[0] === 0 || dims[1] === 0 || dims[2] === 0) {
      vtkErrorMacro('Requesting a point from an empty image.');
      return null;
    }

    var ijk = new Float64Array(3);

    switch (model.dataDescription) {
      case _StructuredData_Constants_js__WEBPACK_IMPORTED_MODULE_6__["StructuredType"].EMPTY:
        return null;

      case _StructuredData_Constants_js__WEBPACK_IMPORTED_MODULE_6__["StructuredType"].SINGLE_POINT:
        break;

      case _StructuredData_Constants_js__WEBPACK_IMPORTED_MODULE_6__["StructuredType"].X_LINE:
        ijk[0] = index;
        break;

      case _StructuredData_Constants_js__WEBPACK_IMPORTED_MODULE_6__["StructuredType"].Y_LINE:
        ijk[1] = index;
        break;

      case _StructuredData_Constants_js__WEBPACK_IMPORTED_MODULE_6__["StructuredType"].Z_LINE:
        ijk[2] = index;
        break;

      case _StructuredData_Constants_js__WEBPACK_IMPORTED_MODULE_6__["StructuredType"].XY_PLANE:
        ijk[0] = index % dims[0];
        ijk[1] = index / dims[0];
        break;

      case _StructuredData_Constants_js__WEBPACK_IMPORTED_MODULE_6__["StructuredType"].YZ_PLANE:
        ijk[1] = index % dims[1];
        ijk[2] = index / dims[1];
        break;

      case _StructuredData_Constants_js__WEBPACK_IMPORTED_MODULE_6__["StructuredType"].XZ_PLANE:
        ijk[0] = index % dims[0];
        ijk[2] = index / dims[0];
        break;

      case _StructuredData_Constants_js__WEBPACK_IMPORTED_MODULE_6__["StructuredType"].XYZ_GRID:
        ijk[0] = index % dims[0];
        ijk[1] = index / dims[0] % dims[1];
        ijk[2] = index / (dims[0] * dims[1]);
        break;

      default:
        vtkErrorMacro('Invalid dataDescription');
        break;
    }

    var coords = [0, 0, 0];
    publicAPI.indexToWorld(ijk, coords);
    return coords;
  }; // vtkCell *GetCell(vtkIdType cellId) VTK_OVERRIDE;
  // void GetCell(vtkIdType cellId, vtkGenericCell *cell) VTK_OVERRIDE;
  // void GetCellBounds(vtkIdType cellId, double bounds[6]) VTK_OVERRIDE;
  // virtual vtkIdType FindPoint(double x, double y, double z)
  // {
  //   return this->vtkDataSet::FindPoint(x, y, z);
  // }
  // vtkIdType FindPoint(double x[3]) VTK_OVERRIDE;
  // vtkIdType FindCell(
  //   double x[3], vtkCell *cell, vtkIdType cellId, double tol2,
  //   int& subId, double pcoords[3], double *weights) VTK_OVERRIDE;
  // vtkIdType FindCell(
  //   double x[3], vtkCell *cell, vtkGenericCell *gencell,
  //   vtkIdType cellId, double tol2, int& subId,
  //   double pcoords[3], double *weights) VTK_OVERRIDE;
  // vtkCell *FindAndGetCell(double x[3], vtkCell *cell, vtkIdType cellId,
  //                                 double tol2, int& subId, double pcoords[3],
  //                                 double *weights) VTK_OVERRIDE;
  // int GetCellType(vtkIdType cellId) VTK_OVERRIDE;
  // void GetCellPoints(vtkIdType cellId, vtkIdList *ptIds) VTK_OVERRIDE
  //   {vtkStructuredData::GetCellPoints(cellId,ptIds,this->DataDescription,
  //                                     this->GetDimensions());}
  // void GetPointCells(vtkIdType ptId, vtkIdList *cellIds) VTK_OVERRIDE
  //   {vtkStructuredData::GetPointCells(ptId,cellIds,this->GetDimensions());}
  // void ComputeBounds() VTK_OVERRIDE;
  // int GetMaxCellSize() VTK_OVERRIDE {return 8;}; //voxel is the largest


  publicAPI.getBounds = function () {
    return publicAPI.extentToBounds(model.extent);
  };

  publicAPI.extentToBounds = function (ex) {
    // prettier-ignore
    var corners = [ex[0], ex[2], ex[4], ex[1], ex[2], ex[4], ex[0], ex[3], ex[4], ex[1], ex[3], ex[4], ex[0], ex[2], ex[5], ex[1], ex[2], ex[5], ex[0], ex[3], ex[5], ex[1], ex[3], ex[5]];
    var idx = new Float64Array([corners[0], corners[1], corners[2]]);
    var vout = new Float64Array(3);
    publicAPI.indexToWorld(idx, vout);
    var bounds = [vout[0], vout[0], vout[1], vout[1], vout[2], vout[2]];

    for (var i = 3; i < 24; i += 3) {
      gl_matrix__WEBPACK_IMPORTED_MODULE_7__["vec3"].set(idx, corners[i], corners[i + 1], corners[i + 2]);
      publicAPI.indexToWorld(idx, vout);

      if (vout[0] < bounds[0]) {
        bounds[0] = vout[0];
      }

      if (vout[1] < bounds[2]) {
        bounds[2] = vout[1];
      }

      if (vout[2] < bounds[4]) {
        bounds[4] = vout[2];
      }

      if (vout[0] > bounds[1]) {
        bounds[1] = vout[0];
      }

      if (vout[1] > bounds[3]) {
        bounds[3] = vout[1];
      }

      if (vout[2] > bounds[5]) {
        bounds[5] = vout[2];
      }
    }

    return bounds;
  }; // Internal, shouldn't need to call this manually.


  publicAPI.computeTransforms = function () {
    gl_matrix__WEBPACK_IMPORTED_MODULE_7__["mat4"].fromTranslation(model.indexToWorld, model.origin);
    model.indexToWorld[0] = model.direction[0];
    model.indexToWorld[1] = model.direction[1];
    model.indexToWorld[2] = model.direction[2];
    model.indexToWorld[4] = model.direction[3];
    model.indexToWorld[5] = model.direction[4];
    model.indexToWorld[6] = model.direction[5];
    model.indexToWorld[8] = model.direction[6];
    model.indexToWorld[9] = model.direction[7];
    model.indexToWorld[10] = model.direction[8];
    gl_matrix__WEBPACK_IMPORTED_MODULE_7__["mat4"].scale(model.indexToWorld, model.indexToWorld, model.spacing);
    gl_matrix__WEBPACK_IMPORTED_MODULE_7__["mat4"].invert(model.worldToIndex, model.indexToWorld);
  }; //
  // The direction matrix is a 3x3 basis for the I, J, K axes
  // of the image. The rows of the matrix correspond to the
  // axes directions in world coordinates. Direction must
  // form an orthonormal basis, results are undefined if
  // it is not.
  //


  publicAPI.setDirection = function () {
    if (model.deleted) {
      vtkErrorMacro('instance deleted - cannot call any method');
      return false;
    }

    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      args[_key2] = arguments[_key2];
    }

    var array = args; // allow an array passed as a single arg.

    if (array.length === 1 && (Array.isArray(array[0]) || array[0].constructor === Float32Array || array[0].constructor === Float64Array)) {
      array = array[0];
    }

    if (array.length !== 9) {
      throw new RangeError('Invalid number of values for array setter');
    }

    var changeDetected = false;
    model.direction.forEach(function (item, index) {
      if (item !== array[index]) {
        if (changeDetected) {
          return;
        }

        changeDetected = true;
      }
    });

    if (changeDetected) {
      for (var i = 0; i < 9; ++i) {
        model.direction[i] = array[i];
      }

      publicAPI.modified();
    }

    return true;
  };

  publicAPI.indexToWorld = function (ain) {
    var aout = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
    gl_matrix__WEBPACK_IMPORTED_MODULE_7__["vec3"].transformMat4(aout, ain, model.indexToWorld);
    return aout;
  };

  publicAPI.indexToWorldVec3 = publicAPI.indexToWorld;

  publicAPI.worldToIndex = function (ain) {
    var aout = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
    gl_matrix__WEBPACK_IMPORTED_MODULE_7__["vec3"].transformMat4(aout, ain, model.worldToIndex);
    return aout;
  };

  publicAPI.worldToIndexVec3 = publicAPI.worldToIndex;

  publicAPI.indexToWorldBounds = function (bin) {
    var bout = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
    var in1 = [0, 0, 0];
    var in2 = [0, 0, 0];
    _BoundingBox_js__WEBPACK_IMPORTED_MODULE_3__["default"].computeCornerPoints(bin, in1, in2);
    var out1 = [0, 0, 0];
    var out2 = [0, 0, 0];
    gl_matrix__WEBPACK_IMPORTED_MODULE_7__["vec3"].transformMat4(out1, in1, model.indexToWorld);
    gl_matrix__WEBPACK_IMPORTED_MODULE_7__["vec3"].transformMat4(out2, in2, model.indexToWorld);
    return Object(_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_2__["c"])(out1, out2, bout);
  };

  publicAPI.worldToIndexBounds = function (bin) {
    var bout = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
    var in1 = [0, 0, 0];
    var in2 = [0, 0, 0];
    _BoundingBox_js__WEBPACK_IMPORTED_MODULE_3__["default"].computeCornerPoints(bin, in1, in2);
    var out1 = [0, 0, 0];
    var out2 = [0, 0, 0];
    gl_matrix__WEBPACK_IMPORTED_MODULE_7__["vec3"].transformMat4(out1, in1, model.worldToIndex);
    gl_matrix__WEBPACK_IMPORTED_MODULE_7__["vec3"].transformMat4(out2, in2, model.worldToIndex);
    return Object(_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_2__["c"])(out1, out2, bout);
  }; // Make sure the transform is correct


  publicAPI.onModified(publicAPI.computeTransforms);
  publicAPI.computeTransforms();

  publicAPI.getCenter = function () {
    var bounds = publicAPI.getBounds();
    var center = [];

    for (var i = 0; i < 3; i++) {
      center[i] = (bounds[2 * i + 1] + bounds[2 * i]) / 2;
    }

    return center;
  };

  publicAPI.computeHistogram = function (worldBounds) {
    var voxelFunc = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
    var bounds = [0, 0, 0, 0, 0, 0];
    publicAPI.worldToIndexBounds(worldBounds, bounds);
    var point1 = [0, 0, 0];
    var point2 = [0, 0, 0];
    _BoundingBox_js__WEBPACK_IMPORTED_MODULE_3__["default"].computeCornerPoints(bounds, point1, point2);
    Object(_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_2__["b"])(point1, point1);
    Object(_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_2__["b"])(point2, point2);
    var dimensions = publicAPI.getDimensions();
    Object(_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_2__["e"])(point1, [0, 0, 0], [dimensions[0] - 1, dimensions[1] - 1, dimensions[2] - 1], point1);
    Object(_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_2__["e"])(point2, [0, 0, 0], [dimensions[0] - 1, dimensions[1] - 1, dimensions[2] - 1], point2);
    var yStride = dimensions[0];
    var zStride = dimensions[0] * dimensions[1];
    var pixels = publicAPI.getPointData().getScalars().getData();
    var maximum = -Infinity;
    var minimum = Infinity;
    var sumOfSquares = 0;
    var isum = 0;
    var inum = 0;

    for (var z = point1[2]; z <= point2[2]; z++) {
      for (var y = point1[1]; y <= point2[1]; y++) {
        var index = point1[0] + y * yStride + z * zStride;

        for (var x = point1[0]; x <= point2[0]; x++) {
          if (!voxelFunc || voxelFunc([x, y, z], bounds)) {
            var pixel = pixels[index];
            if (pixel > maximum) maximum = pixel;
            if (pixel < minimum) minimum = pixel;
            sumOfSquares += pixel * pixel;
            isum += pixel;
            inum += 1;
          }

          ++index;
        }
      }
    }

    var average = inum > 0 ? isum / inum : 0;
    var variance = inum ? Math.abs(sumOfSquares / inum - average * average) : 0;
    var sigma = Math.sqrt(variance);
    return {
      minimum: minimum,
      maximum: maximum,
      average: average,
      variance: variance,
      sigma: sigma,
      count: inum
    };
  }; // TODO: use the unimplemented `vtkDataSetAttributes` for scalar length, that is currently also a TODO (GetNumberOfComponents).
  // Scalar data could be tuples for color information?


  publicAPI.computeIncrements = function (extent) {
    var numberOfComponents = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;
    var increments = [];
    var incr = numberOfComponents; // Calculate array increment offsets
    // similar to c++ vtkImageData::ComputeIncrements

    for (var idx = 0; idx < 3; ++idx) {
      increments[idx] = incr;
      incr *= extent[idx * 2 + 1] - extent[idx * 2] + 1;
    }

    return increments;
  };
  /**
   * @param {Number[]} index the localized `[i,j,k]` pixel array position. Float values will be rounded.
   * @return {Number} the corresponding flattened index in the scalar array
   */


  publicAPI.computeOffsetIndex = function (_ref) {
    var _ref2 = _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0___default()(_ref, 3),
        i = _ref2[0],
        j = _ref2[1],
        k = _ref2[2];

    var extent = publicAPI.getExtent();
    var numberOfComponents = publicAPI.getPointData().getScalars().getNumberOfComponents();
    var increments = publicAPI.computeIncrements(extent, numberOfComponents); // Use the array increments to find the pixel index
    // similar to c++ vtkImageData::GetArrayPointer
    // Math.floor to catch "practically 0" e^-15 scenarios.

    return Math.floor((Math.round(i) - extent[0]) * increments[0] + (Math.round(j) - extent[2]) * increments[1] + (Math.round(k) - extent[4]) * increments[2]);
  };
  /**
   * @param {Number[]} xyz the [x,y,z] Array in world coordinates
   * @return {Number|NaN} the corresponding pixel's index in the scalar array
   */


  publicAPI.getOffsetIndexFromWorld = function (xyz) {
    var extent = publicAPI.getExtent();
    var index = publicAPI.worldToIndex(xyz); // Confirm indexed i,j,k coords are within the bounds of the volume

    for (var idx = 0; idx < 3; ++idx) {
      if (index[idx] < extent[idx * 2] || index[idx] > extent[idx * 2 + 1]) {
        vtkErrorMacro("GetScalarPointer: Pixel ".concat(index, " is not in memory. Current extent = ").concat(extent));
        return NaN;
      }
    } // Assumed the index here is within 0 <-> scalarData.length, but doesn't hurt to check upstream


    return publicAPI.computeOffsetIndex(index);
  };
  /**
   * @param {Number[]} xyz the [x,y,z] Array in world coordinates
   * @param {Number?} comp the scalar component index for multi-component scalars
   * @return {Number|NaN} the corresponding pixel's scalar value
   */


  publicAPI.getScalarValueFromWorld = function (xyz) {
    var comp = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
    var numberOfComponents = publicAPI.getPointData().getScalars().getNumberOfComponents();

    if (comp < 0 || comp >= numberOfComponents) {
      vtkErrorMacro("GetScalarPointer: Scalar Component ".concat(comp, " is not within bounds. Current Scalar numberOfComponents: ").concat(numberOfComponents));
      return NaN;
    }

    var offsetIndex = publicAPI.getOffsetIndexFromWorld(xyz);

    if (Number.isNaN(offsetIndex)) {
      // VTK Error Macro will have been tripped already, no need to do it again,
      return offsetIndex;
    }

    return publicAPI.getPointData().getScalars().getComponent(offsetIndex, comp);
  };
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {
  direction: null,
  // a mat3
  indexToWorld: null,
  // a mat4
  worldToIndex: null,
  // a mat4
  spacing: [1.0, 1.0, 1.0],
  origin: [0.0, 0.0, 0.0],
  extent: [0, -1, 0, -1, 0, -1],
  dataDescription: _StructuredData_Constants_js__WEBPACK_IMPORTED_MODULE_6__["StructuredType"].EMPTY
}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance

  _DataSet_js__WEBPACK_IMPORTED_MODULE_4__["default"].extend(publicAPI, model, initialValues);

  if (!model.direction) {
    model.direction = gl_matrix__WEBPACK_IMPORTED_MODULE_7__["mat3"].identity(new Float64Array(9));
  } else if (Array.isArray(model.direction)) {
    model.direction = new Float64Array(model.direction.slice(0, 9));
  }

  model.indexToWorld = new Float64Array(16);
  model.worldToIndex = new Float64Array(16); // Set/Get methods

  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].get(publicAPI, model, ['direction', 'indexToWorld', 'worldToIndex']);
  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].setGetArray(publicAPI, model, ['origin', 'spacing'], 3);
  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].getArray(publicAPI, model, ['extent'], 6); // Object specific methods

  vtkImageData(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].newInstance(extend, 'vtkImageData'); // ----------------------------------------------------------------------------

var vtkImageData$1 = {
  newInstance: newInstance,
  extend: extend
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Common/DataModel/Line.js":
/*!****************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Common/DataModel/Line.js ***!
  \****************************************************************/
/*! exports provided: STATIC, default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "STATIC", function() { return STATIC; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkLine$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "../node_modules/@babel/runtime/helpers/defineProperty.js");
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _Line_Constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Line/Constants.js */ "../node_modules/@kitware/vtk.js/Common/DataModel/Line/Constants.js");
/* harmony import */ var _Cell_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Cell.js */ "../node_modules/@kitware/vtk.js/Common/DataModel/Cell.js");
/* harmony import */ var _Core_Math_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Core/Math/index.js */ "../node_modules/@kitware/vtk.js/Common/Core/Math/index.js");






function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var IntersectionState = _Line_Constants_js__WEBPACK_IMPORTED_MODULE_2__["default"].IntersectionState; // ----------------------------------------------------------------------------
// Global methods
// ----------------------------------------------------------------------------

function distanceToLine(x, p1, p2) {
  var closestPoint = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;
  var outObj = {
    t: Number.MIN_VALUE,
    distance: 0
  };
  var p21 = [];
  var closest; // Determine appropriate vector

  p21[0] = p2[0] - p1[0];
  p21[1] = p2[1] - p1[1];
  p21[2] = p2[2] - p1[2]; // Get parametric location

  var num = p21[0] * (x[0] - p1[0]) + p21[1] * (x[1] - p1[1]) + p21[2] * (x[2] - p1[2]);
  var denom = Object(_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_4__["d"])(p21, p21); // trying to avoid an expensive fabs

  var tolerance = 1e-5 * num;

  if (denom !== 0.0) {
    outObj.t = num / denom;
  }

  if (tolerance < 0.0) {
    tolerance = -tolerance;
  }

  if (-tolerance < denom && denom < tolerance) {
    closest = p1;
  } else if (denom <= 0.0 || outObj.t < 0.0) {
    // If parametric coordinate is within 0<=p<=1, then the point is closest to
    // the line.  Otherwise, it's closest to a point at the end of the line.
    closest = p1;
  } else if (outObj.t > 1.0) {
    closest = p2;
  } else {
    closest = p21;
    p21[0] = p1[0] + outObj.t * p21[0];
    p21[1] = p1[1] + outObj.t * p21[1];
    p21[2] = p1[2] + outObj.t * p21[2];
  }

  if (closestPoint) {
    closestPoint[0] = closest[0];
    closestPoint[1] = closest[1];
    closestPoint[2] = closest[2];
  }

  outObj.distance = Object(_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_4__["f"])(closest, x);
  return outObj;
}

function intersection(a1, a2, b1, b2, u, v) {
  var a21 = [];
  var b21 = [];
  var b1a1 = [];
  u[0] = 0.0;
  v[0] = 0.0; // Determine line vectors.

  a21[0] = a2[0] - a1[0];
  a21[1] = a2[1] - a1[1];
  a21[2] = a2[2] - a1[2];
  b21[0] = b2[0] - b1[0];
  b21[1] = b2[1] - b1[1];
  b21[2] = b2[2] - b1[2];
  b1a1[0] = b1[0] - a1[0];
  b1a1[1] = b1[1] - a1[1];
  b1a1[2] = b1[2] - a1[2]; // Compute the system (least squares) matrix.

  var A = [];
  A[0] = [Object(_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_4__["d"])(a21, a21), -Object(_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_4__["d"])(a21, b21)];
  A[1] = [A[0][1], Object(_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_4__["d"])(b21, b21)]; // Compute the least squares system constant term.

  var c = [];
  c[0] = Object(_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_4__["d"])(a21, b1a1);
  c[1] = -Object(_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_4__["d"])(b21, b1a1); // Solve the system of equations

  if (Object(_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_4__["s"])(A, c, 2) === 0) {
    // The lines are colinear. Therefore, one of the four endpoints is the
    // point of closest approach
    var minDist = Number.MAX_VALUE;
    var p = [a1, a2, b1, b2];
    var l1 = [b1, b1, a1, a1];
    var l2 = [b2, b2, a2, a2];
    var uv1 = [v[0], v[0], u[0], u[0]];
    var uv2 = [u[0], u[0], v[0], v[0]];
    var obj;

    for (var i = 0; i < 4; i++) {
      obj = distanceToLine(p[i], l1[i], l2[i]);

      if (obj.distance < minDist) {
        minDist = obj.distance;
        uv1[i] = obj.t;
        uv2[i] = i % 2;
      }
    }

    return IntersectionState.ON_LINE;
  }

  u[0] = c[0];
  v[0] = c[1]; // Check parametric coordinates for intersection.

  if (u[0] >= 0.0 && u[0] <= 1.0 && v[0] >= 0.0 && v[0] <= 1.0) {
    return IntersectionState.YES_INTERSECTION;
  }

  return IntersectionState.NO_INTERSECTION;
} // ----------------------------------------------------------------------------
// Static API
// ----------------------------------------------------------------------------


var STATIC = {
  distanceToLine: distanceToLine,
  intersection: intersection
}; // ----------------------------------------------------------------------------
// vtkLine methods
// ----------------------------------------------------------------------------

function vtkLine(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkLine');

  function isBetweenPoints(t) {
    return t >= 0.0 && t <= 1.0;
  }

  publicAPI.getCellDimension = function () {
    return 1;
  };

  publicAPI.intersectWithLine = function (p1, p2, tol, x, pcoords) {
    var outObj = {
      intersect: 0,
      t: Number.MAX_VALUE,
      subId: 0,
      betweenPoints: null
    };
    pcoords[1] = 0.0;
    pcoords[2] = 0.0;
    var projXYZ = [];
    var a1 = [];
    var a2 = [];
    model.points.getPoint(0, a1);
    model.points.getPoint(1, a2);
    var u = [];
    var v = [];
    var intersect = intersection(p1, p2, a1, a2, u, v);
    outObj.t = u[0];
    outObj.betweenPoints = isBetweenPoints(outObj.t);
    pcoords[0] = v[0];

    if (intersect === IntersectionState.YES_INTERSECTION) {
      // make sure we are within tolerance
      for (var i = 0; i < 3; i++) {
        x[i] = a1[i] + pcoords[0] * (a2[i] - a1[i]);
        projXYZ[i] = p1[i] + outObj.t * (p2[i] - p1[i]);
      }

      if (Object(_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_4__["f"])(x, projXYZ) <= tol * tol) {
        outObj.intersect = 1;
        return outObj;
      }
    } else {
      var outDistance; // check to see if it lies within tolerance
      // one of the parametric coords must be outside 0-1

      if (outObj.t < 0.0) {
        outDistance = distanceToLine(p1, a1, a2, x);

        if (outDistance.distance <= tol * tol) {
          outObj.t = 0.0;
          outObj.intersect = 1;
          outObj.betweenPoints = true; // Intersection is near p1

          return outObj;
        }

        return outObj;
      }

      if (outObj.t > 1.0) {
        outDistance = distanceToLine(p2, a1, a2, x);

        if (outDistance.distance <= tol * tol) {
          outObj.t = 1.0;
          outObj.intersect = 1;
          outObj.betweenPoints = true; // Intersection is near p2

          return outObj;
        }

        return outObj;
      }

      if (pcoords[0] < 0.0) {
        pcoords[0] = 0.0;
        outDistance = distanceToLine(a1, p1, p2, x);
        outObj.t = outDistance.t;

        if (outDistance.distance <= tol * tol) {
          outObj.intersect = 1;
          return outObj;
        }

        return outObj;
      }

      if (pcoords[0] > 1.0) {
        pcoords[0] = 1.0;
        outDistance = distanceToLine(a2, p1, p2, x);
        outObj.t = outDistance.t;

        if (outDistance.distance <= tol * tol) {
          outObj.intersect = 1;
          return outObj;
        }

        return outObj;
      }
    }

    return outObj;
  };

  publicAPI.evaluatePosition = function (x, closestPoint, subId, pcoords, dist2, weights) {}; // virtual

} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues);
  _Cell_js__WEBPACK_IMPORTED_MODULE_3__["default"].extend(publicAPI, model, initialValues);
  vtkLine(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].newInstance(extend, 'vtkLine'); // ----------------------------------------------------------------------------

var vtkLine$1 = _objectSpread(_objectSpread({
  newInstance: newInstance,
  extend: extend
}, STATIC), _Line_Constants_js__WEBPACK_IMPORTED_MODULE_2__["default"]);




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Common/DataModel/Line/Constants.js":
/*!**************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Common/DataModel/Line/Constants.js ***!
  \**************************************************************************/
/*! exports provided: IntersectionState, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "IntersectionState", function() { return IntersectionState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Constants; });
var IntersectionState = {
  NO_INTERSECTION: 0,
  YES_INTERSECTION: 1,
  ON_LINE: 2
};
var Constants = {
  IntersectionState: IntersectionState
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Common/DataModel/Molecule.js":
/*!********************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Common/DataModel/Molecule.js ***!
  \********************************************************************/
/*! exports provided: default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkMolecule$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");


var MOLECULE_FIELDS = ['chemical json', 'name', 'inchi', 'formula', 'atoms', 'bonds', 'properties']; // ----------------------------------------------------------------------------
// vtkMolecule methods
// ----------------------------------------------------------------------------

function vtkMolecule(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkMolecule');
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {
  'chemical json': 0,
  name: '',
  inchi: '',
  formula: '',
  atoms: null,
  bonds: null,
  properties: null
}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Object methods

  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].obj(publicAPI, model);

  if (!model.atoms) {
    model.atoms = {};
  }

  if (!model.bonds) {
    model.bonds = {};
  }

  if (!model.properties) {
    model.properties = {};
  }

  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].setGet(publicAPI, model, MOLECULE_FIELDS); // Object specific methods

  vtkMolecule(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].newInstance(extend, 'vtkMolecule'); // ----------------------------------------------------------------------------

var vtkMolecule$1 = {
  newInstance: newInstance,
  extend: extend
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Common/DataModel/PiecewiseFunction.js":
/*!*****************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Common/DataModel/PiecewiseFunction.js ***!
  \*****************************************************************************/
/*! exports provided: default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkPiecewiseFunction$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");


var vtkErrorMacro = _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].vtkErrorMacro; // ----------------------------------------------------------------------------
// vtkPiecewiseFunction methods
// ----------------------------------------------------------------------------

function vtkPiecewiseFunction(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkPiecewiseFunction'); // Return the number of points which specify this function

  publicAPI.getSize = function () {
    return model.nodes.length;
  }; // Return the type of function stored in object:
  // Function Types:
  //    0 : Constant        (No change in slope between end points)
  //    1 : NonDecreasing   (Always increasing or zero slope)
  //    2 : NonIncreasing   (Always decreasing or zero slope)
  //    3 : Varied          (Contains both decreasing and increasing slopes)
  //    4 : Unknown         (Error condition)
  //


  publicAPI.getType = function () {
    var value;
    var prevValue = 0.0;
    var functionType = 0;

    if (model.nodes.length > 0) {
      prevValue = model.nodes[0].y;
    }

    for (var i = 1; i < model.nodes.length; i++) {
      value = model.nodes[i].y; // Do not change the function type if equal

      if (value !== prevValue) {
        if (value > prevValue) {
          switch (functionType) {
            case 0:
            case 1:
              functionType = 1; // NonDecreasing

              break;

            case 2:
            default:
              functionType = 3; // Varied

              break;
          }
        } else {
          // value < prev_value
          switch (functionType) {
            case 0:
            case 2:
              functionType = 2; // NonIncreasing

              break;

            case 1:
            default:
              functionType = 3; // Varied

              break;
          }
        }
      }

      prevValue = value; // Exit loop if we find a Varied function

      if (functionType === 3) {
        break;
      }
    }

    switch (functionType) {
      case 0:
        return 'Constant';

      case 1:
        return 'NonDecreasing';

      case 2:
        return 'NonIncreasing';

      case 3:
      default:
        return 'Varied';
    }
  }; // Since we no longer store the data in an array, we must
  // copy out of the vector into an array. No modified check -
  // could be added if performance is a problem


  publicAPI.getDataPointer = function () {
    var size = model.nodes.length;
    model.function = null;

    if (size > 0) {
      model.function = [];

      for (var i = 0; i < size; i++) {
        model.function[2 * i] = model.nodes[i].x;
        model.function[2 * i + 1] = model.nodes[i].y;
      }
    }

    return model.function;
  }; // Returns the first point location which starts a non-zero segment of the
  // function. Note that the value at this point may be zero.


  publicAPI.getFirstNonZeroValue = function () {
    // Check if no points specified
    if (model.nodes.length === 0) {
      return 0;
    }

    var allZero = 1;
    var x = 0.0;
    var i = 0;

    for (; i < model.nodes.length; i++) {
      if (model.nodes[i].y !== 0.0) {
        allZero = 0;
        break;
      }
    } // If every specified point has a zero value then return
    // a large value


    if (allZero) {
      x = Number.MAX_VALUE;
    } else if (i > 0) {
      // A point was found with a non-zero value
      // Return the value of the point that precedes this one
      x = model.nodes[i - 1].x;
    } else if (model.clamping) {
      // If this is the first point in the function, return its
      // value is clamping is off, otherwise VTK_DOUBLE_MIN if
      // clamping is on.
      x = -Number.MAX_VALUE;
    } else {
      x = model.nodes[0].x;
    }

    return x;
  }; // For a specified index value, get the node parameters


  publicAPI.getNodeValue = function (index, val) {
    var size = model.nodes.length;

    if (index < 0 || index >= size) {
      vtkErrorMacro('Index out of range!');
      return -1;
    }

    val[0] = model.nodes[index].x;
    val[1] = model.nodes[index].y;
    val[2] = model.nodes[index].midpoint;
    val[3] = model.nodes[index].sharpness;
    return 1;
  }; // For a specified index value, get the node parameters


  publicAPI.setNodeValue = function (index, val) {
    var size = model.nodes.length;

    if (index < 0 || index >= size) {
      vtkErrorMacro('Index out of range!');
      return -1;
    }

    var oldX = model.nodes[index].x;
    model.nodes[index].x = val[0];
    model.nodes[index].y = val[1];
    model.nodes[index].midpoint = val[2];
    model.nodes[index].sharpness = val[3];

    if (oldX !== val[0]) {
      // The point has been moved, the order of points or the range might have
      // been modified.
      publicAPI.sortAndUpdateRange(); // No need to call Modified() here because SortAndUpdateRange() has done it
      // already.
    } else {
      publicAPI.modified();
    }

    return 1;
  }; // Adds a point to the function. If a duplicate point is inserted
  // then the function value at that location is set to the new value.
  // This is the legacy version that assumes midpoint = 0.5 and
  // sharpness = 0.0


  publicAPI.addPoint = function (x, y) {
    return publicAPI.addPointLong(x, y, 0.5, 0.0);
  }; // Adds a point to the function and returns the array index of the point.


  publicAPI.addPointLong = function (x, y, midpoint, sharpness) {
    // Error check
    if (midpoint < 0.0 || midpoint > 1.0) {
      vtkErrorMacro('Midpoint outside range [0.0, 1.0]');
      return -1;
    }

    if (sharpness < 0.0 || sharpness > 1.0) {
      vtkErrorMacro('Sharpness outside range [0.0, 1.0]');
      return -1;
    } // remove any node already at this X location


    if (!model.allowDuplicateScalars) {
      publicAPI.removePoint(x);
    } // Create the new node


    var node = {
      x: x,
      y: y,
      midpoint: midpoint,
      sharpness: sharpness
    }; // Add it, then sort to get everything in order

    model.nodes.push(node);
    publicAPI.sortAndUpdateRange(); // Now find this node so we can return the index

    var i;

    for (i = 0; i < model.nodes.length; i++) {
      if (model.nodes[i].x === x) {
        break;
      }
    } // If we didn't find it, something went horribly wrong so
    // return -1


    if (i < model.nodes.length) {
      return i;
    }

    return -1;
  };

  publicAPI.setNodes = function (nodes) {
    if (model.nodes !== nodes) {
      model.nodes = nodes;
      publicAPI.sortAndUpdateRange();
    }
  }; // Sort the vector in increasing order, then fill in
  // the Range


  publicAPI.sortAndUpdateRange = function () {
    model.nodes.sort(function (a, b) {
      return a.x - b.x;
    });
    var modifiedInvoked = publicAPI.updateRange(); // If range is updated, Modified() has been called, don't call it again.

    if (!modifiedInvoked) {
      publicAPI.modified();
    }
  }; //----------------------------------------------------------------------------


  publicAPI.updateRange = function () {
    var oldRange = model.range.slice();
    var size = model.nodes.length;

    if (size) {
      model.range[0] = model.nodes[0].x;
      model.range[1] = model.nodes[size - 1].x;
    } else {
      model.range[0] = 0;
      model.range[1] = 0;
    } // If the rage is the same, then no need to call Modified()


    if (oldRange[0] === model.range[0] && oldRange[1] === model.range[1]) {
      return false;
    }

    publicAPI.modified();
    return true;
  }; // Removes a point from the function. If no point is found then function
  // remains the same.


  publicAPI.removePoint = function (x) {
    // First find the node since we need to know its
    // index as our return value
    var i;

    for (i = 0; i < model.nodes.length; i++) {
      if (model.nodes[i].x === x) {
        break;
      }
    } // If the node doesn't exist, we return -1


    if (i >= model.nodes.length) {
      return -1;
    }

    var retVal = i; // If the first or last point has been removed, then we update the range
    // No need to sort here as the order of points hasn't changed.

    var modifiedInvoked = false;
    model.nodes.splice(i, 1);

    if (i === 0 || i === model.nodes.length) {
      modifiedInvoked = publicAPI.updateRange();
    }

    if (!modifiedInvoked) {
      publicAPI.modified();
    }

    return retVal;
  }; // Removes all points from the function.


  publicAPI.removeAllPoints = function () {
    model.nodes = [];
    publicAPI.sortAndUpdateRange();
  }; // Add in end points of line and remove any points between them
  // Legacy method with no way to specify midpoint and sharpness


  publicAPI.addSegment = function (x1, y1, x2, y2) {
    // First, find all points in this range and remove them
    publicAPI.sortAndUpdateRange();

    for (var i = 0; i < model.nodes.length;) {
      if (model.nodes[i].x >= x1 && model.nodes[i].x <= x2) {
        model.nodes.splice(i, 1);
      } else {
        i++;
      }
    } // Now add the points


    publicAPI.addPoint(x1, y1, 0.5, 0.0);
    publicAPI.addPoint(x2, y2, 0.5, 0.0);
  }; // Return the value of the function at a position


  publicAPI.getValue = function (x) {
    var table = [];
    publicAPI.getTable(x, x, 1, table);
    return table[0];
  }; // Remove all points outside the range, and make sure a point
  // exists at each end of the range. Used as a convenience method
  // for transfer function editors


  publicAPI.adjustRange = function (range) {
    if (range.length < 2) {
      return 0;
    }

    var functionRange = publicAPI.getRange(); // Make sure we have points at each end of the range

    if (functionRange[0] < range[0]) {
      publicAPI.addPoint(range[0], publicAPI.getValue(range[0]));
    } else {
      publicAPI.addPoint(range[0], publicAPI.getValue(functionRange[0]));
    }

    if (functionRange[1] > range[1]) {
      publicAPI.addPoint(range[1], publicAPI.getValue(range[1]));
    } else {
      publicAPI.addPoint(range[1], publicAPI.getValue(functionRange[1]));
    } // Remove all points out-of-range


    publicAPI.sortAndUpdateRange();

    for (var i = 0; i < model.nodes.length;) {
      if (model.nodes[i].x >= range[0] && model.nodes[i].x <= range[1]) {
        model.nodes.splice(i, 1);
      } else {
        ++i;
      }
    }

    publicAPI.sortAndUpdateRange();
    return 1;
  }; //--------------------------------------------------------------------------


  publicAPI.estimateMinNumberOfSamples = function (x1, x2) {
    var d = publicAPI.findMinimumXDistance();
    return Math.ceil((x2 - x1) / d);
  }; //----------------------------------------------------------------------------


  publicAPI.findMinimumXDistance = function () {
    var size = model.nodes.length;

    if (size < 2) {
      return -1.0;
    }

    var distance = model.nodes[1].x - model.nodes[0].x;

    for (var i = 0; i < size - 1; i++) {
      var currentDist = model.nodes[i + 1].x - model.nodes[i].x;

      if (currentDist < distance) {
        distance = currentDist;
      }
    }

    return distance;
  }; // Returns a table of function values evaluated at regular intervals

  /* eslint-disable prefer-destructuring */

  /* eslint-disable no-continue */


  publicAPI.getTable = function (xStart, xEnd, size, table) {
    var stride = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;
    var i;
    var idx = 0;
    var numNodes = model.nodes.length; // Need to keep track of the last value so that
    // we can fill in table locations past this with
    // this value if Clamping is On.

    var lastValue = 0.0;

    if (numNodes !== 0) {
      lastValue = model.nodes[numNodes - 1].y;
    }

    var x = 0.0;
    var x1 = 0.0;
    var x2 = 0.0;
    var y1 = 0.0;
    var y2 = 0.0;
    var midpoint = 0.0;
    var sharpness = 0.0; // For each table entry

    for (i = 0; i < size; i++) {
      // Find our location in the table
      var tidx = stride * i; // Find our X location. If we are taking only 1 sample, make
      // it halfway between start and end (usually start and end will
      // be the same in this case)

      if (size > 1) {
        x = xStart + i / (size - 1.0) * (xEnd - xStart);
      } else {
        x = 0.5 * (xStart + xEnd);
      } // Do we need to move to the next node?


      while (idx < numNodes && x > model.nodes[idx].x) {
        idx++; // If we are at a valid point index, fill in
        // the value at this node, and the one before (the
        // two that surround our current sample location)
        // idx cannot be 0 since we just incremented it.

        if (idx < numNodes) {
          x1 = model.nodes[idx - 1].x;
          x2 = model.nodes[idx].x;
          y1 = model.nodes[idx - 1].y;
          y2 = model.nodes[idx].y; // We only need the previous midpoint and sharpness
          // since these control this region

          midpoint = model.nodes[idx - 1].midpoint;
          sharpness = model.nodes[idx - 1].sharpness; // Move midpoint away from extreme ends of range to avoid
          // degenerate math

          if (midpoint < 0.00001) {
            midpoint = 0.00001;
          }

          if (midpoint > 0.99999) {
            midpoint = 0.99999;
          }
        }
      } // Are we at the end? If so, just use the last value


      if (idx >= numNodes) {
        table[tidx] = model.clamping ? lastValue : 0.0;
      } else if (idx === 0) {
        // Are we before the first node? If so, duplicate this nodes values
        table[tidx] = model.clamping ? model.nodes[0].y : 0.0;
      } else {
        // Otherwise, we are between two nodes - interpolate
        // Our first attempt at a normalized location [0,1] -
        // we will be modifying this based on midpoint and
        // sharpness to get the curve shape we want and to have
        // it pass through (y1+y2)/2 at the midpoint.
        var s = (x - x1) / (x2 - x1); // Readjust based on the midpoint - linear adjustment

        if (s < midpoint) {
          s = 0.5 * s / midpoint;
        } else {
          s = 0.5 + 0.5 * (s - midpoint) / (1.0 - midpoint);
        } // override for sharpness > 0.99
        // In this case we just want piecewise constant


        if (sharpness > 0.99) {
          // Use the first value since we are below the midpoint
          if (s < 0.5) {
            table[tidx] = y1;
            continue;
          } else {
            // Use the second value at or above the midpoint
            table[tidx] = y2;
            continue;
          }
        } // Override for sharpness < 0.01
        // In this case we want piecewise linear


        if (sharpness < 0.01) {
          // Simple linear interpolation
          table[tidx] = (1 - s) * y1 + s * y2;
          continue;
        } // We have a sharpness between [0.01, 0.99] - we will
        // used a modified hermite curve interpolation where we
        // derive the slope based on the sharpness, and we compress
        // the curve non-linearly based on the sharpness
        // First, we will adjust our position based on sharpness in
        // order to make the curve sharper (closer to piecewise constant)


        if (s < 0.5) {
          s = 0.5 * Math.pow(s * 2, 1.0 + 10 * sharpness);
        } else if (s > 0.5) {
          s = 1.0 - 0.5 * Math.pow((1.0 - s) * 2, 1 + 10 * sharpness);
        } // Compute some coefficients we will need for the hermite curve


        var ss = s * s;
        var sss = ss * s;
        var h1 = 2 * sss - 3 * ss + 1;
        var h2 = -2 * sss + 3 * ss;
        var h3 = sss - 2 * ss + s;
        var h4 = sss - ss; // Use one slope for both end points

        var slope = y2 - y1;
        var t = (1.0 - sharpness) * slope; // Compute the value

        table[tidx] = h1 * y1 + h2 * y2 + h3 * t + h4 * t; // Final error check to make sure we don't go outside
        // the Y range

        var min = y1 < y2 ? y1 : y2;
        var max = y1 > y2 ? y1 : y2;
        table[tidx] = table[tidx] < min ? min : table[tidx];
        table[tidx] = table[tidx] > max ? max : table[tidx];
      }
    }
  };
}
/* eslint-enable prefer-destructuring */

/* eslint-enable no-continue */
// ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {
  // model.function = NULL;
  range: [0, 0],
  clamping: true,
  allowDuplicateScalars: false
}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance

  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].obj(publicAPI, model); // Internal objects initialization

  model.nodes = []; // Create get-set macros

  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].setGet(publicAPI, model, ['allowDuplicateScalars', 'clamping']);
  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].setArray(publicAPI, model, ['range'], 2); // Create get macros for array

  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].getArray(publicAPI, model, ['range']); // For more macro methods, see "Sources/macros.js"
  // Object specific methods

  vtkPiecewiseFunction(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].newInstance(extend, 'vtkPiecewiseFunction'); // ----------------------------------------------------------------------------

var vtkPiecewiseFunction$1 = {
  newInstance: newInstance,
  extend: extend
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Common/DataModel/Plane.js":
/*!*****************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Common/DataModel/Plane.js ***!
  \*****************************************************************/
/*! exports provided: STATIC, default, extend, newInstance, vtkPlane */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "STATIC", function() { return STATIC; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkPlane$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vtkPlane", function() { return vtkPlane; });
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "../node_modules/@babel/runtime/helpers/defineProperty.js");
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _Core_Math_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Core/Math/index.js */ "../node_modules/@kitware/vtk.js/Common/Core/Math/index.js");
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");




function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var PLANE_TOLERANCE = 1.0e-6;
var COINCIDE = 'coincide';
var DISJOINT = 'disjoint'; // ----------------------------------------------------------------------------
// Global methods
// ----------------------------------------------------------------------------

function evaluate(normal, origin, x) {
  return normal[0] * (x[0] - origin[0]) + normal[1] * (x[1] - origin[1]) + normal[2] * (x[2] - origin[2]);
}

function distanceToPlane(x, origin, normal) {
  var distance = normal[0] * (x[0] - origin[0]) + normal[1] * (x[1] - origin[1]) + normal[2] * (x[2] - origin[2]);
  return Math.abs(distance);
}

function projectPoint(x, origin, normal, xproj) {
  var xo = [];
  Object(_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_1__["g"])(x, origin, xo);
  var t = Object(_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_1__["d"])(normal, xo);
  xproj[0] = x[0] - t * normal[0];
  xproj[1] = x[1] - t * normal[1];
  xproj[2] = x[2] - t * normal[2];
}

function projectVector(v, normal, vproj) {
  var t = Object(_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_1__["d"])(v, normal);
  var n2 = Object(_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_1__["d"])(normal, normal);

  if (n2 === 0) {
    n2 = 1.0;
  }

  vproj[0] = v[0] - t * normal[0] / n2;
  vproj[1] = v[1] - t * normal[1] / n2;
  vproj[2] = v[2] - t * normal[2] / n2;
  return vproj;
}

function generalizedProjectPoint(x, origin, normal, xproj) {
  var xo = [];
  Object(_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_1__["g"])(x, origin, xo);
  var t = Object(_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_1__["d"])(normal, xo);
  var n2 = Object(_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_1__["d"])(normal, normal);

  if (n2 !== 0) {
    xproj[0] = x[0] - t * normal[0] / n2;
    xproj[1] = x[1] - t * normal[1] / n2;
    xproj[2] = x[2] - t * normal[2] / n2;
  } else {
    xproj[0] = x[0];
    xproj[1] = x[1];
    xproj[2] = x[2];
  }
}

function intersectWithLine(p1, p2, origin, normal) {
  var outObj = {
    intersection: false,
    betweenPoints: false,
    t: Number.MAX_VALUE,
    x: []
  };
  var p21 = [];
  var p1Origin = []; // Compute line vector

  Object(_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_1__["g"])(p2, p1, p21);
  Object(_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_1__["g"])(origin, p1, p1Origin); // Compute denominator.  If ~0, line and plane are parallel.
  // const num = vtkMath.dot(normal, origin) - vtkMath.dot(normal, p1);

  var num = Object(_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_1__["d"])(normal, p1Origin);
  var den = Object(_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_1__["d"])(normal, p21); // If denominator with respect to numerator is "zero", then the line and
  // plane are considered parallel.

  var fabsden;
  var fabstolerance; // Trying to avoid an expensive call to fabs()

  if (den < 0.0) {
    fabsden = -den;
  } else {
    fabsden = den;
  }

  if (num < 0.0) {
    fabstolerance = -num * PLANE_TOLERANCE;
  } else {
    fabstolerance = num * PLANE_TOLERANCE;
  }

  if (fabsden <= fabstolerance) {
    return outObj;
  } // Where on the line between p1 and p2 is the intersection
  // If between 0 and 1, it is between the two points. If < 0 it's before p1, if > 1 it's after p2


  outObj.t = num / den;
  outObj.x[0] = p1[0] + outObj.t * p21[0];
  outObj.x[1] = p1[1] + outObj.t * p21[1];
  outObj.x[2] = p1[2] + outObj.t * p21[2];
  outObj.intersection = true;
  outObj.betweenPoints = outObj.t >= 0.0 && outObj.t <= 1.0;
  return outObj;
}

function intersectWithPlane(plane1Origin, plane1Normal, plane2Origin, plane2Normal) {
  var outObj = {
    intersection: false,
    l0: [],
    l1: [],
    error: null
  };
  var cross$1 = [];
  Object(_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_1__["j"])(plane1Normal, plane2Normal, cross$1);
  var absCross = cross$1.map(function (n) {
    return Math.abs(n);
  }); // test if the two planes are parallel

  if (absCross[0] + absCross[1] + absCross[2] < PLANE_TOLERANCE) {
    // test if disjoint or coincide
    var v = [];
    Object(_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_1__["g"])(plane1Origin, plane2Origin, v);

    if (Object(_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_1__["d"])(plane1Normal, v) === 0) {
      outObj.error = COINCIDE;
    } else {
      outObj.error = DISJOINT;
    }

    return outObj;
  } // Plane1 and Plane2 intersect in a line
  // first determine max abs coordinate of the cross product


  var maxc;

  if (absCross[0] > absCross[1] && absCross[0] > absCross[2]) {
    maxc = 'x';
  } else if (absCross[1] > absCross[2]) {
    maxc = 'y';
  } else {
    maxc = 'z';
  } // To get a point on the intersect line, zero the max coord, and solve for the other two


  var iP = []; // intersectionPoint
  // the constants in the 2 plane equations

  var d1 = -Object(_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_1__["d"])(plane1Normal, plane1Origin);
  var d2 = -Object(_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_1__["d"])(plane2Normal, plane2Origin); // eslint-disable-next-line default-case

  switch (maxc) {
    case 'x':
      // intersect with x=0
      iP[0] = 0;
      iP[1] = (d2 * plane1Normal[2] - d1 * plane2Normal[2]) / cross$1[0];
      iP[2] = (d1 * plane2Normal[1] - d2 * plane1Normal[1]) / cross$1[0];
      break;

    case 'y':
      // intersect with y=0
      iP[0] = (d1 * plane2Normal[2] - d2 * plane1Normal[2]) / cross$1[1];
      iP[1] = 0;
      iP[2] = (d2 * plane1Normal[0] - d1 * plane2Normal[0]) / cross$1[1];
      break;

    case 'z':
      // intersect with z=0
      iP[0] = (d2 * plane1Normal[1] - d1 * plane2Normal[1]) / cross$1[2];
      iP[1] = (d1 * plane2Normal[0] - d2 * plane1Normal[0]) / cross$1[2];
      iP[2] = 0;
      break;
  }

  outObj.l0 = iP;
  Object(_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_1__["k"])(iP, cross$1, outObj.l1);
  outObj.intersection = true;
  return outObj;
} // ----------------------------------------------------------------------------
// Static API
// ----------------------------------------------------------------------------


var STATIC = {
  evaluate: evaluate,
  distanceToPlane: distanceToPlane,
  projectPoint: projectPoint,
  projectVector: projectVector,
  generalizedProjectPoint: generalizedProjectPoint,
  intersectWithLine: intersectWithLine,
  intersectWithPlane: intersectWithPlane,
  DISJOINT: DISJOINT,
  COINCIDE: COINCIDE
}; // ----------------------------------------------------------------------------
// vtkPlane methods
// ----------------------------------------------------------------------------

function vtkPlane(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkPlane');

  publicAPI.distanceToPlane = function (x) {
    return distanceToPlane(x, model.origin, model.normal);
  };

  publicAPI.projectPoint = function (x, xproj) {
    projectPoint(x, model.origin, model.normal, xproj);
  };

  publicAPI.projectVector = function (v, vproj) {
    return projectVector(v, model.normal, vproj);
  };

  publicAPI.push = function (distance) {
    if (distance === 0.0) {
      return;
    }

    for (var i = 0; i < 3; i++) {
      model.origin[i] += distance * model.normal[i];
    }
  };

  publicAPI.generalizedProjectPoint = function (x, xproj) {
    generalizedProjectPoint(x, model.origin, model.normal, xproj);
  };

  publicAPI.evaluateFunction = function (x, y, z) {
    if (!Array.isArray(x)) {
      return model.normal[0] * (x - model.origin[0]) + model.normal[1] * (y - model.origin[1]) + model.normal[2] * (z - model.origin[2]);
    }

    return model.normal[0] * (x[0] - model.origin[0]) + model.normal[1] * (x[1] - model.origin[1]) + model.normal[2] * (x[2] - model.origin[2]);
  };

  publicAPI.evaluateGradient = function (xyz) {
    var retVal = [model.normal[0], model.normal[1], model.normal[2]];
    return retVal;
  };

  publicAPI.intersectWithLine = function (p1, p2) {
    return intersectWithLine(p1, p2, model.origin, model.normal);
  };

  publicAPI.intersectWithPlane = function (planeOrigin, planeNormal) {
    return intersectWithPlane(planeOrigin, planeNormal, model.origin, model.normal);
  };
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------

var DEFAULT_VALUES = {
  normal: [0.0, 0.0, 1.0],
  origin: [0.0, 0.0, 0.0]
}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Object methods

  _macros_js__WEBPACK_IMPORTED_MODULE_2__["default"].obj(publicAPI, model);
  _macros_js__WEBPACK_IMPORTED_MODULE_2__["default"].setGetArray(publicAPI, model, ['normal', 'origin'], 3);
  vtkPlane(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = _macros_js__WEBPACK_IMPORTED_MODULE_2__["default"].newInstance(extend, 'vtkPlane'); // ----------------------------------------------------------------------------

var vtkPlane$1 = _objectSpread({
  newInstance: newInstance,
  extend: extend
}, STATIC);




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Common/DataModel/PointSet.js":
/*!********************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Common/DataModel/PointSet.js ***!
  \********************************************************************/
/*! exports provided: default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkPointSet$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var _vtk_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../vtk.js */ "../node_modules/@kitware/vtk.js/vtk.js");
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _DataSet_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./DataSet.js */ "../node_modules/@kitware/vtk.js/Common/DataModel/DataSet.js");
/* harmony import */ var _Core_Points_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Core/Points.js */ "../node_modules/@kitware/vtk.js/Common/Core/Points.js");





// Global methods
// ----------------------------------------------------------------------------
// ----------------------------------------------------------------------------
// vtkPointSet methods
// ----------------------------------------------------------------------------

function vtkPointSet(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkPointSet'); // Create empty points

  if (!model.points) {
    model.points = _Core_Points_js__WEBPACK_IMPORTED_MODULE_3__["default"].newInstance();
  } else {
    model.points = Object(_vtk_js__WEBPACK_IMPORTED_MODULE_0__["default"])(model.points);
  }

  publicAPI.getNumberOfPoints = function () {
    return model.points.getNumberOfPoints();
  };

  publicAPI.getBounds = function () {
    return model.points.getBounds();
  };

  publicAPI.computeBounds = function () {
    publicAPI.getBounds();
  };

  var superShallowCopy = publicAPI.shallowCopy;

  publicAPI.shallowCopy = function (other) {
    var debug = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
    superShallowCopy(other, debug);
    model.points = _Core_Points_js__WEBPACK_IMPORTED_MODULE_3__["default"].newInstance();
    model.points.shallowCopy(other.getPoints());
  };
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {// points: null,
}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance

  _DataSet_js__WEBPACK_IMPORTED_MODULE_2__["default"].extend(publicAPI, model, initialValues);
  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].setGet(publicAPI, model, ['points']); // Object specific methods

  vtkPointSet(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].newInstance(extend, 'vtkPointSet'); // ----------------------------------------------------------------------------

var vtkPointSet$1 = {
  newInstance: newInstance,
  extend: extend
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Common/DataModel/PolyData.js":
/*!********************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Common/DataModel/PolyData.js ***!
  \********************************************************************/
/*! exports provided: CELL_FACTORY, default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CELL_FACTORY", function() { return CELL_FACTORY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkPolyData$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "../node_modules/@babel/runtime/helpers/defineProperty.js");
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _vtk_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../vtk.js */ "../node_modules/@kitware/vtk.js/vtk.js");
/* harmony import */ var _Core_CellArray_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Core/CellArray.js */ "../node_modules/@kitware/vtk.js/Common/Core/CellArray.js");
/* harmony import */ var _CellLinks_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./CellLinks.js */ "../node_modules/@kitware/vtk.js/Common/DataModel/CellLinks.js");
/* harmony import */ var _CellTypes_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./CellTypes.js */ "../node_modules/@kitware/vtk.js/Common/DataModel/CellTypes.js");
/* harmony import */ var _Line_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Line.js */ "../node_modules/@kitware/vtk.js/Common/DataModel/Line.js");
/* harmony import */ var _PointSet_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./PointSet.js */ "../node_modules/@kitware/vtk.js/Common/DataModel/PointSet.js");
/* harmony import */ var _Triangle_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./Triangle.js */ "../node_modules/@kitware/vtk.js/Common/DataModel/Triangle.js");
/* harmony import */ var _CellTypes_Constants_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./CellTypes/Constants.js */ "../node_modules/@kitware/vtk.js/Common/DataModel/CellTypes/Constants.js");
/* harmony import */ var _PolyData_Constants_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./PolyData/Constants.js */ "../node_modules/@kitware/vtk.js/Common/DataModel/PolyData/Constants.js");












var _CELL_FACTORY;
var vtkWarningMacro = _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].vtkWarningMacro;
var CELL_FACTORY = (_CELL_FACTORY = {}, _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(_CELL_FACTORY, _CellTypes_Constants_js__WEBPACK_IMPORTED_MODULE_9__["CellType"].VTK_LINE, _Line_js__WEBPACK_IMPORTED_MODULE_6__["default"]), _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(_CELL_FACTORY, _CellTypes_Constants_js__WEBPACK_IMPORTED_MODULE_9__["CellType"].VTK_POLY_LINE, _Line_js__WEBPACK_IMPORTED_MODULE_6__["default"]), _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(_CELL_FACTORY, _CellTypes_Constants_js__WEBPACK_IMPORTED_MODULE_9__["CellType"].VTK_TRIANGLE, _Triangle_js__WEBPACK_IMPORTED_MODULE_8__["default"]), _CELL_FACTORY); // ----------------------------------------------------------------------------
// vtkPolyData methods
// ----------------------------------------------------------------------------

function vtkPolyData(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkPolyData');

  function camelize(str) {
    return str.replace(/(?:^\w|[A-Z]|\b\w)/g, function (letter) {
      return letter.toUpperCase();
    }).replace(/\s+/g, '');
  } // build empty cell arrays and set methods


  _PolyData_Constants_js__WEBPACK_IMPORTED_MODULE_10__["POLYDATA_FIELDS"].forEach(function (type) {
    publicAPI["getNumberOf".concat(camelize(type))] = function () {
      return model[type].getNumberOfCells();
    };

    if (!model[type]) {
      model[type] = _Core_CellArray_js__WEBPACK_IMPORTED_MODULE_3__["default"].newInstance();
    } else {
      model[type] = Object(_vtk_js__WEBPACK_IMPORTED_MODULE_2__["default"])(model[type]);
    }
  });

  publicAPI.getNumberOfCells = function () {
    return _PolyData_Constants_js__WEBPACK_IMPORTED_MODULE_10__["POLYDATA_FIELDS"].reduce(function (num, cellType) {
      return num + model[cellType].getNumberOfCells();
    }, 0);
  };

  var superShallowCopy = publicAPI.shallowCopy;

  publicAPI.shallowCopy = function (other) {
    var debug = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
    superShallowCopy(other, debug);
    _PolyData_Constants_js__WEBPACK_IMPORTED_MODULE_10__["POLYDATA_FIELDS"].forEach(function (type) {
      model[type] = _Core_CellArray_js__WEBPACK_IMPORTED_MODULE_3__["default"].newInstance();
      model[type].shallowCopy(other.getReferenceByName(type));
    });
  };

  publicAPI.buildCells = function () {
    // here are the number of cells we have
    var nVerts = publicAPI.getNumberOfVerts();
    var nLines = publicAPI.getNumberOfLines();
    var nPolys = publicAPI.getNumberOfPolys();
    var nStrips = publicAPI.getNumberOfStrips(); // pre-allocate the space we need

    var nCells = nVerts + nLines + nPolys + nStrips;
    var types = new Uint8Array(nCells);
    var pTypes = types;
    var locs = new Uint32Array(nCells);
    var pLocs = locs; // record locations and type of each cell.
    // verts

    if (nVerts) {
      var nextCellPts = 0;
      model.verts.getCellSizes().forEach(function (numCellPts, index) {
        pLocs[index] = nextCellPts;
        pTypes[index] = numCellPts > 1 ? _CellTypes_Constants_js__WEBPACK_IMPORTED_MODULE_9__["CellType"].VTK_POLY_VERTEX : _CellTypes_Constants_js__WEBPACK_IMPORTED_MODULE_9__["CellType"].VTK_VERTEX;
        nextCellPts += numCellPts + 1;
      });
      pLocs = pLocs.subarray(nVerts);
      pTypes = pTypes.subarray(nVerts);
    } // lines


    if (nLines) {
      var _nextCellPts = 0;
      model.lines.getCellSizes().forEach(function (numCellPts, index) {
        pLocs[index] = _nextCellPts;
        pTypes[index] = numCellPts > 2 ? _CellTypes_Constants_js__WEBPACK_IMPORTED_MODULE_9__["CellType"].VTK_POLY_LINE : _CellTypes_Constants_js__WEBPACK_IMPORTED_MODULE_9__["CellType"].VTK_LINE;

        if (numCellPts === 1) {
          vtkWarningMacro('Building VTK_LINE ', index, ' with only one point, but VTK_LINE needs at least two points. Check the input.');
        }

        _nextCellPts += numCellPts + 1;
      });
      pLocs = pLocs.subarray(nLines);
      pTypes = pTypes.subarray(nLines);
    } // polys


    if (nPolys) {
      var _nextCellPts2 = 0;
      model.polys.getCellSizes().forEach(function (numCellPts, index) {
        pLocs[index] = _nextCellPts2;

        switch (numCellPts) {
          case 3:
            pTypes[index] = _CellTypes_Constants_js__WEBPACK_IMPORTED_MODULE_9__["CellType"].VTK_TRIANGLE;
            break;

          case 4:
            pTypes[index] = _CellTypes_Constants_js__WEBPACK_IMPORTED_MODULE_9__["CellType"].VTK_QUAD;
            break;

          default:
            pTypes[index] = _CellTypes_Constants_js__WEBPACK_IMPORTED_MODULE_9__["CellType"].VTK_POLYGON;
            break;
        }

        if (numCellPts < 3) {
          vtkWarningMacro('Building VTK_TRIANGLE ', index, ' with less than three points, but VTK_TRIANGLE needs at least three points. Check the input.');
        }

        _nextCellPts2 += numCellPts + 1;
      });
      pLocs += pLocs.subarray(nPolys);
      pTypes += pTypes.subarray(nPolys);
    } // strips


    if (nStrips) {
      var _nextCellPts3 = 0;
      pTypes.fill(_CellTypes_Constants_js__WEBPACK_IMPORTED_MODULE_9__["CellType"].VTK_TRIANGLE_STRIP, 0, nStrips);
      model.strips.getCellSizes().forEach(function (numCellPts, index) {
        pLocs[index] = _nextCellPts3;
        _nextCellPts3 += numCellPts + 1;
      });
    } // set up the cell types data structure


    model.cells = _CellTypes_js__WEBPACK_IMPORTED_MODULE_5__["default"].newInstance();
    model.cells.setCellTypes(nCells, types, locs);
  };
  /**
   * Create upward links from points to cells that use each point. Enables
   * topologically complex queries.
   */


  publicAPI.buildLinks = function () {
    var initialSize = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;

    if (model.cells === undefined) {
      publicAPI.buildCells();
    }

    model.links = _CellLinks_js__WEBPACK_IMPORTED_MODULE_4__["default"].newInstance();

    if (initialSize > 0) {
      model.links.allocate(initialSize);
    } else {
      model.links.allocate(publicAPI.getPoints().getNumberOfPoints());
    }

    model.links.buildLinks(publicAPI);
  }; // Returns an object made of the cellType and a subarray `cellPointIds` of
  // the cell points.


  publicAPI.getCellPoints = function (cellId) {
    var cellType = model.cells.getCellType(cellId);
    var cells = null;

    switch (cellType) {
      case _CellTypes_Constants_js__WEBPACK_IMPORTED_MODULE_9__["CellType"].VTK_VERTEX:
      case _CellTypes_Constants_js__WEBPACK_IMPORTED_MODULE_9__["CellType"].VTK_POLY_VERTEX:
        cells = model.verts;
        break;

      case _CellTypes_Constants_js__WEBPACK_IMPORTED_MODULE_9__["CellType"].VTK_LINE:
      case _CellTypes_Constants_js__WEBPACK_IMPORTED_MODULE_9__["CellType"].VTK_POLY_LINE:
        cells = model.lines;
        break;

      case _CellTypes_Constants_js__WEBPACK_IMPORTED_MODULE_9__["CellType"].VTK_TRIANGLE:
      case _CellTypes_Constants_js__WEBPACK_IMPORTED_MODULE_9__["CellType"].VTK_QUAD:
      case _CellTypes_Constants_js__WEBPACK_IMPORTED_MODULE_9__["CellType"].VTK_POLYGON:
        cells = model.polys;
        break;

      case _CellTypes_Constants_js__WEBPACK_IMPORTED_MODULE_9__["CellType"].VTK_TRIANGLE_STRIP:
        cells = model.strips;
        break;

      default:
        cells = null;
        return {
          type: 0,
          cellPointIds: null
        };
    }

    var loc = model.cells.getCellLocation(cellId);
    var cellPointIds = cells.getCell(loc);
    return {
      cellType: cellType,
      cellPointIds: cellPointIds
    };
  };

  publicAPI.getPointCells = function (ptId) {
    return model.links.getCells(ptId);
  };

  publicAPI.getCellEdgeNeighbors = function (cellId, point1, point2) {
    var link1 = model.links.getLink(point1);
    var link2 = model.links.getLink(point2);
    return link1.cells.filter(function (cell) {
      return cell !== cellId && link2.cells.indexOf(cell) !== -1;
    });
  };
  /**
   * If you know the type of cell, you may provide it to improve performances.
   */


  publicAPI.getCell = function (cellId) {
    var cellHint = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
    var cellInfo = publicAPI.getCellPoints(cellId);
    var cell = cellHint || CELL_FACTORY[cellInfo.cellType].newInstance();
    cell.initialize(publicAPI.getPoints(), cellInfo.cellPointIds);
    return cell;
  };
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {// verts: null,
  // lines: null,
  // polys: null,
  // strips: null,
  // cells: null,
  // links: null,
}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance

  _PointSet_js__WEBPACK_IMPORTED_MODULE_7__["default"].extend(publicAPI, model, initialValues);
  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].get(publicAPI, model, ['cells', 'links']);
  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].setGet(publicAPI, model, ['verts', 'lines', 'polys', 'strips']); // Object specific methods

  vtkPolyData(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].newInstance(extend, 'vtkPolyData'); // ----------------------------------------------------------------------------

var vtkPolyData$1 = {
  newInstance: newInstance,
  extend: extend
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Common/DataModel/PolyData/Constants.js":
/*!******************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Common/DataModel/PolyData/Constants.js ***!
  \******************************************************************************/
/*! exports provided: POLYDATA_FIELDS, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "POLYDATA_FIELDS", function() { return POLYDATA_FIELDS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Constants; });
var POLYDATA_FIELDS = ['verts', 'lines', 'polys', 'strips'];
var Constants = {
  POLYDATA_FIELDS: POLYDATA_FIELDS
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Common/DataModel/SelectionNode.js":
/*!*************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Common/DataModel/SelectionNode.js ***!
  \*************************************************************************/
/*! exports provided: default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkSelectionNode$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "../node_modules/@babel/runtime/helpers/defineProperty.js");
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _SelectionNode_Constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./SelectionNode/Constants.js */ "../node_modules/@kitware/vtk.js/Common/DataModel/SelectionNode/Constants.js");




function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
// vtkSelectionNode methods
// ----------------------------------------------------------------------------

function vtkSelectionNode(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkSelectionNode');

  publicAPI.getBounds = function () {
    return model.points.getBounds();
  };
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {
  contentType: -1,
  fieldType: -1,
  properties: null,
  selectionList: []
}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance

  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].obj(publicAPI, model);
  model.properties = {};
  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].setGet(publicAPI, model, ['contentType', 'fieldType', 'properties', 'selectionList']); // Object specific methods

  vtkSelectionNode(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].newInstance(extend, 'vtkSelectionNode'); // ----------------------------------------------------------------------------

var vtkSelectionNode$1 = _objectSpread({
  newInstance: newInstance,
  extend: extend
}, _SelectionNode_Constants_js__WEBPACK_IMPORTED_MODULE_2__["default"]);




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Common/DataModel/SelectionNode/Constants.js":
/*!***********************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Common/DataModel/SelectionNode/Constants.js ***!
  \***********************************************************************************/
/*! exports provided: SelectionContent, SelectionField, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SelectionContent", function() { return SelectionContent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SelectionField", function() { return SelectionField; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Constants; });
/**
 * The (primary) property that describes the content of a selection
 * node's data. Other auxiliary description properties follow.
 * GLOBALIDS means that the selection list contains values from the
 * vtkDataSetAttribute array of the same name.
 * PEDIGREEIDS means that the selection list contains values from the
 * vtkDataSetAttribute array of the same name.
 * VALUES means the the selection list contains values from an
 * arbitrary attribute array (ignores any globalids attribute)
 * INDICES means that the selection list contains indexes into the
 * cell or point arrays.
 * FRUSTUM means the set of points and cells inside a frustum
 * LOCATIONS means the set of points and cells near a set of positions
 * THRESHOLDS means the points and cells with values within a set of ranges
 * getContentType() returns -1 if the content type is not set.
 */
// Specify how data arrays can be used by data objects
var SelectionContent = {
  GLOBALIDS: 0,
  PEDIGREEIDS: 1,
  VALUES: 2,
  INDICES: 3,
  FRUSTUM: 4,
  LOCATIONS: 5,
  THRESHOLDS: 6,
  BLOCKS: 7,
  QUERY: 8
};
var SelectionField = {
  CELL: 0,
  POINT: 1,
  FIELD: 2,
  VERTEX: 3,
  EDGE: 4,
  ROW: 5
};
var Constants = {
  SelectionContent: SelectionContent,
  SelectionField: SelectionField
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Common/DataModel/StructuredData.js":
/*!**************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Common/DataModel/StructuredData.js ***!
  \**************************************************************************/
/*! exports provided: default, getDataDescriptionFromExtent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkStructuredData; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getDataDescriptionFromExtent", function() { return getDataDescriptionFromExtent; });
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "../node_modules/@babel/runtime/helpers/defineProperty.js");
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _StructuredData_Constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./StructuredData/Constants.js */ "../node_modules/@kitware/vtk.js/Common/DataModel/StructuredData/Constants.js");



function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var StructuredType = _StructuredData_Constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].StructuredType;
function getDataDescriptionFromExtent(inExt) {
  var dataDim = 0;

  for (var i = 0; i < 3; ++i) {
    if (inExt[i * 2] < inExt[i * 2 + 1]) {
      dataDim++;
    }
  }

  if (inExt[0] > inExt[1] || inExt[2] > inExt[3] || inExt[4] > inExt[5]) {
    return StructuredType.EMPTY;
  }

  if (dataDim === 3) {
    return StructuredType.XYZ_GRID;
  }

  if (dataDim === 2) {
    if (inExt[0] === inExt[1]) {
      return StructuredType.YZ_PLANE;
    }

    if (inExt[2] === inExt[3]) {
      return StructuredType.XZ_PLANE;
    }

    return StructuredType.XY_PLANE;
  }

  if (dataDim === 1) {
    if (inExt[0] < inExt[1]) {
      return StructuredType.X_LINE;
    }

    if (inExt[2] < inExt[3]) {
      return StructuredType.Y_LINE;
    }

    return StructuredType.Z_LINE;
  }

  return StructuredType.SINGLE_POINT;
}
var vtkStructuredData = _objectSpread({
  getDataDescriptionFromExtent: getDataDescriptionFromExtent
}, _StructuredData_Constants_js__WEBPACK_IMPORTED_MODULE_1__["default"]);




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Common/DataModel/StructuredData/Constants.js":
/*!************************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Common/DataModel/StructuredData/Constants.js ***!
  \************************************************************************************/
/*! exports provided: StructuredType, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StructuredType", function() { return StructuredType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Constants; });
var StructuredType = {
  UNCHANGED: 0,
  SINGLE_POINT: 1,
  X_LINE: 2,
  Y_LINE: 3,
  Z_LINE: 4,
  XY_PLANE: 5,
  YZ_PLANE: 6,
  XZ_PLANE: 7,
  XYZ_GRID: 8,
  EMPTY: 9
};
var Constants = {
  StructuredType: StructuredType
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Common/DataModel/Triangle.js":
/*!********************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Common/DataModel/Triangle.js ***!
  \********************************************************************/
/*! exports provided: STATIC, default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "STATIC", function() { return STATIC; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkTriangle$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "../node_modules/@babel/runtime/helpers/defineProperty.js");
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _Cell_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Cell.js */ "../node_modules/@kitware/vtk.js/Common/DataModel/Cell.js");
/* harmony import */ var _Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Core/Math/index.js */ "../node_modules/@kitware/vtk.js/Common/Core/Math/index.js");
/* harmony import */ var _Line_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Line.js */ "../node_modules/@kitware/vtk.js/Common/DataModel/Line.js");
/* harmony import */ var _Plane_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Plane.js */ "../node_modules/@kitware/vtk.js/Common/DataModel/Plane.js");







function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
// Global methods
// ----------------------------------------------------------------------------

function computeNormalDirection(v1, v2, v3, n) {
  // order is important!!! maintain consistency with triangle vertex order
  var ax = v3[0] - v2[0];
  var ay = v3[1] - v2[1];
  var az = v3[2] - v2[2];
  var bx = v1[0] - v2[0];
  var by = v1[1] - v2[1];
  var bz = v1[2] - v2[2];
  n[0] = ay * bz - az * by;
  n[1] = az * bx - ax * bz;
  n[2] = ax * by - ay * bx;
}

function computeNormal(v1, v2, v3, n) {
  computeNormalDirection(v1, v2, v3, n);
  var length = Math.sqrt(n[0] * n[0] + n[1] * n[1] + n[2] * n[2]);

  if (length !== 0.0) {
    n[0] /= length;
    n[1] /= length;
    n[2] /= length;
  }
} // ----------------------------------------------------------------------------
// Static API
// ----------------------------------------------------------------------------


var STATIC = {
  computeNormalDirection: computeNormalDirection,
  computeNormal: computeNormal
}; // ----------------------------------------------------------------------------
// vtkTriangle methods
// ----------------------------------------------------------------------------

function vtkTriangle(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkTriangle');

  publicAPI.getCellDimension = function () {
    return 2;
  };

  publicAPI.intersectWithLine = function (p1, p2, tol, x, pcoords) {
    var outObj = {
      subId: 0,
      t: Number.MAX_VALUE,
      intersect: 0,
      betweenPoints: false
    };
    pcoords[2] = 0.0;
    var closestPoint = [];
    var tol2 = tol * tol; // Get normal for triangle

    var pt1 = [];
    var pt2 = [];
    var pt3 = [];
    model.points.getPoint(0, pt1);
    model.points.getPoint(1, pt2);
    model.points.getPoint(2, pt3);
    var n = [];
    var weights = [];
    computeNormal(pt1, pt2, pt3, n);

    if (n[0] !== 0 || n[1] !== 0 || n[2] !== 0) {
      // Intersect plane of triangle with line
      var plane = _Plane_js__WEBPACK_IMPORTED_MODULE_5__["default"].intersectWithLine(p1, p2, pt1, n);
      outObj.betweenPoints = plane.betweenPoints;
      outObj.t = plane.t;
      x[0] = plane.x[0];
      x[1] = plane.x[1];
      x[2] = plane.x[2];

      if (!plane.intersection) {
        pcoords[0] = 0.0;
        pcoords[1] = 0.0;
        outObj.intersect = 0;
        return outObj;
      } // Evaluate position


      var inside = publicAPI.evaluatePosition(x, closestPoint, pcoords, weights);

      if (inside.evaluation >= 0) {
        if (inside.dist2 <= tol2) {
          outObj.intersect = 1;
          return outObj;
        }

        outObj.intersect = inside.evaluation;
        return outObj;
      }
    } // Normals are null, so the triangle is degenerated and
    // we still need to check intersection between line and
    // the longest edge.


    var dist2Pt1Pt2 = Object(_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__["f"])(pt1, pt2);
    var dist2Pt2Pt3 = Object(_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__["f"])(pt2, pt3);
    var dist2Pt3Pt1 = Object(_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__["f"])(pt3, pt1);

    if (!model.line) {
      model.line = _Line_js__WEBPACK_IMPORTED_MODULE_4__["default"].newInstance();
    }

    if (dist2Pt1Pt2 > dist2Pt2Pt3 && dist2Pt1Pt2 > dist2Pt3Pt1) {
      model.line.getPoints().setPoint(0, pt1);
      model.line.getPoints().setPoint(1, pt2);
    } else if (dist2Pt2Pt3 > dist2Pt3Pt1 && dist2Pt2Pt3 > dist2Pt1Pt2) {
      model.line.getPoints().setPoint(0, pt2);
      model.line.getPoints().setPoint(1, pt3);
    } else {
      model.line.getPoints().setPoint(0, pt3);
      model.line.getPoints().setPoint(1, pt1);
    }

    var intersectLine = model.line.intersectWithLine(p1, p2, tol, x, pcoords);
    outObj.betweenPoints = intersectLine.betweenPoints;
    outObj.t = intersectLine.t;

    if (intersectLine.intersect) {
      var pt3Pt1 = [];
      var pt3Pt2 = [];
      var pt3X = []; // Compute r and s manually, using dot and norm.

      for (var i = 0; i < 3; i++) {
        pt3Pt1[i] = pt1[i] - pt3[i];
        pt3Pt2[i] = pt2[i] - pt3[i];
        pt3X[i] = x[i] - pt3[i];
      }

      pcoords[0] = Object(_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__["d"])(pt3X, pt3Pt1) / dist2Pt3Pt1;
      pcoords[1] = Object(_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__["d"])(pt3X, pt3Pt2) / dist2Pt2Pt3;
      outObj.intersect = 1;
      return outObj;
    }

    pcoords[0] = 0.0;
    pcoords[1] = 0.0;
    outObj.intersect = 0;
    return outObj;
  };

  publicAPI.evaluatePosition = function (x, closestPoint, pcoords, weights) {
    // will return obj
    var outObj = {
      subId: 0,
      dist2: 0,
      evaluation: -1
    };
    var i;
    var j;
    var pt1 = [];
    var pt2 = [];
    var pt3 = [];
    var n = [];
    var fabsn;
    var rhs = [];
    var c1 = [];
    var c2 = [];
    var det = 0;
    var idx = 0;
    var indices = [];
    var dist2Point;
    var dist2Line1;
    var dist2Line2;
    var closest = [];
    var closestPoint1 = [];
    var closestPoint2 = [];
    var cp = [];
    outObj.subId = 0;
    pcoords[2] = 0.0; // Get normal for triangle, only the normal direction is needed, i.e. the
    // normal need not be normalized (unit length)
    //

    model.points.getPoint(1, pt1);
    model.points.getPoint(2, pt2);
    model.points.getPoint(0, pt3);
    computeNormalDirection(pt1, pt2, pt3, n); // Project point to plane

    _Plane_js__WEBPACK_IMPORTED_MODULE_5__["default"].generalizedProjectPoint(x, pt1, n, cp); // Construct matrices.  Since we have over determined system, need to find
    // which 2 out of 3 equations to use to develop equations. (Any 2 should
    // work since we've projected point to plane.)

    var maxComponent = 0.0;

    for (i = 0; i < 3; i++) {
      // trying to avoid an expensive call to fabs()
      if (n[i] < 0) {
        fabsn = -n[i];
      } else {
        fabsn = n[i];
      }

      if (fabsn > maxComponent) {
        maxComponent = fabsn;
        idx = i;
      }
    }

    for (j = 0, i = 0; i < 3; i++) {
      if (i !== idx) {
        indices[j++] = i;
      }
    }

    for (i = 0; i < 2; i++) {
      rhs[i] = cp[indices[i]] - pt3[indices[i]];
      c1[i] = pt1[indices[i]] - pt3[indices[i]];
      c2[i] = pt2[indices[i]] - pt3[indices[i]];
    }

    det = Object(_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__["m"])(c1, c2);

    if (det === 0.0) {
      pcoords[0] = 0.0;
      pcoords[1] = 0.0;
      outObj.evaluation = -1;
      return outObj;
    }

    pcoords[0] = Object(_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__["m"])(rhs, c2) / det;
    pcoords[1] = Object(_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__["m"])(c1, rhs) / det; // Okay, now find closest point to element

    weights[0] = 1 - (pcoords[0] + pcoords[1]);
    weights[1] = pcoords[0];
    weights[2] = pcoords[1];

    if (weights[0] >= 0.0 && weights[0] <= 1.0 && weights[1] >= 0.0 && weights[1] <= 1.0 && weights[2] >= 0.0 && weights[2] <= 1.0) {
      // projection distance
      if (closestPoint) {
        outObj.dist2 = Object(_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__["f"])(cp, x);
        closestPoint[0] = cp[0];
        closestPoint[1] = cp[1];
        closestPoint[2] = cp[2];
      }

      outObj.evaluation = 1;
    } else {
      var t;

      if (closestPoint) {
        if (weights[1] < 0.0 && weights[2] < 0.0) {
          dist2Point = Object(_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__["f"])(x, pt3);
          dist2Line1 = _Line_js__WEBPACK_IMPORTED_MODULE_4__["default"].distanceToLine(x, pt1, pt3, t, closestPoint1);
          dist2Line2 = _Line_js__WEBPACK_IMPORTED_MODULE_4__["default"].distanceToLine(x, pt3, pt2, t, closestPoint2);

          if (dist2Point < dist2Line1) {
            outObj.dist2 = dist2Point;
            closest = pt3;
          } else {
            outObj.dist2 = dist2Line1;
            closest = closestPoint1;
          }

          if (dist2Line2 < outObj.dist2) {
            outObj.dist2 = dist2Line2;
            closest = closestPoint2;
          }

          for (i = 0; i < 3; i++) {
            closestPoint[i] = closest[i];
          }
        } else if (weights[2] < 0.0 && weights[0] < 0.0) {
          dist2Point = Object(_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__["f"])(x, pt1);
          dist2Line1 = _Line_js__WEBPACK_IMPORTED_MODULE_4__["default"].distanceToLine(x, pt1, pt3, t, closestPoint1);
          dist2Line2 = _Line_js__WEBPACK_IMPORTED_MODULE_4__["default"].distanceToLine(x, pt1, pt2, t, closestPoint2);

          if (dist2Point < dist2Line1) {
            outObj.dist2 = dist2Point;
            closest = pt1;
          } else {
            outObj.dist2 = dist2Line1;
            closest = closestPoint1;
          }

          if (dist2Line2 < outObj.dist2) {
            outObj.dist2 = dist2Line2;
            closest = closestPoint2;
          }

          for (i = 0; i < 3; i++) {
            closestPoint[i] = closest[i];
          }
        } else if (weights[1] < 0.0 && weights[0] < 0.0) {
          dist2Point = Object(_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__["f"])(x, pt2);
          dist2Line1 = _Line_js__WEBPACK_IMPORTED_MODULE_4__["default"].distanceToLine(x, pt2, pt3, t, closestPoint1);
          dist2Line2 = _Line_js__WEBPACK_IMPORTED_MODULE_4__["default"].distanceToLine(x, pt1, pt2, t, closestPoint2);

          if (dist2Point < dist2Line1) {
            outObj.dist2 = dist2Point;
            closest = pt2;
          } else {
            outObj.dist2 = dist2Line1;
            closest = closestPoint1;
          }

          if (dist2Line2 < outObj.dist2) {
            outObj.dist2 = dist2Line2;
            closest = closestPoint2;
          }

          for (i = 0; i < 3; i++) {
            closestPoint[i] = closest[i];
          }
        } else if (weights[0] < 0.0) {
          var lineDistance = _Line_js__WEBPACK_IMPORTED_MODULE_4__["default"].distanceToLine(x, pt1, pt2, closestPoint);
          outObj.dist2 = lineDistance.distance;
        } else if (weights[1] < 0.0) {
          var _lineDistance = _Line_js__WEBPACK_IMPORTED_MODULE_4__["default"].distanceToLine(x, pt2, pt3, closestPoint);

          outObj.dist2 = _lineDistance.distance;
        } else if (weights[2] < 0.0) {
          var _lineDistance2 = _Line_js__WEBPACK_IMPORTED_MODULE_4__["default"].distanceToLine(x, pt1, pt3, closestPoint);

          outObj.dist2 = _lineDistance2.distance;
        }
      }

      outObj.evaluation = 0;
    }

    return outObj;
  };

  publicAPI.evaluateLocation = function (pcoords, x, weights) {
    var p0 = [];
    var p1 = [];
    var p2 = [];
    model.points.getPoint(0, p0);
    model.points.getPoint(1, p1);
    model.points.getPoint(2, p2);
    var u3 = 1.0 - pcoords[0] - pcoords[1];

    for (var i = 0; i < 3; i++) {
      x[i] = p0[i] * u3 + p1[i] * pcoords[0] + p2[i] * pcoords[1];
    }

    weights[0] = u3;
    weights[1] = pcoords[0];
    weights[2] = pcoords[1];
  };

  publicAPI.getParametricDistance = function (pcoords) {
    var pDist;
    var pDistMax = 0.0;
    var pc = [];
    pc[0] = pcoords[0];
    pc[1] = pcoords[1];
    pc[2] = 1.0 - pcoords[0] - pcoords[1];

    for (var i = 0; i < 3; i++) {
      if (pc[i] < 0.0) {
        pDist = -pc[i];
      } else if (pc[i] > 1.0) {
        pDist = pc[i] - 1.0;
      } else {
        // inside the cell in the parametric direction
        pDist = 0.0;
      }

      if (pDist > pDistMax) {
        pDistMax = pDist;
      }
    }

    return pDistMax;
  };
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues);
  _Cell_js__WEBPACK_IMPORTED_MODULE_2__["default"].extend(publicAPI, model, initialValues);
  vtkTriangle(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].newInstance(extend, 'vtkTriangle'); // ----------------------------------------------------------------------------

var vtkTriangle$1 = _objectSpread({
  newInstance: newInstance,
  extend: extend
}, STATIC);




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Filters/Core/Cutter.js":
/*!**************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Filters/Core/Cutter.js ***!
  \**************************************************************/
/*! exports provided: default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkCutter$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "../node_modules/@babel/runtime/helpers/defineProperty.js");
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _Common_DataModel_PolyData_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../Common/DataModel/PolyData.js */ "../node_modules/@kitware/vtk.js/Common/DataModel/PolyData.js");




function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var vtkErrorMacro = _macros_js__WEBPACK_IMPORTED_MODULE_1__["vtkErrorMacro"];

function initPolyIterator(pd) {
  var polys = pd.getPolys().getData();
  var strips = pd.getStrips().getData();
  var it = {
    done: false,
    polyIdx: 0,
    stripIdx: 0,
    remainingStripLength: 0,
    // returns a single poly cell
    next: function next() {
      var ret = null;

      if (it.polyIdx < polys.length) {
        var cellSize = polys[it.polyIdx];
        var start = it.polyIdx + 1;
        var end = start + cellSize;
        it.polyIdx = end;
        ret = polys.subarray(start, end);
      } else if (it.stripIdx < strips.length) {
        if (it.remainingStripLength === 0) {
          it.remainingStripLength = strips[it.stripIdx] - 2; // sliding window of 3 points
          // stripIdx points to the last point in a triangle 3-tuple

          it.stripIdx += 3;
        }

        var _start = it.stripIdx - 2;

        var _end = it.stripIdx + 1;

        it.stripIdx++;
        it.remainingStripLength--;
        ret = strips.subarray(_start, _end);
      } else if (it.done) {
        throw new Error('Iterator is done');
      }

      it.done = it.polyIdx >= polys.length && it.stripIdx >= strips.length;
      return ret;
    }
  };
  return it;
} // ----------------------------------------------------------------------------
// vtkCutter methods
// ----------------------------------------------------------------------------


function vtkCutter(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkCutter'); // Capture "parentClass" api for internal use

  var superClass = _objectSpread({}, publicAPI);

  publicAPI.getMTime = function () {
    var mTime = superClass.getMTime();

    if (!model.cutFunction) {
      return mTime;
    }

    mTime = Math.max(mTime, model.cutFunction.getMTime());
    return mTime;
  };

  function dataSetCutter(input, output) {
    var points = input.getPoints();
    var pointsData = points.getData();
    var numPts = points.getNumberOfPoints();
    var newPointsData = [];
    var newLinesData = [];
    var newPolysData = [];

    if (!model.cutScalars || model.cutScalars.length < numPts) {
      model.cutScalars = new Float32Array(numPts);
    } // Loop over all points evaluating scalar function at each point


    var inOffset = 0;
    var outOffset = 0;

    while (inOffset < pointsData.length) {
      model.cutScalars[outOffset++] = model.cutFunction.evaluateFunction(pointsData[inOffset++], pointsData[inOffset++], pointsData[inOffset++]);
    }

    var crossedEdges = [];
    var x1 = new Array(3);
    var x2 = new Array(3); // Loop over all cells; get scalar values for all cell points
    // and process each cell.

    /* eslint-disable no-continue */

    var it = initPolyIterator(input);

    while (!it.done) {
      // cell contains the point IDs/indices
      var cell = it.next(); // Check that cells have at least 3 points

      if (cell.length <= 2) {
        continue;
      } // Get associated scalar of points that constitute the current cell


      var cellPointsScalars = [];
      var pointIndex = void 0;

      for (var i = 0; i < cell.length; i++) {
        pointIndex = cell[i];
        cellPointsScalars.push(model.cutScalars[pointIndex]);
      } // Check if all cell points are on same side (same side == cell not crossed by cut function)
      // TODO: won't work if one point scalar is = 0 ?


      var sideFirstPoint = cellPointsScalars[0] > 0;
      var allPointsSameSide = true;

      for (var _i = 1; _i < cellPointsScalars.length; _i++) {
        var sideCurrentPoint = cellPointsScalars[_i] > 0;

        if (sideCurrentPoint !== sideFirstPoint) {
          allPointsSameSide = false;
          break;
        }
      } // Go to next cell if cell is not crossed by cut function


      if (allPointsSameSide) {
        continue;
      } // Find and compute edges which intersect cells


      var intersectedEdgesList = [];

      for (var _i2 = 0; _i2 < cell.length; _i2++) {
        var idNext = _i2 + 1 === cell.length ? 0 : _i2 + 1; // Go to next edge if edge is not crossed
        // TODO: in most come cases, (numberOfPointsInCell - 1) or 0 edges of the cell
        // will be crossed, but if it crosses right at a point, it could be intersecting
        // with (numberOfPoints) or 1 edge(s). Do we account for that?

        var signPoint0 = cellPointsScalars[_i2] > 0;
        var signPoint1 = cellPointsScalars[idNext] > 0;

        if (signPoint1 === signPoint0) {
          continue;
        } // Compute preferred interpolation direction


        var e1 = _i2;
        var e2 = idNext;
        var deltaScalar = cellPointsScalars[e2] - cellPointsScalars[e1];

        if (deltaScalar <= 0) {
          e1 = idNext;
          e2 = _i2;
          deltaScalar *= -1;
        } // linear interpolation


        var t = 0.0;

        if (deltaScalar !== 0.0) {
          t = (model.cutValue - cellPointsScalars[e1]) / deltaScalar;
        } // points position


        var pointID1 = cell[e1];
        var pointID2 = cell[e2];
        x1[0] = pointsData[pointID1 * 3];
        x1[1] = pointsData[pointID1 * 3 + 1];
        x1[2] = pointsData[pointID1 * 3 + 2];
        x2[0] = pointsData[pointID2 * 3];
        x2[1] = pointsData[pointID2 * 3 + 1];
        x2[2] = pointsData[pointID2 * 3 + 2]; // Compute the intersected point on edge

        var computedIntersectedPoint = [x1[0] + t * (x2[0] - x1[0]), x1[1] + t * (x2[1] - x1[1]), x1[2] + t * (x2[2] - x1[2])]; // Keep track of it

        intersectedEdgesList.push({
          pointEdge1: pointID1,
          // id of one point of the edge
          pointEdge2: pointID2,
          // id of one point of the edge
          intersectedPoint: computedIntersectedPoint,
          // 3D coordinate of points that intersected edge
          newPointID: -1 // id of the intersected point when it will be added into vtkPoints

        });
      } // Add points into newPointList


      for (var _i3 = 0; _i3 < intersectedEdgesList.length; _i3++) {
        var intersectedEdge = intersectedEdgesList[_i3];
        var alreadyAdded = false; // Check if point/edge already added

        for (var j = 0; j < crossedEdges.length; j++) {
          var crossedEdge = crossedEdges[j];
          var sameEdge = intersectedEdge.pointEdge1 === crossedEdge.pointEdge1 && intersectedEdge.pointEdge2 === crossedEdge.pointEdge2;
          var samePoint = intersectedEdge.intersectedPoint[0] === crossedEdge.intersectedPoint[0] && intersectedEdge.intersectedPoint[1] === crossedEdge.intersectedPoint[1] && intersectedEdge.intersectedPoint[2] === crossedEdge.intersectedPoint[2];

          if (sameEdge || samePoint) {
            alreadyAdded = true;
            intersectedEdgesList[_i3].newPointID = crossedEdges[j].newPointID;
            break;
          }
        }

        if (!alreadyAdded) {
          newPointsData.push(intersectedEdge.intersectedPoint[0]);
          newPointsData.push(intersectedEdge.intersectedPoint[1]);
          newPointsData.push(intersectedEdge.intersectedPoint[2]);
          intersectedEdgesList[_i3].newPointID = newPointsData.length / 3 - 1;
          crossedEdges.push(intersectedEdgesList[_i3]);
        }
      } // Store cells


      var cellSize = intersectedEdgesList.length;

      if (cellSize === 2) {
        newLinesData.push(cellSize, intersectedEdgesList[0].newPointID, intersectedEdgesList[1].newPointID);
      } else if (cellSize > 2) {
        newPolysData.push(cellSize);
        intersectedEdgesList.forEach(function (edge) {
          newPolysData.push(edge.newPointID);
        });
      }
    } // Set points


    var outputPoints = output.getPoints();
    outputPoints.setData(Object(_macros_js__WEBPACK_IMPORTED_MODULE_1__["newTypedArrayFrom"])(points.getDataType(), newPointsData), 3); // Set lines

    if (newLinesData.length !== 0) {
      output.getLines().setData(Uint16Array.from(newLinesData));
    } // Set polys


    if (newPolysData.length !== 0) {
      output.getPolys().setData(Uint16Array.from(newPolysData));
    }
  } // expose requestData


  publicAPI.requestData = function (inData, outData) {
    // implement requestData
    var input = inData[0];

    if (!input) {
      vtkErrorMacro('Invalid or missing input');
      return;
    }

    if (!model.cutFunction) {
      vtkErrorMacro('Missing cut function');
      return;
    }

    var output = _Common_DataModel_PolyData_js__WEBPACK_IMPORTED_MODULE_2__["default"].newInstance();
    dataSetCutter(input, output);
    outData[0] = output;
  };
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {
  cutFunction: null,
  // support method with evaluateFunction method
  cutScalars: null,
  cutValue: 0.0
}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Make this a VTK object

  Object(_macros_js__WEBPACK_IMPORTED_MODULE_1__["obj"])(publicAPI, model); // Also make it an algorithm with one input and one output

  Object(_macros_js__WEBPACK_IMPORTED_MODULE_1__["algo"])(publicAPI, model, 1, 1); // Set implicit function use to cut the input data (is vtkPlane)

  Object(_macros_js__WEBPACK_IMPORTED_MODULE_1__["setGet"])(publicAPI, model, ['cutFunction', 'cutValue']); // Object specific methods

  vtkCutter(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = Object(_macros_js__WEBPACK_IMPORTED_MODULE_1__["newInstance"])(extend, 'vtkCutter'); // ----------------------------------------------------------------------------

var vtkCutter$1 = {
  newInstance: newInstance,
  extend: extend
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Filters/General/AppendPolyData.js":
/*!*************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Filters/General/AppendPolyData.js ***!
  \*************************************************************************/
/*! exports provided: default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkAppendPolyData$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _Common_Core_DataArray_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../Common/Core/DataArray.js */ "../node_modules/@kitware/vtk.js/Common/Core/DataArray.js");
/* harmony import */ var _Common_Core_Points_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../Common/Core/Points.js */ "../node_modules/@kitware/vtk.js/Common/Core/Points.js");
/* harmony import */ var _Common_DataModel_PolyData_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../Common/DataModel/PolyData.js */ "../node_modules/@kitware/vtk.js/Common/DataModel/PolyData.js");
/* harmony import */ var _Common_DataModel_DataSetAttributes_Constants_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../Common/DataModel/DataSetAttributes/Constants.js */ "../node_modules/@kitware/vtk.js/Common/DataModel/DataSetAttributes/Constants.js");
/* harmony import */ var _Common_Core_DataArray_Constants_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../Common/Core/DataArray/Constants.js */ "../node_modules/@kitware/vtk.js/Common/Core/DataArray/Constants.js");







var vtkErrorMacro = _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].vtkErrorMacro;

function offsetCellArray(typedArray, offset) {
  var currentIdx = 0;
  return typedArray.map(function (value, index) {
    if (index === currentIdx) {
      currentIdx += value + 1;
      return value;
    }

    return value + offset;
  });
}

function appendCellData(dest, src, ptOffset, cellOffset) {
  dest.set(offsetCellArray(src, ptOffset), cellOffset);
} // ----------------------------------------------------------------------------
// vtkAppendPolyData methods
// ----------------------------------------------------------------------------


function vtkAppendPolyData(publicAPI, model) {
  // Set our classname
  model.classHierarchy.push('vtkAppendPolyData');

  publicAPI.requestData = function (inData, outData) {
    // implement requestData
    var numberOfInputs = publicAPI.getNumberOfInputPorts();

    if (!numberOfInputs) {
      vtkErrorMacro('No input specified.');
      return;
    }

    if (numberOfInputs === 1) {
      // pass through filter
      outData[0] = inData[0];
      return;
    } // Allocate output


    var output = _Common_DataModel_PolyData_js__WEBPACK_IMPORTED_MODULE_3__["default"].newInstance();
    var numPts = 0;
    var pointType = 0;
    var ttype = 1;
    var firstType = 1;
    var numVerts = 0;
    var numLines = 0;
    var numStrips = 0;
    var numPolys = 0; // Field data is propagated to output only if present in all inputs

    var hasPtNormals = true; // assume present by default

    var hasPtTCoords = true;
    var hasPtScalars = true;

    for (var i = 0; i < numberOfInputs; i++) {
      var ds = inData[i];

      if (!ds) {
        // eslint-disable-next-line
        continue;
      }

      var dsNumPts = ds.getPoints().getNumberOfPoints();
      numPts += dsNumPts;
      numVerts += ds.getVerts().getNumberOfValues();
      numLines += ds.getLines().getNumberOfValues();
      numStrips += ds.getStrips().getNumberOfValues();
      numPolys += ds.getPolys().getNumberOfValues();

      if (dsNumPts) {
        if (firstType) {
          firstType = 0;
          pointType = ds.getPoints().getDataType();
        }

        ttype = ds.getPoints().getDataType();
        pointType = pointType > ttype ? pointType : ttype;
      }

      var ptD = ds.getPointData();

      if (ptD) {
        hasPtNormals = hasPtNormals && ptD.getNormals() !== null;
        hasPtTCoords = hasPtTCoords && ptD.getTCoords() !== null;
        hasPtScalars = hasPtScalars && ptD.getScalars() !== null;
      } else {
        hasPtNormals = false;
        hasPtTCoords = false;
        hasPtScalars = false;
      }
    }

    if (model.outputPointsPrecision === _Common_DataModel_DataSetAttributes_Constants_js__WEBPACK_IMPORTED_MODULE_4__["DesiredOutputPrecision"].SINGLE) {
      pointType = _Common_Core_DataArray_Constants_js__WEBPACK_IMPORTED_MODULE_5__["VtkDataTypes"].FLOAT;
    } else if (model.outputPointsPrecision === _Common_DataModel_DataSetAttributes_Constants_js__WEBPACK_IMPORTED_MODULE_4__["DesiredOutputPrecision"].DOUBLE) {
      pointType = _Common_Core_DataArray_Constants_js__WEBPACK_IMPORTED_MODULE_5__["VtkDataTypes"].DOUBLE;
    }

    var points = _Common_Core_Points_js__WEBPACK_IMPORTED_MODULE_2__["default"].newInstance({
      dataType: pointType
    });
    points.setNumberOfPoints(numPts);
    var pointData = points.getData();
    var vertData = new Uint32Array(numVerts);
    var lineData = new Uint32Array(numLines);
    var stripData = new Uint32Array(numStrips);
    var polyData = new Uint32Array(numPolys);
    var newPtNormals = null;
    var newPtTCoords = null;
    var newPtScalars = null;
    var lds = inData[numberOfInputs - 1];

    if (hasPtNormals) {
      var dsNormals = lds.getPointData().getNormals();
      newPtNormals = _Common_Core_DataArray_js__WEBPACK_IMPORTED_MODULE_1__["default"].newInstance({
        numberOfComponents: 3,
        numberOfTuples: numPts,
        size: 3 * numPts,
        dataType: dsNormals.getDataType(),
        name: dsNormals.getName()
      });
    }

    if (hasPtTCoords) {
      var dsTCoords = lds.getPointData().getTCoords();
      newPtTCoords = _Common_Core_DataArray_js__WEBPACK_IMPORTED_MODULE_1__["default"].newInstance({
        numberOfComponents: 2,
        numberOfTuples: numPts,
        size: 2 * numPts,
        dataType: dsTCoords.getDataType(),
        name: dsTCoords.getName()
      });
    }

    if (hasPtScalars) {
      var dsScalars = lds.getPointData().getScalars();
      newPtScalars = _Common_Core_DataArray_js__WEBPACK_IMPORTED_MODULE_1__["default"].newInstance({
        numberOfComponents: dsScalars.getNumberOfComponents(),
        numberOfTuples: numPts,
        size: numPts * dsScalars.getNumberOfComponents(),
        dataType: dsScalars.getDataType(),
        name: dsScalars.getName()
      });
    }

    numPts = 0;
    numVerts = 0;
    numLines = 0;
    numStrips = 0;
    numPolys = 0;

    for (var _i = 0; _i < numberOfInputs; _i++) {
      var _ds = inData[_i];
      pointData.set(_ds.getPoints().getData(), numPts * 3);
      appendCellData(vertData, _ds.getVerts().getData(), numPts, numVerts);
      numVerts += _ds.getVerts().getNumberOfValues();
      appendCellData(lineData, _ds.getLines().getData(), numPts, numLines);
      numLines += _ds.getLines().getNumberOfValues();
      appendCellData(stripData, _ds.getStrips().getData(), numPts, numStrips);
      numStrips += _ds.getStrips().getNumberOfValues();
      appendCellData(polyData, _ds.getPolys().getData(), numPts, numPolys);
      numPolys += _ds.getPolys().getNumberOfValues();

      var dsPD = _ds.getPointData();

      if (hasPtNormals) {
        var ptNorms = dsPD.getNormals();
        newPtNormals.getData().set(ptNorms.getData(), numPts * 3);
      }

      if (hasPtTCoords) {
        var ptTCoords = dsPD.getTCoords();
        newPtTCoords.getData().set(ptTCoords.getData(), numPts * 2);
      }

      if (hasPtScalars) {
        var ptScalars = dsPD.getScalars();
        newPtScalars.getData().set(ptScalars.getData(), numPts * newPtScalars.getNumberOfComponents());
      }

      numPts += _ds.getPoints().getNumberOfPoints();
    }

    output.setPoints(points);
    output.getVerts().setData(vertData);
    output.getLines().setData(lineData);
    output.getStrips().setData(stripData);
    output.getPolys().setData(polyData);

    if (newPtNormals) {
      output.getPointData().setNormals(newPtNormals);
    }

    if (newPtTCoords) {
      output.getPointData().setTCoords(newPtTCoords);
    }

    if (newPtScalars) {
      output.getPointData().setScalars(newPtScalars);
    }

    outData[0] = output;
  };
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {
  outputPointsPrecision: _Common_DataModel_DataSetAttributes_Constants_js__WEBPACK_IMPORTED_MODULE_4__["DesiredOutputPrecision"].DEFAULT
}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API

  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].setGet(publicAPI, model, ['outputPointsPrecision']); // Make this a VTK object

  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].obj(publicAPI, model); // Also make it an algorithm with one input and one output

  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].algo(publicAPI, model, 1, 1); // Object specific methods

  vtkAppendPolyData(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].newInstance(extend, 'vtkAppendPolyData'); // ----------------------------------------------------------------------------

var vtkAppendPolyData$1 = {
  newInstance: newInstance,
  extend: extend
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Filters/General/Calculator.js":
/*!*********************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Filters/General/Calculator.js ***!
  \*********************************************************************/
/*! exports provided: default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkCalculator$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "../node_modules/@babel/runtime/helpers/defineProperty.js");
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "../node_modules/@babel/runtime/helpers/toConsumableArray.js");
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _vtk_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../vtk.js */ "../node_modules/@kitware/vtk.js/vtk.js");
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _Common_Core_DataArray_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../Common/Core/DataArray.js */ "../node_modules/@kitware/vtk.js/Common/Core/DataArray.js");
/* harmony import */ var _Common_Core_Points_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../Common/Core/Points.js */ "../node_modules/@kitware/vtk.js/Common/Core/Points.js");
/* harmony import */ var _Common_DataModel_DataSet_Constants_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../Common/DataModel/DataSet/Constants.js */ "../node_modules/@kitware/vtk.js/Common/DataModel/DataSet/Constants.js");
/* harmony import */ var _Common_DataModel_DataSetAttributes_Constants_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../Common/DataModel/DataSetAttributes/Constants.js */ "../node_modules/@kitware/vtk.js/Common/DataModel/DataSetAttributes/Constants.js");









function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var vtkWarningMacro = _macros_js__WEBPACK_IMPORTED_MODULE_3__["default"].vtkWarningMacro; // ----------------------------------------------------------------------------
// vtkCalculator methods
// ----------------------------------------------------------------------------

function vtkCalculator(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkCalculator');

  publicAPI.setFormula = function (formula) {
    if (formula === model.formula) {
      return false;
    }

    model.formula = formula;
    publicAPI.modified();
    return true;
  };

  publicAPI.getFormula = function () {
    return model.formula;
  };

  publicAPI.augmentInputArrays = function (locn, arraysIn) {
    var arraysOut = arraysIn.slice(0); // shallow-copy the inputs
    // Make point coordinates available whenever the field-data is associated with
    // points or graph vertices:

    if (locn === _Common_DataModel_DataSet_Constants_js__WEBPACK_IMPORTED_MODULE_6__["FieldDataTypes"].POINT || locn === _Common_DataModel_DataSet_Constants_js__WEBPACK_IMPORTED_MODULE_6__["FieldDataTypes"].VERTEX) {
      arraysOut.push({
        location: _Common_DataModel_DataSet_Constants_js__WEBPACK_IMPORTED_MODULE_6__["FieldDataTypes"].COORDINATE
      });
    } // TODO: Make cell connectivity available when field-data is associated with
    // cells or graph edges.


    return arraysOut;
  };

  publicAPI.createSimpleFormulaObject = function (locn, arrNames, resultName, singleValueFormula) {
    var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};
    return {
      getArrays: function getArrays() {
        return {
          input: publicAPI.augmentInputArrays(locn, arrNames.map(function (x) {
            return {
              location: locn,
              name: x
            };
          })),
          output: [{
            location: locn,
            name: resultName,
            attribute: 'outputAttributeType' in options ? options.outputAttributeType : _Common_DataModel_DataSetAttributes_Constants_js__WEBPACK_IMPORTED_MODULE_7__["AttributeTypes"].SCALARS,
            numberOfComponents: 'numberOfOutputComponents' in options ? options.numberOfOutputComponents : 1
          }]
        };
      },
      evaluate: function evaluate(arraysIn, arraysOut) {
        var tuples = new Array(arraysIn.length);
        var arrayInAccessors = arraysIn.map(function (x, jj) {
          var nc = x.getNumberOfComponents();
          var rawData = x.getData();
          return nc === 1 ? function (ii) {
            return rawData[ii];
          } : function (ii) {
            return x.getTuple(ii, tuples[jj]);
          };
        });
        var arrayOut = arraysOut[0];
        var arrayOutRaw = arrayOut.getData();
        var nc = arrayOut.getNumberOfComponents();
        var tupleOut = new Array(nc);

        if (nc === 1) {
          arrayOutRaw.forEach(function (xxx, ii) {
            arrayOutRaw[ii] = singleValueFormula.apply(void 0, _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_1___default()(arrayInAccessors.map(function (x) {
              return x(ii);
            })).concat([ii, tupleOut]));
          });
        } else {
          var nt = arrayOut.getNumberOfTuples();

          var _loop = function _loop(ii) {
            tupleOut = singleValueFormula.apply(void 0, _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_1___default()(arrayInAccessors.map(function (x) {
              return x(ii);
            })).concat([ii, tupleOut]));
            arrayOut.setTuple(ii, tupleOut);
          };

          for (var ii = 0; ii < nt; ++ii) {
            _loop(ii);
          }
        }
      }
    };
  };

  publicAPI.setFormulaSimple = function (locn, arrNames, resultName, formula) {
    var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};
    return publicAPI.setFormula(publicAPI.createSimpleFormulaObject(locn, arrNames, resultName, formula, options));
  };

  publicAPI.prepareArrays = function (arraySpec, inData, outData) {
    var arraysIn = [];
    var arraysOut = [];
    arraySpec.input.forEach(function (spec) {
      if (spec.location === _Common_DataModel_DataSet_Constants_js__WEBPACK_IMPORTED_MODULE_6__["FieldDataTypes"].COORDINATE) {
        arraysIn.push(inData.getPoints());
      } else {
        var fetchArrayContainer = [[_Common_DataModel_DataSet_Constants_js__WEBPACK_IMPORTED_MODULE_6__["FieldDataTypes"].UNIFORM, function (x) {
          return x.getFieldData();
        }], [_Common_DataModel_DataSet_Constants_js__WEBPACK_IMPORTED_MODULE_6__["FieldDataTypes"].POINT, function (x) {
          return x.getPointData();
        }], [_Common_DataModel_DataSet_Constants_js__WEBPACK_IMPORTED_MODULE_6__["FieldDataTypes"].CELL, function (x) {
          return x.getCellData();
        }], [_Common_DataModel_DataSet_Constants_js__WEBPACK_IMPORTED_MODULE_6__["FieldDataTypes"].VERTEX, function (x) {
          return x.getVertexData();
        }], [_Common_DataModel_DataSet_Constants_js__WEBPACK_IMPORTED_MODULE_6__["FieldDataTypes"].EDGE, function (x) {
          return x.getEdgeData();
        }], [_Common_DataModel_DataSet_Constants_js__WEBPACK_IMPORTED_MODULE_6__["FieldDataTypes"].ROW, function (x) {
          return x.getRowData();
        }]].reduce(function (result, value) {
          result[value[0]] = value[1];
          return result;
        }, {});
        var dsa = 'location' in spec && spec.location in fetchArrayContainer ? fetchArrayContainer[spec.location](inData) : null;

        if (dsa) {
          if (spec.name) {
            arraysIn.push(dsa.getArrayByName(spec.name));
          } else if ('index' in spec) {
            arraysIn.push(dsa.getArrayByIndex(spec.index));
          } else if ('attribute' in spec && spec.location !== _Common_DataModel_DataSet_Constants_js__WEBPACK_IMPORTED_MODULE_6__["FieldDataTypes"].UNIFORM) {
            arraysIn.push(dsa.getActiveAttribute(spec.attribute));
          } else {
            vtkWarningMacro("No matching array for specifier \"".concat(JSON.stringify(spec), "\"."));
            arraysIn.push(null);
          }
        } else {
          vtkWarningMacro("Specifier \"".concat(JSON.stringify(spec), "\" did not provide a usable location."));
          arraysIn.push(null);
        }
      }
    });
    arraySpec.output.forEach(function (spec) {
      var fullSpec = _objectSpread({}, spec);

      var ncomp = 'numberOfComponents' in fullSpec ? fullSpec.numberOfComponents : 1;

      if (spec.location === _Common_DataModel_DataSet_Constants_js__WEBPACK_IMPORTED_MODULE_6__["FieldDataTypes"].UNIFORM && 'tuples' in fullSpec) {
        fullSpec.size = ncomp * fullSpec.tuples;
      }

      if (spec.location === _Common_DataModel_DataSet_Constants_js__WEBPACK_IMPORTED_MODULE_6__["FieldDataTypes"].COORDINATE) {
        var inPts = inData.getPoints();
        var pts = _Common_Core_Points_js__WEBPACK_IMPORTED_MODULE_5__["default"].newInstance({
          dataType: inPts.getDataType()
        });
        pts.setNumberOfPoints(inPts.getNumberOfPoints(), inPts.getNumberOfComponents());
        outData.setPoints(pts);
        arraysOut.push(pts);
      } else {
        var fetchArrayContainer = [[_Common_DataModel_DataSet_Constants_js__WEBPACK_IMPORTED_MODULE_6__["FieldDataTypes"].UNIFORM, function (x) {
          return x.getFieldData();
        }, function (x, y) {
          return 'tuples' in y ? y.tuples : 0;
        }], [_Common_DataModel_DataSet_Constants_js__WEBPACK_IMPORTED_MODULE_6__["FieldDataTypes"].POINT, function (x) {
          return x.getPointData();
        }, function (x) {
          return x.getPoints().getNumberOfPoints();
        }], [_Common_DataModel_DataSet_Constants_js__WEBPACK_IMPORTED_MODULE_6__["FieldDataTypes"].CELL, function (x) {
          return x.getCellData();
        }, function (x) {
          return x.getNumberOfCells();
        }], [_Common_DataModel_DataSet_Constants_js__WEBPACK_IMPORTED_MODULE_6__["FieldDataTypes"].VERTEX, function (x) {
          return x.getVertexData();
        }, function (x) {
          return x.getNumberOfVertices();
        }], [_Common_DataModel_DataSet_Constants_js__WEBPACK_IMPORTED_MODULE_6__["FieldDataTypes"].EDGE, function (x) {
          return x.getEdgeData();
        }, function (x) {
          return x.getNumberOfEdges();
        }], [_Common_DataModel_DataSet_Constants_js__WEBPACK_IMPORTED_MODULE_6__["FieldDataTypes"].ROW, function (x) {
          return x.getRowData();
        }, function (x) {
          return x.getNumberOfRows();
        }]].reduce(function (result, value) {
          result[value[0]] = {
            getData: value[1],
            getSize: value[2]
          };
          return result;
        }, {});
        var dsa = null;
        var tuples = 0;

        if ('location' in spec && spec.location in fetchArrayContainer) {
          dsa = fetchArrayContainer[spec.location].getData(outData);
          tuples = fetchArrayContainer[spec.location].getSize(inData, fullSpec);
        }

        if (tuples <= 0) {
          vtkWarningMacro("Output array size could not be determined for ".concat(JSON.stringify(spec), "."));
          arraysOut.push(null);
        } else if (dsa) {
          fullSpec.size = ncomp * tuples;
          var arrOut = _Common_Core_DataArray_js__WEBPACK_IMPORTED_MODULE_4__["default"].newInstance(fullSpec);
          var arrIdx = dsa.addArray(arrOut);

          if ('attribute' in fullSpec && spec.location !== _Common_DataModel_DataSet_Constants_js__WEBPACK_IMPORTED_MODULE_6__["FieldDataTypes"].UNIFORM) {
            dsa.setActiveAttributeByIndex(arrIdx, fullSpec.attribute);
          }

          arraysOut.push(arrOut);
        } else {
          vtkWarningMacro("Specifier \"".concat(JSON.stringify(spec), "\" did not provide a usable location."));
          arraysOut.push(null);
        }
      }
    });
    return {
      arraysIn: arraysIn,
      arraysOut: arraysOut
    };
  };

  publicAPI.requestData = function (inData, outData) {
    if (!model.formula) {
      return 0;
    }

    var arraySpec = model.formula.getArrays(inData);
    var newDataSet = Object(_vtk_js__WEBPACK_IMPORTED_MODULE_2__["default"])({
      vtkClass: inData[0].getClassName()
    });
    newDataSet.shallowCopy(inData[0]);
    outData[0] = newDataSet;
    var arrays = publicAPI.prepareArrays(arraySpec, inData[0], outData[0]);
    model.formula.evaluate(arrays.arraysIn, arrays.arraysOut);
    return 1;
  };
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {
  formula: {
    getArrays: function getArrays() {
      return {
        input: [],
        output: []
      };
    },
    evaluate: function evaluate() {
      return null;
    }
  }
}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Make this a VTK object

  _macros_js__WEBPACK_IMPORTED_MODULE_3__["default"].obj(publicAPI, model); // Also make it an algorithm with one input and one output

  _macros_js__WEBPACK_IMPORTED_MODULE_3__["default"].algo(publicAPI, model, 1, 1); // Object specific methods

  vtkCalculator(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = _macros_js__WEBPACK_IMPORTED_MODULE_3__["default"].newInstance(extend, 'vtkCalculator'); // ----------------------------------------------------------------------------

var vtkCalculator$1 = {
  newInstance: newInstance,
  extend: extend
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Filters/General/TubeFilter.js":
/*!*********************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Filters/General/TubeFilter.js ***!
  \*********************************************************************/
/*! exports provided: default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkTubeFilter$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _Common_Core_CellArray_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../Common/Core/CellArray.js */ "../node_modules/@kitware/vtk.js/Common/Core/CellArray.js");
/* harmony import */ var _Common_Core_DataArray_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../Common/Core/DataArray.js */ "../node_modules/@kitware/vtk.js/Common/Core/DataArray.js");
/* harmony import */ var _Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../Common/Core/Math/index.js */ "../node_modules/@kitware/vtk.js/Common/Core/Math/index.js");
/* harmony import */ var _Common_Core_Points_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../Common/Core/Points.js */ "../node_modules/@kitware/vtk.js/Common/Core/Points.js");
/* harmony import */ var _Common_DataModel_PolyData_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../Common/DataModel/PolyData.js */ "../node_modules/@kitware/vtk.js/Common/DataModel/PolyData.js");
/* harmony import */ var _Common_DataModel_DataSetAttributes_Constants_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../Common/DataModel/DataSetAttributes/Constants.js */ "../node_modules/@kitware/vtk.js/Common/DataModel/DataSetAttributes/Constants.js");
/* harmony import */ var _Common_Core_DataArray_Constants_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../Common/Core/DataArray/Constants.js */ "../node_modules/@kitware/vtk.js/Common/Core/DataArray/Constants.js");
/* harmony import */ var _TubeFilter_Constants_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./TubeFilter/Constants.js */ "../node_modules/@kitware/vtk.js/Filters/General/TubeFilter/Constants.js");










var VaryRadius = _TubeFilter_Constants_js__WEBPACK_IMPORTED_MODULE_8__["default"].VaryRadius,
    GenerateTCoords = _TubeFilter_Constants_js__WEBPACK_IMPORTED_MODULE_8__["default"].GenerateTCoords;
var vtkDebugMacro = _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].vtkDebugMacro,
    vtkErrorMacro = _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].vtkErrorMacro,
    vtkWarningMacro = _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].vtkWarningMacro; // ----------------------------------------------------------------------------
// vtkTubeFilter methods
// ----------------------------------------------------------------------------

function vtkTubeFilter(publicAPI, model) {
  // Set our classname
  model.classHierarchy.push('vtkTubeFilter');

  function computeOffset(offset, npts) {
    var newOffset = offset;

    if (model.sidesShareVertices) {
      newOffset += model.numberOfSides * npts;
    } else {
      // points are duplicated
      newOffset += 2 * model.numberOfSides * npts;
    }

    if (model.capping) {
      // cap points are duplicated
      newOffset += 2 * model.numberOfSides;
    }

    return newOffset;
  }

  function findNextValidSegment(points, pointIds, start) {
    var ptId = pointIds[start];
    var ps = points.slice(3 * ptId, 3 * (ptId + 1));
    var end = start + 1;

    while (end < pointIds.length) {
      var endPtId = pointIds[end];
      var pe = points.slice(3 * endPtId, 3 * (endPtId + 1));

      if (ps !== pe) {
        return end - 1;
      }

      ++end;
    }

    return pointIds.length;
  }

  function generateSlidingNormals(pts, lines, normals) {
    var firstNormal = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;
    var normal = [0.0, 0.0, 1.0];
    var lineData = lines; // lid = 0;

    var npts = lineData[0];

    for (var i = 0; i < lineData.length; i += npts + 1) {
      npts = lineData[i];

      if (npts === 1) {
        // return arbitrary
        normals.setTuple(lineData[i + 1], normal);
      } else if (npts > 1) {
        var sNextId = 0;
        var sPrev = [0, 0, 0];
        var sNext = [0, 0, 0];
        var linePts = lineData.slice(i + 1, i + 1 + npts);
        sNextId = findNextValidSegment(pts, linePts, 0);

        if (sNextId !== npts) {
          (function () {
            // at least one valid segment
            var pt1Id = linePts[sNextId];
            var pt1 = pts.slice(3 * pt1Id, 3 * (pt1Id + 1));
            var pt2Id = linePts[sNextId + 1];
            var pt2 = pts.slice(3 * pt2Id, 3 * (pt2Id + 1));
            sPrev = pt2.map(function (elem, idx) {
              return elem - pt1[idx];
            });
            Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__["l"])(sPrev); // compute first normal

            if (firstNormal) {
              normal = firstNormal;
            } else {
              // find the next valid, non-parallel segment
              while (++sNextId < npts) {
                sNextId = findNextValidSegment(pts, linePts, sNextId);

                if (sNextId !== npts) {
                  pt1Id = linePts[sNextId];
                  pt1 = pts.slice(3 * pt1Id, 3 * (pt1Id + 1));
                  pt2Id = linePts[sNextId + 1];
                  pt2 = pts.slice(3 * pt2Id, 3 * (pt2Id + 1));

                  for (var j = 0; j < 3; ++j) {
                    sNext[j] = pt2[j] - pt1[j];
                  }

                  Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__["l"])(sNext); // now the starting normal should simply be the cross product.
                  // In the following if statement, we check for the case where
                  // the two segments are parallel, in which case, continue
                  // searching for the next valid segment

                  var n = [0.0, 0.0, 0.0];
                  Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__["j"])(sPrev, sNext, n);

                  if (Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__["n"])(n) > 1.0e-3) {
                    normal = n;
                    sPrev = sNext;
                    break;
                  }
                }
              }

              if (sNextId >= npts) {
                // only one valid segment
                // a little trick to find orthogonal normal
                for (var _j = 0; _j < 3; ++_j) {
                  if (sPrev[_j] !== 0.0) {
                    normal[(_j + 2) % 3] = 0.0;
                    normal[(_j + 1) % 3] = 1.0;
                    normal[_j] = -sPrev[(_j + 1) % 3] / sPrev[_j];
                    break;
                  }
                }
              }
            }

            Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__["l"])(normal); // compute remaining normals

            var lastNormalId = 0;

            while (++sNextId < npts) {
              sNextId = findNextValidSegment(pts, linePts, sNextId);

              if (sNextId === npts) {
                break;
              }

              pt1Id = linePts[sNextId];
              pt1 = pts.slice(3 * pt1Id, 3 * (pt1Id + 1));
              pt2Id = linePts[sNextId + 1];
              pt2 = pts.slice(3 * pt2Id, 3 * (pt2Id + 1));

              for (var _j2 = 0; _j2 < 3; ++_j2) {
                sNext[_j2] = pt2[_j2] - pt1[_j2];
              }

              Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__["l"])(sNext); // compute rotation vector

              var w = [0.0, 0.0, 0.0];
              Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__["j"])(sPrev, normal, w);

              if (Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__["l"])(w) !== 0.0) {
                // can't use this segment otherwise
                var q = [0.0, 0.0, 0.0];
                Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__["j"])(sNext, sPrev, q);

                if (Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__["l"])(q) !== 0.0) {
                  // can't use this segment otherwise
                  var f1 = Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__["d"])(q, normal);
                  var f2 = 1.0 - f1 * f1;

                  if (f2 > 0.0) {
                    f2 = Math.sqrt(f2);
                  } else {
                    f2 = 0.0;
                  }

                  var c = [0, 0, 0];

                  for (var _j3 = 0; _j3 < 3; ++_j3) {
                    c[_j3] = sNext[_j3] + sPrev[_j3];
                  }

                  Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__["l"])(c);
                  Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__["j"])(c, q, w);
                  Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__["j"])(sPrev, q, c);

                  if (Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__["d"])(normal, c) * Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__["d"])(w, c) < 0.0) {
                    f2 *= -1.0;
                  } // insert current normal before updating


                  for (var _j4 = lastNormalId; _j4 < sNextId; ++_j4) {
                    normals.setTuple(linePts[_j4], normal);
                  }

                  lastNormalId = sNextId;
                  sPrev = sNext; // compute next normal

                  normal = f1 * q + f2 * w;
                }
              }
            } // insert last normal for the remaining points


            for (var _j5 = lastNormalId; _j5 < npts; ++_j5) {
              normals.setTuple(linePts[_j5], normal);
            }
          })();
        } else {
          // no valid segments
          for (var j = 0; j < npts; ++j) {
            normals.setTuple(linePts[j], normal);
          }
        }
      }
    }

    return 1;
  }

  function generatePoints(offset, npts, pts, inPts, newPts, pd, outPD, newNormals, inScalars, range, inVectors, maxSpeed, inNormals, theta) {
    // Use averaged segment to create beveled effect.
    var sNext = [0.0, 0.0, 0.0];
    var sPrev = [0.0, 0.0, 0.0];
    var startCapNorm = [0.0, 0.0, 0.0];
    var endCapNorm = [0.0, 0.0, 0.0];
    var p = [0.0, 0.0, 0.0];
    var pNext = [0.0, 0.0, 0.0];
    var s = [0.0, 0.0, 0.0];
    var n = [0.0, 0.0, 0.0];
    var w = [0.0, 0.0, 0.0];
    var nP = [0.0, 0.0, 0.0];
    var normal = [0.0, 0.0, 0.0];
    var sFactor = 1.0;
    var ptId = offset;

    for (var j = 0; j < npts; ++j) {
      // First point
      if (j === 0) {
        p = inPts.slice(3 * pts[0], 3 * (pts[0] + 1));
        pNext = inPts.slice(3 * pts[1], 3 * (pts[1] + 1));

        for (var i = 0; i < 3; ++i) {
          sNext[i] = pNext[i] - p[i];
          sPrev[i] = sNext[i];
          startCapNorm[i] = -sPrev[i];
        }

        Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__["l"])(startCapNorm);
      } else if (j === npts - 1) {
        for (var _i = 0; _i < 3; ++_i) {
          sPrev[_i] = sNext[_i];
          p[_i] = pNext[_i];
          endCapNorm[_i] = sNext[_i];
        }

        Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__["l"])(endCapNorm);
      } else {
        for (var _i2 = 0; _i2 < 3; ++_i2) {
          p[_i2] = pNext[_i2];
        }

        pNext = inPts.slice(3 * pts[j + 1], 3 * (pts[j + 1] + 1));

        for (var _i3 = 0; _i3 < 3; ++_i3) {
          sPrev[_i3] = sNext[_i3];
          sNext[_i3] = pNext[_i3] - p[_i3];
        }
      }

      if (Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__["l"])(sNext) === 0.0) {
        vtkWarningMacro('Coincident points!');
        return 0;
      }

      for (var _i4 = 0; _i4 < 3; ++_i4) {
        s[_i4] = (sPrev[_i4] + sNext[_i4]) / 2.0; // average vector
      }

      n = inNormals.slice(3 * pts[j], 3 * (pts[j] + 1)); // if s is zero then just use sPrev cross n

      if (Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__["l"])(s) === 0.0) {
        Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__["j"])(sPrev, n, s);

        if (Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__["l"])(s) === 0.0) {
          vtkDebugMacro('Using alternate bevel vector');
        }
      }

      Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__["j"])(s, n, w);

      if (Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__["l"])(w) === 0.0) {
        var msg = 'Bad normal: s = ';
        msg += "".concat(s[0], ",  ").concat(s[1], ", ").concat(s[2]);
        msg += " n = ".concat(n[0], ",  ").concat(n[1], ", ").concat(n[2]);
        vtkWarningMacro(msg);
        return 0;
      }

      Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__["j"])(w, s, nP); // create orthogonal coordinate system

      Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__["l"])(nP); // Compute a scalar factor based on scalars or vectors

      if (inScalars && model.varyRadius === VaryRadius.VARY_RADIUS_BY_SCALAR) {
        sFactor = 1.0 + (model.radiusFactor - 1.0) * (inScalars.getComponent(pts[j], 0) - range[0]) / (range[1] - range[0]);
      } else if (inVectors && model.varyRadius === VaryRadius.VARY_RADIUS_BY_VECTOR) {
        sFactor = Math.sqrt(maxSpeed / Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__["n"])(inVectors.getTuple(pts[j])));

        if (sFactor > model.radiusFactor) {
          sFactor = model.radiusFactor;
        }
      } else if (inScalars && model.varyRadius === VaryRadius.VARY_RADIUS_BY_ABSOLUTE_SCALAR) {
        sFactor = inScalars.getComponent(pts[j], 0);

        if (sFactor < 0.0) {
          vtkWarningMacro('Scalar value less than zero, skipping line');
          return 0;
        }
      } // create points around line


      if (model.sidesShareVertices) {
        for (var k = 0; k < model.numberOfSides; ++k) {
          for (var _i5 = 0; _i5 < 3; ++_i5) {
            normal[_i5] = w[_i5] * Math.cos(k * theta) + nP[_i5] * Math.sin(k * theta);
            s[_i5] = p[_i5] + model.radius * sFactor * normal[_i5];
            newPts[3 * ptId + _i5] = s[_i5];
            newNormals[3 * ptId + _i5] = normal[_i5];
          }

          outPD.passData(pd, pts[j], ptId);
          ptId++;
        } // for each side

      } else {
        var nRight = [0, 0, 0];
        var nLeft = [0, 0, 0];

        for (var _k = 0; _k < model.numberOfSides; ++_k) {
          for (var _i6 = 0; _i6 < 3; ++_i6) {
            // Create duplicate vertices at each point
            // and adjust the associated normals so that they are
            // oriented with the facets. This preserves the tube's
            // polygonal appearance, as if by flat-shading around the tube,
            // while still allowing smooth (gouraud) shading along the
            // tube as it bends.
            normal[_i6] = w[_i6] * Math.cos(_k * theta) + nP[_i6] * Math.sin(_k * theta);
            nRight[_i6] = w[_i6] * Math.cos((_k - 0.5) * theta) + nP[_i6] * Math.sin((_k - 0.5) * theta);
            nLeft[_i6] = w[_i6] * Math.cos((_k + 0.5) * theta) + nP[_i6] * Math.sin((_k + 0.5) * theta);
            s[_i6] = p[_i6] + model.radius * sFactor * normal[_i6];
            newPts[3 * ptId + _i6] = s[_i6];
            newNormals[3 * ptId + _i6] = nRight[_i6];
            newPts[3 * (ptId + 1) + _i6] = s[_i6];
            newNormals[3 * (ptId + 1) + _i6] = nLeft[_i6];
          }

          outPD.passData(pd, pts[j], ptId + 1);
          ptId += 2;
        } // for each side

      } // else separate vertices

    } // for all points in the polyline
    // Produce end points for cap. They are placed at tail end of points.


    if (model.capping) {
      var numCapSides = model.numberOfSides;
      var capIncr = 1;

      if (!model.sidesShareVertices) {
        numCapSides = 2 * model.numberOfSides;
        capIncr = 2;
      } // the start cap


      for (var _k2 = 0; _k2 < numCapSides; _k2 += capIncr) {
        s = newPts.slice(3 * (offset + _k2), 3 * (offset + _k2 + 1));

        for (var _i7 = 0; _i7 < 3; ++_i7) {
          newPts[3 * ptId + _i7] = s[_i7];
          newNormals[3 * ptId + _i7] = startCapNorm[_i7];
        }

        outPD.passData(pd, pts[0], ptId);
        ptId++;
      } // the end cap


      var endOffset = offset + (npts - 1) * model.numberOfSides;

      if (!model.sidesShareVertices) {
        endOffset = offset + 2 * (npts - 1) * model.numberOfSides;
      }

      for (var _k3 = 0; _k3 < numCapSides; _k3 += capIncr) {
        s = newPts.slice(3 * (endOffset + _k3), 3 * (endOffset + _k3 + 1));

        for (var _i8 = 0; _i8 < 3; ++_i8) {
          newPts[3 * ptId + _i8] = s[_i8];
          newNormals[3 * ptId + _i8] = endCapNorm[_i8];
        }

        outPD.passData(pd, pts[npts - 1], ptId);
        ptId++;
      }
    } // if capping


    return 1;
  }

  function generateStrips(offset, npts, inCellId, outCellId, inCD, outCD, newStrips) {
    var i1 = 0;
    var i2 = 0;
    var i3 = 0;
    var newOutCellId = outCellId;
    var outCellIdx = 0;
    var newStripsData = newStrips.getData();
    var cellId = 0;

    while (outCellIdx < newStripsData.length) {
      if (cellId === outCellId) {
        break;
      }

      outCellIdx += newStripsData[outCellIdx] + 1;
      cellId++;
    }

    if (model.sidesShareVertices) {
      for (var k = offset; k < model.numberOfSides + offset; k += model.onRatio) {
        i1 = k % model.numberOfSides;
        i2 = (k + 1) % model.numberOfSides;
        newStripsData[outCellIdx++] = npts * 2;

        for (var i = 0; i < npts; ++i) {
          i3 = i * model.numberOfSides;
          newStripsData[outCellIdx++] = offset + i2 + i3;
          newStripsData[outCellIdx++] = offset + i1 + i3;
        }

        outCD.passData(inCD, inCellId, newOutCellId++);
      } // for each side of the tube

    } else {
      for (var _k4 = offset; _k4 < model.numberOfSides + offset; _k4 += model.onRatio) {
        i1 = 2 * (_k4 % model.numberOfSides) + 1;
        i2 = 2 * ((_k4 + 1) % model.numberOfSides); // outCellId = newStrips.getNumberOfCells(true);

        newStripsData[outCellIdx] = npts * 2;
        outCellIdx++;

        for (var _i9 = 0; _i9 < npts; ++_i9) {
          i3 = _i9 * 2 * model.numberOfSides;
          newStripsData[outCellIdx++] = offset + i2 + i3;
          newStripsData[outCellIdx++] = offset + i1 + i3;
        }

        outCD.passData(inCD, inCellId, newOutCellId++);
      } // for each side of the tube

    } // Take care of capping. The caps are n-sided polygons that can be easily
    // triangle stripped.


    if (model.capping) {
      var startIdx = offset + npts * model.numberOfSides;
      var idx = 0;

      if (!model.sidesShareVertices) {
        startIdx = offset + 2 * npts * model.numberOfSides;
      } // The start cap


      newStripsData[outCellIdx++] = model.numberOfSides;
      newStripsData[outCellIdx++] = startIdx;
      newStripsData[outCellIdx++] = startIdx + 1;
      var _k5 = 0;

      for (i1 = model.numberOfSides - 1, i2 = 2, _k5 = 0; _k5 < model.numberOfSides - 2; ++_k5) {
        if (_k5 % 2) {
          idx = startIdx + i2;
          newStripsData[outCellIdx++] = idx;
          i2++;
        } else {
          idx = startIdx + i1;
          newStripsData[outCellIdx++] = idx;
          i1--;
        }
      }

      outCD.passData(inCD, inCellId, newOutCellId++); // The end cap - reversed order to be consistent with normal

      startIdx += model.numberOfSides;
      newStripsData[outCellIdx++] = model.numberOfSides;
      newStripsData[outCellIdx++] = startIdx;
      newStripsData[outCellIdx++] = startIdx + model.numberOfSides - 1;

      for (i1 = model.numberOfSides - 2, i2 = 1, _k5 = 0; _k5 < model.numberOfSides - 2; ++_k5) {
        if (_k5 % 2) {
          idx = startIdx + i1;
          newStripsData[outCellIdx++] = idx;
          i1--;
        } else {
          idx = startIdx + i2;
          newStripsData[outCellIdx++] = idx;
          i2++;
        }
      }

      outCD.passData(inCD, inCellId, newOutCellId++);
    }

    return newOutCellId;
  }

  function generateTCoords(offset, npts, pts, inPts, inScalars, newTCoords) {
    var numSides = model.numberOfSides;

    if (!model.sidesShareVertices) {
      numSides = 2 * model.numberOfSides;
    }

    var tc = 0.0;
    var s0 = 0.0;
    var s = 0.0;
    var inScalarsData = inScalars.getData();

    if (model.generateTCoords === GenerateTCoords.TCOORDS_FROM_SCALARS) {
      s0 = inScalarsData[pts[0]];

      for (var i = 0; i < npts; ++i) {
        s = inScalarsData[pts[i]];
        tc = (s - s0) / model.textureLength;

        for (var k = 0; k < numSides; ++k) {
          var tcy = k / (numSides - 1);
          var tcId = 2 * (offset + i * numSides + k);
          newTCoords[tcId] = tc;
          newTCoords[tcId + 1] = tcy;
        }
      }
    } else if (model.generateTCoords === GenerateTCoords.TCOORDS_FROM_LENGTH) {
      var len = 0.0;
      var xPrev = inPts.slice(3 * pts[0], 3 * (pts[0] + 1));

      for (var _i10 = 0; _i10 < npts; ++_i10) {
        var x = inPts.slice(3 * pts[_i10], 3 * (pts[_i10] + 1));
        len += Math.sqrt(Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__["f"])(x, xPrev));
        tc = len / model.textureLength;

        for (var _k6 = 0; _k6 < numSides; ++_k6) {
          var _tcy = _k6 / (numSides - 1);

          var _tcId = 2 * (offset + _i10 * numSides + _k6);

          newTCoords[_tcId] = tc;
          newTCoords[_tcId + 1] = _tcy;
        }

        for (var _k7 = 0; _k7 < 3; ++_k7) {
          xPrev[_k7] = x[_k7];
        }
      }
    } else if (model.generateTCoords === GenerateTCoords.TCOORDS_FROM_NORMALIZED_LENGTH) {
      var _len = 0.0;
      var len1 = 0.0;

      var _xPrev = inPts.slice(3 * pts[0], 3 * (pts[0] + 1));

      for (var _i11 = 0; _i11 < npts; ++_i11) {
        var _x = inPts.slice(3 * pts[_i11], 3 * (pts[_i11] + 1));

        len1 += Math.sqrt(Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__["f"])(_x, _xPrev));

        for (var _k8 = 0; _k8 < 3; ++_k8) {
          _xPrev[_k8] = _x[_k8];
        }
      }

      _xPrev = inPts.slice(3 * pts[0], 3 * (pts[0] + 1));

      for (var _i12 = 0; _i12 < npts; ++_i12) {
        var _x2 = inPts.slice(3 * pts[_i12], 3 * (pts[_i12] + 1));

        _len += Math.sqrt(Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__["f"])(_x2, _xPrev));
        tc = _len / len1;

        for (var _k9 = 0; _k9 < numSides; ++_k9) {
          var _tcy2 = _k9 / (numSides - 1);

          var _tcId2 = 2 * (offset + _i12 * numSides + _k9);

          newTCoords[_tcId2] = tc;
          newTCoords[_tcId2 + 1] = _tcy2;
        }

        for (var _k10 = 0; _k10 < 3; ++_k10) {
          _xPrev[_k10] = _x2[_k10];
        }
      }
    } // Capping, set the endpoints as appropriate


    if (model.capping) {
      var startIdx = offset + npts * numSides; // start cap

      for (var ik = 0; ik < model.numberOfSides; ++ik) {
        var _tcId3 = 2 * (startIdx + ik);

        newTCoords[_tcId3] = 0.0;
        newTCoords[_tcId3 + 1] = 0.0;
      } // end cap


      for (var _ik = 0; _ik < model.numberOfSides; ++_ik) {
        var _tcId4 = 2 * (startIdx + model.numberOfSides + _ik);

        newTCoords[_tcId4] = 0.0;
        newTCoords[_tcId4 + 1] = 0.0;
      }
    }
  }

  publicAPI.requestData = function (inData, outData) {
    // implement requestData
    // pass through for now
    var output = _Common_DataModel_PolyData_js__WEBPACK_IMPORTED_MODULE_5__["default"].newInstance();
    outData[0] = output;
    var input = inData[0];

    if (!input) {
      vtkErrorMacro('Invalid or missing input');
      return;
    } // Allocate output


    var inPts = input.getPoints();

    if (!inPts) {
      return;
    }

    var numPts = inPts.getNumberOfPoints();

    if (numPts < 1) {
      return;
    }

    var inLines = input.getLines();

    if (!inLines) {
      return;
    }

    var numLines = inLines.getNumberOfCells();

    if (numLines < 1) {
      return;
    }

    var numNewPts = 0;
    var numStrips = 0;
    var inLinesData = inLines.getData();
    var npts = inLinesData[0];
    var sidesShareVerticesMultiplier = model.sidesShareVertices ? 1 : 2;

    for (var i = 0; i < inLinesData.length; i += npts + 1) {
      numNewPts += sidesShareVerticesMultiplier * npts * model.numberOfSides;

      if (model.capping) {
        numNewPts += 2 * model.numberOfSides;
      }

      npts = inLinesData[i];
      numStrips += (2 * npts + 1) * Math.ceil(model.numberOfSides / model.onRatio);

      if (model.capping) {
        numStrips += 2 * (model.numberOfSides + 1);
      }
    }

    var pointType = inPts.getDataType();

    if (model.outputPointsPrecision === _Common_DataModel_DataSetAttributes_Constants_js__WEBPACK_IMPORTED_MODULE_6__["DesiredOutputPrecision"].SINGLE) {
      pointType = _Common_Core_DataArray_Constants_js__WEBPACK_IMPORTED_MODULE_7__["VtkDataTypes"].FLOAT;
    } else if (model.outputPointsPrecision === _Common_DataModel_DataSetAttributes_Constants_js__WEBPACK_IMPORTED_MODULE_6__["DesiredOutputPrecision"].DOUBLE) {
      pointType = _Common_Core_DataArray_Constants_js__WEBPACK_IMPORTED_MODULE_7__["VtkDataTypes"].DOUBLE;
    }

    var newPts = _Common_Core_Points_js__WEBPACK_IMPORTED_MODULE_4__["default"].newInstance({
      dataType: pointType,
      size: numNewPts * 3,
      numberOfComponents: 3
    });
    var numNormals = 3 * numNewPts;
    var newNormalsData = new Float32Array(numNormals);
    var newNormals = _Common_Core_DataArray_js__WEBPACK_IMPORTED_MODULE_2__["default"].newInstance({
      numberOfComponents: 3,
      values: newNormalsData,
      name: 'TubeNormals'
    });
    var newStripsData = new Uint32Array(numStrips);
    var newStrips = _Common_Core_CellArray_js__WEBPACK_IMPORTED_MODULE_1__["default"].newInstance({
      values: newStripsData
    });
    var newStripId = 0;
    var inNormals = input.getPointData().getNormals();
    var inNormalsData = null;
    var generateNormals = false;

    if (!inNormals || model.useDefaultNormal) {
      inNormalsData = new Float32Array(3 * numPts);
      inNormals = _Common_Core_DataArray_js__WEBPACK_IMPORTED_MODULE_2__["default"].newInstance({
        numberOfComponents: 3,
        values: inNormalsData,
        name: 'Normals'
      });

      if (model.useDefaultNormal) {
        inNormalsData = inNormalsData.map(function (elem, index) {
          var i = index % 3;
          return model.defaultNormal[i];
        });
      } else {
        generateNormals = true;
      }
    } // loop over pointData arrays and resize based on numNewPts


    var numArrays = input.getPointData().getNumberOfArrays();
    var oldArray = null;
    var newArray = null;

    for (var _i13 = 0; _i13 < numArrays; _i13++) {
      oldArray = input.getPointData().getArrayByIndex(_i13);
      newArray = _Common_Core_DataArray_js__WEBPACK_IMPORTED_MODULE_2__["default"].newInstance({
        name: oldArray.getName(),
        dataType: oldArray.getDataType(),
        numberOfComponents: oldArray.getNumberOfComponents(),
        size: numNewPts * oldArray.getNumberOfComponents()
      });
      output.getPointData().removeArrayByIndex(0); // remove oldArray from beginning

      output.getPointData().addArray(newArray); // concat newArray to end
    } // loop over cellData arrays and resize based on numNewCells


    var numNewCells = inLines.getNumberOfCells() * model.numberOfSides;

    if (model.capping) {
      numNewCells += 2;
    }

    var numCellArrays = input.getCellData().getNumberOfArrays();

    for (var _i14 = 0; _i14 < numCellArrays; _i14++) {
      oldArray = input.getCellData().getArrayByIndex(_i14);
      newArray = _Common_Core_DataArray_js__WEBPACK_IMPORTED_MODULE_2__["default"].newInstance({
        name: oldArray.getName(),
        dataType: oldArray.getDataType(),
        numberOfComponents: oldArray.getNumberOfComponents(),
        size: numNewCells * oldArray.getNumberOfComponents()
      });
      output.getCellData().removeArrayByIndex(0); // remove oldArray from beginning

      output.getCellData().addArray(newArray); // concat newArray to end
    }

    var inScalars = publicAPI.getInputArrayToProcess(0);
    var outScalars = null;
    var range = [];

    if (inScalars) {
      // allocate output scalar array
      // assuming point scalars for now
      outScalars = _Common_Core_DataArray_js__WEBPACK_IMPORTED_MODULE_2__["default"].newInstance({
        name: inScalars.getName(),
        dataType: inScalars.getDataType(),
        numberOfComponents: inScalars.getNumberOfComponents(),
        size: numNewPts * inScalars.getNumberOfComponents()
      });
      range = inScalars.getRange();

      if (range[1] - range[0] === 0.0) {
        if (model.varyRadius === VaryRadius.VARY_RADIUS_BY_SCALAR) {
          vtkWarningMacro('Scalar range is zero!');
        }

        range[1] = range[0] + 1.0;
      }
    }

    var inVectors = publicAPI.getInputArrayToProcess(1);
    var maxSpeed = 0;

    if (inVectors) {
      maxSpeed = inVectors.getMaxNorm();
    }

    var outCD = output.getCellData();
    outCD.copyNormalsOff();
    outCD.passData(input.getCellData());
    var outPD = output.getPointData();

    if (outPD.getNormals() !== null) {
      outPD.copyNormalsOff();
    }

    if (inScalars && outScalars) {
      outPD.setScalars(outScalars);
    } // TCoords


    var newTCoords = null;

    if (model.generateTCoords === GenerateTCoords.TCOORDS_FROM_SCALARS && inScalars || model.generateTCoords === GenerateTCoords.TCOORDS_FROM_LENGTH || model.generateTCoords === GenerateTCoords.TCOORDS_FROM_NORMALIZED_LENGTH) {
      var newTCoordsData = new Float32Array(2 * numNewPts);
      newTCoords = _Common_Core_DataArray_js__WEBPACK_IMPORTED_MODULE_2__["default"].newInstance({
        numberOfComponents: 2,
        values: newTCoordsData,
        name: 'TCoords'
      });
      outPD.copyTCoordsOff();
    }

    outPD.passData(input.getPointData()); // Create points along each polyline that are connected into numberOfSides
    // triangle strips.

    var theta = 2.0 * Math.PI / model.numberOfSides;
    npts = inLinesData[0];
    var offset = 0;
    var inCellId = input.getVerts().getNumberOfCells();

    for (var _i15 = 0; _i15 < inLinesData.length; _i15 += npts + 1) {
      npts = inLinesData[_i15];
      var pts = inLinesData.slice(_i15 + 1, _i15 + 1 + npts);

      if (npts > 1) {
        // if not, skip tubing this line
        if (generateNormals) {
          var polyLine = inLinesData.slice(_i15, _i15 + npts + 1);
          generateSlidingNormals(inPts.getData(), polyLine, inNormals);
        }
      } // generate points


      if (generatePoints(offset, npts, pts, inPts.getData(), newPts.getData(), input.getPointData(), outPD, newNormalsData, inScalars, range, inVectors, maxSpeed, inNormalsData, theta)) {
        // generate strips for the polyline
        newStripId = generateStrips(offset, npts, inCellId, newStripId, input.getCellData(), outCD, newStrips); // generate texture coordinates for the polyline

        if (newTCoords) {
          generateTCoords(offset, npts, pts, inPts.getData(), inScalars, newTCoords.getData());
        }
      } else {
        // skip tubing this line
        vtkWarningMacro('Could not generate points');
      } // lineIdx += npts;
      // Compute the new offset for the next polyline


      offset = computeOffset(offset, npts);
      inCellId++;
    }

    output.setPoints(newPts);
    output.setStrips(newStrips);
    output.setPointData(outPD);
    outPD.setNormals(newNormals);
    outData[0] = output;
  };
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {
  outputPointsPrecision: _Common_DataModel_DataSetAttributes_Constants_js__WEBPACK_IMPORTED_MODULE_6__["DesiredOutputPrecision"].DEFAULT,
  radius: 0.5,
  varyRadius: VaryRadius.VARY_RADIUS_OFF,
  numberOfSides: 3,
  radiusFactor: 10,
  defaultNormal: [0, 0, 1],
  useDefaultNormal: false,
  sidesShareVertices: true,
  capping: false,
  onRatio: 1,
  offset: 0,
  generateTCoords: GenerateTCoords.TCOORDS_OFF,
  textureLength: 1.0
}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API

  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].setGet(publicAPI, model, ['outputPointsPrecision', 'radius', 'varyRadius', 'numberOfSides', 'radiusFactor', 'defaultNormal', 'useDefaultNormal', 'sidesShareVertices', 'capping', 'onRatio', 'offset', 'generateTCoords', 'textureLength']); // Make this a VTK object

  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].obj(publicAPI, model); // Also make it an algorithm with one input and one output

  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].algo(publicAPI, model, 1, 1); // Object specific methods

  vtkTubeFilter(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].newInstance(extend, 'vtkTubeFilter'); // ----------------------------------------------------------------------------

var vtkTubeFilter$1 = {
  newInstance: newInstance,
  extend: extend
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Filters/General/TubeFilter/Constants.js":
/*!*******************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Filters/General/TubeFilter/Constants.js ***!
  \*******************************************************************************/
/*! exports provided: GenerateTCoords, VaryRadius, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GenerateTCoords", function() { return GenerateTCoords; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VaryRadius", function() { return VaryRadius; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Constants; });
var VaryRadius = {
  VARY_RADIUS_OFF: 0,
  // default
  VARY_RADIUS_BY_SCALAR: 1,
  VARY_RADIUS_BY_VECTOR: 2,
  VARY_RADIUS_BY_ABSOLUTE_SCALAR: 3
};
var GenerateTCoords = {
  TCOORDS_OFF: 0,
  // default
  TCOORDS_FROM_NORMALIZED_LENGTH: 1,
  TCOORDS_FROM_LENGTH: 2,
  TCOORDS_FROM_SCALARS: 3
};
var Constants = {
  VaryRadius: VaryRadius,
  GenerateTCoords: GenerateTCoords
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Filters/General/WarpScalar.js":
/*!*********************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Filters/General/WarpScalar.js ***!
  \*********************************************************************/
/*! exports provided: default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkWarpScalar$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var _vtk_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../vtk.js */ "../node_modules/@kitware/vtk.js/vtk.js");
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _Common_Core_Points_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../Common/Core/Points.js */ "../node_modules/@kitware/vtk.js/Common/Core/Points.js");




var vtkDebugMacro = _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].vtkDebugMacro,
    vtkErrorMacro = _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].vtkErrorMacro; // ----------------------------------------------------------------------------
// vtkWarpScalar methods
// ----------------------------------------------------------------------------

function vtkWarpScalar(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkWarpScalar');

  publicAPI.requestData = function (inData, outData) {
    // implement requestData
    var input = inData[0];

    if (!input) {
      vtkErrorMacro('Invalid or missing input');
      return 1;
    } // First, copy the input to the output as a starting point
    // output->CopyStructure( input );


    var inPts = input.getPoints();
    var pd = input.getPointData();
    var inNormals = pd.getNormals();
    var inScalars = publicAPI.getInputArrayToProcess(0);

    if (!inPts || !inScalars) {
      vtkDebugMacro('No data to warp', !!inPts, !!inScalars);
      outData[0] = inData[0];
      return 1;
    }

    var numPts = inPts.getNumberOfPoints();
    var pointNormal = null;
    var normal = [0, 0, 1];

    if (inNormals && !model.useNormal) {
      pointNormal = function pointNormal(id, array) {
        return [array.getData()[id * 3], array.getData()[id * 3 + 1], array.getData()[id * 3 + 2]];
      };

      vtkDebugMacro('Using data normals');
    } else if (publicAPI.getXyPlane()) {
      pointNormal = function pointNormal(id, array) {
        return normal;
      };

      vtkDebugMacro('Using x-y plane normal');
    } else {
      pointNormal = function pointNormal(id, array) {
        return model.normal;
      };

      vtkDebugMacro('Using Normal instance variable');
    }

    var newPtsData = new Float32Array(numPts * 3);
    var inPoints = inPts.getData();
    var ptOffset = 0;
    var n = [0, 0, 1];
    var s = 1; // Loop over all points, adjusting locations

    var scalarDataArray = inScalars.getData();
    var nc = inScalars.getNumberOfComponents();

    for (var ptId = 0; ptId < numPts; ++ptId) {
      ptOffset = ptId * 3;
      n = pointNormal(ptId, inNormals);

      if (model.xyPlane) {
        s = inPoints[ptOffset + 2];
      } else {
        // Use component 0 of array if there are multiple components
        s = scalarDataArray[ptId * nc];
      }

      newPtsData[ptOffset] = inPoints[ptOffset] + model.scaleFactor * s * n[0];
      newPtsData[ptOffset + 1] = inPoints[ptOffset + 1] + model.scaleFactor * s * n[1];
      newPtsData[ptOffset + 2] = inPoints[ptOffset + 2] + model.scaleFactor * s * n[2];
    }

    var newDataSet = Object(_vtk_js__WEBPACK_IMPORTED_MODULE_0__["default"])({
      vtkClass: input.getClassName()
    });
    newDataSet.shallowCopy(input);
    var points = _Common_Core_Points_js__WEBPACK_IMPORTED_MODULE_2__["default"].newInstance();
    points.setData(newPtsData, 3);
    newDataSet.setPoints(points);
    outData[0] = newDataSet;
    return 1;
  };
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {
  scaleFactor: 1,
  useNormal: false,
  normal: [0, 0, 1],
  xyPlane: false
}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Make this a VTK object

  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].obj(publicAPI, model); // Also make it an algorithm with one input and one output

  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].algo(publicAPI, model, 1, 1); // Generate macros for properties

  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].setGet(publicAPI, model, ['scaleFactor', 'useNormal', 'xyPlane']);
  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].setGetArray(publicAPI, model, ['normal'], 3); // Object specific methods

  vtkWarpScalar(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].newInstance(extend, 'vtkWarpScalar'); // ----------------------------------------------------------------------------

var vtkWarpScalar$1 = {
  newInstance: newInstance,
  extend: extend
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Filters/Sources/ArrowSource.js":
/*!**********************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Filters/Sources/ArrowSource.js ***!
  \**********************************************************************/
/*! exports provided: default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkArrowSource$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _General_AppendPolyData_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../General/AppendPolyData.js */ "../node_modules/@kitware/vtk.js/Filters/General/AppendPolyData.js");
/* harmony import */ var _ConeSource_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ConeSource.js */ "../node_modules/@kitware/vtk.js/Filters/Sources/ConeSource.js");
/* harmony import */ var _CylinderSource_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./CylinderSource.js */ "../node_modules/@kitware/vtk.js/Filters/Sources/CylinderSource.js");
/* harmony import */ var _Common_Core_MatrixBuilder_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../Common/Core/MatrixBuilder.js */ "../node_modules/@kitware/vtk.js/Common/Core/MatrixBuilder.js");






// vtkArrowSource methods
// ----------------------------------------------------------------------------

function vtkArrowSource(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkArrowSource');

  function requestData(inData, outData) {
    if (model.deleted) {
      return;
    }

    var cylinder = _CylinderSource_js__WEBPACK_IMPORTED_MODULE_3__["default"].newInstance({
      capping: true
    });
    cylinder.setResolution(model.shaftResolution);
    cylinder.setRadius(model.shaftRadius);
    cylinder.setHeight(1.0 - model.tipLength);
    cylinder.setCenter(0, (1.0 - model.tipLength) * 0.5, 0.0);
    var cylinderPD = cylinder.getOutputData();
    var cylinderPts = cylinderPD.getPoints().getData();
    var cylinderNormals = cylinderPD.getPointData().getNormals().getData(); // Apply transformation to the cylinder

    _Common_Core_MatrixBuilder_js__WEBPACK_IMPORTED_MODULE_4__["default"].buildFromDegree().rotateZ(-90).apply(cylinderPts).apply(cylinderNormals);
    var cone = _ConeSource_js__WEBPACK_IMPORTED_MODULE_2__["default"].newInstance();
    cone.setResolution(model.tipResolution);
    cone.setHeight(model.tipLength);
    cone.setRadius(model.tipRadius);
    var conePD = cone.getOutputData();
    var conePts = conePD.getPoints().getData(); // Apply transformation to the cone

    _Common_Core_MatrixBuilder_js__WEBPACK_IMPORTED_MODULE_4__["default"].buildFromRadian().translate(1.0 - model.tipLength * 0.5, 0.0, 0.0).apply(conePts);
    var append = _General_AppendPolyData_js__WEBPACK_IMPORTED_MODULE_1__["default"].newInstance();
    append.setInputData(cylinderPD);
    append.addInputData(conePD);
    var appendPD = append.getOutputData();
    var appendPts = appendPD.getPoints().getData(); // Center the arrow about [0, 0, 0]

    _Common_Core_MatrixBuilder_js__WEBPACK_IMPORTED_MODULE_4__["default"].buildFromRadian().translate(-0.5 + model.tipLength * 0.5, 0.0, 0.0).apply(appendPts);

    if (model.invert) {
      // Apply transformation to the arrow
      _Common_Core_MatrixBuilder_js__WEBPACK_IMPORTED_MODULE_4__["default"].buildFromRadian().rotateFromDirections([1, 0, 0], model.direction).scale(-1, -1, -1).apply(appendPts); // Update output

      outData[0] = appendPD;
    } else {
      // Apply transformation to the arrow
      _Common_Core_MatrixBuilder_js__WEBPACK_IMPORTED_MODULE_4__["default"].buildFromRadian().rotateFromDirections([1, 0, 0], model.direction).scale(1, 1, 1).apply(appendPts); // Update output

      outData[0] = append.getOutputData();
    }
  } // Expose methods


  publicAPI.requestData = requestData;
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {
  tipResolution: 6,
  tipRadius: 0.1,
  tipLength: 0.35,
  shaftResolution: 6,
  shaftRadius: 0.03,
  invert: false,
  direction: [1.0, 0.0, 0.0],
  pointType: 'Float64Array'
}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API

  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].obj(publicAPI, model);
  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].setGet(publicAPI, model, ['tipResolution', 'tipRadius', 'tipLength', 'shaftResolution', 'shaftRadius', 'invert']);
  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].setGetArray(publicAPI, model, ['direction'], 3);
  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].algo(publicAPI, model, 0, 1);
  vtkArrowSource(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].newInstance(extend, 'vtkArrowSource'); // ----------------------------------------------------------------------------

var vtkArrowSource$1 = {
  newInstance: newInstance,
  extend: extend
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Filters/Sources/ConcentricCylinderSource.js":
/*!***********************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Filters/Sources/ConcentricCylinderSource.js ***!
  \***********************************************************************************/
/*! exports provided: default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkConcentricCylinderSource$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "../node_modules/@babel/runtime/helpers/toConsumableArray.js");
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _Common_DataModel_PolyData_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../Common/DataModel/PolyData.js */ "../node_modules/@kitware/vtk.js/Common/DataModel/PolyData.js");
/* harmony import */ var _Common_Core_MatrixBuilder_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../Common/Core/MatrixBuilder.js */ "../node_modules/@kitware/vtk.js/Common/Core/MatrixBuilder.js");
/* harmony import */ var _Common_Core_DataArray_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../Common/Core/DataArray.js */ "../node_modules/@kitware/vtk.js/Common/Core/DataArray.js");






// vtkConcentricCylinderSource methods
// ----------------------------------------------------------------------------

function vtkConcentricCylinderSource(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkConcentricCylinderSource'); // Internal private function

  function validateCellFields() {
    while (model.cellFields.length < model.radius.length) {
      model.cellFields.push(model.cellFields.length);
    }
  }

  publicAPI.clearRadius = function () {
    model.radius = [];
    model.cellFields = [];
    publicAPI.modified();
  };

  publicAPI.addRadius = function (radius, cellField) {
    model.radius.push(radius);

    if (cellField !== undefined) {
      model.cellFields.push(cellField);
    }

    validateCellFields();
    publicAPI.modified();
  };

  publicAPI.getNumberOfRadius = function () {
    return model.radius.length;
  };

  publicAPI.getRadius = function () {
    var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
    return model.radius[index];
  };

  publicAPI.setRadius = function (index, radius) {
    model.radius[index] = radius;
    publicAPI.modified();
  };

  publicAPI.setCellField = function (index, field) {
    model.cellFields[index] = field;
    publicAPI.modified();
  };

  publicAPI.removeMask = function () {
    model.mask = null;
    publicAPI.modified();
  };

  publicAPI.setMaskLayer = function (index, hidden) {
    var changeDetected = false;

    if (!model.mask && hidden) {
      changeDetected = true;
      model.mask = [];
    }

    if (model.mask) {
      if (!model.mask[index] !== !hidden) {
        changeDetected = true;
      }

      model.mask[index] = hidden;
    }

    if (changeDetected) {
      publicAPI.modified();
    }
  };

  publicAPI.getMaskLayer = function (index) {
    return index === undefined ? model.mask : model.mask[index];
  };

  function requestData(inData, outData) {
    var _vtkMatrixBuilder$bui;

    if (model.deleted || !model.radius.length) {
      return;
    } // Make sure we have consistency


    validateCellFields();
    var dataset = outData[0];
    var numLayers = model.radius.length;
    var zRef = model.height / 2.0; // Compute cell count

    var cellArraySize = 0;
    var numCells = 0;
    var startTheta = model.startTheta < model.endTheta ? model.startTheta : model.endTheta;
    startTheta *= Math.PI / 180.0;
    var endTheta = model.endTheta > model.startTheta ? model.endTheta : model.startTheta;
    endTheta *= Math.PI / 180.0;
    var thetaResolution = model.resolution;
    var partialDisk = false;

    if (endTheta >= startTheta + 2 * Math.PI) {
      // complete, closed cylinder
      endTheta = startTheta + 2 * Math.PI;
    } else {
      // We add an extra point at endTheta, since the cylinder isn't closed.
      // We cap the sides of the partial cylinder, so set the partialDisk flag.
      ++thetaResolution;
      partialDisk = true;
    }

    var deltaTheta = (endTheta - startTheta) / model.resolution;
    var numberOfPoints = thetaResolution * numLayers * 2 + 2; // 5 entries per poly, 4 polys (top, bottom, in, out) per resolution

    if (!model.skipInnerFaces && !model.mask) {
      // We keep everything
      cellArraySize = 2 * (thetaResolution + 1) + 5 * thetaResolution + (numLayers - 1) * thetaResolution * 20 + (partialDisk ? 10 * numLayers : 0);
      numCells = 2 + thetaResolution + (numLayers - 1) * 4 * thetaResolution + (partialDisk ? 2 * numLayers : 0);
    } else if (!model.skipInnerFaces && model.mask) {
      // We skip some cylinders
      // Handle core
      if (!model.mask[0]) {
        cellArraySize += 2 * (thetaResolution + 1) + 5 * thetaResolution + (partialDisk ? 10 : 0);
        numCells += 2 + thetaResolution + (partialDisk ? 2 : 0);
      } // Handle inside cylinders


      for (var layer = 1; layer < numLayers; layer++) {
        if (!model.mask[layer]) {
          // Add inside cylinder count
          cellArraySize += thetaResolution * 20 + (partialDisk ? 10 : 0);
          numCells += 4 * thetaResolution + (partialDisk ? 2 : 0);
        }
      }
    } else {
      // We skip cylinders and internal faces
      if (!model.skipInnerFaces || !model.mask || !model.mask[0]) {
        // core handling
        cellArraySize += 2 * (thetaResolution + 1) + (partialDisk ? 10 : 0);
        numCells += 2 + (partialDisk ? 2 : 0);

        if (model.radius.length === 1 || !model.skipInnerFaces || model.mask && model.mask[1]) {
          // add side faces
          cellArraySize += 5 * thetaResolution;
          numCells += thetaResolution;
        }
      } // Handle inside cylinders


      for (var _layer = 1; _layer < numLayers; _layer++) {
        if (!model.skipInnerFaces || !model.mask || !model.mask[_layer]) {
          var lastLayer = numLayers - 1 === _layer; // Add inside cylinder

          cellArraySize += thetaResolution * 10 + (partialDisk ? 10 : 0);
          numCells += thetaResolution * 2 + (partialDisk ? 2 : 0); // top + bottom + side caps
          // Do we add innerFaces

          if (!model.skipInnerFaces || model.mask && model.mask[_layer - 1]) {
            cellArraySize += thetaResolution * 5;
            numCells += thetaResolution;
          } // Do we add outerFaces


          if (lastLayer || !model.skipInnerFaces || model.mask && model.mask[_layer + 1]) {
            cellArraySize += thetaResolution * 5;
            numCells += thetaResolution;
          }
        }
      }
    } // Points


    var pointIdx = 0;
    var points = _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].newTypedArray(model.pointType, numberOfPoints * 3); // Cells

    var cellLocation = 0;
    var polys = new Uint32Array(cellArraySize); // CellFields

    var fieldLocation = 0;
    var field = new Float32Array(numCells); // Create points
    // First two are centered, top and bottom. Used only if partialDisk is true.

    points[pointIdx * 3 + 0] = 0;
    points[pointIdx * 3 + 1] = 0;
    points[pointIdx * 3 + 2] = zRef;
    pointIdx++;
    points[pointIdx * 3 + 0] = 0;
    points[pointIdx * 3 + 1] = 0;
    points[pointIdx * 3 + 2] = -zRef;
    pointIdx++;

    for (var _layer2 = 0; _layer2 < numLayers; _layer2++) {
      var radius = model.radius[_layer2]; // Create top

      for (var i = 0; i < thetaResolution; i++) {
        var theta = startTheta + i * deltaTheta;
        points[pointIdx * 3 + 0] = radius * Math.cos(theta);
        points[pointIdx * 3 + 1] = radius * Math.sin(theta);
        points[pointIdx * 3 + 2] = zRef;
        pointIdx++;
      } // Create bottom


      for (var _i = 0; _i < thetaResolution; _i++) {
        var _theta = startTheta + _i * deltaTheta;

        points[pointIdx * 3 + 0] = radius * Math.cos(_theta);
        points[pointIdx * 3 + 1] = radius * Math.sin(_theta);
        points[pointIdx * 3 + 2] = -zRef;
        pointIdx++;
      }
    } // Create cells for the core


    var currentField = model.cellFields[0]; // Core: filtering

    if (!model.mask || !model.mask[0]) {
      // Core: Top disk
      field[fieldLocation++] = currentField; // partial adds the center point and the last point.

      polys[cellLocation++] = thetaResolution + (partialDisk ? 1 : 0);
      if (partialDisk) polys[cellLocation++] = 0;

      for (var _i2 = 0; _i2 < thetaResolution; _i2++) {
        polys[cellLocation++] = _i2 + 2;
      } // Core: Bottom disk


      field[fieldLocation++] = currentField;
      polys[cellLocation++] = thetaResolution + (partialDisk ? 1 : 0);
      if (partialDisk) polys[cellLocation++] = 1;

      for (var _i3 = 0; _i3 < thetaResolution; _i3++) {
        polys[cellLocation++] = 2 * thetaResolution - _i3 - 1 + 2;
      } // Core: sides


      if (!model.skipInnerFaces || model.mask && model.mask[1] || numLayers === 1) {
        for (var _i4 = 0; _i4 < model.resolution; _i4++) {
          polys[cellLocation++] = 4;
          polys[cellLocation++] = (_i4 + 1) % thetaResolution + 2;
          polys[cellLocation++] = _i4 + 2;
          polys[cellLocation++] = _i4 + thetaResolution + 2;
          polys[cellLocation++] = (_i4 + 1) % thetaResolution + thetaResolution + 2;
          field[fieldLocation++] = currentField;
        }
      }

      if (partialDisk) {
        polys[cellLocation++] = 4;
        polys[cellLocation++] = 2;
        polys[cellLocation++] = 0;
        polys[cellLocation++] = 1;
        polys[cellLocation++] = thetaResolution + 2;
        field[fieldLocation++] = currentField;
        polys[cellLocation++] = 4;
        polys[cellLocation++] = 0;
        polys[cellLocation++] = thetaResolution + 1;
        polys[cellLocation++] = 2 * thetaResolution + 1;
        polys[cellLocation++] = 1;
        field[fieldLocation++] = currentField;
      }
    } // Create cells for the layers


    for (var _layer3 = 1; _layer3 < numLayers; _layer3++) {
      // Skip layer if masked
      if (model.mask && model.mask[_layer3]) {
        /* eslint-disable no-continue */
        continue;
        /* eslint-enable no-continue */
      } // two for center points, then skip previous layer's points


      var offset = thetaResolution * 2 * (_layer3 - 1) + 2;
      var a = offset + 2 * thetaResolution; // next layer offset

      var _lastLayer = numLayers - 1 === _layer3;

      currentField = model.cellFields[_layer3]; // Create top

      for (var _i5 = 0; _i5 < model.resolution; _i5++) {
        polys[cellLocation++] = 4;
        polys[cellLocation++] = _i5 + offset;
        polys[cellLocation++] = (_i5 + 1) % thetaResolution + offset;
        polys[cellLocation++] = (_i5 + 1) % thetaResolution + a;
        polys[cellLocation++] = _i5 + a;
        field[fieldLocation++] = currentField;
      } // Create bottom


      for (var _i6 = 0; _i6 < model.resolution; _i6++) {
        polys[cellLocation++] = 4;
        polys[cellLocation++] = (_i6 + 1) % thetaResolution + offset + thetaResolution;
        polys[cellLocation++] = _i6 + offset + thetaResolution;
        polys[cellLocation++] = _i6 + a + thetaResolution;
        polys[cellLocation++] = (_i6 + 1) % thetaResolution + a + thetaResolution;
        field[fieldLocation++] = currentField;
      } // Create inner


      if (!model.skipInnerFaces || model.mask && model.mask[_layer3 - 1]) {
        for (var _i7 = 0; _i7 < model.resolution; _i7++) {
          polys[cellLocation++] = 4;
          polys[cellLocation++] = _i7 + offset;
          polys[cellLocation++] = (_i7 + 1) % thetaResolution + offset;
          polys[cellLocation++] = (_i7 + 1) % thetaResolution + thetaResolution + offset;
          polys[cellLocation++] = _i7 + thetaResolution + offset;
          field[fieldLocation++] = currentField;
        }
      } // Create outer


      if (!model.skipInnerFaces || _lastLayer || model.mask && (model.mask[_layer3 + 1] || _lastLayer)) {
        for (var _i8 = 0; _i8 < model.resolution; _i8++) {
          polys[cellLocation++] = 4;
          polys[cellLocation++] = (_i8 + 1) % thetaResolution + a;
          polys[cellLocation++] = _i8 + a;
          polys[cellLocation++] = _i8 + thetaResolution + a;
          polys[cellLocation++] = (_i8 + 1) % thetaResolution + thetaResolution + a;
          field[fieldLocation++] = currentField;
        }
      } // create caps


      if (partialDisk) {
        polys[cellLocation++] = 4;
        polys[cellLocation++] = a; // from first outer

        polys[cellLocation++] = offset; // first inner

        polys[cellLocation++] = thetaResolution + offset; // first inner

        polys[cellLocation++] = thetaResolution + a; // first outer

        field[fieldLocation++] = currentField;
        polys[cellLocation++] = 4;
        polys[cellLocation++] = model.resolution + a; // last outer

        polys[cellLocation++] = model.resolution + offset; // last inner

        polys[cellLocation++] = model.resolution + thetaResolution + offset; // last inner

        polys[cellLocation++] = model.resolution + thetaResolution + a; // last outer

        field[fieldLocation++] = currentField;
      }
    } // Apply transformation to the point coordinates


    (_vtkMatrixBuilder$bui = _Common_Core_MatrixBuilder_js__WEBPACK_IMPORTED_MODULE_3__["default"].buildFromRadian()).translate.apply(_vtkMatrixBuilder$bui, _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(model.center)).rotateFromDirections([0, 0, 1], model.direction).apply(points);

    dataset = _Common_DataModel_PolyData_js__WEBPACK_IMPORTED_MODULE_2__["default"].newInstance();
    dataset.getPoints().setData(points, 3);
    dataset.getPolys().setData(polys, 1);
    dataset.getCellData().setScalars(_Common_Core_DataArray_js__WEBPACK_IMPORTED_MODULE_4__["default"].newInstance({
      name: 'layer',
      values: field
    })); // Update output

    outData[0] = dataset;
  } // Expose methods


  publicAPI.requestData = requestData;
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {
  height: 1.0,
  radius: [0.5],
  cellFields: [1],
  resolution: 6,
  startTheta: 0.0,
  endTheta: 360.0,
  center: [0, 0, 0],
  direction: [0.0, 0.0, 1.0],
  skipInnerFaces: true,
  mask: null,
  // If present, array to know if a layer should be skipped(=true)
  pointType: 'Float64Array'
}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API

  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].obj(publicAPI, model);
  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].setGet(publicAPI, model, ['height', 'resolution', 'startTheta', 'endTheta', 'skipInnerFaces']);
  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].setGetArray(publicAPI, model, ['center', 'direction'], 3);
  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].getArray(publicAPI, model, ['cellFields']);
  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].algo(publicAPI, model, 0, 1);
  vtkConcentricCylinderSource(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].newInstance(extend, 'vtkConcentricCylinderSource'); // ----------------------------------------------------------------------------

var vtkConcentricCylinderSource$1 = {
  newInstance: newInstance,
  extend: extend
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Filters/Sources/ConeSource.js":
/*!*********************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Filters/Sources/ConeSource.js ***!
  \*********************************************************************/
/*! exports provided: default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkConeSource$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "../node_modules/@babel/runtime/helpers/toConsumableArray.js");
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _Common_DataModel_PolyData_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../Common/DataModel/PolyData.js */ "../node_modules/@kitware/vtk.js/Common/DataModel/PolyData.js");
/* harmony import */ var _Common_Core_MatrixBuilder_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../Common/Core/MatrixBuilder.js */ "../node_modules/@kitware/vtk.js/Common/Core/MatrixBuilder.js");





// vtkConeSource methods
// ----------------------------------------------------------------------------

function vtkConeSource(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkConeSource');

  function requestData(inData, outData) {
    var _vtkMatrixBuilder$bui;

    if (model.deleted) {
      return;
    }

    var dataset = outData[0];
    var angle = 2 * Math.PI / model.resolution;
    var xbot = -model.height / 2.0;
    var numberOfPoints = model.resolution + 1;
    var cellArraySize = 4 * model.resolution + 1 + model.resolution; // Points

    var pointIdx = 0;
    var points = _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].newTypedArray(model.pointType, numberOfPoints * 3); // Cells

    var cellLocation = 0;
    var polys = new Uint32Array(cellArraySize); // Add summit point

    points[0] = model.height / 2.0;
    points[1] = 0.0;
    points[2] = 0.0; // Create bottom cell

    if (model.capping) {
      polys[cellLocation++] = model.resolution;
    } // Add all points


    for (var i = 0; i < model.resolution; i++) {
      pointIdx++;
      points[pointIdx * 3 + 0] = xbot;
      points[pointIdx * 3 + 1] = model.radius * Math.cos(i * angle);
      points[pointIdx * 3 + 2] = model.radius * Math.sin(i * angle); // Add points to bottom cell in reverse order

      if (model.capping) {
        polys[model.resolution - cellLocation++ + 1] = pointIdx;
      }
    } // Add all triangle cells


    for (var _i = 0; _i < model.resolution; _i++) {
      polys[cellLocation++] = 3;
      polys[cellLocation++] = 0;
      polys[cellLocation++] = _i + 1;
      polys[cellLocation++] = _i + 2 > model.resolution ? 1 : _i + 2;
    } // Apply transformation to the points coordinates


    (_vtkMatrixBuilder$bui = _Common_Core_MatrixBuilder_js__WEBPACK_IMPORTED_MODULE_3__["default"].buildFromRadian()).translate.apply(_vtkMatrixBuilder$bui, _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(model.center)).rotateFromDirections([1, 0, 0], model.direction).apply(points);

    dataset = _Common_DataModel_PolyData_js__WEBPACK_IMPORTED_MODULE_2__["default"].newInstance();
    dataset.getPoints().setData(points, 3);
    dataset.getPolys().setData(polys, 1); // Update output

    outData[0] = dataset;
  } // Expose methods


  publicAPI.requestData = requestData;
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {
  height: 1.0,
  radius: 0.5,
  resolution: 6,
  center: [0, 0, 0],
  direction: [1.0, 0.0, 0.0],
  capping: true,
  pointType: 'Float64Array'
}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API

  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].obj(publicAPI, model);
  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].setGet(publicAPI, model, ['height', 'radius', 'resolution', 'capping']);
  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].setGetArray(publicAPI, model, ['center', 'direction'], 3);
  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].algo(publicAPI, model, 0, 1);
  vtkConeSource(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].newInstance(extend, 'vtkConeSource'); // ----------------------------------------------------------------------------

var vtkConeSource$1 = {
  newInstance: newInstance,
  extend: extend
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Filters/Sources/CubeSource.js":
/*!*********************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Filters/Sources/CubeSource.js ***!
  \*********************************************************************/
/*! exports provided: default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkCubeSource$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "../node_modules/@babel/runtime/helpers/toConsumableArray.js");
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _Common_Core_DataArray_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../Common/Core/DataArray.js */ "../node_modules/@kitware/vtk.js/Common/Core/DataArray.js");
/* harmony import */ var _Common_DataModel_PolyData_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../Common/DataModel/PolyData.js */ "../node_modules/@kitware/vtk.js/Common/DataModel/PolyData.js");
/* harmony import */ var _Common_Core_MatrixBuilder_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../Common/Core/MatrixBuilder.js */ "../node_modules/@kitware/vtk.js/Common/Core/MatrixBuilder.js");






// vtkCubeSource methods
// ----------------------------------------------------------------------------

function vtkCubeSource(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkCubeSource');

  function requestData(inData, outData) {
    var _vtkMatrixBuilder$bui;

    if (model.deleted) {
      return;
    }

    var polyData = _Common_DataModel_PolyData_js__WEBPACK_IMPORTED_MODULE_3__["default"].newInstance();
    outData[0] = polyData;
    var numberOfPolys = 6;
    var numberOfPoints = 24; // Define points

    var points = _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].newTypedArray(model.pointType, numberOfPoints * 3);
    polyData.getPoints().setData(points, 3);
    var normals = _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].newTypedArray(model.pointType, numberOfPoints * 3);
    var normalArray = _Common_Core_DataArray_js__WEBPACK_IMPORTED_MODULE_2__["default"].newInstance({
      name: 'Normals',
      values: normals,
      numberOfComponents: 3
    });
    polyData.getPointData().setNormals(normalArray);
    var tcdim = 2;

    if (model.generate3DTextureCoordinates === true) {
      tcdim = 3;
    }

    var textureCoords = _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].newTypedArray(model.pointType, numberOfPoints * tcdim);
    var tcoords = _Common_Core_DataArray_js__WEBPACK_IMPORTED_MODULE_2__["default"].newInstance({
      name: 'TextureCoordinates',
      values: textureCoords,
      numberOfComponents: tcdim
    });
    polyData.getPointData().setTCoords(tcoords);
    var x = [0.0, 0.0, 0.0];
    var n = [0.0, 0.0, 0.0];
    var tc = [0.0, 0.0];
    var pointIndex = 0;
    x[0] = -model.xLength / 2.0;
    n[0] = -1.0;
    n[1] = 0.0;
    n[2] = 0.0;

    for (var i = 0; i < 2; i++) {
      x[1] = -model.yLength / 2.0;

      for (var j = 0; j < 2; j++) {
        tc[1] = x[1] + 0.5;
        x[2] = -model.zLength / 2.0;

        for (var k = 0; k < 2; k++) {
          tc[0] = (x[2] + 0.5) * (1 - 2 * i);
          points[pointIndex * 3] = x[0];
          points[pointIndex * 3 + 1] = x[1];
          points[pointIndex * 3 + 2] = x[2];
          normals[pointIndex * 3] = n[0];
          normals[pointIndex * 3 + 1] = n[1];
          normals[pointIndex * 3 + 2] = n[2];

          if (tcdim === 2) {
            textureCoords[pointIndex * tcdim] = tc[0];
            textureCoords[pointIndex * tcdim + 1] = tc[1];
          } else {
            textureCoords[pointIndex * tcdim] = 2 * i - 1;
            textureCoords[pointIndex * tcdim + 1] = 2 * j - 1;
            textureCoords[pointIndex * tcdim + 2] = 2 * k - 1;
          }

          pointIndex++;
          x[2] += model.zLength;
        }

        x[1] += model.yLength;
      }

      x[0] += model.xLength;
      n[0] += 2.0;
    }

    x[1] = -model.yLength / 2.0;
    n[1] = -1.0;
    n[0] = 0.0;
    n[2] = 0.0;

    for (var _i = 0; _i < 2; _i++) {
      x[0] = -model.xLength / 2.0;

      for (var _j = 0; _j < 2; _j++) {
        tc[0] = (x[0] + 0.5) * (2 * _i - 1);
        x[2] = -model.zLength / 2.0;

        for (var _k = 0; _k < 2; _k++) {
          tc[1] = (x[2] + 0.5) * -1;
          points[pointIndex * 3] = x[0];
          points[pointIndex * 3 + 1] = x[1];
          points[pointIndex * 3 + 2] = x[2];
          normals[pointIndex * 3] = n[0];
          normals[pointIndex * 3 + 1] = n[1];
          normals[pointIndex * 3 + 2] = n[2];

          if (tcdim === 2) {
            textureCoords[pointIndex * tcdim] = tc[0];
            textureCoords[pointIndex * tcdim + 1] = tc[1];
          } else {
            textureCoords[pointIndex * tcdim] = 2 * _j - 1;
            textureCoords[pointIndex * tcdim + 1] = 2 * _i - 1;
            textureCoords[pointIndex * tcdim + 2] = 2 * _k - 1;
          }

          pointIndex++;
          x[2] += model.zLength;
        }

        x[0] += model.xLength;
      }

      x[1] += model.yLength;
      n[1] += 2.0;
    }

    x[2] = -model.zLength / 2.0;
    n[2] = -1.0;
    n[0] = 0.0;
    n[1] = 0.0;

    for (var _i2 = 0; _i2 < 2; _i2++) {
      x[1] = -model.yLength / 2.0;

      for (var _j2 = 0; _j2 < 2; _j2++) {
        tc[1] = x[1] + 0.5;
        x[0] = -model.xLength / 2.0;

        for (var _k2 = 0; _k2 < 2; _k2++) {
          tc[0] = (x[0] + 0.5) * (2 * _i2 - 1);
          points[pointIndex * 3] = x[0];
          points[pointIndex * 3 + 1] = x[1];
          points[pointIndex * 3 + 2] = x[2];
          normals[pointIndex * 3] = n[0];
          normals[pointIndex * 3 + 1] = n[1];
          normals[pointIndex * 3 + 2] = n[2];

          if (tcdim === 2) {
            textureCoords[pointIndex * tcdim] = tc[0];
            textureCoords[pointIndex * tcdim + 1] = tc[1];
          } else {
            textureCoords[pointIndex * tcdim] = 2 * _k2 - 1;
            textureCoords[pointIndex * tcdim + 1] = 2 * _j2 - 1;
            textureCoords[pointIndex * tcdim + 2] = 2 * _i2 - 1;
          }

          pointIndex++;
          x[0] += model.xLength;
        }

        x[1] += model.yLength;
      }

      x[2] += model.zLength;
      n[2] += 2.0;
    } // Apply rotation to the points coordinates and normals


    _Common_Core_MatrixBuilder_js__WEBPACK_IMPORTED_MODULE_4__["default"].buildFromDegree().rotateX(model.rotations[0]).rotateY(model.rotations[1]).rotateZ(model.rotations[2]).apply(points).apply(normals); // Apply transformation to the points coordinates

    (_vtkMatrixBuilder$bui = _Common_Core_MatrixBuilder_js__WEBPACK_IMPORTED_MODULE_4__["default"].buildFromRadian()).translate.apply(_vtkMatrixBuilder$bui, _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(model.center)).apply(points); // Define quads


    var polys = new Uint16Array(numberOfPolys * 5);
    polyData.getPolys().setData(polys, 1);
    var polyIndex = 0;
    polys[polyIndex++] = 4;
    polys[polyIndex++] = 0;
    polys[polyIndex++] = 1;
    polys[polyIndex++] = 3;
    polys[polyIndex++] = 2;
    polys[polyIndex++] = 4;
    polys[polyIndex++] = 4;
    polys[polyIndex++] = 6;
    polys[polyIndex++] = 7;
    polys[polyIndex++] = 5;
    polys[polyIndex++] = 4;
    polys[polyIndex++] = 8;
    polys[polyIndex++] = 10;
    polys[polyIndex++] = 11;
    polys[polyIndex++] = 9;
    polys[polyIndex++] = 4;
    polys[polyIndex++] = 12;
    polys[polyIndex++] = 13;
    polys[polyIndex++] = 15;
    polys[polyIndex++] = 14;
    polys[polyIndex++] = 4;
    polys[polyIndex++] = 16;
    polys[polyIndex++] = 18;
    polys[polyIndex++] = 19;
    polys[polyIndex++] = 17;
    polys[polyIndex++] = 4;
    polys[polyIndex++] = 20;
    polys[polyIndex++] = 21;
    polys[polyIndex++] = 23;
    polys[polyIndex] = 22;
  }

  publicAPI.setBounds = function () {
    var boundsArray = [];

    if (Array.isArray(arguments.length <= 0 ? undefined : arguments[0])) {
      boundsArray = arguments.length <= 0 ? undefined : arguments[0];
    } else {
      for (var i = 0; i < arguments.length; i++) {
        boundsArray.push(i < 0 || arguments.length <= i ? undefined : arguments[i]);
      }
    }

    if (boundsArray.length !== 6) {
      return;
    }

    model.xLength = boundsArray[1] - boundsArray[0];
    model.yLength = boundsArray[3] - boundsArray[2];
    model.zLength = boundsArray[5] - boundsArray[4];
    model.center = [(boundsArray[0] + boundsArray[1]) / 2.0, (boundsArray[2] + boundsArray[3]) / 2.0, (boundsArray[4] + boundsArray[5]) / 2.0];
  }; // Expose methods


  publicAPI.requestData = requestData;
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {
  xLength: 1.0,
  yLength: 1.0,
  zLength: 1.0,
  center: [0.0, 0.0, 0.0],
  rotations: [0.0, 0.0, 0.0],
  pointType: 'Float64Array',
  generate3DTextureCoordinates: false
}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API

  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].obj(publicAPI, model);
  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].setGet(publicAPI, model, ['xLength', 'yLength', 'zLength', 'generate3DTextureCoordinates']);
  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].setGetArray(publicAPI, model, ['center', 'rotations'], 3);
  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].algo(publicAPI, model, 0, 1);
  vtkCubeSource(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].newInstance(extend, 'vtkCubeSource'); // ----------------------------------------------------------------------------

var vtkCubeSource$1 = {
  newInstance: newInstance,
  extend: extend
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Filters/Sources/CylinderSource.js":
/*!*************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Filters/Sources/CylinderSource.js ***!
  \*************************************************************************/
/*! exports provided: default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkCylinderSource$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "../node_modules/@babel/runtime/helpers/toConsumableArray.js");
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _Common_Core_DataArray_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../Common/Core/DataArray.js */ "../node_modules/@kitware/vtk.js/Common/Core/DataArray.js");
/* harmony import */ var _Common_DataModel_PolyData_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../Common/DataModel/PolyData.js */ "../node_modules/@kitware/vtk.js/Common/DataModel/PolyData.js");
/* harmony import */ var _Common_Core_MatrixBuilder_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../Common/Core/MatrixBuilder.js */ "../node_modules/@kitware/vtk.js/Common/Core/MatrixBuilder.js");






// vtkCylinderSource methods
// ----------------------------------------------------------------------------

function vtkCylinderSource(publicAPI, model) {
  // Set our classname
  model.classHierarchy.push('vtkCylinderSource');

  function requestData(inData, outData) {
    var _vtkMatrixBuilder$bui, _vtkMatrixBuilder$bui2;

    if (model.deleted) {
      return;
    }

    var dataset = outData[0];
    var angle = 2.0 * Math.PI / model.resolution;
    var numberOfPoints = 2 * model.resolution;
    var numberOfPolys = 5 * model.resolution;

    if (model.capping) {
      numberOfPoints = 4 * model.resolution;
      numberOfPolys = 7 * model.resolution + 2;
    } // Points


    var points = _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].newTypedArray(model.pointType, numberOfPoints * 3); // Cells

    var cellLocation = 0;
    var polys = new Uint32Array(numberOfPolys); // Normals

    var normalsData = new Float32Array(numberOfPoints * 3);
    var normals = _Common_Core_DataArray_js__WEBPACK_IMPORTED_MODULE_2__["default"].newInstance({
      numberOfComponents: 3,
      values: normalsData,
      name: 'Normals'
    }); // Texture coords

    var tcData = new Float32Array(numberOfPoints * 2);
    var tcoords = _Common_Core_DataArray_js__WEBPACK_IMPORTED_MODULE_2__["default"].newInstance({
      numberOfComponents: 2,
      values: tcData,
      name: 'TCoords'
    }); // Generate points for all sides

    var nbot = [0.0, 0.0, 0.0];
    var ntop = [0.0, 0.0, 0.0];
    var xbot = [0.0, 0.0, 0.0];
    var xtop = [0.0, 0.0, 0.0];
    var tcbot = [0.0, 0.0];
    var tctop = [0.0, 0.0];
    var otherRadius = model.otherRadius == null ? model.radius : model.otherRadius;

    for (var i = 0; i < model.resolution; i++) {
      // x coordinate
      nbot[0] = Math.cos(i * angle + model.initAngle);
      ntop[0] = nbot[0];
      xbot[0] = model.radius * nbot[0] + model.center[0];
      xtop[0] = xbot[0];
      tcbot[0] = Math.abs(2.0 * i / model.resolution - 1.0);
      tctop[0] = tcbot[0]; // y coordinate

      xbot[1] = 0.5 * model.height + model.center[1];
      xtop[1] = -0.5 * model.height + model.center[1];
      tcbot[1] = 0.0;
      tctop[1] = 1.0; // z coordinate

      nbot[2] = -Math.sin(i * angle + model.initAngle);
      ntop[2] = nbot[2];
      xbot[2] = otherRadius * nbot[2] + model.center[2];
      xtop[2] = xbot[2];
      var pointIdx = 2 * i;

      for (var j = 0; j < 3; j++) {
        normalsData[pointIdx * 3 + j] = nbot[j];
        normalsData[(pointIdx + 1) * 3 + j] = ntop[j];
        points[pointIdx * 3 + j] = xbot[j];
        points[(pointIdx + 1) * 3 + j] = xtop[j];

        if (j < 2) {
          tcData[pointIdx * 2 + j] = tcbot[j];
          tcData[(pointIdx + 1) * 2 + j] = tctop[j];
        }
      }
    } // Generate polygons for sides


    for (var _i = 0; _i < model.resolution; _i++) {
      polys[cellLocation++] = 4;
      polys[cellLocation++] = 2 * _i;
      polys[cellLocation++] = 2 * _i + 1;
      var pt = (2 * _i + 3) % (2 * model.resolution);
      polys[cellLocation++] = pt;
      polys[cellLocation++] = pt - 1;
    }

    if (model.capping) {
      // Generate points for top/bottom polygons
      for (var _i2 = 0; _i2 < model.resolution; _i2++) {
        // x coordinate
        xbot[0] = model.radius * Math.cos(_i2 * angle + model.initAngle);
        xtop[0] = xbot[0];
        tcbot[0] = xbot[0];
        tctop[0] = xbot[0];
        xbot[0] += model.center[0];
        xtop[0] += model.center[0]; // y coordinate

        nbot[1] = 1.0;
        ntop[1] = -1.0;
        xbot[1] = 0.5 * model.height + model.center[1];
        xtop[1] = -0.5 * model.height + model.center[1]; // z coordinate

        xbot[2] = -otherRadius * Math.sin(_i2 * angle + model.initAngle);
        xtop[2] = xbot[2];
        tcbot[1] = xbot[2];
        tctop[1] = xbot[2];
        xbot[2] += model.center[2];
        xtop[2] += model.center[2];
        var botIdx = 2 * model.resolution + _i2;
        var topIdx = 3 * model.resolution + model.resolution - _i2 - 1;

        for (var _j = 0; _j < 3; _j++) {
          normalsData[3 * botIdx + _j] = nbot[_j];
          normalsData[3 * topIdx + _j] = ntop[_j];
          points[3 * botIdx + _j] = xbot[_j];
          points[3 * topIdx + _j] = xtop[_j];

          if (_j < 2) {
            tcData[2 * botIdx + _j] = tcbot[_j];
            tcData[2 * topIdx + _j] = tctop[_j];
          }
        }
      } // Generate polygons for top/bottom


      polys[cellLocation++] = model.resolution;

      for (var _i3 = 0; _i3 < model.resolution; _i3++) {
        polys[cellLocation++] = 2 * model.resolution + _i3;
      }

      polys[cellLocation++] = model.resolution;

      for (var _i4 = 0; _i4 < model.resolution; _i4++) {
        polys[cellLocation++] = 3 * model.resolution + _i4;
      }
    } // Apply transformation to the points coordinates


    (_vtkMatrixBuilder$bui = (_vtkMatrixBuilder$bui2 = _Common_Core_MatrixBuilder_js__WEBPACK_IMPORTED_MODULE_4__["default"].buildFromRadian()).translate.apply(_vtkMatrixBuilder$bui2, _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(model.center)).rotateFromDirections([0, 1, 0], model.direction)).translate.apply(_vtkMatrixBuilder$bui, _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(model.center.map(function (c) {
      return c * -1;
    }))).apply(points);

    dataset = _Common_DataModel_PolyData_js__WEBPACK_IMPORTED_MODULE_3__["default"].newInstance();
    dataset.getPoints().setData(points, 3);
    dataset.getPolys().setData(polys, 1);
    dataset.getPointData().setNormals(normals);
    dataset.getPointData().setTCoords(tcoords); // Update output

    outData[0] = dataset;
  } // Expose methods


  publicAPI.requestData = requestData;
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {
  height: 1.0,
  initAngle: 0,
  radius: 1.0,
  resolution: 6,
  center: [0, 0, 0],
  direction: [0.0, 1.0, 0.0],
  capping: true,
  pointType: 'Float64Array'
}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API

  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].obj(publicAPI, model);
  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].setGet(publicAPI, model, ['height', 'initAngle', 'otherRadius', 'radius', 'resolution', 'capping']);
  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].setGetArray(publicAPI, model, ['center', 'direction'], 3);
  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].algo(publicAPI, model, 0, 1);
  vtkCylinderSource(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].newInstance(extend, 'vtkCylinderSource'); // ----------------------------------------------------------------------------

var vtkCylinderSource$1 = {
  newInstance: newInstance,
  extend: extend
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Filters/Sources/LineSource.js":
/*!*********************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Filters/Sources/LineSource.js ***!
  \*********************************************************************/
/*! exports provided: default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkLineSource$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _Common_DataModel_PolyData_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../Common/DataModel/PolyData.js */ "../node_modules/@kitware/vtk.js/Common/DataModel/PolyData.js");
/* harmony import */ var _Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../Common/Core/Math/index.js */ "../node_modules/@kitware/vtk.js/Common/Core/Math/index.js");




var vtkWarningMacro = _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].vtkWarningMacro; // ----------------------------------------------------------------------------
// vtkLineSource methods
// ----------------------------------------------------------------------------

function vtkLineSource(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkLineSource');

  publicAPI.requestData = function (inData, outData) {
    if (model.deleted) {
      return;
    }

    var dataset = outData[0]; // Check input

    var pointDataType = dataset ? dataset.getPoints().getDataType() : model.pointType;
    var pd = _Common_DataModel_PolyData_js__WEBPACK_IMPORTED_MODULE_1__["default"].newInstance();
    var v21 = [];
    Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_2__["g"])(model.point2, model.point1, v21);

    if (Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_2__["n"])(v21) <= 0.0) {
      vtkWarningMacro('Zero-length line definition');
      return;
    } // hand create a line with special scalars


    var res = model.resolution;
    var numPts = res + 1; // Points

    var points = _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].newTypedArray(pointDataType, numPts * 3);
    pd.getPoints().setData(points, 3); // Cells

    var lines = new Uint32Array(numPts + 1);
    pd.getLines().setData(lines, 1);
    var idx = 0;
    var t = 0.0;

    for (var i = 0; i < res + 1; i++) {
      t = i / res;
      points[idx * 3] = model.point1[0] + t * v21[0];
      points[idx * 3 + 1] = model.point1[1] + t * v21[1];
      points[idx * 3 + 2] = model.point1[2] + t * v21[2];
      idx++;
    } // Generate line connectivity
    //


    idx = 0;
    lines[0] = numPts;

    for (var _i = 0; _i < numPts; _i++) {
      lines[_i + 1] = _i;
    } // Update output


    outData[0] = pd;
  };
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {
  resolution: 10,
  point1: [-1, 0, 0],
  point2: [1, 0, 0],
  pointType: 'Float64Array'
}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API

  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].obj(publicAPI, model);
  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].setGet(publicAPI, model, ['resolution']);
  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].setGetArray(publicAPI, model, ['point1', 'point2'], 3);
  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].algo(publicAPI, model, 0, 1);
  vtkLineSource(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].newInstance(extend, 'vtkLineSource'); // ----------------------------------------------------------------------------

var vtkLineSource$1 = {
  newInstance: newInstance,
  extend: extend
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Filters/Sources/PlaneSource.js":
/*!**********************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Filters/Sources/PlaneSource.js ***!
  \**********************************************************************/
/*! exports provided: default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkPlaneSource$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "../node_modules/@babel/runtime/helpers/toConsumableArray.js");
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! gl-matrix */ "../node_modules/gl-matrix/esm/index.js");
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _Common_Core_DataArray_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../Common/Core/DataArray.js */ "../node_modules/@kitware/vtk.js/Common/Core/DataArray.js");
/* harmony import */ var _Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../Common/Core/Math/index.js */ "../node_modules/@kitware/vtk.js/Common/Core/Math/index.js");
/* harmony import */ var _Common_Core_MatrixBuilder_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../Common/Core/MatrixBuilder.js */ "../node_modules/@kitware/vtk.js/Common/Core/MatrixBuilder.js");
/* harmony import */ var _Common_DataModel_PolyData_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../Common/DataModel/PolyData.js */ "../node_modules/@kitware/vtk.js/Common/DataModel/PolyData.js");








var vtkWarningMacro = _macros_js__WEBPACK_IMPORTED_MODULE_2__["default"].vtkWarningMacro;
var EPSILON = 1e-6; // ----------------------------------------------------------------------------
// vtkPlaneSource methods
// ----------------------------------------------------------------------------

function vtkPlaneSource(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkPlaneSource');

  publicAPI.requestData = function (inData, outData) {
    if (model.deleted) {
      return;
    }

    var dataset = outData[0]; // Check input

    var pointDataType = dataset ? dataset.getPoints().getDataType() : model.pointType;
    var pd = _Common_DataModel_PolyData_js__WEBPACK_IMPORTED_MODULE_6__["default"].newInstance();
    var v10 = [];
    var v20 = [];
    Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_4__["g"])(model.point1, model.origin, v10);
    Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_4__["g"])(model.point2, model.origin, v20);

    if (!publicAPI.updatePlane(v10, v20)) {
      vtkWarningMacro('Bad plane definition');
      return;
    } // hand create a plane with special scalars


    var xres = model.xResolution;
    var yres = model.yResolution;
    var numPts = (xres + 1) * (yres + 1);
    var numPolys = xres * yres; // Points

    var points = _macros_js__WEBPACK_IMPORTED_MODULE_2__["default"].newTypedArray(pointDataType, numPts * 3);
    pd.getPoints().setData(points, 3); // Cells

    var polys = new Uint32Array(5 * numPolys);
    pd.getPolys().setData(polys, 1); // Normals

    var normalsData = new Float32Array(numPts * 3);
    var normals = _Common_Core_DataArray_js__WEBPACK_IMPORTED_MODULE_3__["default"].newInstance({
      numberOfComponents: 3,
      values: normalsData,
      name: 'Normals'
    });
    pd.getPointData().setNormals(normals); // Texture coords

    var tcData = new Float32Array(numPts * 2);
    var tcoords = _Common_Core_DataArray_js__WEBPACK_IMPORTED_MODULE_3__["default"].newInstance({
      numberOfComponents: 2,
      values: tcData,
      name: 'TextureCoordinates'
    });
    pd.getPointData().setTCoords(tcoords);
    var tc = new Float32Array(2);
    var idx = 0;

    for (var j = 0; j < yres + 1; j++) {
      tc[1] = j / yres;

      for (var i = 0; i < xres + 1; i++) {
        tc[0] = i / xres;
        points[idx * 3] = model.origin[0] + tc[0] * v10[0] + tc[1] * v20[0];
        points[idx * 3 + 1] = model.origin[1] + tc[0] * v10[1] + tc[1] * v20[1];
        points[idx * 3 + 2] = model.origin[2] + tc[0] * v10[2] + tc[1] * v20[2];
        tcData[idx * 2] = tc[0];
        tcData[idx * 2 + 1] = tc[1];
        normalsData[idx * 3] = model.normal[0];
        normalsData[idx * 3 + 1] = model.normal[1];
        normalsData[idx * 3 + 2] = model.normal[2];
        idx++;
      }
    } // Generate polygon connectivity
    //


    idx = 0;

    for (var _j = 0; _j < yres; _j++) {
      for (var _i = 0; _i < xres; _i++) {
        polys[idx * 5 + 0] = 4;
        polys[idx * 5 + 1] = _i + _j * (xres + 1);
        polys[idx * 5 + 2] = polys[idx * 5 + 1] + 1;
        polys[idx * 5 + 3] = polys[idx * 5 + 1] + xres + 2;
        polys[idx * 5 + 4] = polys[idx * 5 + 1] + xres + 1;
        idx++;
      }
    } // Update output


    outData[0] = pd;
  };

  publicAPI.setNormal = function () {
    var n = [];

    if (arguments.length === 1 || Array.isArray(arguments.length <= 0 ? undefined : arguments[0])) {
      n = _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(arguments.length <= 0 ? undefined : arguments[0]);
    } else if (arguments.length === 3) {
      n = [arguments.length <= 0 ? undefined : arguments[0], arguments.length <= 1 ? undefined : arguments[1], arguments.length <= 2 ? undefined : arguments[2]];
    }

    if (Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_4__["l"])(n) !== 0) {
      var dp = Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_4__["d"])(model.normal, n);
      var theta = 0;
      var rotationVector = [];

      if (dp < 1.0) {
        if (dp <= -1.0) {
          theta = Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_4__["r"])(180.0);
          Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_4__["g"])(model.point1, model.origin, rotationVector);
        } else {
          Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_4__["j"])(model.normal, n, rotationVector);
          theta = Math.acos(dp);
        }

        publicAPI.rotate(theta, rotationVector);
      }
    }
  };
  /**
   * Rotate plane around a given axis
   * @param {float} theta Angle (radian) to rotate about
   * @param {vec3} rotationAxis Axis to rotate around
   */


  publicAPI.rotate = function (angle, rotationAxis) {
    if (Math.abs(angle) < EPSILON) {
      return;
    } // Create rotation matrix


    var transform = gl_matrix__WEBPACK_IMPORTED_MODULE_1__["mat4"].identity(new Float64Array(16));
    var negCenter = [];
    gl_matrix__WEBPACK_IMPORTED_MODULE_1__["vec3"].negate(negCenter, model.center);
    gl_matrix__WEBPACK_IMPORTED_MODULE_1__["mat4"].translate(transform, transform, model.center);
    gl_matrix__WEBPACK_IMPORTED_MODULE_1__["mat4"].rotate(transform, transform, angle, rotationAxis);
    gl_matrix__WEBPACK_IMPORTED_MODULE_1__["mat4"].translate(transform, transform, negCenter);
    gl_matrix__WEBPACK_IMPORTED_MODULE_1__["vec3"].transformMat4(model.origin, model.origin, transform);
    gl_matrix__WEBPACK_IMPORTED_MODULE_1__["vec3"].transformMat4(model.point1, model.point1, transform);
    gl_matrix__WEBPACK_IMPORTED_MODULE_1__["vec3"].transformMat4(model.point2, model.point2, transform);
    _Common_Core_MatrixBuilder_js__WEBPACK_IMPORTED_MODULE_5__["default"].buildFromRadian().rotate(angle, rotationAxis).apply(model.normal);
    publicAPI.modified();
  };

  publicAPI.setCenter = function () {
    var c = [];

    if (arguments.length === 1 || Array.isArray(arguments.length <= 0 ? undefined : arguments[0])) {
      c = _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(arguments.length <= 0 ? undefined : arguments[0]);
    } else if (arguments.length === 3) {
      c = [arguments.length <= 0 ? undefined : arguments[0], arguments.length <= 1 ? undefined : arguments[1], arguments.length <= 2 ? undefined : arguments[2]];
    }

    if (!gl_matrix__WEBPACK_IMPORTED_MODULE_1__["vec3"].exactEquals(c, model.center)) {
      var v1 = [];
      Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_4__["g"])(model.point1, model.origin, v1);
      var v2 = [];
      Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_4__["g"])(model.point2, model.origin, v2);

      for (var i = 0; i < 3; i++) {
        model.center[i] = c[i];
        model.origin[i] = model.center[i] - 0.5 * (v1[i] + v2[i]);
        model.point1[i] = model.origin[i] + v1[i];
        model.point2[i] = model.origin[i] + v2[i];
      }

      publicAPI.modified();
    }
  };

  publicAPI.setPoint1 = function () {
    var point1 = [];

    if (arguments.length === 1 || Array.isArray(arguments.length <= 0 ? undefined : arguments[0])) {
      point1 = _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(arguments.length <= 0 ? undefined : arguments[0]);
    } else if (arguments.length === 3) {
      point1 = [arguments.length <= 0 ? undefined : arguments[0], arguments.length <= 1 ? undefined : arguments[1], arguments.length <= 2 ? undefined : arguments[2]];
    }

    if (!gl_matrix__WEBPACK_IMPORTED_MODULE_1__["vec3"].exactEquals(point1, model.point1)) {
      var v1 = [];
      var v2 = [];
      model.point1 = _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(point1);
      Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_4__["g"])(model.point1, model.origin, v1);
      Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_4__["g"])(model.point2, model.origin, v2); // set plane normal

      publicAPI.updatePlane(v1, v2);
      publicAPI.modified();
    }
  };

  publicAPI.setPoint2 = function () {
    var point2 = [];

    if (arguments.length === 1 || Array.isArray(arguments.length <= 0 ? undefined : arguments[0])) {
      point2 = _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(arguments.length <= 0 ? undefined : arguments[0]);
    } else if (arguments.length === 3) {
      point2 = [arguments.length <= 0 ? undefined : arguments[0], arguments.length <= 1 ? undefined : arguments[1], arguments.length <= 2 ? undefined : arguments[2]];
    }

    if (!gl_matrix__WEBPACK_IMPORTED_MODULE_1__["vec3"].exactEquals(point2, model.point2)) {
      var v1 = [];
      var v2 = [];
      model.point2 = _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(point2);
      Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_4__["g"])(model.point1, model.origin, v1);
      Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_4__["g"])(model.point2, model.origin, v2); // set plane normal

      publicAPI.updatePlane(v1, v2);
      publicAPI.modified();
    }
  };

  publicAPI.updatePlane = function (v1, v2) {
    // set plane center
    for (var i = 0; i < 3; i++) {
      model.center[i] = model.origin[i] + 0.5 * (v1[i] + v2[i]);
    } // set plane normal


    Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_4__["j"])(v1, v2, model.normal);
    return Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_4__["l"])(model.normal) !== 0.0;
  };
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {
  xResolution: 10,
  yResolution: 10,
  origin: [0, 0, 0],
  point1: [1, 0, 0],
  point2: [0, 1, 0],
  pointType: 'Float64Array'
}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues);
  model.normal = [0, 0, 1];
  model.center = [0, 0, 0]; // Build VTK API

  _macros_js__WEBPACK_IMPORTED_MODULE_2__["default"].obj(publicAPI, model);
  _macros_js__WEBPACK_IMPORTED_MODULE_2__["default"].setGet(publicAPI, model, ['xResolution', 'yResolution']);
  _macros_js__WEBPACK_IMPORTED_MODULE_2__["default"].setGetArray(publicAPI, model, ['origin'], 3);
  _macros_js__WEBPACK_IMPORTED_MODULE_2__["default"].getArray(publicAPI, model, ['point1', 'point2', 'normal', 'center'], 3);
  _macros_js__WEBPACK_IMPORTED_MODULE_2__["default"].algo(publicAPI, model, 0, 1);
  vtkPlaneSource(publicAPI, model);
  publicAPI.setPoint1(model.point1);
  publicAPI.setPoint2(model.point2);
} // ----------------------------------------------------------------------------

var newInstance = _macros_js__WEBPACK_IMPORTED_MODULE_2__["default"].newInstance(extend, 'vtkPlaneSource'); // ----------------------------------------------------------------------------

var vtkPlaneSource$1 = {
  newInstance: newInstance,
  extend: extend
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Filters/Sources/PointSource.js":
/*!**********************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Filters/Sources/PointSource.js ***!
  \**********************************************************************/
/*! exports provided: default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkPointSource$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../Common/Core/Math/index.js */ "../node_modules/@kitware/vtk.js/Common/Core/Math/index.js");
/* harmony import */ var _Common_DataModel_PolyData_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../Common/DataModel/PolyData.js */ "../node_modules/@kitware/vtk.js/Common/DataModel/PolyData.js");




// vtkPointSource methods
// ----------------------------------------------------------------------------

function vtkPointSource(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkPointSource');

  publicAPI.requestData = function (inData, outData) {
    if (model.deleted) {
      return;
    }

    var dataset = outData[0]; // Check input

    var pointDataType = dataset ? dataset.getPoints().getDataType() : model.pointType;
    var pd = _Common_DataModel_PolyData_js__WEBPACK_IMPORTED_MODULE_2__["default"].newInstance(); // hand create a point cloud

    var numPts = model.numberOfPoints; // Points

    var points = _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].newTypedArray(pointDataType, numPts * 3);
    pd.getPoints().setData(points, 3); // Cells

    var verts = new Uint32Array(numPts + 1);
    pd.getVerts().setData(verts, 1);
    var cosphi;
    var sinphi;
    var rho;
    var radius;
    var theta;

    for (var i = 0; i < numPts; i++) {
      cosphi = 1 - 2.0 * Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_1__["w"])();
      sinphi = Math.sqrt(1 - cosphi * cosphi);
      rho = model.radius * Math.pow(Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_1__["w"])(), 0.33333333);
      radius = rho * sinphi;
      theta = 2.0 * Math.PI * Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_1__["w"])();
      points[i * 3] = model.center[0] + radius * Math.cos(theta);
      points[i * 3 + 1] = model.center[1] + radius * Math.sin(theta);
      points[i * 3 + 2] = model.center[2] + rho * cosphi;
    } // Generate point connectivity
    //


    verts[0] = numPts;

    for (var _i = 0; _i < numPts; _i++) {
      verts[_i + 1] = _i;
    } // Update output


    outData[0] = pd;
  };
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {
  numberOfPoints: 10,
  center: [0, 0, 0],
  radius: 0.5,
  pointType: 'Float64Array'
}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API

  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].obj(publicAPI, model);
  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].setGet(publicAPI, model, ['numberOfPoints', 'radius']);
  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].setGetArray(publicAPI, model, ['center'], 3);
  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].algo(publicAPI, model, 0, 1);
  vtkPointSource(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].newInstance(extend, 'vtkPointSource'); // ----------------------------------------------------------------------------

var vtkPointSource$1 = {
  newInstance: newInstance,
  extend: extend
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Filters/Sources/SphereSource.js":
/*!***********************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Filters/Sources/SphereSource.js ***!
  \***********************************************************************/
/*! exports provided: default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkSphereSource$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _Common_DataModel_PolyData_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../Common/DataModel/PolyData.js */ "../node_modules/@kitware/vtk.js/Common/DataModel/PolyData.js");
/* harmony import */ var _Common_Core_DataArray_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../Common/Core/DataArray.js */ "../node_modules/@kitware/vtk.js/Common/Core/DataArray.js");




// vtkSphereSource methods
// ----------------------------------------------------------------------------

function vtkSphereSource(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkSphereSource');

  publicAPI.requestData = function (inData, outData) {
    if (model.deleted) {
      return;
    }

    var dataset = outData[0];
    var pointDataType = dataset ? dataset.getPoints().getDataType() : model.pointType;
    dataset = _Common_DataModel_PolyData_js__WEBPACK_IMPORTED_MODULE_1__["default"].newInstance(); // ----------------------------------------------------------------------

    var numPoles = 0; // Check data, determine increments, and convert to radians

    var thetaResolution = model.thetaResolution;
    var startTheta = model.startTheta < model.endTheta ? model.startTheta : model.endTheta;
    startTheta *= Math.PI / 180.0;
    var endTheta = model.endTheta > model.startTheta ? model.endTheta : model.startTheta;
    endTheta *= Math.PI / 180.0;
    var startPhi = model.startPhi < model.endPhi ? model.startPhi : model.endPhi;
    startPhi *= Math.PI / 180.0;
    var endPhi = model.endPhi > model.startPhi ? model.endPhi : model.startPhi;
    endPhi *= Math.PI / 180.0;

    if (Math.abs(startTheta - endTheta) < 2.0 * Math.PI) {
      ++thetaResolution;
    }

    var deltaTheta = (endTheta - startTheta) / model.thetaResolution;
    var jStart = model.startPhi <= 0.0 ? 1 : 0;
    var jEnd = model.phiResolution + (model.endPhi >= 180.0 ? -1 : 0);
    var numPts = model.phiResolution * thetaResolution + 2;
    var numPolys = model.phiResolution * 2 * model.thetaResolution; // Points

    var pointIdx = 0;
    var points = _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].newTypedArray(pointDataType, numPts * 3); // Normals

    var normals = new Float32Array(numPts * 3); // Cells

    var cellLocation = 0;
    var polys = new Uint32Array(numPolys * 5); // Create north pole if needed

    if (model.startPhi <= 0.0) {
      points[pointIdx * 3 + 0] = model.center[0];
      points[pointIdx * 3 + 1] = model.center[1];
      points[pointIdx * 3 + 2] = model.center[2] + model.radius;
      normals[pointIdx * 3 + 0] = 0;
      normals[pointIdx * 3 + 1] = 0;
      normals[pointIdx * 3 + 2] = 1;
      pointIdx++;
      numPoles++;
    } // Create south pole if needed


    if (model.endPhi >= 180.0) {
      points[pointIdx * 3 + 0] = model.center[0];
      points[pointIdx * 3 + 1] = model.center[1];
      points[pointIdx * 3 + 2] = model.center[2] - model.radius;
      normals[pointIdx * 3 + 0] = 0;
      normals[pointIdx * 3 + 1] = 0;
      normals[pointIdx * 3 + 2] = -1;
      pointIdx++;
      numPoles++;
    }

    var phiResolution = model.phiResolution - numPoles;
    var deltaPhi = (endPhi - startPhi) / (model.phiResolution - 1); // Create intermediate points

    for (var i = 0; i < thetaResolution; i++) {
      var theta = startTheta + i * deltaTheta;

      for (var j = jStart; j < jEnd; j++) {
        var phi = startPhi + j * deltaPhi;
        var radius = model.radius * Math.sin(phi);
        normals[pointIdx * 3 + 0] = radius * Math.cos(theta);
        normals[pointIdx * 3 + 1] = radius * Math.sin(theta);
        normals[pointIdx * 3 + 2] = model.radius * Math.cos(phi);
        points[pointIdx * 3 + 0] = normals[pointIdx * 3 + 0] + model.center[0];
        points[pointIdx * 3 + 1] = normals[pointIdx * 3 + 1] + model.center[1];
        points[pointIdx * 3 + 2] = normals[pointIdx * 3 + 2] + model.center[2];
        var norm = Math.sqrt(normals[pointIdx * 3 + 0] * normals[pointIdx * 3 + 0] + normals[pointIdx * 3 + 1] * normals[pointIdx * 3 + 1] + normals[pointIdx * 3 + 2] * normals[pointIdx * 3 + 2]);
        norm = norm === 0 ? 1 : norm;
        normals[pointIdx * 3 + 0] /= norm;
        normals[pointIdx * 3 + 1] /= norm;
        normals[pointIdx * 3 + 2] /= norm;
        pointIdx++;
      }
    } // Generate mesh connectivity


    var base = phiResolution * thetaResolution;

    if (Math.abs(startTheta - endTheta) < 2.0 * Math.PI) {
      --thetaResolution;
    } // around north pole


    if (model.startPhi <= 0.0) {
      for (var _i = 0; _i < thetaResolution; _i++) {
        polys[cellLocation++] = 3;
        polys[cellLocation++] = phiResolution * _i + numPoles;
        polys[cellLocation++] = phiResolution * (_i + 1) % base + numPoles;
        polys[cellLocation++] = 0;
      }
    } // around south pole


    if (model.endPhi >= 180.0) {
      var numOffset = phiResolution - 1 + numPoles;

      for (var _i2 = 0; _i2 < thetaResolution; _i2++) {
        polys[cellLocation++] = 3;
        polys[cellLocation++] = phiResolution * _i2 + numOffset;
        polys[cellLocation++] = numPoles - 1;
        polys[cellLocation++] = phiResolution * (_i2 + 1) % base + numOffset;
      }
    } // bands in-between poles


    for (var _i3 = 0; _i3 < thetaResolution; _i3++) {
      for (var _j = 0; _j < phiResolution - 1; _j++) {
        var a = phiResolution * _i3 + _j + numPoles;
        var b = a + 1;
        var c = (phiResolution * (_i3 + 1) + _j) % base + numPoles + 1;

        if (!model.latLongTessellation) {
          polys[cellLocation++] = 3;
          polys[cellLocation++] = a;
          polys[cellLocation++] = b;
          polys[cellLocation++] = c;
          polys[cellLocation++] = 3;
          polys[cellLocation++] = a;
          polys[cellLocation++] = c;
          polys[cellLocation++] = c - 1;
        } else {
          polys[cellLocation++] = 4;
          polys[cellLocation++] = a;
          polys[cellLocation++] = b;
          polys[cellLocation++] = c;
          polys[cellLocation++] = c - 1;
        }
      }
    } // Squeeze


    points = points.subarray(0, pointIdx * 3);
    dataset.getPoints().setData(points, 3);
    normals = normals.subarray(0, pointIdx * 3);
    var normalArray = _Common_Core_DataArray_js__WEBPACK_IMPORTED_MODULE_2__["default"].newInstance({
      name: 'Normals',
      values: normals,
      numberOfComponents: 3
    });
    dataset.getPointData().setNormals(normalArray);
    polys = polys.subarray(0, cellLocation);
    dataset.getPolys().setData(polys, 1); // Update output

    outData[0] = dataset;
  };
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {
  radius: 0.5,
  latLongTessellation: false,
  thetaResolution: 8,
  startTheta: 0.0,
  endTheta: 360.0,
  phiResolution: 8,
  startPhi: 0.0,
  endPhi: 180.0,
  center: [0, 0, 0],
  pointType: 'Float64Array'
}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API

  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].obj(publicAPI, model);
  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].setGet(publicAPI, model, ['radius', 'latLongTessellation', 'thetaResolution', 'startTheta', 'endTheta', 'phiResolution', 'startPhi', 'endPhi']);
  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].setGetArray(publicAPI, model, ['center'], 3);
  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].algo(publicAPI, model, 0, 1);
  vtkSphereSource(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].newInstance(extend, 'vtkSphereSource'); // ----------------------------------------------------------------------------

var vtkSphereSource$1 = {
  newInstance: newInstance,
  extend: extend
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/IO/Core/BinaryHelper.js":
/*!***************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/IO/Core/BinaryHelper.js ***!
  \***************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return BinaryHelper; });
/**
 * Converts a binary buffer in an ArrayBuffer to a string.
 *
 * Note this does not take encoding into consideration, so don't
 * expect proper Unicode or any other encoding.
 */
function arrayBufferToString(arrayBuffer) {
  var decoder = new TextDecoder('latin1');
  return decoder.decode(arrayBuffer);
}
/**
 * Extracts binary data out of a file ArrayBuffer given a prefix/suffix.
 */


function extractBinary(arrayBuffer, prefixRegex) {
  var suffixRegex = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
  var str = arrayBufferToString(arrayBuffer);
  var prefixMatch = prefixRegex.exec(str);

  if (!prefixMatch) {
    return {
      text: str
    };
  }

  var dataStartIndex = prefixMatch.index + prefixMatch[0].length;
  var strFirstHalf = str.substring(0, dataStartIndex);
  var retVal = null;
  var suffixMatch = suffixRegex ? suffixRegex.exec(str) : null;

  if (suffixMatch) {
    var strSecondHalf = str.substr(suffixMatch.index);
    retVal = {
      text: strFirstHalf + strSecondHalf,
      binaryBuffer: arrayBuffer.slice(dataStartIndex, suffixMatch.index)
    };
  } else {
    // no suffix, so just take all the data starting from dataStartIndex
    retVal = {
      text: strFirstHalf,
      binaryBuffer: arrayBuffer.slice(dataStartIndex)
    };
  }

  return retVal;
}

var BinaryHelper = {
  arrayBufferToString: arrayBufferToString,
  extractBinary: extractBinary
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/IO/Core/DataAccessHelper.js":
/*!*******************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/IO/Core/DataAccessHelper.js ***!
  \*******************************************************************/
/*! exports provided: default, get, has, registerType */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return DataAccessHelper; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "get", function() { return get; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "has", function() { return has; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "registerType", function() { return registerType; });
var TYPE_MAPPING = {};
function has(type) {
  return !!TYPE_MAPPING[type];
}
function get() {
  var type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'http';
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  return TYPE_MAPPING[type](options);
}
function registerType(type, fn) {
  TYPE_MAPPING[type] = fn;
}
var DataAccessHelper = {
  get: get,
  has: has,
  registerType: registerType
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/IO/Core/DataAccessHelper/HttpDataAccessHelper.js":
/*!****************************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/IO/Core/DataAccessHelper/HttpDataAccessHelper.js ***!
  \****************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return HttpDataAccessHelper; });
/* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ "../node_modules/@babel/runtime/helpers/slicedToArray.js");
/* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var pako__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! pako */ "../node_modules/pako/dist/pako.esm.mjs");
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _Common_Core_Endian_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../Common/Core/Endian.js */ "../node_modules/@kitware/vtk.js/Common/Core/Endian.js");
/* harmony import */ var _Common_Core_DataArray_Constants_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../Common/Core/DataArray/Constants.js */ "../node_modules/@kitware/vtk.js/Common/Core/DataArray/Constants.js");
/* harmony import */ var _DataAccessHelper_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../DataAccessHelper.js */ "../node_modules/@kitware/vtk.js/IO/Core/DataAccessHelper.js");







var vtkErrorMacro = _macros_js__WEBPACK_IMPORTED_MODULE_2__["default"].vtkErrorMacro,
    vtkDebugMacro = _macros_js__WEBPACK_IMPORTED_MODULE_2__["default"].vtkDebugMacro;
/* eslint-disable prefer-promise-reject-errors */

var requestCount = 0;

function openAsyncXHR(method, url) {
  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  var xhr = new XMLHttpRequest();
  xhr.open(method, url, true);

  if (options.headers) {
    Object.entries(options.headers).forEach(function (_ref) {
      var _ref2 = _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0___default()(_ref, 2),
          key = _ref2[0],
          value = _ref2[1];

      return xhr.setRequestHeader(key, value);
    });
  }

  if (options.progressCallback) {
    xhr.addEventListener('progress', options.progressCallback);
  }

  return xhr;
}

function fetchBinary(url) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  if (options && options.compression && options.compression !== 'gz') {
    vtkErrorMacro('Supported algorithms are: [gz]');
    vtkErrorMacro("Unkown compression algorithm: ".concat(options.compression));
  }

  return new Promise(function (resolve, reject) {
    var xhr = openAsyncXHR('GET', url, options);

    xhr.onreadystatechange = function (e) {
      if (xhr.readyState === 4) {
        if (xhr.status === 200 || xhr.status === 0) {
          if (options.compression) {
            resolve(pako__WEBPACK_IMPORTED_MODULE_1__["default"].inflate(new Uint8Array(xhr.response), {
              to: 'arraybuffer'
            }).buffer);
          } else {
            resolve(xhr.response);
          }
        } else {
          reject({
            xhr: xhr,
            e: e
          });
        }
      }
    }; // Make request


    xhr.responseType = 'arraybuffer';
    xhr.send();
  });
}

function fetchArray(instance, baseURL, array) {
  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};

  if (array.ref && !array.ref.pending) {
    return new Promise(function (resolve, reject) {
      var url = null;

      if (array.ref.url) {
        url = array.ref.url;
      } else {
        url = [baseURL, array.ref.basepath, options.compression ? "".concat(array.ref.id, ".gz") : array.ref.id].join('/');
      }

      var xhr = openAsyncXHR('GET', url, options);

      xhr.onreadystatechange = function (e) {
        if (xhr.readyState === 1) {
          array.ref.pending = true;

          if (++requestCount === 1 && instance !== null && instance !== void 0 && instance.invokeBusy) {
            instance.invokeBusy(true);
          }
        }

        if (xhr.readyState === 4) {
          array.ref.pending = false;

          if (xhr.status === 200 || xhr.status === 0) {
            array.buffer = xhr.response;

            if (options.compression) {
              if (array.dataType === 'string' || array.dataType === 'JSON') {
                array.buffer = pako__WEBPACK_IMPORTED_MODULE_1__["default"].inflate(new Uint8Array(array.buffer), {
                  to: 'string'
                });
              } else {
                array.buffer = pako__WEBPACK_IMPORTED_MODULE_1__["default"].inflate(new Uint8Array(array.buffer)).buffer;
              }
            }

            if (array.ref.encode === 'JSON') {
              array.values = JSON.parse(array.buffer);
            } else {
              if (_Common_Core_Endian_js__WEBPACK_IMPORTED_MODULE_3__["default"].ENDIANNESS !== array.ref.encode && _Common_Core_Endian_js__WEBPACK_IMPORTED_MODULE_3__["default"].ENDIANNESS) {
                // Need to swap bytes
                vtkDebugMacro("Swap bytes of ".concat(array.name));
                _Common_Core_Endian_js__WEBPACK_IMPORTED_MODULE_3__["default"].swapBytes(array.buffer, _Common_Core_DataArray_Constants_js__WEBPACK_IMPORTED_MODULE_4__["DataTypeByteSize"][array.dataType]);
              }

              array.values = _macros_js__WEBPACK_IMPORTED_MODULE_2__["default"].newTypedArray(array.dataType, array.buffer);
            }

            if (array.values.length !== array.size) {
              vtkErrorMacro("Error in FetchArray: ".concat(array.name, ", does not have the proper array size. Got ").concat(array.values.length, ", instead of ").concat(array.size));
            } // Done with the ref and work


            delete array.ref;

            if (--requestCount === 0 && instance !== null && instance !== void 0 && instance.invokeBusy) {
              instance.invokeBusy(false);
            }

            if (instance !== null && instance !== void 0 && instance.modified) {
              instance.modified();
            }

            resolve(array);
          } else {
            reject({
              xhr: xhr,
              e: e
            });
          }
        }
      }; // Make request


      xhr.responseType = options.compression || array.dataType !== 'string' ? 'arraybuffer' : 'text';
      xhr.send();
    });
  }

  return Promise.resolve(array);
} // ----------------------------------------------------------------------------


function fetchJSON(instance, url) {
  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  return new Promise(function (resolve, reject) {
    var xhr = openAsyncXHR('GET', url, options);

    xhr.onreadystatechange = function (e) {
      if (xhr.readyState === 1) {
        if (++requestCount === 1 && instance !== null && instance !== void 0 && instance.invokeBusy) {
          instance.invokeBusy(true);
        }
      }

      if (xhr.readyState === 4) {
        if (--requestCount === 0 && instance !== null && instance !== void 0 && instance.invokeBusy) {
          instance.invokeBusy(false);
        }

        if (xhr.status === 200 || xhr.status === 0) {
          if (options.compression) {
            resolve(JSON.parse(pako__WEBPACK_IMPORTED_MODULE_1__["default"].inflate(new Uint8Array(xhr.response), {
              to: 'string'
            })));
          } else {
            resolve(JSON.parse(xhr.responseText));
          }
        } else {
          reject({
            xhr: xhr,
            e: e
          });
        }
      }
    }; // Make request


    xhr.responseType = options.compression ? 'arraybuffer' : 'text';
    xhr.send();
  });
} // ----------------------------------------------------------------------------


function fetchText(instance, url) {
  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

  if (options && options.compression && options.compression !== 'gz') {
    vtkErrorMacro('Supported algorithms are: [gz]');
    vtkErrorMacro("Unkown compression algorithm: ".concat(options.compression));
  }

  return new Promise(function (resolve, reject) {
    var xhr = openAsyncXHR('GET', url, options);

    xhr.onreadystatechange = function (e) {
      if (xhr.readyState === 1) {
        if (++requestCount === 1 && instance !== null && instance !== void 0 && instance.invokeBusy) {
          instance.invokeBusy(true);
        }
      }

      if (xhr.readyState === 4) {
        if (--requestCount === 0 && instance !== null && instance !== void 0 && instance.invokeBusy) {
          instance.invokeBusy(false);
        }

        if (xhr.status === 200 || xhr.status === 0) {
          if (options.compression) {
            resolve(pako__WEBPACK_IMPORTED_MODULE_1__["default"].inflate(new Uint8Array(xhr.response), {
              to: 'string'
            }));
          } else {
            resolve(xhr.responseText);
          }
        } else {
          reject({
            xhr: xhr,
            e: e
          });
        }
      }
    }; // Make request


    xhr.responseType = options.compression ? 'arraybuffer' : 'text';
    xhr.send();
  });
} // ----------------------------------------------------------------------------


function fetchImage(instance, url) {
  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  return new Promise(function (resolve, reject) {
    var img = new Image();

    if (options.crossOrigin) {
      img.crossOrigin = options.crossOrigin;
    }

    img.onload = function () {
      return resolve(img);
    };

    img.onerror = reject;
    img.src = url;
  });
}
/* eslint-enable prefer-promise-reject-errors */
// ----------------------------------------------------------------------------


var HttpDataAccessHelper = {
  fetchArray: fetchArray,
  fetchJSON: fetchJSON,
  fetchText: fetchText,
  fetchBinary: fetchBinary,
  // Only for HTTP
  fetchImage: fetchImage
};
Object(_DataAccessHelper_js__WEBPACK_IMPORTED_MODULE_5__["registerType"])('http', function (options) {
  return HttpDataAccessHelper;
});




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/IO/Core/DataAccessHelper/JSZipDataAccessHelper.js":
/*!*****************************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/IO/Core/DataAccessHelper/JSZipDataAccessHelper.js ***!
  \*****************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return JSZipDataAccessHelper; });
/* harmony import */ var jszip__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jszip */ "../node_modules/jszip/dist/jszip.min.js");
/* harmony import */ var jszip__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jszip__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var pako__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! pako */ "../node_modules/pako/dist/pako.esm.mjs");
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _Common_Core_Endian_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../Common/Core/Endian.js */ "../node_modules/@kitware/vtk.js/Common/Core/Endian.js");
/* harmony import */ var _Common_Core_DataArray_Constants_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../Common/Core/DataArray/Constants.js */ "../node_modules/@kitware/vtk.js/Common/Core/DataArray/Constants.js");
/* harmony import */ var _DataAccessHelper_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../DataAccessHelper.js */ "../node_modules/@kitware/vtk.js/IO/Core/DataAccessHelper.js");







var vtkErrorMacro = _macros_js__WEBPACK_IMPORTED_MODULE_2__["default"].vtkErrorMacro,
    vtkDebugMacro = _macros_js__WEBPACK_IMPORTED_MODULE_2__["default"].vtkDebugMacro;

function toMimeType(url) {
  var ext = url.split('.').pop().toLowerCase();

  if (ext === 'jpg') {
    return 'jpeg';
  }

  return ext;
}

function handleUint8Array(array, compression, done) {
  return function (uint8array) {
    array.buffer = new ArrayBuffer(uint8array.length); // copy uint8array to buffer

    var view = new Uint8Array(array.buffer);
    view.set(uint8array);

    if (compression) {
      if (array.dataType === 'string' || array.dataType === 'JSON') {
        array.buffer = pako__WEBPACK_IMPORTED_MODULE_1__["default"].inflate(new Uint8Array(array.buffer), {
          to: 'string'
        });
      } else {
        array.buffer = pako__WEBPACK_IMPORTED_MODULE_1__["default"].inflate(new Uint8Array(array.buffer)).buffer;
      }
    }

    if (array.ref.encode === 'JSON') {
      array.values = JSON.parse(array.buffer);
    } else {
      if (_Common_Core_Endian_js__WEBPACK_IMPORTED_MODULE_3__["default"].ENDIANNESS !== array.ref.encode && _Common_Core_Endian_js__WEBPACK_IMPORTED_MODULE_3__["default"].ENDIANNESS) {
        // Need to swap bytes
        vtkDebugMacro("Swap bytes of ".concat(array.name));
        _Common_Core_Endian_js__WEBPACK_IMPORTED_MODULE_3__["default"].swapBytes(array.buffer, _Common_Core_DataArray_Constants_js__WEBPACK_IMPORTED_MODULE_4__["DataTypeByteSize"][array.dataType]);
      }

      array.values = _macros_js__WEBPACK_IMPORTED_MODULE_2__["default"].newTypedArray(array.dataType, array.buffer);
    }

    if (array.values.length !== array.size) {
      vtkErrorMacro("Error in FetchArray: ".concat(array.name, " does not have the proper array size. Got ").concat(array.values.length, ", instead of ").concat(array.size));
    }

    done();
  };
}

function handleString(array, compression, done) {
  return function (string) {
    if (compression) {
      array.values = JSON.parse(pako__WEBPACK_IMPORTED_MODULE_1__["default"].inflate(string, {
        to: 'string'
      }));
    } else {
      array.values = JSON.parse(string);
    }

    done();
  };
}

var handlers = {
  uint8array: handleUint8Array,
  string: handleString
};

function removeLeadingSlash(str) {
  return str[0] === '/' ? str.substr(1) : str;
}

function normalizePath(str) {
  return new URL(str, 'http://any').pathname;
}

function cleanUpPath(str) {
  return removeLeadingSlash(normalizePath(str));
}

function create(createOptions) {
  var ready = false;
  var requestCount = 0;
  var zip = new jszip__WEBPACK_IMPORTED_MODULE_0___default.a();
  var zipRoot = zip;
  zip.loadAsync(createOptions.zipContent).then(function () {
    ready = true; // Find root index.json

    var metaFiles = [];
    zip.forEach(function (relativePath, zipEntry) {
      if (relativePath.indexOf('index.json') !== -1) {
        metaFiles.push(relativePath);
      }
    });
    metaFiles.sort(function (a, b) {
      return a.length - b.length;
    });
    var fullRootPath = metaFiles[0].split('/');

    while (fullRootPath.length > 1) {
      var dirName = fullRootPath.shift();
      zipRoot = zipRoot.folder(dirName);
    }

    if (createOptions.callback) {
      createOptions.callback(zip);
    }
  });
  return {
    fetchArray: function fetchArray(instance, baseURL, array) {
      var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};
      return new Promise(function (resolve, reject) {
        if (!ready) {
          vtkErrorMacro('ERROR!!! zip not ready...');
        }

        var url = cleanUpPath([baseURL, array.ref.basepath, options.compression ? "".concat(array.ref.id, ".gz") : array.ref.id].join('/'));

        if (++requestCount === 1 && instance !== null && instance !== void 0 && instance.invokeBusy) {
          instance.invokeBusy(true);
        }

        function doneCleanUp() {
          // Done with the ref and work
          delete array.ref;

          if (--requestCount === 0 && instance !== null && instance !== void 0 && instance.invokeBusy) {
            instance.invokeBusy(false);
          }

          if (instance !== null && instance !== void 0 && instance.modified) {
            instance.modified();
          }

          resolve(array);
        }

        var asyncType = array.dataType === 'string' && !options.compression ? 'string' : 'uint8array';
        var asyncCallback = handlers[asyncType](array, options.compression, doneCleanUp);
        zipRoot.file(url).async(asyncType).then(asyncCallback);
      });
    },
    fetchJSON: function fetchJSON(instance, url) {
      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      var path = cleanUpPath(url);

      if (!ready) {
        vtkErrorMacro('ERROR!!! zip not ready...');
      }

      if (options.compression) {
        if (options.compression === 'gz') {
          return zipRoot.file(path).async('uint8array').then(function (uint8array) {
            var str = pako__WEBPACK_IMPORTED_MODULE_1__["default"].inflate(uint8array, {
              to: 'string'
            });
            return Promise.resolve(JSON.parse(str));
          });
        }

        return Promise.reject(new Error('Invalid compression'));
      }

      return zipRoot.file(path).async('string').then(function (str) {
        return Promise.resolve(JSON.parse(str));
      });
    },
    fetchText: function fetchText(instance, url) {
      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      var path = cleanUpPath(url);

      if (!ready) {
        vtkErrorMacro('ERROR!!! zip not ready...');
      }

      if (options.compression) {
        if (options.compression === 'gz') {
          return zipRoot.file(path).async('uint8array').then(function (uint8array) {
            var str = pako__WEBPACK_IMPORTED_MODULE_1__["default"].inflate(uint8array, {
              to: 'string'
            });
            return Promise.resolve(str);
          });
        }

        return Promise.reject(new Error('Invalid compression'));
      }

      return zipRoot.file(path).async('string').then(function (str) {
        return Promise.resolve(str);
      });
    },
    fetchImage: function fetchImage(instance, url) {
      var path = cleanUpPath(url);

      if (!ready) {
        vtkErrorMacro('ERROR!!! zip not ready...');
      }

      return new Promise(function (resolve, reject) {
        var img = new Image();

        img.onload = function () {
          return resolve(img);
        };

        img.onerror = reject;
        zipRoot.file(path).async('base64').then(function (str) {
          img.src = "data:image/".concat(toMimeType(path), ";base64,").concat(str);
        });
      });
    },
    fetchBinary: function fetchBinary(instance, url) {
      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      var path = cleanUpPath(url);

      if (!ready) {
        vtkErrorMacro('ERROR!!! zip not ready...');
      }

      if (options.compression) {
        if (options.compression === 'gz') {
          return zipRoot.file(path).then(function (data) {
            var array = pako__WEBPACK_IMPORTED_MODULE_1__["default"].inflate(data).buffer;
            return Promise.resolve(array);
          });
        }

        return Promise.reject(new Error('Invalid compression'));
      }

      return zipRoot.file(path).async('arraybuffer').then(function (data) {
        return Promise.resolve(data);
      });
    }
  };
}

var JSZipDataAccessHelper = {
  create: create
};
Object(_DataAccessHelper_js__WEBPACK_IMPORTED_MODULE_5__["registerType"])('zip', function (options) {
  return JSZipDataAccessHelper.create(options);
});




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/IO/Core/DataAccessHelper/LiteHttpDataAccessHelper.js":
/*!********************************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/IO/Core/DataAccessHelper/LiteHttpDataAccessHelper.js ***!
  \********************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return LiteHttpDataAccessHelper; });
/* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ "../node_modules/@babel/runtime/helpers/slicedToArray.js");
/* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _Common_Core_Endian_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../Common/Core/Endian.js */ "../node_modules/@kitware/vtk.js/Common/Core/Endian.js");
/* harmony import */ var _Common_Core_DataArray_Constants_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../Common/Core/DataArray/Constants.js */ "../node_modules/@kitware/vtk.js/Common/Core/DataArray/Constants.js");
/* harmony import */ var _DataAccessHelper_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../DataAccessHelper.js */ "../node_modules/@kitware/vtk.js/IO/Core/DataAccessHelper.js");






var vtkErrorMacro = _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].vtkErrorMacro,
    vtkDebugMacro = _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].vtkDebugMacro;

var REJECT_COMPRESSION = function REJECT_COMPRESSION() {
  vtkErrorMacro('LiteHttpDataAccessHelper does not support compression. Need to register HttpDataAccessHelper instead.');
  return Promise.reject(new Error('LiteHttpDataAccessHelper does not support compression. Need to register HttpDataAccessHelper instead.'));
};
/* eslint-disable prefer-promise-reject-errors */


var requestCount = 0;

function openAsyncXHR(method, url) {
  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  var xhr = new XMLHttpRequest();
  xhr.open(method, url, true);

  if (options.headers) {
    Object.entries(options.headers).forEach(function (_ref) {
      var _ref2 = _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0___default()(_ref, 2),
          key = _ref2[0],
          value = _ref2[1];

      return xhr.setRequestHeader(key, value);
    });
  }

  if (options.progressCallback) {
    xhr.addEventListener('progress', options.progressCallback);
  }

  return xhr;
}

function fetchBinary(url) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  return new Promise(function (resolve, reject) {
    var xhr = openAsyncXHR('GET', url, options);

    xhr.onreadystatechange = function (e) {
      if (xhr.readyState === 4) {
        if (xhr.status === 200 || xhr.status === 0) {
          resolve(xhr.response);
        } else {
          reject({
            xhr: xhr,
            e: e
          });
        }
      }
    }; // Make request


    xhr.responseType = 'arraybuffer';
    xhr.send();
  });
}

function fetchArray(instance, baseURL, array) {
  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};

  if (options && options.compression) {
    return REJECT_COMPRESSION();
  }

  if (array.ref && !array.ref.pending) {
    return new Promise(function (resolve, reject) {
      var url = [baseURL, array.ref.basepath, array.ref.id].join('/');
      var xhr = openAsyncXHR('GET', url, options);

      xhr.onreadystatechange = function (e) {
        if (xhr.readyState === 1) {
          array.ref.pending = true;

          if (++requestCount === 1 && instance !== null && instance !== void 0 && instance.invokeBusy) {
            instance.invokeBusy(true);
          }
        }

        if (xhr.readyState === 4) {
          array.ref.pending = false;

          if (xhr.status === 200 || xhr.status === 0) {
            array.buffer = xhr.response;

            if (array.ref.encode === 'JSON') {
              array.values = JSON.parse(array.buffer);
            } else {
              if (_Common_Core_Endian_js__WEBPACK_IMPORTED_MODULE_2__["default"].ENDIANNESS !== array.ref.encode && _Common_Core_Endian_js__WEBPACK_IMPORTED_MODULE_2__["default"].ENDIANNESS) {
                // Need to swap bytes
                vtkDebugMacro("Swap bytes of ".concat(array.name));
                _Common_Core_Endian_js__WEBPACK_IMPORTED_MODULE_2__["default"].swapBytes(array.buffer, _Common_Core_DataArray_Constants_js__WEBPACK_IMPORTED_MODULE_3__["DataTypeByteSize"][array.dataType]);
              }

              array.values = _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].newTypedArray(array.dataType, array.buffer);
            }

            if (array.values.length !== array.size) {
              vtkErrorMacro("Error in FetchArray: ".concat(array.name, ", does not have the proper array size. Got ").concat(array.values.length, ", instead of ").concat(array.size));
            } // Done with the ref and work


            delete array.ref;

            if (--requestCount === 0 && instance !== null && instance !== void 0 && instance.invokeBusy) {
              instance.invokeBusy(false);
            }

            if (instance !== null && instance !== void 0 && instance.modified) {
              instance.modified();
            }

            resolve(array);
          } else {
            reject({
              xhr: xhr,
              e: e
            });
          }
        }
      }; // Make request


      xhr.responseType = array.dataType !== 'string' ? 'arraybuffer' : 'text';
      xhr.send();
    });
  }

  return Promise.resolve(array);
} // ----------------------------------------------------------------------------


function fetchJSON(instance, url) {
  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

  if (options && options.compression) {
    return REJECT_COMPRESSION();
  }

  return new Promise(function (resolve, reject) {
    var xhr = openAsyncXHR('GET', url, options);

    xhr.onreadystatechange = function (e) {
      if (xhr.readyState === 1) {
        if (++requestCount === 1 && instance !== null && instance !== void 0 && instance.invokeBusy) {
          instance.invokeBusy(true);
        }
      }

      if (xhr.readyState === 4) {
        if (--requestCount === 0 && instance !== null && instance !== void 0 && instance.invokeBusy) {
          instance.invokeBusy(false);
        }

        if (xhr.status === 200 || xhr.status === 0) {
          resolve(JSON.parse(xhr.responseText));
        } else {
          reject({
            xhr: xhr,
            e: e
          });
        }
      }
    }; // Make request


    xhr.responseType = 'text';
    xhr.send();
  });
} // ----------------------------------------------------------------------------


function fetchText(instance, url) {
  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

  if (options && options.compression) {
    return REJECT_COMPRESSION();
  }

  return new Promise(function (resolve, reject) {
    var xhr = openAsyncXHR('GET', url, options);

    xhr.onreadystatechange = function (e) {
      if (xhr.readyState === 1) {
        if (++requestCount === 1 && instance !== null && instance !== void 0 && instance.invokeBusy) {
          instance.invokeBusy(true);
        }
      }

      if (xhr.readyState === 4) {
        if (--requestCount === 0 && instance !== null && instance !== void 0 && instance.invokeBusy) {
          instance.invokeBusy(false);
        }

        if (xhr.status === 200 || xhr.status === 0) {
          resolve(xhr.responseText);
        } else {
          reject({
            xhr: xhr,
            e: e
          });
        }
      }
    }; // Make request


    xhr.responseType = 'text';
    xhr.send();
  });
} // ----------------------------------------------------------------------------


function fetchImage(instance, url) {
  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  return new Promise(function (resolve, reject) {
    var img = new Image();

    if (options.crossOrigin) {
      img.crossOrigin = options.crossOrigin;
    }

    img.onload = function () {
      return resolve(img);
    };

    img.onerror = reject;
    img.src = url;
  });
}
/* eslint-enable prefer-promise-reject-errors */
// ----------------------------------------------------------------------------


var LiteHttpDataAccessHelper = {
  fetchArray: fetchArray,
  fetchJSON: fetchJSON,
  fetchText: fetchText,
  fetchBinary: fetchBinary,
  // Only for HTTP
  fetchImage: fetchImage
}; // The lite version should never override a full feature one...

if (!Object(_DataAccessHelper_js__WEBPACK_IMPORTED_MODULE_4__["has"])('http')) {
  Object(_DataAccessHelper_js__WEBPACK_IMPORTED_MODULE_4__["registerType"])('http', function (options) {
    return LiteHttpDataAccessHelper;
  });
}




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/IO/Geometry/PLYReader.js":
/*!****************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/IO/Geometry/PLYReader.js ***!
  \****************************************************************/
/*! exports provided: default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkPLYReader$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var _Core_BinaryHelper_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Core/BinaryHelper.js */ "../node_modules/@kitware/vtk.js/IO/Core/BinaryHelper.js");
/* harmony import */ var _Core_DataAccessHelper_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Core/DataAccessHelper.js */ "../node_modules/@kitware/vtk.js/IO/Core/DataAccessHelper.js");
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _Common_Core_DataArray_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../Common/Core/DataArray.js */ "../node_modules/@kitware/vtk.js/Common/Core/DataArray.js");
/* harmony import */ var _Common_DataModel_PolyData_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../Common/DataModel/PolyData.js */ "../node_modules/@kitware/vtk.js/Common/DataModel/PolyData.js");
/* harmony import */ var _Core_DataAccessHelper_LiteHttpDataAccessHelper_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../Core/DataAccessHelper/LiteHttpDataAccessHelper.js */ "../node_modules/@kitware/vtk.js/IO/Core/DataAccessHelper/LiteHttpDataAccessHelper.js");







// import 'vtk.js/Sources/IO/Core/DataAccessHelper/HttpDataAccessHelper'; // HTTP + zip
// import 'vtk.js/Sources/IO/Core/DataAccessHelper/HtmlDataAccessHelper'; // html + base64 + zip
// import 'vtk.js/Sources/IO/Core/DataAccessHelper/JSZipDataAccessHelper'; // zip

var PLYFormats = {
  ASCII: 'ascii',
  BINARY_BIG_ENDIAN: 'binary_big_endian',
  BINARY_LITTLE_ENDIAN: 'binary_little_endian'
};
var mapping = {
  diffuse_red: 'red',
  diffuse_green: 'green',
  diffuse_blue: 'blue'
};
var patterns = {
  patternHeader: /ply([\s\S]*)end_header\r?\n/,
  patternBody: /end_header\s([\s\S]*)$/
};

function parseHeader(data) {
  var headerText = '';
  var headerLength = 0;
  var result = patterns.patternHeader.exec(data);

  if (result !== null) {
    headerText = result[1];
    headerLength = result[0].length;
  }

  var header = {
    comments: [],
    elements: [],
    headerLength: headerLength
  };
  var lines = headerText.split('\n');
  var elem;
  var lineType;
  var lineValues;

  for (var i = 0; i < lines.length; i++) {
    var line = lines[i];
    line = line.trim();

    if (line !== '') {
      var property = void 0;
      lineValues = line.split(/\s+/);
      lineType = lineValues.shift();
      line = lineValues.join(' ');

      switch (lineType) {
        case 'format':
          header.format = lineValues[0];
          header.version = lineValues[1];
          break;

        case 'comment':
          header.comments.push(line);
          break;

        case 'element':
          if (elem !== undefined) {
            header.elements.push(elem);
          }

          elem = {};
          elem.name = lineValues[0];
          elem.count = parseInt(lineValues[1], 10);
          elem.properties = [];
          break;

        case 'property':
          property = {
            type: lineValues[0]
          };

          if (property.type === 'list') {
            property.name = lineValues[3];
            property.countType = lineValues[1];
            property.itemType = lineValues[2];
          } else {
            property.name = lineValues[1];
          }

          if (property.name in mapping) {
            property.name = mapping[property.name];
          }

          elem.properties.push(property);
          break;

        case 'obj_info':
          header.objInfo = line;
          break;

        default:
          console.warn('unhandled', lineType, lineValues);
          break;
      }
    }
  }

  if (elem !== undefined) {
    header.elements.push(elem);
  }

  return header;
}

function postProcess(buffer, elements) {
  var vertElement = elements.find(function (element) {
    return element.name === 'vertex';
  });
  var faceElement = elements.find(function (element) {
    return element.name === 'face';
  });
  var nbVerts = 0;
  var nbFaces = 0;

  if (vertElement) {
    nbVerts = vertElement.count;
  }

  if (faceElement) {
    nbFaces = faceElement.count;
  }

  var pointValues = new Float32Array(nbVerts * 3);
  var colorArray = new Uint8Array(nbVerts * 3);
  var tcoordsArray = new Float32Array(nbVerts * 2);
  var normalsArray = new Float32Array(nbVerts * 3);
  var hasColor = buffer.colors.length > 0;
  var hasVertTCoords = buffer.uvs.length > 0;
  var hasNorms = buffer.normals.length > 0;
  var hasFaceTCoords = buffer.faceVertexUvs.length > 0;

  for (var vertIdx = 0; vertIdx < nbVerts; vertIdx++) {
    var a = vertIdx * 3 + 0;
    var b = vertIdx * 3 + 1;
    var c = vertIdx * 3 + 2;
    pointValues[a] = buffer.vertices[a];
    pointValues[b] = buffer.vertices[b];
    pointValues[c] = buffer.vertices[c];

    if (hasColor) {
      colorArray[a] = buffer.colors[a];
      colorArray[b] = buffer.colors[b];
      colorArray[c] = buffer.colors[c];
    }

    if (hasVertTCoords) {
      a = vertIdx * 2 + 0;
      b = vertIdx * 2 + 1;
      tcoordsArray[a] = buffer.uvs[a];
      tcoordsArray[b] = buffer.uvs[b];
    }

    if (hasNorms) {
      normalsArray[a] = buffer.normals[a];
      normalsArray[b] = buffer.normals[b];
      normalsArray[c] = buffer.normals[c];
    }
  }

  if (!hasVertTCoords && hasFaceTCoords) {
    // don't use array.shift, because buffer.indices will be used later
    var idxVerts = 0;
    var idxCoord = 0;

    for (var faceIdx = 0; faceIdx < nbFaces; ++faceIdx) {
      var nbFaceVerts = buffer.indices[idxVerts++];
      var texcoords = buffer.faceVertexUvs[idxCoord++];

      if (texcoords && nbFaceVerts * 2 === texcoords.length) {
        // grab the vertex index
        for (var _vertIdx = 0; _vertIdx < nbFaceVerts; ++_vertIdx) {
          var vert = buffer.indices[idxVerts++]; // new texture stored at the current face

          tcoordsArray[vert * 2 + 0] = texcoords[_vertIdx * 2 + 0];
          tcoordsArray[vert * 2 + 1] = texcoords[_vertIdx * 2 + 1];
        }
      } else {
        idxVerts += nbFaceVerts;
      }
    }
  }

  var polydata = _Common_DataModel_PolyData_js__WEBPACK_IMPORTED_MODULE_4__["default"].newInstance();
  polydata.getPoints().setData(pointValues, 3);

  if (hasColor) {
    polydata.getPointData().setScalars(_Common_Core_DataArray_js__WEBPACK_IMPORTED_MODULE_3__["default"].newInstance({
      numberOfComponents: 3,
      values: colorArray,
      name: 'Scalars'
    }));
  }

  if (hasVertTCoords || hasFaceTCoords) {
    var da = _Common_Core_DataArray_js__WEBPACK_IMPORTED_MODULE_3__["default"].newInstance({
      numberOfComponents: 2,
      values: tcoordsArray,
      name: 'TextureCoordinates'
    });
    var cpd = polydata.getPointData();
    cpd.addArray(da);
    cpd.setActiveTCoords(da.getName());
  }

  if (hasNorms) {
    polydata.getPointData().setNormals(_Common_Core_DataArray_js__WEBPACK_IMPORTED_MODULE_3__["default"].newInstance({
      numberOfComponents: 3,
      name: 'Normals',
      values: normalsArray
    }));
  }

  polydata.getPolys().setData(Uint32Array.from(buffer.indices));
  return polydata;
}

function parseNumber(n, type) {
  var r;

  switch (type) {
    case 'char':
    case 'uchar':
    case 'short':
    case 'ushort':
    case 'int':
    case 'uint':
    case 'int8':
    case 'uint8':
    case 'int16':
    case 'uint16':
    case 'int32':
    case 'uint32':
      r = parseInt(n, 10);
      break;

    case 'float':
    case 'double':
    case 'float32':
    case 'float64':
      r = parseFloat(n);
      break;

    default:
      console.log('Unsupported type');
      break;
  }

  return r;
}

function parseElement(properties, line) {
  var values = line.split(/\s+/);
  var element = {};

  for (var i = 0; i < properties.length; i++) {
    if (properties[i].type === 'list') {
      var list = [];
      var n = parseNumber(values.shift(), properties[i].countType);

      for (var j = 0; j < n; j++) {
        list.push(parseNumber(values.shift(), properties[i].itemType));
      }

      element[properties[i].name] = list;
    } else {
      element[properties[i].name] = parseNumber(values.shift(), properties[i].type);
    }
  }

  return element;
}

function handleElement(buffer, name, element) {
  if (name === 'vertex') {
    buffer.vertices.push(element.x, element.y, element.z); // Normals

    if ('nx' in element && 'ny' in element && 'nz' in element) {
      buffer.normals.push(element.nx, element.ny, element.nz);
    } // Uvs


    if ('s' in element && 't' in element) {
      buffer.uvs.push(element.s, element.t);
    } else if ('u' in element && 'v' in element) {
      buffer.uvs.push(element.u, element.v);
    } else if ('texture_u' in element && 'texture_v' in element) {
      buffer.uvs.push(element.texture_u, element.texture_v);
    } // Colors


    if ('red' in element && 'green' in element && 'blue' in element) {
      buffer.colors.push(element.red, element.green, element.blue);
    }
  } else if (name === 'face') {
    var vertexIndices = element.vertex_indices || element.vertex_index;
    var texcoord = element.texcoord;

    if (vertexIndices && vertexIndices.length > 0) {
      buffer.indices.push(vertexIndices.length);
      vertexIndices.forEach(function (val, idx) {
        buffer.indices.push(val);
      });
    }

    buffer.faceVertexUvs.push(texcoord);
  }
}

function binaryRead(dataview, at, type, littleEndian) {
  var r;

  switch (type) {
    case 'int8':
    case 'char':
      r = [dataview.getInt8(at), 1];
      break;

    case 'uint8':
    case 'uchar':
      r = [dataview.getUint8(at), 1];
      break;

    case 'int16':
    case 'short':
      r = [dataview.getInt16(at, littleEndian), 2];
      break;

    case 'uint16':
    case 'ushort':
      r = [dataview.getUint16(at, littleEndian), 2];
      break;

    case 'int32':
    case 'int':
      r = [dataview.getInt32(at, littleEndian), 4];
      break;

    case 'uint32':
    case 'uint':
      r = [dataview.getUint32(at, littleEndian), 4];
      break;

    case 'float32':
    case 'float':
      r = [dataview.getFloat32(at, littleEndian), 4];
      break;

    case 'float64':
    case 'double':
      r = [dataview.getFloat64(at, littleEndian), 8];
      break;

    default:
      console.log('Unsupported type');
      break;
  }

  return r;
}

function binaryReadElement(dataview, at, properties, littleEndian) {
  var element = {};
  var result;
  var read = 0;

  for (var i = 0; i < properties.length; i++) {
    if (properties[i].type === 'list') {
      var list = [];
      result = binaryRead(dataview, at + read, properties[i].countType, littleEndian);
      var n = result[0];
      read += result[1];

      for (var j = 0; j < n; j++) {
        result = binaryRead(dataview, at + read, properties[i].itemType, littleEndian);
        list.push(result[0]);
        read += result[1];
      }

      element[properties[i].name] = list;
    } else {
      result = binaryRead(dataview, at + read, properties[i].type, littleEndian);
      element[properties[i].name] = result[0];
      read += result[1];
    }
  }

  return [element, read];
} // ----------------------------------------------------------------------------
// vtkPLYReader methods
// ----------------------------------------------------------------------------


function vtkPLYReader(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkPLYReader'); // Create default dataAccessHelper if not available

  if (!model.dataAccessHelper) {
    model.dataAccessHelper = _Core_DataAccessHelper_js__WEBPACK_IMPORTED_MODULE_1__["default"].get('http');
  } // Internal method to fetch Array


  function fetchData(url) {
    var option = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var compression = model.compression,
        progressCallback = model.progressCallback;

    if (option.binary) {
      return model.dataAccessHelper.fetchBinary(url, {
        compression: compression,
        progressCallback: progressCallback
      });
    }

    return model.dataAccessHelper.fetchText(publicAPI, url, {
      compression: compression,
      progressCallback: progressCallback
    });
  } // Set DataSet url


  publicAPI.setUrl = function (url) {
    var option = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {
      binary: true
    };
    model.url = url; // Remove the file in the URL

    var path = url.split('/');
    path.pop();
    model.baseURL = path.join('/');
    model.compression = option.compression; // Fetch metadata

    return publicAPI.loadData({
      progressCallback: option.progressCallback,
      binary: !!option.binary
    });
  }; // Fetch the actual data arrays


  publicAPI.loadData = function () {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var promise = fetchData(model.url, option);
    promise.then(publicAPI.parse);
    return promise;
  };

  publicAPI.parse = function (content) {
    if (typeof content === 'string') {
      publicAPI.parseAsText(content);
    } else {
      publicAPI.parseAsArrayBuffer(content);
    }
  };

  publicAPI.parseAsArrayBuffer = function (content) {
    if (!content) {
      return;
    }

    if (content !== model.parseData) {
      publicAPI.modified();
    } else {
      return;
    } // Header


    var text = _Core_BinaryHelper_js__WEBPACK_IMPORTED_MODULE_0__["default"].arrayBufferToString(content);
    var header = parseHeader(text); // ascii/binary detection

    var isBinary = header.format !== PLYFormats.ASCII; // Check if ascii format

    if (!isBinary) {
      publicAPI.parseAsText(content);
      return;
    }

    model.parseData = content; // Binary parsing

    var buffer = {
      indices: [],
      vertices: [],
      normals: [],
      uvs: [],
      faceVertexUvs: [],
      colors: []
    };
    var littleEndian = header.format === PLYFormats.BINARY_LITTLE_ENDIAN;
    var arraybuffer = content instanceof ArrayBuffer ? content : content.buffer;
    var body = new DataView(arraybuffer, header.headerLength);
    var result;
    var loc = 0;

    for (var elem = 0; elem < header.elements.length; elem++) {
      for (var idx = 0; idx < header.elements[elem].count; idx++) {
        result = binaryReadElement(body, loc, header.elements[elem].properties, littleEndian);
        loc += result[1];
        var element = result[0];
        handleElement(buffer, header.elements[elem].name, element);
      }
    }

    var polydata = postProcess(buffer, header.elements); // Add new output

    model.output[0] = polydata;
  };

  publicAPI.parseAsText = function (content) {
    if (!content) {
      return;
    }

    if (content !== model.parseData) {
      publicAPI.modified();
    } else {
      return;
    }

    model.parseData = content; // Header

    var text = _Core_BinaryHelper_js__WEBPACK_IMPORTED_MODULE_0__["default"].arrayBufferToString(content);
    var header = parseHeader(text); // ascii/binary detection

    var isBinary = header.format !== PLYFormats.ASCII; // Check if ascii format

    if (isBinary) {
      publicAPI.parseAsArrayBuffer(content);
      return;
    } // Text parsing


    var buffer = {
      indices: [],
      vertices: [],
      normals: [],
      uvs: [],
      faceVertexUvs: [],
      colors: []
    };
    var result = patterns.patternBody.exec(text);
    var body = '';

    if (result !== null) {
      body = result[1];
    }

    var lines = body.split('\n');
    var elem = 0;
    var idx = 0;

    for (var i = 0; i < lines.length; i++) {
      var line = lines[i];
      line = line.trim();

      if (line !== '') {
        if (idx >= header.elements[elem].count) {
          elem++;
          idx = 0;
        }

        var element = parseElement(header.elements[elem].properties, line);
        handleElement(buffer, header.elements[elem].name, element);
        idx++;
      }
    }

    var polydata = postProcess(buffer, header.elements); // Add new output

    model.output[0] = polydata;
  };

  publicAPI.requestData = function (inData, outData) {
    publicAPI.parse(model.parseData);
  };
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {// baseURL: null,
  // dataAccessHelper: null,
  // url: null,
}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API

  _macros_js__WEBPACK_IMPORTED_MODULE_2__["default"].obj(publicAPI, model);
  _macros_js__WEBPACK_IMPORTED_MODULE_2__["default"].get(publicAPI, model, ['url', 'baseURL']);
  _macros_js__WEBPACK_IMPORTED_MODULE_2__["default"].setGet(publicAPI, model, ['dataAccessHelper']);
  _macros_js__WEBPACK_IMPORTED_MODULE_2__["default"].algo(publicAPI, model, 0, 1); // vtkPLYReader methods

  vtkPLYReader(publicAPI, model); // To support destructuring

  if (!model.compression) {
    model.compression = null;
  }

  if (!model.progressCallback) {
    model.progressCallback = null;
  }
} // ----------------------------------------------------------------------------

var newInstance = _macros_js__WEBPACK_IMPORTED_MODULE_2__["default"].newInstance(extend, 'vtkPLYReader'); // ----------------------------------------------------------------------------

var vtkPLYReader$1 = {
  extend: extend,
  newInstance: newInstance
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/IO/Geometry/STLReader.js":
/*!****************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/IO/Geometry/STLReader.js ***!
  \****************************************************************/
/*! exports provided: default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkSTLReader$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var _Core_BinaryHelper_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Core/BinaryHelper.js */ "../node_modules/@kitware/vtk.js/IO/Core/BinaryHelper.js");
/* harmony import */ var _Core_DataAccessHelper_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Core/DataAccessHelper.js */ "../node_modules/@kitware/vtk.js/IO/Core/DataAccessHelper.js");
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _Common_Core_DataArray_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../Common/Core/DataArray.js */ "../node_modules/@kitware/vtk.js/Common/Core/DataArray.js");
/* harmony import */ var _Common_Core_MatrixBuilder_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../Common/Core/MatrixBuilder.js */ "../node_modules/@kitware/vtk.js/Common/Core/MatrixBuilder.js");
/* harmony import */ var _Common_DataModel_PolyData_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../Common/DataModel/PolyData.js */ "../node_modules/@kitware/vtk.js/Common/DataModel/PolyData.js");
/* harmony import */ var _Core_DataAccessHelper_LiteHttpDataAccessHelper_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../Core/DataAccessHelper/LiteHttpDataAccessHelper.js */ "../node_modules/@kitware/vtk.js/IO/Core/DataAccessHelper/LiteHttpDataAccessHelper.js");








// import 'vtk.js/Sources/IO/Core/DataAccessHelper/HttpDataAccessHelper'; // HTTP + zip
// import 'vtk.js/Sources/IO/Core/DataAccessHelper/HtmlDataAccessHelper'; // html + base64 + zip
// import 'vtk.js/Sources/IO/Core/DataAccessHelper/JSZipDataAccessHelper'; // zip

var vtkErrorMacro = _macros_js__WEBPACK_IMPORTED_MODULE_2__["default"].vtkErrorMacro;

function parseHeader(headerString) {
  var headerSubStr = headerString.split(' ');
  var fieldValues = headerSubStr.filter(function (e) {
    return e.indexOf('=') > -1;
  });
  var header = {};

  for (var i = 0; i < fieldValues.length; ++i) {
    var fieldValueStr = fieldValues[i];
    var fieldValueSubStr = fieldValueStr.split('=');

    if (fieldValueSubStr.length === 2) {
      header[fieldValueSubStr[0]] = fieldValueSubStr[1];
    }
  }

  return header;
}

function addValuesToArray(src, dst) {
  for (var i = 0; i < src.length; i++) {
    dst.push(src[i]);
  }
} // facet normal ni nj nk
//     outer loop
//         vertex v1x v1y v1z
//         vertex v2x v2y v2z
//         vertex v3x v3y v3z
//     endloop
// endfacet


function readTriangle(lines, offset, points, cellArray, cellNormals) {
  var normalLine = lines[offset];

  if (normalLine === undefined) {
    return -1;
  }

  if (normalLine.indexOf('endfacet') !== -1) {
    return offset + 1;
  }

  if (normalLine.indexOf('facet') === -1) {
    return offset + 1; // Move to next line
  }

  var nbVertex = 0;
  var nbConsumedLines = 2;
  var firstVertexIndex = points.length / 3;
  var normal = normalLine.split(/[ \t]+/).filter(function (i) {
    return i;
  }).slice(-3).map(Number);
  addValuesToArray(normal, cellNormals);

  while (lines[offset + nbConsumedLines].indexOf('vertex') !== -1) {
    var line = lines[offset + nbConsumedLines];
    var coords = line.split(/[ \t]+/).filter(function (i) {
      return i;
    }).slice(-3).map(Number);
    addValuesToArray(coords, points);
    nbVertex++;
    nbConsumedLines++;
  }

  cellArray.push(nbVertex);

  for (var i = 0; i < nbVertex; i++) {
    cellArray.push(firstVertexIndex + i);
  }

  while (lines[offset + nbConsumedLines] && lines[offset + nbConsumedLines].indexOf('endfacet') !== -1) {
    nbConsumedLines++;
  } // +1 (endfacet) +1 (next facet)


  return offset + nbConsumedLines + 2;
} // ----------------------------------------------------------------------------
// vtkSTLReader methods
// ----------------------------------------------------------------------------


function vtkSTLReader(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkSTLReader'); // Create default dataAccessHelper if not available

  if (!model.dataAccessHelper) {
    model.dataAccessHelper = _Core_DataAccessHelper_js__WEBPACK_IMPORTED_MODULE_1__["default"].get('http');
  } // Internal method to fetch Array


  function fetchData(url) {
    var option = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var compression = option.compression !== undefined ? option.compression : model.compression;
    var progressCallback = option.progressCallback !== undefined ? option.progressCallback : model.progressCallback;

    if (option.binary) {
      return model.dataAccessHelper.fetchBinary(url, {
        compression: compression,
        progressCallback: progressCallback
      });
    }

    return model.dataAccessHelper.fetchText(publicAPI, url, {
      compression: compression,
      progressCallback: progressCallback
    });
  } // Set DataSet url


  publicAPI.setUrl = function (url) {
    var option = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {
      binary: true
    };
    model.url = url; // Remove the file in the URL

    var path = url.split('/');
    path.pop();
    model.baseURL = path.join('/'); // Fetch metadata

    return publicAPI.loadData(option);
  }; // Fetch the actual data arrays


  publicAPI.loadData = function () {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var promise = fetchData(model.url, option);
    promise.then(publicAPI.parse);
    return promise;
  };

  publicAPI.parse = function (content) {
    if (typeof content === 'string') {
      publicAPI.parseAsText(content);
    } else {
      publicAPI.parseAsArrayBuffer(content);
    }
  };

  publicAPI.parseAsArrayBuffer = function (content) {
    if (!content) {
      return;
    }

    if (content !== model.parseData) {
      publicAPI.modified();
    } else {
      return;
    }

    model.parseData = content; // ascii/binary detection

    var isBinary = false; // 80=STL header, 4=uint32 of num of triangles (le)

    var dview = new DataView(content, 0, 80 + 4);
    var numTriangles = dview.getUint32(80, true); // 50 bytes per triangle

    isBinary = 84 + numTriangles * 50 === content.byteLength; // Check if ascii format

    if (!isBinary) {
      publicAPI.parseAsText(_Core_BinaryHelper_js__WEBPACK_IMPORTED_MODULE_0__["default"].arrayBufferToString(content));
      return;
    } // Binary parsing
    // Header


    var headerData = content.slice(0, 80);
    var headerStr = _Core_BinaryHelper_js__WEBPACK_IMPORTED_MODULE_0__["default"].arrayBufferToString(headerData);
    var header = parseHeader(headerStr); // Data

    var dataView = new DataView(content, 84); // global.dataview = dataView;

    var nbFaces = (content.byteLength - 84) / 50;
    var pointValues = new Float32Array(nbFaces * 9);
    var normalValues = new Float32Array(nbFaces * 3);
    var cellValues = new Uint32Array(nbFaces * 4);
    var cellDataValues = new Uint16Array(nbFaces);
    var cellOffset = 0;

    for (var faceIdx = 0; faceIdx < nbFaces; faceIdx++) {
      var offset = faceIdx * 50;
      normalValues[faceIdx * 3 + 0] = dataView.getFloat32(offset + 0, true);
      normalValues[faceIdx * 3 + 1] = dataView.getFloat32(offset + 4, true);
      normalValues[faceIdx * 3 + 2] = dataView.getFloat32(offset + 8, true);
      pointValues[faceIdx * 9 + 0] = dataView.getFloat32(offset + 12, true);
      pointValues[faceIdx * 9 + 1] = dataView.getFloat32(offset + 16, true);
      pointValues[faceIdx * 9 + 2] = dataView.getFloat32(offset + 20, true);
      pointValues[faceIdx * 9 + 3] = dataView.getFloat32(offset + 24, true);
      pointValues[faceIdx * 9 + 4] = dataView.getFloat32(offset + 28, true);
      pointValues[faceIdx * 9 + 5] = dataView.getFloat32(offset + 32, true);
      pointValues[faceIdx * 9 + 6] = dataView.getFloat32(offset + 36, true);
      pointValues[faceIdx * 9 + 7] = dataView.getFloat32(offset + 40, true);
      pointValues[faceIdx * 9 + 8] = dataView.getFloat32(offset + 44, true);
      cellValues[cellOffset++] = 3;
      cellValues[cellOffset++] = faceIdx * 3 + 0;
      cellValues[cellOffset++] = faceIdx * 3 + 1;
      cellValues[cellOffset++] = faceIdx * 3 + 2;
      cellDataValues[faceIdx] = dataView.getUint16(offset + 48, true);
    } // Rotate points


    var orientationField = 'SPACE';

    if (orientationField in header && header[orientationField] !== 'LPS') {
      var XYZ = header[orientationField];
      var mat4 = new Float32Array(16);
      mat4[15] = 1;

      switch (XYZ[0]) {
        case 'L':
          mat4[0] = 1;
          break;

        case 'R':
          mat4[0] = -1;
          break;

        default:
          vtkErrorMacro("Can not convert STL file from ".concat(XYZ, " to LPS space: ") + "permutations not supported. Use itk.js STL reader instead.");
          return;
      }

      switch (XYZ[1]) {
        case 'P':
          mat4[5] = 1;
          break;

        case 'A':
          mat4[5] = -1;
          break;

        default:
          vtkErrorMacro("Can not convert STL file from ".concat(XYZ, " to LPS space: ") + "permutations not supported. Use itk.js STL reader instead.");
          return;
      }

      switch (XYZ[2]) {
        case 'S':
          mat4[10] = 1;
          break;

        case 'I':
          mat4[10] = -1;
          break;

        default:
          vtkErrorMacro("Can not convert STL file from ".concat(XYZ, " to LPS space: ") + "permutations not supported. Use itk.js STL reader instead.");
          return;
      }

      _Common_Core_MatrixBuilder_js__WEBPACK_IMPORTED_MODULE_4__["default"].buildFromDegree().setMatrix(mat4).apply(pointValues).apply(normalValues);
    }

    var polydata = _Common_DataModel_PolyData_js__WEBPACK_IMPORTED_MODULE_5__["default"].newInstance();
    polydata.getPoints().setData(pointValues, 3);
    polydata.getPolys().setData(cellValues);
    polydata.getCellData().setScalars(_Common_Core_DataArray_js__WEBPACK_IMPORTED_MODULE_3__["default"].newInstance({
      name: 'Attribute',
      values: cellDataValues
    }));
    polydata.getCellData().setNormals(_Common_Core_DataArray_js__WEBPACK_IMPORTED_MODULE_3__["default"].newInstance({
      name: 'Normals',
      values: normalValues,
      numberOfComponents: 3
    })); // Add new output

    model.output[0] = polydata;
  };

  publicAPI.parseAsText = function (content) {
    if (!content) {
      return;
    }

    if (content !== model.parseData) {
      publicAPI.modified();
    } else {
      return;
    }

    model.parseData = content;
    var lines = content.split('\n');
    var offset = 1;
    var points = [];
    var cellArray = [];
    var cellNormals = [];

    while (offset !== -1) {
      offset = readTriangle(lines, offset, points, cellArray, cellNormals);
    }

    var polydata = _Common_DataModel_PolyData_js__WEBPACK_IMPORTED_MODULE_5__["default"].newInstance();
    polydata.getPoints().setData(Float32Array.from(points), 3);
    polydata.getPolys().setData(Uint32Array.from(cellArray));
    polydata.getCellData().setNormals(_Common_Core_DataArray_js__WEBPACK_IMPORTED_MODULE_3__["default"].newInstance({
      name: 'Normals',
      values: Float32Array.from(cellNormals),
      numberOfComponents: 3
    })); // Add new output

    model.output[0] = polydata;
  };

  publicAPI.requestData = function (inData, outData) {
    publicAPI.parse(model.parseData);
  };
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {// baseURL: null,
  // dataAccessHelper: null,
  // url: null,
}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API

  _macros_js__WEBPACK_IMPORTED_MODULE_2__["default"].obj(publicAPI, model);
  _macros_js__WEBPACK_IMPORTED_MODULE_2__["default"].get(publicAPI, model, ['url', 'baseURL']);
  _macros_js__WEBPACK_IMPORTED_MODULE_2__["default"].setGet(publicAPI, model, ['dataAccessHelper']);
  _macros_js__WEBPACK_IMPORTED_MODULE_2__["default"].algo(publicAPI, model, 0, 1); // vtkSTLReader methods

  vtkSTLReader(publicAPI, model); // To support destructuring

  if (!model.compression) {
    model.compression = null;
  }

  if (!model.progressCallback) {
    model.progressCallback = null;
  }
} // ----------------------------------------------------------------------------

var newInstance = _macros_js__WEBPACK_IMPORTED_MODULE_2__["default"].newInstance(extend, 'vtkSTLReader'); // ----------------------------------------------------------------------------

var vtkSTLReader$1 = {
  extend: extend,
  newInstance: newInstance
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/IO/Misc/ElevationReader.js":
/*!******************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/IO/Misc/ElevationReader.js ***!
  \******************************************************************/
/*! exports provided: default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkElevationReader$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _Common_Core_DataArray_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../Common/Core/DataArray.js */ "../node_modules/@kitware/vtk.js/Common/Core/DataArray.js");
/* harmony import */ var _Common_DataModel_PolyData_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../Common/DataModel/PolyData.js */ "../node_modules/@kitware/vtk.js/Common/DataModel/PolyData.js");
/* harmony import */ var _Common_Core_CellArray_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../Common/Core/CellArray.js */ "../node_modules/@kitware/vtk.js/Common/Core/CellArray.js");
/* harmony import */ var _Core_DataAccessHelper_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Core/DataAccessHelper.js */ "../node_modules/@kitware/vtk.js/IO/Core/DataAccessHelper.js");
/* harmony import */ var _Core_DataAccessHelper_LiteHttpDataAccessHelper_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../Core/DataAccessHelper/LiteHttpDataAccessHelper.js */ "../node_modules/@kitware/vtk.js/IO/Core/DataAccessHelper/LiteHttpDataAccessHelper.js");







// import 'vtk.js/Sources/IO/Core/DataAccessHelper/HttpDataAccessHelper'; // HTTP + gz
// import 'vtk.js/Sources/IO/Core/DataAccessHelper/HtmlDataAccessHelper'; // html + base64 + zip
// import 'vtk.js/Sources/IO/Core/DataAccessHelper/JSZipDataAccessHelper'; // zip
// ----------------------------------------------------------------------------
// vtkElevationReader methods
// ----------------------------------------------------------------------------

function vtkElevationReader(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkElevationReader'); // Create default dataAccessHelper if not available

  if (!model.dataAccessHelper) {
    model.dataAccessHelper = _Core_DataAccessHelper_js__WEBPACK_IMPORTED_MODULE_4__["default"].get('http');
  } // Internal method to fetch Array


  function fetchCSV(url, options) {
    return model.dataAccessHelper.fetchText(publicAPI, url, options);
  } // Set DataSet url


  publicAPI.setUrl = function (url, options) {
    model.url = url; // Fetch metadata

    return publicAPI.loadData(options);
  }; // Fetch the actual data arrays


  publicAPI.loadData = function (options) {
    return fetchCSV(model.url, options).then(function (csv) {
      publicAPI.parseAsText(csv);
      return true;
    });
  };

  publicAPI.parseAsText = function (csv) {
    model.csv = csv;
    model.elevation = []; // Parse data

    var lines = model.csv.split('\n');
    lines.forEach(function (line, lineIdx) {
      model.elevation.push(line.split(',').map(function (str) {
        return Number(str);
      }));
    });
    publicAPI.modified();
  };

  publicAPI.requestData = function (inData, outData) {
    var polydata = _Common_DataModel_PolyData_js__WEBPACK_IMPORTED_MODULE_2__["default"].newInstance();
    polydata.getPoints().setData(new Float32Array(0, 0, 0, 1, 1, 1), 3);

    if (model.elevation) {
      var jSize = model.elevation.length;
      var iSize = model.elevation[0].length; // Handle points and polys

      var points = polydata.getPoints();
      points.setNumberOfPoints(iSize * jSize, 3);
      var pointValues = points.getData();
      var polys = _Common_Core_CellArray_js__WEBPACK_IMPORTED_MODULE_3__["default"].newInstance({
        size: 5 * (iSize - 1) * (jSize - 1)
      });
      polydata.setPolys(polys);
      var polysValues = polys.getData();
      var cellOffset = 0; // Texture coords

      var tcData = new Float32Array(iSize * jSize * 2);
      var tcoords = _Common_Core_DataArray_js__WEBPACK_IMPORTED_MODULE_1__["default"].newInstance({
        numberOfComponents: 2,
        values: tcData,
        name: 'TextureCoordinates'
      });
      polydata.getPointData().setTCoords(tcoords);

      for (var j = 0; j < jSize; j++) {
        for (var i = 0; i < iSize; i++) {
          var offsetIdx = j * iSize + i;
          var offsetPt = 3 * offsetIdx; // Fill points coordinates

          pointValues[offsetPt + 0] = model.origin[0] + i * model.xSpacing * model.xDirection;
          pointValues[offsetPt + 1] = model.origin[1] + j * model.ySpacing * model.yDirection;
          pointValues[offsetPt + 2] = model.origin[2] + model.elevation[j][i] * model.zScaling; // fill in tcoords

          tcData[offsetIdx * 2] = i / (iSize - 1.0);
          tcData[offsetIdx * 2 + 1] = 1.0 - j / (jSize - 1.0); // Fill polys

          if (i > 0 && j > 0) {
            polysValues[cellOffset++] = 4;
            polysValues[cellOffset++] = offsetIdx;
            polysValues[cellOffset++] = offsetIdx - 1;
            polysValues[cellOffset++] = offsetIdx - 1 - iSize;
            polysValues[cellOffset++] = offsetIdx - iSize;
          }
        }
      }
    }

    model.output[0] = polydata;
  }; // return Busy state


  publicAPI.isBusy = function () {
    return !!model.requestCount;
  };
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {
  origin: [0, 0, 0],
  xSpacing: 1,
  ySpacing: 1,
  zScaling: 1,
  xDirection: 1,
  yDirection: -1,
  requestCount: 0 // dataAccessHelper: null,
  // url: null,

}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API

  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].obj(publicAPI, model);
  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].get(publicAPI, model, ['url']);
  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].setGet(publicAPI, model, ['dataAccessHelper', 'xSpacing', 'ySpacing', 'zScaling', 'xDirection', 'yDirection']);
  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].algo(publicAPI, model, 0, 1);
  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].event(publicAPI, model, 'busy'); // Object methods

  vtkElevationReader(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].newInstance(extend, 'vtkElevationReader'); // ----------------------------------------------------------------------------

var vtkElevationReader$1 = {
  newInstance: newInstance,
  extend: extend
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/IO/Misc/OBJReader.js":
/*!************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/IO/Misc/OBJReader.js ***!
  \************************************************************/
/*! exports provided: default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkOBJReader$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ "../node_modules/@babel/runtime/helpers/slicedToArray.js");
/* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _Core_DataAccessHelper_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Core/DataAccessHelper.js */ "../node_modules/@kitware/vtk.js/IO/Core/DataAccessHelper.js");
/* harmony import */ var _Common_Core_DataArray_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../Common/Core/DataArray.js */ "../node_modules/@kitware/vtk.js/Common/Core/DataArray.js");
/* harmony import */ var _Common_DataModel_PolyData_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../Common/DataModel/PolyData.js */ "../node_modules/@kitware/vtk.js/Common/DataModel/PolyData.js");
/* harmony import */ var _Core_DataAccessHelper_LiteHttpDataAccessHelper_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../Core/DataAccessHelper/LiteHttpDataAccessHelper.js */ "../node_modules/@kitware/vtk.js/IO/Core/DataAccessHelper/LiteHttpDataAccessHelper.js");







// import 'vtk.js/Sources/IO/Core/DataAccessHelper/HttpDataAccessHelper'; // HTTP + gz
// import 'vtk.js/Sources/IO/Core/DataAccessHelper/HtmlDataAccessHelper'; // html + base64 + zip
// import 'vtk.js/Sources/IO/Core/DataAccessHelper/JSZipDataAccessHelper'; // zip
// ----------------------------------------------------------------------------

var data = {}; // ----------------------------------------------------------------------------

function pushVector(src, srcOffset, dst, vectorSize) {
  for (var i = 0; i < vectorSize; i++) {
    dst.push(src[srcOffset + i]);
  }
} // ----------------------------------------------------------------------------


function begin(splitMode) {
  data.splitOn = splitMode;
  data.pieces = [];
  data.v = [];
  data.vt = [];
  data.vn = [];
  data.f = [[]];
  data.size = 0;
} // ----------------------------------------------------------------------------


function faceMap(str) {
  var idxs = str.split('/').map(function (i) {
    return Number(i);
  });
  var vertexIdx = idxs[0] - 1;
  var textCoordIdx = idxs[1] ? idxs[1] - 1 : vertexIdx;
  var vertexNormal = idxs[2] ? idxs[2] - 1 : vertexIdx;
  return [vertexIdx, textCoordIdx, vertexNormal];
} // ----------------------------------------------------------------------------


function parseLine(line) {
  if (line[0] === '#') {
    return;
  }

  var tokens = line.split(/[ \t]+/);

  if (tokens[0] === data.splitOn) {
    tokens.shift();
    data.pieces.push(tokens.join(' ').trim());
    data.f.push([]);
    data.size++;
  } else if (tokens[0] === 'v') {
    data.v.push(Number(tokens[1]));
    data.v.push(Number(tokens[2]));
    data.v.push(Number(tokens[3]));
  } else if (tokens[0] === 'vt') {
    data.vt.push(Number(tokens[1]));
    data.vt.push(Number(tokens[2]));
  } else if (tokens[0] === 'vn') {
    data.vn.push(Number(tokens[1]));
    data.vn.push(Number(tokens[2]));
    data.vn.push(Number(tokens[3]));
  } else if (tokens[0] === 'f') {
    // Handle triangles for now
    if (data.size === 0) {
      data.size++;
    }

    var cells = data.f[data.size - 1];
    tokens.shift();
    var faces = tokens.filter(function (s) {
      return s.length > 0 && s !== '\r';
    });
    var size = faces.length;
    cells.push(size);

    for (var i = 0; i < size; i++) {
      cells.push(faceMap(faces[i]));
    }
  }
} // ----------------------------------------------------------------------------


function end(model) {
  var hasTcoords = !!data.vt.length;
  var hasNormals = !!data.vn.length;

  if (model.splitMode) {
    model.numberOfOutputs = data.size;

    for (var idx = 0; idx < data.size; idx++) {
      var ctMapping = {};
      var polydata = _Common_DataModel_PolyData_js__WEBPACK_IMPORTED_MODULE_4__["default"].newInstance({
        name: data.pieces[idx]
      });
      var pts = [];
      var tc = [];
      var normals = [];
      var polys = [];
      var polyIn = data.f[idx];
      var nbElems = polyIn.length;
      var offset = 0;

      while (offset < nbElems) {
        var cellSize = polyIn[offset];
        polys.push(cellSize);

        for (var pIdx = 0; pIdx < cellSize; pIdx++) {
          var _polyIn = _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0___default()(polyIn[offset + pIdx + 1], 3),
              vIdx = _polyIn[0],
              tcIdx = _polyIn[1],
              nIdx = _polyIn[2];

          var key = "".concat(vIdx, "/").concat(tcIdx, "/").concat(nIdx);

          if (ctMapping[key] === undefined) {
            ctMapping[key] = pts.length / 3;
            pushVector(data.v, vIdx * 3, pts, 3);

            if (hasTcoords) {
              pushVector(data.vt, tcIdx * 2, tc, 2);
            }

            if (hasNormals) {
              pushVector(data.vn, nIdx * 3, normals, 3);
            }
          }

          polys.push(ctMapping[key]);
        }

        offset += cellSize + 1;
      }

      polydata.getPoints().setData(Float32Array.from(pts), 3);
      polydata.getPolys().setData(Uint32Array.from(polys));

      if (hasTcoords) {
        var tcoords = _Common_Core_DataArray_js__WEBPACK_IMPORTED_MODULE_3__["default"].newInstance({
          numberOfComponents: 2,
          values: Float32Array.from(tc),
          name: 'TextureCoordinates'
        });
        polydata.getPointData().setTCoords(tcoords);
      }

      if (hasNormals) {
        var normalsArray = _Common_Core_DataArray_js__WEBPACK_IMPORTED_MODULE_3__["default"].newInstance({
          numberOfComponents: 3,
          values: Float32Array.from(normals),
          name: 'Normals'
        });
        polydata.getPointData().setNormals(normalsArray);
      } // register in output


      model.output[idx] = polydata;
    }
  } else {
    model.numberOfOutputs = 1;

    var _polydata = _Common_DataModel_PolyData_js__WEBPACK_IMPORTED_MODULE_4__["default"].newInstance();

    _polydata.getPoints().setData(Float32Array.from(data.v), 3);

    if (hasTcoords && data.v.length / 3 === data.vt.length / 2) {
      var _tcoords = _Common_Core_DataArray_js__WEBPACK_IMPORTED_MODULE_3__["default"].newInstance({
        numberOfComponents: 2,
        values: Float32Array.from(data.vt),
        name: 'TextureCoordinates'
      });

      _polydata.getPointData().setTCoords(_tcoords);
    }

    if (hasNormals && data.v.length === data.vn.length) {
      var _normalsArray = _Common_Core_DataArray_js__WEBPACK_IMPORTED_MODULE_3__["default"].newInstance({
        numberOfComponents: 3,
        values: Float32Array.from(data.vn),
        name: 'Normals'
      });

      _polydata.getPointData().setNormals(_normalsArray);
    }

    var _polys = [];
    var _polyIn2 = data.f[0];
    var _nbElems = _polyIn2.length;
    var _offset = 0;

    while (_offset < _nbElems) {
      var _cellSize = _polyIn2[_offset];

      _polys.push(_cellSize);

      for (var _pIdx = 0; _pIdx < _cellSize; _pIdx++) {
        var _polyIn3 = _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0___default()(_polyIn2[_offset + _pIdx + 1], 1),
            _vIdx = _polyIn3[0];

        _polys.push(_vIdx);
      }

      _offset += _cellSize + 1;
    }

    _polydata.getPolys().setData(Uint32Array.from(_polys));

    model.output[0] = _polydata;
  }
} // ----------------------------------------------------------------------------
// vtkOBJReader methods
// ----------------------------------------------------------------------------


function vtkOBJReader(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkOBJReader'); // Create default dataAccessHelper if not available

  if (!model.dataAccessHelper) {
    model.dataAccessHelper = _Core_DataAccessHelper_js__WEBPACK_IMPORTED_MODULE_2__["default"].get('http');
  } // Internal method to fetch Array


  function fetchData(url) {
    var option = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    return model.dataAccessHelper.fetchText(publicAPI, url, option);
  } // Set DataSet url


  publicAPI.setUrl = function (url) {
    var option = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    if (url.indexOf('.obj') === -1 && !option.fullpath) {
      model.baseURL = url;
      model.url = "".concat(url, "/index.obj");
    } else {
      model.url = url; // Remove the file in the URL

      var path = url.split('/');
      path.pop();
      model.baseURL = path.join('/');
    } // Fetch metadata


    return publicAPI.loadData(option);
  }; // Fetch the actual data arrays


  publicAPI.loadData = function () {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    return fetchData(model.url, option).then(publicAPI.parseAsText);
  };

  publicAPI.parseAsText = function (content) {
    if (!content) {
      return true;
    }

    if (content !== model.parseData) {
      publicAPI.modified();
    }

    model.parseData = content;
    model.numberOfOutputs = 0;
    begin(model.splitMode);
    content.split('\n').forEach(parseLine);
    end(model);
    return true;
  };

  publicAPI.requestData = function (inData, outData) {
    publicAPI.parseAsText(model.parseData);
  }; // return Busy state


  publicAPI.isBusy = function () {
    return !!model.requestCount;
  };

  publicAPI.getNumberOfOutputPorts = function () {
    return model.numberOfOutputs;
  };
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {
  numberOfOutputs: 1,
  requestCount: 0,
  splitMode: null // baseURL: null,
  // dataAccessHelper: null,
  // url: null,

}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API

  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].obj(publicAPI, model);
  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].get(publicAPI, model, ['url', 'baseURL']);
  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].setGet(publicAPI, model, ['dataAccessHelper', 'splitMode']);
  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].algo(publicAPI, model, 0, 1);
  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].event(publicAPI, model, 'busy'); // Object methods

  vtkOBJReader(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].newInstance(extend, 'vtkOBJReader'); // ----------------------------------------------------------------------------

var vtkOBJReader$1 = {
  newInstance: newInstance,
  extend: extend
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/IO/Misc/PDBReader.js":
/*!************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/IO/Misc/PDBReader.js ***!
  \************************************************************/
/*! exports provided: default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkPDBReader$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ "../node_modules/@babel/runtime/helpers/slicedToArray.js");
/* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _Common_DataModel_Molecule_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../Common/DataModel/Molecule.js */ "../node_modules/@kitware/vtk.js/Common/DataModel/Molecule.js");
/* harmony import */ var _Core_DataAccessHelper_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Core/DataAccessHelper.js */ "../node_modules/@kitware/vtk.js/IO/Core/DataAccessHelper.js");
/* harmony import */ var _Utilities_XMLConverter_chemistry_mapper_elements_json_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../Utilities/XMLConverter/chemistry-mapper/elements.json.js */ "../node_modules/@kitware/vtk.js/Utilities/XMLConverter/chemistry-mapper/elements.json.js");
/* harmony import */ var _Core_DataAccessHelper_LiteHttpDataAccessHelper_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../Core/DataAccessHelper/LiteHttpDataAccessHelper.js */ "../node_modules/@kitware/vtk.js/IO/Core/DataAccessHelper/LiteHttpDataAccessHelper.js");







// import 'vtk.js/Sources/IO/Core/DataAccessHelper/HttpDataAccessHelper'; // HTTP + gz
// import 'vtk.js/Sources/IO/Core/DataAccessHelper/HtmlDataAccessHelper'; // html + base64 + zip
// import 'vtk.js/Sources/IO/Core/DataAccessHelper/JSZipDataAccessHelper'; // zip
// ----------------------------------------------------------------------------
// vtkPDBReader methods
// ----------------------------------------------------------------------------

function vtkPDBReader(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkPDBReader'); // Create default dataAccessHelper if not available

  if (!model.dataAccessHelper) {
    model.dataAccessHelper = _Core_DataAccessHelper_js__WEBPACK_IMPORTED_MODULE_3__["default"].get('http');
  } // Internal method to fetch Array


  function fetchPDB(url, option) {
    return model.dataAccessHelper.fetchText(publicAPI, url, option);
  } // Set DataSet url


  publicAPI.setUrl = function (url, option) {
    if (url.indexOf('.pdb') === -1) {
      model.baseURL = url;
      model.url = "".concat(url); // `${url}/index.pdb`;
    } else {
      model.url = url; // Remove the file in the URL

      var path = url.split('/');
      path.pop();
      model.baseURL = path.join('/');
    } // Fetch metadata


    return publicAPI.loadData(option);
  }; // Fetch the actual data arrays


  publicAPI.loadData = function (option) {
    return fetchPDB(model.url, option).then(publicAPI.parseAsText);
  };

  publicAPI.parseAsText = function (txt) {
    model.pdb = txt;
    model.molecule = [];
    model.molecule = model.pdb.split('\n');
    publicAPI.modified();
    return true;
  };

  publicAPI.requestData = function (inData, outData) {
    var moleculedata = _Common_DataModel_Molecule_js__WEBPACK_IMPORTED_MODULE_2__["default"].newInstance();

    if (model.molecule) {
      var jSize = model.molecule.length; // atom position

      var pointValues = []; // atomicNumber

      var atomicNumber = [];
      model.numberOfAtoms = 0;
      var j = 0;

      while (j < jSize && model.molecule[j] !== 'END') {
        var iSize = model.molecule[j].length;
        var linebuf = model.molecule[j];
        var command = linebuf.substr(0, 6).replace(/\s+/g, '');
        command.toUpperCase(); // Parse lines

        if (command === 'ATOM' || command === 'HETATM') {
          var dum1 = linebuf.substr(12, 4).replace(/\s+/g, ''); // const dum2 = (linebuf.substr(17, 3)).replace(/\s+/g, '');
          // const chain = (linebuf.substr(21, 1)).replace(/\s+/g, '');
          // const resi = ((linebuf.substr(22, 8)).replace(/\s+/g, '')).replace(/\D/g, '');

          var x = linebuf.substr(30, 8).replace(/\s+/g, '');
          var y = linebuf.substr(38, 8).replace(/\s+/g, '');
          var z = linebuf.substr(46, 8).replace(/\s+/g, '');
          var elem = '';

          if (iSize >= 78) {
            elem = linebuf.substr(76, 2).replace(/\s+/g, '');
          }

          if (elem === '') {
            // if element symbol was not specified, just use the "Atom name".
            elem = dum1.substr(0, 2).replace(/\d/g, '');
          } // fill polydata
          // atoms position


          pointValues.push(x);
          pointValues.push(y);
          pointValues.push(z); // fetch data from the element database elements.json

          var _ATOMS$elem = _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0___default()(_Utilities_XMLConverter_chemistry_mapper_elements_json_js__WEBPACK_IMPORTED_MODULE_4__["A"][elem], 1),
              atomicNumberData = _ATOMS$elem[0]; // atoms atomicNumber


          atomicNumber.push(atomicNumberData); // residue.push(resi);
          // chain.push(chain);
          // atomType.push(elem);
          // atomTypeStrings.push(dum1);
          // isHetatm.push(command === 'HETATM');

          model.numberOfAtoms++;
        } // if atom or hetatm

        /*
        else if (command === 'SHEET') {
          const startChain = (linebuf.substr(21,1)).replace(/\s+/g, '');
          const startResi = (linebuf.substr(22,4)).replace(/\s+/g, '').replace(/\D/g, '');
          const endChain = (linebuf.substr(32,1)).replace(/\s+/g, '');
          const endResi = (linebuf.substr(33,4)).replace(/\s+/g, '').replace(/\D/g, '');;
          const tuple = { startChain, startResi, endChain, endResi };
          sheets.push(tuple);
        }
        else if (command === 'HELIX') {
          const startChain = (linebuf.substr(19,2)).replace(/\s+/g, '');
          const startResi = (linebuf.substr(21,4)).replace(/\s+/g, '').replace(/\D/g, '');;
          const endChain = (linebuf.substr(31,2)).replace(/\s+/g, '');
          const endResi = (linebuf.substr(33,4)).replace(/\s+/g, '').replace(/\D/g, '');;
          const tuple = { startChain, startResi, endChain, endResi };
          helix.push(tuple);
        }
        */


        j++;
      } // lines loop (j)
      // fill molecule class


      moleculedata.getAtoms().elements = {};
      moleculedata.getAtoms().elements.number = Int8Array.from(atomicNumber);
      moleculedata.getAtoms().coords = {};
      moleculedata.getAtoms().coords['3d'] = Float32Array.from(pointValues);
    } // if model.molecule


    model.output[0] = moleculedata;
  }; // return Busy state


  publicAPI.isBusy = function () {
    return !!model.requestCount;
  };
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {
  numberOfAtoms: 0,
  requestCount: 0 // baseURL: null,
  // dataAccessHelper: null,
  // url: null,

}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API

  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].obj(publicAPI, model);
  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].get(publicAPI, model, ['url', 'baseURL', 'numberOfAtoms', 'requestCount']);
  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].setGet(publicAPI, model, ['dataAccessHelper']);
  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].algo(publicAPI, model, 0, 1);
  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].event(publicAPI, model, 'busy'); // Object methods

  vtkPDBReader(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].newInstance(extend, 'vtkPDBReader'); // ----------------------------------------------------------------------------

var vtkPDBReader$1 = {
  newInstance: newInstance,
  extend: extend
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/IO/XML/XMLImageDataReader.js":
/*!********************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/IO/XML/XMLImageDataReader.js ***!
  \********************************************************************/
/*! exports provided: default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkXMLImageDataReader$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var _XMLReader_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./XMLReader.js */ "../node_modules/@kitware/vtk.js/IO/XML/XMLReader.js");
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _Common_DataModel_ImageData_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../Common/DataModel/ImageData.js */ "../node_modules/@kitware/vtk.js/Common/DataModel/ImageData.js");




// vtkXMLImageDataReader methods
// ----------------------------------------------------------------------------

function vtkXMLImageDataReader(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkXMLImageDataReader');

  publicAPI.parseXML = function (rootElem, type, compressor, byteOrder, headerType) {
    var imageDataElem = rootElem.getElementsByTagName(model.dataType)[0];
    var origin = imageDataElem.getAttribute('Origin').split(' ').map(function (t) {
      return Number(t);
    });
    var spacing = imageDataElem.getAttribute('Spacing').split(' ').map(function (t) {
      return Number(t);
    });
    var pieces = imageDataElem.getElementsByTagName('Piece');
    var nbPieces = pieces.length;

    for (var outputIndex = 0; outputIndex < nbPieces; outputIndex++) {
      // Create image data
      var piece = pieces[outputIndex];
      var extent = piece.getAttribute('Extent').split(' ').map(function (t) {
        return Number(t);
      });
      var imageData = _Common_DataModel_ImageData_js__WEBPACK_IMPORTED_MODULE_2__["default"].newInstance({
        origin: origin,
        spacing: spacing,
        extent: extent
      }); // Fill data

      _XMLReader_js__WEBPACK_IMPORTED_MODULE_0__["default"].processFieldData(imageData.getNumberOfPoints(), piece.getElementsByTagName('PointData')[0], imageData.getPointData(), compressor, byteOrder, headerType, model.binaryBuffer);
      _XMLReader_js__WEBPACK_IMPORTED_MODULE_0__["default"].processFieldData(imageData.getNumberOfCells(), piece.getElementsByTagName('CellData')[0], imageData.getCellData(), compressor, byteOrder, headerType, model.binaryBuffer); // Add new output

      model.output[outputIndex] = imageData;
    }
  };
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {
  dataType: 'ImageData'
}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues);
  _XMLReader_js__WEBPACK_IMPORTED_MODULE_0__["default"].extend(publicAPI, model, initialValues);
  vtkXMLImageDataReader(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].newInstance(extend, 'vtkXMLImageDataReader'); // ----------------------------------------------------------------------------

var vtkXMLImageDataReader$1 = {
  newInstance: newInstance,
  extend: extend
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/IO/XML/XMLPolyDataReader.js":
/*!*******************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/IO/XML/XMLPolyDataReader.js ***!
  \*******************************************************************/
/*! exports provided: default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkXMLPolyDataReader$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _Common_DataModel_PolyData_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../Common/DataModel/PolyData.js */ "../node_modules/@kitware/vtk.js/Common/DataModel/PolyData.js");
/* harmony import */ var _XMLReader_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./XMLReader.js */ "../node_modules/@kitware/vtk.js/IO/XML/XMLReader.js");




// Global method
// ----------------------------------------------------------------------------

function handleArray(polydata, cellType, piece, compressor, byteOrder, headerType, binaryBuffer) {
  var size = Number(piece.getAttribute("NumberOf".concat(cellType)));

  if (size > 0) {
    var dataArrayElem = piece.getElementsByTagName(cellType)[0].getElementsByTagName('DataArray')[0];

    var _vtkXMLReader$process = _XMLReader_js__WEBPACK_IMPORTED_MODULE_2__["default"].processDataArray(size, dataArrayElem, compressor, byteOrder, headerType, binaryBuffer),
        values = _vtkXMLReader$process.values,
        numberOfComponents = _vtkXMLReader$process.numberOfComponents;

    polydata["get".concat(cellType)]().setData(values, numberOfComponents);
  }

  return size;
} // ----------------------------------------------------------------------------


function handleCells(polydata, cellType, piece, compressor, byteOrder, headerType, binaryBuffer) {
  var size = Number(piece.getAttribute("NumberOf".concat(cellType)));

  if (size > 0) {
    var values = _XMLReader_js__WEBPACK_IMPORTED_MODULE_2__["default"].processCells(size, piece.getElementsByTagName(cellType)[0], compressor, byteOrder, headerType, binaryBuffer);
    polydata["get".concat(cellType)]().setData(values);
  }

  return size;
} // ----------------------------------------------------------------------------
// vtkXMLPolyDataReader methods
// ----------------------------------------------------------------------------


function vtkXMLPolyDataReader(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkXMLPolyDataReader');

  publicAPI.parseXML = function (rootElem, type, compressor, byteOrder, headerType) {
    var datasetElem = rootElem.getElementsByTagName(model.dataType)[0];
    var pieces = datasetElem.getElementsByTagName('Piece');
    var nbPieces = pieces.length;

    var _loop = function _loop(outputIndex) {
      // Create dataset
      var polydata = _Common_DataModel_PolyData_js__WEBPACK_IMPORTED_MODULE_1__["default"].newInstance();
      var piece = pieces[outputIndex]; // Points

      var nbPoints = handleArray(polydata, 'Points', piece, compressor, byteOrder, headerType, model.binaryBuffer); // Cells

      var nbCells = 0;
      ['Verts', 'Lines', 'Strips', 'Polys'].forEach(function (cellType) {
        nbCells += handleCells(polydata, cellType, piece, compressor, byteOrder, headerType, model.binaryBuffer);
      }); // Fill data

      _XMLReader_js__WEBPACK_IMPORTED_MODULE_2__["default"].processFieldData(nbPoints, piece.getElementsByTagName('PointData')[0], polydata.getPointData(), compressor, byteOrder, headerType, model.binaryBuffer);
      _XMLReader_js__WEBPACK_IMPORTED_MODULE_2__["default"].processFieldData(nbCells, piece.getElementsByTagName('CellData')[0], polydata.getCellData(), compressor, byteOrder, headerType, model.binaryBuffer); // Add new output

      model.output[outputIndex] = polydata;
    };

    for (var outputIndex = 0; outputIndex < nbPieces; outputIndex++) {
      _loop(outputIndex);
    }
  };
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {
  dataType: 'PolyData'
}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues);
  _XMLReader_js__WEBPACK_IMPORTED_MODULE_2__["default"].extend(publicAPI, model, initialValues);
  vtkXMLPolyDataReader(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].newInstance(extend, 'vtkXMLPolyDataReader'); // ----------------------------------------------------------------------------

var vtkXMLPolyDataReader$1 = {
  newInstance: newInstance,
  extend: extend
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/IO/XML/XMLReader.js":
/*!***********************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/IO/XML/XMLReader.js ***!
  \***********************************************************/
/*! exports provided: default, extend, findAllTags, findFirstTag */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkXMLReader$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "findAllTags", function() { return findAllTags; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "findFirstTag", function() { return findFirstTag; });
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "../node_modules/@babel/runtime/helpers/toConsumableArray.js");
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var xmlbuilder2__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! xmlbuilder2 */ "../node_modules/xmlbuilder2/lib/xmlbuilder2.min.js");
/* harmony import */ var xmlbuilder2__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(xmlbuilder2__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var pako__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! pako */ "../node_modules/pako/dist/pako.esm.mjs");
/* harmony import */ var _Core_DataAccessHelper_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Core/DataAccessHelper.js */ "../node_modules/@kitware/vtk.js/IO/Core/DataAccessHelper.js");
/* harmony import */ var _Common_Core_Base64_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../Common/Core/Base64.js */ "../node_modules/@kitware/vtk.js/Common/Core/Base64.js");
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _Common_Core_DataArray_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../Common/Core/DataArray.js */ "../node_modules/@kitware/vtk.js/Common/Core/DataArray.js");
/* harmony import */ var _Core_BinaryHelper_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../Core/BinaryHelper.js */ "../node_modules/@kitware/vtk.js/IO/Core/BinaryHelper.js");
/* harmony import */ var _Core_DataAccessHelper_LiteHttpDataAccessHelper_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../Core/DataAccessHelper/LiteHttpDataAccessHelper.js */ "../node_modules/@kitware/vtk.js/IO/Core/DataAccessHelper/LiteHttpDataAccessHelper.js");










// import 'vtk.js/Sources/IO/Core/DataAccessHelper/HttpDataAccessHelper'; // HTTP + zip
// import 'vtk.js/Sources/IO/Core/DataAccessHelper/HtmlDataAccessHelper'; // html + base64 + zip
// import 'vtk.js/Sources/IO/Core/DataAccessHelper/JSZipDataAccessHelper'; // zip
// ----------------------------------------------------------------------------
// Global methods
// ----------------------------------------------------------------------------

function findAllTags(node, tagName) {
  return _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(node.getElementsByTagName(tagName));
}
function findFirstTag(node, tagName) {
  return findAllTags(node, tagName)[0];
}

function parseXML(xmlStr) {
  // see xmlbuilder2 docs on the object format
  return Object(xmlbuilder2__WEBPACK_IMPORTED_MODULE_1__["create"])(xmlStr);
}

function extractAppendedData(buffer) {
  // search for appended data tag
  var prefixRegex = /^\s*<AppendedData\s+encoding="raw">\s*_/m;
  var suffixRegex = /\n\s*<\/AppendedData>/m;
  return _Core_BinaryHelper_js__WEBPACK_IMPORTED_MODULE_7__["default"].extractBinary(buffer, prefixRegex, suffixRegex);
} // ----------------------------------------------------------------------------


var TYPED_ARRAY = {
  Int8: Int8Array,
  UInt8: Uint8Array,
  Int16: Int16Array,
  UInt16: Uint16Array,
  Int32: Int32Array,
  UInt32: Uint32Array,
  Int64: Int32Array,
  // Not supported with JavaScript will cause error in binary
  UInt64: Uint32Array,
  // Not supported with JavaScript will cause error in binary
  Float32: Float32Array,
  Float64: Float64Array
}; // ----------------------------------------------------------------------------

var TYPED_ARRAY_BYTES = {
  Int8: 1,
  UInt8: 1,
  Int16: 2,
  UInt16: 2,
  Int32: 4,
  UInt32: 4,
  Int64: 8,
  // Not supported with JavaScript will cause error in binary
  UInt64: 8,
  // Not supported with JavaScript will cause error in binary
  Float32: 4,
  Float64: 8
}; // ----------------------------------------------------------------------------

function integer64to32(array) {
  var maxIdx = array.length - 1; // Skip last

  return array.filter(function (v, i) {
    return i < maxIdx && i % 2 === 0;
  });
} // ----------------------------------------------------------------------------


function readerHeader(uint8, headerType) {
  // We do not handle endianness or if more than 32 bits are needed to encode the data
  if (headerType === 'UInt64') {
    var _offset = 8;

    var _uint = new Uint32Array(uint8.buffer, 0, 6);

    var _nbBlocks = _uint[0];
    var _s = _uint[2];
    var _s2 = _uint[4];
    var _resultArray = [_offset, _nbBlocks, _s, _s2];
    _uint = new Uint32Array(uint8.buffer, 3 * 8, _nbBlocks * 2);

    for (var i = 0; i < _nbBlocks; i++) {
      _resultArray.push(_uint[i * 2]);
    }

    return _resultArray;
  } // UInt32


  var uint32 = new Uint32Array(uint8.buffer, 0, 3);
  var offset = 4;
  var nbBlocks = uint32[0];
  var s1 = uint32[1];
  var s2 = uint32[2];
  var resultArray = [offset, nbBlocks, s1, s2];
  uint32 = new Uint32Array(uint8.buffer, 3 * 4, nbBlocks);

  for (var _i = 0; _i < nbBlocks; _i++) {
    resultArray.push(uint32[_i]);
  }

  return resultArray;
} // ----------------------------------------------------------------------------


function uncompressBlock(compressedUint8, output) {
  var uncompressedBlock = pako__WEBPACK_IMPORTED_MODULE_2__["default"].inflate(compressedUint8);
  output.uint8.set(uncompressedBlock, output.offset);
  output.offset += uncompressedBlock.length;
} // ----------------------------------------------------------------------------


function processDataArray(size, dataArrayElem, compressor, byteOrder, headerType, binaryBuffer) {
  var dataType = dataArrayElem.getAttribute('type');
  var name = dataArrayElem.getAttribute('Name');
  var format = dataArrayElem.getAttribute('format'); // binary, ascii, appended

  var numberOfComponents = Number(dataArrayElem.getAttribute('NumberOfComponents') || '1');
  var values = null;

  if (format === 'ascii') {
    values = new TYPED_ARRAY[dataType](size * numberOfComponents);
    var offset = 0;
    dataArrayElem.firstChild.nodeValue.split(/[\\t \\n]+/).forEach(function (token) {
      if (token.trim().length) {
        values[offset++] = Number(token);
      }
    });
  } else if (format === 'binary') {
    var uint8 = new Uint8Array(_Common_Core_Base64_js__WEBPACK_IMPORTED_MODULE_4__["default"].toArrayBuffer(dataArrayElem.firstChild.nodeValue.trim()));

    if (compressor === 'vtkZLibDataCompressor') {
      var buffer = new ArrayBuffer(TYPED_ARRAY_BYTES[dataType] * size * numberOfComponents);
      values = new TYPED_ARRAY[dataType](buffer);
      var output = {
        offset: 0,
        uint8: new Uint8Array(buffer)
      }; // ----------------------------------------------------------------------
      // Layout of the data
      // header[N, s1, s1, blockSize1, ..., blockSizeN], [padding???], block[compressedData], ..., block[compressedData]
      // [header] N, s1 and s2 are uint 32 or 64 (defined by header_type="UInt64" attribute on the root node)
      // [header] s1: uncompress size of each block except the last one
      // [header] s2: uncompress size of the last blocks
      // [header] blockSize: size of the block in compressed space that represent to bloc to inflate in zlib. (This also give the offset to the next block)
      // ----------------------------------------------------------------------
      // Header reading

      var header = readerHeader(uint8, headerType);
      var nbBlocks = header[1];

      var _offset2 = uint8.length - (header.reduce(function (a, b) {
        return a + b;
      }, 0) - (header[0] + header[1] + header[2] + header[3]));

      for (var i = 0; i < nbBlocks; i++) {
        var blockSize = header[4 + i];
        var compressedBlock = new Uint8Array(uint8.buffer, _offset2, blockSize);
        uncompressBlock(compressedBlock, output);
        _offset2 += blockSize;
      } // Handle (u)int64 hoping for no overflow...


      if (dataType.indexOf('Int64') !== -1) {
        values = integer64to32(values);
      }
    } else {
      values = new TYPED_ARRAY[dataType](uint8.buffer, TYPED_ARRAY_BYTES[headerType]); // Skip the count
      // Handle (u)int64 hoping no overflow...

      if (dataType.indexOf('Int64') !== -1) {
        values = integer64to32(values);
      }
    }
  } else if (format === 'appended') {
    var _offset3 = Number(dataArrayElem.getAttribute('offset')); // read header
    // NOTE: this will incorrectly read the size if headerType is (U)Int64 and
    // the value requires (U)Int64.


    var _header;

    if (_offset3 % TYPED_ARRAY_BYTES[headerType] === 0) {
      _header = new TYPED_ARRAY[headerType](binaryBuffer, _offset3, 1);
    } else {
      _header = new TYPED_ARRAY[headerType](binaryBuffer.slice(_offset3, _offset3 + TYPED_ARRAY_BYTES[headerType]));
    }

    var arraySize = _header[0] / TYPED_ARRAY_BYTES[dataType]; // if we are dealing with Uint64, we need to get double the values since
    // TYPED_ARRAY[Uint64] is Uint32.

    if (dataType.indexOf('Int64') !== -1) {
      arraySize *= 2;
    }

    _offset3 += TYPED_ARRAY_BYTES[headerType]; // read values
    // if offset is aligned to dataType, use view. Otherwise, slice due to misalignment.

    if (_offset3 % TYPED_ARRAY_BYTES[dataType] === 0) {
      values = new TYPED_ARRAY[dataType](binaryBuffer, _offset3, arraySize);
    } else {
      values = new TYPED_ARRAY[dataType](binaryBuffer.slice(_offset3, _offset3 + _header[0]));
    } // remove higher order 32 bits assuming they're not used.


    if (dataType.indexOf('Int64') !== -1) {
      values = integer64to32(values);
    }
  } else {
    console.error('Format not supported', format);
  }

  return {
    name: name,
    values: values,
    numberOfComponents: numberOfComponents
  };
} // ----------------------------------------------------------------------------


function processCells(size, containerElem, compressor, byteOrder, headerType, binaryBuffer) {
  var arrayElems = {};
  var dataArrayElems = containerElem.getElementsByTagName('DataArray');

  for (var elIdx = 0; elIdx < dataArrayElems.length; elIdx++) {
    var el = dataArrayElems[elIdx];
    arrayElems[el.getAttribute('Name')] = el;
  }

  var offsets = processDataArray(size, arrayElems.offsets, compressor, byteOrder, headerType, binaryBuffer).values;
  var connectivitySize = offsets[offsets.length - 1];
  var connectivity = processDataArray(connectivitySize, arrayElems.connectivity, compressor, byteOrder, headerType, binaryBuffer).values;
  var values = new Uint32Array(size + connectivitySize);
  var writeOffset = 0;
  var previousOffset = 0;
  offsets.forEach(function (v) {
    var cellSize = v - previousOffset;
    values[writeOffset++] = cellSize;

    for (var i = 0; i < cellSize; i++) {
      values[writeOffset++] = connectivity[previousOffset + i];
    } // save previous offset


    previousOffset = v;
  });
  return values;
} // ----------------------------------------------------------------------------


function processFieldData(size, fieldElem, fieldContainer, compressor, byteOrder, headerType, binaryBuffer) {
  if (fieldElem) {
    var attributes = ['Scalars', 'Vectors', 'Normals', 'Tensors', 'TCoords'];
    var nameBinding = {};
    attributes.forEach(function (attrName) {
      var arrayName = fieldElem.getAttribute(attrName);

      if (arrayName) {
        nameBinding[arrayName] = fieldContainer["set".concat(attrName)];
      }
    });
    var dataArrayElems = fieldElem.getElementsByTagName('DataArray');
    var nbArrays = dataArrayElems.length;

    for (var idx = 0; idx < nbArrays; idx++) {
      var array = dataArrayElems[idx];
      var dataArray = _Common_Core_DataArray_js__WEBPACK_IMPORTED_MODULE_6__["default"].newInstance(processDataArray(size, array, compressor, byteOrder, headerType, binaryBuffer));
      var name = dataArray.getName();
      (nameBinding[name] || fieldContainer.addArray)(dataArray);
    }
  }
} // ----------------------------------------------------------------------------


function handleFieldDataArrays(fieldDataElem, compressor, byteOrder, headerType, binaryBuffer) {
  return _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(fieldDataElem.getElementsByTagName('DataArray')).map(function (daElem) {
    return _Common_Core_DataArray_js__WEBPACK_IMPORTED_MODULE_6__["default"].newInstance(processDataArray(Number(daElem.getAttribute('NumberOfTuples')), daElem, compressor, byteOrder, headerType, binaryBuffer));
  });
} // ----------------------------------------------------------------------------
// vtkXMLReader methods
// ----------------------------------------------------------------------------


function vtkXMLReader(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkXMLReader'); // Create default dataAccessHelper if not available

  if (!model.dataAccessHelper) {
    model.dataAccessHelper = _Core_DataAccessHelper_js__WEBPACK_IMPORTED_MODULE_3__["default"].get('http');
  } // Internal method to fetch Array


  function fetchData(url) {
    var option = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    return model.dataAccessHelper.fetchBinary(url, option);
  } // Set DataSet url


  publicAPI.setUrl = function (url) {
    var option = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    model.url = url; // Remove the file in the URL

    var path = url.split('/');
    path.pop();
    model.baseURL = path.join('/'); // Fetch metadata

    return publicAPI.loadData(option);
  }; // Fetch the actual data arrays


  publicAPI.loadData = function () {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    return fetchData(model.url, option).then(publicAPI.parseAsArrayBuffer);
  };

  publicAPI.parseAsArrayBuffer = function (arrayBuffer) {
    if (!arrayBuffer) {
      return false;
    }

    if (arrayBuffer !== model.rawDataBuffer) {
      publicAPI.modified();
    } else {
      return true;
    }

    var _extractAppendedData = extractAppendedData(arrayBuffer),
        content = _extractAppendedData.text,
        binaryBuffer = _extractAppendedData.binaryBuffer;

    model.rawDataBuffer = arrayBuffer;
    model.binaryBuffer = binaryBuffer; // Parse data here...

    var doc = parseXML(content);
    var rootElem = doc.root().node;
    var type = rootElem.getAttribute('type');
    var compressor = rootElem.getAttribute('compressor');
    var byteOrder = rootElem.getAttribute('byte_order'); // default to UInt32. I think version 0.1 vtp/vti files default to UInt32.

    var headerType = rootElem.getAttribute('header_type') || 'UInt32';

    if (compressor && compressor !== 'vtkZLibDataCompressor') {
      console.error('Invalid compressor', compressor);
      return false;
    }

    if (byteOrder && byteOrder !== 'LittleEndian') {
      console.error('Only LittleEndian encoding is supported');
      return false;
    }

    if (type !== model.dataType) {
      console.error('Invalid data type', type, 'expecting', model.dataType);
      return false;
    } // appended format


    if (findFirstTag(rootElem, 'AppendedData')) {
      var appendedDataElem = findFirstTag(rootElem, 'AppendedData');
      var encoding = appendedDataElem.getAttribute('encoding');
      var arrayElems = findAllTags(rootElem, 'DataArray');
      var appendedBuffer = model.binaryBuffer;

      if (encoding === 'base64') {
        // substr(1) is to remove the '_' prefix
        appendedBuffer = appendedDataElem.textContent.trim().substr(1);
      } // get data array chunks


      var dataArrays = [];

      for (var i = 0; i < arrayElems.length; ++i) {
        var offset = Number(arrayElems[i].getAttribute('offset'));
        var nextOffset = 0;

        if (i === arrayElems.length - 1) {
          nextOffset = appendedBuffer.length || appendedBuffer.byteLength;
        } else {
          nextOffset = Number(arrayElems[i + 1].getAttribute('offset'));
        }

        if (encoding === 'base64') {
          dataArrays.push(new Uint8Array(_Common_Core_Base64_js__WEBPACK_IMPORTED_MODULE_4__["default"].toArrayBuffer(appendedBuffer.substring(offset, nextOffset))));
        } else {
          // encoding === 'raw'
          // Need to slice the ArrayBuffer so readerHeader() works properly
          dataArrays.push(new Uint8Array(appendedBuffer.slice(offset, nextOffset)));
        }
      }

      if (compressor === 'vtkZLibDataCompressor') {
        for (var arrayidx = 0; arrayidx < dataArrays.length; ++arrayidx) {
          var dataArray = dataArrays[arrayidx]; // Header reading
          // Refer to processDataArray() above for info on header fields

          var header = readerHeader(dataArray, headerType);
          var nbBlocks = header[1];
          var compressedOffset = dataArray.length - (header.reduce(function (a, b) {
            return a + b;
          }, 0) - (header[0] + header[1] + header[2] + header[3]));
          var _buffer = null;

          if (nbBlocks > 0) {
            // If the last block's size is labeled as 0, that means the last block
            // really has size header[2].
            if (header[3] === 0) {
              _buffer = new ArrayBuffer(header[2] * nbBlocks);
            } else {
              _buffer = new ArrayBuffer(header[2] * (nbBlocks - 1) + header[3]);
            }
          } else {
            // if there is no blocks, then default to a zero array of size 0.
            _buffer = new ArrayBuffer(0);
          } // uncompressed buffer


          var uncompressed = new Uint8Array(_buffer);
          var output = {
            offset: 0,
            uint8: uncompressed
          };

          for (var _i2 = 0; _i2 < nbBlocks; _i2++) {
            var blockSize = header[4 + _i2];
            var compressedBlock = new Uint8Array(dataArray.buffer, compressedOffset, blockSize);
            uncompressBlock(compressedBlock, output);
            compressedOffset += blockSize;
          }

          var data = new Uint8Array(uncompressed.length + TYPED_ARRAY_BYTES[headerType]); // set length header
          // TODO this does not work for lengths that are greater than the max Uint32 value.

          new TYPED_ARRAY[headerType](data.buffer, 0, 1)[0] = uncompressed.length;
          data.set(uncompressed, TYPED_ARRAY_BYTES[headerType]);
          dataArrays[arrayidx] = data;
        }
      }

      var bufferLength = dataArrays.reduce(function (acc, arr) {
        return acc + arr.length;
      }, 0);
      var buffer = new ArrayBuffer(bufferLength);
      var view = new Uint8Array(buffer);

      for (var _i3 = 0, _offset4 = 0; _i3 < dataArrays.length; ++_i3) {
        // set correct offsets
        arrayElems[_i3].setAttribute('offset', _offset4); // set final buffer data


        view.set(dataArrays[_i3], _offset4);
        _offset4 += dataArrays[_i3].length;
      }

      model.binaryBuffer = buffer;

      if (!model.binaryBuffer) {
        console.error('Processing appended data format: requires binaryBuffer to parse');
        return false;
      }
    }

    publicAPI.parseXML(rootElem, type, compressor, byteOrder, headerType);
    var datasetElem = rootElem.getElementsByTagName(type)[0];
    var fieldDataElem = datasetElem.getElementsByTagName('FieldData')[0];

    if (fieldDataElem) {
      var fieldDataArrays = handleFieldDataArrays(fieldDataElem, compressor, byteOrder, headerType, model.binaryBuffer);

      for (var _i4 = 0; _i4 < model.output.length; _i4++) {
        var fieldData = model.output[_i4].getFieldData();

        for (var j = 0; j < fieldDataArrays.length; j++) {
          fieldData.addArray(fieldDataArrays[j]);
        }
      }
    }

    return true;
  };

  publicAPI.requestData = function (inData, outData) {
    publicAPI.parseAsArrayBuffer(model.rawDataBuffer);
  };
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {// baseURL: null,
  // dataAccessHelper: null,
  // url: null,
}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API

  _macros_js__WEBPACK_IMPORTED_MODULE_5__["default"].obj(publicAPI, model);
  _macros_js__WEBPACK_IMPORTED_MODULE_5__["default"].get(publicAPI, model, ['url', 'baseURL']);
  _macros_js__WEBPACK_IMPORTED_MODULE_5__["default"].setGet(publicAPI, model, ['dataAccessHelper']);
  _macros_js__WEBPACK_IMPORTED_MODULE_5__["default"].algo(publicAPI, model, 0, 1); // vtkXMLReader methods

  vtkXMLReader(publicAPI, model);
} // ----------------------------------------------------------------------------

var vtkXMLReader$1 = {
  extend: extend,
  processDataArray: processDataArray,
  processFieldData: processFieldData,
  processCells: processCells
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Interaction/Manipulators/CompositeCameraManipulator.js":
/*!**********************************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Interaction/Manipulators/CompositeCameraManipulator.js ***!
  \**********************************************************************************************/
/*! exports provided: default, extend */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkCompositeCameraManipulator$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");


// vtkCompositeCameraManipulator methods
// ----------------------------------------------------------------------------

function vtkCompositeCameraManipulator(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkCompositeCameraManipulator'); //-------------------------------------------------------------------------

  publicAPI.computeDisplayCenter = function (iObserver, renderer) {
    var pt = iObserver.computeWorldToDisplay(renderer, model.center[0], model.center[1], model.center[2]);
    model.displayCenter[0] = pt[0];
    model.displayCenter[1] = pt[1];
  };
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {
  center: [0, 0, 0],
  rotationFactor: 1,
  displayCenter: [0, 0]
}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Create get-set macros

  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].setGet(publicAPI, model, ['rotationFactor']);
  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].setGetArray(publicAPI, model, ['displayCenter'], 2);
  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].setGetArray(publicAPI, model, ['center'], 3); // Object specific methods

  vtkCompositeCameraManipulator(publicAPI, model);
} // ----------------------------------------------------------------------------

var vtkCompositeCameraManipulator$1 = {
  extend: extend
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Interaction/Manipulators/CompositeGestureManipulator.js":
/*!***********************************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Interaction/Manipulators/CompositeGestureManipulator.js ***!
  \***********************************************************************************************/
/*! exports provided: default, extend */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkCompositeGestureManipulator$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");


// vtkCompositeMouseManipulator methods
// ----------------------------------------------------------------------------

function vtkCompositeGestureManipulator(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkCompositeGestureManipulator');

  publicAPI.startInteraction = function () {};

  publicAPI.endInteraction = function () {};

  publicAPI.onStartPinch = function (interactor, scale) {};

  publicAPI.onStartRotate = function (interactor, rotation) {};

  publicAPI.onStartPan = function (interactor, translation) {};

  publicAPI.onPinch = function (interactor, renderer, scale) {};

  publicAPI.onRotate = function (interactor, renderer, rotation) {};

  publicAPI.onPan = function (interactor, renderer, translation) {};

  publicAPI.onEndPinch = function (interactor) {};

  publicAPI.onEndRotate = function (interactor) {};

  publicAPI.onEndPan = function (interactor) {};

  publicAPI.isPinchEnabled = function () {
    return model.pinchEnabled;
  };

  publicAPI.isPanEnabled = function () {
    return model.panEnabled;
  };

  publicAPI.isRotateEnabled = function () {
    return model.rotateEnabled;
  };
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {
  pinchEnabled: true,
  panEnabled: true,
  rotateEnabled: true
}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Create get-set macros

  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].set(publicAPI, model, ['pinchEnabled', 'panEnabled', 'rotateEnabled']);
  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].setGet(publicAPI, model, ['interactorStyle']); // Object specific methods

  vtkCompositeGestureManipulator(publicAPI, model);
} // ----------------------------------------------------------------------------

var vtkCompositeGestureManipulator$1 = {
  extend: extend
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Interaction/Manipulators/CompositeMouseManipulator.js":
/*!*********************************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Interaction/Manipulators/CompositeMouseManipulator.js ***!
  \*********************************************************************************************/
/*! exports provided: default, extend */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkCompositeMouseManipulator$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");


// vtkCompositeMouseManipulator methods
// ----------------------------------------------------------------------------

function vtkCompositeMouseManipulator(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkCompositeMouseManipulator');

  publicAPI.startInteraction = function () {};

  publicAPI.endInteraction = function () {};

  publicAPI.onButtonDown = function (interactor, renderer, position) {};

  publicAPI.onButtonUp = function (interactor) {};

  publicAPI.onMouseMove = function (interactor, renderer, position) {};

  publicAPI.onStartScroll = function (interactor, renderer, delta) {};

  publicAPI.onScroll = function (interactor, renderer, delta) {};

  publicAPI.onEndScroll = function (interactor) {};

  publicAPI.isDragEnabled = function () {
    return model.dragEnabled;
  };

  publicAPI.isScrollEnabled = function () {
    return model.scrollEnabled;
  };
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {
  button: 1,
  shift: false,
  control: false,
  alt: false,
  dragEnabled: true,
  scrollEnabled: false
}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Create get-set macros

  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].setGet(publicAPI, model, ['button', 'shift', 'control', 'alt']);
  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].set(publicAPI, model, ['dragEnabled', 'scrollEnabled']); // Object specific methods

  vtkCompositeMouseManipulator(publicAPI, model);
} // ----------------------------------------------------------------------------

var vtkCompositeMouseManipulator$1 = {
  extend: extend
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Interaction/Manipulators/GestureCameraManipulator.js":
/*!********************************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Interaction/Manipulators/GestureCameraManipulator.js ***!
  \********************************************************************************************/
/*! exports provided: default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkGestureCameraManipulator$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _CompositeCameraManipulator_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./CompositeCameraManipulator.js */ "../node_modules/@kitware/vtk.js/Interaction/Manipulators/CompositeCameraManipulator.js");
/* harmony import */ var _CompositeGestureManipulator_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./CompositeGestureManipulator.js */ "../node_modules/@kitware/vtk.js/Interaction/Manipulators/CompositeGestureManipulator.js");
/* harmony import */ var _Style_InteractorStyleManipulator_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Style/InteractorStyleManipulator.js */ "../node_modules/@kitware/vtk.js/Interaction/Style/InteractorStyleManipulator.js");





// vtkGestureCameraManipulator methods
// ----------------------------------------------------------------------------

function vtkGestureCameraManipulator(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkGestureCameraManipulator'); //--------------------------------------------------------------------------

  publicAPI.onStartPinch = function (interactor, scale) {
    model.previousScale = scale;
  }; //---------------------------------------------------------------------------


  publicAPI.onStartRotate = function (interactor, rotation) {
    model.previousRotation = rotation;
  }; //---------------------------------------------------------------------------


  publicAPI.onStartPan = function (interactor, translation) {
    model.previousTranslation = translation;
  }; //---------------------------------------------------------------------------


  publicAPI.onPinch = function (interactor, renderer, scale) {
    _Style_InteractorStyleManipulator_js__WEBPACK_IMPORTED_MODULE_3__["default"].dollyByFactor(interactor, renderer, scale / model.previousScale);
    model.previousScale = scale;
  }; //---------------------------------------------------------------------------


  publicAPI.onPan = function (interactor, renderer, translation) {
    var camera = renderer.getActiveCamera();
    var style = interactor.getInteractorStyle(); // Calculate the focal depth since we'll be using it a lot

    var viewFocus = camera.getFocalPoint();
    viewFocus = style.computeWorldToDisplay(renderer, viewFocus[0], viewFocus[1], viewFocus[2]);
    var focalDepth = viewFocus[2];
    var trans = translation;
    var lastTrans = model.previousTranslation;
    var newPickPoint = style.computeDisplayToWorld(renderer, viewFocus[0] + trans[0] - lastTrans[0], viewFocus[1] + trans[1] - lastTrans[1], focalDepth); // Has to recalc old mouse point since the viewport has moved,
    // so can't move it outside the loop

    var oldPickPoint = style.computeDisplayToWorld(renderer, viewFocus[0], viewFocus[1], focalDepth); // Camera motion is reversed

    var motionVector = [];
    motionVector[0] = oldPickPoint[0] - newPickPoint[0];
    motionVector[1] = oldPickPoint[1] - newPickPoint[1];
    motionVector[2] = oldPickPoint[2] - newPickPoint[2];
    viewFocus = camera.getFocalPoint();
    var viewPoint = camera.getPosition();
    camera.setFocalPoint(motionVector[0] + viewFocus[0], motionVector[1] + viewFocus[1], motionVector[2] + viewFocus[2]);
    camera.setPosition(motionVector[0] + viewPoint[0], motionVector[1] + viewPoint[1], motionVector[2] + viewPoint[2]);

    if (interactor.getLightFollowCamera()) {
      renderer.updateLightsGeometryToFollowCamera();
    }

    camera.orthogonalizeViewUp();
    model.previousTranslation = translation;
  }; //---------------------------------------------------------------------------


  publicAPI.onRotate = function (interactor, renderer, rotation) {
    var camera = renderer.getActiveCamera();
    camera.roll(rotation - model.previousRotation);
    camera.orthogonalizeViewUp();
    model.previousRotation = rotation;
  };
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance

  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].obj(publicAPI, model);
  _CompositeGestureManipulator_js__WEBPACK_IMPORTED_MODULE_2__["default"].extend(publicAPI, model, initialValues);
  _CompositeCameraManipulator_js__WEBPACK_IMPORTED_MODULE_1__["default"].extend(publicAPI, model, initialValues); // Object specific methods

  vtkGestureCameraManipulator(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].newInstance(extend, 'vtkGestureCameraManipulator'); // ----------------------------------------------------------------------------

var vtkGestureCameraManipulator$1 = {
  newInstance: newInstance,
  extend: extend
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Interaction/Manipulators/MouseBoxSelectorManipulator.js":
/*!***********************************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Interaction/Manipulators/MouseBoxSelectorManipulator.js ***!
  \***********************************************************************************************/
/*! exports provided: default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkMouseBoxSelectorManipulator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "../node_modules/@babel/runtime/helpers/defineProperty.js");
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ "../node_modules/@babel/runtime/helpers/slicedToArray.js");
/* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _CompositeMouseManipulator_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./CompositeMouseManipulator.js */ "../node_modules/@kitware/vtk.js/Interaction/Manipulators/CompositeMouseManipulator.js");





function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var OUTSIDE_BOUNDS = [-2, -1, -2, -1];
var DEFAULT_STYLE = {
  position: 'absolute',
  zIndex: 1,
  border: '2px solid #F44336',
  backgroundColor: 'rgba(0, 0, 0, 0.1)',
  borderRadius: '4px',
  boxSizing: 'border-box'
};

function applyStyle(element, style) {
  Object.keys(style).forEach(function (name) {
    element.style[name] = style[name];
  });
} // ----------------------------------------------------------------------------
// vtkMouseBoxSelectionManipulator methods
// ----------------------------------------------------------------------------


function vtkMouseBoxSelectionManipulator(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkMouseBoxSelectionManipulator'); // Private variable

  var view = null;
  var container = null;
  var previousPosition = null;
  var currentPosition = null;
  var div = null;
  var inDOM = false;

  function getBounds() {
    if (!previousPosition || !currentPosition) {
      return OUTSIDE_BOUNDS;
    }

    return [Math.min(previousPosition.x, currentPosition.x), Math.max(previousPosition.x, currentPosition.x), Math.min(previousPosition.y, currentPosition.y), Math.max(previousPosition.y, currentPosition.y)];
  }

  function applyStyleToDiv() {
    if (!view || !container) {
      return;
    }

    var _view$getSize = view.getSize(),
        _view$getSize2 = _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_1___default()(_view$getSize, 2),
        viewWidth = _view$getSize2[0],
        viewHeight = _view$getSize2[1];

    var _container$getBoundin = container.getBoundingClientRect(),
        width = _container$getBoundin.width,
        height = _container$getBoundin.height;

    var _getBounds = getBounds(),
        _getBounds2 = _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_1___default()(_getBounds, 4),
        xMin = _getBounds2[0],
        xMax = _getBounds2[1],
        yMin = _getBounds2[2],
        yMax = _getBounds2[3];

    div.style.left = "".concat(width * xMin / viewWidth, "px");
    div.style.top = "".concat(height - height * yMax / viewHeight, "px");
    div.style.width = "".concat(width * (xMax - xMin) / viewWidth, "px");
    div.style.height = "".concat(height * (yMax - yMin) / viewHeight, "px");
  } //-------------------------------------------------------------------------


  publicAPI.onButtonDown = function (interactor, renderer, position) {
    previousPosition = position;

    if (model.renderSelection) {
      var _view;

      // Need window size and location to convert to style
      if (!view) {
        view = interactor.getView();
      }

      if (!container && (_view = view) !== null && _view !== void 0 && _view.getContainer) {
        container = view.getContainer();
      }

      if (!container) {
        container = model.container;
      }

      if (!div) {
        div = document.createElement('div');
        applyStyle(div, model.selectionStyle);
      }

      applyStyleToDiv();

      if (container && !inDOM) {
        inDOM = true;
        container.appendChild(div);
      }
    }
  }; //-------------------------------------------------------------------------


  publicAPI.onMouseMove = function (interactor, renderer, position) {
    if (!previousPosition) {
      return;
    }

    if (!position) {
      return;
    }

    currentPosition = position;
    publicAPI.invokeBoxSelectInput({
      view: view,
      container: container,
      selection: getBounds()
    });

    if (model.renderSelection) {
      applyStyleToDiv();
    }
  }; //-------------------------------------------------------------------------


  publicAPI.onButtonUp = function (interactor, renderer) {
    if (!previousPosition || !currentPosition) {
      return;
    }

    publicAPI.invokeBoxSelectChange({
      view: view,
      container: container,
      selection: getBounds()
    });

    if (inDOM) {
      div.parentElement.removeChild(div);
      inDOM = false;
    } // clear positions


    view = null;
    container = null;
    previousPosition = null;
    currentPosition = null;
  };
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


function DEFAULT_VALUES(initialValues) {
  return _objectSpread(_objectSpread({
    // container: null,
    renderSelection: true
  }, initialValues), {}, {
    selectionStyle: _objectSpread(_objectSpread({}, DEFAULT_STYLE), initialValues.selectionStyle)
  });
} // ----------------------------------------------------------------------------


function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES(initialValues)); // Inheritance

  Object(_macros_js__WEBPACK_IMPORTED_MODULE_2__["obj"])(publicAPI, model);
  _CompositeMouseManipulator_js__WEBPACK_IMPORTED_MODULE_3__["default"].extend(publicAPI, model, initialValues);
  Object(_macros_js__WEBPACK_IMPORTED_MODULE_2__["event"])(publicAPI, model, 'BoxSelectChange'); // Trigger at release

  Object(_macros_js__WEBPACK_IMPORTED_MODULE_2__["event"])(publicAPI, model, 'BoxSelectInput'); // Trigger while dragging

  Object(_macros_js__WEBPACK_IMPORTED_MODULE_2__["setGet"])(publicAPI, model, ['renderSelection', 'selectionStyle', 'container']); // Object specific methods

  vtkMouseBoxSelectionManipulator(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = Object(_macros_js__WEBPACK_IMPORTED_MODULE_2__["newInstance"])(extend, 'vtkMouseBoxSelectionManipulator'); // ----------------------------------------------------------------------------

var vtkMouseBoxSelectorManipulator = {
  newInstance: newInstance,
  extend: extend
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Interaction/Manipulators/MouseCameraTrackballMultiRotateManipulator.js":
/*!**************************************************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Interaction/Manipulators/MouseCameraTrackballMultiRotateManipulator.js ***!
  \**************************************************************************************************************/
/*! exports provided: default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkMouseCameraTrackballMultiRotateManipulator$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _CompositeCameraManipulator_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./CompositeCameraManipulator.js */ "../node_modules/@kitware/vtk.js/Interaction/Manipulators/CompositeCameraManipulator.js");
/* harmony import */ var _CompositeMouseManipulator_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./CompositeMouseManipulator.js */ "../node_modules/@kitware/vtk.js/Interaction/Manipulators/CompositeMouseManipulator.js");
/* harmony import */ var _MouseCameraTrackballRotateManipulator_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./MouseCameraTrackballRotateManipulator.js */ "../node_modules/@kitware/vtk.js/Interaction/Manipulators/MouseCameraTrackballRotateManipulator.js");
/* harmony import */ var _MouseCameraTrackballRollManipulator_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./MouseCameraTrackballRollManipulator.js */ "../node_modules/@kitware/vtk.js/Interaction/Manipulators/MouseCameraTrackballRollManipulator.js");






function max(x, y) {
  return x < y ? y : x;
}

function sqr(x) {
  return x * x;
} // ----------------------------------------------------------------------------
// vtkMouseCameraTrackballMultiRotateManipulator methods
// ----------------------------------------------------------------------------


function vtkMouseCameraTrackballMultiRotateManipulator(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkMouseCameraTrackballMultiRotateManipulator');
  var rotateManipulator = _MouseCameraTrackballRotateManipulator_js__WEBPACK_IMPORTED_MODULE_3__["default"].newInstance();
  var rollManipulator = _MouseCameraTrackballRollManipulator_js__WEBPACK_IMPORTED_MODULE_4__["default"].newInstance();
  var currentManipulator = null;

  publicAPI.onButtonDown = function (interactor, renderer, position) {
    var viewSize = interactor.getView().getSize();
    var viewCenter = [0.5 * viewSize[0], 0.5 * viewSize[1]];
    var rotateRadius = 0.9 * max(viewCenter[0], viewCenter[1]);
    var dist2 = sqr(viewCenter[0] - position.x) + sqr(viewCenter[1] - position.y);

    if (rotateRadius * rotateRadius > dist2) {
      currentManipulator = rotateManipulator;
    } else {
      currentManipulator = rollManipulator;
    }

    currentManipulator.setButton(publicAPI.getButton());
    currentManipulator.setShift(publicAPI.getShift());
    currentManipulator.setControl(publicAPI.getControl());
    currentManipulator.setCenter(publicAPI.getCenter());
    currentManipulator.onButtonDown(interactor, position);
  };

  publicAPI.onButtonUp = function (interactor) {
    if (currentManipulator) {
      currentManipulator.onButtonUp(interactor);
    }
  };

  publicAPI.onMouseMove = function (interactor, renderer, position) {
    if (currentManipulator) {
      currentManipulator.onMouseMove(interactor, renderer, position);
    }
  };
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance

  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].obj(publicAPI, model);
  _CompositeMouseManipulator_js__WEBPACK_IMPORTED_MODULE_2__["default"].extend(publicAPI, model, initialValues);
  _CompositeCameraManipulator_js__WEBPACK_IMPORTED_MODULE_1__["default"].extend(publicAPI, model, initialValues); // Object specific methods

  vtkMouseCameraTrackballMultiRotateManipulator(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].newInstance(extend, 'vtkMouseCameraTrackballMultiRotateManipulator'); // ----------------------------------------------------------------------------

var vtkMouseCameraTrackballMultiRotateManipulator$1 = {
  newInstance: newInstance,
  extend: extend
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Interaction/Manipulators/MouseCameraTrackballPanManipulator.js":
/*!******************************************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Interaction/Manipulators/MouseCameraTrackballPanManipulator.js ***!
  \******************************************************************************************************/
/*! exports provided: default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkMouseCameraTrackballPanManipulator$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _CompositeCameraManipulator_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./CompositeCameraManipulator.js */ "../node_modules/@kitware/vtk.js/Interaction/Manipulators/CompositeCameraManipulator.js");
/* harmony import */ var _CompositeMouseManipulator_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./CompositeMouseManipulator.js */ "../node_modules/@kitware/vtk.js/Interaction/Manipulators/CompositeMouseManipulator.js");
/* harmony import */ var _Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../Common/Core/Math/index.js */ "../node_modules/@kitware/vtk.js/Common/Core/Math/index.js");





// vtkMouseCameraTrackballPanManipulator methods
// ----------------------------------------------------------------------------

function vtkMouseCameraTrackballPanManipulator(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkMouseCameraTrackballPanManipulator');

  publicAPI.onButtonDown = function (interactor, renderer, position) {
    model.previousPosition = position;
  };

  publicAPI.onMouseMove = function (interactor, renderer, position) {
    if (!position) {
      return;
    }

    var pos = position;
    var lastPos = model.previousPosition;
    model.previousPosition = position;
    var camera = renderer.getActiveCamera();
    var camPos = camera.getPosition();
    var fp = camera.getFocalPoint();

    if (camera.getParallelProjection()) {
      camera.orthogonalizeViewUp();
      var up = camera.getViewUp();
      var vpn = camera.getViewPlaneNormal();
      var right = [0, 0, 0];
      Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__["j"])(vpn, up, right); // These are different because y is flipped.

      var height = interactor.getView().getSize()[1];
      var dx = (pos.x - lastPos.x) / height;
      var dy = (lastPos.y - pos.y) / height;
      var scale = camera.getParallelScale();
      dx *= scale * 2.0;
      dy *= scale * 2.0;
      var tmp = right[0] * dx + up[0] * dy;
      camPos[0] += tmp;
      fp[0] += tmp;
      tmp = right[1] * dx + up[1] * dy;
      camPos[1] += tmp;
      fp[1] += tmp;
      tmp = right[2] * dx + up[2] * dy;
      camPos[2] += tmp;
      fp[2] += tmp;
      camera.setPosition(camPos[0], camPos[1], camPos[2]);
      camera.setFocalPoint(fp[0], fp[1], fp[2]);
    } else {
      var center = model.center;
      var style = interactor.getInteractorStyle();
      var focalDepth = style.computeWorldToDisplay(renderer, center[0], center[1], center[2])[2];
      var worldPoint = style.computeDisplayToWorld(renderer, pos.x, pos.y, focalDepth);
      var lastWorldPoint = style.computeDisplayToWorld(renderer, lastPos.x, lastPos.y, focalDepth);
      var newCamPos = [camPos[0] + (lastWorldPoint[0] - worldPoint[0]), camPos[1] + (lastWorldPoint[1] - worldPoint[1]), camPos[2] + (lastWorldPoint[2] - worldPoint[2])];
      var newFp = [fp[0] + (lastWorldPoint[0] - worldPoint[0]), fp[1] + (lastWorldPoint[1] - worldPoint[1]), fp[2] + (lastWorldPoint[2] - worldPoint[2])];
      camera.setPosition(newCamPos[0], newCamPos[1], newCamPos[2]);
      camera.setFocalPoint(newFp[0], newFp[1], newFp[2]);
    }

    renderer.resetCameraClippingRange();

    if (interactor.getLightFollowCamera()) {
      renderer.updateLightsGeometryToFollowCamera();
    }
  };
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance

  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].obj(publicAPI, model);
  _CompositeCameraManipulator_js__WEBPACK_IMPORTED_MODULE_1__["default"].extend(publicAPI, model, initialValues);
  _CompositeMouseManipulator_js__WEBPACK_IMPORTED_MODULE_2__["default"].extend(publicAPI, model, initialValues); // Object specific methods

  vtkMouseCameraTrackballPanManipulator(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].newInstance(extend, 'vtkMouseCameraTrackballPanManipulator'); // ----------------------------------------------------------------------------

var vtkMouseCameraTrackballPanManipulator$1 = {
  newInstance: newInstance,
  extend: extend
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Interaction/Manipulators/MouseCameraTrackballRollManipulator.js":
/*!*******************************************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Interaction/Manipulators/MouseCameraTrackballRollManipulator.js ***!
  \*******************************************************************************************************/
/*! exports provided: default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkMouseCameraTrackballRollManipulator$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! gl-matrix */ "../node_modules/gl-matrix/esm/index.js");
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _CompositeCameraManipulator_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./CompositeCameraManipulator.js */ "../node_modules/@kitware/vtk.js/Interaction/Manipulators/CompositeCameraManipulator.js");
/* harmony import */ var _CompositeMouseManipulator_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./CompositeMouseManipulator.js */ "../node_modules/@kitware/vtk.js/Interaction/Manipulators/CompositeMouseManipulator.js");
/* harmony import */ var _Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../Common/Core/Math/index.js */ "../node_modules/@kitware/vtk.js/Common/Core/Math/index.js");






// vtkMouseCameraTrackballRollManipulator methods
// ----------------------------------------------------------------------------

function vtkMouseCameraTrackballRollManipulator(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkMouseCameraTrackballRollManipulator');
  var axis = new Float64Array(3);
  var direction = new Float64Array(3);
  var centerNeg = new Float64Array(3);
  var transform = new Float64Array(16);
  var newCamPos = new Float64Array(3);
  var newFp = new Float64Array(3);
  var newViewUp = new Float64Array(3);

  publicAPI.onButtonDown = function (interactor, renderer, position) {
    model.previousPosition = position;
  };

  publicAPI.onMouseMove = function (interactor, renderer, position) {
    if (!position) {
      return;
    }

    var camera = renderer.getActiveCamera(); // compute view vector (rotation axis)

    var cameraPos = camera.getPosition();
    var cameraFp = camera.getFocalPoint();
    var viewUp = camera.getViewUp();
    axis[0] = cameraFp[0] - cameraPos[0];
    axis[1] = cameraFp[1] - cameraPos[1];
    axis[2] = cameraFp[2] - cameraPos[2]; // compute the angle of rotation
    // - first compute the two vectors (center to mouse)

    publicAPI.computeDisplayCenter(interactor.getInteractorStyle(), renderer);
    var x1 = model.previousPosition.x - model.displayCenter[0];
    var x2 = position.x - model.displayCenter[0];
    var y1 = model.previousPosition.y - model.displayCenter[1];
    var y2 = position.y - model.displayCenter[1];

    if (x2 === 0 && y2 === 0 || x1 === 0 && y1 === 0) {
      // don't ever want to divide by zero
      return;
    } // - divide by magnitudes to get angle


    var angle = Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_4__["y"])((x1 * y2 - y1 * x2) / (Math.sqrt(x1 * x1 + y1 * y1) * Math.sqrt(x2 * x2 + y2 * y2)));
    var center = model.center;
    gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat4"].identity(transform);
    centerNeg[0] = -center[0];
    centerNeg[1] = -center[1];
    centerNeg[2] = -center[2]; // Translate to center

    gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat4"].translate(transform, transform, center); // roll

    gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat4"].rotate(transform, transform, Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_4__["r"])(angle), axis); // Translate back

    gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat4"].translate(transform, transform, centerNeg); // Apply transformation to camera position, focal point, and view up

    gl_matrix__WEBPACK_IMPORTED_MODULE_0__["vec3"].transformMat4(newCamPos, cameraPos, transform);
    gl_matrix__WEBPACK_IMPORTED_MODULE_0__["vec3"].transformMat4(newFp, cameraFp, transform);
    direction[0] = viewUp[0] + cameraPos[0];
    direction[1] = viewUp[1] + cameraPos[1];
    direction[2] = viewUp[2] + cameraPos[2];
    gl_matrix__WEBPACK_IMPORTED_MODULE_0__["vec3"].transformMat4(newViewUp, direction, transform);
    camera.setPosition(newCamPos[0], newCamPos[1], newCamPos[2]);
    camera.setFocalPoint(newFp[0], newFp[1], newFp[2]);
    camera.setViewUp(newViewUp[0] - newCamPos[0], newViewUp[1] - newCamPos[1], newViewUp[2] - newCamPos[2]);
    camera.orthogonalizeViewUp();
    renderer.resetCameraClippingRange();

    if (interactor.getLightFollowCamera()) {
      renderer.updateLightsGeometryToFollowCamera();
    }

    model.previousPosition = position;
  };
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance

  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].obj(publicAPI, model);
  _CompositeCameraManipulator_js__WEBPACK_IMPORTED_MODULE_2__["default"].extend(publicAPI, model, initialValues);
  _CompositeMouseManipulator_js__WEBPACK_IMPORTED_MODULE_3__["default"].extend(publicAPI, model, initialValues); // Object specific methods

  vtkMouseCameraTrackballRollManipulator(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].newInstance(extend, 'vtkMouseCameraTrackballRollManipulator'); // ----------------------------------------------------------------------------

var vtkMouseCameraTrackballRollManipulator$1 = {
  newInstance: newInstance,
  extend: extend
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Interaction/Manipulators/MouseCameraTrackballRotateManipulator.js":
/*!*********************************************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Interaction/Manipulators/MouseCameraTrackballRotateManipulator.js ***!
  \*********************************************************************************************************/
/*! exports provided: default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkMouseCameraTrackballRotateManipulator$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! gl-matrix */ "../node_modules/gl-matrix/esm/index.js");
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _CompositeCameraManipulator_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./CompositeCameraManipulator.js */ "../node_modules/@kitware/vtk.js/Interaction/Manipulators/CompositeCameraManipulator.js");
/* harmony import */ var _CompositeMouseManipulator_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./CompositeMouseManipulator.js */ "../node_modules/@kitware/vtk.js/Interaction/Manipulators/CompositeMouseManipulator.js");
/* harmony import */ var _Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../Common/Core/Math/index.js */ "../node_modules/@kitware/vtk.js/Common/Core/Math/index.js");






// vtkMouseCameraTrackballRotateManipulator methods
// ----------------------------------------------------------------------------

function vtkMouseCameraTrackballRotateManipulator(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkMouseCameraTrackballRotateManipulator');
  var newCamPos = new Float64Array(3);
  var newFp = new Float64Array(3);
  var newViewUp = new Float64Array(3);
  var trans = new Float64Array(16);
  var v2 = new Float64Array(3);
  var centerNeg = new Float64Array(3);
  var direction = new Float64Array(3);

  publicAPI.onButtonDown = function (interactor, renderer, position) {
    model.previousPosition = position;
  };

  publicAPI.onMouseMove = function (interactor, renderer, position) {
    if (!position) {
      return;
    }

    var camera = renderer.getActiveCamera();
    var cameraPos = camera.getPosition();
    var cameraFp = camera.getFocalPoint();
    gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat4"].identity(trans);
    var center = model.center,
        rotationFactor = model.rotationFactor;

    if (model.useFocalPointAsCenterOfRotation) {
      center[0] = cameraFp[0];
      center[1] = cameraFp[1];
      center[2] = cameraFp[2];
    }

    var dx = model.previousPosition.x - position.x;
    var dy = model.previousPosition.y - position.y;
    var size = interactor.getView().getSize(); // Azimuth

    var viewUp = camera.getViewUp();

    if (model.useWorldUpVec) {
      var centerOfRotation = new Float64Array(3);
      gl_matrix__WEBPACK_IMPORTED_MODULE_0__["vec3"].copy(centerOfRotation, model.worldUpVec); // Compute projection of cameraPos onto worldUpVec

      Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_4__["t"])(centerOfRotation, Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_4__["d"])(cameraPos, model.worldUpVec) / Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_4__["d"])(model.worldUpVec, model.worldUpVec));
      Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_4__["k"])(center, centerOfRotation, centerOfRotation);
      gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat4"].translate(trans, trans, centerOfRotation);
      gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat4"].rotate(trans, trans, Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_4__["r"])(360.0 * dx / size[0] * rotationFactor), model.worldUpVec); // Translate back

      centerOfRotation[0] = -centerOfRotation[0];
      centerOfRotation[1] = -centerOfRotation[1];
      centerOfRotation[2] = -centerOfRotation[2];
      gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat4"].translate(trans, trans, centerOfRotation);
      gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat4"].translate(trans, trans, center);
    } else {
      gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat4"].translate(trans, trans, center);
      gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat4"].rotate(trans, trans, Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_4__["r"])(360.0 * dx / size[0] * rotationFactor), viewUp);
    } // Elevation


    Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_4__["j"])(camera.getDirectionOfProjection(), viewUp, v2);
    gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat4"].rotate(trans, trans, Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_4__["r"])(-360.0 * dy / size[1] * rotationFactor), v2); // Translate back

    centerNeg[0] = -center[0];
    centerNeg[1] = -center[1];
    centerNeg[2] = -center[2];
    gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat4"].translate(trans, trans, centerNeg); // Apply transformation to camera position, focal point, and view up

    gl_matrix__WEBPACK_IMPORTED_MODULE_0__["vec3"].transformMat4(newCamPos, cameraPos, trans);
    gl_matrix__WEBPACK_IMPORTED_MODULE_0__["vec3"].transformMat4(newFp, cameraFp, trans);
    direction[0] = viewUp[0] + cameraPos[0];
    direction[1] = viewUp[1] + cameraPos[1];
    direction[2] = viewUp[2] + cameraPos[2];
    gl_matrix__WEBPACK_IMPORTED_MODULE_0__["vec3"].transformMat4(newViewUp, direction, trans);
    camera.setPosition(newCamPos[0], newCamPos[1], newCamPos[2]);
    camera.setFocalPoint(newFp[0], newFp[1], newFp[2]);
    camera.setViewUp(newViewUp[0] - newCamPos[0], newViewUp[1] - newCamPos[1], newViewUp[2] - newCamPos[2]);
    camera.orthogonalizeViewUp();
    renderer.resetCameraClippingRange();

    if (interactor.getLightFollowCamera()) {
      renderer.updateLightsGeometryToFollowCamera();
    }

    model.previousPosition = position;
  };
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {
  useWorldUpVec: false,
  // set WorldUpVector to be y-axis by default
  worldUpVec: [0, 1, 0],
  useFocalPointAsCenterOfRotation: false
}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance

  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].obj(publicAPI, model);
  _CompositeMouseManipulator_js__WEBPACK_IMPORTED_MODULE_3__["default"].extend(publicAPI, model, initialValues);
  _CompositeCameraManipulator_js__WEBPACK_IMPORTED_MODULE_2__["default"].extend(publicAPI, model, initialValues); // Create get-set macro

  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].setGet(publicAPI, model, ['useWorldUpVec']);
  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].setGetArray(publicAPI, model, ['worldUpVec'], 3);
  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].setGet(publicAPI, model, ['useFocalPointAsCenterOfRotation']); // Object specific methods

  vtkMouseCameraTrackballRotateManipulator(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].newInstance(extend, 'vtkMouseCameraTrackballRotateManipulator'); // ----------------------------------------------------------------------------

var vtkMouseCameraTrackballRotateManipulator$1 = {
  newInstance: newInstance,
  extend: extend
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Interaction/Manipulators/MouseCameraTrackballZoomManipulator.js":
/*!*******************************************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Interaction/Manipulators/MouseCameraTrackballZoomManipulator.js ***!
  \*******************************************************************************************************/
/*! exports provided: default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkMouseCameraTrackballZoomManipulator$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _CompositeCameraManipulator_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./CompositeCameraManipulator.js */ "../node_modules/@kitware/vtk.js/Interaction/Manipulators/CompositeCameraManipulator.js");
/* harmony import */ var _CompositeMouseManipulator_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./CompositeMouseManipulator.js */ "../node_modules/@kitware/vtk.js/Interaction/Manipulators/CompositeMouseManipulator.js");




// vtkMouseCameraTrackballZoomManipulator methods
// ----------------------------------------------------------------------------

function vtkMouseCameraTrackballZoomManipulator(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkMouseCameraTrackballZoomManipulator');

  publicAPI.onButtonDown = function (interactor, renderer, position) {
    model.previousPosition = position;
    var size = interactor.getView().getSize();
    var camera = renderer.getActiveCamera();
    var direction = model.flipDirection ? -1 : 1;

    if (camera.getParallelProjection()) {
      model.zoomScale = 1.5 / size[1] * direction;
    } else {
      var range = camera.getClippingRange();
      model.zoomScale = 1.5 * (range[1] / size[1]) * direction;
    }
  };

  publicAPI.onMouseMove = function (interactor, renderer, position) {
    if (!position) {
      return;
    }

    var dy = model.previousPosition.y - position.y;
    var camera = renderer.getActiveCamera();

    if (camera.getParallelProjection()) {
      var k = dy * model.zoomScale;
      camera.setParallelScale((1.0 - k) * camera.getParallelScale());
    } else {
      var cameraPos = camera.getPosition();
      var cameraFp = camera.getFocalPoint();
      var norm = camera.getDirectionOfProjection();

      var _k = dy * model.zoomScale;

      var tmp = _k * norm[0];
      cameraPos[0] += tmp;
      cameraFp[0] += tmp;
      tmp = _k * norm[1];
      cameraPos[1] += tmp;
      cameraFp[1] += tmp;
      tmp = _k * norm[2];
      cameraPos[2] += tmp;
      cameraFp[2] += tmp;

      if (!camera.getFreezeFocalPoint()) {
        camera.setFocalPoint(cameraFp[0], cameraFp[1], cameraFp[2]);
      }

      camera.setPosition(cameraPos[0], cameraPos[1], cameraPos[2]);
      renderer.resetCameraClippingRange();
    }

    if (interactor.getLightFollowCamera()) {
      renderer.updateLightsGeometryToFollowCamera();
    }

    model.previousPosition = position;
  };

  publicAPI.onScroll = function (interactor, renderer, delta) {
    if (!delta) {
      return;
    }

    var camera = renderer.getActiveCamera();
    var dyf = 1 - delta / 10;

    if (camera.getParallelProjection()) {
      camera.setParallelScale(camera.getParallelScale() / dyf);
    } else {
      camera.dolly(dyf);
      renderer.resetCameraClippingRange();
    }

    if (interactor.getLightFollowCamera()) {
      renderer.updateLightsGeometryToFollowCamera();
    }
  };
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {
  zoomScale: 0.0,
  flipDirection: false
}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance

  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].obj(publicAPI, model);
  _CompositeMouseManipulator_js__WEBPACK_IMPORTED_MODULE_2__["default"].extend(publicAPI, model, initialValues);
  _CompositeCameraManipulator_js__WEBPACK_IMPORTED_MODULE_1__["default"].extend(publicAPI, model, initialValues);
  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].setGet(publicAPI, model, ['flipDirection']); // Object specific methods

  vtkMouseCameraTrackballZoomManipulator(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].newInstance(extend, 'vtkMouseCameraTrackballZoomManipulator'); // ----------------------------------------------------------------------------

var vtkMouseCameraTrackballZoomManipulator$1 = {
  newInstance: newInstance,
  extend: extend
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Interaction/Manipulators/MouseCameraTrackballZoomToMouseManipulator.js":
/*!**************************************************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Interaction/Manipulators/MouseCameraTrackballZoomToMouseManipulator.js ***!
  \**************************************************************************************************************/
/*! exports provided: default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkMouseCameraTrackballZoomToMouseManipulator$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _Style_InteractorStyleManipulator_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Style/InteractorStyleManipulator.js */ "../node_modules/@kitware/vtk.js/Interaction/Style/InteractorStyleManipulator.js");
/* harmony import */ var _MouseCameraTrackballZoomManipulator_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./MouseCameraTrackballZoomManipulator.js */ "../node_modules/@kitware/vtk.js/Interaction/Manipulators/MouseCameraTrackballZoomManipulator.js");




// vtkMouseCameraTrackballZoomToMouseManipulator methods
// ----------------------------------------------------------------------------

function vtkMouseCameraTrackballZoomToMouseManipulator(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkMouseCameraTrackballZoomToMouseManipulator');
  var superOnButtonDown = publicAPI.onButtonDown;

  publicAPI.onButtonDown = function (interactor, renderer, position) {
    superOnButtonDown(interactor, renderer, position);
    model.zoomPosition = position;
  };

  publicAPI.onMouseMove = function (interactor, renderer, position) {
    if (!position) {
      return;
    }

    var dy = model.previousPosition.y - position.y;
    var k = dy * model.zoomScale;
    _Style_InteractorStyleManipulator_js__WEBPACK_IMPORTED_MODULE_1__["default"].dollyToPosition(1.0 - k, model.zoomPosition, renderer, interactor);

    if (interactor.getLightFollowCamera()) {
      renderer.updateLightsGeometryToFollowCamera();
    }

    model.previousPosition = position;
  };

  publicAPI.onScroll = function (interactor, renderer, delta, position) {
    if (!delta || !position) {
      return;
    }

    var dyf = 1 - delta * 0.1;
    _Style_InteractorStyleManipulator_js__WEBPACK_IMPORTED_MODULE_1__["default"].dollyToPosition(dyf, position, renderer, interactor);

    if (interactor.getLightFollowCamera()) {
      renderer.updateLightsGeometryToFollowCamera();
    }
  };
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {
  zoomPosition: null
}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance

  _MouseCameraTrackballZoomManipulator_js__WEBPACK_IMPORTED_MODULE_2__["default"].extend(publicAPI, model, initialValues); // Object specific methods

  vtkMouseCameraTrackballZoomToMouseManipulator(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].newInstance(extend, 'vtkMouseCameraTrackballZoomToMouseManipulator'); // ----------------------------------------------------------------------------

var vtkMouseCameraTrackballZoomToMouseManipulator$1 = {
  newInstance: newInstance,
  extend: extend
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Interaction/Style/InteractorStyleManipulator.js":
/*!***************************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Interaction/Style/InteractorStyleManipulator.js ***!
  \***************************************************************************************/
/*! exports provided: STATIC, default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "STATIC", function() { return STATIC; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkInteractorStyleManipulator$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "../node_modules/@babel/runtime/helpers/defineProperty.js");
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _Rendering_Core_InteractorStyle_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../Rendering/Core/InteractorStyle.js */ "../node_modules/@kitware/vtk.js/Rendering/Core/InteractorStyle.js");




function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var vtkDebugMacro = _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].vtkDebugMacro;
var States = _Rendering_Core_InteractorStyle_js__WEBPACK_IMPORTED_MODULE_2__["default"].States; // ----------------------------------------------------------------------------
// Event Types
// ----------------------------------------------------------------------------

var START_INTERACTION_EVENT = {
  type: 'StartInteractionEvent'
};
var INTERACTION_EVENT = {
  type: 'InteractionEvent'
};
var END_INTERACTION_EVENT = {
  type: 'EndInteractionEvent'
}; // ----------------------------------------------------------------------------
// Global methods
// ----------------------------------------------------------------------------

function translateCamera(renderer, rwi, toX, toY, fromX, fromY) {
  var cam = renderer.getActiveCamera();
  var viewFocus = cam.getFocalPoint();
  viewFocus = rwi.getInteractorStyle().computeWorldToDisplay(renderer, viewFocus[0], viewFocus[1], viewFocus[2]);
  var focalDepth = viewFocus[2];
  var newPickPoint = rwi.getInteractorStyle().computeDisplayToWorld(renderer, toX, toY, focalDepth);
  var oldPickPoint = rwi.getInteractorStyle().computeDisplayToWorld(renderer, fromX, fromY, focalDepth); // camera motion is reversed

  var motionVector = [oldPickPoint[0] - newPickPoint[0], oldPickPoint[1] - newPickPoint[1], oldPickPoint[2] - newPickPoint[2]];
  viewFocus = cam.getFocalPoint();
  var viewPoint = cam.getPosition();
  cam.setFocalPoint(motionVector[0] + viewFocus[0], motionVector[1] + viewFocus[1], motionVector[2] + viewFocus[2]);
  cam.setPosition(motionVector[0] + viewPoint[0], motionVector[1] + viewPoint[1], motionVector[2] + viewPoint[2]);
}

function dollyToPosition(fact, position, renderer, rwi) {
  var cam = renderer.getActiveCamera();

  if (cam.getParallelProjection()) {
    // Zoom relatively to the cursor
    var aSize = rwi.getView().getSize();
    var w = aSize[0];
    var h = aSize[1];
    var x0 = w / 2;
    var y0 = h / 2;
    var x1 = position.x;
    var y1 = position.y;
    translateCamera(renderer, rwi, x0, y0, x1, y1);
    cam.setParallelScale(cam.getParallelScale() / fact);
    translateCamera(renderer, rwi, x1, y1, x0, y0);
  } else {
    // Zoom relatively to the cursor position
    // Move focal point to cursor position
    var viewFocus = cam.getFocalPoint();
    var norm = cam.getViewPlaneNormal();
    viewFocus = rwi.getInteractorStyle().computeWorldToDisplay(renderer, viewFocus[0], viewFocus[1], viewFocus[2]);
    var newFp = rwi.getInteractorStyle().computeDisplayToWorld(renderer, position.x, position.y, viewFocus[2]);
    cam.setFocalPoint(newFp[0], newFp[1], newFp[2]); // Move camera in/out along projection direction

    cam.dolly(fact);
    renderer.resetCameraClippingRange(); // Find new focal point

    var newCameraPos = cam.getPosition();
    viewFocus = cam.getFocalPoint();
    var newPoint = [0, 0, 0];
    var t = norm[0] * (viewFocus[0] - newCameraPos[0]) + norm[1] * (viewFocus[1] - newCameraPos[1]) + norm[2] * (viewFocus[2] - newCameraPos[2]);
    t /= Math.pow(norm[0], 2) + Math.pow(norm[1], 2) + Math.pow(norm[2], 2);
    newPoint[0] = newCameraPos[0] + norm[0] * t;
    newPoint[1] = newCameraPos[1] + norm[1] * t;
    newPoint[2] = newCameraPos[2] + norm[2] * t;
    cam.setFocalPoint(newPoint[0], newPoint[1], newPoint[2]);
    renderer.resetCameraClippingRange();
  }
}

function dollyByFactor(interactor, renderer, factor) {
  if (Number.isNaN(factor)) {
    return;
  }

  var camera = renderer.getActiveCamera();

  if (camera.getParallelProjection()) {
    camera.setParallelScale(camera.getParallelScale() / factor);
  } else {
    camera.dolly(factor);
    renderer.resetCameraClippingRange();
  }

  if (interactor.getLightFollowCamera()) {
    renderer.updateLightsGeometryToFollowCamera();
  }
} // ----------------------------------------------------------------------------
// Static API
// ----------------------------------------------------------------------------


var STATIC = {
  dollyToPosition: dollyToPosition,
  translateCamera: translateCamera,
  dollyByFactor: dollyByFactor
}; // ----------------------------------------------------------------------------
// vtkInteractorStyleManipulator methods
// ----------------------------------------------------------------------------

function vtkInteractorStyleManipulator(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkInteractorStyleManipulator');
  model.mouseManipulators = [];
  model.keyboardManipulators = [];
  model.vrManipulators = [];
  model.gestureManipulators = [];
  model.currentManipulator = null;
  model.currentWheelManipulator = null;
  model.centerOfRotation = [0, 0, 0];
  model.rotationFactor = 1; //-------------------------------------------------------------------------

  publicAPI.removeAllManipulators = function () {
    publicAPI.removeAllMouseManipulators();
    publicAPI.removeAllKeyboardManipulators();
    publicAPI.removeAllVRManipulators();
    publicAPI.removeAllGestureManipulators();
  }; //-------------------------------------------------------------------------


  publicAPI.removeAllMouseManipulators = function () {
    model.mouseManipulators = [];
  }; //-------------------------------------------------------------------------


  publicAPI.removeAllKeyboardManipulators = function () {
    model.keyboardManipulators = [];
  }; //-------------------------------------------------------------------------


  publicAPI.removeAllVRManipulators = function () {
    model.vrManipulators = [];
  }; //-------------------------------------------------------------------------


  publicAPI.removeAllGestureManipulators = function () {
    model.gestureManipulators = [];
  }; //-------------------------------------------------------------------------


  var removeManipulator = function removeManipulator(manipulator, list) {
    var index = list.indexOf(manipulator);

    if (index === -1) {
      return false;
    }

    list.splice(index, 1);
    publicAPI.modified();
    return true;
  }; //-------------------------------------------------------------------------


  publicAPI.removeMouseManipulator = function (manipulator) {
    return removeManipulator(manipulator, model.mouseManipulators);
  }; //-------------------------------------------------------------------------


  publicAPI.removeKeyboardManipulator = function (manipulator) {
    return removeManipulator(manipulator, model.keyboardManipulators);
  }; //-------------------------------------------------------------------------


  publicAPI.removeVRManipulator = function (manipulator) {
    return removeManipulator(manipulator, model.vrManipulators);
  }; //-------------------------------------------------------------------------


  publicAPI.removeGestureManipulator = function (manipulator) {
    return removeManipulator(manipulator, model.gestureManipulators);
  }; //-------------------------------------------------------------------------


  var addManipulator = function addManipulator(manipulator, list) {
    var index = list.indexOf(manipulator);

    if (index !== -1) {
      return false;
    }

    list.push(manipulator);
    publicAPI.modified();
    return true;
  }; //-------------------------------------------------------------------------


  publicAPI.addMouseManipulator = function (manipulator) {
    return addManipulator(manipulator, model.mouseManipulators);
  }; //-------------------------------------------------------------------------


  publicAPI.addKeyboardManipulator = function (manipulator) {
    return addManipulator(manipulator, model.keyboardManipulators);
  }; //-------------------------------------------------------------------------


  publicAPI.addVRManipulator = function (manipulator) {
    return addManipulator(manipulator, model.vrManipulators);
  }; //-------------------------------------------------------------------------


  publicAPI.addGestureManipulator = function (manipulator) {
    return addManipulator(manipulator, model.gestureManipulators);
  }; //-------------------------------------------------------------------------


  publicAPI.getNumberOfMouseManipulators = function () {
    return model.mouseManipulators.length;
  }; //-------------------------------------------------------------------------


  publicAPI.getNumberOfKeyboardManipulators = function () {
    return model.keyboardManipulators.length;
  }; //-------------------------------------------------------------------------


  publicAPI.getNumberOfVRManipulators = function () {
    return model.vrManipulators.length;
  }; //-------------------------------------------------------------------------


  publicAPI.getNumberOfGestureManipulators = function () {
    return model.gestureManipulators.length;
  }; //-------------------------------------------------------------------------


  publicAPI.resetCurrentManipulator = function () {
    model.currentManipulator = null;
    model.currentWheelManipulator = null;
  }; //-------------------------------------------------------------------------
  // Mouse
  //-------------------------------------------------------------------------


  publicAPI.handleLeftButtonPress = function (callData) {
    model.previousPosition = callData.position;
    publicAPI.onButtonDown(1, callData);
  }; //-------------------------------------------------------------------------


  publicAPI.handleMiddleButtonPress = function (callData) {
    model.previousPosition = callData.position;
    publicAPI.onButtonDown(2, callData);
  }; //-------------------------------------------------------------------------


  publicAPI.handleRightButtonPress = function (callData) {
    model.previousPosition = callData.position;
    publicAPI.onButtonDown(3, callData);
  }; //-------------------------------------------------------------------------


  publicAPI.handleButton3D = function (ed) {
    if (!ed) {
      return;
    } // Look for a matching 3D camera interactor.


    model.currentManipulator = publicAPI.findVRManipulator(ed.device, ed.input, ed.pressed);

    if (model.currentManipulator) {
      model.currentManipulator.onButton3D(publicAPI, ed.pokedRenderer, model.state, ed.device, ed.input, ed.pressed);

      if (ed.pressed) {
        publicAPI.startCameraPose();
      } else {
        publicAPI.endCameraPose();
      }
    } else {
      vtkDebugMacro('No manipulator found');
    }
  }; //-------------------------------------------------------------------------


  publicAPI.handleMove3D = function (ed) {
    if (model.currentManipulator && model.state === States.IS_CAMERA_POSE) {
      model.currentManipulator.onMove3D(publicAPI, ed.pokedRenderer, model.state, ed);
    }
  }; //-------------------------------------------------------------------------


  publicAPI.onButtonDown = function (button, callData) {
    // Must not be processing an interaction to start another.
    if (model.currentManipulator) {
      return;
    } // Look for a matching camera interactor.


    model.currentManipulator = publicAPI.findMouseManipulator(button, callData.shiftKey, callData.controlKey, callData.altKey);

    if (model.currentManipulator) {
      if (model.currentManipulator.setCenter) {
        model.currentManipulator.setCenter(model.centerOfRotation);
      }

      if (model.currentManipulator.setRotationFactor) {
        model.currentManipulator.setRotationFactor(model.rotationFactor);
      }

      model.currentManipulator.startInteraction();
      model.currentManipulator.onButtonDown(model.interactor, callData.pokedRenderer, callData.position);
      model.interactor.requestAnimation(publicAPI.onButtonDown);
      publicAPI.invokeStartInteractionEvent(START_INTERACTION_EVENT);
    } else {
      vtkDebugMacro('No manipulator found');
    }
  }; //-------------------------------------------------------------------------


  publicAPI.findMouseManipulator = function (button, shift, control, alt) {
    // Look for a matching camera manipulator
    var manipulator = null;
    var count = model.mouseManipulators.length;

    while (count--) {
      var manip = model.mouseManipulators[count];

      if (manip && manip.getButton() === button && manip.getShift() === shift && manip.getControl() === control && manip.getAlt() === alt && manip.isDragEnabled()) {
        manipulator = manip;
      }
    }

    return manipulator;
  }; //-------------------------------------------------------------------------


  publicAPI.findVRManipulator = function (device, input) {
    // Look for a matching camera manipulator
    var manipulator = null;
    var count = model.vrManipulators.length;

    while (count--) {
      var manip = model.vrManipulators[count];

      if (manip && manip.getDevice() === device && manip.getInput() === input) {
        manipulator = manip;
      }
    }

    return manipulator;
  }; //-------------------------------------------------------------------------


  publicAPI.handleLeftButtonRelease = function () {
    publicAPI.onButtonUp(1);
  }; //-------------------------------------------------------------------------


  publicAPI.handleMiddleButtonRelease = function () {
    publicAPI.onButtonUp(2);
  }; //-------------------------------------------------------------------------


  publicAPI.handleRightButtonRelease = function () {
    publicAPI.onButtonUp(3);
  }; //-------------------------------------------------------------------------


  publicAPI.onButtonUp = function (button) {
    if (!model.currentManipulator) {
      return;
    }

    if (model.currentManipulator.getButton && model.currentManipulator.getButton() === button) {
      model.currentManipulator.onButtonUp(model.interactor);
      model.currentManipulator.endInteraction();
      model.currentManipulator = null;
      model.interactor.cancelAnimation(publicAPI.onButtonDown);
      publicAPI.invokeEndInteractionEvent(END_INTERACTION_EVENT);
    }
  }; //-------------------------------------------------------------------------


  publicAPI.handleStartMouseWheel = function (callData) {
    // Must not be processing a wheel interaction to start another.
    if (model.currentWheelManipulator) {
      return;
    }

    var manipulator = null;
    var count = model.mouseManipulators.length;

    while (count--) {
      var manip = model.mouseManipulators[count];

      if (manip && manip.isScrollEnabled() && manip.getShift() === callData.shiftKey && manip.getControl() === callData.controlKey && manip.getAlt() === callData.altKey) {
        manipulator = manip;
      }
    }

    if (manipulator) {
      model.currentWheelManipulator = manipulator;
      model.currentWheelManipulator.onStartScroll(model.interactor, callData.pokedRenderer, callData.spinY);
      model.currentWheelManipulator.startInteraction();
      model.interactor.requestAnimation(publicAPI.handleStartMouseWheel);
      publicAPI.invokeStartInteractionEvent(START_INTERACTION_EVENT);
    } else {
      vtkDebugMacro('No manipulator found');
    }
  }; //-------------------------------------------------------------------------


  publicAPI.handleEndMouseWheel = function () {
    if (!model.currentWheelManipulator) {
      return;
    }

    if (model.currentWheelManipulator.onEndScroll) {
      model.currentWheelManipulator.onEndScroll(model.interactor);
      model.currentWheelManipulator.endInteraction();
      model.currentWheelManipulator = null;
      model.interactor.cancelAnimation(publicAPI.handleStartMouseWheel);
      publicAPI.invokeEndInteractionEvent(END_INTERACTION_EVENT);
    }
  }; //-------------------------------------------------------------------------


  publicAPI.handleMouseWheel = function (callData) {
    if (model.currentWheelManipulator && model.currentWheelManipulator.onScroll) {
      model.currentWheelManipulator.onScroll(model.interactor, callData.pokedRenderer, callData.spinY, model.cachedMousePosition);
      publicAPI.invokeInteractionEvent(INTERACTION_EVENT);
    }
  }; //-------------------------------------------------------------------------


  publicAPI.handleMouseMove = function (callData) {
    model.cachedMousePosition = callData.position;

    if (model.currentManipulator && model.currentManipulator.onMouseMove) {
      model.currentManipulator.onMouseMove(model.interactor, callData.pokedRenderer, callData.position);
      publicAPI.invokeInteractionEvent(INTERACTION_EVENT);
    }
  }; //-------------------------------------------------------------------------
  // Keyboard
  //-------------------------------------------------------------------------


  publicAPI.handleKeyPress = function (callData) {
    model.keyboardManipulators.filter(function (m) {
      return m.onKeyPress;
    }).forEach(function (manipulator) {
      manipulator.onKeyPress(model.interactor, callData.pokedRenderer, callData.key);
      publicAPI.invokeInteractionEvent(INTERACTION_EVENT);
    });
  }; //-------------------------------------------------------------------------


  publicAPI.handleKeyDown = function (callData) {
    model.keyboardManipulators.filter(function (m) {
      return m.onKeyDown;
    }).forEach(function (manipulator) {
      manipulator.onKeyDown(model.interactor, callData.pokedRenderer, callData.key);
      publicAPI.invokeInteractionEvent(INTERACTION_EVENT);
    });
  }; //-------------------------------------------------------------------------


  publicAPI.handleKeyUp = function (callData) {
    model.keyboardManipulators.filter(function (m) {
      return m.onKeyUp;
    }).forEach(function (manipulator) {
      manipulator.onKeyUp(model.interactor, callData.pokedRenderer, callData.key);
      publicAPI.invokeInteractionEvent(INTERACTION_EVENT);
    });
  }; //-------------------------------------------------------------------------
  // Gesture
  //-------------------------------------------------------------------------


  publicAPI.handleStartPinch = function (callData) {
    publicAPI.startDolly();
    var count = model.gestureManipulators.length;

    while (count--) {
      var manipulator = model.gestureManipulators[count];

      if (manipulator && manipulator.isPinchEnabled()) {
        manipulator.onStartPinch(model.interactor, callData.scale);
        manipulator.startInteraction();
      }
    }

    model.interactor.requestAnimation(publicAPI.handleStartPinch);
    publicAPI.invokeStartInteractionEvent(START_INTERACTION_EVENT);
  }; //--------------------------------------------------------------------------


  publicAPI.handleEndPinch = function () {
    publicAPI.endDolly();
    var count = model.gestureManipulators.length;

    while (count--) {
      var manipulator = model.gestureManipulators[count];

      if (manipulator && manipulator.isPinchEnabled()) {
        manipulator.onEndPinch(model.interactor);
        manipulator.endInteraction();
      }
    }

    model.interactor.cancelAnimation(publicAPI.handleStartPinch);
    publicAPI.invokeEndInteractionEvent(END_INTERACTION_EVENT);
  }; //----------------------------------------------------------------------------


  publicAPI.handleStartRotate = function (callData) {
    publicAPI.startRotate();
    var count = model.gestureManipulators.length;

    while (count--) {
      var manipulator = model.gestureManipulators[count];

      if (manipulator && manipulator.isRotateEnabled()) {
        manipulator.onStartRotate(model.interactor, callData.rotation);
        manipulator.startInteraction();
      }
    }

    model.interactor.requestAnimation(publicAPI.handleStartRotate);
    publicAPI.invokeStartInteractionEvent(START_INTERACTION_EVENT);
  }; //--------------------------------------------------------------------------


  publicAPI.handleEndRotate = function () {
    publicAPI.endRotate();
    var count = model.gestureManipulators.length;

    while (count--) {
      var manipulator = model.gestureManipulators[count];

      if (manipulator && manipulator.isRotateEnabled()) {
        manipulator.onEndRotate(model.interactor);
        manipulator.endInteraction();
      }
    }

    model.interactor.cancelAnimation(publicAPI.handleStartRotate);
    publicAPI.invokeEndInteractionEvent(END_INTERACTION_EVENT);
  }; //----------------------------------------------------------------------------


  publicAPI.handleStartPan = function (callData) {
    publicAPI.startPan();
    var count = model.gestureManipulators.length;

    while (count--) {
      var manipulator = model.gestureManipulators[count];

      if (manipulator && manipulator.isPanEnabled()) {
        manipulator.onStartPan(model.interactor, callData.translation);
        manipulator.startInteraction();
      }
    }

    model.interactor.requestAnimation(publicAPI.handleStartPan);
    publicAPI.invokeStartInteractionEvent(START_INTERACTION_EVENT);
  }; //--------------------------------------------------------------------------


  publicAPI.handleEndPan = function () {
    publicAPI.endPan();
    var count = model.gestureManipulators.length;

    while (count--) {
      var manipulator = model.gestureManipulators[count];

      if (manipulator && manipulator.isPanEnabled()) {
        manipulator.onEndPan(model.interactor);
        manipulator.endInteraction();
      }
    }

    model.interactor.cancelAnimation(publicAPI.handleStartPan);
    publicAPI.invokeEndInteractionEvent(END_INTERACTION_EVENT);
  }; //----------------------------------------------------------------------------


  publicAPI.handlePinch = function (callData) {
    var count = model.gestureManipulators.length;
    var actionCount = 0;

    while (count--) {
      var manipulator = model.gestureManipulators[count];

      if (manipulator && manipulator.isPinchEnabled()) {
        manipulator.onPinch(model.interactor, callData.pokedRenderer, callData.scale);
        actionCount++;
      }
    }

    if (actionCount) {
      publicAPI.invokeInteractionEvent(INTERACTION_EVENT);
    }
  }; //----------------------------------------------------------------------------


  publicAPI.handlePan = function (callData) {
    var count = model.gestureManipulators.length;
    var actionCount = 0;

    while (count--) {
      var manipulator = model.gestureManipulators[count];

      if (manipulator && manipulator.isPanEnabled()) {
        manipulator.onPan(model.interactor, callData.pokedRenderer, callData.translation);
        actionCount++;
      }
    }

    if (actionCount) {
      publicAPI.invokeInteractionEvent(INTERACTION_EVENT);
    }
  }; //----------------------------------------------------------------------------


  publicAPI.handleRotate = function (callData) {
    var count = model.gestureManipulators.length;
    var actionCount = 0;

    while (count--) {
      var manipulator = model.gestureManipulators[count];

      if (manipulator && manipulator.isRotateEnabled()) {
        manipulator.onRotate(model.interactor, callData.pokedRenderer, callData.rotation);
        actionCount++;
      }
    }

    if (actionCount) {
      publicAPI.invokeInteractionEvent(INTERACTION_EVENT);
    }
  };
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {
  cachedMousePosition: null,
  currentManipulator: null,
  currentWheelManipulator: null,
  // mouseManipulators: null,
  // keyboardManipulators: null,
  // vrManipulators: null,
  // gestureManipulators: null,
  centerOfRotation: [0, 0, 0],
  rotationFactor: 1
}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance

  _Rendering_Core_InteractorStyle_js__WEBPACK_IMPORTED_MODULE_2__["default"].extend(publicAPI, model, initialValues); // Create get-set macros

  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].setGet(publicAPI, model, ['rotationFactor']);
  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].get(publicAPI, model, ['mouseManipulators', 'keyboardManipulators', 'vrManipulators', 'gestureManipulators']);
  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].setGetArray(publicAPI, model, ['centerOfRotation'], 3); // Object specific methods

  vtkInteractorStyleManipulator(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].newInstance(extend, 'vtkInteractorStyleManipulator'); // ----------------------------------------------------------------------------

var vtkInteractorStyleManipulator$1 = _objectSpread({
  newInstance: newInstance,
  extend: extend
}, STATIC);




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Interaction/UI/Icons/Contrast.svg.js":
/*!****************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Interaction/UI/Icons/Contrast.svg.js ***!
  \****************************************************************************/
/*! exports provided: s */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "s", function() { return svgEdge; });
var svgEdge = "<svg viewBox=\"0 0 180 180\" xmlns=\"http://www.w3.org/2000/svg\"><defs><linearGradient x1=\"100%\" y1=\"50%\" x2=\"0%\" y2=\"50%\" id=\"a\"><stop stop-color=\"#FFF\" offset=\"0%\"/><stop stop-color=\"#FFF\" offset=\"49.416%\"/><stop offset=\"49.677%\"/><stop offset=\"100%\"/></linearGradient></defs><circle cx=\"90\" cy=\"90\" r=\"80\" stroke-width=\"10\" stroke=\"#000\" fill=\"url(#a)\" fill-rule=\"evenodd\"/></svg>";




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Interaction/UI/Icons/Logo.svg.js":
/*!************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Interaction/UI/Icons/Logo.svg.js ***!
  \************************************************************************/
/*! exports provided: s */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "s", function() { return svgLogo; });
var svgLogo = "<svg viewBox=\"0 0 196 196\" xmlns=\"http://www.w3.org/2000/svg\"><g fill=\"none\" fill-rule=\"evenodd\"><path d=\"M67.77 157.024a86.095 86.095 0 01-2.3 9.306c-.977 3.206-2.44 6.116-4.392 8.73-1.952 2.614-4.531 4.758-7.738 6.43-3.206 1.674-7.284 2.51-12.233 2.51-6.343 0-11.501-1.55-15.474-4.653-3.974-3.102-6.518-7.301-7.633-12.599l16.102-5.228c.279 1.882 1.01 3.485 2.196 4.81 1.185 1.324 2.753 1.986 4.705 1.986 3.067 0 5.262-1.08 6.587-3.24 1.324-2.162 2.265-4.88 2.823-8.156l8.574-48.933h17.565l-8.783 49.037zm58.029-31.053c-1.394-1.883-3.137-3.311-5.228-4.287-2.091-.976-4.426-1.464-7.005-1.464-1.185 0-2.44.157-3.764.47a10.815 10.815 0 00-3.608 1.569 9.806 9.806 0 00-2.718 2.77c-.732 1.116-1.098 2.475-1.098 4.078 0 2.091.819 3.747 2.457 4.967 1.638 1.22 3.921 2.352 6.849 3.398 3.206 1.115 6.064 2.352 8.573 3.712 2.51 1.359 4.636 2.91 6.378 4.652 1.743 1.743 3.067 3.712 3.974 5.908.906 2.196 1.359 4.688 1.359 7.476 0 4.461-.924 8.26-2.77 11.397-1.848 3.136-4.236 5.698-7.163 7.685-2.928 1.986-6.204 3.433-9.829 4.339-3.624.906-7.214 1.359-10.769 1.359-2.649 0-5.298-.244-7.946-.732a42.608 42.608 0 01-7.633-2.143 31.681 31.681 0 01-6.796-3.608c-2.092-1.463-3.869-3.136-5.333-5.018l12.86-10.456c1.465 2.23 3.625 4.043 6.483 5.437 2.858 1.394 5.751 2.091 8.679 2.091 1.533 0 3.014-.157 4.443-.47 1.43-.314 2.701-.837 3.817-1.569a8.267 8.267 0 002.666-2.823c.662-1.15.993-2.527.993-4.13 0-2.579-1.045-4.618-3.136-6.117-2.092-1.498-4.88-2.84-8.365-4.025a58.492 58.492 0 01-6.849-2.823c-2.126-1.046-3.973-2.335-5.541-3.869-1.569-1.533-2.823-3.363-3.764-5.489-.941-2.126-1.412-4.688-1.412-7.685 0-3.764.784-7.162 2.353-10.194a23.324 23.324 0 016.43-7.738c2.719-2.126 5.89-3.764 9.515-4.914 3.624-1.15 7.493-1.725 11.606-1.725 2.16 0 4.356.21 6.587.627a35.853 35.853 0 016.43 1.83 28.502 28.502 0 015.699 2.98c1.742 1.185 3.206 2.544 4.39 4.078L125.8 125.97z\" fill=\"#8A8B8A\"/><rect fill=\"#1C4678\" transform=\"rotate(45 169.749 159.749)\" x=\"152.249\" y=\"142.249\" width=\"35\" height=\"35\" rx=\"17.5\"/><path fill=\"#1C4678\" d=\"M7.775 11l20.483 86.069h22.53l34.24-71.408H63.841L42.91 70.03 28.259 11zM88.663 25.344h50.476l-8.093 16.562-17.246-.049-9.652 54.62H85.609l9.572-54.535H80.99zM141.366 25.344l16.072.066-4.414 24.987h2.388l16.856-25.053h20.975l-22.442 33.403 13.203 54.063h-20.94l-10.652-44.43h-2.296l-5.125 28.135h-21.024l9.763-55.043z\"/><path fill=\"#8A8B8A\" d=\"M3 11h3.182l20.864 85.944h-3.187zM58.102 25.344h2.788L43.747 61.155l-.955-3.866zM88.608 44.469h2.883l-9.157 52.096H79.4zM126.785 44.469h2.924l-9.186 52.046H117.6zM166.38 25.344h3.594l-12.582 18.854 1.316-7.545zM150.902 74.75l8.917 37.613h-3.311l-7.075-29.073z\"/></g></svg>";




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Interaction/UI/Icons/Spacing.svg.js":
/*!***************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Interaction/UI/Icons/Spacing.svg.js ***!
  \***************************************************************************/
/*! exports provided: s */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "s", function() { return svgSpacing; });
var svgSpacing = "<svg viewBox=\"0 0 180 180\" xmlns=\"http://www.w3.org/2000/svg\"><g stroke=\"#000\" stroke-width=\"10\" fill=\"none\" fill-rule=\"evenodd\" stroke-linecap=\"square\"><path d=\"M10 90h160M10 133.488V47M170 133.488V47M90 133.488V47\"/></g></svg>";




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Interaction/UI/VolumeController.js":
/*!**************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Interaction/UI/VolumeController.js ***!
  \**************************************************************************/
/*! exports provided: default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkVolumeController$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "../node_modules/@babel/runtime/helpers/toConsumableArray.js");
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _Rendering_Core_ColorTransferFunction_ColorMapsLite_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../Rendering/Core/ColorTransferFunction/ColorMapsLite.js */ "../node_modules/@kitware/vtk.js/Rendering/Core/ColorTransferFunction/ColorMapsLite.js");
/* harmony import */ var _Widgets_PiecewiseGaussianWidget_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Widgets/PiecewiseGaussianWidget.js */ "../node_modules/@kitware/vtk.js/Interaction/Widgets/PiecewiseGaussianWidget.js");
/* harmony import */ var _Icons_Logo_svg_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Icons/Logo.svg.js */ "../node_modules/@kitware/vtk.js/Interaction/UI/Icons/Logo.svg.js");
/* harmony import */ var _Icons_Contrast_svg_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Icons/Contrast.svg.js */ "../node_modules/@kitware/vtk.js/Interaction/UI/Icons/Contrast.svg.js");
/* harmony import */ var _Icons_Spacing_svg_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Icons/Spacing.svg.js */ "../node_modules/@kitware/vtk.js/Interaction/UI/Icons/Spacing.svg.js");
/* harmony import */ var _VolumeController_VolumeController_module_css_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./VolumeController/VolumeController.module.css.js */ "../node_modules/@kitware/vtk.js/Interaction/UI/VolumeController/VolumeController.module.css.js");









// Global structures
// ----------------------------------------------------------------------------

var PRESETS_OPTIONS = _Rendering_Core_ColorTransferFunction_ColorMapsLite_js__WEBPACK_IMPORTED_MODULE_2__["default"].rgbPresetNames.map(function (name) {
  return "<option value=\"".concat(name, "\">").concat(name, "</option>");
}); // ----------------------------------------------------------------------------
// vtkVolumeController methods
// ----------------------------------------------------------------------------

function vtkVolumeController(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkVolumeController');
  model.el = document.createElement('div');
  model.el.setAttribute('class', _VolumeController_VolumeController_module_css_js__WEBPACK_IMPORTED_MODULE_7__["s"].container);
  model.widget = _Widgets_PiecewiseGaussianWidget_js__WEBPACK_IMPORTED_MODULE_3__["default"].newInstance({
    numberOfBins: 256,
    size: model.size
  });

  function updateUseShadow() {
    var useShadow = !!Number(model.el.querySelector('.js-shadow').value);
    model.actor.getProperty().setShade(useShadow);
    model.renderWindow.render();
  }

  function updateColorMapPreset() {
    var sourceDS = model.actor.getMapper().getInputData();

    if (!sourceDS) {
      return;
    }

    var dataArray = sourceDS.getPointData().getScalars() || sourceDS.getPointData().getArrays()[0];
    var dataRange = model.rescaleColorMap ? model.colorDataRange : dataArray.getRange();
    var preset = _Rendering_Core_ColorTransferFunction_ColorMapsLite_js__WEBPACK_IMPORTED_MODULE_2__["default"].getPresetByName(model.el.querySelector('.js-color-preset').value);
    var lookupTable = model.actor.getProperty().getRGBTransferFunction(0);
    lookupTable.applyColorMap(preset);
    lookupTable.setMappingRange.apply(lookupTable, _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(dataRange));
    lookupTable.updateRange();
    model.renderWindow.render();
  }

  function updateSpacing() {
    var value = Number(model.el.querySelector('.js-spacing').value);
    var sourceDS = model.actor.getMapper().getInputData();
    var sampleDistance = 0.7 * Math.sqrt(sourceDS.getSpacing().map(function (v) {
      return v * v;
    }).reduce(function (a, b) {
      return a + b;
    }, 0));
    model.actor.getMapper().setSampleDistance(sampleDistance * Math.pow(2, value * 3.0 - 1.5));
    model.renderWindow.render();
  }

  function updateEdgeGradient() {
    var value = Number(model.el.querySelector('.js-edge').value);

    if (value === 0) {
      model.actor.getProperty().setUseGradientOpacity(0, false);
    } else {
      var sourceDS = model.actor.getMapper().getInputData();
      var dataArray = sourceDS.getPointData().getScalars() || sourceDS.getPointData().getArrays()[0];
      var dataRange = dataArray.getRange();
      model.actor.getProperty().setUseGradientOpacity(0, true);
      var minV = Math.max(0.0, value - 0.3) / 0.7;
      model.actor.getProperty().setGradientOpacityMinimumValue(0, (dataRange[1] - dataRange[0]) * 0.2 * minV * minV);
      model.actor.getProperty().setGradientOpacityMaximumValue(0, (dataRange[1] - dataRange[0]) * 1.0 * value * value);
    }

    model.renderWindow.render();
  }

  publicAPI.setupContent = function (renderWindow, actor, isBackgroundDark) {
    var useShadow = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '1';
    var presetName = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 'erdc_rainbow_bright';
    publicAPI.setActor(actor);
    publicAPI.setRenderWindow(renderWindow);
    var sourceDS = model.actor.getMapper().getInputData();
    var dataArray = sourceDS.getPointData().getScalars() || sourceDS.getPointData().getArrays()[0];
    var lookupTable = model.actor.getProperty().getRGBTransferFunction(0);
    var piecewiseFunction = model.actor.getProperty().getScalarOpacity(0);
    var stylePostFix = isBackgroundDark ? 'DarkBG' : 'BrightBG';
    var localStyle = {};
    ['button', 'presets', 'shadow'].forEach(function (name) {
      localStyle[name] = _VolumeController_VolumeController_module_css_js__WEBPACK_IMPORTED_MODULE_7__["s"]["".concat(name).concat(stylePostFix)];
    });
    model.el.innerHTML = "\n      <div class=\"".concat(_VolumeController_VolumeController_module_css_js__WEBPACK_IMPORTED_MODULE_7__["s"].line, "\">\n        <div class=\"").concat(localStyle.button, " js-button\">").concat(_Icons_Logo_svg_js__WEBPACK_IMPORTED_MODULE_4__["s"], "</div>\n        <select class=\"").concat(localStyle.shadow, " js-shadow js-toggle\">\n          <option value=\"1\">Use Shadow</option>\n          <option value=\"0\">No Shadow</option>\n        </select>\n        <select class=\"").concat(localStyle.presets, " js-color-preset js-toggle\">\n          ").concat(PRESETS_OPTIONS, "\n        </select>\n      </div>\n      <div class=\"").concat(_VolumeController_VolumeController_module_css_js__WEBPACK_IMPORTED_MODULE_7__["s"].line, " js-toggle\">\n        <div class=\"").concat(_VolumeController_VolumeController_module_css_js__WEBPACK_IMPORTED_MODULE_7__["s"].sliderEntry, "\">\n          <div class=\"").concat(_VolumeController_VolumeController_module_css_js__WEBPACK_IMPORTED_MODULE_7__["s"].sliderIcon, "\">").concat(_Icons_Spacing_svg_js__WEBPACK_IMPORTED_MODULE_6__["s"], "</div>\n          <input type=\"range\" min=\"0\" max=\"1\" value=\"0.4\" step=\"0.01\" class=\"").concat(_VolumeController_VolumeController_module_css_js__WEBPACK_IMPORTED_MODULE_7__["s"].slider, " js-spacing\" />\n        </div>\n        <div class=\"").concat(_VolumeController_VolumeController_module_css_js__WEBPACK_IMPORTED_MODULE_7__["s"].sliderEntry, "\">\n          <div class=\"").concat(_VolumeController_VolumeController_module_css_js__WEBPACK_IMPORTED_MODULE_7__["s"].sliderIcon, "\">").concat(_Icons_Contrast_svg_js__WEBPACK_IMPORTED_MODULE_5__["s"], "</div>\n          <input type=\"range\" min=\"0\" max=\"1\" value=\"0.2\" step=\"0.01\" class=\"").concat(_VolumeController_VolumeController_module_css_js__WEBPACK_IMPORTED_MODULE_7__["s"].slider, " js-edge\" />\n        </div>\n      </div>\n      <div class=\"").concat(_VolumeController_VolumeController_module_css_js__WEBPACK_IMPORTED_MODULE_7__["s"].piecewiseEditor, " js-pwf js-toggle\"></div>\n    "); // DOM elements

    var domToggleButton = model.el.querySelector('.js-button');
    var domShadow = model.el.querySelector('.js-shadow');
    var domPreset = model.el.querySelector('.js-color-preset');
    var domSpacing = model.el.querySelector('.js-spacing');
    var domEdge = model.el.querySelector('.js-edge');
    var widgetContainer = model.el.querySelector('.js-pwf'); // Piecewise editor widget

    model.widget.updateStyle({
      backgroundColor: 'rgba(255, 255, 255, 0.6)',
      histogramColor: 'rgba(100, 100, 100, 0.5)',
      strokeColor: 'rgb(0, 0, 0)',
      activeColor: 'rgb(255, 255, 255)',
      handleColor: 'rgb(50, 150, 50)',
      buttonDisableFillColor: 'rgba(255, 255, 255, 0.5)',
      buttonDisableStrokeColor: 'rgba(0, 0, 0, 0.5)',
      buttonStrokeColor: 'rgba(0, 0, 0, 1)',
      buttonFillColor: 'rgba(255, 255, 255, 1)',
      strokeWidth: 2,
      activeStrokeWidth: 3,
      buttonStrokeWidth: 1.5,
      handleWidth: 3,
      iconSize: 0,
      padding: 10
    });
    model.widget.addGaussian(0.5, 1.0, 0.5, 0.5, 0.4);
    model.widget.setDataArray(dataArray.getData());
    model.widget.setColorTransferFunction(lookupTable);
    model.widget.applyOpacity(piecewiseFunction);
    model.widget.setContainer(widgetContainer);
    model.widget.bindMouseListeners();
    model.colorDataRange = model.widget.getOpacityRange(); // Attach listeners

    domToggleButton.addEventListener('click', publicAPI.toggleVisibility);
    domShadow.addEventListener('change', updateUseShadow);
    domPreset.addEventListener('change', updateColorMapPreset);
    domSpacing.addEventListener('input', updateSpacing);
    domEdge.addEventListener('input', updateEdgeGradient);
    model.widget.onOpacityChange(function () {
      model.widget.applyOpacity(piecewiseFunction);
      model.colorDataRange = model.widget.getOpacityRange();

      if (model.rescaleColorMap) {
        updateColorMapPreset();
      }

      if (!model.renderWindow.getInteractor().isAnimating()) {
        model.renderWindow.render();
      }
    });
    model.widget.onAnimation(function (start) {
      if (start) {
        model.renderWindow.getInteractor().requestAnimation(model.widget);
      } else {
        model.renderWindow.getInteractor().cancelAnimation(model.widget);
        model.renderWindow.render();
      }
    });
    lookupTable.onModified(function () {
      model.widget.render();

      if (!model.renderWindow.getInteractor().isAnimating()) {
        model.renderWindow.render();
      }
    }); // Set default values

    domShadow.value = Number(useShadow) ? '1' : '0';
    domPreset.value = presetName; // Apply values

    updateUseShadow();
    updateColorMapPreset();
    updateSpacing();
    updateEdgeGradient();
  };

  publicAPI.setContainer = function (el) {
    if (model.container && model.container !== el) {
      model.container.removeChild(model.el);
    }

    if (model.container !== el) {
      model.container = el;

      if (model.container) {
        model.container.appendChild(model.el);
      }

      publicAPI.modified();
    }
  };

  var rescaleColorMap = publicAPI.setRescaleColorMap;

  publicAPI.setRescaleColorMap = function (value) {
    if (rescaleColorMap(value)) {
      updateColorMapPreset();
      return true;
    }

    return false;
  };

  publicAPI.toggleVisibility = function () {
    publicAPI.setExpanded(!publicAPI.getExpanded());
  };

  publicAPI.setExpanded = function (expanded) {
    var elements = model.el.querySelectorAll('.js-toggle');
    var count = elements.length;
    model.expanded = expanded;

    if (model.expanded) {
      while (count--) {
        elements[count].style.display = 'flex';
      }
    } else {
      while (count--) {
        elements[count].style.display = 'none';
      }
    }
  };

  publicAPI.getExpanded = function () {
    return model.expanded;
  };

  publicAPI.setSize = model.widget.setSize;
  publicAPI.render = model.widget.render;
  publicAPI.onAnimation = model.widget.onAnimation; // Trigger rendering for any modified event

  publicAPI.onModified(publicAPI.render);
  publicAPI.setSize.apply(publicAPI, _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(model.size));
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {
  size: [600, 300],
  expanded: true,
  rescaleColorMap: false
}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Object methods

  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].obj(publicAPI, model);
  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].setGet(publicAPI, model, ['actor', 'renderWindow', 'rescaleColorMap']);
  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].get(publicAPI, model, ['widget']); // Object specific methods

  vtkVolumeController(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].newInstance(extend, 'vtkVolumeController'); // ----------------------------------------------------------------------------

var vtkVolumeController$1 = {
  newInstance: newInstance,
  extend: extend
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Interaction/UI/VolumeController/VolumeController.module.css.js":
/*!******************************************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Interaction/UI/VolumeController/VolumeController.module.css.js ***!
  \******************************************************************************************************/
/*! exports provided: s */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "s", function() { return style; });
/* harmony import */ var _vendor_style_inject_dist_style_inject_es_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../vendor/style-inject/dist/style-inject.es.js */ "../node_modules/@kitware/vtk.js/vendor/style-inject/dist/style-inject.es.js");


var css_248z = ".VolumeController-module_container__2HNSO {\n  display: flex;\n  align-items: stretch;\n  flex-direction: column;\n  justify-content: space-between;\n  position: absolute;\n  top: 5px;\n  left: 5px;\n  background: rgba(128, 128, 128, 0.5);\n  border-radius: 5px;\n  padding: 2px;\n  border: 0.5px solid black;\n  box-sizing: border-box;\n}\n\n.VolumeController-module_line__3rtqL {\n  display: flex;\n  flex-direction: row;\n  flex: 1;\n  align-items: center;\n  justify-content: space-between;\n}\n\n.VolumeController-module_button__2T-xL {\n  cursor: pointer;\n  width: 1rem;\n  margin-left: 5px;\n  margin-right: 5px;\n}\n\n.VolumeController-module_button__2T-xL svg {\n  width: 1rem;\n  height: 1rem;\n}\n\n.VolumeController-module_sliderEntry__27XSC {\n  flex: 1;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n}\n\n.VolumeController-module_sliderIcon__U8YAZ {\n  height: 1rem;\n}\n\n.VolumeController-module_slider__3PS68 {\n  flex: 1;\n  min-height: 1rem;\n  width: 5px;\n}\n\n.VolumeController-module_piecewiseEditor__2_jav {\n  flex: 1;\n}\n\n.VolumeController-module_select__7mbfS {\n  flex: 1;\n  border: none;\n  background: transparent;\n  color: white;\n  border: none;\n  -moz-appearance: none;\n  width: 5px;\n}\n\n.VolumeController-module_select__7mbfS select:focus {\n  outline: none;\n  border: none;\n}\n\n.VolumeController-module_presets__1h4j5 {\n}\n\n.VolumeController-module_shadow__29K9t {\n}\n\n.VolumeController-module_buttonDarkBG__3W1zO {\n}\n\n.VolumeController-module_presetsDarkBG__2ZI2W {\n  color: white;\n}\n\n.VolumeController-module_presetsDarkBG__2ZI2W option {\n  color: black;\n}\n\n.VolumeController-module_shadowDarkBG__WHYZ- {\n  color: white;\n}\n\n.VolumeController-module_shadowDarkBG__WHYZ- option {\n  color: black;\n}\n\n.VolumeController-module_buttonBrightBG__2dstz {\n}\n\n.VolumeController-module_presetsBrightBG__3_VRC {\n  color: black;\n}\n\n.VolumeController-module_presetsBrightBG__3_VRC option {\n  color: white;\n}\n\n.VolumeController-module_shadowBrightBG__YCHpe {\n  color: black;\n}\n\n.VolumeController-module_shadowBrightBG__YCHpe option {\n  color: white;\n}\n";
var style = {"container":"VolumeController-module_container__2HNSO","line":"VolumeController-module_line__3rtqL","button":"VolumeController-module_button__2T-xL","sliderEntry":"VolumeController-module_sliderEntry__27XSC","sliderIcon":"VolumeController-module_sliderIcon__U8YAZ VolumeController-module_button__2T-xL","slider":"VolumeController-module_slider__3PS68","piecewiseEditor":"VolumeController-module_piecewiseEditor__2_jav","select":"VolumeController-module_select__7mbfS","presets":"VolumeController-module_presets__1h4j5 VolumeController-module_select__7mbfS","shadow":"VolumeController-module_shadow__29K9t VolumeController-module_select__7mbfS","buttonDarkBG":"VolumeController-module_buttonDarkBG__3W1zO VolumeController-module_button__2T-xL","presetsDarkBG":"VolumeController-module_presetsDarkBG__2ZI2W VolumeController-module_presets__1h4j5 VolumeController-module_select__7mbfS","shadowDarkBG":"VolumeController-module_shadowDarkBG__WHYZ- VolumeController-module_shadow__29K9t VolumeController-module_select__7mbfS","buttonBrightBG":"VolumeController-module_buttonBrightBG__2dstz VolumeController-module_button__2T-xL","presetsBrightBG":"VolumeController-module_presetsBrightBG__3_VRC VolumeController-module_presets__1h4j5 VolumeController-module_select__7mbfS","shadowBrightBG":"VolumeController-module_shadowBrightBG__YCHpe VolumeController-module_shadow__29K9t VolumeController-module_select__7mbfS"};
Object(_vendor_style_inject_dist_style_inject_es_js__WEBPACK_IMPORTED_MODULE_0__["s"])(css_248z);




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Interaction/Widgets/OrientationMarkerWidget.js":
/*!**************************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Interaction/Widgets/OrientationMarkerWidget.js ***!
  \**************************************************************************************/
/*! exports provided: DEFAULT_VALUES, default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DEFAULT_VALUES", function() { return DEFAULT_VALUES; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkOrientationMarkerWidget$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "../node_modules/@babel/runtime/helpers/toConsumableArray.js");
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ "../node_modules/@babel/runtime/helpers/slicedToArray.js");
/* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "../node_modules/@babel/runtime/helpers/defineProperty.js");
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _Rendering_Core_Renderer_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../Rendering/Core/Renderer.js */ "../node_modules/@kitware/vtk.js/Rendering/Core/Renderer.js");
/* harmony import */ var _OrientationMarkerWidget_Constants_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./OrientationMarkerWidget/Constants.js */ "../node_modules/@kitware/vtk.js/Interaction/Widgets/OrientationMarkerWidget/Constants.js");







function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default()(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var vtkErrorMacro = _macros_js__WEBPACK_IMPORTED_MODULE_3__["default"].vtkErrorMacro;
var Corners = _OrientationMarkerWidget_Constants_js__WEBPACK_IMPORTED_MODULE_5__["default"].Corners; // ----------------------------------------------------------------------------
// vtkOrientationMarkerWidget
// ----------------------------------------------------------------------------

function vtkOrientationMarkerWidget(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkOrientationMarkerWidget');

  var superClass = _objectSpread({}, publicAPI); // Private variables


  var previousCameraInput = [];
  var selfRenderer = _Rendering_Core_Renderer_js__WEBPACK_IMPORTED_MODULE_4__["default"].newInstance();
  var resizeObserver = new ResizeObserver(function (entries) {
    publicAPI.updateViewport();
  });
  var onAnimationSub = null;
  var onEndAnimationSub = null;
  var selfSubscription = null;

  publicAPI.computeViewport = function () {
    var parentRen = model.parentRenderer || model.interactor.getCurrentRenderer();

    var _parentRen$getViewpor = parentRen.getViewport(),
        _parentRen$getViewpor2 = _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_1___default()(_parentRen$getViewpor, 4),
        xMin = _parentRen$getViewpor2[0],
        yMin = _parentRen$getViewpor2[1],
        xMax = _parentRen$getViewpor2[2],
        yMax = _parentRen$getViewpor2[3];

    var view = model.interactor.getView();
    var canvasSize = view.getSize();

    var _view$getViewportSize = view.getViewportSize(parentRen),
        _view$getViewportSize2 = _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_1___default()(_view$getViewportSize, 2),
        viewXSize = _view$getViewportSize2[0],
        viewYSize = _view$getViewportSize2[1];

    var minViewSize = Math.min(viewXSize, viewYSize);
    var pixelSize = model.viewportSize * minViewSize; // clamp pixel size

    pixelSize = Math.max(Math.min(model.minPixelSize, minViewSize), Math.min(model.maxPixelSize, pixelSize));
    var xFrac = pixelSize / canvasSize[0];
    var yFrac = pixelSize / canvasSize[1]; // [left bottom right top]

    switch (model.viewportCorner) {
      case Corners.TOP_LEFT:
        return [xMin, yMax - yFrac, xMin + xFrac, yMax];

      case Corners.TOP_RIGHT:
        return [xMax - xFrac, yMax - yFrac, xMax, yMax];

      case Corners.BOTTOM_LEFT:
        return [xMin, yMin, xMin + xFrac, yMin + yFrac];

      case Corners.BOTTOM_RIGHT:
        return [xMax - xFrac, yMin, xMax, yMin + yFrac];

      default:
        vtkErrorMacro('Invalid widget corner');
        return null;
    }
  };

  publicAPI.updateViewport = function () {
    if (model.enabled) {
      selfRenderer.setViewport.apply(selfRenderer, _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(publicAPI.computeViewport()));
      model.interactor.render();
    }
  };

  publicAPI.updateMarkerOrientation = function () {
    var ren = model.parentRenderer || model.interactor.getCurrentRenderer();
    var currentCamera = ren.getActiveCamera();

    if (!currentCamera) {
      return;
    }

    var position = currentCamera.getReferenceByName('position');
    var focalPoint = currentCamera.getReferenceByName('focalPoint');
    var viewUp = currentCamera.getReferenceByName('viewUp');

    if (previousCameraInput[0] !== position[0] || previousCameraInput[1] !== position[1] || previousCameraInput[2] !== position[2] || previousCameraInput[3] !== focalPoint[0] || previousCameraInput[4] !== focalPoint[1] || previousCameraInput[5] !== focalPoint[2] || previousCameraInput[6] !== viewUp[0] || previousCameraInput[7] !== viewUp[1] || previousCameraInput[8] !== viewUp[2]) {
      previousCameraInput[0] = position[0];
      previousCameraInput[1] = position[1];
      previousCameraInput[2] = position[2];
      previousCameraInput[3] = focalPoint[0];
      previousCameraInput[4] = focalPoint[1];
      previousCameraInput[5] = focalPoint[2];
      previousCameraInput[6] = viewUp[0];
      previousCameraInput[7] = viewUp[1];
      previousCameraInput[8] = viewUp[2];
      var activeCamera = selfRenderer.getActiveCamera();
      activeCamera.setPosition(position[0], position[1], position[2]);
      activeCamera.setFocalPoint(focalPoint[0], focalPoint[1], focalPoint[2]);
      activeCamera.setViewUp(viewUp[0], viewUp[1], viewUp[2]);
      selfRenderer.resetCamera();
    }
  };
  /**
   * Enables/Disables the orientation marker.
   */


  publicAPI.setEnabled = function (enabling) {
    if (enabling) {
      if (model.enabled) {
        return;
      }

      if (!model.actor) {
        vtkErrorMacro('Must set actor before enabling orientation marker.');
        return;
      }

      if (!model.interactor) {
        vtkErrorMacro('Must set interactor before enabling orientation marker.');
        return;
      }

      var ren = model.parentRenderer || model.interactor.getCurrentRenderer();
      var renderWindow = ren.getRenderWindow();
      renderWindow.addRenderer(selfRenderer);

      if (renderWindow.getNumberOfLayers() < 2) {
        renderWindow.setNumberOfLayers(2);
      } // Highest number is foreground


      selfRenderer.setLayer(renderWindow.getNumberOfLayers() - 1);
      selfRenderer.setInteractive(false);
      selfRenderer.addViewProp(model.actor);
      model.actor.setVisibility(true);
      onAnimationSub = model.interactor.onAnimation(publicAPI.updateMarkerOrientation);
      onEndAnimationSub = model.interactor.onEndAnimation(publicAPI.updateMarkerOrientation);
      resizeObserver.observe(model.interactor.getView().getCanvas());
      publicAPI.updateViewport();
      publicAPI.updateMarkerOrientation();
      model.enabled = true;
    } else {
      if (!model.enabled) {
        return;
      }

      model.enabled = false;
      resizeObserver.disconnect();
      onAnimationSub.unsubscribe();
      onAnimationSub = null;
      onEndAnimationSub.unsubscribe();
      onEndAnimationSub = null;
      model.actor.setVisibility(false);
      selfRenderer.removeViewProp(model.actor);

      var _renderWindow = model.interactor.findPokedRenderer().getRenderWindow();

      if (_renderWindow) {
        _renderWindow.removeRenderer(selfRenderer);
      }
    }

    publicAPI.modified();
  };
  /**
   * Sets the viewport corner.
   */


  publicAPI.setViewportCorner = function (corner) {
    if (corner === model.viewportCorner) {
      return;
    }

    model.viewportCorner = corner;
    publicAPI.updateViewport();
  };
  /**
   * Sets the viewport size.
   */


  publicAPI.setViewportSize = function (sizeFactor) {
    var viewportSize = Math.min(1, Math.max(0, sizeFactor));

    if (viewportSize === model.viewportSize) {
      return;
    }

    model.viewportSize = viewportSize;
    publicAPI.updateViewport();
  };

  publicAPI.setActor = function (actor) {
    var previousState = model.enabled;
    publicAPI.setEnabled(false);
    model.actor = actor;
    publicAPI.setEnabled(previousState);
  };

  publicAPI.setParentRenderer = function (ren) {
    var changed = superClass.setParentRenderer(ren);

    if (changed) {
      publicAPI.updateViewport();
    }

    return changed;
  };

  publicAPI.getRenderer = function () {
    return selfRenderer;
  };

  publicAPI.delete = function () {
    superClass.delete();

    if (selfSubscription) {
      selfSubscription.unsubscribe();
      selfSubscription = null;
    }

    if (onAnimationSub) {
      onAnimationSub.unsubscribe();
      onAnimationSub = null;
    }

    if (onEndAnimationSub) {
      onEndAnimationSub.unsubscribe();
      onEndAnimationSub = null;
    }

    resizeObserver.disconnect();
  }; // --------------------------------------------------------------------------
  // update viewport whenever we are updated


  selfSubscription = publicAPI.onModified(publicAPI.updateViewport);
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {
  // actor: null,
  // interactor: null,
  viewportCorner: _OrientationMarkerWidget_Constants_js__WEBPACK_IMPORTED_MODULE_5__["default"].Corners.BOTTOM_LEFT,
  viewportSize: 0.2,
  minPixelSize: 50,
  maxPixelSize: 200,
  parentRenderer: null
}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API

  _macros_js__WEBPACK_IMPORTED_MODULE_3__["default"].obj(publicAPI, model);
  _macros_js__WEBPACK_IMPORTED_MODULE_3__["default"].get(publicAPI, model, ['enabled', 'viewportCorner', 'viewportSize']); // NOTE: setting these while the widget is enabled will
  // not update the widget.

  _macros_js__WEBPACK_IMPORTED_MODULE_3__["default"].setGet(publicAPI, model, ['interactor', 'minPixelSize', 'maxPixelSize', 'parentRenderer']);
  _macros_js__WEBPACK_IMPORTED_MODULE_3__["default"].get(publicAPI, model, ['actor']); // Object methods

  vtkOrientationMarkerWidget(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = _macros_js__WEBPACK_IMPORTED_MODULE_3__["default"].newInstance(extend, 'vtkOrientationMarkerWidget'); // ----------------------------------------------------------------------------

var vtkOrientationMarkerWidget$1 = _objectSpread({
  newInstance: newInstance,
  extend: extend
}, _OrientationMarkerWidget_Constants_js__WEBPACK_IMPORTED_MODULE_5__["default"]);




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Interaction/Widgets/OrientationMarkerWidget/Constants.js":
/*!************************************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Interaction/Widgets/OrientationMarkerWidget/Constants.js ***!
  \************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Constants; });
var Corners = {
  TOP_LEFT: 'TOP_LEFT',
  TOP_RIGHT: 'TOP_RIGHT',
  BOTTOM_LEFT: 'BOTTOM_LEFT',
  BOTTOM_RIGHT: 'BOTTOM_RIGHT'
};
var Constants = {
  Corners: Corners
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Interaction/Widgets/PiecewiseGaussianWidget.js":
/*!**************************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Interaction/Widgets/PiecewiseGaussianWidget.js ***!
  \**************************************************************************************/
/*! exports provided: STATIC, default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "STATIC", function() { return STATIC; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkPiecewiseGaussianWidget$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ "../node_modules/@babel/runtime/helpers/slicedToArray.js");
/* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "../node_modules/@babel/runtime/helpers/defineProperty.js");
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "../node_modules/@babel/runtime/helpers/toConsumableArray.js");
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../Common/Core/Math/index.js */ "../node_modules/@kitware/vtk.js/Common/Core/Math/index.js");
/* harmony import */ var webworker_promise__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! webworker-promise */ "../node_modules/webworker-promise/src/index.js");
/* harmony import */ var webworker_promise__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(webworker_promise__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _virtual_rollup_plugin_worker_loader_module_Sources_Interaction_Widgets_PiecewiseGaussianWidget_ComputeHistogram_worker_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../_virtual/rollup-plugin-worker-loader__module_Sources/Interaction/Widgets/PiecewiseGaussianWidget/ComputeHistogram.worker.js */ "../node_modules/@kitware/vtk.js/_virtual/rollup-plugin-worker-loader__module_Sources/Interaction/Widgets/PiecewiseGaussianWidget/ComputeHistogram.worker.js");








function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1___default()(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
/* eslint-disable no-continue */
// ----------------------------------------------------------------------------
// Global structures
// ----------------------------------------------------------------------------

var MIN_GAUSSIAN_WIDTH = 0.001;
var ACTION_TO_CURSOR = {
  adjustPosition: '-webkit-grab',
  adjustHeight: 'row-resize',
  adjustBias: 'crosshair',
  adjustWidth: 'col-resize',
  adjustZoom: 'col-resize'
};
var TOUCH_CLICK = []; // ----------------------------------------------------------------------------
// Global methods
// ----------------------------------------------------------------------------

var ACTIONS = {
  adjustPosition: function adjustPosition(x, y, _ref) {
    var originalXY = _ref.originalXY,
        gaussian = _ref.gaussian,
        originalGaussian = _ref.originalGaussian;
    var xOffset = originalGaussian.position - originalXY[0];
    gaussian.position = x + xOffset;
    return true;
  },
  adjustHeight: function adjustHeight(x, y, _ref2) {
    var model = _ref2.model,
        gaussian = _ref2.gaussian;
    gaussian.height = 1 - y;
    gaussian.height = Math.min(1, Math.max(model.gaussianMinimumHeight, gaussian.height));
    return true;
  },
  adjustBias: function adjustBias(x, y, _ref3) {
    var originalXY = _ref3.originalXY,
        gaussian = _ref3.gaussian,
        originalGaussian = _ref3.originalGaussian;
    gaussian.xBias = originalGaussian.xBias - (originalXY[0] - x) / gaussian.height;
    gaussian.yBias = originalGaussian.yBias + 4 * (originalXY[1] - y) / gaussian.height; // Clamps

    gaussian.xBias = Math.max(-1, Math.min(1, gaussian.xBias));
    gaussian.yBias = Math.max(0, Math.min(2, gaussian.yBias));
    return true;
  },
  adjustWidth: function adjustWidth(x, y, _ref4) {
    var originalXY = _ref4.originalXY,
        gaussian = _ref4.gaussian,
        originalGaussian = _ref4.originalGaussian,
        gaussianSide = _ref4.gaussianSide;
    gaussian.width = gaussianSide < 0 ? originalGaussian.width - (originalXY[0] - x) : originalGaussian.width + (originalXY[0] - x);

    if (gaussian.width < MIN_GAUSSIAN_WIDTH) {
      gaussian.width = MIN_GAUSSIAN_WIDTH;
    }

    return true;
  },
  adjustZoom: function adjustZoom(x, y, _ref5) {
    var rangeZoom = _ref5.rangeZoom,
        publicAPI = _ref5.publicAPI;
    var delta = rangeZoom[1] - rangeZoom[0];
    var absNormX = (x - rangeZoom[0]) / delta;
    var minDelta = Math.abs(absNormX - rangeZoom[0]);
    var maxDelta = Math.abs(absNormX - rangeZoom[1]);
    var meanDelta = Math.abs(absNormX - 0.5 * (rangeZoom[0] + rangeZoom[1]));

    if (meanDelta < Math.min(minDelta, maxDelta)) {
      var halfDelta = delta * 0.5;
      rangeZoom[0] = Math.min(Math.max(absNormX - halfDelta, 0), rangeZoom[1] - 0.1);
      rangeZoom[1] = Math.max(Math.min(absNormX + halfDelta, 1), rangeZoom[0] + 0.1);
    } else if (minDelta < maxDelta) {
      rangeZoom[0] = Math.min(Math.max(absNormX, 0), rangeZoom[1] - 0.1);
    } else {
      rangeZoom[1] = Math.max(Math.min(absNormX, 1), rangeZoom[0] + 0.1);
    }

    publicAPI.invokeZoomChange(rangeZoom); // The opacity did not changed

    return false;
  }
}; // ----------------------------------------------------------------------------

function computeOpacities(gaussians) {
  var sampling = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 256;
  var opacities = [];

  while (opacities.length < sampling) {
    opacities.push(0);
  }

  var count = gaussians.length;

  while (count--) {
    var _gaussians$count = gaussians[count],
        position = _gaussians$count.position,
        height = _gaussians$count.height,
        width = _gaussians$count.width,
        xBias = _gaussians$count.xBias,
        yBias = _gaussians$count.yBias;

    for (var i = 0; i < sampling; i++) {
      var x = i / (sampling - 1); // clamp non-zero values to pos +/- width

      if (x > position + width || x < position - width) {
        if (opacities[i] < 0.0) {
          opacities[i] = 0.0;
        }

        continue;
      } // non-zero width


      var correctedWidth = width < MIN_GAUSSIAN_WIDTH ? MIN_GAUSSIAN_WIDTH : width; // translate the original x to a new x based on the xbias

      var x0 = 0;

      if (xBias === 0 || x === position + xBias) {
        x0 = x;
      } else if (x > position + xBias) {
        if (correctedWidth === xBias) {
          x0 = position;
        } else {
          x0 = position + (x - position - xBias) * (correctedWidth / (correctedWidth - xBias));
        }
      } else if (-correctedWidth === xBias) {
        // (x < pos+xBias)
        x0 = position;
      } else {
        x0 = position - (x - position - xBias) * (correctedWidth / (correctedWidth + xBias));
      } // center around 0 and normalize to -1,1


      var x1 = (x0 - position) / correctedWidth; // do a linear interpolation between:
      //    a gaussian and a parabola        if 0 < yBias <1
      //    a parabola and a step function   if 1 < yBias <2

      var h0a = Math.exp(-(4 * x1 * x1));
      var h0b = 1.0 - x1 * x1;
      var h0c = 1.0;
      var h1 = void 0;

      if (yBias < 1) {
        h1 = yBias * h0b + (1 - yBias) * h0a;
      } else {
        h1 = (2 - yBias) * h0b + (yBias - 1) * h0c;
      }

      var h2 = height * h1; // perform the MAX over different gaussians, not the sum

      if (h2 > opacities[i]) {
        opacities[i] = h2;
      }
    }
  }

  return opacities;
} // ----------------------------------------------------------------------------


function applyGaussianToPiecewiseFunction(gaussians, sampling, rangeToUse, piecewiseFunction) {
  var opacities = computeOpacities(gaussians, sampling);
  var nodes = [];
  var delta = (rangeToUse[1] - rangeToUse[0]) / (opacities.length - 1);
  var midpoint = 0.5;
  var sharpness = 0;

  for (var index = 0; index < opacities.length; index++) {
    var x = rangeToUse[0] + delta * index;
    var y = opacities[index];
    nodes.push({
      x: x,
      y: y,
      midpoint: midpoint,
      sharpness: sharpness
    });
  }

  piecewiseFunction.setNodes(nodes);
} // ----------------------------------------------------------------------------


function drawChart(ctx, area, values) {
  var style = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {
    lineWidth: 1,
    strokeStyle: '#000'
  };
  var verticalScale = area[3];
  var horizontalScale = area[2] / (values.length - 1);
  var fill = !!style.fillStyle;
  var offset = verticalScale + area[1];
  ctx.lineWidth = style.lineWidth;
  ctx.strokeStyle = style.strokeStyle;
  ctx.beginPath();
  ctx.moveTo(area[0], area[1] + area[3]);

  for (var index = 0; index < values.length; index++) {
    ctx.lineTo(area[0] + index * horizontalScale, Math.max(area[1], offset - values[index] * verticalScale));
  }

  if (fill) {
    ctx.fillStyle = style.fillStyle;
    ctx.lineTo(area[0] + area[2], area[1] + area[3]);

    if (style.clip) {
      ctx.clip();
      return;
    }

    ctx.fill();
  }

  ctx.stroke();
} // ----------------------------------------------------------------------------


function updateColorCanvas(colorTransferFunction, width, rangeToUse, canvas) {
  var workCanvas = canvas || document.createElement('canvas');
  workCanvas.setAttribute('width', width);
  workCanvas.setAttribute('height', 256);
  var ctx = workCanvas.getContext('2d');
  var rgba = colorTransferFunction.getUint8Table(rangeToUse[0], rangeToUse[1], width, 4);
  var pixelsArea = ctx.getImageData(0, 0, width, 256);

  for (var lineIdx = 0; lineIdx < 256; lineIdx++) {
    pixelsArea.data.set(rgba, lineIdx * 4 * width);
  }

  var nbValues = 256 * width * 4;
  var lineSize = width * 4;

  for (var i = 3; i < nbValues; i += 4) {
    pixelsArea.data[i] = 255 - Math.floor(i / lineSize);
  }

  ctx.putImageData(pixelsArea, 0, 0);
  return workCanvas;
} // ----------------------------------------------------------------------------


function updateColorCanvasFromImage(img, width, canvas) {
  var workCanvas = canvas || document.createElement('canvas');
  workCanvas.setAttribute('width', width);
  workCanvas.setAttribute('height', 256);
  var ctx = workCanvas.getContext('2d');
  ctx.drawImage(img, 0, 0, img.width, img.height, 0, 0, width, 256);
  return workCanvas;
} // ----------------------------------------------------------------------------


function normalizeCoordinates(x, y, subRectangeArea) {
  var zoomRange = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [0, 1];
  return [zoomRange[0] + (x - subRectangeArea[0]) / subRectangeArea[2] * (zoomRange[1] - zoomRange[0]), (y - subRectangeArea[1]) / subRectangeArea[3]];
} // ----------------------------------------------------------------------------


function findGaussian(x, gaussians) {
  var distances = gaussians.map(function (g) {
    return Math.abs(g.position - x);
  });
  var min = Math.min.apply(Math, _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_2___default()(distances));
  return distances.indexOf(min);
} // ----------------------------------------------------------------------------


function createListener(callback) {
  var preventDefault = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
  return function (e) {
    var offsetX = e.offsetX,
        offsetY = e.offsetY;

    if (preventDefault) {
      e.preventDefault();
    }

    callback(offsetX, offsetY);
  };
} // ----------------------------------------------------------------------------


function createTouchClickListener() {
  var id = TOUCH_CLICK.length;

  for (var _len = arguments.length, callbacks = new Array(_len), _key = 0; _key < _len; _key++) {
    callbacks[_key] = arguments[_key];
  }

  TOUCH_CLICK.push({
    callbacks: callbacks,
    timeout: 0,
    deltaT: 200,
    count: 0,
    ready: false
  });
  return id;
} // ----------------------------------------------------------------------------


function processTouchClicks() {
  TOUCH_CLICK.filter(function (t) {
    return t.ready;
  }).forEach(function (touchHandle) {
    touchHandle.callbacks.forEach(function (callback) {
      if (callback.touches === touchHandle.touches && callback.clicks === touchHandle.count) {
        callback.action.apply(callback, _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_2___default()(touchHandle.singleTouche));
      }
    }); // Clear state

    touchHandle.ts = 0;
    touchHandle.count = 0;
    touchHandle.touches = 0;
    touchHandle.ready = false;
  });
} // ----------------------------------------------------------------------------


function createTouchListener(id, callback) {
  var nbTouches = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;
  var preventDefault = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;
  return function (e) {
    var targetBounds = e.target.getBoundingClientRect();
    var relativeTouches = Array.prototype.map.call(e.touches, function (t) {
      return [t.pageX - targetBounds.left, t.pageY - targetBounds.top];
    });
    var singleTouche = relativeTouches.reduce(function (a, b) {
      return [a[0] + b[0], a[1] + b[1]];
    }, [0, 0]).map(function (v) {
      return v / e.touches.length;
    });

    if (e.type === 'touchstart') {
      clearTimeout(TOUCH_CLICK[id].timeout);
      TOUCH_CLICK[id].ts = e.timeStamp;
      TOUCH_CLICK[id].singleTouche = singleTouche;
      TOUCH_CLICK[id].touches = e.touches.length;
    } else if (e.type === 'touchmove') {
      TOUCH_CLICK[id].ts = 0;
      TOUCH_CLICK[id].count = 0;
      TOUCH_CLICK[id].ready = false;
    } else if (e.type === 'touchend') {
      if (e.timeStamp - TOUCH_CLICK[id].ts < TOUCH_CLICK[id].deltaT) {
        TOUCH_CLICK[id].count += 1;
        TOUCH_CLICK[id].ready = true;

        if (preventDefault) {
          e.preventDefault();
        }

        TOUCH_CLICK[id].timeout = setTimeout(processTouchClicks, TOUCH_CLICK[id].deltaT);
      } else {
        TOUCH_CLICK[id].ready = false;
      }
    }

    if (e.touches.length === nbTouches) {
      callback.apply(void 0, _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_2___default()(singleTouche));

      if (preventDefault) {
        e.preventDefault();
      }
    }
  };
} // ----------------------------------------------------------------------------


function listenerSelector(condition, ok, ko) {
  return function (e) {
    return condition() ? ok(e) : ko(e);
  };
} // ----------------------------------------------------------------------------


function rescaleArray(array, focusArea) {
  if (!focusArea) {
    return array;
  }

  var maxIdx = array.length - 1;
  var idxRange = focusArea.map(function (v) {
    return Math.round(v * maxIdx);
  });
  return array.slice(idxRange[0], idxRange[1] + 1);
} // ----------------------------------------------------------------------------


function rescaleValue(value, focusArea) {
  if (!focusArea) {
    return value;
  }

  return (value - focusArea[0]) / (focusArea[1] - focusArea[0]);
} // ----------------------------------------------------------------------------
// Static API
// ----------------------------------------------------------------------------


var STATIC = {
  applyGaussianToPiecewiseFunction: applyGaussianToPiecewiseFunction,
  computeOpacities: computeOpacities,
  createListener: createListener,
  drawChart: drawChart,
  findGaussian: findGaussian,
  listenerSelector: listenerSelector,
  normalizeCoordinates: normalizeCoordinates
}; // ----------------------------------------------------------------------------
// vtkPiecewiseGaussianWidget methods
// ----------------------------------------------------------------------------

function vtkPiecewiseGaussianWidget(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkPiecewiseGaussianWidget');

  if (!model.canvas) {
    model.canvas = document.createElement('canvas');
  }

  publicAPI.setContainer = function (el) {
    if (model.container && model.container !== el) {
      model.container.removeChild(model.canvas);
    }

    if (model.container !== el) {
      model.container = el;

      if (model.container) {
        model.container.appendChild(model.canvas);
      }

      publicAPI.modified();
    }
  };

  publicAPI.setGaussians = function (gaussians) {
    if (model.gaussians === gaussians) {
      return;
    }

    model.gaussians = gaussians;
    model.opacities = computeOpacities(model.gaussians, model.piecewiseSize);
    publicAPI.invokeOpacityChange(publicAPI);
    publicAPI.modified();
  };

  publicAPI.addGaussian = function (position, height, width, xBias, yBias) {
    var nextIndex = model.gaussians.length;
    model.gaussians.push({
      position: position,
      height: height,
      width: width,
      xBias: xBias,
      yBias: yBias
    });
    model.opacities = computeOpacities(model.gaussians, model.piecewiseSize);
    publicAPI.invokeOpacityChange(publicAPI);
    publicAPI.modified();
    return nextIndex;
  };

  publicAPI.removeGaussian = function (index) {
    model.gaussians.splice(index, 1);
    model.opacities = computeOpacities(model.gaussians, model.piecewiseSize);
    publicAPI.invokeOpacityChange(publicAPI);
    publicAPI.modified();
  };

  publicAPI.setSize = function (width, height) {
    model.canvas.setAttribute('width', width);
    model.canvas.setAttribute('height', height);

    if (model.size[0] !== width || model.size[1] !== height) {
      model.size = [width, height];
      model.colorCanvasMTime = 0;
      publicAPI.modified();
    }
  };

  publicAPI.updateStyle = function (style) {
    model.style = _objectSpread(_objectSpread({}, model.style), style);
    publicAPI.modified();
  }; // Method used to compute and show data distribution in the background.
  // When an array with many components is used, you can provide additional
  // information to choose which component you want to extract the histogram
  // from.


  publicAPI.setDataArray = function (array) {
    var _ref6 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
        _ref6$numberOfBinToCo = _ref6.numberOfBinToConsiders,
        numberOfBinToConsiders = _ref6$numberOfBinToCo === void 0 ? 1 : _ref6$numberOfBinToCo,
        _ref6$numberOfBinsToS = _ref6.numberOfBinsToSkip,
        numberOfBinsToSkip = _ref6$numberOfBinsToS === void 0 ? 1 : _ref6$numberOfBinsToS,
        _ref6$numberOfCompone = _ref6.numberOfComponents,
        numberOfComponents = _ref6$numberOfCompone === void 0 ? 1 : _ref6$numberOfCompone,
        _ref6$component = _ref6.component,
        component = _ref6$component === void 0 ? 0 : _ref6$component;

    model.histogram = null;
    model.histogramArray = array;
    model.dataRange = Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_4__["C"])(array, component, numberOfComponents);

    var _model$dataRange = _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0___default()(model.dataRange, 2),
        min = _model$dataRange[0],
        max = _model$dataRange[1];

    var maxNumberOfWorkers = 4;
    var arrayStride = Math.floor(array.length / maxNumberOfWorkers) || 1;
    arrayStride += arrayStride % numberOfComponents;
    var arrayIndex = 0;
    var workerChunks = [];
    var workers = [];

    while (arrayIndex < array.length) {
      var worker = new _virtual_rollup_plugin_worker_loader_module_Sources_Interaction_Widgets_PiecewiseGaussianWidget_ComputeHistogram_worker_js__WEBPACK_IMPORTED_MODULE_6__["W"]();
      workers.push(worker);
      var workerPromise = new webworker_promise__WEBPACK_IMPORTED_MODULE_5___default.a(worker);
      var arrayStart = arrayIndex;
      var arrayEnd = Math.min(arrayIndex + arrayStride, array.length - 1);
      var subArray = new array.constructor(array.slice(arrayStart, arrayEnd + 1));
      workerChunks.push(workerPromise.postMessage({
        array: subArray,
        component: component,
        numberOfComponents: numberOfComponents,
        min: min,
        max: max,
        numberOfBins: model.numberOfBins
      }, [subArray.buffer]));
      arrayIndex += arrayStride;
    }

    Promise.all(workerChunks).then(function (subHistograms) {
      workers.forEach(function (worker) {
        return worker.terminate();
      });
      model.histogram = new Float32Array(model.numberOfBins);
      model.histogram.fill(0);
      subHistograms.forEach(function (subHistogram) {
        for (var i = 0, len = subHistogram.length; i < len; ++i) {
          model.histogram[i] += subHistogram[i];
        }
      }); // Smart Rescale Histogram

      var sampleSize = Math.min(numberOfBinToConsiders, model.histogram.length - numberOfBinsToSkip);
      var sortedArray = Array.from(model.histogram);
      sortedArray.sort(function (a, b) {
        return Number(a) - Number(b);
      });

      for (var i = 0; i < numberOfBinsToSkip; i++) {
        sortedArray.pop();
      }

      while (sortedArray.length > sampleSize) {
        sortedArray.shift();
      }

      var mean = sortedArray.reduce(function (a, b) {
        return a + b;
      }, 0) / sampleSize;

      for (var _i = 0, len = model.histogram.length; _i < len; ++_i) {
        model.histogram[_i] /= mean;
      }

      publicAPI.modified();
      setTimeout(publicAPI.render, 0);
    });
    publicAPI.modified();
  };

  publicAPI.onClick = function (x, y) {
    var _normalizeCoordinates = normalizeCoordinates(x, y, model.graphArea, model.enableRangeZoom ? model.rangeZoom : null),
        _normalizeCoordinates2 = _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0___default()(_normalizeCoordinates, 2),
        xNormalized = _normalizeCoordinates2[0],
        yNormalized = _normalizeCoordinates2[1];

    if (xNormalized < 0 && model.style.iconSize > 1) {
      // Control buttons
      var delta = model.style.iconSize + model.style.padding;
      var offset = delta;
      var buttonIdx = 0;

      while (y > offset) {
        buttonIdx += 1;
        offset += delta;
      }

      switch (buttonIdx) {
        case 0:
          {
            var gaussianIdx = publicAPI.addGaussian(0, 1, 0.1, 0, 0);
            var gaussian = model.gaussians[gaussianIdx];

            var originalGaussian = _objectSpread({}, gaussian);

            var action = ACTIONS.adjustPosition;
            model.activeGaussian = gaussianIdx;
            model.selectedGaussian = gaussianIdx; // Fake active action

            _macros_js__WEBPACK_IMPORTED_MODULE_3__["default"].setImmediate(function () {
              publicAPI.onDown(x, y);
              model.dragAction = {
                originalXY: [0, 0],
                action: action,
                gaussian: gaussian,
                originalGaussian: originalGaussian
              };
            });
            break;
          }

        case 1:
          {
            if (model.selectedGaussian !== -1) {
              publicAPI.removeGaussian(model.selectedGaussian);
            }

            break;
          }

        default:
          {
            model.selectedGaussian = -1;
            model.dragAction = null;
          }
      }
    } else if (xNormalized < 0 || xNormalized > 1 || yNormalized < 0 || yNormalized > 1) {
      model.selectedGaussian = -1;
      model.dragAction = null;
    } else {
      var newSelected = findGaussian(xNormalized, model.gaussians);

      if (newSelected !== model.selectedGaussian) {
        model.selectedGaussian = newSelected;
        publicAPI.modified();
      }
    }

    return true;
  };

  publicAPI.onHover = function (x, y) {
    // Determines the interaction region size for adjusting the Gaussian's
    // height.
    var tolerance = 20 / model.canvas.height;

    var _normalizeCoordinates3 = normalizeCoordinates(x, y, model.graphArea, model.enableRangeZoom ? model.rangeZoom : null),
        _normalizeCoordinates4 = _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0___default()(_normalizeCoordinates3, 2),
        xNormalized = _normalizeCoordinates4[0],
        yNormalized = _normalizeCoordinates4[1];

    var _normalizeCoordinates5 = normalizeCoordinates(x, y, model.graphArea),
        _normalizeCoordinates6 = _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0___default()(_normalizeCoordinates5, 1),
        xNormalizedAbs = _normalizeCoordinates6[0];

    var newActive = xNormalized < 0 ? model.selectedGaussian : findGaussian(xNormalized, model.gaussians);
    model.canvas.style.cursor = 'default';
    var gaussian = model.gaussians[newActive];

    if (model.enableRangeZoom && xNormalizedAbs >= 0 && y < model.graphArea[1] - 6 // circle radius
    ) {
      var thirdDelta = (model.rangeZoom[1] - model.rangeZoom[0]) / 3;

      if (xNormalizedAbs < model.rangeZoom[0] + thirdDelta || xNormalizedAbs > model.rangeZoom[1] - thirdDelta) {
        model.canvas.style.cursor = ACTION_TO_CURSOR.adjustZoom;
      } else {
        model.canvas.style.cursor = ACTION_TO_CURSOR.adjustPosition;
      }

      model.dragAction = {
        rangeZoom: model.rangeZoom,
        action: ACTIONS.adjustZoom
      };
    } else if (gaussian && xNormalizedAbs >= 0) {
      var invY = 1 - yNormalized;
      var actionName = null;

      if (invY > gaussian.height + tolerance) {
        actionName = 'adjustPosition';
      } else if (invY > gaussian.height - tolerance) {
        if (Math.abs(xNormalized - gaussian.position) < tolerance) {
          actionName = 'adjustHeight';
        } else {
          actionName = 'adjustPosition';
        }
      } else if (invY > gaussian.height * 0.5 + tolerance) {
        actionName = 'adjustPosition';
      } else if (invY > gaussian.height * 0.5 - tolerance) {
        if (Math.abs(xNormalized - gaussian.position) < tolerance) {
          actionName = 'adjustBias';
        } else {
          actionName = 'adjustPosition';
        }
      } else if (invY > tolerance) {
        actionName = 'adjustPosition';
      } else {
        actionName = 'adjustWidth';
      }

      model.canvas.style.cursor = ACTION_TO_CURSOR[actionName];
      var action = ACTIONS[actionName];

      var originalGaussian = _objectSpread({}, gaussian);

      model.dragAction = {
        originalXY: [xNormalized, yNormalized],
        action: action,
        gaussian: gaussian,
        originalGaussian: originalGaussian
      };
    }

    if (newActive !== model.activeGaussian) {
      model.activeGaussian = newActive;
      publicAPI.modified();
    }

    return true;
  };

  publicAPI.onDown = function (x, y) {
    if (!model.mouseIsDown) {
      publicAPI.invokeAnimation(true);
    }

    model.mouseIsDown = true;
    var xNormalized = normalizeCoordinates(x, y, model.graphArea, model.enableRangeZoom ? model.rangeZoom : null)[0];
    var newSelected = findGaussian(xNormalized, model.gaussians);
    model.gaussianSide = 0;
    var gaussian = model.gaussians[newSelected];

    if (gaussian) {
      model.gaussianSide = gaussian.position - xNormalized;
    }

    if (newSelected !== model.selectedGaussian && xNormalized > 0) {
      model.selectedGaussian = newSelected;
      publicAPI.modified();
    }

    return true;
  };

  publicAPI.onDrag = function (x, y) {
    if (model.dragAction) {
      var _normalizeCoordinates7 = normalizeCoordinates(x, y, model.graphArea, model.enableRangeZoom ? model.rangeZoom : null),
          _normalizeCoordinates8 = _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0___default()(_normalizeCoordinates7, 2),
          xNormalized = _normalizeCoordinates8[0],
          yNormalized = _normalizeCoordinates8[1];

      var action = model.dragAction.action;

      if (action(xNormalized, yNormalized, _objectSpread({
        gaussianSide: model.gaussianSide,
        model: model,
        publicAPI: publicAPI
      }, model.dragAction))) {
        model.opacities = computeOpacities(model.gaussians, model.piecewiseSize);
        publicAPI.invokeOpacityChange(publicAPI, true);
      }

      publicAPI.modified();
    }

    return true;
  };

  publicAPI.onUp = function (x, y) {
    if (model.mouseIsDown) {
      publicAPI.invokeAnimation(false);
    }

    model.mouseIsDown = false;
    return true;
  };

  publicAPI.onLeave = function (x, y) {
    publicAPI.onUp(x, y);
    model.canvas.style.cursor = 'default';
    model.activeGaussian = -1;
    publicAPI.modified();
    return true;
  };

  publicAPI.onAddGaussian = function (x, y) {
    var _normalizeCoordinates9 = normalizeCoordinates(x, y, model.graphArea, model.enableRangeZoom ? model.rangeZoom : null),
        _normalizeCoordinates10 = _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0___default()(_normalizeCoordinates9, 2),
        xNormalized = _normalizeCoordinates10[0],
        yNormalized = _normalizeCoordinates10[1];

    if (xNormalized >= 0) {
      publicAPI.addGaussian(xNormalized, 1 - yNormalized, 0.1, 0, 0);
    }

    return true;
  };

  publicAPI.onRemoveGaussian = function (x, y) {
    var xNormalized = normalizeCoordinates(x, y, model.graphArea, model.enableRangeZoom ? model.rangeZoom : null)[0];
    var newSelected = findGaussian(xNormalized, model.gaussians);

    if (xNormalized >= 0 && newSelected !== -1) {
      publicAPI.removeGaussian(newSelected);
    }

    return true;
  };

  publicAPI.bindMouseListeners = function () {
    if (!model.listeners) {
      var isDown = function isDown() {
        return !!model.mouseIsDown;
      };

      var touchId = createTouchClickListener({
        clicks: 1,
        touches: 1,
        action: publicAPI.onClick
      }, {
        clicks: 2,
        touches: 1,
        action: publicAPI.onAddGaussian
      }, {
        clicks: 2,
        touches: 2,
        action: publicAPI.onRemoveGaussian
      });
      model.listeners = {
        mousemove: listenerSelector(isDown, createListener(publicAPI.onDrag), createListener(publicAPI.onHover)),
        dblclick: createListener(publicAPI.onAddGaussian),
        contextmenu: createListener(publicAPI.onRemoveGaussian),
        click: createListener(publicAPI.onClick),
        mouseup: createListener(publicAPI.onUp),
        mousedown: createListener(publicAPI.onDown),
        mouseout: createListener(publicAPI.onLeave),
        touchstart: createTouchListener(touchId, _macros_js__WEBPACK_IMPORTED_MODULE_3__["default"].chain(publicAPI.onHover, publicAPI.onDown)),
        touchmove: listenerSelector(isDown, createTouchListener(touchId, publicAPI.onDrag), createTouchListener(touchId, publicAPI.onHover)),
        touchend: createTouchListener(touchId, publicAPI.onUp, 0) // touchend have 0 touch event...

      };
      Object.keys(model.listeners).forEach(function (eventType) {
        model.canvas.addEventListener(eventType, model.listeners[eventType], false);
      });
    }
  };

  publicAPI.unbindMouseListeners = function () {
    if (model.listeners) {
      Object.keys(model.listeners).forEach(function (eventType) {
        model.canvas.removeEventListener(eventType, model.listeners[eventType]);
      });
      delete model.listeners;
    }
  };

  publicAPI.render = function () {
    var ctx = model.canvas.getContext('2d');
    ctx.imageSmoothingEnabled = true;

    var _model$size = _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0___default()(model.size, 2),
        width = _model$size[0],
        height = _model$size[1];

    var offset = model.style.padding;
    var graphArea = [Math.floor(model.style.iconSize + offset), Math.floor(offset), Math.ceil(width - 2 * offset - model.style.iconSize), Math.ceil(height - 2 * offset)];
    var zoomControlHeight = model.style.zoomControlHeight;

    if (model.enableRangeZoom) {
      graphArea[1] += Math.floor(zoomControlHeight);
      graphArea[3] -= Math.floor(zoomControlHeight);
    }

    model.graphArea = graphArea; // Clear canvas

    ctx.clearRect(0, 0, width, height);
    ctx.lineJoin = 'round';
    ctx.fillStyle = model.style.backgroundColor;
    ctx.fillRect.apply(ctx, graphArea);

    if (model.style.iconSize > 1) {
      // Draw icons
      // +
      var halfSize = Math.round(model.style.iconSize / 2 - model.style.strokeWidth);
      var center = Math.round(halfSize + offset + model.style.strokeWidth);
      ctx.beginPath();
      ctx.lineWidth = model.style.buttonStrokeWidth;
      ctx.strokeStyle = model.style.buttonStrokeColor;
      ctx.arc(center - offset / 2, center, halfSize, 0, 2 * Math.PI, false);
      ctx.fillStyle = model.style.buttonFillColor;
      ctx.fill();
      ctx.stroke();
      ctx.moveTo(center - halfSize + model.style.strokeWidth + 2 - offset / 2, center);
      ctx.lineTo(center + halfSize - model.style.strokeWidth - 2 - offset / 2, center);
      ctx.stroke();
      ctx.moveTo(center - offset / 2, center - halfSize + model.style.strokeWidth + 2);
      ctx.lineTo(center - offset / 2, center + halfSize - model.style.strokeWidth - 2);
      ctx.stroke(); // -

      if (model.selectedGaussian === -1) {
        ctx.fillStyle = model.style.buttonDisableFillColor;
        ctx.lineWidth = model.style.buttonDisableStrokeWidth;
        ctx.strokeStyle = model.style.buttonDisableStrokeColor;
      } else {
        ctx.fillStyle = model.style.buttonFillColor;
        ctx.lineWidth = model.style.buttonStrokeWidth;
        ctx.strokeStyle = model.style.buttonStrokeColor;
      }

      ctx.beginPath();
      ctx.arc(center - offset / 2, center + offset / 2 + model.style.iconSize, halfSize, 0, 2 * Math.PI, false);
      ctx.fill();
      ctx.stroke();
      ctx.moveTo(center - halfSize + model.style.strokeWidth + 2 - offset / 2, center + offset / 2 + model.style.iconSize);
      ctx.lineTo(center + halfSize - model.style.strokeWidth - 2 - offset / 2, center + offset / 2 + model.style.iconSize);
      ctx.stroke();
    } // Draw histogram


    if (model.histogram) {
      drawChart(ctx, graphArea, rescaleArray(model.histogram, model.rangeZoom), {
        lineWidth: 1,
        strokeStyle: model.style.histogramColor,
        fillStyle: model.style.histogramColor
      });
    } // Draw gaussians


    drawChart(ctx, graphArea, rescaleArray(model.opacities, model.enableRangeZoom && model.rangeZoom), {
      lineWidth: model.style.strokeWidth,
      strokeStyle: model.style.strokeColor
    }); // Draw color function if any

    if (model.colorTransferFunction && model.colorTransferFunction.getSize()) {
      var rangeToUse = model.dataRange || model.colorTransferFunction.getMappingRange();

      if (!model.colorCanvas || model.colorCanvasMTime !== model.colorTransferFunction.getMTime()) {
        model.colorCanvasMTime = model.colorTransferFunction.getMTime();
        model.colorCanvas = updateColorCanvas(model.colorTransferFunction, graphArea[2], rangeToUse, model.colorCanvas);
      }

      ctx.save();
      drawChart(ctx, graphArea, rescaleArray(model.opacities, model.enableRangeZoom && model.rangeZoom), {
        lineWidth: 1,
        strokeStyle: 'rgba(0,0,0,0)',
        fillStyle: 'rgba(0,0,0,1)',
        clip: true
      }); // Draw the correct portion of the color BG image

      if (model.enableRangeZoom) {
        ctx.drawImage(model.colorCanvas, model.rangeZoom[0] * graphArea[2], 0, graphArea[2], graphArea[3], graphArea[0], graphArea[1], graphArea[2] / (model.rangeZoom[1] - model.rangeZoom[0]), graphArea[3]);
      } else {
        ctx.drawImage(model.colorCanvas, graphArea[0], graphArea[1]);
      }

      ctx.restore();
    } else if (model.backgroundImage) {
      model.colorCanvas = updateColorCanvasFromImage(model.backgroundImage, graphArea[2], model.colorCanvas);
      ctx.save();
      drawChart(ctx, graphArea, rescaleArray(model.opacities, model.enableRangeZoom && model.rangeZoom), {
        lineWidth: 1,
        strokeStyle: 'rgba(0,0,0,0)',
        fillStyle: 'rgba(0,0,0,1)',
        clip: true
      });
      ctx.drawImage(model.colorCanvas, graphArea[0], graphArea[1]);
      ctx.restore();
    } // Draw zoomed area


    if (model.enableRangeZoom) {
      ctx.fillStyle = model.style.zoomControlColor;
      ctx.beginPath();
      ctx.rect(graphArea[0] + model.rangeZoom[0] * graphArea[2], 0, (model.rangeZoom[1] - model.rangeZoom[0]) * graphArea[2], zoomControlHeight);
      ctx.fill();
    } // Draw active gaussian


    var activeGaussian = model.gaussians[model.activeGaussian] || model.gaussians[model.selectedGaussian];

    if (activeGaussian) {
      var activeOpacities = computeOpacities([activeGaussian], graphArea[2]);
      drawChart(ctx, graphArea, rescaleArray(activeOpacities, model.enableRangeZoom && model.rangeZoom), {
        lineWidth: model.style.activeStrokeWidth,
        strokeStyle: model.style.activeColor
      }); // Draw controls

      var xCenter = graphArea[0] + rescaleValue(activeGaussian.position, model.enableRangeZoom && model.rangeZoom) * graphArea[2];
      var yTop = graphArea[1] + (1 - activeGaussian.height) * graphArea[3];
      var yMiddle = graphArea[1] + (1 - 0.5 * activeGaussian.height) * graphArea[3];
      var yBottom = graphArea[1] + graphArea[3];
      var widthInPixel = activeGaussian.width * graphArea[2];

      if (model.enableRangeZoom) {
        widthInPixel /= model.rangeZoom[1] - model.rangeZoom[0];
      }

      ctx.lineWidth = model.style.handleWidth;
      ctx.strokeStyle = model.style.handleColor;
      ctx.fillStyle = model.style.backgroundColor;
      ctx.beginPath();
      ctx.moveTo(xCenter, graphArea[1] + (1 - activeGaussian.height) * graphArea[3]);
      ctx.lineTo(xCenter, graphArea[1] + graphArea[3]);
      ctx.stroke(); // Height

      ctx.beginPath();
      ctx.arc(xCenter, yTop, 6, 0, 2 * Math.PI);
      ctx.fill();
      ctx.stroke(); // Bias

      var radius = Math.min(widthInPixel * 0.1, activeGaussian.height * graphArea[3] * 0.2);
      ctx.beginPath();
      ctx.rect(xCenter - radius, yMiddle - radius, radius * 2, radius * 2);
      ctx.fill();
      ctx.stroke();
      ctx.beginPath(); // Width

      var sliderWidth = widthInPixel * 0.8;
      ctx.rect(xCenter - sliderWidth, yBottom - 5, 2 * sliderWidth, 10);
      ctx.fill();
      ctx.stroke();
    }
  };

  publicAPI.getOpacityNodes = function (dataRange) {
    var rangeToUse = dataRange || model.dataRange;
    var delta = (rangeToUse[1] - rangeToUse[0]) / (model.opacities.length - 1);
    var nodes = [];
    var midpoint = 0.5;
    var sharpness = 0;

    for (var index = 0; index < model.opacities.length; index++) {
      var x = rangeToUse[0] + delta * index;
      var y = model.opacities[index];
      nodes.push({
        x: x,
        y: y,
        midpoint: midpoint,
        sharpness: sharpness
      });
    }

    return nodes;
  };

  publicAPI.applyOpacity = function (piecewiseFunction, dataRange) {
    var nodes = publicAPI.getOpacityNodes(dataRange);
    piecewiseFunction.setNodes(nodes);
  };

  publicAPI.getOpacityRange = function (dataRange) {
    var rangeToUse = dataRange || model.dataRange;
    var delta = (rangeToUse[1] - rangeToUse[0]) / (model.opacities.length - 1);
    var minIndex = model.opacities.length - 1;
    var maxIndex = 0;

    for (var index = 0; index < model.opacities.length; index++) {
      if (model.opacities[index] > 0) {
        minIndex = Math.min(minIndex, index);
      }

      if (model.opacities[index] > 0) {
        maxIndex = Math.max(maxIndex, index);
      }
    }

    return [rangeToUse[0] + minIndex * delta, rangeToUse[0] + maxIndex * delta];
  };

  var enableZoom = publicAPI.setEnableRangeZoom;

  publicAPI.setEnableRangeZoom = function (v) {
    var change = enableZoom(v);

    if (change) {
      model.colorCanvasMTime = 0;
      model.rangeZoom = [0, 1];
    }

    return change;
  };

  var rangeZoom = publicAPI.setRangeZoom;

  publicAPI.setRangeZoom = function () {
    var change = rangeZoom.apply(void 0, arguments);

    if (change) {
      model.colorCanvasMTime = 0;
    }

    return change;
  }; // Trigger rendering for any modified event


  publicAPI.onModified(function () {
    return publicAPI.render();
  });
  publicAPI.setSize.apply(publicAPI, _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_2___default()(model.size));
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {
  histogram: [],
  numberOfBins: 256,
  histogramArray: null,
  dataRange: [0, 1],
  gaussians: [],
  opacities: [],
  size: [600, 300],
  piecewiseSize: 256,
  colorCanvasMTime: 0,
  gaussianMinimumHeight: 0.05,
  style: {
    backgroundColor: 'rgba(255, 255, 255, 1)',
    histogramColor: 'rgba(200, 200, 200, 0.5)',
    strokeColor: 'rgb(0, 0, 0)',
    activeColor: 'rgb(0, 0, 150)',
    buttonDisableFillColor: 'rgba(255, 255, 255, 0.5)',
    buttonDisableStrokeColor: 'rgba(0, 0, 0, 0.5)',
    buttonStrokeColor: 'rgba(0, 0, 0, 1)',
    buttonFillColor: 'rgba(255, 255, 255, 1)',
    handleColor: 'rgb(0, 150, 0)',
    strokeWidth: 2,
    activeStrokeWidth: 3,
    buttonStrokeWidth: 1.5,
    handleWidth: 3,
    iconSize: 20,
    padding: 10,
    zoomControlHeight: 10,
    zoomControlColor: '#999'
  },
  activeGaussian: -1,
  selectedGaussian: -1,
  enableRangeZoom: true,
  rangeZoom: [0, 1] // normalized value

}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Object methods

  _macros_js__WEBPACK_IMPORTED_MODULE_3__["default"].obj(publicAPI, model);
  _macros_js__WEBPACK_IMPORTED_MODULE_3__["default"].setGet(publicAPI, model, ['piecewiseSize', 'numberOfBins', 'colorTransferFunction', 'backgroundImage', 'enableRangeZoom', 'gaussianMinimumHeight']);
  _macros_js__WEBPACK_IMPORTED_MODULE_3__["default"].setGetArray(publicAPI, model, ['rangeZoom'], 2);
  _macros_js__WEBPACK_IMPORTED_MODULE_3__["default"].get(publicAPI, model, ['size', 'canvas', 'gaussians']);
  _macros_js__WEBPACK_IMPORTED_MODULE_3__["default"].event(publicAPI, model, 'opacityChange');
  _macros_js__WEBPACK_IMPORTED_MODULE_3__["default"].event(publicAPI, model, 'animation');
  _macros_js__WEBPACK_IMPORTED_MODULE_3__["default"].event(publicAPI, model, 'zoomChange'); // Object specific methods

  vtkPiecewiseGaussianWidget(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = _macros_js__WEBPACK_IMPORTED_MODULE_3__["default"].newInstance(extend, 'vtkPiecewiseGaussianWidget'); // ----------------------------------------------------------------------------

var vtkPiecewiseGaussianWidget$1 = _objectSpread({
  newInstance: newInstance,
  extend: extend
}, STATIC);




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Rendering/Core/AbstractMapper.js":
/*!************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Rendering/Core/AbstractMapper.js ***!
  \************************************************************************/
/*! exports provided: default, extend */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkAbstractMapper$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");


// vtkAbstractMapper methods
// ----------------------------------------------------------------------------

function vtkAbstractMapper(publicAPI, model) {
  model.classHierarchy.push('vtkAbstractMapper');

  publicAPI.update = function () {
    publicAPI.getInputData();
  };

  publicAPI.addClippingPlane = function (plane) {
    if (!plane.isA('vtkPlane')) {
      return false;
    }

    if (!model.clippingPlanes.includes(plane)) {
      model.clippingPlanes.push(plane);
      publicAPI.modified();
      return true;
    }

    return false;
  };

  publicAPI.getNumberOfClippingPlanes = function () {
    return model.clippingPlanes.length;
  };

  publicAPI.removeAllClippingPlanes = function () {
    model.clippingPlanes.length = 0;
  };

  publicAPI.removeClippingPlane = function (clippingPlane) {
    var i = model.clippingPlanes.indexOf(clippingPlane);

    if (i === -1) {
      return false;
    }

    model.clippingPlanes.splice(i, 1);
    publicAPI.modified();
    return true;
  };

  publicAPI.getClippingPlanes = function () {
    return model.clippingPlanes;
  };

  publicAPI.setClippingPlanes = function (planes) {
    if (!planes) {
      return;
    }

    if (!Array.isArray(planes)) {
      publicAPI.addClippingPlane(planes);
    } else {
      var nbPlanes = planes.length;

      for (var i = 0; i < nbPlanes && i < 6; i++) {
        publicAPI.addClippingPlane(planes[i]);
      }
    }
  };

  publicAPI.getClippingPlaneInDataCoords = function (propMatrix, i, hnormal) {
    var clipPlanes = model.clippingPlanes;
    var mat = propMatrix;

    if (clipPlanes) {
      var n = clipPlanes.length;

      if (i >= 0 && i < n) {
        // Get the plane
        var plane = clipPlanes[i];
        var normal = plane.getNormal();
        var origin = plane.getOrigin(); // Compute the plane equation

        var v1 = normal[0];
        var v2 = normal[1];
        var v3 = normal[2];
        var v4 = -(v1 * origin[0] + v2 * origin[1] + v3 * origin[2]); // Transform normal from world to data coords

        hnormal[0] = v1 * mat[0] + v2 * mat[4] + v3 * mat[8] + v4 * mat[12];
        hnormal[1] = v1 * mat[1] + v2 * mat[5] + v3 * mat[9] + v4 * mat[13];
        hnormal[2] = v1 * mat[2] + v2 * mat[6] + v3 * mat[10] + v4 * mat[14];
        hnormal[3] = v1 * mat[3] + v2 * mat[7] + v3 * mat[11] + v4 * mat[15];
        return;
      }
    }

    _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].vtkErrorMacro("Clipping plane index ".concat(i, " is out of range."));
  };
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {
  clippingPlanes: []
}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Object methods

  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].obj(publicAPI, model);
  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].algo(publicAPI, model, 1, 0);

  if (!model.clippingPlanes) {
    model.clippingPlanes = [];
  }

  vtkAbstractMapper(publicAPI, model);
} // ----------------------------------------------------------------------------

var vtkAbstractMapper$1 = {
  extend: extend
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Rendering/Core/AbstractMapper3D.js":
/*!**************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Rendering/Core/AbstractMapper3D.js ***!
  \**************************************************************************/
/*! exports provided: default, extend */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkAbstractMapper3D$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony import */ var _AbstractMapper_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AbstractMapper.js */ "../node_modules/@kitware/vtk.js/Rendering/Core/AbstractMapper.js");
/* harmony import */ var _Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../Common/Core/Math/index.js */ "../node_modules/@kitware/vtk.js/Common/Core/Math/index.js");



// vtkAbstractMapper methods
// ----------------------------------------------------------------------------

function vtkAbstractMapper3D(publicAPI, model) {
  publicAPI.getBounds = function () {
    return 0;
  };

  publicAPI.getBounds = function (bounds) {
    publicAPI.getBounds();

    for (var i = 0; i < 6; i++) {
      bounds[i] = model.bounds[i];
    }
  };

  publicAPI.getCenter = function () {
    publicAPI.getBounds();

    for (var i = 0; i < 3; i++) {
      model.center[i] = (model.bounds[2 * i + 1] + model.bounds[2 * i]) / 2.0;
    }

    return model.center.slice();
  };

  publicAPI.getLength = function () {
    var diff = 0.0;
    var l = 0.0;
    publicAPI.getBounds();

    for (var i = 0; i < 3; i++) {
      diff = model.bounds[2 * i + 1] - model.bounds[2 * i];
      l += diff * diff;
    }

    return Math.sqrt(l);
  };
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {
  bounds: [1, -1, 1, -1, 1, -1],
  center: [0, 0, 0]
}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance

  _AbstractMapper_js__WEBPACK_IMPORTED_MODULE_0__["default"].extend(publicAPI, model, initialValues);

  if (!model.bounds) {
    Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_1__["u"])(model.bounds);
  }

  if (!model.center) {
    model.center = [0.0, 0.0, 0.0];
  }

  vtkAbstractMapper3D(publicAPI, model);
} // ----------------------------------------------------------------------------

var vtkAbstractMapper3D$1 = {
  extend: extend
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Rendering/Core/Actor.js":
/*!***************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Rendering/Core/Actor.js ***!
  \***************************************************************/
/*! exports provided: default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkActor$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "../node_modules/@babel/runtime/helpers/defineProperty.js");
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! gl-matrix */ "../node_modules/gl-matrix/esm/index.js");
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _Common_DataModel_BoundingBox_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../Common/DataModel/BoundingBox.js */ "../node_modules/@kitware/vtk.js/Common/DataModel/BoundingBox.js");
/* harmony import */ var _Prop3D_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Prop3D.js */ "../node_modules/@kitware/vtk.js/Rendering/Core/Prop3D.js");
/* harmony import */ var _Property_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Property.js */ "../node_modules/@kitware/vtk.js/Rendering/Core/Property.js");







function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var vtkDebugMacro = _macros_js__WEBPACK_IMPORTED_MODULE_2__["default"].vtkDebugMacro; // ----------------------------------------------------------------------------
// vtkActor methods
// ----------------------------------------------------------------------------

function vtkActor(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkActor'); // Capture 'parentClass' api for internal use

  var superClass = _objectSpread({}, publicAPI);

  publicAPI.getActors = function () {
    return publicAPI;
  };

  publicAPI.getIsOpaque = function () {
    if (model.forceOpaque) {
      return true;
    }

    if (model.forceTranslucent) {
      return false;
    } // make sure we have a property


    if (!model.property) {
      // force creation of a property
      publicAPI.getProperty();
    }

    var isOpaque = model.property.getOpacity() >= 1.0; // are we using an opaque texture, if any?

    isOpaque = isOpaque && (!model.texture || !model.texture.isTranslucent()); // are we using an opaque scalar array, if any?

    isOpaque = isOpaque && (!model.mapper || model.mapper.getIsOpaque());
    return isOpaque;
  };

  publicAPI.hasTranslucentPolygonalGeometry = function () {
    if (model.mapper === null) {
      return false;
    } // make sure we have a property


    if (model.property === null) {
      // force creation of a property
      publicAPI.setProperty(publicAPI.makeProperty());
    } // is this actor opaque ?


    return !publicAPI.getIsOpaque();
  };

  publicAPI.makeProperty = _Property_js__WEBPACK_IMPORTED_MODULE_5__["default"].newInstance;

  publicAPI.getProperty = function () {
    if (model.property === null) {
      model.property = publicAPI.makeProperty();
    }

    return model.property;
  };

  publicAPI.getBounds = function () {
    if (model.mapper === null) {
      return model.bounds;
    } // Check for the special case when the mapper's bounds are unknown


    var bds = model.mapper.getBounds();

    if (!bds || bds.length !== 6) {
      return bds;
    } // Check for the special case when the actor is empty.


    if (bds[0] > bds[1]) {
      model.mapperBounds = bds.concat(); // copy the mapper's bounds

      model.bounds = [1, -1, 1, -1, 1, -1];
      model.boundsMTime.modified();
      return bds;
    } // Check if we have cached values for these bounds - we cache the
    // values returned by model.mapper.getBounds() and we store the time
    // of caching. If the values returned this time are different, or
    // the modified time of this class is newer than the cached time,
    // then we need to rebuild.


    if (!model.mapperBounds || bds[0] !== model.mapperBounds[0] || bds[1] !== model.mapperBounds[1] || bds[2] !== model.mapperBounds[2] || bds[3] !== model.mapperBounds[3] || bds[4] !== model.mapperBounds[4] || bds[5] !== model.mapperBounds[5] || publicAPI.getMTime() > model.boundsMTime.getMTime()) {
      vtkDebugMacro('Recomputing bounds...');
      model.mapperBounds = bds.concat(); // copy the mapper's bounds

      var bbox = [];
      _Common_DataModel_BoundingBox_js__WEBPACK_IMPORTED_MODULE_3__["default"].getCorners(bds, bbox);
      publicAPI.computeMatrix();
      var tmp4 = new Float64Array(16);
      gl_matrix__WEBPACK_IMPORTED_MODULE_1__["mat4"].transpose(tmp4, model.matrix);
      bbox.forEach(function (pt) {
        return gl_matrix__WEBPACK_IMPORTED_MODULE_1__["vec3"].transformMat4(pt, pt, tmp4);
      });
      /* eslint-disable no-multi-assign */

      model.bounds[0] = model.bounds[2] = model.bounds[4] = Number.MAX_VALUE;
      model.bounds[1] = model.bounds[3] = model.bounds[5] = -Number.MAX_VALUE;
      /* eslint-enable no-multi-assign */

      model.bounds = model.bounds.map(function (d, i) {
        return i % 2 === 0 ? bbox.reduce(function (a, b) {
          return a > b[i / 2] ? b[i / 2] : a;
        }, d) : bbox.reduce(function (a, b) {
          return a < b[(i - 1) / 2] ? b[(i - 1) / 2] : a;
        }, d);
      });
      model.boundsMTime.modified();
    }

    return model.bounds;
  };

  publicAPI.getMTime = function () {
    var mt = superClass.getMTime();

    if (model.property !== null) {
      var time = model.property.getMTime();
      mt = time > mt ? time : mt;
    }

    if (model.backfaceProperty !== null) {
      var _time = model.backfaceProperty.getMTime();

      mt = _time > mt ? _time : mt;
    }

    return mt;
  };

  publicAPI.getRedrawMTime = function () {
    var mt = model.mtime;

    if (model.mapper !== null) {
      var time = model.mapper.getMTime();
      mt = time > mt ? time : mt;

      if (model.mapper.getInput() !== null) {
        // FIXME !!! getInputAlgorithm / getInput
        model.mapper.getInputAlgorithm().update();
        time = model.mapper.getInput().getMTime();
        mt = time > mt ? time : mt;
      }
    }

    return mt;
  };

  publicAPI.getSupportsSelection = function () {
    return model.mapper ? model.mapper.getSupportsSelection() : false;
  };
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {
  mapper: null,
  property: null,
  backfaceProperty: null,
  forceOpaque: false,
  forceTranslucent: false,
  bounds: [1, -1, 1, -1, 1, -1]
}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance

  _Prop3D_js__WEBPACK_IMPORTED_MODULE_4__["default"].extend(publicAPI, model, initialValues); // vtkTimeStamp

  model.boundsMTime = {};
  _macros_js__WEBPACK_IMPORTED_MODULE_2__["default"].obj(model.boundsMTime); // Build VTK API

  _macros_js__WEBPACK_IMPORTED_MODULE_2__["default"].set(publicAPI, model, ['property']);
  _macros_js__WEBPACK_IMPORTED_MODULE_2__["default"].setGet(publicAPI, model, ['backfaceProperty', 'forceOpaque', 'forceTranslucent', 'mapper']); // Object methods

  vtkActor(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = _macros_js__WEBPACK_IMPORTED_MODULE_2__["default"].newInstance(extend, 'vtkActor'); // ----------------------------------------------------------------------------

var vtkActor$1 = {
  newInstance: newInstance,
  extend: extend
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Rendering/Core/Actor2D.js":
/*!*****************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Rendering/Core/Actor2D.js ***!
  \*****************************************************************/
/*! exports provided: default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkActor2D$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _Coordinate_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Coordinate.js */ "../node_modules/@kitware/vtk.js/Rendering/Core/Coordinate.js");
/* harmony import */ var _Prop_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Prop.js */ "../node_modules/@kitware/vtk.js/Rendering/Core/Prop.js");
/* harmony import */ var _Property2D_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Property2D.js */ "../node_modules/@kitware/vtk.js/Rendering/Core/Property2D.js");
/* harmony import */ var _Coordinate_Constants_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Coordinate/Constants.js */ "../node_modules/@kitware/vtk.js/Rendering/Core/Coordinate/Constants.js");






// vtkActor2D methods
// ----------------------------------------------------------------------------

function vtkActor2D(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkActor2D');

  publicAPI.getActors2D = function () {
    return publicAPI;
  };

  publicAPI.getIsOpaque = function () {
    // make sure we have a property
    if (!model.property) {
      // force creation of a property
      publicAPI.getProperty();
    }

    var isOpaque = model.property.getOpacity() >= 1.0; // are we using an opaque texture, if any?

    isOpaque = isOpaque && (!model.texture || !model.texture.isTranslucent());
    return isOpaque;
  };

  publicAPI.hasTranslucentPolygonalGeometry = function () {
    if (model.mapper === null) {
      return false;
    } // make sure we have a property


    if (model.property === null) {
      // force creation of a property
      publicAPI.setProperty(publicAPI.makeProperty());
    } // is this actor opaque ?


    return !publicAPI.getIsOpaque();
  };

  publicAPI.makeProperty = _Property2D_js__WEBPACK_IMPORTED_MODULE_3__["default"].newInstance;

  publicAPI.getProperty = function () {
    if (model.property === null) {
      model.property = publicAPI.makeProperty();
    }

    return model.property;
  }; //----------------------------------------------------------------------------
  // Set the Prop2D's position in display coordinates.


  publicAPI.setDisplayPosition = function (XPos, YPos) {
    model.positionCoordinate.setCoordinateSystem(_Coordinate_Constants_js__WEBPACK_IMPORTED_MODULE_4__["Coordinate"].DISPLAY);
    model.positionCoordinate.setValue(XPos, YPos, 0.0);
  }; //----------------------------------------------------------------------------


  publicAPI.setWidth = function (w) {
    var pos = model.position2Coordinate.getValue();
    model.position2Coordinate.setCoordinateSystemToNormalizedViewport();
    model.position2Coordinate.setValue(w, pos[1]);
  }; //----------------------------------------------------------------------------


  publicAPI.setHeight = function (w) {
    var pos = model.position2Coordinate.getValue();
    model.position2Coordinate.setCoordinateSystemToNormalizedViewport();
    model.position2Coordinate.setValue(pos[0], w);
  }; //----------------------------------------------------------------------------


  publicAPI.getWidth = function () {
    return model.position2Coordinate.getValue()[0];
  }; //----------------------------------------------------------------------------


  publicAPI.getHeight = function () {
    return model.position2Coordinate.getValue()[1];
  };

  publicAPI.getMTime = function () {
    var mt = model.mtime;

    if (model.property !== null) {
      var time = model.property.getMTime();
      mt = time > mt ? time : mt;
    }

    mt = model.positionCoordinate.getMTime() > mt ? model.positionCoordinate.getMTime() : mt;
    mt = model.positionCoordinate2.getMTime() > mt ? model.positionCoordinate2.getMTime() : mt; // TBD: Handle array of textures here.

    return mt;
  };

  publicAPI.getRedrawMTime = function () {
    var mt = model.mtime;

    if (model.mapper !== null) {
      var time = model.mapper.getMTime();
      mt = time > mt ? time : mt;

      if (model.mapper.getInput() !== null) {
        // FIXME !!! getInputAlgorithm / getInput
        model.mapper.getInputAlgorithm().update();
        time = model.mapper.getInput().getMTime();
        mt = time > mt ? time : mt;
      }
    }

    return mt;
  };

  publicAPI.getBounds = function () {
    // does our mapper support bounds
    if (typeof publicAPI.getMapper().getBounds === 'function') {
      model.useBounds = true;
      return publicAPI.getMapper().getBounds();
    }

    model.useBounds = false;
    return [];
  }; // Description:
  // Return the actual vtkCoordinate reference that the mapper should use
  // to position the actor. This is used internally by the mappers and should
  // be overridden in specialized subclasses and otherwise ignored.


  publicAPI.getActualPositionCoordinate = function () {
    return model.positionCoordinate;
  };

  publicAPI.getActualPositionCoordinate2 = function () {
    return model.positionCoordinate2;
  };
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {
  mapper: null,
  property: null,
  layerNumber: 0,
  positionCoordinate: null,
  positionCoordinate2: null
}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance

  _Prop_js__WEBPACK_IMPORTED_MODULE_2__["default"].extend(publicAPI, model, initialValues);
  model.positionCoordinate = _Coordinate_js__WEBPACK_IMPORTED_MODULE_1__["default"].newInstance();
  model.positionCoordinate.setCoordinateSystemToViewport();
  model.positionCoordinate2 = _Coordinate_js__WEBPACK_IMPORTED_MODULE_1__["default"].newInstance();
  model.positionCoordinate2.setCoordinateSystemToNormalizedViewport();
  model.positionCoordinate2.setValue(0.5, 0.5);
  model.positionCoordinate2.setReferenceCoordinate(model.positionCoordinate); // Build VTK API

  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].set(publicAPI, model, ['property']);
  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].setGet(publicAPI, model, ['mapper']); // Object methods

  vtkActor2D(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].newInstance(extend, 'vtkActor2D'); // ----------------------------------------------------------------------------

var vtkActor2D$1 = {
  newInstance: newInstance,
  extend: extend
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Rendering/Core/AxesActor.js":
/*!*******************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Rendering/Core/AxesActor.js ***!
  \*******************************************************************/
/*! exports provided: DEFAULT_VALUES, default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DEFAULT_VALUES", function() { return DEFAULT_VALUES; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkAxesActor$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "../node_modules/@babel/runtime/helpers/toConsumableArray.js");
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "../node_modules/@babel/runtime/helpers/defineProperty.js");
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _Common_Core_MatrixBuilder_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../Common/Core/MatrixBuilder.js */ "../node_modules/@kitware/vtk.js/Common/Core/MatrixBuilder.js");
/* harmony import */ var _Common_Core_DataArray_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../Common/Core/DataArray.js */ "../node_modules/@kitware/vtk.js/Common/Core/DataArray.js");
/* harmony import */ var _Actor_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Actor.js */ "../node_modules/@kitware/vtk.js/Rendering/Core/Actor.js");
/* harmony import */ var _Mapper_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Mapper.js */ "../node_modules/@kitware/vtk.js/Rendering/Core/Mapper.js");
/* harmony import */ var _Filters_Sources_ArrowSource_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../Filters/Sources/ArrowSource.js */ "../node_modules/@kitware/vtk.js/Filters/Sources/ArrowSource.js");
/* harmony import */ var _Filters_General_AppendPolyData_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../Filters/General/AppendPolyData.js */ "../node_modules/@kitware/vtk.js/Filters/General/AppendPolyData.js");










function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1___default()(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function centerDataSet(ds) {
  var _vtkMatrixBuilder$bui;

  var bounds = ds.getPoints().getBounds();
  var center = [-(bounds[0] + bounds[1]) * 0.5, -(bounds[2] + bounds[3]) * 0.5, -(bounds[4] + bounds[5]) * 0.5];

  (_vtkMatrixBuilder$bui = _Common_Core_MatrixBuilder_js__WEBPACK_IMPORTED_MODULE_3__["default"].buildFromDegree()).translate.apply(_vtkMatrixBuilder$bui, center).apply(ds.getPoints().getData());
} // ----------------------------------------------------------------------------


function addColor(ds, r, g, b) {
  var size = ds.getPoints().getData().length;
  var rgbArray = new Uint8Array(size);
  var offset = 0;

  while (offset < size) {
    rgbArray[offset++] = r;
    rgbArray[offset++] = g;
    rgbArray[offset++] = b;
  }

  ds.getPointData().setScalars(_Common_Core_DataArray_js__WEBPACK_IMPORTED_MODULE_4__["default"].newInstance({
    name: 'color',
    numberOfComponents: 3,
    values: rgbArray
  }));
} // ----------------------------------------------------------------------------
// vtkAxesActor
// ----------------------------------------------------------------------------


function vtkAxesActor(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkAxesActor');

  publicAPI.update = function () {
    var xAxis = _Filters_Sources_ArrowSource_js__WEBPACK_IMPORTED_MODULE_7__["default"].newInstance(_objectSpread({
      direction: [1, 0, 0]
    }, model.config)).getOutputData();
    centerDataSet(xAxis);
    addColor.apply(void 0, [xAxis].concat(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(model.xAxisColor)));
    var yAxis = _Filters_Sources_ArrowSource_js__WEBPACK_IMPORTED_MODULE_7__["default"].newInstance(_objectSpread({
      direction: [0, 1, 0]
    }, model.config)).getOutputData();
    centerDataSet(yAxis);
    addColor.apply(void 0, [yAxis].concat(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(model.yAxisColor)));
    var zAxis = _Filters_Sources_ArrowSource_js__WEBPACK_IMPORTED_MODULE_7__["default"].newInstance(_objectSpread({
      direction: [0, 0, 1]
    }, model.config)).getOutputData();
    centerDataSet(zAxis);
    addColor.apply(void 0, [zAxis].concat(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(model.zAxisColor)));
    var source = _Filters_General_AppendPolyData_js__WEBPACK_IMPORTED_MODULE_8__["default"].newInstance();
    source.setInputData(xAxis);
    source.addInputData(yAxis);
    source.addInputData(zAxis); // set mapper

    var mapper = _Mapper_js__WEBPACK_IMPORTED_MODULE_6__["default"].newInstance();
    mapper.setInputConnection(source.getOutputPort());
    publicAPI.setMapper(mapper);
  };

  publicAPI.update();
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {
  config: {
    tipResolution: 60,
    tipRadius: 0.1,
    tipLength: 0.2,
    shaftResolution: 60,
    shaftRadius: 0.03,
    invert: false
  },
  xAxisColor: [255, 0, 0],
  yAxisColor: [255, 255, 0],
  zAxisColor: [0, 128, 0]
}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance

  _Actor_js__WEBPACK_IMPORTED_MODULE_5__["default"].extend(publicAPI, model, initialValues);
  _macros_js__WEBPACK_IMPORTED_MODULE_2__["default"].setGet(publicAPI, model, ['config']);
  _macros_js__WEBPACK_IMPORTED_MODULE_2__["default"].setGetArray(publicAPI, model, ['xAxisColor', 'yAxisColor', 'zAxisColor'], 3, 255); // Object methods

  vtkAxesActor(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = _macros_js__WEBPACK_IMPORTED_MODULE_2__["default"].newInstance(extend, 'vtkAxesActor'); // ----------------------------------------------------------------------------

var vtkAxesActor$1 = {
  newInstance: newInstance,
  extend: extend
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Rendering/Core/Camera.js":
/*!****************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Rendering/Core/Camera.js ***!
  \****************************************************************/
/*! exports provided: DEFAULT_VALUES, default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DEFAULT_VALUES", function() { return DEFAULT_VALUES; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkCamera$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "../node_modules/@babel/runtime/helpers/toConsumableArray.js");
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! gl-matrix */ "../node_modules/gl-matrix/esm/index.js");
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../Common/Core/Math/index.js */ "../node_modules/@kitware/vtk.js/Common/Core/Math/index.js");





var vtkDebugMacro = _macros_js__WEBPACK_IMPORTED_MODULE_2__["default"].vtkDebugMacro;
/* eslint-disable new-cap */

/*
 * Convenience function to access elements of a gl-matrix.  If it turns
 * out I have rows and columns swapped everywhere, then I'll just change
 * the order of 'row' and 'col' parameters in this function
 */
// function getMatrixElement(matrix, row, col) {
//   const idx = (row * 4) + col;
//   return matrix[idx];
// }
// ----------------------------------------------------------------------------
// vtkCamera methods
// ----------------------------------------------------------------------------

function vtkCamera(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkCamera'); // Set up private variables and methods

  var origin = new Float64Array(3);
  var dopbasis = new Float64Array([0.0, 0.0, -1.0]);
  var upbasis = new Float64Array([0.0, 1.0, 0.0]);
  var tmpMatrix = gl_matrix__WEBPACK_IMPORTED_MODULE_1__["mat4"].identity(new Float64Array(16));
  var tmpvec1 = new Float64Array(3);
  var tmpvec2 = new Float64Array(3);
  var tmpvec3 = new Float64Array(3);
  var rotateMatrix = gl_matrix__WEBPACK_IMPORTED_MODULE_1__["mat4"].identity(new Float64Array(16));
  var trans = gl_matrix__WEBPACK_IMPORTED_MODULE_1__["mat4"].identity(new Float64Array(16));
  var newPosition = new Float64Array(3);
  var newFocalPoint = new Float64Array(3); // Internal Functions that don't need to be public

  function computeViewPlaneNormal() {
    // VPN is -DOP
    model.viewPlaneNormal[0] = -model.directionOfProjection[0];
    model.viewPlaneNormal[1] = -model.directionOfProjection[1];
    model.viewPlaneNormal[2] = -model.directionOfProjection[2];
  }

  publicAPI.orthogonalizeViewUp = function () {
    var vt = publicAPI.getViewMatrix();
    model.viewUp[0] = vt[4];
    model.viewUp[1] = vt[5];
    model.viewUp[2] = vt[6];
    publicAPI.modified();
  };

  publicAPI.setPosition = function (x, y, z) {
    if (x === model.position[0] && y === model.position[1] && z === model.position[2]) {
      return;
    }

    model.position[0] = x;
    model.position[1] = y;
    model.position[2] = z; // recompute the focal distance

    publicAPI.computeDistance();
    publicAPI.modified();
  };

  publicAPI.setFocalPoint = function (x, y, z) {
    if (x === model.focalPoint[0] && y === model.focalPoint[1] && z === model.focalPoint[2]) {
      return;
    }

    model.focalPoint[0] = x;
    model.focalPoint[1] = y;
    model.focalPoint[2] = z; // recompute the focal distance

    publicAPI.computeDistance();
    publicAPI.modified();
  };

  publicAPI.setDistance = function (d) {
    if (model.distance === d) {
      return;
    }

    model.distance = d;

    if (model.distance < 1e-20) {
      model.distance = 1e-20;
      vtkDebugMacro('Distance is set to minimum.');
    } // we want to keep the camera pointing in the same direction


    var vec = model.directionOfProjection; // recalculate FocalPoint

    model.focalPoint[0] = model.position[0] + vec[0] * model.distance;
    model.focalPoint[1] = model.position[1] + vec[1] * model.distance;
    model.focalPoint[2] = model.position[2] + vec[2] * model.distance;
    publicAPI.modified();
  }; //----------------------------------------------------------------------------
  // This method must be called when the focal point or camera position changes


  publicAPI.computeDistance = function () {
    var dx = model.focalPoint[0] - model.position[0];
    var dy = model.focalPoint[1] - model.position[1];
    var dz = model.focalPoint[2] - model.position[2];
    model.distance = Math.sqrt(dx * dx + dy * dy + dz * dz);

    if (model.distance < 1e-20) {
      model.distance = 1e-20;
      vtkDebugMacro('Distance is set to minimum.');
      var vec = model.directionOfProjection; // recalculate FocalPoint

      model.focalPoint[0] = model.position[0] + vec[0] * model.distance;
      model.focalPoint[1] = model.position[1] + vec[1] * model.distance;
      model.focalPoint[2] = model.position[2] + vec[2] * model.distance;
    }

    model.directionOfProjection[0] = dx / model.distance;
    model.directionOfProjection[1] = dy / model.distance;
    model.directionOfProjection[2] = dz / model.distance;
    computeViewPlaneNormal();
  }; //----------------------------------------------------------------------------
  // Move the position of the camera along the view plane normal. Moving
  // towards the focal point (e.g., > 1) is a dolly-in, moving away
  // from the focal point (e.g., < 1) is a dolly-out.


  publicAPI.dolly = function (amount) {
    if (amount <= 0.0) {
      return;
    } // dolly moves the camera towards the focus


    var d = model.distance / amount;
    publicAPI.setPosition(model.focalPoint[0] - d * model.directionOfProjection[0], model.focalPoint[1] - d * model.directionOfProjection[1], model.focalPoint[2] - d * model.directionOfProjection[2]);
  };

  publicAPI.roll = function (angle) {
    var eye = model.position;
    var at = model.focalPoint;
    var up = model.viewUp;
    var viewUpVec4 = new Float64Array([up[0], up[1], up[2], 0.0]);
    gl_matrix__WEBPACK_IMPORTED_MODULE_1__["mat4"].identity(rotateMatrix);
    var viewDir = new Float64Array([at[0] - eye[0], at[1] - eye[1], at[2] - eye[2]]);
    gl_matrix__WEBPACK_IMPORTED_MODULE_1__["mat4"].rotate(rotateMatrix, rotateMatrix, Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__["r"])(angle), viewDir);
    gl_matrix__WEBPACK_IMPORTED_MODULE_1__["vec4"].transformMat4(viewUpVec4, viewUpVec4, rotateMatrix);
    model.viewUp[0] = viewUpVec4[0];
    model.viewUp[1] = viewUpVec4[1];
    model.viewUp[2] = viewUpVec4[2];
    publicAPI.modified();
  };

  publicAPI.azimuth = function (angle) {
    var fp = model.focalPoint;
    gl_matrix__WEBPACK_IMPORTED_MODULE_1__["mat4"].identity(trans); // translate the focal point to the origin,
    // rotate about view up,
    // translate back again

    gl_matrix__WEBPACK_IMPORTED_MODULE_1__["mat4"].translate(trans, trans, fp);
    gl_matrix__WEBPACK_IMPORTED_MODULE_1__["mat4"].rotate(trans, trans, Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__["r"])(angle), model.viewUp);
    gl_matrix__WEBPACK_IMPORTED_MODULE_1__["mat4"].translate(trans, trans, [-fp[0], -fp[1], -fp[2]]); // apply the transform to the position

    gl_matrix__WEBPACK_IMPORTED_MODULE_1__["vec3"].transformMat4(newPosition, model.position, trans);
    publicAPI.setPosition(newPosition[0], newPosition[1], newPosition[2]);
  };

  publicAPI.yaw = function (angle) {
    var position = model.position;
    gl_matrix__WEBPACK_IMPORTED_MODULE_1__["mat4"].identity(trans); // translate the camera to the origin,
    // rotate about axis,
    // translate back again

    gl_matrix__WEBPACK_IMPORTED_MODULE_1__["mat4"].translate(trans, trans, position);
    gl_matrix__WEBPACK_IMPORTED_MODULE_1__["mat4"].rotate(trans, trans, Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__["r"])(angle), model.viewUp);
    gl_matrix__WEBPACK_IMPORTED_MODULE_1__["mat4"].translate(trans, trans, [-position[0], -position[1], -position[2]]); // apply the transform to the position

    gl_matrix__WEBPACK_IMPORTED_MODULE_1__["vec3"].transformMat4(newFocalPoint, model.focalPoint, trans);
    publicAPI.setFocalPoint(newFocalPoint[0], newFocalPoint[1], newFocalPoint[2]);
  };

  publicAPI.elevation = function (angle) {
    var fp = model.focalPoint; // get the eye / camera position from the viewMatrix

    var vt = publicAPI.getViewMatrix();
    var axis = [-vt[0], -vt[1], -vt[2]];
    gl_matrix__WEBPACK_IMPORTED_MODULE_1__["mat4"].identity(trans); // translate the focal point to the origin,
    // rotate about view up,
    // translate back again

    gl_matrix__WEBPACK_IMPORTED_MODULE_1__["mat4"].translate(trans, trans, fp);
    gl_matrix__WEBPACK_IMPORTED_MODULE_1__["mat4"].rotate(trans, trans, Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__["r"])(angle), axis);
    gl_matrix__WEBPACK_IMPORTED_MODULE_1__["mat4"].translate(trans, trans, [-fp[0], -fp[1], -fp[2]]); // apply the transform to the position

    gl_matrix__WEBPACK_IMPORTED_MODULE_1__["vec3"].transformMat4(newPosition, model.position, trans);
    publicAPI.setPosition(newPosition[0], newPosition[1], newPosition[2]);
  };

  publicAPI.pitch = function (angle) {
    var position = model.position;
    var vt = publicAPI.getViewMatrix();
    var axis = [vt[0], vt[1], vt[2]];
    gl_matrix__WEBPACK_IMPORTED_MODULE_1__["mat4"].identity(trans); // translate the camera to the origin,
    // rotate about axis,
    // translate back again

    gl_matrix__WEBPACK_IMPORTED_MODULE_1__["mat4"].translate(trans, trans, position);
    gl_matrix__WEBPACK_IMPORTED_MODULE_1__["mat4"].rotate(trans, trans, Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__["r"])(angle), axis);
    gl_matrix__WEBPACK_IMPORTED_MODULE_1__["mat4"].translate(trans, trans, [-position[0], -position[1], -position[2]]); // apply the transform to the focal point

    gl_matrix__WEBPACK_IMPORTED_MODULE_1__["vec3"].transformMat4(newFocalPoint, model.focalPoint, trans);
    publicAPI.setFocalPoint.apply(publicAPI, _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(newFocalPoint));
  };

  publicAPI.zoom = function (factor) {
    if (factor <= 0) {
      return;
    }

    if (model.parallelProjection) {
      model.parallelScale /= factor;
    } else {
      model.viewAngle /= factor;
    }

    publicAPI.modified();
  };

  publicAPI.translate = function (x, y, z) {
    var offset = [x, y, z];
    Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__["k"])(model.position, offset, model.position);
    Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__["k"])(model.focalPoint, offset, model.focalPoint);
    publicAPI.computeDistance();
    publicAPI.modified();
  };

  publicAPI.applyTransform = function (transformMat4) {
    var vuOld = [].concat(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(model.viewUp), [1.0]);
    var posNew = [];
    var fpNew = [];
    var vuNew = [];
    vuOld[0] += model.position[0];
    vuOld[1] += model.position[1];
    vuOld[2] += model.position[2];
    gl_matrix__WEBPACK_IMPORTED_MODULE_1__["vec4"].transformMat4(posNew, [].concat(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(model.position), [1.0]), transformMat4);
    gl_matrix__WEBPACK_IMPORTED_MODULE_1__["vec4"].transformMat4(fpNew, [].concat(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(model.focalPoint), [1.0]), transformMat4);
    gl_matrix__WEBPACK_IMPORTED_MODULE_1__["vec4"].transformMat4(vuNew, vuOld, transformMat4);
    vuNew[0] -= posNew[0];
    vuNew[1] -= posNew[1];
    vuNew[2] -= posNew[2];
    publicAPI.setPosition.apply(publicAPI, _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(posNew.slice(0, 3)));
    publicAPI.setFocalPoint.apply(publicAPI, _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(fpNew.slice(0, 3)));
    publicAPI.setViewUp.apply(publicAPI, _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(vuNew.slice(0, 3)));
  };

  publicAPI.getThickness = function () {
    return model.clippingRange[1] - model.clippingRange[0];
  };

  publicAPI.setThickness = function (thickness) {
    var t = thickness;

    if (t < 1e-20) {
      t = 1e-20;
      vtkDebugMacro('Thickness is set to minimum.');
    }

    publicAPI.setClippingRange(model.clippingRange[0], model.clippingRange[0] + t);
  };

  publicAPI.setThicknessFromFocalPoint = function (thickness) {
    var t = thickness;

    if (t < 1e-20) {
      t = 1e-20;
      vtkDebugMacro('Thickness is set to minimum.');
    }

    publicAPI.setClippingRange(model.distance - t / 2, model.distance + t / 2);
  }; // Unimplemented functions


  publicAPI.setRoll = function (angle) {}; // dependency on GetOrientation() and a model.ViewTransform object, see https://github.com/Kitware/VTK/blob/master/Common/Transforms/vtkTransform.cxx and https://vtk.org/doc/nightly/html/classvtkTransform.html


  publicAPI.getRoll = function () {};

  publicAPI.setObliqueAngles = function (alpha, beta) {};

  publicAPI.getOrientation = function () {};

  publicAPI.getOrientationWXYZ = function () {};

  publicAPI.getFrustumPlanes = function (aspect) {// Return array of 24 params (4 params for each of 6 plane equations)
  };

  publicAPI.getCameraLightTransformMatrix = function () {};

  publicAPI.deepCopy = function (sourceCamera) {};

  publicAPI.physicalOrientationToWorldDirection = function (ori) {
    // push the x axis through the orientation quat
    var oriq = gl_matrix__WEBPACK_IMPORTED_MODULE_1__["quat"].fromValues(ori[0], ori[1], ori[2], ori[3]);
    var coriq = gl_matrix__WEBPACK_IMPORTED_MODULE_1__["quat"].create();
    var qdir = gl_matrix__WEBPACK_IMPORTED_MODULE_1__["quat"].fromValues(0.0, 0.0, 1.0, 0.0);
    gl_matrix__WEBPACK_IMPORTED_MODULE_1__["quat"].conjugate(coriq, oriq); // rotate the z axis by the quat

    gl_matrix__WEBPACK_IMPORTED_MODULE_1__["quat"].multiply(qdir, oriq, qdir);
    gl_matrix__WEBPACK_IMPORTED_MODULE_1__["quat"].multiply(qdir, qdir, coriq); // return the z axis in world coords

    return [qdir[0], qdir[1], qdir[2]];
  };

  publicAPI.getPhysicalToWorldMatrix = function (result) {
    publicAPI.getWorldToPhysicalMatrix(result);
    gl_matrix__WEBPACK_IMPORTED_MODULE_1__["mat4"].invert(result, result);
  };

  publicAPI.getWorldToPhysicalMatrix = function (result) {
    gl_matrix__WEBPACK_IMPORTED_MODULE_1__["mat4"].identity(result); // now the physical to vtk world rotation tform

    var physVRight = [3];
    Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__["j"])(model.physicalViewNorth, model.physicalViewUp, physVRight);
    result[0] = physVRight[0];
    result[1] = physVRight[1];
    result[2] = physVRight[2];
    result[4] = model.physicalViewUp[0];
    result[5] = model.physicalViewUp[1];
    result[6] = model.physicalViewUp[2];
    result[8] = -model.physicalViewNorth[0];
    result[9] = -model.physicalViewNorth[1];
    result[10] = -model.physicalViewNorth[2];
    gl_matrix__WEBPACK_IMPORTED_MODULE_1__["mat4"].transpose(result, result);
    gl_matrix__WEBPACK_IMPORTED_MODULE_1__["vec3"].set(tmpvec1, 1 / model.physicalScale, 1 / model.physicalScale, 1 / model.physicalScale);
    gl_matrix__WEBPACK_IMPORTED_MODULE_1__["mat4"].scale(result, result, tmpvec1);
    gl_matrix__WEBPACK_IMPORTED_MODULE_1__["mat4"].translate(result, result, model.physicalTranslation);
  };

  publicAPI.computeViewParametersFromViewMatrix = function (vmat) {
    // invert to get view to world
    gl_matrix__WEBPACK_IMPORTED_MODULE_1__["mat4"].invert(tmpMatrix, vmat); // note with glmatrix operations happen in
    // the reverse order
    // mat.scale
    // mat.translate
    // will result in the translation then the scale
    // mat.mult(a,b)
    // results in perform the B transformation then A
    // then extract the params position, orientation
    // push 0,0,0 through to get a translation

    gl_matrix__WEBPACK_IMPORTED_MODULE_1__["vec3"].transformMat4(tmpvec1, origin, tmpMatrix);
    publicAPI.computeDistance();
    var oldDist = model.distance;
    publicAPI.setPosition(tmpvec1[0], tmpvec1[1], tmpvec1[2]); // push basis vectors to get orientation

    gl_matrix__WEBPACK_IMPORTED_MODULE_1__["vec3"].transformMat4(tmpvec2, dopbasis, tmpMatrix);
    gl_matrix__WEBPACK_IMPORTED_MODULE_1__["vec3"].subtract(tmpvec2, tmpvec2, tmpvec1);
    gl_matrix__WEBPACK_IMPORTED_MODULE_1__["vec3"].normalize(tmpvec2, tmpvec2);
    publicAPI.setDirectionOfProjection(tmpvec2[0], tmpvec2[1], tmpvec2[2]);
    gl_matrix__WEBPACK_IMPORTED_MODULE_1__["vec3"].transformMat4(tmpvec3, upbasis, tmpMatrix);
    gl_matrix__WEBPACK_IMPORTED_MODULE_1__["vec3"].subtract(tmpvec3, tmpvec3, tmpvec1);
    gl_matrix__WEBPACK_IMPORTED_MODULE_1__["vec3"].normalize(tmpvec3, tmpvec3);
    publicAPI.setViewUp(tmpvec3[0], tmpvec3[1], tmpvec3[2]);
    publicAPI.setDistance(oldDist);
  }; // the provided matrix should include
  // translation and orientation only
  // mat is physical to view


  publicAPI.computeViewParametersFromPhysicalMatrix = function (mat) {
    // get the WorldToPhysicalMatrix
    publicAPI.getWorldToPhysicalMatrix(tmpMatrix); // first convert the physical -> view matrix to be
    // world -> view

    gl_matrix__WEBPACK_IMPORTED_MODULE_1__["mat4"].multiply(tmpMatrix, mat, tmpMatrix);
    publicAPI.computeViewParametersFromViewMatrix(tmpMatrix);
  };

  publicAPI.setViewMatrix = function (mat) {
    model.viewMatrix = mat;

    if (model.viewMatrix) {
      gl_matrix__WEBPACK_IMPORTED_MODULE_1__["mat4"].copy(tmpMatrix, model.viewMatrix);
      publicAPI.computeViewParametersFromViewMatrix(tmpMatrix);
      gl_matrix__WEBPACK_IMPORTED_MODULE_1__["mat4"].transpose(model.viewMatrix, model.viewMatrix);
    }
  };

  publicAPI.getViewMatrix = function () {
    if (model.viewMatrix) {
      return model.viewMatrix;
    }

    gl_matrix__WEBPACK_IMPORTED_MODULE_1__["mat4"].lookAt(tmpMatrix, model.position, // eye
    model.focalPoint, // at
    model.viewUp // up
    );
    gl_matrix__WEBPACK_IMPORTED_MODULE_1__["mat4"].transpose(tmpMatrix, tmpMatrix);
    var result = new Float64Array(16);
    gl_matrix__WEBPACK_IMPORTED_MODULE_1__["mat4"].copy(result, tmpMatrix);
    return result;
  };

  publicAPI.setProjectionMatrix = function (mat) {
    model.projectionMatrix = mat;
  };

  publicAPI.getProjectionMatrix = function (aspect, nearz, farz) {
    var result = new Float64Array(16);
    gl_matrix__WEBPACK_IMPORTED_MODULE_1__["mat4"].identity(result);

    if (model.projectionMatrix) {
      var scale = 1 / model.physicalScale;
      gl_matrix__WEBPACK_IMPORTED_MODULE_1__["vec3"].set(tmpvec1, scale, scale, scale);
      gl_matrix__WEBPACK_IMPORTED_MODULE_1__["mat4"].copy(result, model.projectionMatrix);
      gl_matrix__WEBPACK_IMPORTED_MODULE_1__["mat4"].scale(result, result, tmpvec1);
      gl_matrix__WEBPACK_IMPORTED_MODULE_1__["mat4"].transpose(result, result);
      return result;
    }

    gl_matrix__WEBPACK_IMPORTED_MODULE_1__["mat4"].identity(tmpMatrix); // FIXME: Not sure what to do about adjust z buffer here
    // adjust Z-buffer range
    // this->ProjectionTransform->AdjustZBuffer( -1, +1, nearz, farz );

    var cWidth = model.clippingRange[1] - model.clippingRange[0];
    var cRange = [model.clippingRange[0] + (nearz + 1) * cWidth / 2.0, model.clippingRange[0] + (farz + 1) * cWidth / 2.0];

    if (model.parallelProjection) {
      // set up a rectangular parallelipiped
      var width = model.parallelScale * aspect;
      var height = model.parallelScale;
      var xmin = (model.windowCenter[0] - 1.0) * width;
      var xmax = (model.windowCenter[0] + 1.0) * width;
      var ymin = (model.windowCenter[1] - 1.0) * height;
      var ymax = (model.windowCenter[1] + 1.0) * height;
      gl_matrix__WEBPACK_IMPORTED_MODULE_1__["mat4"].ortho(tmpMatrix, xmin, xmax, ymin, ymax, cRange[0], cRange[1]);
      gl_matrix__WEBPACK_IMPORTED_MODULE_1__["mat4"].transpose(tmpMatrix, tmpMatrix);
    } else if (model.useOffAxisProjection) {
      throw new Error('Off-Axis projection is not supported at this time');
    } else {
      var tmp = Math.tan(Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__["r"])(model.viewAngle) / 2.0);

      var _width;

      var _height;

      if (model.useHorizontalViewAngle === true) {
        _width = model.clippingRange[0] * tmp;
        _height = model.clippingRange[0] * tmp / aspect;
      } else {
        _width = model.clippingRange[0] * tmp * aspect;
        _height = model.clippingRange[0] * tmp;
      }

      var _xmin = (model.windowCenter[0] - 1.0) * _width;

      var _xmax = (model.windowCenter[0] + 1.0) * _width;

      var _ymin = (model.windowCenter[1] - 1.0) * _height;

      var _ymax = (model.windowCenter[1] + 1.0) * _height;

      var znear = cRange[0];
      var zfar = cRange[1];
      tmpMatrix[0] = 2.0 * znear / (_xmax - _xmin);
      tmpMatrix[5] = 2.0 * znear / (_ymax - _ymin);
      tmpMatrix[2] = (_xmin + _xmax) / (_xmax - _xmin);
      tmpMatrix[6] = (_ymin + _ymax) / (_ymax - _ymin);
      tmpMatrix[10] = -(znear + zfar) / (zfar - znear);
      tmpMatrix[14] = -1.0;
      tmpMatrix[11] = -2.0 * znear * zfar / (zfar - znear);
      tmpMatrix[15] = 0.0;
    }

    gl_matrix__WEBPACK_IMPORTED_MODULE_1__["mat4"].copy(result, tmpMatrix);
    return result;
  };

  publicAPI.getCompositeProjectionMatrix = function (aspect, nearz, farz) {
    var vMat = publicAPI.getViewMatrix();
    var pMat = publicAPI.getProjectionMatrix(aspect, nearz, farz); // mats are transposed so the order is A then B
    // we reuse pMat as it is a copy so we can do what we want with it

    gl_matrix__WEBPACK_IMPORTED_MODULE_1__["mat4"].multiply(pMat, vMat, pMat);
    return pMat;
  };

  publicAPI.setDirectionOfProjection = function (x, y, z) {
    if (model.directionOfProjection[0] === x && model.directionOfProjection[1] === y && model.directionOfProjection[2] === z) {
      return;
    }

    model.directionOfProjection[0] = x;
    model.directionOfProjection[1] = y;
    model.directionOfProjection[2] = z;
    var vec = model.directionOfProjection; // recalculate FocalPoint

    model.focalPoint[0] = model.position[0] + vec[0] * model.distance;
    model.focalPoint[1] = model.position[1] + vec[1] * model.distance;
    model.focalPoint[2] = model.position[2] + vec[2] * model.distance;
    computeViewPlaneNormal();
  }; // used to handle convert js device orientation angles
  // when you use this method the camera will adjust to the
  // device orientation such that the physicalViewUp you set
  // in world coordinates looks up, and the physicalViewNorth
  // you set in world coorindates will (maybe) point north
  //
  // NOTE WARNING - much of the documentation out there on how
  // orientation works is seriously wrong. Even worse the Chrome
  // device orientation simulator is completely wrong and should
  // never be used. OMG it is so messed up.
  //
  // how it seems to work on iOS is that the device orientation
  // is specified in extrinsic angles with a alpha, beta, gamma
  // convention with axes of Z, X, Y (the code below substitutes
  // the physical coordinate system for these axes to get the right
  // modified coordinate system.


  publicAPI.setDeviceAngles = function (alpha, beta, gamma, screen) {
    var physVRight = [3];
    Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__["j"])(model.physicalViewNorth, model.physicalViewUp, physVRight); // phone to physical coordinates

    var rotmat = gl_matrix__WEBPACK_IMPORTED_MODULE_1__["mat4"].identity(new Float64Array(16));
    gl_matrix__WEBPACK_IMPORTED_MODULE_1__["mat4"].rotate(rotmat, rotmat, Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__["r"])(alpha), model.physicalViewUp);
    gl_matrix__WEBPACK_IMPORTED_MODULE_1__["mat4"].rotate(rotmat, rotmat, Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__["r"])(beta), physVRight);
    gl_matrix__WEBPACK_IMPORTED_MODULE_1__["mat4"].rotate(rotmat, rotmat, Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__["r"])(gamma), model.physicalViewNorth);
    gl_matrix__WEBPACK_IMPORTED_MODULE_1__["mat4"].rotate(rotmat, rotmat, Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__["r"])(-screen), model.physicalViewUp);
    var dop = new Float64Array([-model.physicalViewUp[0], -model.physicalViewUp[1], -model.physicalViewUp[2]]);
    var vup = new Float64Array(model.physicalViewNorth);
    gl_matrix__WEBPACK_IMPORTED_MODULE_1__["vec3"].transformMat4(dop, dop, rotmat);
    gl_matrix__WEBPACK_IMPORTED_MODULE_1__["vec3"].transformMat4(vup, vup, rotmat);
    publicAPI.setDirectionOfProjection(dop[0], dop[1], dop[2]);
    publicAPI.setViewUp(vup[0], vup[1], vup[2]);
    publicAPI.modified();
  };

  publicAPI.setOrientationWXYZ = function (degrees, x, y, z) {
    var quatMat = gl_matrix__WEBPACK_IMPORTED_MODULE_1__["mat4"].identity(new Float64Array(16));

    if (degrees !== 0.0 && (x !== 0.0 || y !== 0.0 || z !== 0.0)) {
      // convert to radians
      var angle = Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__["r"])(degrees);
      var q = gl_matrix__WEBPACK_IMPORTED_MODULE_1__["quat"].create();
      gl_matrix__WEBPACK_IMPORTED_MODULE_1__["quat"].setAxisAngle(q, [x, y, z], angle);
      gl_matrix__WEBPACK_IMPORTED_MODULE_1__["mat4"].fromQuat(quatMat, q);
    }

    var newdop = new Float64Array(3);
    gl_matrix__WEBPACK_IMPORTED_MODULE_1__["vec3"].transformMat4(newdop, [0.0, 0.0, -1.0], quatMat);
    var newvup = new Float64Array(3);
    gl_matrix__WEBPACK_IMPORTED_MODULE_1__["vec3"].transformMat4(newvup, [0.0, 1.0, 0.0], quatMat);
    publicAPI.setDirectionOfProjection.apply(publicAPI, _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(newdop));
    publicAPI.setViewUp.apply(publicAPI, _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(newvup));
    publicAPI.modified();
  };

  publicAPI.computeClippingRange = function (bounds) {
    var vn = null;
    var position = null;
    vn = model.viewPlaneNormal;
    position = model.position;
    var a = -vn[0];
    var b = -vn[1];
    var c = -vn[2];
    var d = -(a * position[0] + b * position[1] + c * position[2]); // Set the max near clipping plane and the min far clipping plane

    var range = [a * bounds[0] + b * bounds[2] + c * bounds[4] + d, 1e-18]; // Find the closest / farthest bounding box vertex

    for (var k = 0; k < 2; k++) {
      for (var j = 0; j < 2; j++) {
        for (var i = 0; i < 2; i++) {
          var dist = a * bounds[i] + b * bounds[2 + j] + c * bounds[4 + k] + d;
          range[0] = dist < range[0] ? dist : range[0];
          range[1] = dist > range[1] ? dist : range[1];
        }
      }
    }

    return range;
  };
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {
  position: [0, 0, 1],
  focalPoint: [0, 0, 0],
  viewUp: [0, 1, 0],
  directionOfProjection: [0, 0, -1],
  parallelProjection: false,
  useHorizontalViewAngle: false,
  viewAngle: 30,
  parallelScale: 1,
  clippingRange: [0.01, 1000.01],
  windowCenter: [0, 0],
  viewPlaneNormal: [0, 0, 1],
  useOffAxisProjection: false,
  screenBottomLeft: [-0.5, -0.5, -0.5],
  screenBottomRight: [0.5, -0.5, -0.5],
  screenTopRight: [0.5, 0.5, -0.5],
  freezeFocalPoint: false,
  projectionMatrix: null,
  viewMatrix: null,
  // used for world to physical transformations
  physicalTranslation: [0, 0, 0],
  physicalScale: 1.0,
  physicalViewUp: [0, 1, 0],
  physicalViewNorth: [0, 0, -1]
}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API

  _macros_js__WEBPACK_IMPORTED_MODULE_2__["default"].obj(publicAPI, model);
  _macros_js__WEBPACK_IMPORTED_MODULE_2__["default"].get(publicAPI, model, ['distance']);
  _macros_js__WEBPACK_IMPORTED_MODULE_2__["default"].setGet(publicAPI, model, ['parallelProjection', 'useHorizontalViewAngle', 'viewAngle', 'parallelScale', 'useOffAxisProjection', 'freezeFocalPoint', 'physicalScale']);
  _macros_js__WEBPACK_IMPORTED_MODULE_2__["default"].getArray(publicAPI, model, ['directionOfProjection', 'viewPlaneNormal', 'position', 'focalPoint']);
  _macros_js__WEBPACK_IMPORTED_MODULE_2__["default"].setGetArray(publicAPI, model, ['clippingRange', 'windowCenter'], 2);
  _macros_js__WEBPACK_IMPORTED_MODULE_2__["default"].setGetArray(publicAPI, model, ['viewUp', 'screenBottomLeft', 'screenBottomRight', 'screenTopRight', 'physicalTranslation', 'physicalViewUp', 'physicalViewNorth'], 3); // Object methods

  vtkCamera(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = _macros_js__WEBPACK_IMPORTED_MODULE_2__["default"].newInstance(extend, 'vtkCamera'); // ----------------------------------------------------------------------------

var vtkCamera$1 = {
  newInstance: newInstance,
  extend: extend
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Rendering/Core/ColorTransferFunction.js":
/*!*******************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Rendering/Core/ColorTransferFunction.js ***!
  \*******************************************************************************/
/*! exports provided: default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkColorTransferFunction$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "../node_modules/@babel/runtime/helpers/defineProperty.js");
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../Common/Core/Math/index.js */ "../node_modules/@kitware/vtk.js/Common/Core/Math/index.js");
/* harmony import */ var _Common_Core_ScalarsToColors_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../Common/Core/ScalarsToColors.js */ "../node_modules/@kitware/vtk.js/Common/Core/ScalarsToColors.js");
/* harmony import */ var _ColorTransferFunction_Constants_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ColorTransferFunction/Constants.js */ "../node_modules/@kitware/vtk.js/Rendering/Core/ColorTransferFunction/Constants.js");






function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var ColorSpace = _ColorTransferFunction_Constants_js__WEBPACK_IMPORTED_MODULE_4__["default"].ColorSpace,
    Scale = _ColorTransferFunction_Constants_js__WEBPACK_IMPORTED_MODULE_4__["default"].Scale;
var ScalarMappingTarget = _Common_Core_ScalarsToColors_js__WEBPACK_IMPORTED_MODULE_3__["default"].ScalarMappingTarget;
var vtkDebugMacro = _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].vtkDebugMacro,
    vtkErrorMacro = _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].vtkErrorMacro,
    vtkWarningMacro = _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].vtkWarningMacro; // ----------------------------------------------------------------------------
// Global methods
// ----------------------------------------------------------------------------

/* eslint-disable no-continue                                                */
// Convert to and from a special polar version of CIELAB (useful for creating
// continuous diverging color maps).

function vtkColorTransferFunctionLabToMsh(lab, msh) {
  var L = lab[0];
  var a = lab[1];
  var b = lab[2];
  var M = Math.sqrt(L * L + a * a + b * b);
  var s = M > 0.001 ? Math.acos(L / M) : 0.0;
  var h = s > 0.001 ? Math.atan2(b, a) : 0.0;
  msh[0] = M;
  msh[1] = s;
  msh[2] = h;
}

function vtkColorTransferFunctionMshToLab(msh, lab) {
  var M = msh[0];
  var s = msh[1];
  var h = msh[2];
  lab[0] = M * Math.cos(s);
  lab[1] = M * Math.sin(s) * Math.cos(h);
  lab[2] = M * Math.sin(s) * Math.sin(h);
} // For the case when interpolating from a saturated color to an unsaturated
// color, find a hue for the unsaturated color that makes sense.


function vtkColorTransferFunctionAdjustHue(msh, unsatM) {
  if (msh[0] >= unsatM - 0.1) {
    // The best we can do is hold hue constant.
    return msh[2];
  } // This equation is designed to make the perceptual change of the
  // interpolation to be close to constant.


  var hueSpin = msh[1] * Math.sqrt(unsatM * unsatM - msh[0] * msh[0]) / (msh[0] * Math.sin(msh[1])); // Spin hue away from 0 except in purple hues.

  if (msh[2] > -0.3 * Math.PI) {
    return msh[2] + hueSpin;
  }

  return msh[2] - hueSpin;
}

function vtkColorTransferFunctionAngleDiff(a1, a2) {
  var adiff = a1 - a2;

  if (adiff < 0.0) {
    adiff = -adiff;
  }

  while (adiff >= 2.0 * Math.PI) {
    adiff -= 2.0 * Math.PI;
  }

  if (adiff > Math.PI) {
    adiff = 2.0 * Math.PI - adiff;
  }

  return adiff;
} // Interpolate a diverging color map.


function vtkColorTransferFunctionInterpolateDiverging(s, rgb1, rgb2, result) {
  var lab1 = [];
  var lab2 = [];
  Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_2__["G"])(rgb1, lab1);
  Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_2__["G"])(rgb2, lab2);
  var msh1 = [];
  var msh2 = [];
  vtkColorTransferFunctionLabToMsh(lab1, msh1);
  vtkColorTransferFunctionLabToMsh(lab2, msh2); // If the endpoints are distinct saturated colors, then place white in between
  // them.

  var localS = s;

  if (msh1[1] > 0.05 && msh2[1] > 0.05 && vtkColorTransferFunctionAngleDiff(msh1[2], msh2[2]) > 0.33 * Math.PI) {
    // Insert the white midpoint by setting one end to white and adjusting the
    // scalar value.
    var Mmid = Math.max(msh1[0], msh2[0]);
    Mmid = Math.max(88.0, Mmid);

    if (s < 0.5) {
      msh2[0] = Mmid;
      msh2[1] = 0.0;
      msh2[2] = 0.0;
      localS *= 2.0;
    } else {
      msh1[0] = Mmid;
      msh1[1] = 0.0;
      msh1[2] = 0.0;
      localS = 2.0 * localS - 1.0;
    }
  } // If one color has no saturation, then its hue value is invalid.  In this
  // case, we want to set it to something logical so that the interpolation of
  // hue makes sense.


  if (msh1[1] < 0.05 && msh2[1] > 0.05) {
    msh1[2] = vtkColorTransferFunctionAdjustHue(msh2, msh1[0]);
  } else if (msh2[1] < 0.05 && msh1[1] > 0.05) {
    msh2[2] = vtkColorTransferFunctionAdjustHue(msh1, msh2[0]);
  }

  var mshTmp = [];
  mshTmp[0] = (1 - localS) * msh1[0] + localS * msh2[0];
  mshTmp[1] = (1 - localS) * msh1[1] + localS * msh2[1];
  mshTmp[2] = (1 - localS) * msh1[2] + localS * msh2[2]; // Now convert back to RGB

  var labTmp = [];
  vtkColorTransferFunctionMshToLab(mshTmp, labTmp);
  Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_2__["H"])(labTmp, result);
} // ----------------------------------------------------------------------------
// vtkColorTransferFunction methods
// ----------------------------------------------------------------------------


function vtkColorTransferFunction(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkColorTransferFunction'); // Return the number of points which specify this function

  publicAPI.getSize = function () {
    return model.nodes.length;
  }; //----------------------------------------------------------------------------
  // Add a point defined in RGB


  publicAPI.addRGBPoint = function (x, r, g, b) {
    return publicAPI.addRGBPointLong(x, r, g, b, 0.5, 0.0);
  }; //----------------------------------------------------------------------------
  // Add a point defined in RGB


  publicAPI.addRGBPointLong = function (x, r, g, b) {
    var midpoint = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0.5;
    var sharpness = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0.0;

    // Error check
    if (midpoint < 0.0 || midpoint > 1.0) {
      vtkErrorMacro('Midpoint outside range [0.0, 1.0]');
      return -1;
    }

    if (sharpness < 0.0 || sharpness > 1.0) {
      vtkErrorMacro('Sharpness outside range [0.0, 1.0]');
      return -1;
    } // remove any node already at this X location


    if (!model.allowDuplicateScalars) {
      publicAPI.removePoint(x);
    } // Create the new node


    var node = {
      x: x,
      r: r,
      g: g,
      b: b,
      midpoint: midpoint,
      sharpness: sharpness
    }; // Add it, then sort to get everything in order

    model.nodes.push(node);
    publicAPI.sortAndUpdateRange(); // We need to find the index of the node we just added in order
    // to return this value

    var i = 0;

    for (; i < model.nodes.length; i++) {
      if (model.nodes[i].x === x) {
        break;
      }
    } // If we didn't find it, something went horribly wrong so
    // return -1


    if (i < model.nodes.length) {
      return i;
    }

    return -1;
  }; //----------------------------------------------------------------------------
  // Add a point defined in HSV


  publicAPI.addHSVPoint = function (x, h, s, v) {
    return publicAPI.addHSVPointLong(x, h, s, v, 0.5, 0.0);
  }; //----------------------------------------------------------------------------
  // Add a point defined in HSV


  publicAPI.addHSVPointLong = function (x, h, s, v) {
    var midpoint = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0.5;
    var sharpness = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0.0;
    var rgb = [];
    var hsv = [h, s, v];
    Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_2__["h"])(hsv, rgb);
    return publicAPI.addRGBPoint(x, rgb[0], rgb[1], rgb[2], midpoint, sharpness);
  }; //----------------------------------------------------------------------------
  // Set nodes directly


  publicAPI.setNodes = function (nodes) {
    if (model.nodes !== nodes) {
      var before = JSON.stringify(model.nodes);
      model.nodes = nodes;
      var after = JSON.stringify(model.nodes);

      if (publicAPI.sortAndUpdateRange() || before !== after) {
        publicAPI.modified();
        return true;
      }
    }

    return false;
  }; //----------------------------------------------------------------------------
  // Sort the vector in increasing order, then fill in
  // the Range


  publicAPI.sortAndUpdateRange = function () {
    var before = JSON.stringify(model.nodes);
    model.nodes.sort(function (a, b) {
      return a.x - b.x;
    });
    var after = JSON.stringify(model.nodes);
    var modifiedInvoked = publicAPI.updateRange(); // If range is updated, Modified() has been called, don't call it again.

    if (!modifiedInvoked && before !== after) {
      publicAPI.modified();
      return true;
    }

    return modifiedInvoked;
  }; //----------------------------------------------------------------------------


  publicAPI.updateRange = function () {
    var oldRange = [2];
    oldRange[0] = model.mappingRange[0];
    oldRange[1] = model.mappingRange[1];
    var size = model.nodes.length;

    if (size) {
      model.mappingRange[0] = model.nodes[0].x;
      model.mappingRange[1] = model.nodes[size - 1].x;
    } else {
      model.mappingRange[0] = 0;
      model.mappingRange[1] = 0;
    } // If the range is the same, then no need to call Modified()


    if (oldRange[0] === model.mappingRange[0] && oldRange[1] === model.mappingRange[1]) {
      return false;
    }

    publicAPI.modified();
    return true;
  }; //----------------------------------------------------------------------------
  // Remove a point


  publicAPI.removePoint = function (x) {
    // First find the node since we need to know its
    // index as our return value
    var i = 0;

    for (; i < model.nodes.length; i++) {
      if (model.nodes[i].x === x) {
        break;
      }
    }

    var retVal = i; // If the node doesn't exist, we return -1

    if (i >= model.nodes.length) {
      return -1;
    } // If the first or last point has been removed, then we update the range
    // No need to sort here as the order of points hasn't changed.


    var modifiedInvoked = false;
    model.nodes.splice(i, 1);

    if (i === 0 || i === model.nodes.length) {
      modifiedInvoked = publicAPI.updateRange();
    }

    if (!modifiedInvoked) {
      publicAPI.modified();
    }

    return retVal;
  }; //----------------------------------------------------------------------------


  publicAPI.movePoint = function (oldX, newX) {
    if (oldX === newX) {
      // Nothing to do.
      return;
    }

    publicAPI.removePoint(newX);

    for (var i = 0; i < model.nodes.length; i++) {
      if (model.nodes[i].x === oldX) {
        model.nodes[i].x = newX;
        publicAPI.sortAndUpdateRange();
        break;
      }
    }
  }; //----------------------------------------------------------------------------
  // Remove all points


  publicAPI.removeAllPoints = function () {
    model.nodes = [];
    publicAPI.sortAndUpdateRange();
  }; //----------------------------------------------------------------------------
  // Add a line defined in RGB


  publicAPI.addRGBSegment = function (x1, r1, g1, b1, x2, r2, g2, b2) {
    // First, find all points in this range and remove them
    publicAPI.sortAndUpdateRange();

    for (var i = 0; i < model.nodes.length;) {
      if (model.nodes[i].x >= x1 && model.nodes[i].x <= x2) {
        model.nodes.splice(i, 1);
      } else {
        i++;
      }
    } // Now add the points


    publicAPI.addRGBPointLong(x1, r1, g1, b1, 0.5, 0.0);
    publicAPI.addRGBPointLong(x2, r2, g2, b2, 0.5, 0.0);
    publicAPI.modified();
  }; //----------------------------------------------------------------------------
  // Add a line defined in HSV


  publicAPI.addHSVSegment = function (x1, h1, s1, v1, x2, h2, s2, v2) {
    var hsv1 = [h1, s1, v1];
    var hsv2 = [h2, s2, v2];
    var rgb1 = [];
    var rgb2 = [];
    Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_2__["h"])(hsv1, rgb1);
    Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_2__["h"])(hsv2, rgb2);
    publicAPI.addRGBSegment(x1, rgb1[0], rgb1[1], rgb1[2], x2, rgb2[0], rgb2[1], rgb2[2]);
  }; //----------------------------------------------------------------------------
  // Returns the RGBA color evaluated at the specified location


  publicAPI.mapValue = function (x) {
    var rgb = [];
    publicAPI.getColor(x, rgb);
    return [Math.floor(255.0 * rgb[0] + 0.5), Math.floor(255.0 * rgb[1] + 0.5), Math.floor(255.0 * rgb[2] + 0.5), 255];
  }; //----------------------------------------------------------------------------
  // Returns the RGB color evaluated at the specified location


  publicAPI.getColor = function (x, rgb) {
    if (model.indexedLookup) {
      var numNodes = publicAPI.getSize(); // todo

      var idx = publicAPI.getAnnotatedValueIndexInternal(x);

      if (idx < 0 || numNodes === 0) {
        publicAPI.getNanColor(rgb);
      } else {
        var nodeVal = [];
        publicAPI.getNodeValue(idx % numNodes, nodeVal);
        rgb[0] = nodeVal.r;
        rgb[1] = nodeVal.g;
        rgb[2] = nodeVal.b;
      }

      return;
    }

    publicAPI.getTable(x, x, 1, rgb);
  }; //----------------------------------------------------------------------------
  // Returns the red color evaluated at the specified location


  publicAPI.getRedValue = function (x) {
    var rgb = [];
    publicAPI.getColor(x, rgb);
    return rgb[0];
  }; //----------------------------------------------------------------------------
  // Returns the green color evaluated at the specified location


  publicAPI.getGreenValue = function (x) {
    var rgb = [];
    publicAPI.getColor(x, rgb);
    return rgb[1];
  }; //----------------------------------------------------------------------------
  // Returns the blue color evaluated at the specified location


  publicAPI.getBlueValue = function (x) {
    var rgb = [];
    publicAPI.getColor(x, rgb);
    return rgb[2];
  }; //----------------------------------------------------------------------------
  // Returns a table of RGB colors at regular intervals along the function


  publicAPI.getTable = function (xStart, xEnd, size, table) {
    // Special case: If either the start or end is a NaN, then all any
    // interpolation done on them is also a NaN.  Therefore, fill the table with
    // the NaN color.
    if (Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_2__["i"])(xStart) || Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_2__["i"])(xEnd)) {
      for (var i = 0; i < size; i++) {
        table[i * 3 + 0] = model.nanColor[0];
        table[i * 3 + 1] = model.nanColor[1];
        table[i * 3 + 2] = model.nanColor[2];
      }

      return;
    }

    var idx = 0;
    var numNodes = model.nodes.length; // Need to keep track of the last value so that
    // we can fill in table locations past this with
    // this value if Clamping is On.

    var lastR = 0.0;
    var lastG = 0.0;
    var lastB = 0.0;

    if (numNodes !== 0) {
      lastR = model.nodes[numNodes - 1].r;
      lastG = model.nodes[numNodes - 1].g;
      lastB = model.nodes[numNodes - 1].b;
    }

    var x = 0.0;
    var x1 = 0.0;
    var x2 = 0.0;
    var rgb1 = [0.0, 0.0, 0.0];
    var rgb2 = [0.0, 0.0, 0.0];
    var midpoint = 0.0;
    var sharpness = 0.0;
    var tmpVec = []; // If the scale is logarithmic, make sure the range is valid.

    var usingLogScale = model.scale === Scale.LOG10;

    if (usingLogScale) {
      // Note: This requires range[0] <= range[1].
      usingLogScale = model.mappingRange[0] > 0.0;
    }

    var logStart = 0.0;
    var logEnd = 0.0;
    var logX = 0.0;

    if (usingLogScale) {
      logStart = Math.log10(xStart);
      logEnd = Math.log10(xEnd);
    } // For each table entry


    for (var _i = 0; _i < size; _i++) {
      // Find our location in the table
      var tidx = 3 * _i; // Find our X location. If we are taking only 1 sample, make
      // it halfway between start and end (usually start and end will
      // be the same in this case)

      if (size > 1) {
        if (usingLogScale) {
          logX = logStart + _i / (size - 1.0) * (logEnd - logStart);
          x = Math.pow(10.0, logX);
        } else {
          x = xStart + _i / (size - 1.0) * (xEnd - xStart);
        }
      } else if (usingLogScale) {
        logX = 0.5 * (logStart + logEnd);
        x = Math.pow(10.0, logX);
      } else {
        x = 0.5 * (xStart + xEnd);
      } // Linearly map x from mappingRange to [0, numberOfValues-1],
      // discretize (round down to the closest integer),
      // then map back to mappingRange


      if (model.discretize) {
        var range = model.mappingRange;

        if (x >= range[0] && x <= range[1]) {
          var numberOfValues = model.numberOfValues;
          var deltaRange = range[1] - range[0];

          if (numberOfValues <= 1) {
            x = range[0] + deltaRange / 2.0;
          } else {
            // normalize x
            var xn = (x - range[0]) / deltaRange; // discretize

            var discretizeIndex = Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_2__["I"])(numberOfValues * xn); // get discretized x

            x = range[0] + discretizeIndex / (numberOfValues - 1) * deltaRange;
          }
        }
      } // Do we need to move to the next node?


      while (idx < numNodes && x > model.nodes[idx].x) {
        idx++; // If we are at a valid point index, fill in
        // the value at this node, and the one before (the
        // two that surround our current sample location)
        // idx cannot be 0 since we just incremented it.

        if (idx < numNodes) {
          x1 = model.nodes[idx - 1].x;
          x2 = model.nodes[idx].x;

          if (usingLogScale) {
            x1 = Math.log10(x1);
            x2 = Math.log10(x2);
          }

          rgb1[0] = model.nodes[idx - 1].r;
          rgb2[0] = model.nodes[idx].r;
          rgb1[1] = model.nodes[idx - 1].g;
          rgb2[1] = model.nodes[idx].g;
          rgb1[2] = model.nodes[idx - 1].b;
          rgb2[2] = model.nodes[idx].b; // We only need the previous midpoint and sharpness
          // since these control this region

          midpoint = model.nodes[idx - 1].midpoint;
          sharpness = model.nodes[idx - 1].sharpness; // Move midpoint away from extreme ends of range to avoid
          // degenerate math

          if (midpoint < 0.00001) {
            midpoint = 0.00001;
          }

          if (midpoint > 0.99999) {
            midpoint = 0.99999;
          }
        }
      } // Are we at or past the end? If so, just use the last value


      if (x > model.mappingRange[1]) {
        table[tidx] = 0.0;
        table[tidx + 1] = 0.0;
        table[tidx + 2] = 0.0;

        if (model.clamping) {
          if (publicAPI.getUseAboveRangeColor()) {
            table[tidx] = model.aboveRangeColor[0];
            table[tidx + 1] = model.aboveRangeColor[1];
            table[tidx + 2] = model.aboveRangeColor[2];
          } else {
            table[tidx] = lastR;
            table[tidx + 1] = lastG;
            table[tidx + 2] = lastB;
          }
        }
      } else if (x < model.mappingRange[0] || Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_2__["E"])(x) && x < 0) {
        // we are before the first node? If so, duplicate this node's values.
        // We have to deal with -inf here
        table[tidx] = 0.0;
        table[tidx + 1] = 0.0;
        table[tidx + 2] = 0.0;

        if (model.clamping) {
          if (publicAPI.getUseBelowRangeColor()) {
            table[tidx] = model.belowRangeColor[0];
            table[tidx + 1] = model.belowRangeColor[1];
            table[tidx + 2] = model.belowRangeColor[2];
          } else if (numNodes > 0) {
            table[tidx] = model.nodes[0].r;
            table[tidx + 1] = model.nodes[0].g;
            table[tidx + 2] = model.nodes[0].b;
          }
        }
      } else if (idx === 0 && (Math.abs(x - xStart) < 1e-6 || model.discretize)) {
        if (numNodes > 0) {
          table[tidx] = model.nodes[0].r;
          table[tidx + 1] = model.nodes[0].g;
          table[tidx + 2] = model.nodes[0].b;
        } else {
          table[tidx] = 0.0;
          table[tidx + 1] = 0.0;
          table[tidx + 2] = 0.0;
        }
      } else {
        // OK, we are between two nodes - interpolate
        // Our first attempt at a normalized location [0,1] -
        // we will be modifying this based on midpoint and
        // sharpness to get the curve shape we want and to have
        // it pass through (y1+y2)/2 at the midpoint.
        var s = 0.0;

        if (usingLogScale) {
          s = (logX - x1) / (x2 - x1);
        } else {
          s = (x - x1) / (x2 - x1);
        } // Readjust based on the midpoint - linear adjustment


        if (s < midpoint) {
          s = 0.5 * s / midpoint;
        } else {
          s = 0.5 + 0.5 * (s - midpoint) / (1.0 - midpoint);
        } // override for sharpness > 0.99
        // In this case we just want piecewise constant


        if (sharpness > 0.99) {
          // Use the first value since we are below the midpoint
          if (s < 0.5) {
            table[tidx] = rgb1[0];
            table[tidx + 1] = rgb1[1];
            table[tidx + 2] = rgb1[2];
            continue;
          } else {
            // Use the second value at or above the midpoint
            table[tidx] = rgb2[0];
            table[tidx + 1] = rgb2[1];
            table[tidx + 2] = rgb2[2];
            continue;
          }
        } // Override for sharpness < 0.01
        // In this case we want piecewise linear


        if (sharpness < 0.01) {
          // Simple linear interpolation
          if (model.colorSpace === ColorSpace.RGB) {
            table[tidx] = (1 - s) * rgb1[0] + s * rgb2[0];
            table[tidx + 1] = (1 - s) * rgb1[1] + s * rgb2[1];
            table[tidx + 2] = (1 - s) * rgb1[2] + s * rgb2[2];
          } else if (model.colorSpace === ColorSpace.HSV) {
            var hsv1 = [];
            var hsv2 = [];
            Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_2__["F"])(rgb1, hsv1);
            Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_2__["F"])(rgb2, hsv2);

            if (model.hSVWrap && (hsv1[0] - hsv2[0] > 0.5 || hsv2[0] - hsv1[0] > 0.5)) {
              if (hsv1[0] > hsv2[0]) {
                hsv1[0] -= 1.0;
              } else {
                hsv2[0] -= 1.0;
              }
            }

            var hsvTmp = [];
            hsvTmp[0] = (1.0 - s) * hsv1[0] + s * hsv2[0];

            if (hsvTmp[0] < 0.0) {
              hsvTmp[0] += 1.0;
            }

            hsvTmp[1] = (1.0 - s) * hsv1[1] + s * hsv2[1];
            hsvTmp[2] = (1.0 - s) * hsv1[2] + s * hsv2[2]; // Now convert this back to RGB

            Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_2__["h"])(hsvTmp, tmpVec);
            table[tidx] = tmpVec[0];
            table[tidx + 1] = tmpVec[1];
            table[tidx + 2] = tmpVec[2];
          } else if (model.colorSpace === ColorSpace.LAB) {
            var lab1 = [];
            var lab2 = [];
            Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_2__["G"])(rgb1, lab1);
            Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_2__["G"])(rgb2, lab2);
            var labTmp = [];
            labTmp[0] = (1 - s) * lab1[0] + s * lab2[0];
            labTmp[1] = (1 - s) * lab1[1] + s * lab2[1];
            labTmp[2] = (1 - s) * lab1[2] + s * lab2[2]; // Now convert back to RGB

            Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_2__["H"])(labTmp, tmpVec);
            table[tidx] = tmpVec[0];
            table[tidx + 1] = tmpVec[1];
            table[tidx + 2] = tmpVec[2];
          } else if (model.colorSpace === ColorSpace.DIVERGING) {
            vtkColorTransferFunctionInterpolateDiverging(s, rgb1, rgb2, tmpVec);
            table[tidx] = tmpVec[0];
            table[tidx + 1] = tmpVec[1];
            table[tidx + 2] = tmpVec[2];
          } else {
            vtkErrorMacro('ColorSpace set to invalid value.', model.colorSpace);
          }

          continue;
        } // We have a sharpness between [0.01, 0.99] - we will
        // used a modified hermite curve interpolation where we
        // derive the slope based on the sharpness, and we compress
        // the curve non-linearly based on the sharpness
        // First, we will adjust our position based on sharpness in
        // order to make the curve sharper (closer to piecewise constant)


        if (s < 0.5) {
          s = 0.5 * Math.pow(s * 2.0, 1.0 + 10.0 * sharpness);
        } else if (s > 0.5) {
          s = 1.0 - 0.5 * Math.pow((1.0 - s) * 2, 1 + 10.0 * sharpness);
        } // Compute some coefficients we will need for the hermite curve


        var ss = s * s;
        var sss = ss * s;
        var h1 = 2.0 * sss - 3 * ss + 1;
        var h2 = -2 * sss + 3 * ss;
        var h3 = sss - 2 * ss + s;
        var h4 = sss - ss;
        var slope = void 0;
        var t = void 0;

        if (model.colorSpace === ColorSpace.RGB) {
          for (var j = 0; j < 3; j++) {
            // Use one slope for both end points
            slope = rgb2[j] - rgb1[j];
            t = (1.0 - sharpness) * slope; // Compute the value

            table[tidx + j] = h1 * rgb1[j] + h2 * rgb2[j] + h3 * t + h4 * t;
          }
        } else if (model.colorSpace === ColorSpace.HSV) {
          var _hsv = [];
          var _hsv2 = [];
          Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_2__["F"])(rgb1, _hsv);
          Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_2__["F"])(rgb2, _hsv2);

          if (model.hSVWrap && (_hsv[0] - _hsv2[0] > 0.5 || _hsv2[0] - _hsv[0] > 0.5)) {
            if (_hsv[0] > _hsv2[0]) {
              _hsv[0] -= 1.0;
            } else {
              _hsv2[0] -= 1.0;
            }
          }

          var _hsvTmp = [];

          for (var _j = 0; _j < 3; _j++) {
            // Use one slope for both end points
            slope = _hsv2[_j] - _hsv[_j];
            t = (1.0 - sharpness) * slope; // Compute the value

            _hsvTmp[_j] = h1 * _hsv[_j] + h2 * _hsv2[_j] + h3 * t + h4 * t;

            if (_j === 0 && _hsvTmp[_j] < 0.0) {
              _hsvTmp[_j] += 1.0;
            }
          } // Now convert this back to RGB


          Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_2__["h"])(_hsvTmp, tmpVec);
          table[tidx] = tmpVec[0];
          table[tidx + 1] = tmpVec[1];
          table[tidx + 2] = tmpVec[2];
        } else if (model.colorSpace === ColorSpace.LAB) {
          var _lab = [];
          var _lab2 = [];
          Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_2__["G"])(rgb1, _lab);
          Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_2__["G"])(rgb2, _lab2);
          var _labTmp = [];

          for (var _j2 = 0; _j2 < 3; _j2++) {
            // Use one slope for both end points
            slope = _lab2[_j2] - _lab[_j2];
            t = (1.0 - sharpness) * slope; // Compute the value

            _labTmp[_j2] = h1 * _lab[_j2] + h2 * _lab2[_j2] + h3 * t + h4 * t;
          } // Now convert this back to RGB


          Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_2__["H"])(_labTmp, tmpVec);
          table[tidx] = tmpVec[0];
          table[tidx + 1] = tmpVec[1];
          table[tidx + 2] = tmpVec[2];
        } else if (model.colorSpace === ColorSpace.DIVERGING) {
          // I have not implemented proper interpolation by a hermite curve for
          // the diverging color map, but I cannot think of a good use case for
          // that anyway.
          vtkColorTransferFunctionInterpolateDiverging(s, rgb1, rgb2, tmpVec);
          table[tidx] = tmpVec[0];
          table[tidx + 1] = tmpVec[1];
          table[tidx + 2] = tmpVec[2];
        } else {
          vtkErrorMacro('ColorSpace set to invalid value.');
        } // Final error check to make sure we don't go outside [0,1]


        for (var _j3 = 0; _j3 < 3; _j3++) {
          table[tidx + _j3] = table[tidx + _j3] < 0.0 ? 0.0 : table[tidx + _j3];
          table[tidx + _j3] = table[tidx + _j3] > 1.0 ? 1.0 : table[tidx + _j3];
        }
      }
    }
  }; //----------------------------------------------------------------------------


  publicAPI.getUint8Table = function (xStart, xEnd, size) {
    var withAlpha = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;

    if (publicAPI.getMTime() <= model.buildTime && model.tableSize === size && model.tableWithAlpha !== withAlpha) {
      return model.table;
    }

    if (model.nodes.length === 0) {
      vtkErrorMacro('Attempting to lookup a value with no points in the function');
      return model.table;
    }

    var nbChannels = withAlpha ? 4 : 3;

    if (model.tableSize !== size || model.tableWithAlpha !== withAlpha) {
      model.table = new Uint8Array(size * nbChannels);
      model.tableSize = size;
      model.tableWithAlpha = withAlpha;
    }

    var tmpTable = [];
    publicAPI.getTable(xStart, xEnd, size, tmpTable);

    for (var i = 0; i < size; i++) {
      model.table[i * nbChannels + 0] = Math.floor(tmpTable[i * 3 + 0] * 255.0 + 0.5);
      model.table[i * nbChannels + 1] = Math.floor(tmpTable[i * 3 + 1] * 255.0 + 0.5);
      model.table[i * nbChannels + 2] = Math.floor(tmpTable[i * 3 + 2] * 255.0 + 0.5);

      if (withAlpha) {
        model.table[i * nbChannels + 3] = 255;
      }
    }

    model.buildTime.modified();
    return model.table;
  }; //----------------------------------------------------------------------------


  publicAPI.buildFunctionFromTable = function (xStart, xEnd, size, table) {
    var inc = 0.0;
    publicAPI.removeAllPoints();

    if (size > 1) {
      inc = (xEnd - xStart) / (size - 1.0);
    }

    for (var i = 0; i < size; i++) {
      var node = {
        x: xStart + inc * i,
        r: table[i * 3],
        g: table[i * 3 + 1],
        b: table[i * 3 + 2],
        sharpness: 0.0,
        midpoint: 0.5
      };
      model.nodes.push(node);
    }

    publicAPI.sortAndUpdateRange();
  }; //----------------------------------------------------------------------------
  // For a specified index value, get the node parameters


  publicAPI.getNodeValue = function (index, val) {
    if (index < 0 || index >= model.nodes.length) {
      vtkErrorMacro('Index out of range!');
      return -1;
    }

    val[0] = model.nodes[index].x;
    val[1] = model.nodes[index].r;
    val[2] = model.nodes[index].g;
    val[3] = model.nodes[index].b;
    val[4] = model.nodes[index].midpoint;
    val[5] = model.nodes[index].sharpness;
    return 1;
  }; //----------------------------------------------------------------------------
  // For a specified index value, get the node parameters


  publicAPI.setNodeValue = function (index, val) {
    if (index < 0 || index >= model.nodes.length) {
      vtkErrorMacro('Index out of range!');
      return -1;
    }

    var oldX = model.nodes[index].x;
    model.nodes[index].x = val[0];
    model.nodes[index].r = val[1];
    model.nodes[index].g = val[2];
    model.nodes[index].b = val[3];
    model.nodes[index].midpoint = val[4];
    model.nodes[index].sharpness = val[5];

    if (oldX !== val[0]) {
      // The point has been moved, the order of points or the range might have
      // been modified.
      publicAPI.sortAndUpdateRange(); // No need to call Modified() here because SortAndUpdateRange() has done it
      // already.
    } else {
      publicAPI.modified();
    }

    return 1;
  }; //----------------------------------------------------------------------------


  publicAPI.getNumberOfAvailableColors = function () {
    if (model.indexedLookup && publicAPI.getSize()) {
      return publicAPI.getSize();
    }

    if (model.tableSize) {
      // Not sure if this is correct since it is only set if
      // "const unsigned char *::GetTable(double xStart, double xEnd,int size)"
      // has been called.
      return model.tableSize;
    }

    return 16777216; // 2^24
  }; //----------------------------------------------------------------------------


  publicAPI.getIndexedColor = function (idx, rgba) {
    var n = publicAPI.getSize();

    if (n > 0 && idx >= 0) {
      var nodeValue = [];
      publicAPI.getNodeValue(idx % n, nodeValue);

      for (var j = 0; j < 3; ++j) {
        rgba[j] = nodeValue[j + 1];
      }

      rgba[3] = 1.0; // NodeColor is RGB-only.

      return;
    }

    publicAPI.getNanColor(rgba);
    rgba[3] = 1.0; // NanColor is RGB-only.
  }; //----------------------------------------------------------------------------


  publicAPI.fillFromDataPointer = function (nb, ptr) {
    if (nb <= 0 || !ptr) {
      return;
    }

    publicAPI.removeAllPoints();

    for (var i = 0; i < nb; i++) {
      publicAPI.addRGBPoint(ptr[i * 4], ptr[i * 4 + 1], ptr[i * 4 + 2], ptr[i * 4 + 3]);
    }
  }; //----------------------------------------------------------------------------


  publicAPI.setMappingRange = function (min, max) {
    var range = [min, max];
    var originalRange = publicAPI.getRange();

    if (originalRange[1] === range[1] && originalRange[0] === range[0]) {
      return;
    }

    if (range[1] === range[0]) {
      vtkErrorMacro('attempt to set zero width color range');
      return;
    }

    var scale = (range[1] - range[0]) / (originalRange[1] - originalRange[0]);
    var shift = range[0] - originalRange[0] * scale;

    for (var i = 0; i < model.nodes.length; ++i) {
      model.nodes[i].x = model.nodes[i].x * scale + shift;
    }

    model.mappingRange[0] = range[0];
    model.mappingRange[1] = range[1];
    publicAPI.modified();
  }; //----------------------------------------------------------------------------


  publicAPI.adjustRange = function (range) {
    var functionRange = publicAPI.getRange(); // Make sure we have points at each end of the range

    var rgb = [];

    if (functionRange[0] < range[0]) {
      publicAPI.getColor(range[0], rgb);
      publicAPI.addRGBPoint(range[0], rgb[0], rgb[1], rgb[2]);
    } else {
      publicAPI.getColor(functionRange[0], rgb);
      publicAPI.addRGBPoint(range[0], rgb[0], rgb[1], rgb[2]);
    }

    if (functionRange[1] > range[1]) {
      publicAPI.getColor(range[1], rgb);
      publicAPI.addRGBPoint(range[1], rgb[0], rgb[1], rgb[2]);
    } else {
      publicAPI.getColor(functionRange[1], rgb);
      publicAPI.addRGBPoint(range[1], rgb[0], rgb[1], rgb[2]);
    } // Remove all points out-of-range


    publicAPI.sortAndUpdateRange();

    for (var i = 0; i < model.nodes.length;) {
      if (model.nodes[i].x >= range[0] && model.nodes[i].x <= range[1]) {
        model.nodes.splice(i, 1);
      } else {
        ++i;
      }
    }

    return 1;
  }; //--------------------------------------------------------------------------


  publicAPI.estimateMinNumberOfSamples = function (x1, x2) {
    var d = publicAPI.findMinimumXDistance();
    return Math.ceil((x2 - x1) / d);
  }; //----------------------------------------------------------------------------


  publicAPI.findMinimumXDistance = function () {
    if (model.nodes.length < 2) {
      return -1.0;
    }

    var distance = Number.MAX_VALUE;

    for (var i = 0; i < model.nodes.length - 1; i++) {
      var currentDist = model.nodes[i + 1].x - model.nodes[i].x;

      if (currentDist < distance) {
        distance = currentDist;
      }
    }

    return distance;
  };

  publicAPI.mapScalarsThroughTable = function (input, output, outFormat, inputOffset) {
    if (publicAPI.getSize() === 0) {
      vtkDebugMacro('Transfer Function Has No Points!');
      return;
    }

    if (model.indexedLookup) {
      publicAPI.mapDataIndexed(input, output, outFormat, inputOffset);
    } else {
      publicAPI.mapData(input, output, outFormat, inputOffset);
    }
  }; //----------------------------------------------------------------------------


  publicAPI.mapData = function (input, output, outFormat, inputOffset) {
    if (publicAPI.getSize() === 0) {
      vtkWarningMacro('Transfer Function Has No Points!');
      return;
    }

    var alpha = Math.floor(publicAPI.getAlpha() * 255.0 + 0.5);
    var length = input.getNumberOfTuples();
    var inIncr = input.getNumberOfComponents();
    var outputV = output.getData();
    var inputV = input.getData();
    var rgb = [];

    if (outFormat === ScalarMappingTarget.RGBA) {
      for (var i = 0; i < length; i++) {
        var x = inputV[i * inIncr + inputOffset];
        publicAPI.getColor(x, rgb);
        outputV[i * 4] = Math.floor(rgb[0] * 255.0 + 0.5);
        outputV[i * 4 + 1] = Math.floor(rgb[1] * 255.0 + 0.5);
        outputV[i * 4 + 2] = Math.floor(rgb[2] * 255.0 + 0.5);
        outputV[i * 4 + 3] = alpha;
      }
    }

    if (outFormat === ScalarMappingTarget.RGB) {
      for (var _i2 = 0; _i2 < length; _i2++) {
        var _x = inputV[_i2 * inIncr + inputOffset];
        publicAPI.getColor(_x, rgb);
        outputV[_i2 * 3] = Math.floor(rgb[0] * 255.0 + 0.5);
        outputV[_i2 * 3 + 1] = Math.floor(rgb[1] * 255.0 + 0.5);
        outputV[_i2 * 3 + 2] = Math.floor(rgb[2] * 255.0 + 0.5);
      }
    }

    if (outFormat === ScalarMappingTarget.LUMINANCE) {
      for (var _i3 = 0; _i3 < length; _i3++) {
        var _x2 = inputV[_i3 * inIncr + inputOffset];
        publicAPI.getColor(_x2, rgb);
        outputV[_i3] = Math.floor(rgb[0] * 76.5 + rgb[1] * 150.45 + rgb[2] * 28.05 + 0.5);
      }
    }

    if (outFormat === ScalarMappingTarget.LUMINANCE_ALPHA) {
      for (var _i4 = 0; _i4 < length; _i4++) {
        var _x3 = inputV[_i4 * inIncr + inputOffset];
        publicAPI.getColor(_x3, rgb);
        outputV[_i4 * 2] = Math.floor(rgb[0] * 76.5 + rgb[1] * 150.45 + rgb[2] * 28.05 + 0.5);
        outputV[_i4 * 2 + 1] = alpha;
      }
    }
  }; //----------------------------------------------------------------------------


  publicAPI.applyColorMap = function (colorMap) {
    if (colorMap.ColorSpace) {
      model.colorSpace = ColorSpace[colorMap.ColorSpace.toUpperCase()];

      if (model.colorSpace === undefined) {
        vtkErrorMacro("ColorSpace ".concat(colorMap.ColorSpace, " not supported, using RGB instead"));
        model.colorSpace = ColorSpace.RGB;
      }
    }

    if (colorMap.NanColor) {
      model.nanColor = [].concat(colorMap.NanColor);

      while (model.nanColor.length < 4) {
        model.nanColor.push(1.0);
      }
    }

    if (colorMap.RGBPoints) {
      var size = colorMap.RGBPoints.length;
      model.nodes = [];
      var midpoint = 0.5;
      var sharpness = 0.0;

      for (var i = 0; i < size; i += 4) {
        model.nodes.push({
          x: colorMap.RGBPoints[i],
          r: colorMap.RGBPoints[i + 1],
          g: colorMap.RGBPoints[i + 2],
          b: colorMap.RGBPoints[i + 3],
          midpoint: midpoint,
          sharpness: sharpness
        });
      }
    } // FIXME: not supported ?
    // if (colorMap.IndexedColors) {
    // }
    // if (colorMap.Annotations) {
    // }


    publicAPI.sortAndUpdateRange();
  };
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {
  clamping: true,
  colorSpace: ColorSpace.RGB,
  hSVWrap: true,
  scale: Scale.LINEAR,
  nanColor: null,
  belowRangeColor: null,
  aboveRangeColor: null,
  useAboveRangeColor: false,
  useBelowRangeColor: false,
  allowDuplicateScalars: false,
  table: null,
  tableSize: 0,
  buildTime: null,
  nodes: null,
  discretize: false,
  numberOfValues: 256
}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance

  _Common_Core_ScalarsToColors_js__WEBPACK_IMPORTED_MODULE_3__["default"].extend(publicAPI, model, initialValues); // Internal objects initialization

  model.table = [];
  model.nodes = [];
  model.nanColor = [0.5, 0.0, 0.0, 1.0];
  model.belowRangeColor = [0.0, 0.0, 0.0, 1.0];
  model.aboveRangeColor = [1.0, 1.0, 1.0, 1.0];
  model.buildTime = {};
  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].obj(model.buildTime); // Create get-only macros

  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].get(publicAPI, model, ['buildTime', 'mappingRange']); // Create get-set macros

  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].setGet(publicAPI, model, ['useAboveRangeColor', 'useBelowRangeColor', 'colorSpace', 'discretize', 'numberOfValues']);
  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].setArray(publicAPI, model, ['nanColor', 'belowRangeColor', 'aboveRangeColor'], 4); // Create get macros for array

  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].getArray(publicAPI, model, ['nanColor', 'belowRangeColor', 'aboveRangeColor']); // For more macro methods, see "Sources/macros.js"
  // Object specific methods

  vtkColorTransferFunction(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].newInstance(extend, 'vtkColorTransferFunction'); // ----------------------------------------------------------------------------

var vtkColorTransferFunction$1 = _objectSpread({
  newInstance: newInstance,
  extend: extend
}, _ColorTransferFunction_Constants_js__WEBPACK_IMPORTED_MODULE_4__["default"]);




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Rendering/Core/ColorTransferFunction/ColorMaps.js":
/*!*****************************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Rendering/Core/ColorTransferFunction/ColorMaps.js ***!
  \*****************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkColorMaps; });
/* harmony import */ var _ColorMaps_json_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ColorMaps.json.js */ "../node_modules/@kitware/vtk.js/Rendering/Core/ColorTransferFunction/ColorMaps.json.js");


var presetMap = Object.create(null);
_ColorMaps_json_js__WEBPACK_IMPORTED_MODULE_0__["v"].filter(function (p) {
  return p.RGBPoints;
}).filter(function (p) {
  return p.ColorSpace !== 'CIELAB';
}).forEach(function (p) {
  presetMap[p.Name] = p;
}); // ----------------------------------------------------------------------------

var rgbPresetNames = Object.keys(presetMap);
rgbPresetNames.sort(); // ----------------------------------------------------------------------------

function getPresetByName(name) {
  return presetMap[name];
} // ----------------------------------------------------------------------------


function addPreset(preset) {
  if (!preset.RGBPoints || preset.ColorSpace === 'CIELAB') {
    return;
  }

  if (!presetMap[preset.Name]) {
    rgbPresetNames.push(preset.Name);
    rgbPresetNames.sort();
  }

  presetMap[preset.Name] = preset;
} // ----------------------------------------------------------------------------


function removePresetByName(name) {
  var index = rgbPresetNames.indexOf(name);

  if (index > -1) {
    rgbPresetNames.splice(index, 1);
  }

  delete presetMap[name];
} // ----------------------------------------------------------------------------


var vtkColorMaps = {
  addPreset: addPreset,
  removePresetByName: removePresetByName,
  getPresetByName: getPresetByName,
  rgbPresetNames: rgbPresetNames
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Rendering/Core/ColorTransferFunction/ColorMaps.json.js":
/*!**********************************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Rendering/Core/ColorTransferFunction/ColorMaps.json.js ***!
  \**********************************************************************************************/
/*! exports provided: v */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "v", function() { return vtkColorMaps; });
var vtkColorMaps = [
	{
		Name: "KAAMS",
		IndexedColors: [
			1,
			1,
			1,
			1,
			0,
			0,
			0,
			1,
			0,
			0,
			0,
			1,
			1,
			1,
			0,
			1,
			0,
			1,
			0,
			1,
			1,
			0.63,
			0.63,
			1,
			0.67,
			0.5,
			0.33,
			1,
			0.5,
			0.75,
			0.53,
			0.35,
			0.7,
			1,
			0.75,
			0.5
		],
		Annotations: [
			0,
			0,
			1,
			1,
			2,
			2,
			3,
			3,
			4,
			4,
			5,
			5,
			6,
			6,
			7,
			7,
			8,
			8,
			9,
			9,
			10,
			10,
			11,
			11
		]
	},
	{
		ColorSpace: "Diverging",
		Name: "Cool to Warm",
		NanColor: [
			1,
			1,
			0
		],
		RGBPoints: [
			0,
			0.23137254902,
			0.298039215686,
			0.752941176471,
			0.5,
			0.865,
			0.865,
			0.865,
			1,
			0.705882352941,
			0.0156862745098,
			0.149019607843
		]
	},
	{
		ColorSpace: "Lab",
		Creator: "Francesca Samsel",
		Name: "Cool to Warm (Extended)",
		NanColor: [
			0.25,
			0,
			0
		],
		RGBPoints: [
			0,
			0,
			0,
			0.34902,
			0.03125,
			0.039216,
			0.062745,
			0.380392,
			0.0625,
			0.062745,
			0.117647,
			0.411765,
			0.09375,
			0.090196,
			0.184314,
			0.45098,
			0.125,
			0.12549,
			0.262745,
			0.501961,
			0.15625,
			0.160784,
			0.337255,
			0.541176,
			0.1875,
			0.2,
			0.396078,
			0.568627,
			0.21875,
			0.239216,
			0.454902,
			0.6,
			0.25,
			0.286275,
			0.521569,
			0.65098,
			0.28125,
			0.337255,
			0.592157,
			0.701961,
			0.3125,
			0.388235,
			0.654902,
			0.74902,
			0.34375,
			0.466667,
			0.737255,
			0.819608,
			0.375,
			0.572549,
			0.819608,
			0.878431,
			0.40625,
			0.654902,
			0.866667,
			0.909804,
			0.4375,
			0.752941,
			0.917647,
			0.941176,
			0.46875,
			0.823529,
			0.956863,
			0.968627,
			0.5,
			0.988235,
			0.960784,
			0.901961,
			0.5,
			0.941176,
			0.984314,
			0.988235,
			0.52,
			0.988235,
			0.945098,
			0.85098,
			0.54,
			0.980392,
			0.898039,
			0.784314,
			0.5625,
			0.968627,
			0.835294,
			0.698039,
			0.59375,
			0.94902,
			0.733333,
			0.588235,
			0.625,
			0.929412,
			0.65098,
			0.509804,
			0.65625,
			0.909804,
			0.564706,
			0.435294,
			0.6875,
			0.878431,
			0.458824,
			0.352941,
			0.71875,
			0.839216,
			0.388235,
			0.286275,
			0.75,
			0.760784,
			0.294118,
			0.211765,
			0.78125,
			0.701961,
			0.211765,
			0.168627,
			0.8125,
			0.65098,
			0.156863,
			0.129412,
			0.84375,
			0.6,
			0.094118,
			0.094118,
			0.875,
			0.54902,
			0.066667,
			0.098039,
			0.90625,
			0.501961,
			0.05098,
			0.12549,
			0.9375,
			0.45098,
			0.054902,
			0.172549,
			0.96875,
			0.4,
			0.054902,
			0.192157,
			1,
			0.34902,
			0.070588,
			0.211765
		]
	},
	{
		ColorSpace: "Diverging",
		Name: "Warm to Cool",
		NanColor: [
			1,
			1,
			0
		],
		RGBPoints: [
			0,
			0.705882352941,
			0.0156862745098,
			0.149019607843,
			0.5,
			0.865,
			0.865,
			0.865,
			1,
			0.23137254902,
			0.298039215686,
			0.752941176471
		]
	},
	{
		ColorSpace: "Lab",
		Creator: "Francesca Samsel",
		Name: "Warm to Cool (Extended)",
		NanColor: [
			0.250004,
			0,
			0
		],
		RGBPoints: [
			0,
			0.34902,
			0,
			0.129412,
			0.025,
			0.4,
			0.00392157,
			0.101961,
			0.05,
			0.470588,
			0.0156863,
			0.0901961,
			0.075,
			0.54902,
			0.027451,
			0.0705882,
			0.1,
			0.619608,
			0.0627451,
			0.0431373,
			0.125,
			0.690196,
			0.12549,
			0.0627451,
			0.15,
			0.741176,
			0.184314,
			0.0745098,
			0.175,
			0.788235,
			0.266667,
			0.0941176,
			0.2,
			0.811765,
			0.345098,
			0.113725,
			0.225,
			0.831373,
			0.411765,
			0.133333,
			0.25,
			0.85098,
			0.47451,
			0.145098,
			0.275,
			0.870588,
			0.54902,
			0.156863,
			0.3,
			0.878431,
			0.619608,
			0.168627,
			0.325,
			0.890196,
			0.658824,
			0.196078,
			0.35,
			0.909804,
			0.717647,
			0.235294,
			0.375,
			0.929412,
			0.776471,
			0.278431,
			0.395522,
			0.94902,
			0.823529,
			0.321569,
			0.418905,
			0.968627,
			0.87451,
			0.407843,
			0.444278,
			0.980392,
			0.917647,
			0.509804,
			0.470149,
			0.988235,
			0.956863,
			0.643137,
			0.483582,
			0.992157,
			0.964706,
			0.713725,
			0.499,
			0.988235,
			0.980392,
			0.870588,
			0.5,
			1,
			1,
			1,
			0.501,
			0.913725,
			0.988235,
			0.937255,
			0.516418,
			0.827451,
			0.980392,
			0.886275,
			0.531343,
			0.764706,
			0.980392,
			0.866667,
			0.546766,
			0.658824,
			0.980392,
			0.843137,
			0.564179,
			0.572549,
			0.964706,
			0.835294,
			0.587562,
			0.423529,
			0.941176,
			0.87451,
			0.60597,
			0.262745,
			0.901961,
			0.862745,
			0.629851,
			0.0705882,
			0.854902,
			0.870588,
			0.651741,
			0.0509804,
			0.8,
			0.85098,
			0.681592,
			0.0235294,
			0.709804,
			0.831373,
			0.712935,
			0.0313725,
			0.615686,
			0.811765,
			0.75,
			0.0313725,
			0.537255,
			0.788235,
			0.775,
			0.0392157,
			0.466667,
			0.768627,
			0.8,
			0.0509804,
			0.396078,
			0.741176,
			0.825,
			0.054902,
			0.317647,
			0.709804,
			0.85,
			0.054902,
			0.243137,
			0.678431,
			0.875,
			0.0431373,
			0.164706,
			0.639216,
			0.9,
			0.0313725,
			0.0980392,
			0.6,
			0.925,
			0.0392157,
			0.0392157,
			0.560784,
			0.95,
			0.105882,
			0.0509804,
			0.509804,
			0.975,
			0.113725,
			0.0235294,
			0.45098,
			1,
			0.12549,
			0,
			0.380392
		]
	},
	{
		ColorSpace: "RGB",
		Name: "Rainbow Desaturated",
		NanColor: [
			1,
			1,
			0
		],
		RGBPoints: [
			0,
			0.278431372549,
			0.278431372549,
			0.858823529412,
			0.143,
			0,
			0,
			0.360784313725,
			0.285,
			0,
			1,
			1,
			0.429,
			0,
			0.501960784314,
			0,
			0.571,
			1,
			1,
			0,
			0.714,
			1,
			0.380392156863,
			0,
			0.857,
			0.419607843137,
			0,
			0,
			1,
			0.878431372549,
			0.301960784314,
			0.301960784314
		]
	},
	{
		ColorSpace: "RGB",
		Name: "Cold and Hot",
		NanColor: [
			1,
			1,
			0
		],
		RGBPoints: [
			0,
			0,
			1,
			1,
			0.45,
			0,
			0,
			1,
			0.5,
			0,
			0,
			0.501960784314,
			0.55,
			1,
			0,
			0,
			1,
			1,
			1,
			0
		]
	},
	{
		ColorSpace: "RGB",
		Name: "Black-Body Radiation",
		NanColor: [
			0,
			0.498039215686,
			1
		],
		RGBPoints: [
			0,
			0,
			0,
			0,
			0.4,
			0.901960784314,
			0,
			0,
			0.8,
			0.901960784314,
			0.901960784314,
			0,
			1,
			1,
			1,
			1
		]
	},
	{
		ColorSpace: "RGB",
		Name: "X Ray",
		NanColor: [
			1,
			0,
			0
		],
		RGBPoints: [
			0,
			1,
			1,
			1,
			1,
			0,
			0,
			0
		]
	},
	{
		ColorSpace: "RGB",
		Name: "Grayscale",
		NanColor: [
			1,
			0,
			0
		],
		RGBPoints: [
			0,
			0,
			0,
			0,
			1,
			1,
			1,
			1
		]
	},
	{
		ColorSpace: "RGB",
		Name: "BkRd",
		NanColor: [
			0,
			1,
			1
		],
		RGBPoints: [
			0,
			0,
			0,
			0,
			1,
			1,
			0,
			0
		]
	},
	{
		ColorSpace: "RGB",
		Name: "BkGn",
		NanColor: [
			1,
			0,
			1
		],
		RGBPoints: [
			0,
			0,
			0,
			0,
			1,
			0,
			1,
			0
		]
	},
	{
		ColorSpace: "RGB",
		Name: "BkBu",
		NanColor: [
			1,
			1,
			0
		],
		RGBPoints: [
			0,
			0,
			0,
			0,
			1,
			0,
			0,
			1
		]
	},
	{
		ColorSpace: "RGB",
		Name: "BkMa",
		NanColor: [
			0,
			1,
			0
		],
		RGBPoints: [
			0,
			0,
			0,
			0,
			1,
			1,
			0,
			1
		]
	},
	{
		ColorSpace: "RGB",
		Name: "BkCy",
		NanColor: [
			0,
			1,
			1
		],
		RGBPoints: [
			0,
			0,
			0,
			0,
			1,
			0,
			1,
			1
		]
	},
	{
		ColorSpace: "RGB",
		Name: "Black, Blue and White",
		NanColor: [
			1,
			1,
			0
		],
		RGBPoints: [
			0,
			0,
			0,
			0,
			0.333,
			0,
			0,
			0.501960784314,
			0.666,
			0,
			0.501960784314,
			1,
			1,
			1,
			1,
			1
		]
	},
	{
		ColorSpace: "RGB",
		Name: "Black, Orange and White",
		NanColor: [
			1,
			1,
			0
		],
		RGBPoints: [
			0,
			0,
			0,
			0,
			0.333,
			0.501960784314,
			0,
			0,
			0.666,
			1,
			0.501960784314,
			0,
			1,
			1,
			1,
			1
		]
	},
	{
		ColorSpace: "Lab",
		Creator: "Francesca Samsel",
		Name: "Linear YGB 1211g",
		NanColor: [
			0.25,
			0,
			0
		],
		RGBPoints: [
			0,
			1,
			0.988235,
			0.968627,
			0.02,
			1,
			0.952941,
			0.878431,
			0.05,
			0.968627,
			0.905882,
			0.776471,
			0.1,
			0.94902,
			0.898039,
			0.647059,
			0.15,
			0.901961,
			0.878431,
			0.556863,
			0.2,
			0.847059,
			0.858824,
			0.482353,
			0.25,
			0.690196,
			0.819608,
			0.435294,
			0.3,
			0.513725,
			0.768627,
			0.384314,
			0.35,
			0.337255,
			0.721569,
			0.337255,
			0.4,
			0.278431,
			0.658824,
			0.392157,
			0.45,
			0.231373,
			0.639216,
			0.435294,
			0.5,
			0.203922,
			0.6,
			0.486275,
			0.55,
			0.172549,
			0.568627,
			0.537255,
			0.6,
			0.141176,
			0.517647,
			0.54902,
			0.65,
			0.133333,
			0.458824,
			0.541176,
			0.7,
			0.12549,
			0.396078,
			0.529412,
			0.75,
			0.117647,
			0.321569,
			0.521569,
			0.8,
			0.121569,
			0.258824,
			0.509804,
			0.85,
			0.133333,
			0.227451,
			0.501961,
			0.9,
			0.145098,
			0.192157,
			0.490196,
			0.95,
			0.188235,
			0.164706,
			0.470588,
			1,
			0.258824,
			0.196078,
			0.439216
		]
	},
	{
		ColorSpace: "CIELAB",
		Creator: "Francesca Samsel",
		Name: "Linear Green (Gr4L)",
		NanColor: [
			0.25,
			0,
			0
		],
		RGBPoints: [
			0,
			0.054902,
			0.109804,
			0.121569,
			0.05,
			0.07451,
			0.172549,
			0.180392,
			0.1,
			0.086275,
			0.231373,
			0.219608,
			0.15,
			0.094118,
			0.278431,
			0.25098,
			0.2,
			0.109804,
			0.34902,
			0.278431,
			0.25,
			0.113725,
			0.4,
			0.278431,
			0.3,
			0.117647,
			0.45098,
			0.270588,
			0.35,
			0.117647,
			0.490196,
			0.243137,
			0.4,
			0.113725,
			0.521569,
			0.203922,
			0.45,
			0.109804,
			0.54902,
			0.152941,
			0.5,
			0.082353,
			0.588235,
			0.082353,
			0.55,
			0.109804,
			0.631373,
			0.05098,
			0.6,
			0.211765,
			0.678431,
			0.082353,
			0.65,
			0.317647,
			0.721569,
			0.113725,
			0.7,
			0.431373,
			0.760784,
			0.160784,
			0.75,
			0.556863,
			0.8,
			0.239216,
			0.8,
			0.666667,
			0.839216,
			0.294118,
			0.85,
			0.784314,
			0.878431,
			0.396078,
			0.9,
			0.886275,
			0.921569,
			0.533333,
			0.95,
			0.960784,
			0.94902,
			0.670588,
			1,
			1,
			0.984314,
			0.901961
		]
	},
	{
		ColorSpace: "Lab",
		Creator: "Francesca Samsel",
		Name: "Linear Blue (8_31f)",
		NanColor: [
			0.25,
			0,
			0
		],
		RGBPoints: [
			0,
			0.960784,
			1,
			0.980392,
			0.05,
			0.815686,
			0.960784,
			0.913725,
			0.1,
			0.670588,
			0.929412,
			0.870588,
			0.15,
			0.556863,
			0.901961,
			0.843137,
			0.2,
			0.478431,
			0.870588,
			0.823529,
			0.25,
			0.439216,
			0.831373,
			0.803922,
			0.3,
			0.4,
			0.8,
			0.788235,
			0.35,
			0.376471,
			0.768627,
			0.768627,
			0.4,
			0.34902,
			0.709804,
			0.729412,
			0.45,
			0.32549,
			0.654902,
			0.690196,
			0.5,
			0.301961,
			0.607843,
			0.658824,
			0.55,
			0.247059,
			0.545098,
			0.619608,
			0.6,
			0.239216,
			0.494118,
			0.580392,
			0.65,
			0.227451,
			0.439216,
			0.541176,
			0.7,
			0.227451,
			0.403922,
			0.521569,
			0.75,
			0.231373,
			0.368627,
			0.501961,
			0.8,
			0.227451,
			0.321569,
			0.470588,
			0.85,
			0.219608,
			0.282353,
			0.439216,
			0.9,
			0.192157,
			0.235294,
			0.4,
			0.95,
			0.160784,
			0.184314,
			0.34902,
			1,
			0.133333,
			0.12549,
			0.301961
		]
	},
	{
		ColorSpace: "HSV",
		Name: "Blue to Red Rainbow",
		NanColor: [
			0.498039215686,
			0.498039215686,
			0.498039215686
		],
		RGBPoints: [
			0,
			0,
			0,
			1,
			1,
			1,
			0,
			0
		]
	},
	{
		ColorSpace: "HSV",
		Name: "Red to Blue Rainbow",
		NanColor: [
			0.498039215686,
			0.498039215686,
			0.498039215686
		],
		RGBPoints: [
			0,
			1,
			0,
			0,
			1,
			0,
			0,
			1
		]
	},
	{
		ColorSpace: "RGB",
		Name: "Rainbow Blended White",
		NanColor: [
			1,
			1,
			0
		],
		RGBPoints: [
			0,
			1,
			1,
			1,
			0.17,
			0,
			0,
			1,
			0.34,
			0,
			1,
			1,
			0.5,
			0,
			1,
			0,
			0.67,
			1,
			1,
			0,
			0.84,
			1,
			0,
			0,
			1,
			0.878431372549,
			0,
			1
		]
	},
	{
		ColorSpace: "RGB",
		Name: "Rainbow Blended Grey",
		NanColor: [
			1,
			1,
			0
		],
		RGBPoints: [
			0,
			0.317647058824,
			0.341176470588,
			0.43137254902,
			0.17,
			0,
			0,
			1,
			0.34,
			0,
			1,
			1,
			0.5,
			0,
			1,
			0,
			0.67,
			1,
			1,
			0,
			0.84,
			1,
			0,
			0,
			1,
			0.878431372549,
			0,
			1
		]
	},
	{
		ColorSpace: "RGB",
		Name: "Rainbow Blended Black",
		NanColor: [
			1,
			1,
			0
		],
		RGBPoints: [
			0,
			0,
			0,
			0,
			0.17,
			0,
			0,
			1,
			0.34,
			0,
			1,
			1,
			0.5,
			0,
			1,
			0,
			0.67,
			1,
			1,
			0,
			0.84,
			1,
			0,
			0,
			1,
			0.878431372549,
			0,
			1
		]
	},
	{
		ColorSpace: "RGB",
		Name: "Blue to Yellow",
		NanColor: [
			1,
			0,
			0
		],
		RGBPoints: [
			0,
			0.0392156862745,
			0.0392156862745,
			0.949019607843,
			1,
			0.949019607843,
			0.949019607843,
			0.0392156862745
		]
	},
	{
		ColorSpace: "HSV",
		Name: "blot",
		RGBPoints: [
			0,
			0,
			0,
			1,
			0.166,
			0,
			0,
			1,
			0.167,
			1,
			0,
			1,
			0.332,
			1,
			0,
			1,
			0.333,
			0,
			1,
			1,
			0.5,
			0,
			1,
			1,
			0.501,
			0,
			1,
			0,
			0.666,
			0,
			1,
			0,
			0.667,
			1,
			1,
			0,
			0.832,
			1,
			1,
			0,
			0.833,
			1,
			0,
			0,
			1,
			1,
			0,
			0
		]
	},
	{
		ColorSpace: "Lab",
		Name: "CIELab Blue to Red",
		NanColor: [
			1,
			1,
			0
		],
		RGBPoints: [
			0,
			0,
			0.6,
			0.749019607843,
			1,
			0.76862745098,
			0.466666666667,
			0.341176470588
		]
	},
	{
		ColorSpace: "RGB",
		Name: "jet",
		RGBPoints: [
			-1,
			0,
			0,
			0.5625,
			-0.777778,
			0,
			0,
			1,
			-0.269841,
			0,
			1,
			1,
			-0.015873,
			0.5,
			1,
			0.5,
			0.238095,
			1,
			1,
			0,
			0.746032,
			1,
			0,
			0,
			1,
			0.5,
			0,
			0
		]
	},
	{
		ColorSpace: "RGB",
		Name: "rainbow",
		RGBPoints: [
			-1,
			0,
			0,
			1,
			-0.5,
			0,
			1,
			1,
			0,
			0,
			1,
			0,
			0.5,
			1,
			1,
			0,
			1,
			1,
			0,
			0
		]
	},
	{
		ColorSpace: "Lab",
		Name: "erdc_rainbow_bright",
		RGBPoints: [
			-1,
			0.32549,
			0.14902,
			0.960784,
			-0.866221,
			0.297047,
			0.375586,
			0.963836,
			-0.732441,
			0.180302,
			0.536818,
			0.964627,
			-0.598662,
			0.1302,
			0.649207,
			0.929647,
			-0.464883,
			0.0445143,
			0.749654,
			0.855998,
			-0.331104,
			0.0271325,
			0.830713,
			0.721527,
			-0.197324,
			0.259504,
			0.866145,
			0.543555,
			-0.0635452,
			0.428364,
			0.890725,
			0.329819,
			0.0702341,
			0.568503,
			0.898508,
			0.187623,
			0.204013,
			0.738259,
			0.890317,
			0.0825461,
			0.337793,
			0.84546,
			0.86136,
			0.0147555,
			0.471572,
			0.912191,
			0.808018,
			0,
			0.605351,
			0.962848,
			0.710445,
			0,
			0.73913,
			0.999469,
			0.600258,
			0.0176284,
			0.87291,
			0.994156,
			0.445975,
			0.193912,
			1,
			0.980407,
			0.247105,
			0.262699
		]
	},
	{
		ColorSpace: "Lab",
		Name: "erdc_rainbow_dark",
		RGBPoints: [
			-1,
			0,
			0,
			0.423499,
			-0.866221,
			0,
			0.119346,
			0.529237,
			-0.732441,
			0,
			0.238691,
			0.634976,
			-0.598662,
			0,
			0.346852,
			0.68788,
			-0.464883,
			0,
			0.45022,
			0.718141,
			-0.331104,
			0,
			0.553554,
			0.664839,
			-0.197324,
			0,
			0.651082,
			0.519303,
			-0.0635452,
			0.115841,
			0.72479,
			0.352857,
			0.0702341,
			0.326771,
			0.781195,
			0.140187,
			0.204013,
			0.522765,
			0.798524,
			0.0284624,
			0.337793,
			0.703162,
			0.788685,
			0.00885756,
			0.471572,
			0.845118,
			0.751133,
			0,
			0.605351,
			0.955734,
			0.690825,
			0,
			0.73913,
			0.995402,
			0.567916,
			0.0618524,
			0.87291,
			0.987712,
			0.403398,
			0.164851,
			1,
			0.980407,
			0.247105,
			0.262699
		]
	},
	{
		ColorSpace: "Lab",
		Name: "nic_CubicL",
		RGBPoints: [
			-1,
			0.479965,
			0.0118108,
			0.5307,
			-0.87451,
			0.522213,
			0.0551282,
			0.706919,
			-0.74902,
			0.50839,
			0.237278,
			0.867764,
			-0.623529,
			0.451617,
			0.373834,
			0.987255,
			-0.498039,
			0.39365,
			0.497255,
			0.97506,
			-0.372549,
			0.328631,
			0.599639,
			0.891843,
			-0.247059,
			0.250043,
			0.690286,
			0.778553,
			-0.121569,
			0.249656,
			0.764905,
			0.645857,
			0.00392157,
			0.297954,
			0.821466,
			0.50449,
			0.129412,
			0.337509,
			0.872595,
			0.358447,
			0.254902,
			0.430011,
			0.913789,
			0.297079,
			0.380392,
			0.587191,
			0.931381,
			0.333353,
			0.505882,
			0.727937,
			0.93591,
			0.353742,
			0.631373,
			0.826403,
			0.921081,
			0.365066,
			0.756863,
			0.893201,
			0.846317,
			0.372662,
			0.882353,
			0.965347,
			0.73884,
			0.378506,
			1,
			0.983235,
			0.597451,
			0.366856
		]
	},
	{
		ColorSpace: "Lab",
		Name: "nic_CubicYF",
		RGBPoints: [
			-1,
			0.5151,
			0.0482,
			0.6697,
			-0.87451,
			0.520711,
			0.168955,
			0.800574,
			-0.74902,
			0.493694,
			0.278596,
			0.911824,
			-0.623529,
			0.440026,
			0.369475,
			0.984978,
			-0.498039,
			0.398932,
			0.457593,
			0.987053,
			-0.372549,
			0.350651,
			0.540644,
			0.929608,
			-0.247059,
			0.298827,
			0.615625,
			0.857729,
			-0.121569,
			0.239928,
			0.685061,
			0.769531,
			0.00392157,
			0.228832,
			0.739349,
			0.673287,
			0.129412,
			0.263297,
			0.78608,
			0.569988,
			0.254902,
			0.298107,
			0.828337,
			0.460214,
			0.380392,
			0.33092,
			0.864071,
			0.352674,
			0.505882,
			0.38306,
			0.898169,
			0.287309,
			0.631373,
			0.49023,
			0.917481,
			0.307961,
			0.756863,
			0.62372,
			0.926026,
			0.332309,
			0.882353,
			0.717458,
			0.92527,
			0.342476,
			1,
			0.8,
			0.9255,
			0.3529
		]
	},
	{
		ColorSpace: "Lab",
		Name: "gist_earth",
		RGBPoints: [
			-1,
			0,
			0,
			0,
			-0.87451,
			0.239216,
			0.027451,
			0.415686,
			-0.74902,
			0.0901961,
			0.254902,
			0.556863,
			-0.623529,
			0.0941176,
			0.352941,
			0.54902,
			-0.498039,
			0.105882,
			0.435294,
			0.533333,
			-0.372549,
			0.12549,
			0.52549,
			0.501961,
			-0.247059,
			0.156863,
			0.596078,
			0.443137,
			-0.121569,
			0.196078,
			0.65098,
			0.380392,
			0.00392157,
			0.282353,
			0.717647,
			0.301961,
			0.129412,
			0.466667,
			0.772549,
			0.27451,
			0.254902,
			0.678431,
			0.784314,
			0.309804,
			0.380392,
			0.901961,
			0.756863,
			0.376471,
			0.505882,
			0.992157,
			0.705882,
			0.521569,
			0.631373,
			1,
			0.721569,
			0.701961,
			0.756863,
			1,
			0.784314,
			0.784314,
			0.882353,
			1,
			0.866667,
			0.866667,
			1,
			1,
			1,
			1
		]
	},
	{
		ColorSpace: "Lab",
		Name: "2hot",
		RGBPoints: [
			-1,
			0.0416667,
			0,
			0,
			-0.873016,
			0.208333,
			0,
			0,
			-0.746032,
			0.375,
			0,
			0,
			-0.619048,
			0.541667,
			0,
			0,
			-0.492063,
			0.708333,
			0,
			0,
			-0.365079,
			0.854137,
			0,
			0,
			-0.238095,
			0.937488,
			0.039062,
			0,
			-0.111111,
			1,
			0.208333,
			0,
			0.015873,
			1,
			0.375,
			0,
			0.142857,
			1,
			0.541667,
			0,
			0.269841,
			1,
			0.708333,
			0,
			0.396825,
			1,
			0.858805,
			0.03125,
			0.52381,
			1,
			0.947392,
			0.15625,
			0.650794,
			1,
			1,
			0.3125,
			0.777778,
			1,
			1,
			0.5625,
			0.904762,
			1,
			1,
			0.8125,
			1,
			1,
			1,
			1
		]
	},
	{
		ColorSpace: "Lab",
		Name: "erdc_red2yellow_BW",
		RGBPoints: [
			-1,
			7.54296e-7,
			0,
			0.0000109827,
			-0.87451,
			0.18285,
			0.0264094,
			0,
			-0.74902,
			0.3066,
			0,
			0,
			-0.623529,
			0.422841,
			0,
			0,
			-0.498039,
			0.522945,
			0,
			0,
			-0.372549,
			0.605721,
			0,
			0,
			-0.247059,
			0.672502,
			0.14168,
			0,
			-0.121569,
			0.728167,
			0.244025,
			0,
			0.00392157,
			0.781215,
			0.333454,
			0,
			0.129412,
			0.825,
			0.423586,
			0,
			0.254902,
			0.855893,
			0.516793,
			0,
			0.380392,
			0.880491,
			0.608846,
			0,
			0.505882,
			0.910305,
			0.695505,
			0,
			0.631373,
			0.94109,
			0.779067,
			0.223528,
			0.756863,
			0.967873,
			0.858572,
			0.473521,
			0.882353,
			0.986815,
			0.933211,
			0.751583,
			1,
			1,
			1,
			0.999997
		]
	},
	{
		ColorSpace: "Lab",
		Name: "erdc_marine2gold_BW",
		RGBPoints: [
			-1,
			1.11641e-7,
			0,
			0.00000162551,
			-0.87451,
			0.0413146,
			0.0619808,
			0.209857,
			-0.74902,
			0.0185557,
			0.101341,
			0.350684,
			-0.623529,
			0.00486405,
			0.149847,
			0.461054,
			-0.498039,
			0.0836345,
			0.210845,
			0.517906,
			-0.372549,
			0.173222,
			0.276134,
			0.541793,
			-0.247059,
			0.259857,
			0.343877,
			0.535869,
			-0.121569,
			0.362299,
			0.408124,
			0.504293,
			0.00392157,
			0.468266,
			0.468276,
			0.468257,
			0.129412,
			0.582781,
			0.527545,
			0.374914,
			0.254902,
			0.691591,
			0.585251,
			0.274266,
			0.380392,
			0.784454,
			0.645091,
			0.247332,
			0.505882,
			0.862299,
			0.710383,
			0.27518,
			0.631373,
			0.920863,
			0.782923,
			0.351563,
			0.756863,
			0.955792,
			0.859699,
			0.533541,
			0.882353,
			0.976162,
			0.93433,
			0.780671,
			1,
			1,
			1,
			0.999983
		]
	},
	{
		ColorSpace: "Lab",
		Name: "erdc_blue2gold_BW",
		RGBPoints: [
			-1,
			0,
			0,
			0,
			-0.87451,
			0.0742735,
			0.0440331,
			0.230013,
			-0.74902,
			0.125276,
			0.0258685,
			0.415826,
			-0.623529,
			0.143879,
			0.0163031,
			0.591346,
			-0.498039,
			0.212261,
			0.0627855,
			0.705239,
			-0.372549,
			0.306048,
			0.141178,
			0.763636,
			-0.247059,
			0.391537,
			0.232286,
			0.773263,
			-0.121569,
			0.461734,
			0.336633,
			0.708321,
			0.00392157,
			0.54209,
			0.427581,
			0.590007,
			0.129412,
			0.61704,
			0.508623,
			0.460978,
			0.254902,
			0.702703,
			0.579586,
			0.309117,
			0.380392,
			0.790336,
			0.644811,
			0.170397,
			0.505882,
			0.870173,
			0.710733,
			0.117134,
			0.631373,
			0.93656,
			0.781991,
			0.157144,
			0.756863,
			0.965672,
			0.862068,
			0.409836,
			0.882353,
			0.985751,
			0.936296,
			0.714162,
			1,
			1,
			1,
			0.999999
		]
	},
	{
		ColorSpace: "Lab",
		Name: "erdc_sapphire2gold_BW",
		RGBPoints: [
			-1,
			0.107704,
			0.107708,
			0.107694,
			-0.87451,
			0.1851,
			0.112354,
			0.308554,
			-0.74902,
			0.236782,
			0.114233,
			0.48788,
			-0.623529,
			0.28296,
			0.126187,
			0.639464,
			-0.498039,
			0.344787,
			0.171643,
			0.739713,
			-0.372549,
			0.413325,
			0.242371,
			0.76913,
			-0.247059,
			0.481863,
			0.3131,
			0.719841,
			-0.121569,
			0.550402,
			0.383829,
			0.612222,
			0.00392157,
			0.61894,
			0.454558,
			0.51126,
			0.129412,
			0.687478,
			0.525287,
			0.39993,
			0.254902,
			0.756017,
			0.596016,
			0.289923,
			0.380392,
			0.824555,
			0.666745,
			0.255498,
			0.505882,
			0.892979,
			0.736822,
			0.27696,
			0.631373,
			0.938851,
			0.804966,
			0.351734,
			0.756863,
			0.966491,
			0.874853,
			0.53572,
			0.882353,
			0.982105,
			0.94153,
			0.782579,
			1,
			1,
			1,
			0.999986
		]
	},
	{
		ColorSpace: "Lab",
		Name: "erdc_red2purple_BW",
		RGBPoints: [
			-1,
			0,
			0,
			0,
			-0.87451,
			0.167793,
			0.0166271,
			0.0431278,
			-0.74902,
			0.262608,
			0.0107595,
			0.0791181,
			-0.623529,
			0.351902,
			0.0101858,
			0.100926,
			-0.498039,
			0.441257,
			0.0160835,
			0.131919,
			-0.372549,
			0.5221,
			0.0555972,
			0.195625,
			-0.247059,
			0.593852,
			0.104294,
			0.310234,
			-0.121569,
			0.654628,
			0.158115,
			0.448486,
			0.00392157,
			0.707443,
			0.220914,
			0.570253,
			0.129412,
			0.749504,
			0.293268,
			0.67897,
			0.254902,
			0.781587,
			0.370517,
			0.779269,
			0.380392,
			0.809951,
			0.451099,
			0.855831,
			0.505882,
			0.84424,
			0.531462,
			0.900451,
			0.631373,
			0.865174,
			0.620901,
			0.91606,
			0.756863,
			0.875041,
			0.714054,
			0.910284,
			0.882353,
			0.880764,
			0.80554,
			0.896276,
			1,
			0.887572,
			0.887591,
			0.887556
		]
	},
	{
		ColorSpace: "Lab",
		Name: "erdc_purple2pink_BW",
		RGBPoints: [
			-1,
			0,
			0,
			0,
			-0.87451,
			0.117562,
			0.0291202,
			0.175876,
			-0.74902,
			0.178368,
			0.0458476,
			0.285454,
			-0.623529,
			0.237731,
			0.0680173,
			0.387717,
			-0.498039,
			0.300877,
			0.0956291,
			0.484802,
			-0.372549,
			0.370929,
			0.136858,
			0.554985,
			-0.247059,
			0.449033,
			0.189273,
			0.58863,
			-0.121569,
			0.529971,
			0.245796,
			0.598587,
			0.00392157,
			0.609914,
			0.300643,
			0.610244,
			0.129412,
			0.697079,
			0.351286,
			0.616371,
			0.254902,
			0.785858,
			0.401991,
			0.617376,
			0.380392,
			0.862517,
			0.45745,
			0.64463,
			0.505882,
			0.91359,
			0.525462,
			0.705336,
			0.631373,
			0.932583,
			0.61064,
			0.767412,
			0.756863,
			0.922478,
			0.706966,
			0.817522,
			0.882353,
			0.901302,
			0.803071,
			0.856311,
			1,
			0.887571,
			0.887591,
			0.887549
		]
	},
	{
		ColorSpace: "Lab",
		Name: "erdc_pbj_lin",
		RGBPoints: [
			-1,
			0,
			0,
			0,
			-0.87451,
			0.091821,
			0.0611476,
			0.10617,
			-0.74902,
			0.160311,
			0.0900022,
			0.192713,
			-0.623529,
			0.22484,
			0.12126,
			0.272128,
			-0.498039,
			0.291263,
			0.157469,
			0.340828,
			-0.372549,
			0.360015,
			0.200388,
			0.388903,
			-0.247059,
			0.437497,
			0.250058,
			0.387201,
			-0.121569,
			0.512636,
			0.304969,
			0.355955,
			0.00392157,
			0.582603,
			0.360874,
			0.33488,
			0.129412,
			0.655126,
			0.416374,
			0.306351,
			0.254902,
			0.725889,
			0.473329,
			0.279051,
			0.380392,
			0.778125,
			0.537928,
			0.302697,
			0.505882,
			0.815894,
			0.606931,
			0.382431,
			0.631373,
			0.839159,
			0.679308,
			0.497608,
			0.756863,
			0.854748,
			0.751666,
			0.631792,
			0.882353,
			0.869483,
			0.822508,
			0.768592,
			1,
			0.887572,
			0.887589,
			0.887565
		]
	},
	{
		ColorSpace: "Lab",
		Name: "erdc_blue2green_muted",
		RGBPoints: [
			-1,
			0.107704,
			0.107708,
			0.107695,
			-0.87451,
			0.141522,
			0.13066,
			0.270741,
			-0.74902,
			0.180123,
			0.146119,
			0.42308,
			-0.623529,
			0.210161,
			0.169674,
			0.551795,
			-0.498039,
			0.239701,
			0.212939,
			0.634969,
			-0.372549,
			0.253916,
			0.282947,
			0.653641,
			-0.247059,
			0.242791,
			0.366933,
			0.608521,
			-0.121569,
			0.226302,
			0.446776,
			0.52693,
			0.00392157,
			0.236237,
			0.514689,
			0.458798,
			0.129412,
			0.274641,
			0.577589,
			0.376069,
			0.254902,
			0.349625,
			0.633993,
			0.288131,
			0.380392,
			0.4437,
			0.683677,
			0.260497,
			0.505882,
			0.536247,
			0.731214,
			0.285424,
			0.631373,
			0.628472,
			0.777128,
			0.349151,
			0.756863,
			0.718259,
			0.819287,
			0.496825,
			0.882353,
			0.804768,
			0.856164,
			0.703299,
			1,
			0.887571,
			0.887591,
			0.887548
		]
	},
	{
		ColorSpace: "Lab",
		Name: "erdc_blue2green_BW",
		RGBPoints: [
			-1,
			3.63578e-7,
			0,
			0.00000529374,
			-0.87451,
			0.0539915,
			0.0577948,
			0.212806,
			-0.74902,
			0.0620393,
			0.0758942,
			0.388959,
			-0.623529,
			0.0697499,
			0.102032,
			0.54177,
			-0.498039,
			0.113295,
			0.156156,
			0.64334,
			-0.372549,
			0.152047,
			0.243196,
			0.670283,
			-0.247059,
			0.158096,
			0.344084,
			0.622864,
			-0.121569,
			0.151142,
			0.43922,
			0.532767,
			0.00392157,
			0.17155,
			0.521588,
			0.457719,
			0.129412,
			0.225861,
			0.599141,
			0.363997,
			0.254902,
			0.32328,
			0.67007,
			0.259083,
			0.380392,
			0.442344,
			0.733697,
			0.223754,
			0.505882,
			0.558409,
			0.794941,
			0.257411,
			0.631373,
			0.673875,
			0.854344,
			0.340822,
			0.756863,
			0.787244,
			0.909326,
			0.524717,
			0.882353,
			0.896483,
			0.958063,
			0.775914,
			1,
			1,
			1,
			0.999982
		]
	},
	{
		ColorSpace: "Lab",
		Name: "GREEN-WHITE_LINEAR",
		RGBPoints: [
			-1,
			0,
			0,
			0,
			-0.87451,
			0,
			0.062745,
			0,
			-0.74902,
			0,
			0.12549,
			0,
			-0.623529,
			0,
			0.188235,
			0,
			-0.498039,
			0,
			0.25098,
			0,
			-0.372549,
			0,
			0.313725,
			0,
			-0.247059,
			0,
			0.376471,
			0,
			-0.121569,
			0.094118,
			0.439216,
			0,
			0.00392157,
			0.196078,
			0.501961,
			0,
			0.129412,
			0.294118,
			0.564706,
			0,
			0.254902,
			0.396078,
			0.627451,
			0,
			0.380392,
			0.498039,
			0.690196,
			0,
			0.505882,
			0.6,
			0.752941,
			0.145098,
			0.631373,
			0.701961,
			0.815686,
			0.364706,
			0.756863,
			0.8,
			0.878431,
			0.580392,
			0.882353,
			0.901961,
			0.941176,
			0.796078,
			1,
			1,
			1,
			1
		]
	},
	{
		ColorSpace: "Lab",
		Name: "erdc_green2yellow_BW",
		RGBPoints: [
			-1,
			0,
			0,
			0,
			-0.87451,
			0,
			0.105542,
			0.0603919,
			-0.74902,
			0,
			0.159454,
			0.104148,
			-0.623529,
			0,
			0.219502,
			0.15542,
			-0.498039,
			0,
			0.282276,
			0.203811,
			-0.372549,
			0,
			0.346331,
			0.235652,
			-0.247059,
			0,
			0.411765,
			0.235428,
			-0.121569,
			0,
			0.477177,
			0.217977,
			0.00392157,
			0.0593644,
			0.541635,
			0.21361,
			0.129412,
			0.233081,
			0.604722,
			0.210591,
			0.254902,
			0.369803,
			0.664942,
			0.226536,
			0.380392,
			0.498446,
			0.722367,
			0.288237,
			0.505882,
			0.601929,
			0.782244,
			0.380815,
			0.631373,
			0.703207,
			0.840497,
			0.512134,
			0.756863,
			0.803186,
			0.896433,
			0.674462,
			0.882353,
			0.903834,
			0.950266,
			0.846715,
			1,
			1,
			1,
			0.999981
		]
	},
	{
		ColorSpace: "Lab",
		Name: "blue2cyan",
		RGBPoints: [
			-1,
			0,
			0,
			0,
			-0.87451,
			0,
			0.152941,
			0.364706,
			-0.74902,
			0,
			0.254902,
			0.470588,
			-0.623529,
			0,
			0.34902,
			0.572549,
			-0.498039,
			0,
			0.443137,
			0.670588,
			-0.372549,
			0,
			0.537255,
			0.772549,
			-0.247059,
			0,
			0.627451,
			0.870588,
			-0.121569,
			0,
			0.717647,
			0.964706,
			0.00392157,
			0.0784314,
			0.772549,
			1,
			0.129412,
			0.207843,
			0.858824,
			1,
			0.254902,
			0.32549,
			0.941176,
			1,
			0.380392,
			0.45098,
			1,
			1,
			0.505882,
			0.560784,
			1,
			1,
			0.631373,
			0.662745,
			1,
			1,
			0.756863,
			0.760784,
			1,
			1,
			0.882353,
			0.870588,
			1,
			1,
			1,
			1,
			1,
			1
		]
	},
	{
		ColorSpace: "Lab",
		Name: "erdc_blue2cyan_BW",
		RGBPoints: [
			-1,
			4.05298e-7,
			0,
			0.0000059012,
			-0.87451,
			0.0207526,
			0.0740933,
			0.18093,
			-0.74902,
			0,
			0.121033,
			0.30343,
			-0.623529,
			0,
			0.166892,
			0.416095,
			-0.498039,
			0,
			0.216768,
			0.524796,
			-0.372549,
			0.0164769,
			0.275471,
			0.608585,
			-0.247059,
			0.0544527,
			0.344824,
			0.659267,
			-0.121569,
			0.0880643,
			0.419118,
			0.688675,
			0.00392157,
			0.127938,
			0.492556,
			0.720256,
			0.129412,
			0.149476,
			0.566946,
			0.756918,
			0.254902,
			0.188961,
			0.641333,
			0.792122,
			0.380392,
			0.245482,
			0.715336,
			0.827609,
			0.505882,
			0.329216,
			0.786235,
			0.874761,
			0.631373,
			0.453558,
			0.852803,
			0.918466,
			0.756863,
			0.626281,
			0.910493,
			0.954,
			0.882353,
			0.82257,
			0.958709,
			0.980146,
			1,
			1,
			1,
			0.999989
		]
	},
	{
		ColorSpace: "Lab",
		Name: "erdc_blue_BW",
		RGBPoints: [
			-1,
			0,
			0,
			0,
			-0.87451,
			0.0425591,
			0.0763529,
			0.150682,
			-0.74902,
			0.0569472,
			0.119154,
			0.275403,
			-0.623529,
			0.0635978,
			0.164772,
			0.395427,
			-0.498039,
			0.0774342,
			0.213851,
			0.510014,
			-0.372549,
			0.106815,
			0.267034,
			0.615102,
			-0.247059,
			0.122093,
			0.324649,
			0.720068,
			-0.121569,
			0.160851,
			0.387068,
			0.806956,
			0.00392157,
			0.213754,
			0.453516,
			0.878012,
			0.129412,
			0.26722,
			0.524656,
			0.932436,
			0.254902,
			0.326844,
			0.599279,
			0.968038,
			0.380392,
			0.403403,
			0.674712,
			0.984784,
			0.505882,
			0.499703,
			0.745519,
			1,
			0.631373,
			0.615055,
			0.813983,
			1,
			0.756863,
			0.74405,
			0.879228,
			1,
			0.882353,
			0.877909,
			0.941913,
			1,
			1,
			1,
			1,
			0.999996
		]
	},
	{
		ColorSpace: "Lab",
		Name: "BLUE-WHITE",
		RGBPoints: [
			-1,
			0,
			0,
			0,
			-0.87451,
			0,
			0,
			0.082353,
			-0.74902,
			0,
			0,
			0.168627,
			-0.623529,
			0,
			0,
			0.254902,
			-0.498039,
			0,
			0,
			0.337255,
			-0.372549,
			0,
			0,
			0.423529,
			-0.247059,
			0,
			0,
			0.509804,
			-0.121569,
			0,
			0.101961,
			0.592157,
			0.00392157,
			0,
			0.203922,
			0.678431,
			0.129412,
			0,
			0.301961,
			0.764706,
			0.254902,
			0,
			0.403922,
			0.85098,
			0.380392,
			0,
			0.505882,
			0.933333,
			0.505882,
			0,
			0.603922,
			1,
			0.631373,
			0.254902,
			0.705882,
			1,
			0.756863,
			0.509804,
			0.807843,
			1,
			0.882353,
			0.764706,
			0.905882,
			1,
			1,
			1,
			1,
			1
		]
	},
	{
		ColorSpace: "Lab",
		Name: "erdc_purple_BW",
		RGBPoints: [
			-1,
			4.264e-8,
			0,
			6.20844e-7,
			-0.87451,
			0.100579,
			0.0593111,
			0.145666,
			-0.74902,
			0.167794,
			0.0889224,
			0.254953,
			-0.623529,
			0.231446,
			0.123339,
			0.360511,
			-0.498039,
			0.296699,
			0.163027,
			0.461278,
			-0.372549,
			0.363211,
			0.209286,
			0.55306,
			-0.247059,
			0.431136,
			0.260776,
			0.637195,
			-0.121569,
			0.498202,
			0.320012,
			0.705799,
			0.00392157,
			0.567456,
			0.380459,
			0.778091,
			0.129412,
			0.629381,
			0.445284,
			0.8448,
			0.254902,
			0.688373,
			0.517374,
			0.895694,
			0.380392,
			0.74891,
			0.590906,
			0.93976,
			0.505882,
			0.805017,
			0.667956,
			0.977626,
			0.631373,
			0.850914,
			0.752618,
			0.992396,
			0.756863,
			0.89724,
			0.838454,
			0.994093,
			0.882353,
			0.948461,
			0.922603,
			0.994449,
			1,
			1,
			1,
			0.999967
		]
	},
	{
		ColorSpace: "Lab",
		Name: "erdc_magenta_BW",
		RGBPoints: [
			-1,
			0,
			0,
			0.0000254023,
			-0.87451,
			0.128696,
			0.0456782,
			0.11635,
			-0.74902,
			0.228133,
			0.0476299,
			0.201452,
			-0.623529,
			0.327273,
			0.0374065,
			0.282107,
			-0.498039,
			0.420953,
			0.0408166,
			0.35709,
			-0.372549,
			0.511562,
			0.0642203,
			0.430511,
			-0.247059,
			0.599552,
			0.102686,
			0.504257,
			-0.121569,
			0.684646,
			0.150536,
			0.579429,
			0.00392157,
			0.765817,
			0.205978,
			0.656062,
			0.129412,
			0.839176,
			0.27229,
			0.731807,
			0.254902,
			0.89536,
			0.357594,
			0.797309,
			0.380392,
			0.930238,
			0.457825,
			0.846984,
			0.505882,
			0.945921,
			0.564536,
			0.880571,
			0.631373,
			0.948995,
			0.670753,
			0.902279,
			0.756863,
			0.947124,
			0.772819,
			0.918171,
			0.882353,
			0.947265,
			0.869424,
			0.934352,
			1,
			0.954719,
			0.95475,
			0.954726
		]
	},
	{
		ColorSpace: "Lab",
		Name: "magenta",
		RGBPoints: [
			-1,
			0,
			0,
			0,
			-0.87451,
			0.364706,
			0,
			0.152941,
			-0.74902,
			0.470588,
			0,
			0.254902,
			-0.623529,
			0.572549,
			0,
			0.34902,
			-0.498039,
			0.670588,
			0,
			0.443137,
			-0.372549,
			0.772549,
			0,
			0.537255,
			-0.247059,
			0.870588,
			0,
			0.627451,
			-0.121569,
			0.964706,
			0,
			0.717647,
			0.00392157,
			1,
			0.0784314,
			0.772549,
			0.129412,
			1,
			0.207843,
			0.858824,
			0.254902,
			1,
			0.32549,
			0.941176,
			0.380392,
			1,
			0.45098,
			1,
			0.505882,
			1,
			0.560784,
			1,
			0.631373,
			1,
			0.662745,
			1,
			0.756863,
			1,
			0.760784,
			1,
			0.882353,
			1,
			0.870588,
			1,
			1,
			1,
			1,
			1
		]
	},
	{
		ColorSpace: "Lab",
		Name: "RED-PURPLE",
		RGBPoints: [
			-1,
			0,
			0,
			0,
			-0.87451,
			0.188235,
			0,
			0.007843,
			-0.74902,
			0.345098,
			0,
			0.035294,
			-0.623529,
			0.439216,
			0,
			0.098039,
			-0.498039,
			0.533333,
			0,
			0.152941,
			-0.372549,
			0.627451,
			0.015686,
			0.211765,
			-0.247059,
			0.721569,
			0.031373,
			0.266667,
			-0.121569,
			0.8,
			0.047059,
			0.329412,
			0.00392157,
			0.862745,
			0.047059,
			0.403922,
			0.129412,
			0.941176,
			0.062745,
			0.466667,
			0.254902,
			0.988235,
			0.078431,
			0.54902,
			0.380392,
			0.988235,
			0.141176,
			0.643137,
			0.505882,
			0.988235,
			0.25098,
			0.729412,
			0.631373,
			0.988235,
			0.376471,
			0.811765,
			0.756863,
			0.988235,
			0.54902,
			0.886275,
			0.882353,
			0.988235,
			0.752941,
			0.952941,
			1,
			0.996078,
			0.996078,
			0.996078
		]
	},
	{
		ColorSpace: "Lab",
		Name: "erdc_red_BW",
		RGBPoints: [
			-1,
			0,
			0,
			0,
			-0.87451,
			0.147204,
			0.0480135,
			0.0401815,
			-0.74902,
			0.253411,
			0.0617478,
			0.0301333,
			-0.623529,
			0.356059,
			0.0746331,
			0.0446897,
			-0.498039,
			0.457731,
			0.0934935,
			0.0636931,
			-0.372549,
			0.557199,
			0.122714,
			0.0860013,
			-0.247059,
			0.665179,
			0.144238,
			0.105585,
			-0.121569,
			0.763833,
			0.187056,
			0.138326,
			0.00392157,
			0.847035,
			0.254558,
			0.189407,
			0.129412,
			0.905663,
			0.345937,
			0.258215,
			0.254902,
			0.941431,
			0.447111,
			0.346277,
			0.380392,
			0.962608,
			0.546927,
			0.457571,
			0.505882,
			0.987833,
			0.637276,
			0.569944,
			0.631373,
			0.994202,
			0.732176,
			0.687958,
			0.756863,
			0.993304,
			0.826268,
			0.800567,
			0.882353,
			0.994413,
			0.917205,
			0.906393,
			1,
			1,
			1,
			0.999979
		]
	},
	{
		ColorSpace: "Lab",
		Name: "RED_TEMPERATURE",
		RGBPoints: [
			-1,
			0,
			0,
			0,
			-0.87451,
			0.090196,
			0,
			0,
			-0.74902,
			0.180392,
			0,
			0,
			-0.623529,
			0.270588,
			0,
			0,
			-0.498039,
			0.360784,
			0,
			0,
			-0.372549,
			0.45098,
			0,
			0,
			-0.247059,
			0.545098,
			0,
			0,
			-0.121569,
			0.635294,
			0,
			0,
			0.00392157,
			0.72549,
			0.058824,
			0,
			0.129412,
			0.815686,
			0.176471,
			0,
			0.254902,
			0.905882,
			0.294118,
			0,
			0.380392,
			1,
			0.411765,
			0,
			0.505882,
			1,
			0.533333,
			0.027451,
			0.631373,
			1,
			0.65098,
			0.27451,
			0.756863,
			1,
			0.768627,
			0.521569,
			0.882353,
			1,
			0.886275,
			0.768627,
			1,
			1,
			1,
			1
		]
	},
	{
		ColorSpace: "Lab",
		Name: "erdc_orange_BW",
		RGBPoints: [
			-1,
			0,
			0,
			0.0000253806,
			-0.87451,
			0.135871,
			0.0593824,
			0,
			-0.74902,
			0.224328,
			0.0907216,
			0,
			-0.623529,
			0.318083,
			0.119647,
			0,
			-0.498039,
			0.414443,
			0.150246,
			0,
			-0.372549,
			0.511077,
			0.184884,
			0,
			-0.247059,
			0.605501,
			0.226033,
			0,
			-0.121569,
			0.695274,
			0.275491,
			0,
			0.00392157,
			0.777826,
			0.334445,
			0,
			0.129412,
			0.851498,
			0.402441,
			0,
			0.254902,
			0.915899,
			0.47759,
			0.000602975,
			0.380392,
			0.971984,
			0.557882,
			0.0361443,
			0.505882,
			1,
			0.641287,
			0.135967,
			0.631373,
			1,
			0.725198,
			0.27997,
			0.756863,
			1,
			0.808205,
			0.438135,
			0.882353,
			1,
			0.89306,
			0.587036,
			1,
			1,
			0.977928,
			0.721599
		]
	},
	{
		ColorSpace: "Lab",
		Name: "heated_object",
		RGBPoints: [
			-1,
			0,
			0,
			0,
			-0.87451,
			0.34902,
			0.0862745,
			0,
			-0.74902,
			0.45098,
			0.172549,
			0,
			-0.623529,
			0.52549,
			0.231373,
			0,
			-0.498039,
			0.580392,
			0.278431,
			0,
			-0.372549,
			0.623529,
			0.313725,
			0,
			-0.247059,
			0.670588,
			0.352941,
			0,
			-0.121569,
			0.717647,
			0.392157,
			0,
			0.00392157,
			0.772549,
			0.439216,
			0,
			0.129412,
			0.839216,
			0.494118,
			0,
			0.254902,
			0.901961,
			0.541176,
			0,
			0.380392,
			0.968627,
			0.6,
			0,
			0.505882,
			1,
			0.658824,
			0,
			0.631373,
			1,
			0.721569,
			0,
			0.756863,
			1,
			0.827451,
			0.298039,
			0.882353,
			1,
			0.976471,
			0.72549,
			1,
			1,
			1,
			1
		]
	},
	{
		ColorSpace: "Lab",
		Name: "erdc_gold_BW",
		RGBPoints: [
			-1,
			0,
			0,
			0.0000190933,
			-0.87451,
			0.128363,
			0.0636265,
			0,
			-0.74902,
			0.193795,
			0.111057,
			0,
			-0.623529,
			0.25976,
			0.15987,
			0,
			-0.498039,
			0.328546,
			0.210589,
			0,
			-0.372549,
			0.399726,
			0.26332,
			0,
			-0.247059,
			0.472969,
			0.318261,
			0,
			-0.121569,
			0.546245,
			0.375827,
			0,
			0.00392157,
			0.61745,
			0.436719,
			0,
			0.129412,
			0.685545,
			0.501113,
			0,
			0.254902,
			0.749578,
			0.568799,
			0,
			0.380392,
			0.80962,
			0.6394,
			0,
			0.505882,
			0.865572,
			0.712699,
			0.10257,
			0.631373,
			0.917709,
			0.787569,
			0.233665,
			0.756863,
			0.966914,
			0.863138,
			0.369608,
			0.882353,
			1,
			0.939405,
			0.496104,
			1,
			0.999225,
			1,
			0.612275
		]
	},
	{
		ColorSpace: "Lab",
		Name: "erdc_brown_BW",
		RGBPoints: [
			-1,
			3.3216e-7,
			0,
			0.00000483629,
			-0.87451,
			0.14693,
			0.0518172,
			0,
			-0.74902,
			0.225806,
			0.0814996,
			0,
			-0.623529,
			0.301681,
			0.111452,
			0,
			-0.498039,
			0.370487,
			0.150664,
			0,
			-0.372549,
			0.43108,
			0.199477,
			0,
			-0.247059,
			0.4849,
			0.255107,
			0,
			-0.121569,
			0.536798,
			0.313486,
			0,
			0.00392157,
			0.59286,
			0.371167,
			0,
			0.129412,
			0.653119,
			0.428135,
			0,
			0.254902,
			0.714589,
			0.485917,
			0.0379541,
			0.380392,
			0.774667,
			0.54565,
			0.116634,
			0.505882,
			0.831222,
			0.608047,
			0.183895,
			0.631373,
			0.880305,
			0.674199,
			0.260298,
			0.756863,
			0.922314,
			0.742472,
			0.367086,
			0.882353,
			0.959408,
			0.811222,
			0.497258,
			1,
			0.993548,
			0.875183,
			0.622093
		]
	},
	{
		ColorSpace: "Lab",
		Name: "copper_Matlab",
		RGBPoints: [
			-1,
			0,
			0,
			0,
			-0.87451,
			0.0784314,
			0.0501961,
			0.0313725,
			-0.74902,
			0.156863,
			0.100392,
			0.0627451,
			-0.623529,
			0.235294,
			0.150588,
			0.0941176,
			-0.498039,
			0.313725,
			0.200784,
			0.12549,
			-0.372549,
			0.392157,
			0.25098,
			0.156863,
			-0.247059,
			0.470588,
			0.301176,
			0.188235,
			-0.121569,
			0.54902,
			0.351373,
			0.219608,
			0.00392157,
			0.627451,
			0.401569,
			0.25098,
			0.129412,
			0.705882,
			0.451765,
			0.282353,
			0.254902,
			0.784314,
			0.501961,
			0.313725,
			0.380392,
			0.862745,
			0.552157,
			0.345098,
			0.505882,
			0.941176,
			0.602353,
			0.376471,
			0.631373,
			1,
			0.652549,
			0.407843,
			0.756863,
			1,
			0.702745,
			0.439216,
			0.882353,
			1,
			0.752941,
			0.470588,
			1,
			1,
			0.8,
			0.5
		]
	},
	{
		ColorSpace: "Lab",
		Name: "pink_Matlab",
		RGBPoints: [
			-1,
			0,
			0,
			0,
			-0.87451,
			0.312416,
			0.204524,
			0.204524,
			-0.74902,
			0.441822,
			0.289241,
			0.289241,
			-0.623529,
			0.54112,
			0.354246,
			0.354246,
			-0.498039,
			0.624831,
			0.409048,
			0.409048,
			-0.372549,
			0.698582,
			0.45733,
			0.45733,
			-0.247059,
			0.764404,
			0.502282,
			0.500979,
			-0.121569,
			0.791292,
			0.591516,
			0.54112,
			0.00392157,
			0.817297,
			0.66895,
			0.578481,
			0.129412,
			0.842499,
			0.738308,
			0.613572,
			0.254902,
			0.866968,
			0.801687,
			0.646762,
			0.380392,
			0.890766,
			0.86041,
			0.678329,
			0.505882,
			0.913944,
			0.913944,
			0.711254,
			0.631373,
			0.936549,
			0.936549,
			0.79459,
			0.756863,
			0.958621,
			0.958621,
			0.869979,
			0.882353,
			0.980196,
			0.980196,
			0.939336,
			1,
			1,
			1,
			1
		]
	},
	{
		ColorSpace: "Lab",
		Name: "bone_Matlab",
		RGBPoints: [
			-1,
			0,
			0,
			0,
			-0.87451,
			0.054902,
			0.054902,
			0.075817,
			-0.74902,
			0.109804,
			0.109804,
			0.151634,
			-0.623529,
			0.164706,
			0.164706,
			0.227451,
			-0.498039,
			0.219608,
			0.219608,
			0.303268,
			-0.372549,
			0.27451,
			0.27451,
			0.379085,
			-0.247059,
			0.329412,
			0.329902,
			0.454412,
			-0.121569,
			0.384314,
			0.405719,
			0.509314,
			0.00392157,
			0.439216,
			0.481536,
			0.564216,
			0.129412,
			0.494118,
			0.557353,
			0.619118,
			0.254902,
			0.54902,
			0.63317,
			0.67402,
			0.380392,
			0.603922,
			0.708987,
			0.728922,
			0.505882,
			0.660294,
			0.783824,
			0.783824,
			0.631373,
			0.746569,
			0.838725,
			0.838725,
			0.756863,
			0.832843,
			0.893627,
			0.893627,
			0.882353,
			0.919118,
			0.948529,
			0.948529,
			1,
			1,
			1,
			1
		]
	},
	{
		ColorSpace: "Lab",
		Name: "gray_Matlab",
		RGBPoints: [
			-1,
			0,
			0,
			0,
			-0.87451,
			0.0627451,
			0.0627451,
			0.0627451,
			-0.74902,
			0.12549,
			0.12549,
			0.12549,
			-0.623529,
			0.188235,
			0.188235,
			0.188235,
			-0.498039,
			0.25098,
			0.25098,
			0.25098,
			-0.372549,
			0.313725,
			0.313725,
			0.313725,
			-0.247059,
			0.376471,
			0.376471,
			0.376471,
			-0.121569,
			0.439216,
			0.439216,
			0.439216,
			0.00392157,
			0.501961,
			0.501961,
			0.501961,
			0.129412,
			0.564706,
			0.564706,
			0.564706,
			0.254902,
			0.627451,
			0.627451,
			0.627451,
			0.380392,
			0.690196,
			0.690196,
			0.690196,
			0.505882,
			0.752941,
			0.752941,
			0.752941,
			0.631373,
			0.815686,
			0.815686,
			0.815686,
			0.756863,
			0.878431,
			0.878431,
			0.878431,
			0.882353,
			0.941176,
			0.941176,
			0.941176,
			1,
			1,
			1,
			1
		]
	},
	{
		ColorSpace: "Lab",
		Name: "Purples",
		RGBPoints: [
			-1,
			0.247059,
			0,
			0.490196,
			-0.87451,
			0.288397,
			0.07677,
			0.525629,
			-0.74902,
			0.32975,
			0.153587,
			0.561092,
			-0.623529,
			0.373057,
			0.236263,
			0.600461,
			-0.498039,
			0.416363,
			0.319,
			0.639923,
			-0.372549,
			0.459669,
			0.405613,
			0.685198,
			-0.247059,
			0.503345,
			0.491534,
			0.730058,
			-0.121569,
			0.562399,
			0.54862,
			0.757616,
			0.00392157,
			0.621453,
			0.606075,
			0.785544,
			0.129412,
			0.680508,
			0.674971,
			0.824914,
			0.254902,
			0.739562,
			0.743406,
			0.863899,
			0.380392,
			0.798616,
			0.800492,
			0.893426,
			0.505882,
			0.85684,
			0.856655,
			0.922491,
			0.631373,
			0.898178,
			0.894056,
			0.942176,
			0.756863,
			0.938654,
			0.930919,
			0.961646,
			0.882353,
			0.964245,
			0.958478,
			0.977393,
			1,
			0.988235,
			0.984314,
			0.992157
		]
	},
	{
		ColorSpace: "Lab",
		Name: "Blues",
		RGBPoints: [
			-1,
			0.031373,
			0.188235,
			0.419608,
			-0.87451,
			0.031373,
			0.253195,
			0.516063,
			-0.74902,
			0.031757,
			0.318139,
			0.612149,
			-0.623529,
			0.080969,
			0.38113,
			0.661361,
			-0.498039,
			0.130427,
			0.444152,
			0.710327,
			-0.372549,
			0.195386,
			0.509112,
			0.743791,
			-0.247059,
			0.260715,
			0.573841,
			0.777209,
			-0.121569,
			0.341423,
			0.628958,
			0.808704,
			0.00392157,
			0.422745,
			0.684075,
			0.839892,
			0.129412,
			0.523137,
			0.739193,
			0.861546,
			0.254902,
			0.622684,
			0.793464,
			0.883429,
			0.380392,
			0.701423,
			0.826928,
			0.910988,
			0.505882,
			0.778685,
			0.8603,
			0.937993,
			0.631373,
			0.825928,
			0.891795,
			0.953741,
			0.756863,
			0.87328,
			0.923291,
			0.969489,
			0.882353,
			0.922491,
			0.954787,
			0.985236,
			1,
			0.968627,
			0.984314,
			1
		]
	},
	{
		ColorSpace: "Lab",
		Name: "Greens",
		RGBPoints: [
			-1,
			0,
			0.266667,
			0.105882,
			-0.87451,
			0,
			0.347374,
			0.139346,
			-0.74902,
			0.000538,
			0.427912,
			0.172933,
			-0.623529,
			0.069435,
			0.486967,
			0.222145,
			-0.498039,
			0.138178,
			0.546082,
			0.271326,
			-0.372549,
			0.197232,
			0.609073,
			0.31857,
			-0.247059,
			0.257255,
			0.671742,
			0.365859,
			-0.121569,
			0.357647,
			0.720953,
			0.415071,
			0.00392157,
			0.45767,
			0.769919,
			0.465021,
			0.129412,
			0.546251,
			0.811257,
			0.537855,
			0.254902,
			0.634295,
			0.852211,
			0.610688,
			0.380392,
			0.709097,
			0.883706,
			0.683522,
			0.505882,
			0.78316,
			0.914833,
			0.755894,
			0.631373,
			0.842215,
			0.938454,
			0.818885,
			0.756863,
			0.899977,
			0.961538,
			0.880692,
			0.882353,
			0.935409,
			0.975317,
			0.92203,
			1,
			0.968627,
			0.988235,
			0.960784
		]
	},
	{
		ColorSpace: "Lab",
		Name: "PuBu",
		RGBPoints: [
			-1,
			0.301961,
			0,
			0.294118,
			-0.87451,
			0.404321,
			0.029527,
			0.390573,
			-0.74902,
			0.50599,
			0.059592,
			0.486782,
			-0.623529,
			0.519769,
			0.158016,
			0.551742,
			-0.498039,
			0.533456,
			0.256194,
			0.616301,
			-0.372549,
			0.54133,
			0.33887,
			0.655671,
			-0.247059,
			0.54902,
			0.421592,
			0.695087,
			-0.121569,
			0.54902,
			0.506236,
			0.736424,
			0.00392157,
			0.550127,
			0.590573,
			0.777701,
			0.129412,
			0.585559,
			0.665375,
			0.81707,
			0.254902,
			0.622145,
			0.739023,
			0.855825,
			0.380392,
			0.687105,
			0.784298,
			0.879446,
			0.505882,
			0.752065,
			0.829758,
			0.903253,
			0.631373,
			0.817024,
			0.87897,
			0.930811,
			0.756863,
			0.880907,
			0.927213,
			0.957832,
			0.882353,
			0.926182,
			0.958708,
			0.975548,
			1,
			0.968627,
			0.988235,
			0.992157
		]
	},
	{
		ColorSpace: "Lab",
		Name: "BuPu",
		RGBPoints: [
			-1,
			0.007843,
			0.219608,
			0.345098,
			-0.87451,
			0.01178,
			0.286536,
			0.449427,
			-0.74902,
			0.015702,
			0.35328,
			0.553479,
			-0.623529,
			0.01767,
			0.396586,
			0.622376,
			-0.498039,
			0.021115,
			0.4402,
			0.690688,
			-0.372549,
			0.11757,
			0.503191,
			0.722184,
			-0.247059,
			0.214625,
			0.565859,
			0.753633,
			-0.121569,
			0.336671,
			0.615071,
			0.78316,
			0.00392157,
			0.457978,
			0.663975,
			0.812503,
			0.129412,
			0.556401,
			0.703345,
			0.836125,
			0.254902,
			0.65421,
			0.742714,
			0.859669,
			0.380392,
			0.736886,
			0.782084,
			0.881323,
			0.505882,
			0.81827,
			0.821638,
			0.903068,
			0.631373,
			0.873387,
			0.864944,
			0.92669,
			0.756863,
			0.927536,
			0.907605,
			0.949988,
			0.882353,
			0.964937,
			0.9391,
			0.967705,
			1,
			1,
			0.968627,
			0.984314
		]
	},
	{
		ColorSpace: "Lab",
		Name: "BuGn",
		RGBPoints: [
			-1,
			0.031373,
			0.25098,
			0.505882,
			-0.87451,
			0.031373,
			0.329719,
			0.590527,
			-0.74902,
			0.031911,
			0.408397,
			0.674787,
			-0.623529,
			0.100807,
			0.479262,
			0.710219,
			-0.498039,
			0.169704,
			0.550219,
			0.745744,
			-0.372549,
			0.238601,
			0.62699,
			0.787082,
			-0.247059,
			0.307958,
			0.703114,
			0.826759,
			-0.121569,
			0.39654,
			0.752326,
			0.797232,
			0.00392157,
			0.485121,
			0.801046,
			0.767705,
			0.129412,
			0.573702,
			0.83451,
			0.738178,
			0.254902,
			0.661592,
			0.867743,
			0.711034,
			0.380392,
			0.732457,
			0.895302,
			0.74253,
			0.505882,
			0.801845,
			0.922307,
			0.774579,
			0.631373,
			0.841215,
			0.938055,
			0.817885,
			0.756863,
			0.880907,
			0.95391,
			0.861084,
			0.882353,
			0.926182,
			0.971626,
			0.902422,
			1,
			0.968627,
			0.988235,
			0.941176
		]
	},
	{
		ColorSpace: "Lab",
		Name: "GnBu",
		RGBPoints: [
			-1,
			0,
			0.266667,
			0.105882,
			-0.87451,
			0,
			0.347374,
			0.139346,
			-0.74902,
			0.000538,
			0.427912,
			0.172933,
			-0.623529,
			0.069435,
			0.486967,
			0.222145,
			-0.498039,
			0.138178,
			0.546175,
			0.272095,
			-0.372549,
			0.197232,
			0.615071,
			0.368551,
			-0.247059,
			0.256609,
			0.683276,
			0.464867,
			-0.121569,
			0.329443,
			0.722645,
			0.555417,
			0.00392157,
			0.403137,
			0.762138,
			0.645413,
			0.129412,
			0.503529,
			0.805444,
			0.718247,
			0.254902,
			0.603922,
			0.848597,
			0.790465,
			0.380392,
			0.704314,
			0.887966,
			0.847551,
			0.505882,
			0.802307,
			0.926321,
			0.903714,
			0.631373,
			0.851519,
			0.944037,
			0.941115,
			0.756863,
			0.899977,
			0.961538,
			0.976901,
			0.882353,
			0.935409,
			0.975317,
			0.984775,
			1,
			0.968627,
			0.988235,
			0.992157
		]
	},
	{
		ColorSpace: "Lab",
		Name: "GnBuPu",
		RGBPoints: [
			-1,
			0.003922,
			0.27451,
			0.211765,
			-0.87451,
			0.003922,
			0.349312,
			0.280661,
			-0.74902,
			0.003937,
			0.423852,
			0.349773,
			-0.623529,
			0.005905,
			0.46519,
			0.446228,
			-0.498039,
			0.009443,
			0.506344,
			0.542837,
			-0.372549,
			0.111803,
			0.535871,
			0.649135,
			-0.247059,
			0.214025,
			0.565859,
			0.753633,
			-0.121569,
			0.310481,
			0.615071,
			0.78316,
			0.00392157,
			0.407797,
			0.663975,
			0.812503,
			0.129412,
			0.531811,
			0.703345,
			0.836125,
			0.254902,
			0.65421,
			0.742714,
			0.859669,
			0.380392,
			0.736886,
			0.782084,
			0.881323,
			0.505882,
			0.81827,
			0.821176,
			0.902884,
			0.631373,
			0.873387,
			0.854641,
			0.922568,
			0.756863,
			0.927536,
			0.888535,
			0.942361,
			0.882353,
			0.964937,
			0.929873,
			0.964014,
			1,
			1,
			0.968627,
			0.984314
		]
	},
	{
		ColorSpace: "Lab",
		Name: "BuGnYl",
		RGBPoints: [
			-1,
			0.031373,
			0.113725,
			0.345098,
			-0.87451,
			0.088458,
			0.159,
			0.463206,
			-0.74902,
			0.145052,
			0.204567,
			0.5807,
			-0.623529,
			0.139146,
			0.287243,
			0.620069,
			-0.498039,
			0.13318,
			0.370196,
			0.659562,
			-0.372549,
			0.123337,
			0.470588,
			0.706805,
			-0.247059,
			0.115386,
			0.570335,
			0.753126,
			-0.121569,
			0.186251,
			0.643168,
			0.761,
			0.00392157,
			0.258716,
			0.71514,
			0.768074,
			0.129412,
			0.380761,
			0.760415,
			0.750358,
			0.254902,
			0.503576,
			0.806075,
			0.732795,
			0.380392,
			0.645306,
			0.861192,
			0.719016,
			0.505882,
			0.783899,
			0.91511,
			0.705606,
			0.631373,
			0.858701,
			0.944637,
			0.6997,
			0.756863,
			0.931349,
			0.973303,
			0.698424,
			0.882353,
			0.966782,
			0.987082,
			0.777163,
			1,
			1,
			1,
			0.85098
		]
	},
	{
		ColorSpace: "Lab",
		Name: "PuRd",
		RGBPoints: [
			-1,
			0.286275,
			0,
			0.415686,
			-0.87451,
			0.38273,
			0.001968,
			0.441276,
			-0.74902,
			0.479231,
			0.003922,
			0.466774,
			-0.623529,
			0.581592,
			0.003922,
			0.480554,
			-0.498039,
			0.683799,
			0.00549,
			0.494887,
			-0.372549,
			0.776317,
			0.105882,
			0.544098,
			-0.247059,
			0.867866,
			0.206321,
			0.592618,
			-0.121569,
			0.919047,
			0.308681,
			0.612303,
			0.00392157,
			0.968812,
			0.411226,
			0.632603,
			0.129412,
			0.974717,
			0.519493,
			0.671972,
			0.254902,
			0.980546,
			0.626451,
			0.71065,
			0.380392,
			0.984483,
			0.701253,
			0.732303,
			0.505882,
			0.988328,
			0.77504,
			0.755617,
			0.631373,
			0.990296,
			0.828189,
			0.812703,
			0.756863,
			0.992372,
			0.880907,
			0.869035,
			0.882353,
			0.996309,
			0.926182,
			0.912341,
			1,
			1,
			0.968627,
			0.952941
		]
	},
	{
		ColorSpace: "Lab",
		Name: "RdPu",
		RGBPoints: [
			-1,
			0.403922,
			0,
			0.121569,
			-0.87451,
			0.500377,
			0,
			0.192434,
			-0.74902,
			0.596909,
			0.000277,
			0.263037,
			-0.623529,
			0.703206,
			0.035709,
			0.300438,
			-0.498039,
			0.808612,
			0.071296,
			0.338854,
			-0.372549,
			0.857824,
			0.116571,
			0.441215,
			-0.247059,
			0.905513,
			0.163552,
			0.54293,
			-0.121569,
			0.889765,
			0.281661,
			0.617732,
			0.00392157,
			0.873156,
			0.39897,
			0.691611,
			0.129412,
			0.82985,
			0.491488,
			0.736886,
			0.254902,
			0.789081,
			0.583237,
			0.781853,
			0.380392,
			0.810734,
			0.656071,
			0.819254,
			0.505882,
			0.833126,
			0.729181,
			0.85684,
			0.631373,
			0.870527,
			0.80792,
			0.898178,
			0.756863,
			0.907605,
			0.884398,
			0.938331,
			0.882353,
			0.9391,
			0.921799,
			0.958016,
			1,
			0.968627,
			0.956863,
			0.976471
		]
	},
	{
		ColorSpace: "Lab",
		Name: "Oranges",
		RGBPoints: [
			-1,
			0.498039,
			0.152941,
			0.015686,
			-0.87451,
			0.57481,
			0.182468,
			0.013718,
			-0.74902,
			0.651765,
			0.212042,
			0.011734,
			-0.623529,
			0.752157,
			0.247474,
			0.007797,
			-0.498039,
			0.851719,
			0.283368,
			0.004475,
			-0.372549,
			0.898962,
			0.348328,
			0.039908,
			-0.247059,
			0.945652,
			0.413426,
			0.076401,
			-0.121569,
			0.969273,
			0.484291,
			0.157109,
			0.00392157,
			0.992157,
			0.554971,
			0.238185,
			0.129412,
			0.992157,
			0.619931,
			0.330704,
			0.254902,
			0.992157,
			0.684967,
			0.423837,
			0.380392,
			0.992157,
			0.751895,
			0.532103,
			0.505882,
			0.992249,
			0.817716,
			0.639354,
			0.631373,
			0.994218,
			0.861023,
			0.725967,
			0.756863,
			0.996186,
			0.903576,
			0.810965,
			0.882353,
			0.998155,
			0.933103,
			0.868051,
			1,
			1,
			0.960784,
			0.921569
		]
	},
	{
		ColorSpace: "Lab",
		Name: "Reds",
		RGBPoints: [
			-1,
			0.403922,
			0,
			0.05098,
			-0.87451,
			0.525967,
			0.029527,
			0.066728,
			-0.74902,
			0.647643,
			0.058962,
			0.082476,
			-0.623529,
			0.722445,
			0.076678,
			0.098224,
			-0.498039,
			0.797186,
			0.095194,
			0.114187,
			-0.372549,
			0.868051,
			0.164091,
			0.143714,
			-0.247059,
			0.937809,
			0.233541,
			0.173933,
			-0.121569,
			0.96143,
			0.326059,
			0.232987,
			0.00392157,
			0.984375,
			0.418147,
			0.292657,
			0.129412,
			0.986344,
			0.496886,
			0.371396,
			0.254902,
			0.988235,
			0.575702,
			0.450673,
			0.380392,
			0.988235,
			0.656409,
			0.543191,
			0.505882,
			0.98842,
			0.736747,
			0.635894,
			0.631373,
			0.992357,
			0.809581,
			0.732349,
			0.756863,
			0.996186,
			0.880692,
			0.826759,
			0.882353,
			0.998155,
			0.92203,
			0.885813,
			1,
			1,
			0.960784,
			0.941176
		]
	},
	{
		ColorSpace: "Lab",
		Name: "RdOr",
		RGBPoints: [
			-1,
			0.498039,
			0,
			0,
			-0.87451,
			0.6004,
			0,
			0,
			-0.74902,
			0.702514,
			0.000738,
			0.000477,
			-0.623529,
			0.773379,
			0.095225,
			0.061499,
			-0.498039,
			0.843875,
			0.189865,
			0.12283,
			-0.372549,
			0.891119,
			0.294195,
			0.203537,
			-0.247059,
			0.937855,
			0.397924,
			0.283137,
			-0.121569,
			0.963445,
			0.476663,
			0.316601,
			0.00392157,
			0.988297,
			0.555771,
			0.351665,
			0.129412,
			0.990265,
			0.646321,
			0.436309,
			0.254902,
			0.992157,
			0.735256,
			0.519646,
			0.380392,
			0.992157,
			0.784468,
			0.570827,
			0.505882,
			0.992249,
			0.833218,
			0.623483,
			0.631373,
			0.994218,
			0.872587,
			0.706159,
			0.756863,
			0.996186,
			0.911419,
			0.788189,
			0.882353,
			0.998155,
			0.940946,
			0.859054,
			1,
			1,
			0.968627,
			0.92549
		]
	},
	{
		ColorSpace: "Lab",
		Name: "BrOrYl",
		RGBPoints: [
			-1,
			0.4,
			0.145098,
			0.023529,
			-0.87451,
			0.500392,
			0.174625,
			0.019592,
			-0.74902,
			0.600784,
			0.204291,
			0.015656,
			-0.623529,
			0.701176,
			0.251534,
			0.011719,
			-0.498039,
			0.800984,
			0.299146,
			0.008397,
			-0.372549,
			0.863975,
			0.370012,
			0.043829,
			-0.247059,
			0.926321,
			0.441107,
			0.0794,
			-0.121569,
			0.961753,
			0.521815,
			0.120738,
			0.00392157,
			0.996078,
			0.602645,
			0.163122,
			0.129412,
			0.996078,
			0.68729,
			0.237924,
			0.254902,
			0.996078,
			0.771011,
			0.314879,
			0.380392,
			0.996078,
			0.832034,
			0.444798,
			0.505882,
			0.996171,
			0.892042,
			0.572595,
			0.631373,
			0.998139,
			0.931411,
			0.65724,
			0.756863,
			1,
			0.969489,
			0.741669,
			0.882353,
			1,
			0.985236,
			0.822376,
			1,
			1,
			1,
			0.898039
		]
	},
	{
		ColorSpace: "Lab",
		Name: "RdOrYl",
		RGBPoints: [
			-1,
			0.501961,
			0,
			0.14902,
			-0.87451,
			0.622038,
			0,
			0.14902,
			-0.74902,
			0.741761,
			0.0004,
			0.148866,
			-0.623529,
			0.816563,
			0.05158,
			0.129181,
			-0.498039,
			0.890965,
			0.10356,
			0.110235,
			-0.372549,
			0.940177,
			0.205921,
			0.137793,
			-0.247059,
			0.988281,
			0.308789,
			0.165536,
			-0.121569,
			0.99025,
			0.432803,
			0.200969,
			0.00392157,
			0.992218,
			0.555217,
			0.236278,
			0.129412,
			0.994187,
			0.628051,
			0.267774,
			0.254902,
			0.996078,
			0.701038,
			0.301269,
			0.380392,
			0.996078,
			0.777809,
			0.383945,
			0.505882,
			0.996171,
			0.852826,
			0.466621,
			0.631373,
			0.998139,
			0.892195,
			0.549296,
			0.756863,
			1,
			0.931349,
			0.632188,
			0.882353,
			1,
			0.966782,
			0.7188,
			1,
			1,
			1,
			0.8
		]
	},
	{
		ColorSpace: "Lab",
		Name: "CIELab_blue2red",
		RGBPoints: [
			-1,
			0,
			0.6,
			0.74902,
			1,
			0.76863,
			0.46667,
			0.34118
		]
	},
	{
		ColorSpace: "Lab",
		Name: "blue2yellow",
		RGBPoints: [
			-1,
			0,
			0,
			1,
			0,
			0.5,
			0.5,
			0.5,
			1,
			1,
			1,
			0
		]
	},
	{
		ColorSpace: "Lab",
		Name: "erdc_blue2gold",
		RGBPoints: [
			-1,
			0.175119,
			0.0438468,
			1,
			-0.874016,
			0.22383,
			0.159771,
			0.94557,
			-0.748031,
			0.27254,
			0.233611,
			0.891216,
			-0.622047,
			0.321251,
			0.296526,
			0.836857,
			-0.496063,
			0.369962,
			0.354296,
			0.782359,
			-0.370079,
			0.418672,
			0.409139,
			0.72754,
			-0.244094,
			0.467383,
			0.462152,
			0.672148,
			-0.11811,
			0.51609,
			0.51396,
			0.615825,
			0.00787402,
			0.572863,
			0.55452,
			0.559172,
			0.133858,
			0.630269,
			0.593822,
			0.517729,
			0.259843,
			0.689588,
			0.624668,
			0.47446,
			0.385827,
			0.745394,
			0.656113,
			0.428638,
			0.511811,
			0.798624,
			0.688104,
			0.379105,
			0.637795,
			0.849926,
			0.720593,
			0.323834,
			0.76378,
			0.899765,
			0.753543,
			0.258657,
			0.889764,
			0.948487,
			0.78692,
			0.171778,
			1,
			0.990413,
			0.816451,
			0.00729848
		]
	},
	{
		ColorSpace: "Lab",
		Name: "erdc_blue2yellow",
		RGBPoints: [
			-1,
			0.0830122,
			0,
			0.495617,
			-0.87451,
			0.141973,
			0.0551288,
			0.57363,
			-0.74902,
			0.193048,
			0.110258,
			0.604561,
			-0.623529,
			0.234231,
			0.165386,
			0.57643,
			-0.498039,
			0.275413,
			0.220515,
			0.548299,
			-0.372549,
			0.316596,
			0.275644,
			0.520169,
			-0.247059,
			0.357778,
			0.330773,
			0.492038,
			-0.121569,
			0.398961,
			0.385901,
			0.463908,
			0.00392157,
			0.449929,
			0.438487,
			0.426815,
			0.129412,
			0.511572,
			0.488299,
			0.379944,
			0.254902,
			0.581222,
			0.53603,
			0.325741,
			0.380392,
			0.650871,
			0.583761,
			0.271538,
			0.505882,
			0.720521,
			0.631493,
			0.217335,
			0.631373,
			0.79017,
			0.679224,
			0.163132,
			0.756863,
			0.85982,
			0.726955,
			0.108929,
			0.882353,
			0.910254,
			0.774159,
			0.14112,
			1,
			0.927513,
			0.81759,
			0.306289
		]
	},
	{
		ColorSpace: "Lab",
		Name: "erdc_cyan2orange",
		RGBPoints: [
			-1,
			0.0471513,
			0.213874,
			0.414329,
			-0.87451,
			0.0674702,
			0.256648,
			0.439027,
			-0.74902,
			0.0959957,
			0.299331,
			0.462089,
			-0.623529,
			0.132428,
			0.341872,
			0.483212,
			-0.498039,
			0.188743,
			0.38277,
			0.500597,
			-0.372549,
			0.268511,
			0.420229,
			0.512179,
			-0.247059,
			0.352945,
			0.455602,
			0.519101,
			-0.121569,
			0.43893,
			0.489368,
			0.521538,
			0.00392157,
			0.522445,
			0.522495,
			0.522436,
			0.129412,
			0.600089,
			0.555682,
			0.53205,
			0.254902,
			0.67988,
			0.587981,
			0.539163,
			0.380392,
			0.761011,
			0.619586,
			0.544439,
			0.505882,
			0.84278,
			0.650741,
			0.548567,
			0.631373,
			0.910713,
			0.687347,
			0.557822,
			0.756863,
			0.952232,
			0.734972,
			0.577775,
			0.882353,
			0.975642,
			0.789858,
			0.604868,
			1,
			0.990752,
			0.843643,
			0.632857
		]
	},
	{
		ColorSpace: "Lab",
		Name: "erdc_purple2green",
		RGBPoints: [
			-1,
			0.235006,
			0.0483128,
			0.530899,
			-0.87451,
			0.302968,
			0.108419,
			0.552391,
			-0.74902,
			0.360241,
			0.166059,
			0.569502,
			-0.623529,
			0.406746,
			0.226782,
			0.579373,
			-0.498039,
			0.444073,
			0.28964,
			0.582094,
			-0.372549,
			0.473648,
			0.353774,
			0.577947,
			-0.247059,
			0.497636,
			0.418154,
			0.567911,
			-0.121569,
			0.519086,
			0.481741,
			0.553968,
			0.00392157,
			0.542884,
			0.542914,
			0.542875,
			0.129412,
			0.566303,
			0.603989,
			0.527499,
			0.254902,
			0.595218,
			0.662965,
			0.516857,
			0.380392,
			0.628641,
			0.720701,
			0.510673,
			0.505882,
			0.665373,
			0.777849,
			0.508165,
			0.631373,
			0.704182,
			0.834921,
			0.508303,
			0.756863,
			0.743846,
			0.892328,
			0.50999,
			0.882353,
			0.783158,
			0.950422,
			0.512181,
			1,
			0.818617,
			1,
			0.513888
		]
	},
	{
		ColorSpace: "Lab",
		Name: "erdc_purple2green_dark",
		RGBPoints: [
			-1,
			0.107656,
			0,
			0.428682,
			-0.87451,
			0.1924,
			0,
			0.449799,
			-0.74902,
			0.255118,
			0.0648939,
			0.466726,
			-0.623529,
			0.304256,
			0.133066,
			0.476703,
			-0.498039,
			0.343202,
			0.19716,
			0.479793,
			-0.372549,
			0.373876,
			0.260353,
			0.476241,
			-0.247059,
			0.398497,
			0.322872,
			0.466953,
			-0.121569,
			0.420016,
			0.384252,
			0.453785,
			0.00392157,
			0.44319,
			0.443216,
			0.443186,
			0.129412,
			0.465553,
			0.502139,
			0.428233,
			0.254902,
			0.492959,
			0.559151,
			0.417591,
			0.380392,
			0.524654,
			0.615092,
			0.411016,
			0.505882,
			0.55959,
			0.670583,
			0.40779,
			0.631373,
			0.596614,
			0.726102,
			0.406948,
			0.756863,
			0.634544,
			0.782032,
			0.407439,
			0.882353,
			0.672183,
			0.838703,
			0.408237,
			1,
			0.706131,
			0.892759,
			0.408452
		]
	},
	{
		ColorSpace: "Lab",
		Name: "coolwarm",
		RGBPoints: [
			-1,
			0.229806,
			0.298718,
			0.753683,
			-0.875,
			0.303869,
			0.406535,
			0.844959,
			-0.75,
			0.383013,
			0.509419,
			0.917388,
			-0.625,
			0.466667,
			0.604563,
			0.968155,
			-0.5,
			0.552953,
			0.688929,
			0.995376,
			-0.375,
			0.639176,
			0.7596,
			0.998151,
			-0.25,
			0.722193,
			0.813953,
			0.976575,
			-0.125,
			0.798692,
			0.849786,
			0.931689,
			0,
			0.865395,
			0.86541,
			0.865396,
			0.125,
			0.924128,
			0.827385,
			0.774508,
			0.25,
			0.958853,
			0.769768,
			0.678008,
			0.375,
			0.969954,
			0.694267,
			0.579375,
			0.5,
			0.958003,
			0.602842,
			0.481776,
			0.625,
			0.923945,
			0.497309,
			0.38797,
			0.75,
			0.869187,
			0.378313,
			0.300267,
			0.875,
			0.795632,
			0.241284,
			0.220526,
			1,
			0.705673,
			0.0155562,
			0.150233
		]
	},
	{
		ColorSpace: "Lab",
		Name: "BuRd",
		RGBPoints: [
			-1,
			0.019608,
			0.188235,
			0.380392,
			-0.87451,
			0.088504,
			0.321107,
			0.564937,
			-0.74902,
			0.163399,
			0.444983,
			0.697501,
			-0.623529,
			0.247059,
			0.555709,
			0.754095,
			-0.498039,
			0.420684,
			0.676432,
			0.818685,
			-0.372549,
			0.606459,
			0.789773,
			0.880277,
			-0.247059,
			0.761476,
			0.868512,
			0.924567,
			-0.121569,
			0.878047,
			0.925721,
			0.951942,
			0.00392157,
			0.969089,
			0.966474,
			0.964937,
			0.129412,
			0.983852,
			0.897578,
			0.846828,
			0.254902,
			0.982468,
			0.800692,
			0.706113,
			0.380392,
			0.960323,
			0.66782,
			0.536332,
			0.505882,
			0.894579,
			0.503806,
			0.399769,
			0.631373,
			0.81707,
			0.33218,
			0.281046,
			0.756863,
			0.728489,
			0.155017,
			0.197386,
			0.882353,
			0.576932,
			0.055363,
			0.14925,
			1,
			0.403922,
			0,
			0.121569
		]
	},
	{
		ColorSpace: "Lab",
		Name: "Spectral_lowBlue",
		RGBPoints: [
			-1,
			0.368627,
			0.309804,
			0.635294,
			-0.87451,
			0.260361,
			0.450058,
			0.70173,
			-0.74902,
			0.248058,
			0.591311,
			0.717186,
			-0.623529,
			0.376009,
			0.734025,
			0.658132,
			-0.498039,
			0.537947,
			0.814764,
			0.64506,
			-0.372549,
			0.702345,
			0.879585,
			0.636678,
			-0.247059,
			0.84752,
			0.938639,
			0.607151,
			-0.121569,
			0.940408,
			0.976163,
			0.656055,
			0.00392157,
			0.999923,
			0.997616,
			0.745021,
			0.129412,
			0.997463,
			0.921338,
			0.61707,
			0.254902,
			0.995002,
			0.824606,
			0.499885,
			0.380392,
			0.992541,
			0.701576,
			0.39654,
			0.505882,
			0.973472,
			0.547405,
			0.318108,
			0.631373,
			0.937793,
			0.398539,
			0.270127,
			0.756863,
			0.861515,
			0.282891,
			0.299654,
			0.882353,
			0.746482,
			0.144637,
			0.288812,
			1,
			0.619608,
			0.003922,
			0.258824
		]
	},
	{
		ColorSpace: "Lab",
		Name: "GnRP",
		RGBPoints: [
			-1,
			0,
			0.266667,
			0.105882,
			-0.87451,
			0.066436,
			0.394617,
			0.174779,
			-0.74902,
			0.168858,
			0.524567,
			0.25767,
			-0.623529,
			0.323875,
			0.657439,
			0.361015,
			-0.498039,
			0.504883,
			0.772318,
			0.506344,
			-0.372549,
			0.678431,
			0.870127,
			0.654902,
			-0.247059,
			0.803922,
			0.921799,
			0.780392,
			-0.121569,
			0.897116,
			0.951942,
			0.882814,
			0.00392157,
			0.967397,
			0.965936,
			0.967474,
			0.129412,
			0.928028,
			0.879815,
			0.930565,
			0.254902,
			0.866052,
			0.780777,
			0.882891,
			0.380392,
			0.77501,
			0.665129,
			0.821376,
			0.505882,
			0.675663,
			0.537024,
			0.737024,
			0.631373,
			0.57847,
			0.396155,
			0.645982,
			0.756863,
			0.492349,
			0.223914,
			0.547559,
			0.882353,
			0.375548,
			0.096886,
			0.423299,
			1,
			0.25098,
			0,
			0.294118
		]
	},
	{
		ColorSpace: "Lab",
		Name: "GYPi",
		RGBPoints: [
			-1,
			0.152941,
			0.392157,
			0.098039,
			-0.87451,
			0.246444,
			0.505344,
			0.117724,
			-0.74902,
			0.351942,
			0.614533,
			0.161399,
			-0.623529,
			0.474971,
			0.717878,
			0.240138,
			-0.498039,
			0.611995,
			0.811226,
			0.392849,
			-0.372549,
			0.746328,
			0.893118,
			0.565321,
			-0.247059,
			0.859516,
			0.94233,
			0.747405,
			-0.121569,
			0.928105,
			0.96386,
			0.875663,
			0.00392157,
			0.969089,
			0.966859,
			0.968012,
			0.129412,
			0.983852,
			0.910265,
			0.948328,
			0.254902,
			0.979239,
			0.833218,
			0.914648,
			0.380392,
			0.949712,
			0.729873,
			0.862976,
			0.505882,
			0.905652,
			0.58293,
			0.763552,
			0.631373,
			0.85521,
			0.410073,
			0.652211,
			0.756863,
			0.793695,
			0.183699,
			0.531642,
			0.882353,
			0.683737,
			0.063899,
			0.420761,
			1,
			0.556863,
			0.003922,
			0.321569
		]
	},
	{
		ColorSpace: "Lab",
		Name: "GnYlRd",
		RGBPoints: [
			-1,
			0,
			0.407843,
			0.215686,
			-0.87451,
			0.063975,
			0.525952,
			0.277201,
			-0.74902,
			0.177932,
			0.633064,
			0.332718,
			-0.623529,
			0.364937,
			0.724106,
			0.379469,
			-0.498039,
			0.527951,
			0.797155,
			0.40223,
			-0.372549,
			0.678431,
			0.862822,
			0.433449,
			-0.247059,
			0.803922,
			0.916955,
			0.514648,
			-0.121569,
			0.909419,
			0.961861,
			0.625067,
			0.00392157,
			0.999923,
			0.997616,
			0.745021,
			0.129412,
			0.997463,
			0.921338,
			0.61707,
			0.254902,
			0.995002,
			0.824606,
			0.499885,
			0.380392,
			0.992541,
			0.701576,
			0.39654,
			0.505882,
			0.973472,
			0.547405,
			0.318108,
			0.631373,
			0.939023,
			0.389927,
			0.245521,
			0.756863,
			0.867666,
			0.239831,
			0.176624,
			0.882353,
			0.762399,
			0.110727,
			0.151326,
			1,
			0.647059,
			0,
			0.14902
		]
	},
	{
		ColorSpace: "Lab",
		Name: "GBBr",
		RGBPoints: [
			-1,
			0,
			0.235294,
			0.188235,
			-0.87451,
			0.002461,
			0.338639,
			0.301423,
			-0.74902,
			0.055902,
			0.448981,
			0.417609,
			-0.623529,
			0.183852,
			0.56955,
			0.538178,
			-0.498039,
			0.357785,
			0.700115,
			0.660746,
			-0.372549,
			0.540177,
			0.819531,
			0.77624,
			-0.247059,
			0.714879,
			0.890888,
			0.864821,
			-0.121569,
			0.851134,
			0.934564,
			0.922645,
			0.00392157,
			0.960861,
			0.959785,
			0.95694,
			0.129412,
			0.963322,
			0.927797,
			0.83391,
			0.254902,
			0.939946,
			0.868897,
			0.68935,
			0.380392,
			0.883353,
			0.775394,
			0.517109,
			0.505882,
			0.808074,
			0.625836,
			0.324106,
			0.631373,
			0.717647,
			0.476355,
			0.15494,
			0.756863,
			0.592157,
			0.358247,
			0.06882,
			0.882353,
			0.458593,
			0.26436,
			0.031142,
			1,
			0.329412,
			0.188235,
			0.019608
		]
	},
	{
		ColorSpace: "Lab",
		Name: "PuOr",
		RGBPoints: [
			-1,
			0.498039,
			0.231373,
			0.031373,
			-0.87451,
			0.62599,
			0.30273,
			0.026451,
			-0.74902,
			0.746943,
			0.387082,
			0.037524,
			-0.623529,
			0.85767,
			0.490427,
			0.071972,
			-0.498039,
			0.936409,
			0.617762,
			0.236371,
			-0.372549,
			0.992695,
			0.743099,
			0.43291,
			-0.247059,
			0.995156,
			0.841523,
			0.63714,
			-0.121569,
			0.985313,
			0.913802,
			0.813687,
			0.00392157,
			0.966244,
			0.966398,
			0.967705,
			0.129412,
			0.889965,
			0.89504,
			0.938178,
			0.254902,
			0.806151,
			0.804306,
			0.894656,
			0.380392,
			0.712649,
			0.688658,
			0.833141,
			0.505882,
			0.594233,
			0.554325,
			0.744637,
			0.631373,
			0.474894,
			0.404229,
			0.652364,
			0.756863,
			0.366628,
			0.217224,
			0.563783,
			0.882353,
			0.266436,
			0.089965,
			0.434833,
			1,
			0.176471,
			0,
			0.294118
		]
	},
	{
		ColorSpace: "Lab",
		Name: "PRGn",
		RGBPoints: [
			-1,
			0.25098,
			0,
			0.294118,
			-0.87451,
			0.383852,
			0.103345,
			0.431911,
			-0.74902,
			0.497732,
			0.234679,
			0.55371,
			-0.623529,
			0.583852,
			0.40692,
			0.652134,
			-0.498039,
			0.681968,
			0.545175,
			0.742561,
			-0.372549,
			0.7807,
			0.672357,
			0.825221,
			-0.247059,
			0.871742,
			0.788005,
			0.886736,
			-0.121569,
			0.930488,
			0.885198,
			0.932872,
			0.00392157,
			0.966321,
			0.968089,
			0.965859,
			0.129412,
			0.892503,
			0.950865,
			0.877278,
			0.254902,
			0.796078,
			0.91857,
			0.772549,
			0.380392,
			0.670588,
			0.866897,
			0.647059,
			0.505882,
			0.493195,
			0.765398,
			0.496655,
			0.631373,
			0.314187,
			0.649135,
			0.354556,
			0.756863,
			0.15917,
			0.516263,
			0.251211,
			0.882353,
			0.062284,
			0.386621,
			0.170473,
			1,
			0,
			0.266667,
			0.105882
		]
	},
	{
		ColorSpace: "Lab",
		Name: "PiYG",
		RGBPoints: [
			-1,
			0.556863,
			0.003922,
			0.321569,
			-0.87451,
			0.692195,
			0.067897,
			0.427374,
			-0.74902,
			0.797539,
			0.197847,
			0.539177,
			-0.623529,
			0.859054,
			0.424221,
			0.659746,
			-0.498039,
			0.908574,
			0.592618,
			0.770319,
			-0.372549,
			0.951557,
			0.736332,
			0.866205,
			-0.247059,
			0.981084,
			0.839677,
			0.917878,
			-0.121569,
			0.98293,
			0.913802,
			0.949558,
			0.00392157,
			0.96732,
			0.968474,
			0.965629,
			0.129412,
			0.92549,
			0.963552,
			0.869666,
			0.254902,
			0.852441,
			0.939254,
			0.736025,
			0.380392,
			0.739254,
			0.890042,
			0.553941,
			0.505882,
			0.60323,
			0.805536,
			0.382238,
			0.631373,
			0.467282,
			0.711419,
			0.235217,
			0.756863,
			0.344252,
			0.608074,
			0.156478,
			0.882353,
			0.2406,
			0.49827,
			0.116494,
			1,
			0.152941,
			0.392157,
			0.098039
		]
	},
	{
		ColorSpace: "Lab",
		Name: "OrPu",
		RGBPoints: [
			-1,
			0.176471,
			0,
			0.294118,
			-0.87451,
			0.272434,
			0.095963,
			0.444214,
			-0.74902,
			0.373395,
			0.228912,
			0.56932,
			-0.623529,
			0.481661,
			0.415917,
			0.657901,
			-0.498039,
			0.601922,
			0.562937,
			0.750481,
			-0.372549,
			0.718493,
			0.695886,
			0.836986,
			-0.247059,
			0.811995,
			0.811534,
			0.898501,
			-0.121569,
			0.894733,
			0.8995,
			0.940023,
			0.00392157,
			0.969166,
			0.966859,
			0.963629,
			0.129412,
			0.98639,
			0.910265,
			0.803691,
			0.254902,
			0.995002,
			0.835371,
			0.624375,
			0.380392,
			0.992541,
			0.736947,
			0.420146,
			0.505882,
			0.931949,
			0.609458,
			0.224221,
			0.631373,
			0.85075,
			0.483968,
			0.069819,
			0.756863,
			0.740023,
			0.380623,
			0.035371,
			0.882353,
			0.617993,
			0.29827,
			0.026759,
			1,
			0.498039,
			0.231373,
			0.031373
		]
	},
	{
		ColorSpace: "Lab",
		Name: "BrBG",
		RGBPoints: [
			-1,
			0.329412,
			0.188235,
			0.019608,
			-0.87451,
			0.467205,
			0.269435,
			0.031911,
			-0.74902,
			0.6,
			0.365629,
			0.074202,
			-0.623529,
			0.72549,
			0.483737,
			0.160323,
			-0.498039,
			0.812995,
			0.635832,
			0.336409,
			-0.372549,
			0.88689,
			0.781238,
			0.527874,
			-0.247059,
			0.943483,
			0.87474,
			0.700115,
			-0.121569,
			0.963168,
			0.929796,
			0.841599,
			0.00392157,
			0.957247,
			0.959938,
			0.959554,
			0.129412,
			0.84406,
			0.932872,
			0.920185,
			0.254902,
			0.70396,
			0.886428,
			0.859285,
			0.380392,
			0.529258,
			0.815071,
			0.770704,
			0.505882,
			0.346251,
			0.691811,
			0.653057,
			0.631373,
			0.175855,
			0.562015,
			0.530642,
			0.756863,
			0.047905,
			0.441446,
			0.410073,
			0.882353,
			0.002307,
			0.33218,
			0.294348,
			1,
			0,
			0.235294,
			0.188235
		]
	},
	{
		ColorSpace: "Lab",
		Name: "GyRd",
		RGBPoints: [
			-1,
			0.101961,
			0.101961,
			0.101961,
			-0.87451,
			0.227451,
			0.227451,
			0.227451,
			-0.74902,
			0.359939,
			0.359939,
			0.359939,
			-0.623529,
			0.502653,
			0.502653,
			0.502653,
			-0.498039,
			0.631373,
			0.631373,
			0.631373,
			-0.372549,
			0.749865,
			0.749865,
			0.749865,
			-0.247059,
			0.843368,
			0.843368,
			0.843368,
			-0.121569,
			0.926105,
			0.926105,
			0.926105,
			0.00392157,
			0.999846,
			0.997232,
			0.995694,
			0.129412,
			0.994925,
			0.908651,
			0.857901,
			0.254902,
			0.982468,
			0.800692,
			0.706113,
			0.380392,
			0.960323,
			0.66782,
			0.536332,
			0.505882,
			0.894579,
			0.503806,
			0.399769,
			0.631373,
			0.81707,
			0.33218,
			0.281046,
			0.756863,
			0.728489,
			0.155017,
			0.197386,
			0.882353,
			0.576932,
			0.055363,
			0.14925,
			1,
			0.403922,
			0,
			0.121569
		]
	},
	{
		ColorSpace: "Lab",
		Name: "erdc_divHi_purpleGreen",
		RGBPoints: [
			-1,
			0.297553,
			0,
			0.489074,
			-0.87451,
			0.40259,
			0.151146,
			0.567754,
			-0.74902,
			0.516038,
			0.284843,
			0.658231,
			-0.623529,
			0.629783,
			0.423646,
			0.750938,
			-0.498039,
			0.735198,
			0.563697,
			0.835956,
			-0.372549,
			0.82408,
			0.695541,
			0.903582,
			-0.247059,
			0.889091,
			0.807454,
			0.944862,
			-0.121569,
			0.92334,
			0.886917,
			0.951839,
			0.00392157,
			0.921045,
			0.921084,
			0.921003,
			0.129412,
			0.877324,
			0.907455,
			0.845381,
			0.254902,
			0.797649,
			0.849713,
			0.734695,
			0.380392,
			0.691646,
			0.75964,
			0.600532,
			0.505882,
			0.568981,
			0.649159,
			0.453807,
			0.631373,
			0.438945,
			0.529756,
			0.304259,
			0.756863,
			0.30973,
			0.412001,
			0.158303,
			0.882353,
			0.187078,
			0.305111,
			0.00251458,
			1,
			0.101655,
			0.220836,
			0
		]
	},
	{
		ColorSpace: "Lab",
		Name: "erdc_divHi_purpleGreen_dim",
		RGBPoints: [
			-1,
			0.404088,
			0.131038,
			0.592767,
			-0.87451,
			0.486469,
			0.230957,
			0.651243,
			-0.74902,
			0.575165,
			0.339335,
			0.717723,
			-0.623529,
			0.662741,
			0.454332,
			0.784263,
			-0.498039,
			0.742071,
			0.570213,
			0.842918,
			-0.372549,
			0.806935,
			0.678992,
			0.886227,
			-0.247059,
			0.852219,
			0.771315,
			0.90763,
			-0.121569,
			0.873345,
			0.837327,
			0.901572,
			0.00392157,
			0.866783,
			0.86682,
			0.866745,
			0.129412,
			0.82839,
			0.858225,
			0.796812,
			0.254902,
			0.762578,
			0.814287,
			0.700202,
			0.380392,
			0.676429,
			0.744229,
			0.585735,
			0.505882,
			0.577033,
			0.65732,
			0.461526,
			0.631373,
			0.47128,
			0.562476,
			0.33476,
			0.756863,
			0.365461,
			0.467957,
			0.21076,
			0.882353,
			0.264758,
			0.381138,
			0.0878313,
			1,
			0.182591,
			0.312249,
			0
		]
	},
	{
		ColorSpace: "Lab",
		Name: "erdc_divLow_icePeach",
		RGBPoints: [
			-1,
			0.480048,
			0.817441,
			0.998056,
			-0.87451,
			0.425898,
			0.726921,
			0.883187,
			-0.74902,
			0.366682,
			0.629445,
			0.761936,
			-0.623529,
			0.308756,
			0.531002,
			0.640217,
			-0.498039,
			0.258021,
			0.43705,
			0.523433,
			-0.372549,
			0.219244,
			0.352381,
			0.416348,
			-0.247059,
			0.195127,
			0.281032,
			0.322979,
			-0.121569,
			0.186286,
			0.22627,
			0.246525,
			0.00392157,
			0.192352,
			0.19236,
			0.192364,
			0.129412,
			0.255927,
			0.214469,
			0.191756,
			0.254902,
			0.340459,
			0.254426,
			0.206666,
			0.380392,
			0.444655,
			0.309315,
			0.234029,
			0.505882,
			0.565353,
			0.376004,
			0.270969,
			0.631373,
			0.697917,
			0.450748,
			0.314293,
			0.756863,
			0.836657,
			0.529064,
			0.360227,
			0.882353,
			0.972695,
			0.614884,
			0.413123,
			1,
			1,
			0.705904,
			0.472699
		]
	},
	{
		ColorSpace: "Lab",
		Name: "erdc_divLow_purpleGreen",
		RGBPoints: [
			-1,
			0.956034,
			0.666487,
			0.952663,
			-0.87451,
			0.874457,
			0.572698,
			0.936352,
			-0.74902,
			0.753465,
			0.488253,
			0.909063,
			-0.623529,
			0.63309,
			0.413507,
			0.763833,
			-0.498039,
			0.514491,
			0.345878,
			0.620015,
			-0.372549,
			0.405008,
			0.288141,
			0.484376,
			-0.247059,
			0.311388,
			0.241986,
			0.363556,
			-0.121569,
			0.238722,
			0.209044,
			0.263449,
			0.00392157,
			0.192352,
			0.192366,
			0.192362,
			0.129412,
			0.200379,
			0.233201,
			0.168618,
			0.254902,
			0.230151,
			0.291737,
			0.165227,
			0.380392,
			0.279481,
			0.366076,
			0.178607,
			0.505882,
			0.344927,
			0.453267,
			0.205703,
			0.631373,
			0.421554,
			0.549449,
			0.242643,
			0.756863,
			0.503334,
			0.649999,
			0.284377,
			0.882353,
			0.583497,
			0.749672,
			0.324969,
			1,
			0.650705,
			0.837228,
			0.356264
		]
	},
	{
		ColorSpace: "Lab",
		Name: "Haze_green",
		RGBPoints: [
			-1,
			1,
			0.835294,
			0.886275,
			-0.87451,
			0.937255,
			0.756863,
			0.870443,
			-0.74902,
			0.875817,
			0.666376,
			0.857807,
			-0.623529,
			0.778359,
			0.583007,
			0.808134,
			-0.498039,
			0.676253,
			0.494118,
			0.745098,
			-0.372549,
			0.561365,
			0.390123,
			0.682353,
			-0.247059,
			0.438344,
			0.262745,
			0.621496,
			-0.121569,
			0.321133,
			0.141031,
			0.558751,
			0.00392157,
			0.203922,
			0.0217865,
			0.495861,
			0.129412,
			0.265505,
			0.129412,
			0.433261,
			0.254902,
			0.311692,
			0.255338,
			0.37008,
			0.380392,
			0.356282,
			0.377342,
			0.310821,
			0.505882,
			0.39971,
			0.488889,
			0.258243,
			0.631373,
			0.442556,
			0.604357,
			0.205519,
			0.756863,
			0.48671,
			0.71968,
			0.152941,
			0.882353,
			0.529847,
			0.830356,
			0.100944,
			1,
			0.572549,
			0.933333,
			0.054902
		]
	},
	{
		ColorSpace: "Lab",
		Name: "Haze_lime",
		RGBPoints: [
			-1,
			0.704034,
			0.784196,
			1,
			-0.87451,
			0.633111,
			0.691418,
			0.956078,
			-0.74902,
			0.564021,
			0.600606,
			0.912157,
			-0.623529,
			0.496827,
			0.51189,
			0.868235,
			-0.498039,
			0.43157,
			0.425416,
			0.824314,
			-0.372549,
			0.368248,
			0.341347,
			0.780392,
			-0.247059,
			0.306767,
			0.259855,
			0.736471,
			-0.121569,
			0.246862,
			0.181069,
			0.692549,
			0.00392157,
			0.191619,
			0.109542,
			0.648627,
			0.129412,
			0.257404,
			0.194031,
			0.604706,
			0.254902,
			0.321794,
			0.278775,
			0.560784,
			0.380392,
			0.387909,
			0.364617,
			0.516863,
			0.505882,
			0.456569,
			0.451881,
			0.472941,
			0.631373,
			0.527424,
			0.540773,
			0.42902,
			0.756863,
			0.599759,
			0.631427,
			0.385098,
			0.882353,
			0.673065,
			0.723898,
			0.341176,
			1,
			0.742751,
			0.812252,
			0.3
		]
	},
	{
		ColorSpace: "RGB",
		Name: "Haze",
		RGBPoints: [
			-1,
			1,
			0.835294,
			0.996078,
			-0.00392157,
			0.023529,
			0.141176,
			0.498039,
			0.00392157,
			0.015686,
			0.137255,
			0.494118,
			1,
			0.984314,
			0.764706,
			0
		]
	},
	{
		ColorSpace: "Lab",
		Name: "Haze_cyan",
		RGBPoints: [
			-1,
			0.956863,
			1,
			0.835294,
			-0.87451,
			0.933188,
			0.921714,
			0.760784,
			-0.74902,
			0.870588,
			0.803486,
			0.671605,
			-0.623529,
			0.807843,
			0.684096,
			0.583297,
			-0.498039,
			0.745098,
			0.569208,
			0.494118,
			-0.372549,
			0.682353,
			0.437763,
			0.390123,
			-0.247059,
			0.621496,
			0.288163,
			0.262745,
			-0.121569,
			0.558751,
			0.144517,
			0.141031,
			0.00392157,
			0.495861,
			0.0217865,
			0.0413943,
			0.129412,
			0.433261,
			0.137255,
			0.129412,
			0.254902,
			0.37008,
			0.263181,
			0.255338,
			0.380392,
			0.306318,
			0.381845,
			0.372694,
			0.505882,
			0.243137,
			0.503994,
			0.494263,
			0.631373,
			0.180392,
			0.629484,
			0.619753,
			0.756863,
			0.117647,
			0.754975,
			0.747131,
			0.882353,
			0.054902,
			0.876398,
			0.866812,
			1,
			0,
			0.988235,
			0.976471
		]
	},
	{
		ColorSpace: "Lab",
		Name: "nic_Edge",
		RGBPoints: [
			-1,
			0.191208,
			0.191208,
			0.191208,
			-0.87451,
			0.239484,
			0.00545035,
			0.614821,
			-0.74902,
			0.220593,
			0.0617459,
			0.863547,
			-0.623529,
			0.17509,
			0.278988,
			0.97794,
			-0.498039,
			0.143526,
			0.576069,
			0.998553,
			-0.372549,
			0.166456,
			0.871883,
			0.96594,
			-0.247059,
			0.376202,
			0.993555,
			0.981833,
			-0.121569,
			0.681996,
			0.991297,
			0.999239,
			0.00392157,
			0.954172,
			0.952734,
			0.94374,
			0.129412,
			0.999735,
			0.99301,
			0.662896,
			0.254902,
			0.979399,
			0.991466,
			0.357973,
			0.380392,
			0.968771,
			0.854967,
			0.162659,
			0.505882,
			0.999245,
			0.556697,
			0.144323,
			0.631373,
			0.973959,
			0.26223,
			0.177946,
			0.756863,
			0.852358,
			0.0526707,
			0.222974,
			0.882353,
			0.593889,
			0.00912724,
			0.238855,
			1,
			0.191208,
			0.191208,
			0.191208
		]
	},
	{
		ColorSpace: "Lab",
		Name: "erdc_iceFire_H",
		RGBPoints: [
			-1,
			4.05432e-7,
			0,
			0.00000590122,
			-0.87451,
			0,
			0.120401,
			0.302675,
			-0.74902,
			0,
			0.216583,
			0.524574,
			-0.623529,
			0.0552475,
			0.345025,
			0.6595,
			-0.498039,
			0.128047,
			0.492588,
			0.720288,
			-0.372549,
			0.188955,
			0.641309,
			0.792092,
			-0.247059,
			0.327673,
			0.784935,
			0.873434,
			-0.121569,
			0.60824,
			0.892164,
			0.935547,
			0.00392157,
			0.881371,
			0.912178,
			0.818099,
			0.129412,
			0.951407,
			0.835621,
			0.449279,
			0.254902,
			0.904481,
			0.690489,
			0,
			0.380392,
			0.85407,
			0.510864,
			0,
			0.505882,
			0.777093,
			0.33018,
			0.00088199,
			0.631373,
			0.672862,
			0.139087,
			0.00269398,
			0.756863,
			0.508815,
			0,
			0,
			0.882353,
			0.299417,
			0.000366289,
			0.000547829,
			1,
			0.0157519,
			0.00332021,
			4.55569e-8
		]
	},
	{
		ColorSpace: "Lab",
		Name: "erdc_iceFire_L",
		RGBPoints: [
			-1,
			0.870485,
			0.913768,
			0.832905,
			-0.87451,
			0.586919,
			0.887865,
			0.934003,
			-0.74902,
			0.31583,
			0.776442,
			0.867858,
			-0.623529,
			0.18302,
			0.632034,
			0.787722,
			-0.498039,
			0.117909,
			0.484134,
			0.713825,
			-0.372549,
			0.0507239,
			0.335979,
			0.654741,
			-0.247059,
			0,
			0.209874,
			0.511832,
			-0.121569,
			0,
			0.114689,
			0.28935,
			0.00392157,
			0.0157519,
			0.00332021,
			4.55569e-8,
			0.129412,
			0.312914,
			0,
			0,
			0.254902,
			0.520865,
			0,
			0,
			0.380392,
			0.680105,
			0.15255,
			0.0025996,
			0.505882,
			0.785109,
			0.339479,
			0.000797922,
			0.631373,
			0.857354,
			0.522494,
			0,
			0.756863,
			0.910974,
			0.699774,
			0,
			0.882353,
			0.951921,
			0.842817,
			0.478545,
			1,
			0.881371,
			0.912178,
			0.818099
		]
	},
	{
		ColorSpace: "RGB",
		Name: "hsv",
		RGBPoints: [
			-1,
			1,
			0,
			0,
			-0.666666,
			1,
			0,
			1,
			-0.333333,
			0,
			0,
			1,
			0,
			0,
			1,
			1,
			0.33333,
			0,
			1,
			0,
			0.66666,
			1,
			1,
			0,
			1,
			1,
			0,
			0
		]
	},
	{
		ColorSpace: "Lab",
		Name: "hue_L60",
		RGBPoints: [
			-1,
			0.964784,
			0.400592,
			0.349549,
			-0.87451,
			0.964915,
			0.372498,
			0.53785,
			-0.74902,
			0.892353,
			0.401039,
			0.759569,
			-0.623529,
			0.79263,
			0.446956,
			0.903017,
			-0.498039,
			0.682208,
			0.49954,
			0.966673,
			-0.372549,
			0.56392,
			0.553082,
			0.968836,
			-0.247059,
			0.442031,
			0.606396,
			0.901601,
			-0.121569,
			0.305499,
			0.65701,
			0.765784,
			0.00392157,
			0.197251,
			0.687914,
			0.620914,
			0.129412,
			0.193882,
			0.701887,
			0.472654,
			0.254902,
			0.249866,
			0.706123,
			0.320005,
			0.380392,
			0.35132,
			0.697417,
			0.202919,
			0.505882,
			0.498097,
			0.669467,
			0.125232,
			0.631373,
			0.637477,
			0.626239,
			0.107431,
			0.756863,
			0.762115,
			0.56872,
			0.155812,
			0.882353,
			0.889434,
			0.481116,
			0.240445,
			1,
			0.964784,
			0.400592,
			0.349549
		]
	},
	{
		IndexedColors: [
			0,
			0,
			0,
			0.8941176470588236,
			0.1019607843137255,
			0.1098039215686274,
			0.2156862745098039,
			0.4941176470588236,
			0.7215686274509804,
			0.3019607843137255,
			0.6862745098039216,
			0.2901960784313726,
			0.596078431372549,
			0.3058823529411765,
			0.6392156862745098,
			1,
			0.4980392156862745,
			0,
			0.6509803921568628,
			0.3372549019607843,
			0.1568627450980392
		],
		Name: "Spectrum",
		NanColor: [
			0.6509803921568628,
			0.3372549019607843,
			0.1568627450980392
		]
	},
	{
		IndexedColors: [
			0.4745098039215686,
			0.09019607843137255,
			0.09019607843137255,
			0.7098039215686275,
			0.00392156862745098,
			0.00392156862745098,
			0.9372549019607843,
			0.2784313725490196,
			0.09803921568627451,
			0.9764705882352941,
			0.5137254901960784,
			0.1411764705882353,
			1,
			0.7058823529411765,
			0,
			1,
			0.8980392156862745,
			0.02352941176470588
		],
		Name: "Warm",
		NanColor: [
			1,
			0.8980392156862745,
			0.02352941176470588
		]
	},
	{
		IndexedColors: [
			0.4588235294117647,
			0.6941176470588235,
			0.00392156862745098,
			0.3450980392156863,
			0.5019607843137255,
			0.1607843137254902,
			0.3137254901960784,
			0.8431372549019608,
			0.7490196078431373,
			0.1098039215686274,
			0.5843137254901961,
			0.803921568627451,
			0.2313725490196079,
			0.407843137254902,
			0.6705882352941176,
			0.6039215686274509,
			0.407843137254902,
			1,
			0.3725490196078431,
			0.2,
			0.5019607843137255
		],
		Name: "Cool",
		NanColor: [
			0.3725490196078431,
			0.2,
			0.5019607843137255
		]
	},
	{
		IndexedColors: [
			0.2313725490196079,
			0.407843137254902,
			0.6705882352941176,
			0.1098039215686274,
			0.5843137254901961,
			0.803921568627451,
			0.3058823529411765,
			0.8509803921568627,
			0.9176470588235294,
			0.4509803921568628,
			0.6039215686274509,
			0.8352941176470589,
			0.2588235294117647,
			0.2392156862745098,
			0.6627450980392157,
			0.3137254901960784,
			0.3294117647058823,
			0.5294117647058824,
			0.06274509803921569,
			0.1647058823529412,
			0.3215686274509804
		],
		Name: "Blues",
		NanColor: [
			0.06274509803921569,
			0.1647058823529412,
			0.3215686274509804
		]
	},
	{
		IndexedColors: [
			0.1098039215686274,
			0.5843137254901961,
			0.803921568627451,
			0.2313725490196079,
			0.407843137254902,
			0.6705882352941176,
			0.4,
			0.2431372549019608,
			0.7176470588235294,
			0.6352941176470588,
			0.3294117647058823,
			0.8117647058823529,
			0.8705882352941177,
			0.3803921568627451,
			0.807843137254902,
			0.8627450980392157,
			0.3803921568627451,
			0.5843137254901961,
			0.2392156862745098,
			0.06274509803921569,
			0.3215686274509804
		],
		Name: "Wild Flower",
		NanColor: [
			0.2392156862745098,
			0.06274509803921569,
			0.3215686274509804
		]
	},
	{
		IndexedColors: [
			0.396078431372549,
			0.4862745098039216,
			0.2156862745098039,
			0.4588235294117647,
			0.6941176470588235,
			0.00392156862745098,
			0.6980392156862745,
			0.7294117647058823,
			0.1882352941176471,
			1,
			0.8980392156862745,
			0.02352941176470588,
			1,
			0.7058823529411765,
			0,
			0.9764705882352941,
			0.5137254901960784,
			0.1411764705882353
		],
		Name: "Citrus",
		NanColor: [
			0.9764705882352941,
			0.5137254901960784,
			0.1411764705882353
		]
	},
	{
		IndexedColors: [
			0.4980392156862745,
			0.2313725490196079,
			0.03137254901960784,
			0.7019607843137254,
			0.3450980392156863,
			0.02352941176470588,
			0.8784313725490196,
			0.5098039215686274,
			0.0784313725490196,
			0.9921568627450981,
			0.7215686274509804,
			0.3882352941176471,
			0.996078431372549,
			0.8784313725490196,
			0.7137254901960784,
			0.9686274509803922,
			0.9686274509803922,
			0.9686274509803922,
			0.8470588235294118,
			0.8549019607843137,
			0.9215686274509803,
			0.6980392156862745,
			0.6705882352941176,
			0.8235294117647058,
			0.5019607843137255,
			0.4509803921568628,
			0.6745098039215687,
			0.3294117647058823,
			0.1529411764705882,
			0.5333333333333333,
			0.1764705882352941,
			0,
			0.2941176470588235
		],
		Name: "Brewer Diverging Purple-Orange (11)",
		NanColor: [
			0.1764705882352941,
			0,
			0.2941176470588235
		]
	},
	{
		IndexedColors: [
			0.4980392156862745,
			0.2313725490196079,
			0.03137254901960784,
			0.7019607843137254,
			0.3450980392156863,
			0.02352941176470588,
			0.8784313725490196,
			0.5098039215686274,
			0.0784313725490196,
			0.9921568627450981,
			0.7215686274509804,
			0.3882352941176471,
			0.996078431372549,
			0.8784313725490196,
			0.7137254901960784,
			0.8470588235294118,
			0.8549019607843137,
			0.9215686274509803,
			0.6980392156862745,
			0.6705882352941176,
			0.8235294117647058,
			0.5019607843137255,
			0.4509803921568628,
			0.6745098039215687,
			0.3294117647058823,
			0.1529411764705882,
			0.5333333333333333,
			0.1764705882352941,
			0,
			0.2941176470588235
		],
		Name: "Brewer Diverging Purple-Orange (10)",
		NanColor: [
			0.1764705882352941,
			0,
			0.2941176470588235
		]
	},
	{
		IndexedColors: [
			0.7019607843137254,
			0.3450980392156863,
			0.02352941176470588,
			0.8784313725490196,
			0.5098039215686274,
			0.0784313725490196,
			0.9921568627450981,
			0.7215686274509804,
			0.3882352941176471,
			0.996078431372549,
			0.8784313725490196,
			0.7137254901960784,
			0.9686274509803922,
			0.9686274509803922,
			0.9686274509803922,
			0.8470588235294118,
			0.8549019607843137,
			0.9215686274509803,
			0.6980392156862745,
			0.6705882352941176,
			0.8235294117647058,
			0.5019607843137255,
			0.4509803921568628,
			0.6745098039215687,
			0.3294117647058823,
			0.1529411764705882,
			0.5333333333333333
		],
		Name: "Brewer Diverging Purple-Orange (9)",
		NanColor: [
			0.3294117647058823,
			0.1529411764705882,
			0.5333333333333333
		]
	},
	{
		IndexedColors: [
			0.7019607843137254,
			0.3450980392156863,
			0.02352941176470588,
			0.8784313725490196,
			0.5098039215686274,
			0.0784313725490196,
			0.9921568627450981,
			0.7215686274509804,
			0.3882352941176471,
			0.996078431372549,
			0.8784313725490196,
			0.7137254901960784,
			0.8470588235294118,
			0.8549019607843137,
			0.9215686274509803,
			0.6980392156862745,
			0.6705882352941176,
			0.8235294117647058,
			0.5019607843137255,
			0.4509803921568628,
			0.6745098039215687,
			0.3294117647058823,
			0.1529411764705882,
			0.5333333333333333
		],
		Name: "Brewer Diverging Purple-Orange (8)",
		NanColor: [
			0.3294117647058823,
			0.1529411764705882,
			0.5333333333333333
		]
	},
	{
		IndexedColors: [
			0.7019607843137254,
			0.3450980392156863,
			0.02352941176470588,
			0.9450980392156862,
			0.6392156862745098,
			0.2509803921568627,
			0.996078431372549,
			0.8784313725490196,
			0.7137254901960784,
			0.9686274509803922,
			0.9686274509803922,
			0.9686274509803922,
			0.8470588235294118,
			0.8549019607843137,
			0.9215686274509803,
			0.6,
			0.5568627450980392,
			0.7647058823529411,
			0.3294117647058823,
			0.1529411764705882,
			0.5333333333333333
		],
		Name: "Brewer Diverging Purple-Orange (7)",
		NanColor: [
			0.3294117647058823,
			0.1529411764705882,
			0.5333333333333333
		]
	},
	{
		IndexedColors: [
			0.7019607843137254,
			0.3450980392156863,
			0.02352941176470588,
			0.9450980392156862,
			0.6392156862745098,
			0.2509803921568627,
			0.996078431372549,
			0.8784313725490196,
			0.7137254901960784,
			0.8470588235294118,
			0.8549019607843137,
			0.9215686274509803,
			0.6,
			0.5568627450980392,
			0.7647058823529411,
			0.3294117647058823,
			0.1529411764705882,
			0.5333333333333333
		],
		Name: "Brewer Diverging Purple-Orange (6)",
		NanColor: [
			0.3294117647058823,
			0.1529411764705882,
			0.5333333333333333
		]
	},
	{
		IndexedColors: [
			0.9019607843137255,
			0.3803921568627451,
			0.00392156862745098,
			0.9921568627450981,
			0.7215686274509804,
			0.3882352941176471,
			0.9686274509803922,
			0.9686274509803922,
			0.9686274509803922,
			0.6980392156862745,
			0.6705882352941176,
			0.8235294117647058,
			0.3686274509803922,
			0.2352941176470588,
			0.6
		],
		Name: "Brewer Diverging Purple-Orange (5)",
		NanColor: [
			0.3686274509803922,
			0.2352941176470588,
			0.6
		]
	},
	{
		IndexedColors: [
			0.9019607843137255,
			0.3803921568627451,
			0.00392156862745098,
			0.9921568627450981,
			0.7215686274509804,
			0.3882352941176471,
			0.6980392156862745,
			0.6705882352941176,
			0.8235294117647058,
			0.3686274509803922,
			0.2352941176470588,
			0.6
		],
		Name: "Brewer Diverging Purple-Orange (4)",
		NanColor: [
			0.3686274509803922,
			0.2352941176470588,
			0.6
		]
	},
	{
		IndexedColors: [
			0.9450980392156862,
			0.6392156862745098,
			0.2509803921568627,
			0.9686274509803922,
			0.9686274509803922,
			0.9686274509803922,
			0.6,
			0.5568627450980392,
			0.7647058823529411
		],
		Name: "Brewer Diverging Purple-Orange (3)",
		NanColor: [
			0.6,
			0.5568627450980392,
			0.7647058823529411
		]
	},
	{
		IndexedColors: [
			0.6196078431372549,
			0.00392156862745098,
			0.2588235294117647,
			0.8352941176470589,
			0.2431372549019608,
			0.3098039215686275,
			0.9568627450980393,
			0.4274509803921568,
			0.2627450980392157,
			0.9921568627450981,
			0.6823529411764706,
			0.3803921568627451,
			0.996078431372549,
			0.8784313725490196,
			0.5450980392156862,
			1,
			1,
			0.7490196078431373,
			0.9019607843137255,
			0.9607843137254902,
			0.596078431372549,
			0.6705882352941176,
			0.8666666666666667,
			0.6431372549019608,
			0.4,
			0.7607843137254902,
			0.6470588235294118,
			0.196078431372549,
			0.5333333333333333,
			0.7411764705882353,
			0.3686274509803922,
			0.3098039215686275,
			0.6352941176470588
		],
		Name: "Brewer Diverging Spectral (11)",
		NanColor: [
			0.3686274509803922,
			0.3098039215686275,
			0.6352941176470588
		]
	},
	{
		IndexedColors: [
			0.6196078431372549,
			0.00392156862745098,
			0.2588235294117647,
			0.8352941176470589,
			0.2431372549019608,
			0.3098039215686275,
			0.9568627450980393,
			0.4274509803921568,
			0.2627450980392157,
			0.9921568627450981,
			0.6823529411764706,
			0.3803921568627451,
			0.996078431372549,
			0.8784313725490196,
			0.5450980392156862,
			0.9019607843137255,
			0.9607843137254902,
			0.596078431372549,
			0.6705882352941176,
			0.8666666666666667,
			0.6431372549019608,
			0.4,
			0.7607843137254902,
			0.6470588235294118,
			0.196078431372549,
			0.5333333333333333,
			0.7411764705882353,
			0.3686274509803922,
			0.3098039215686275,
			0.6352941176470588
		],
		Name: "Brewer Diverging Spectral (10)",
		NanColor: [
			0.3686274509803922,
			0.3098039215686275,
			0.6352941176470588
		]
	},
	{
		IndexedColors: [
			0.8352941176470589,
			0.2431372549019608,
			0.3098039215686275,
			0.9568627450980393,
			0.4274509803921568,
			0.2627450980392157,
			0.9921568627450981,
			0.6823529411764706,
			0.3803921568627451,
			0.996078431372549,
			0.8784313725490196,
			0.5450980392156862,
			1,
			1,
			0.7490196078431373,
			0.9019607843137255,
			0.9607843137254902,
			0.596078431372549,
			0.6705882352941176,
			0.8666666666666667,
			0.6431372549019608,
			0.4,
			0.7607843137254902,
			0.6470588235294118,
			0.196078431372549,
			0.5333333333333333,
			0.7411764705882353
		],
		Name: "Brewer Diverging Spectral (9)",
		NanColor: [
			0.196078431372549,
			0.5333333333333333,
			0.7411764705882353
		]
	},
	{
		IndexedColors: [
			0.8352941176470589,
			0.2431372549019608,
			0.3098039215686275,
			0.9568627450980393,
			0.4274509803921568,
			0.2627450980392157,
			0.9921568627450981,
			0.6823529411764706,
			0.3803921568627451,
			0.996078431372549,
			0.8784313725490196,
			0.5450980392156862,
			0.9019607843137255,
			0.9607843137254902,
			0.596078431372549,
			0.6705882352941176,
			0.8666666666666667,
			0.6431372549019608,
			0.4,
			0.7607843137254902,
			0.6470588235294118,
			0.196078431372549,
			0.5333333333333333,
			0.7411764705882353
		],
		Name: "Brewer Diverging Spectral (8)",
		NanColor: [
			0.196078431372549,
			0.5333333333333333,
			0.7411764705882353
		]
	},
	{
		IndexedColors: [
			0.8352941176470589,
			0.2431372549019608,
			0.3098039215686275,
			0.9882352941176471,
			0.5529411764705883,
			0.3490196078431372,
			0.996078431372549,
			0.8784313725490196,
			0.5450980392156862,
			1,
			1,
			0.7490196078431373,
			0.9019607843137255,
			0.9607843137254902,
			0.596078431372549,
			0.6,
			0.8352941176470589,
			0.5803921568627451,
			0.196078431372549,
			0.5333333333333333,
			0.7411764705882353
		],
		Name: "Brewer Diverging Spectral (7)",
		NanColor: [
			0.196078431372549,
			0.5333333333333333,
			0.7411764705882353
		]
	},
	{
		IndexedColors: [
			0.8352941176470589,
			0.2431372549019608,
			0.3098039215686275,
			0.9882352941176471,
			0.5529411764705883,
			0.3490196078431372,
			0.996078431372549,
			0.8784313725490196,
			0.5450980392156862,
			0.9019607843137255,
			0.9607843137254902,
			0.596078431372549,
			0.6,
			0.8352941176470589,
			0.5803921568627451,
			0.196078431372549,
			0.5333333333333333,
			0.7411764705882353
		],
		Name: "Brewer Diverging Spectral (6)",
		NanColor: [
			0.196078431372549,
			0.5333333333333333,
			0.7411764705882353
		]
	},
	{
		IndexedColors: [
			0.8431372549019608,
			0.09803921568627451,
			0.1098039215686274,
			0.9921568627450981,
			0.6823529411764706,
			0.3803921568627451,
			1,
			1,
			0.7490196078431373,
			0.6705882352941176,
			0.8666666666666667,
			0.6431372549019608,
			0.1686274509803922,
			0.5137254901960784,
			0.7294117647058823
		],
		Name: "Brewer Diverging Spectral (5)",
		NanColor: [
			0.1686274509803922,
			0.5137254901960784,
			0.7294117647058823
		]
	},
	{
		IndexedColors: [
			0.8431372549019608,
			0.09803921568627451,
			0.1098039215686274,
			0.9921568627450981,
			0.6823529411764706,
			0.3803921568627451,
			0.6705882352941176,
			0.8666666666666667,
			0.6431372549019608,
			0.1686274509803922,
			0.5137254901960784,
			0.7294117647058823
		],
		Name: "Brewer Diverging Spectral (4)",
		NanColor: [
			0.1686274509803922,
			0.5137254901960784,
			0.7294117647058823
		]
	},
	{
		IndexedColors: [
			0.9882352941176471,
			0.5529411764705883,
			0.3490196078431372,
			1,
			1,
			0.7490196078431373,
			0.6,
			0.8352941176470589,
			0.5803921568627451
		],
		Name: "Brewer Diverging Spectral (3)",
		NanColor: [
			0.6,
			0.8352941176470589,
			0.5803921568627451
		]
	},
	{
		IndexedColors: [
			0.3294117647058823,
			0.1882352941176471,
			0.0196078431372549,
			0.5490196078431373,
			0.3176470588235294,
			0.0392156862745098,
			0.7490196078431373,
			0.5058823529411764,
			0.1764705882352941,
			0.8745098039215686,
			0.7607843137254902,
			0.4901960784313725,
			0.9647058823529412,
			0.9098039215686274,
			0.7647058823529411,
			0.9607843137254902,
			0.9607843137254902,
			0.9607843137254902,
			0.7803921568627451,
			0.9176470588235294,
			0.8980392156862745,
			0.5019607843137255,
			0.803921568627451,
			0.7568627450980392,
			0.207843137254902,
			0.592156862745098,
			0.5607843137254902,
			0.00392156862745098,
			0.4,
			0.3686274509803922,
			0,
			0.2352941176470588,
			0.1882352941176471
		],
		Name: "Brewer Diverging Brown-Blue-Green (11)",
		NanColor: [
			0,
			0.2352941176470588,
			0.1882352941176471
		]
	},
	{
		IndexedColors: [
			0.3294117647058823,
			0.1882352941176471,
			0.0196078431372549,
			0.5490196078431373,
			0.3176470588235294,
			0.0392156862745098,
			0.7490196078431373,
			0.5058823529411764,
			0.1764705882352941,
			0.8745098039215686,
			0.7607843137254902,
			0.4901960784313725,
			0.9647058823529412,
			0.9098039215686274,
			0.7647058823529411,
			0.7803921568627451,
			0.9176470588235294,
			0.8980392156862745,
			0.5019607843137255,
			0.803921568627451,
			0.7568627450980392,
			0.207843137254902,
			0.592156862745098,
			0.5607843137254902,
			0.00392156862745098,
			0.4,
			0.3686274509803922,
			0,
			0.2352941176470588,
			0.1882352941176471
		],
		Name: "Brewer Diverging Brown-Blue-Green (10)",
		NanColor: [
			0,
			0.2352941176470588,
			0.1882352941176471
		]
	},
	{
		IndexedColors: [
			0.5490196078431373,
			0.3176470588235294,
			0.0392156862745098,
			0.7490196078431373,
			0.5058823529411764,
			0.1764705882352941,
			0.8745098039215686,
			0.7607843137254902,
			0.4901960784313725,
			0.9647058823529412,
			0.9098039215686274,
			0.7647058823529411,
			0.9607843137254902,
			0.9607843137254902,
			0.9607843137254902,
			0.7803921568627451,
			0.9176470588235294,
			0.8980392156862745,
			0.5019607843137255,
			0.803921568627451,
			0.7568627450980392,
			0.207843137254902,
			0.592156862745098,
			0.5607843137254902,
			0.00392156862745098,
			0.4,
			0.3686274509803922
		],
		Name: "Brewer Diverging Brown-Blue-Green (9)",
		NanColor: [
			0.00392156862745098,
			0.4,
			0.3686274509803922
		]
	},
	{
		IndexedColors: [
			0.5490196078431373,
			0.3176470588235294,
			0.0392156862745098,
			0.7490196078431373,
			0.5058823529411764,
			0.1764705882352941,
			0.8745098039215686,
			0.7607843137254902,
			0.4901960784313725,
			0.9647058823529412,
			0.9098039215686274,
			0.7647058823529411,
			0.7803921568627451,
			0.9176470588235294,
			0.8980392156862745,
			0.5019607843137255,
			0.803921568627451,
			0.7568627450980392,
			0.207843137254902,
			0.592156862745098,
			0.5607843137254902,
			0.00392156862745098,
			0.4,
			0.3686274509803922
		],
		Name: "Brewer Diverging Brown-Blue-Green (8)",
		NanColor: [
			0.00392156862745098,
			0.4,
			0.3686274509803922
		]
	},
	{
		IndexedColors: [
			0.5490196078431373,
			0.3176470588235294,
			0.0392156862745098,
			0.8470588235294118,
			0.7019607843137254,
			0.396078431372549,
			0.9647058823529412,
			0.9098039215686274,
			0.7647058823529411,
			0.9607843137254902,
			0.9607843137254902,
			0.9607843137254902,
			0.7803921568627451,
			0.9176470588235294,
			0.8980392156862745,
			0.3529411764705883,
			0.7058823529411765,
			0.6745098039215687,
			0.00392156862745098,
			0.4,
			0.3686274509803922
		],
		Name: "Brewer Diverging Brown-Blue-Green (7)",
		NanColor: [
			0.00392156862745098,
			0.4,
			0.3686274509803922
		]
	},
	{
		IndexedColors: [
			0.5490196078431373,
			0.3176470588235294,
			0.0392156862745098,
			0.8470588235294118,
			0.7019607843137254,
			0.396078431372549,
			0.9647058823529412,
			0.9098039215686274,
			0.7647058823529411,
			0.7803921568627451,
			0.9176470588235294,
			0.8980392156862745,
			0.3529411764705883,
			0.7058823529411765,
			0.6745098039215687,
			0.00392156862745098,
			0.4,
			0.3686274509803922
		],
		Name: "Brewer Diverging Brown-Blue-Green (6)",
		NanColor: [
			0.00392156862745098,
			0.4,
			0.3686274509803922
		]
	},
	{
		IndexedColors: [
			0.6509803921568628,
			0.3803921568627451,
			0.1019607843137255,
			0.8745098039215686,
			0.7607843137254902,
			0.4901960784313725,
			0.9607843137254902,
			0.9607843137254902,
			0.9607843137254902,
			0.5019607843137255,
			0.803921568627451,
			0.7568627450980392,
			0.00392156862745098,
			0.5215686274509804,
			0.4431372549019608
		],
		Name: "Brewer Diverging Brown-Blue-Green (5)",
		NanColor: [
			0.00392156862745098,
			0.5215686274509804,
			0.4431372549019608
		]
	},
	{
		IndexedColors: [
			0.6509803921568628,
			0.3803921568627451,
			0.1019607843137255,
			0.8745098039215686,
			0.7607843137254902,
			0.4901960784313725,
			0.5019607843137255,
			0.803921568627451,
			0.7568627450980392,
			0.00392156862745098,
			0.5215686274509804,
			0.4431372549019608
		],
		Name: "Brewer Diverging Brown-Blue-Green (4)",
		NanColor: [
			0.00392156862745098,
			0.5215686274509804,
			0.4431372549019608
		]
	},
	{
		IndexedColors: [
			0.8470588235294118,
			0.7019607843137254,
			0.396078431372549,
			0.9607843137254902,
			0.9607843137254902,
			0.9607843137254902,
			0.3529411764705883,
			0.7058823529411765,
			0.6745098039215687
		],
		Name: "Brewer Diverging Brown-Blue-Green (3)",
		NanColor: [
			0.3529411764705883,
			0.7058823529411765,
			0.6745098039215687
		]
	},
	{
		IndexedColors: [
			0.9686274509803922,
			0.9882352941176471,
			0.9921568627450981,
			0.8980392156862745,
			0.9607843137254902,
			0.9764705882352941,
			0.8,
			0.9254901960784314,
			0.9019607843137255,
			0.6,
			0.8470588235294118,
			0.788235294117647,
			0.4,
			0.7607843137254902,
			0.6431372549019608,
			0.2549019607843137,
			0.6823529411764706,
			0.4627450980392157,
			0.1372549019607843,
			0.5450980392156862,
			0.2705882352941176,
			0,
			0.4274509803921568,
			0.1725490196078431,
			0,
			0.2666666666666667,
			0.1058823529411765
		],
		Name: "Brewer Sequential Blue-Green (9)",
		NanColor: [
			0,
			0.2666666666666667,
			0.1058823529411765
		]
	},
	{
		IndexedColors: [
			0.9686274509803922,
			0.9882352941176471,
			0.9921568627450981,
			0.8980392156862745,
			0.9607843137254902,
			0.9764705882352941,
			0.8,
			0.9254901960784314,
			0.9019607843137255,
			0.6,
			0.8470588235294118,
			0.788235294117647,
			0.4,
			0.7607843137254902,
			0.6431372549019608,
			0.2549019607843137,
			0.6823529411764706,
			0.4627450980392157,
			0.1372549019607843,
			0.5450980392156862,
			0.2705882352941176,
			0,
			0.3450980392156863,
			0.1411764705882353
		],
		Name: "Brewer Sequential Blue-Green (8)",
		NanColor: [
			0,
			0.3450980392156863,
			0.1411764705882353
		]
	},
	{
		IndexedColors: [
			0.9294117647058824,
			0.9725490196078431,
			0.984313725490196,
			0.8,
			0.9254901960784314,
			0.9019607843137255,
			0.8,
			0.9254901960784314,
			0.9019607843137255,
			0.4,
			0.7607843137254902,
			0.6431372549019608,
			0.2549019607843137,
			0.6823529411764706,
			0.4627450980392157,
			0.1372549019607843,
			0.5450980392156862,
			0.2705882352941176,
			0,
			0.3450980392156863,
			0.1411764705882353
		],
		Name: "Brewer Sequential Blue-Green (7)",
		NanColor: [
			0,
			0.3450980392156863,
			0.1411764705882353
		]
	},
	{
		IndexedColors: [
			0.9294117647058824,
			0.9725490196078431,
			0.984313725490196,
			0.8,
			0.9254901960784314,
			0.9019607843137255,
			0.6,
			0.8470588235294118,
			0.788235294117647,
			0.4,
			0.7607843137254902,
			0.6431372549019608,
			0.1725490196078431,
			0.6352941176470588,
			0.3725490196078431,
			0,
			0.4274509803921568,
			0.1725490196078431
		],
		Name: "Brewer Sequential Blue-Green (6)",
		NanColor: [
			0,
			0.4274509803921568,
			0.1725490196078431
		]
	},
	{
		IndexedColors: [
			0.9294117647058824,
			0.9725490196078431,
			0.984313725490196,
			0.6980392156862745,
			0.8862745098039215,
			0.8862745098039215,
			0.4,
			0.7607843137254902,
			0.6431372549019608,
			0.1725490196078431,
			0.6352941176470588,
			0.3725490196078431,
			0,
			0.4274509803921568,
			0.1725490196078431
		],
		Name: "Brewer Sequential Blue-Green (5)",
		NanColor: [
			0,
			0.4274509803921568,
			0.1725490196078431
		]
	},
	{
		IndexedColors: [
			0.9294117647058824,
			0.9725490196078431,
			0.984313725490196,
			0.6980392156862745,
			0.8862745098039215,
			0.8862745098039215,
			0.4,
			0.7607843137254902,
			0.6431372549019608,
			0.1372549019607843,
			0.5450980392156862,
			0.2705882352941176
		],
		Name: "Brewer Sequential Blue-Green (4)",
		NanColor: [
			0.1372549019607843,
			0.5450980392156862,
			0.2705882352941176
		]
	},
	{
		IndexedColors: [
			0.8980392156862745,
			0.9607843137254902,
			0.9764705882352941,
			0.6,
			0.8470588235294118,
			0.788235294117647,
			0.1725490196078431,
			0.6352941176470588,
			0.3725490196078431
		],
		Name: "Brewer Sequential Blue-Green (3)",
		NanColor: [
			0.1725490196078431,
			0.6352941176470588,
			0.3725490196078431
		]
	},
	{
		IndexedColors: [
			1,
			1,
			0.8980392156862745,
			1,
			0.9686274509803922,
			0.7372549019607844,
			0.996078431372549,
			0.8901960784313725,
			0.5686274509803921,
			0.996078431372549,
			0.7686274509803922,
			0.3098039215686275,
			0.996078431372549,
			0.6,
			0.1607843137254902,
			0.9254901960784314,
			0.4392156862745098,
			0.0784313725490196,
			0.8,
			0.2980392156862745,
			0.00784313725490196,
			0.6,
			0.203921568627451,
			0.01568627450980392,
			0.4,
			0.1450980392156863,
			0.02352941176470588
		],
		Name: "Brewer Sequential Yellow-Orange-Brown (9)",
		NanColor: [
			0.4,
			0.1450980392156863,
			0.02352941176470588
		]
	},
	{
		IndexedColors: [
			1,
			1,
			0.8980392156862745,
			1,
			0.9686274509803922,
			0.7372549019607844,
			0.996078431372549,
			0.8901960784313725,
			0.5686274509803921,
			0.996078431372549,
			0.7686274509803922,
			0.3098039215686275,
			0.996078431372549,
			0.6,
			0.1607843137254902,
			0.9254901960784314,
			0.4392156862745098,
			0.0784313725490196,
			0.8,
			0.2980392156862745,
			0.00784313725490196,
			0.5490196078431373,
			0.1764705882352941,
			0.01568627450980392
		],
		Name: "Brewer Sequential Yellow-Orange-Brown (8)",
		NanColor: [
			0.5490196078431373,
			0.1764705882352941,
			0.01568627450980392
		]
	},
	{
		IndexedColors: [
			1,
			1,
			0.8313725490196079,
			0.996078431372549,
			0.8901960784313725,
			0.5686274509803921,
			0.996078431372549,
			0.7686274509803922,
			0.3098039215686275,
			0.996078431372549,
			0.6,
			0.1607843137254902,
			0.9254901960784314,
			0.4392156862745098,
			0.0784313725490196,
			0.8,
			0.2980392156862745,
			0.00784313725490196,
			0.5490196078431373,
			0.1764705882352941,
			0.01568627450980392
		],
		Name: "Brewer Sequential Yellow-Orange-Brown (7)",
		NanColor: [
			0.5490196078431373,
			0.1764705882352941,
			0.01568627450980392
		]
	},
	{
		IndexedColors: [
			1,
			1,
			0.8313725490196079,
			0.996078431372549,
			0.8901960784313725,
			0.5686274509803921,
			0.996078431372549,
			0.7686274509803922,
			0.3098039215686275,
			0.996078431372549,
			0.6,
			0.1607843137254902,
			0.8509803921568627,
			0.3725490196078431,
			0.05490196078431372,
			0.6,
			0.203921568627451,
			0.01568627450980392
		],
		Name: "Brewer Sequential Yellow-Orange-Brown (6)",
		NanColor: [
			0.6,
			0.203921568627451,
			0.01568627450980392
		]
	},
	{
		IndexedColors: [
			1,
			1,
			0.8313725490196079,
			0.996078431372549,
			0.8509803921568627,
			0.5568627450980392,
			0.996078431372549,
			0.6,
			0.1607843137254902,
			0.8509803921568627,
			0.3725490196078431,
			0.05490196078431372,
			0.6,
			0.203921568627451,
			0.01568627450980392
		],
		Name: "Brewer Sequential Yellow-Orange-Brown (5)",
		NanColor: [
			0.6,
			0.203921568627451,
			0.01568627450980392
		]
	},
	{
		IndexedColors: [
			1,
			1,
			0.8313725490196079,
			0.996078431372549,
			0.8509803921568627,
			0.5568627450980392,
			0.996078431372549,
			0.6,
			0.1607843137254902,
			0.8,
			0.2980392156862745,
			0.00784313725490196
		],
		Name: "Brewer Sequential Yellow-Orange-Brown (4)",
		NanColor: [
			0.8,
			0.2980392156862745,
			0.00784313725490196
		]
	},
	{
		IndexedColors: [
			1,
			0.9686274509803922,
			0.7372549019607844,
			0.996078431372549,
			0.7686274509803922,
			0.3098039215686275,
			0.8509803921568627,
			0.3725490196078431,
			0.05490196078431372
		],
		Name: "Brewer Sequential Yellow-Orange-Brown (3)",
		NanColor: [
			0.8509803921568627,
			0.3725490196078431,
			0.05490196078431372
		]
	},
	{
		IndexedColors: [
			0.9686274509803922,
			0.9882352941176471,
			0.9921568627450981,
			0.8784313725490196,
			0.9254901960784314,
			0.9568627450980393,
			0.7490196078431373,
			0.8274509803921568,
			0.9019607843137255,
			0.6196078431372549,
			0.7372549019607844,
			0.8549019607843137,
			0.5490196078431373,
			0.5882352941176471,
			0.7764705882352941,
			0.5490196078431373,
			0.4196078431372549,
			0.6941176470588235,
			0.5333333333333333,
			0.2549019607843137,
			0.615686274509804,
			0.5058823529411764,
			0.05882352941176471,
			0.4862745098039216,
			0.3019607843137255,
			0,
			0.2941176470588235
		],
		Name: "Brewer Sequential Blue-Purple (9)",
		NanColor: [
			0.3019607843137255,
			0,
			0.2941176470588235
		]
	},
	{
		IndexedColors: [
			0.9686274509803922,
			0.9882352941176471,
			0.9921568627450981,
			0.8784313725490196,
			0.9254901960784314,
			0.9568627450980393,
			0.7490196078431373,
			0.8274509803921568,
			0.9019607843137255,
			0.6196078431372549,
			0.7372549019607844,
			0.8549019607843137,
			0.5490196078431373,
			0.5882352941176471,
			0.7764705882352941,
			0.5490196078431373,
			0.4196078431372549,
			0.6941176470588235,
			0.5333333333333333,
			0.2549019607843137,
			0.615686274509804,
			0.4313725490196079,
			0.00392156862745098,
			0.4196078431372549
		],
		Name: "Brewer Sequential Blue-Purple (8)",
		NanColor: [
			0.4313725490196079,
			0.00392156862745098,
			0.4196078431372549
		]
	},
	{
		IndexedColors: [
			0.9294117647058824,
			0.9725490196078431,
			0.984313725490196,
			0.7490196078431373,
			0.8274509803921568,
			0.9019607843137255,
			0.6196078431372549,
			0.7372549019607844,
			0.8549019607843137,
			0.5490196078431373,
			0.5882352941176471,
			0.7764705882352941,
			0.5490196078431373,
			0.4196078431372549,
			0.6941176470588235,
			0.5333333333333333,
			0.2549019607843137,
			0.615686274509804,
			0.4313725490196079,
			0.00392156862745098,
			0.4196078431372549
		],
		Name: "Brewer Sequential Blue-Purple (7)",
		NanColor: [
			0.4313725490196079,
			0.00392156862745098,
			0.4196078431372549
		]
	},
	{
		IndexedColors: [
			0.9294117647058824,
			0.9725490196078431,
			0.984313725490196,
			0.7490196078431373,
			0.8274509803921568,
			0.9019607843137255,
			0.6196078431372549,
			0.7372549019607844,
			0.8549019607843137,
			0.5490196078431373,
			0.5882352941176471,
			0.7764705882352941,
			0.5333333333333333,
			0.3372549019607843,
			0.6549019607843137,
			0.5058823529411764,
			0.05882352941176471,
			0.4862745098039216
		],
		Name: "Brewer Sequential Blue-Purple (6)",
		NanColor: [
			0.5058823529411764,
			0.05882352941176471,
			0.4862745098039216
		]
	},
	{
		IndexedColors: [
			0.9294117647058824,
			0.9725490196078431,
			0.984313725490196,
			0.7019607843137254,
			0.803921568627451,
			0.8901960784313725,
			0.5490196078431373,
			0.5882352941176471,
			0.7764705882352941,
			0.5333333333333333,
			0.3372549019607843,
			0.6549019607843137,
			0.5058823529411764,
			0.05882352941176471,
			0.4862745098039216
		],
		Name: "Brewer Sequential Blue-Purple (5)",
		NanColor: [
			0.5058823529411764,
			0.05882352941176471,
			0.4862745098039216
		]
	},
	{
		IndexedColors: [
			0.9294117647058824,
			0.9725490196078431,
			0.984313725490196,
			0.7019607843137254,
			0.803921568627451,
			0.8901960784313725,
			0.5490196078431373,
			0.5882352941176471,
			0.7764705882352941,
			0.5333333333333333,
			0.2549019607843137,
			0.615686274509804
		],
		Name: "Brewer Sequential Blue-Purple (4)",
		NanColor: [
			0.5333333333333333,
			0.2549019607843137,
			0.615686274509804
		]
	},
	{
		IndexedColors: [
			0.8784313725490196,
			0.9254901960784314,
			0.9568627450980393,
			0.6196078431372549,
			0.7372549019607844,
			0.8549019607843137,
			0.5333333333333333,
			0.3372549019607843,
			0.6549019607843137
		],
		Name: "Brewer Sequential Blue-Purple (3)",
		NanColor: [
			0.5333333333333333,
			0.3372549019607843,
			0.6549019607843137
		]
	},
	{
		IndexedColors: [
			0.4980392156862745,
			0.788235294117647,
			0.4980392156862745,
			0.7450980392156863,
			0.6823529411764706,
			0.8313725490196079,
			0.9921568627450981,
			0.7529411764705882,
			0.5254901960784314,
			1,
			1,
			0.6,
			0.2196078431372549,
			0.4235294117647059,
			0.6901960784313725,
			0.9411764705882353,
			0.00784313725490196,
			0.4980392156862745,
			0.7490196078431373,
			0.3568627450980392,
			0.09019607843137255,
			0.4,
			0.4,
			0.4
		],
		Name: "Brewer Qualitative Accent",
		NanColor: [
			0.4,
			0.4,
			0.4
		]
	},
	{
		IndexedColors: [
			0.1058823529411765,
			0.6196078431372549,
			0.4666666666666667,
			0.8509803921568627,
			0.3725490196078431,
			0.00784313725490196,
			0.4588235294117647,
			0.4392156862745098,
			0.7019607843137254,
			0.9058823529411765,
			0.1607843137254902,
			0.5411764705882353,
			0.4,
			0.6509803921568628,
			0.1176470588235294,
			0.9019607843137255,
			0.6705882352941176,
			0.00784313725490196,
			0.6509803921568628,
			0.4627450980392157,
			0.1137254901960784,
			0.4,
			0.4,
			0.4
		],
		Name: "Brewer Qualitative Dark2",
		NanColor: [
			0.4,
			0.4,
			0.4
		]
	},
	{
		IndexedColors: [
			0.4,
			0.7607843137254902,
			0.6470588235294118,
			0.9882352941176471,
			0.5529411764705883,
			0.3843137254901961,
			0.5529411764705883,
			0.6274509803921569,
			0.796078431372549,
			0.9058823529411765,
			0.5411764705882353,
			0.7647058823529411,
			0.6509803921568628,
			0.8470588235294118,
			0.3294117647058823,
			1,
			0.8509803921568627,
			0.1843137254901961,
			0.8980392156862745,
			0.7686274509803922,
			0.5803921568627451,
			0.7019607843137254,
			0.7019607843137254,
			0.7019607843137254
		],
		Name: "Brewer Qualitative Set2",
		NanColor: [
			0.7019607843137254,
			0.7019607843137254,
			0.7019607843137254
		]
	},
	{
		IndexedColors: [
			0.7019607843137254,
			0.8862745098039215,
			0.803921568627451,
			0.9921568627450981,
			0.803921568627451,
			0.6745098039215687,
			0.796078431372549,
			0.8352941176470589,
			0.9098039215686274,
			0.9568627450980393,
			0.792156862745098,
			0.8941176470588236,
			0.9019607843137255,
			0.9607843137254902,
			0.788235294117647,
			1,
			0.9490196078431372,
			0.6823529411764706,
			0.9450980392156862,
			0.8862745098039215,
			0.8,
			0.8,
			0.8,
			0.8
		],
		Name: "Brewer Qualitative Pastel2",
		NanColor: [
			0.8,
			0.8,
			0.8
		]
	},
	{
		IndexedColors: [
			0.984313725490196,
			0.7058823529411765,
			0.6823529411764706,
			0.7019607843137254,
			0.803921568627451,
			0.8901960784313725,
			0.8,
			0.9215686274509803,
			0.7725490196078432,
			0.8705882352941177,
			0.796078431372549,
			0.8941176470588236,
			0.996078431372549,
			0.8509803921568627,
			0.6509803921568628,
			1,
			1,
			0.8,
			0.8980392156862745,
			0.8470588235294118,
			0.7411764705882353,
			0.9921568627450981,
			0.8549019607843137,
			0.9254901960784314,
			0.9490196078431372,
			0.9490196078431372,
			0.9490196078431372
		],
		Name: "Brewer Qualitative Pastel1",
		NanColor: [
			0.9490196078431372,
			0.9490196078431372,
			0.9490196078431372
		]
	},
	{
		IndexedColors: [
			0.8941176470588236,
			0.1019607843137255,
			0.1098039215686274,
			0.2156862745098039,
			0.4941176470588236,
			0.7215686274509804,
			0.3019607843137255,
			0.6862745098039216,
			0.2901960784313726,
			0.596078431372549,
			0.3058823529411765,
			0.6392156862745098,
			1,
			0.4980392156862745,
			0,
			1,
			1,
			0.2,
			0.6509803921568628,
			0.3372549019607843,
			0.1568627450980392,
			0.9686274509803922,
			0.5058823529411764,
			0.7490196078431373,
			0.6,
			0.6,
			0.6
		],
		Name: "Brewer Qualitative Set1",
		NanColor: [
			0.6,
			0.6,
			0.6
		]
	},
	{
		IndexedColors: [
			0.6509803921568628,
			0.807843137254902,
			0.8901960784313725,
			0.1215686274509804,
			0.4705882352941176,
			0.7058823529411765,
			0.6980392156862745,
			0.8745098039215686,
			0.5411764705882353,
			0.2,
			0.6274509803921569,
			0.1725490196078431,
			0.984313725490196,
			0.6039215686274509,
			0.6,
			0.8901960784313725,
			0.1019607843137255,
			0.1098039215686274,
			0.9921568627450981,
			0.7490196078431373,
			0.4352941176470588,
			1,
			0.4980392156862745,
			0,
			0.792156862745098,
			0.6980392156862745,
			0.8392156862745098,
			0.4156862745098039,
			0.2392156862745098,
			0.6039215686274509,
			1,
			1,
			0.6
		],
		Name: "Brewer Qualitative Paired",
		NanColor: [
			1,
			1,
			0.6
		]
	},
	{
		IndexedColors: [
			0.5529411764705883,
			0.8274509803921568,
			0.7803921568627451,
			1,
			1,
			0.7019607843137254,
			0.7450980392156863,
			0.7294117647058823,
			0.8549019607843137,
			0.984313725490196,
			0.5019607843137255,
			0.4470588235294118,
			0.5019607843137255,
			0.6941176470588235,
			0.8274509803921568,
			0.9921568627450981,
			0.7058823529411765,
			0.3843137254901961,
			0.7019607843137254,
			0.8705882352941177,
			0.4117647058823529,
			0.9882352941176471,
			0.803921568627451,
			0.8980392156862745,
			0.8509803921568627,
			0.8509803921568627,
			0.8509803921568627,
			0.7372549019607844,
			0.5019607843137255,
			0.7411764705882353,
			0.8,
			0.9215686274509803,
			0.7725490196078432,
			1,
			0.9294117647058824,
			0.4352941176470588
		],
		Name: "Brewer Qualitative Set3",
		NanColor: [
			1,
			0.9294117647058824,
			0.4352941176470588
		]
	},
	{
		IndexedColors: [
			1,
			0,
			0,
			1,
			0.862745,
			0,
			0,
			0.695201,
			0
		],
		Name: "Traffic Lights",
		NanColor: [
			0.803922,
			0,
			0.803922
		]
	},
	{
		IndexedColors: [
			0.908659,
			0.604013,
			0.581857,
			1,
			0.862745,
			0,
			0,
			0.695201,
			0
		],
		Name: "Traffic Lights For Deuteranopes",
		NanColor: [
			0.803922,
			0,
			0.803922
		]
	},
	{
		IndexedColors: [
			0.4196078431372549,
			0,
			0.07058823529411765,
			0.9019607843137255,
			0.9411764705882353,
			0.0196078431372549,
			0.01568627450980392,
			0.6196078431372549,
			0.00784313725490196
		],
		Name: "Traffic Lights For Deuteranopes 2",
		NanColor: [
			0.803922,
			0,
			0.803922
		]
	},
	{
		ColorSpace: "Lab",
		Creator: "Francesca Samsel",
		Name: "Muted Blue-Green",
		NanColor: [
			0.25,
			0,
			0
		],
		RGBPoints: [
			0,
			0.109804,
			0.27451,
			0.301961,
			0.02,
			0.129412,
			0.309804,
			0.341176,
			0.05,
			0.14902,
			0.341176,
			0.380392,
			0.1,
			0.188235,
			0.403922,
			0.458824,
			0.15,
			0.227451,
			0.447059,
			0.521569,
			0.2,
			0.290196,
			0.494118,
			0.588235,
			0.25,
			0.368627,
			0.552941,
			0.670588,
			0.3,
			0.458824,
			0.619608,
			0.74902,
			0.35,
			0.588235,
			0.713725,
			0.85098,
			0.4,
			0.72549,
			0.815686,
			0.941176,
			0.45,
			0.831373,
			0.882353,
			0.980392,
			0.475,
			0.909804,
			0.933333,
			1,
			0.5,
			0.980392,
			0.984314,
			1,
			0.5,
			0.996078,
			1,
			0.94902,
			0.5,
			1,
			1,
			0.980392,
			0.5,
			0.980392,
			0.984314,
			1,
			0.525,
			0.972549,
			0.988235,
			0.890196,
			0.55,
			0.917647,
			0.960784,
			0.835294,
			0.6,
			0.835294,
			0.921569,
			0.772549,
			0.65,
			0.768627,
			0.901961,
			0.737255,
			0.7,
			0.670588,
			0.831373,
			0.654902,
			0.75,
			0.576471,
			0.760784,
			0.584314,
			0.8,
			0.498039,
			0.678431,
			0.521569,
			0.85,
			0.392157,
			0.560784,
			0.427451,
			0.9,
			0.294118,
			0.45098,
			0.333333,
			0.95,
			0.211765,
			0.34902,
			0.254902,
			1,
			0.152941,
			0.278431,
			0.196078
		]
	},
	{
		ColorSpace: "Lab",
		Creator: "Francesca Samsel",
		Name: "Green-Blue Asymmetric Divergent (62Blbc)",
		NanColor: [
			0.25,
			0,
			0
		],
		RGBPoints: [
			0,
			0.121569,
			0.2,
			0.145098,
			0.05,
			0.196078,
			0.301961,
			0.223529,
			0.1,
			0.258824,
			0.4,
			0.278431,
			0.2,
			0.341176,
			0.54902,
			0.341176,
			0.25,
			0.419608,
			0.619608,
			0.376471,
			0.3,
			0.545098,
			0.701961,
			0.392157,
			0.35,
			0.643137,
			0.780392,
			0.403922,
			0.4,
			0.729412,
			0.819608,
			0.45098,
			0.45,
			0.811765,
			0.870588,
			0.521569,
			0.5,
			0.898039,
			0.909804,
			0.564706,
			0.55,
			0.941176,
			0.92549,
			0.686275,
			0.6,
			0.960784,
			0.94902,
			0.776471,
			0.64,
			1,
			1,
			1,
			0.65,
			0.890196,
			0.988235,
			0.972549,
			0.7,
			0.721569,
			0.894118,
			0.901961,
			0.75,
			0.631373,
			0.823529,
			0.839216,
			0.8,
			0.517647,
			0.662745,
			0.701961,
			0.85,
			0.384314,
			0.494118,
			0.54902,
			0.9,
			0.298039,
			0.360784,
			0.45098,
			0.95,
			0.223529,
			0.25098,
			0.34902,
			0.99,
			0.156863,
			0.172549,
			0.25098,
			1,
			0.137255,
			0.137255,
			0.188235
		]
	},
	{
		ColorSpace: "Lab",
		Creator: "Francesca Samsel",
		Name: "Asymmtrical Earth Tones (6_21b)",
		NanColor: [
			0.25,
			0,
			0
		],
		RGBPoints: [
			0,
			0.141176,
			0.14902,
			0.2,
			0.05,
			0.215686,
			0.258824,
			0.321569,
			0.1,
			0.243137,
			0.368627,
			0.380392,
			0.15,
			0.27451,
			0.439216,
			0.4,
			0.2,
			0.32549,
			0.501961,
			0.384314,
			0.25,
			0.403922,
			0.6,
			0.419608,
			0.3,
			0.486275,
			0.701961,
			0.454902,
			0.35,
			0.556863,
			0.74902,
			0.494118,
			0.4,
			0.670588,
			0.8,
			0.545098,
			0.5,
			0.854902,
			0.901961,
			0.631373,
			0.55,
			0.92549,
			0.941176,
			0.694118,
			0.6,
			0.960784,
			0.94902,
			0.776471,
			0.65,
			0.988235,
			0.968627,
			0.909804,
			0.7,
			0.839216,
			0.815686,
			0.772549,
			0.75,
			0.701961,
			0.662745,
			0.615686,
			0.8,
			0.6,
			0.529412,
			0.478431,
			0.85,
			0.501961,
			0.403922,
			0.360784,
			0.9,
			0.439216,
			0.313725,
			0.290196,
			1,
			0.301961,
			0.164706,
			0.176471
		]
	},
	{
		ColorSpace: "Lab",
		Creator: "Francesca Samsel",
		Name: "Yellow 15",
		NanColor: [
			0.25,
			0,
			0
		],
		RGBPoints: [
			0,
			1,
			1,
			0.988235,
			0.002,
			1,
			1,
			0.988235,
			0.05,
			0.984314,
			0.988235,
			0.843137,
			0.1,
			0.988235,
			0.988235,
			0.741176,
			0.15,
			0.980392,
			0.968627,
			0.654902,
			0.2,
			0.980392,
			0.945098,
			0.576471,
			0.25,
			0.968627,
			0.905882,
			0.486275,
			0.3,
			0.968627,
			0.862745,
			0.388235,
			0.35,
			0.960784,
			0.803922,
			0.286275,
			0.4,
			0.94902,
			0.741176,
			0.219608,
			0.45,
			0.941176,
			0.678431,
			0.14902,
			0.5,
			0.929412,
			0.607843,
			0.094118,
			0.55,
			0.921569,
			0.545098,
			0.054902,
			0.6,
			0.909804,
			0.486275,
			0.035294,
			0.65,
			0.890196,
			0.411765,
			0.019608,
			0.7,
			0.8,
			0.305882,
			0,
			0.75,
			0.760784,
			0.239216,
			0,
			0.8,
			0.678431,
			0.180392,
			0.011765,
			0.85,
			0.6,
			0.121569,
			0.023529,
			0.9,
			0.501961,
			0.054902,
			0.031373,
			0.95,
			0.4,
			0.039216,
			0.058824,
			1,
			0.301961,
			0.047059,
			0.090196
		]
	},
	{
		ColorSpace: "Diverging",
		Name: "Magma (matplotlib)",
		NanColor: [
			0,
			1,
			0
		],
		Source: "https://github.com/BIDS/colormap/blob/master/colormaps.py",
		License: "CC0",
		Creator: "Nathaniel J. Smith & Stefan van der Walt",
		RGBPoints: [
			0,
			0.001462,
			0.000466,
			0.013866,
			0.003922,
			0.002258,
			0.001295,
			0.018331,
			0.007843,
			0.003279,
			0.002305,
			0.023708,
			0.011765,
			0.004512,
			0.00349,
			0.029965,
			0.015686,
			0.00595,
			0.004843,
			0.03713,
			0.019608,
			0.007588,
			0.006356,
			0.044973,
			0.023529,
			0.009426,
			0.008022,
			0.052844,
			0.027451,
			0.011465,
			0.009828,
			0.06075,
			0.031373,
			0.013708,
			0.011771,
			0.068667,
			0.035294,
			0.016156,
			0.01384,
			0.076603,
			0.039216,
			0.018815,
			0.016026,
			0.084584,
			0.043137,
			0.021692,
			0.01832,
			0.09261,
			0.047059,
			0.024792,
			0.020715,
			0.100676,
			0.05098,
			0.028123,
			0.023201,
			0.108787,
			0.054902,
			0.031696,
			0.025765,
			0.116965,
			0.058824,
			0.03552,
			0.028397,
			0.125209,
			0.062745,
			0.039608,
			0.03109,
			0.133515,
			0.066667,
			0.04383,
			0.03383,
			0.141886,
			0.070588,
			0.048062,
			0.036607,
			0.150327,
			0.07451,
			0.05232,
			0.039407,
			0.158841,
			0.078431,
			0.056615,
			0.04216,
			0.167446,
			0.082353,
			0.060949,
			0.044794,
			0.176129,
			0.086275,
			0.06533,
			0.047318,
			0.184892,
			0.090196,
			0.069764,
			0.049726,
			0.193735,
			0.094118,
			0.074257,
			0.052017,
			0.20266,
			0.098039,
			0.078815,
			0.054184,
			0.211667,
			0.101961,
			0.083446,
			0.056225,
			0.220755,
			0.105882,
			0.088155,
			0.058133,
			0.229922,
			0.109804,
			0.092949,
			0.059904,
			0.239164,
			0.113725,
			0.097833,
			0.061531,
			0.248477,
			0.117647,
			0.102815,
			0.06301,
			0.257854,
			0.121569,
			0.107899,
			0.064335,
			0.267289,
			0.12549,
			0.113094,
			0.065492,
			0.276784,
			0.129412,
			0.118405,
			0.066479,
			0.286321,
			0.133333,
			0.123833,
			0.067295,
			0.295879,
			0.137255,
			0.12938,
			0.067935,
			0.305443,
			0.141176,
			0.135053,
			0.068391,
			0.315,
			0.145098,
			0.140858,
			0.068654,
			0.324538,
			0.14902,
			0.146785,
			0.068738,
			0.334011,
			0.152941,
			0.152839,
			0.068637,
			0.343404,
			0.156863,
			0.159018,
			0.068354,
			0.352688,
			0.160784,
			0.165308,
			0.067911,
			0.361816,
			0.164706,
			0.171713,
			0.067305,
			0.370771,
			0.168627,
			0.178212,
			0.066576,
			0.379497,
			0.172549,
			0.184801,
			0.065732,
			0.387973,
			0.176471,
			0.19146,
			0.064818,
			0.396152,
			0.180392,
			0.198177,
			0.063862,
			0.404009,
			0.184314,
			0.204935,
			0.062907,
			0.411514,
			0.188235,
			0.211718,
			0.061992,
			0.418647,
			0.192157,
			0.218512,
			0.061158,
			0.425392,
			0.196078,
			0.225302,
			0.060445,
			0.431742,
			0.2,
			0.232077,
			0.059889,
			0.437695,
			0.203922,
			0.238826,
			0.059517,
			0.443256,
			0.207843,
			0.245543,
			0.059352,
			0.448436,
			0.211765,
			0.25222,
			0.059415,
			0.453248,
			0.215686,
			0.258857,
			0.059706,
			0.45771,
			0.219608,
			0.265447,
			0.060237,
			0.46184,
			0.223529,
			0.271994,
			0.060994,
			0.46566,
			0.227451,
			0.278493,
			0.061978,
			0.46919,
			0.231373,
			0.284951,
			0.063168,
			0.472451,
			0.235294,
			0.291366,
			0.064553,
			0.475462,
			0.239216,
			0.29774,
			0.066117,
			0.478243,
			0.243137,
			0.304081,
			0.067835,
			0.480812,
			0.247059,
			0.310382,
			0.069702,
			0.483186,
			0.25098,
			0.316654,
			0.07169,
			0.48538,
			0.254902,
			0.322899,
			0.073782,
			0.487408,
			0.258824,
			0.329114,
			0.075972,
			0.489287,
			0.262745,
			0.335308,
			0.078236,
			0.491024,
			0.266667,
			0.341482,
			0.080564,
			0.492631,
			0.270588,
			0.347636,
			0.082946,
			0.494121,
			0.27451,
			0.353773,
			0.085373,
			0.495501,
			0.278431,
			0.359898,
			0.087831,
			0.496778,
			0.282353,
			0.366012,
			0.090314,
			0.49796,
			0.286275,
			0.372116,
			0.092816,
			0.499053,
			0.290196,
			0.378211,
			0.095332,
			0.500067,
			0.294118,
			0.384299,
			0.097855,
			0.501002,
			0.298039,
			0.390384,
			0.100379,
			0.501864,
			0.301961,
			0.396467,
			0.102902,
			0.502658,
			0.305882,
			0.402548,
			0.10542,
			0.503386,
			0.309804,
			0.408629,
			0.10793,
			0.504052,
			0.313725,
			0.414709,
			0.110431,
			0.504662,
			0.317647,
			0.420791,
			0.11292,
			0.505215,
			0.321569,
			0.426877,
			0.115395,
			0.505714,
			0.32549,
			0.432967,
			0.117855,
			0.50616,
			0.329412,
			0.439062,
			0.120298,
			0.506555,
			0.333333,
			0.445163,
			0.122724,
			0.506901,
			0.337255,
			0.451271,
			0.125132,
			0.507198,
			0.341176,
			0.457386,
			0.127522,
			0.507448,
			0.345098,
			0.463508,
			0.129893,
			0.507652,
			0.34902,
			0.46964,
			0.132245,
			0.507809,
			0.352941,
			0.47578,
			0.134577,
			0.507921,
			0.356863,
			0.481929,
			0.136891,
			0.507989,
			0.360784,
			0.488088,
			0.139186,
			0.508011,
			0.364706,
			0.494258,
			0.141462,
			0.507988,
			0.368627,
			0.500438,
			0.143719,
			0.50792,
			0.372549,
			0.506629,
			0.145958,
			0.507806,
			0.376471,
			0.512831,
			0.148179,
			0.507648,
			0.380392,
			0.519045,
			0.150383,
			0.507443,
			0.384314,
			0.52527,
			0.152569,
			0.507192,
			0.388235,
			0.531507,
			0.154739,
			0.506895,
			0.392157,
			0.537755,
			0.156894,
			0.506551,
			0.396078,
			0.544015,
			0.159033,
			0.506159,
			0.4,
			0.550287,
			0.161158,
			0.505719,
			0.403922,
			0.556571,
			0.163269,
			0.50523,
			0.407843,
			0.562866,
			0.165368,
			0.504692,
			0.411765,
			0.569172,
			0.167454,
			0.504105,
			0.415686,
			0.57549,
			0.16953,
			0.503466,
			0.419608,
			0.581819,
			0.171596,
			0.502777,
			0.423529,
			0.588158,
			0.173652,
			0.502035,
			0.427451,
			0.594508,
			0.175701,
			0.501241,
			0.431373,
			0.600868,
			0.177743,
			0.500394,
			0.435294,
			0.607238,
			0.179779,
			0.499492,
			0.439216,
			0.613617,
			0.181811,
			0.498536,
			0.443137,
			0.620005,
			0.18384,
			0.497524,
			0.447059,
			0.626401,
			0.185867,
			0.496456,
			0.45098,
			0.632805,
			0.187893,
			0.495332,
			0.454902,
			0.639216,
			0.189921,
			0.49415,
			0.458824,
			0.645633,
			0.191952,
			0.49291,
			0.462745,
			0.652056,
			0.193986,
			0.491611,
			0.466667,
			0.658483,
			0.196027,
			0.490253,
			0.470588,
			0.664915,
			0.198075,
			0.488836,
			0.47451,
			0.671349,
			0.200133,
			0.487358,
			0.478431,
			0.677786,
			0.202203,
			0.485819,
			0.482353,
			0.684224,
			0.204286,
			0.484219,
			0.486275,
			0.690661,
			0.206384,
			0.482558,
			0.490196,
			0.697098,
			0.208501,
			0.480835,
			0.494118,
			0.703532,
			0.210638,
			0.479049,
			0.498039,
			0.709962,
			0.212797,
			0.477201,
			0.501961,
			0.716387,
			0.214982,
			0.47529,
			0.505882,
			0.722805,
			0.217194,
			0.473316,
			0.509804,
			0.729216,
			0.219437,
			0.471279,
			0.513725,
			0.735616,
			0.221713,
			0.46918,
			0.517647,
			0.742004,
			0.224025,
			0.467018,
			0.521569,
			0.748378,
			0.226377,
			0.464794,
			0.52549,
			0.754737,
			0.228772,
			0.462509,
			0.529412,
			0.761077,
			0.231214,
			0.460162,
			0.533333,
			0.767398,
			0.233705,
			0.457755,
			0.537255,
			0.773695,
			0.236249,
			0.455289,
			0.541176,
			0.779968,
			0.238851,
			0.452765,
			0.545098,
			0.786212,
			0.241514,
			0.450184,
			0.54902,
			0.792427,
			0.244242,
			0.447543,
			0.552941,
			0.798608,
			0.24704,
			0.444848,
			0.556863,
			0.804752,
			0.249911,
			0.442102,
			0.560784,
			0.810855,
			0.252861,
			0.439305,
			0.564706,
			0.816914,
			0.255895,
			0.436461,
			0.568627,
			0.822926,
			0.259016,
			0.433573,
			0.572549,
			0.828886,
			0.262229,
			0.430644,
			0.576471,
			0.834791,
			0.26554,
			0.427671,
			0.580392,
			0.840636,
			0.268953,
			0.424666,
			0.584314,
			0.846416,
			0.272473,
			0.421631,
			0.588235,
			0.852126,
			0.276106,
			0.418573,
			0.592157,
			0.857763,
			0.279857,
			0.415496,
			0.596078,
			0.86332,
			0.283729,
			0.412403,
			0.6,
			0.868793,
			0.287728,
			0.409303,
			0.603922,
			0.874176,
			0.291859,
			0.406205,
			0.607843,
			0.879464,
			0.296125,
			0.403118,
			0.611765,
			0.884651,
			0.30053,
			0.400047,
			0.615686,
			0.889731,
			0.305079,
			0.397002,
			0.619608,
			0.8947,
			0.309773,
			0.393995,
			0.623529,
			0.899552,
			0.314616,
			0.391037,
			0.627451,
			0.904281,
			0.31961,
			0.388137,
			0.631373,
			0.908884,
			0.324755,
			0.385308,
			0.635294,
			0.913354,
			0.330052,
			0.382563,
			0.639216,
			0.917689,
			0.3355,
			0.379915,
			0.643137,
			0.921884,
			0.341098,
			0.377376,
			0.647059,
			0.925937,
			0.346844,
			0.374959,
			0.65098,
			0.929845,
			0.352734,
			0.372677,
			0.654902,
			0.933606,
			0.358764,
			0.370541,
			0.658824,
			0.937221,
			0.364929,
			0.368567,
			0.662745,
			0.940687,
			0.371224,
			0.366762,
			0.666667,
			0.944006,
			0.377643,
			0.365136,
			0.670588,
			0.94718,
			0.384178,
			0.363701,
			0.67451,
			0.95021,
			0.39082,
			0.362468,
			0.678431,
			0.953099,
			0.397563,
			0.361438,
			0.682353,
			0.955849,
			0.4044,
			0.360619,
			0.686275,
			0.958464,
			0.411324,
			0.360014,
			0.690196,
			0.960949,
			0.418323,
			0.35963,
			0.694118,
			0.96331,
			0.42539,
			0.359469,
			0.698039,
			0.965549,
			0.432519,
			0.359529,
			0.701961,
			0.967671,
			0.439703,
			0.35981,
			0.705882,
			0.96968,
			0.446936,
			0.360311,
			0.709804,
			0.971582,
			0.45421,
			0.36103,
			0.713725,
			0.973381,
			0.46152,
			0.361965,
			0.717647,
			0.975082,
			0.468861,
			0.363111,
			0.721569,
			0.97669,
			0.476226,
			0.364466,
			0.72549,
			0.97821,
			0.483612,
			0.366025,
			0.729412,
			0.979645,
			0.491014,
			0.367783,
			0.733333,
			0.981,
			0.498428,
			0.369734,
			0.737255,
			0.982279,
			0.505851,
			0.371874,
			0.741176,
			0.983485,
			0.51328,
			0.374198,
			0.745098,
			0.984622,
			0.520713,
			0.376698,
			0.74902,
			0.985693,
			0.528148,
			0.379371,
			0.752941,
			0.9867,
			0.535582,
			0.38221,
			0.756863,
			0.987646,
			0.543015,
			0.38521,
			0.760784,
			0.988533,
			0.550446,
			0.388365,
			0.764706,
			0.989363,
			0.557873,
			0.391671,
			0.768627,
			0.990138,
			0.565296,
			0.395122,
			0.772549,
			0.990871,
			0.572706,
			0.398714,
			0.776471,
			0.991558,
			0.580107,
			0.402441,
			0.780392,
			0.992196,
			0.587502,
			0.406299,
			0.784314,
			0.992785,
			0.594891,
			0.410283,
			0.788235,
			0.993326,
			0.602275,
			0.41439,
			0.792157,
			0.993834,
			0.609644,
			0.418613,
			0.796078,
			0.994309,
			0.616999,
			0.42295,
			0.8,
			0.994738,
			0.62435,
			0.427397,
			0.803922,
			0.995122,
			0.631696,
			0.431951,
			0.807843,
			0.99548,
			0.639027,
			0.436607,
			0.811765,
			0.99581,
			0.646344,
			0.441361,
			0.815686,
			0.996096,
			0.653659,
			0.446213,
			0.819608,
			0.996341,
			0.660969,
			0.45116,
			0.823529,
			0.99658,
			0.668256,
			0.456192,
			0.827451,
			0.996775,
			0.675541,
			0.461314,
			0.831373,
			0.996925,
			0.682828,
			0.466526,
			0.835294,
			0.997077,
			0.690088,
			0.471811,
			0.839216,
			0.997186,
			0.697349,
			0.477182,
			0.843137,
			0.997254,
			0.704611,
			0.482635,
			0.847059,
			0.997325,
			0.711848,
			0.488154,
			0.85098,
			0.997351,
			0.719089,
			0.493755,
			0.854902,
			0.997351,
			0.726324,
			0.499428,
			0.858824,
			0.997341,
			0.733545,
			0.505167,
			0.862745,
			0.997285,
			0.740772,
			0.510983,
			0.866667,
			0.997228,
			0.747981,
			0.516859,
			0.870588,
			0.997138,
			0.75519,
			0.522806,
			0.87451,
			0.997019,
			0.762398,
			0.528821,
			0.878431,
			0.996898,
			0.769591,
			0.534892,
			0.882353,
			0.996727,
			0.776795,
			0.541039,
			0.886275,
			0.996571,
			0.783977,
			0.547233,
			0.890196,
			0.996369,
			0.791167,
			0.553499,
			0.894118,
			0.996162,
			0.798348,
			0.55982,
			0.898039,
			0.995932,
			0.805527,
			0.566202,
			0.901961,
			0.99568,
			0.812706,
			0.572645,
			0.905882,
			0.995424,
			0.819875,
			0.57914,
			0.909804,
			0.995131,
			0.827052,
			0.585701,
			0.913725,
			0.994851,
			0.834213,
			0.592307,
			0.917647,
			0.994524,
			0.841387,
			0.598983,
			0.921569,
			0.994222,
			0.84854,
			0.605696,
			0.92549,
			0.993866,
			0.855711,
			0.612482,
			0.929412,
			0.993545,
			0.862859,
			0.619299,
			0.933333,
			0.99317,
			0.870024,
			0.626189,
			0.937255,
			0.992831,
			0.877168,
			0.633109,
			0.941176,
			0.99244,
			0.88433,
			0.640099,
			0.945098,
			0.992089,
			0.89147,
			0.647116,
			0.94902,
			0.991688,
			0.898627,
			0.654202,
			0.952941,
			0.991332,
			0.905763,
			0.661309,
			0.956863,
			0.99093,
			0.912915,
			0.668481,
			0.960784,
			0.99057,
			0.920049,
			0.675675,
			0.964706,
			0.990175,
			0.927196,
			0.682926,
			0.968627,
			0.989815,
			0.934329,
			0.690198,
			0.972549,
			0.989434,
			0.94147,
			0.697519,
			0.976471,
			0.989077,
			0.948604,
			0.704863,
			0.980392,
			0.988717,
			0.955742,
			0.712242,
			0.984314,
			0.988367,
			0.962878,
			0.719649,
			0.988235,
			0.988033,
			0.970012,
			0.727077,
			0.992157,
			0.987691,
			0.977154,
			0.734536,
			0.996078,
			0.987387,
			0.984288,
			0.742002,
			1,
			0.987053,
			0.991438,
			0.749504
		]
	},
	{
		ColorSpace: "Diverging",
		Name: "Inferno (matplotlib)",
		NanColor: [
			0,
			1,
			0
		],
		Source: "https://github.com/BIDS/colormap/blob/master/colormaps.py",
		License: "CC0",
		Creator: "Nathaniel J. Smith & Stefan van der Walt",
		RGBPoints: [
			0,
			0.001462,
			0.000466,
			0.013866,
			0.003922,
			0.002267,
			0.00127,
			0.01857,
			0.007843,
			0.003299,
			0.002249,
			0.024239,
			0.011765,
			0.004547,
			0.003392,
			0.030909,
			0.015686,
			0.006006,
			0.004692,
			0.038558,
			0.019608,
			0.007676,
			0.006136,
			0.046836,
			0.023529,
			0.009561,
			0.007713,
			0.055143,
			0.027451,
			0.011663,
			0.009417,
			0.06346,
			0.031373,
			0.013995,
			0.011225,
			0.071862,
			0.035294,
			0.016561,
			0.013136,
			0.080282,
			0.039216,
			0.019373,
			0.015133,
			0.088767,
			0.043137,
			0.022447,
			0.017199,
			0.097327,
			0.047059,
			0.025793,
			0.019331,
			0.10593,
			0.05098,
			0.029432,
			0.021503,
			0.114621,
			0.054902,
			0.033385,
			0.023702,
			0.123397,
			0.058824,
			0.037668,
			0.025921,
			0.132232,
			0.062745,
			0.042253,
			0.028139,
			0.141141,
			0.066667,
			0.046915,
			0.030324,
			0.150164,
			0.070588,
			0.051644,
			0.032474,
			0.159254,
			0.07451,
			0.056449,
			0.034569,
			0.168414,
			0.078431,
			0.06134,
			0.03659,
			0.177642,
			0.082353,
			0.066331,
			0.038504,
			0.186962,
			0.086275,
			0.071429,
			0.040294,
			0.196354,
			0.090196,
			0.076637,
			0.041905,
			0.205799,
			0.094118,
			0.081962,
			0.043328,
			0.215289,
			0.098039,
			0.087411,
			0.044556,
			0.224813,
			0.101961,
			0.09299,
			0.045583,
			0.234358,
			0.105882,
			0.098702,
			0.046402,
			0.243904,
			0.109804,
			0.104551,
			0.047008,
			0.25343,
			0.113725,
			0.110536,
			0.047399,
			0.262912,
			0.117647,
			0.116656,
			0.047574,
			0.272321,
			0.121569,
			0.122908,
			0.047536,
			0.281624,
			0.12549,
			0.129285,
			0.047293,
			0.290788,
			0.129412,
			0.135778,
			0.046856,
			0.299776,
			0.133333,
			0.142378,
			0.046242,
			0.308553,
			0.137255,
			0.149073,
			0.045468,
			0.317085,
			0.141176,
			0.15585,
			0.044559,
			0.325338,
			0.145098,
			0.162689,
			0.043554,
			0.333277,
			0.14902,
			0.169575,
			0.042489,
			0.340874,
			0.152941,
			0.176493,
			0.041402,
			0.348111,
			0.156863,
			0.183429,
			0.040329,
			0.354971,
			0.160784,
			0.190367,
			0.039309,
			0.361447,
			0.164706,
			0.197297,
			0.0384,
			0.367535,
			0.168627,
			0.204209,
			0.037632,
			0.373238,
			0.172549,
			0.211095,
			0.03703,
			0.378563,
			0.176471,
			0.217949,
			0.036615,
			0.383522,
			0.180392,
			0.224763,
			0.036405,
			0.388129,
			0.184314,
			0.231538,
			0.036405,
			0.3924,
			0.188235,
			0.238273,
			0.036621,
			0.396353,
			0.192157,
			0.244967,
			0.037055,
			0.400007,
			0.196078,
			0.25162,
			0.037705,
			0.403378,
			0.2,
			0.258234,
			0.038571,
			0.406485,
			0.203922,
			0.26481,
			0.039647,
			0.409345,
			0.207843,
			0.271347,
			0.040922,
			0.411976,
			0.211765,
			0.27785,
			0.042353,
			0.414392,
			0.215686,
			0.284321,
			0.043933,
			0.416608,
			0.219608,
			0.290763,
			0.045644,
			0.418637,
			0.223529,
			0.297178,
			0.04747,
			0.420491,
			0.227451,
			0.303568,
			0.049396,
			0.422182,
			0.231373,
			0.309935,
			0.051407,
			0.423721,
			0.235294,
			0.316282,
			0.05349,
			0.425116,
			0.239216,
			0.32261,
			0.055634,
			0.426377,
			0.243137,
			0.328921,
			0.057827,
			0.427511,
			0.247059,
			0.335217,
			0.06006,
			0.428524,
			0.25098,
			0.3415,
			0.062325,
			0.429425,
			0.254902,
			0.347771,
			0.064616,
			0.430217,
			0.258824,
			0.354032,
			0.066925,
			0.430906,
			0.262745,
			0.360284,
			0.069247,
			0.431497,
			0.266667,
			0.366529,
			0.071579,
			0.431994,
			0.270588,
			0.372768,
			0.073915,
			0.4324,
			0.27451,
			0.379001,
			0.076253,
			0.432719,
			0.278431,
			0.385228,
			0.078591,
			0.432955,
			0.282353,
			0.391453,
			0.080927,
			0.433109,
			0.286275,
			0.397674,
			0.083257,
			0.433183,
			0.290196,
			0.403894,
			0.08558,
			0.433179,
			0.294118,
			0.410113,
			0.087896,
			0.433098,
			0.298039,
			0.416331,
			0.090203,
			0.432943,
			0.301961,
			0.422549,
			0.092501,
			0.432714,
			0.305882,
			0.428768,
			0.09479,
			0.432412,
			0.309804,
			0.434987,
			0.097069,
			0.432039,
			0.313725,
			0.441207,
			0.099338,
			0.431594,
			0.317647,
			0.447428,
			0.101597,
			0.43108,
			0.321569,
			0.453651,
			0.103848,
			0.430498,
			0.32549,
			0.459875,
			0.106089,
			0.429846,
			0.329412,
			0.4661,
			0.108322,
			0.429125,
			0.333333,
			0.472328,
			0.110547,
			0.428334,
			0.337255,
			0.478558,
			0.112764,
			0.427475,
			0.341176,
			0.484789,
			0.114974,
			0.426548,
			0.345098,
			0.491022,
			0.117179,
			0.425552,
			0.34902,
			0.497257,
			0.119379,
			0.424488,
			0.352941,
			0.503493,
			0.121575,
			0.423356,
			0.356863,
			0.50973,
			0.123769,
			0.422156,
			0.360784,
			0.515967,
			0.12596,
			0.420887,
			0.364706,
			0.522206,
			0.12815,
			0.419549,
			0.368627,
			0.528444,
			0.130341,
			0.418142,
			0.372549,
			0.534683,
			0.132534,
			0.416667,
			0.376471,
			0.54092,
			0.134729,
			0.415123,
			0.380392,
			0.547157,
			0.136929,
			0.413511,
			0.384314,
			0.553392,
			0.139134,
			0.411829,
			0.388235,
			0.559624,
			0.141346,
			0.410078,
			0.392157,
			0.565854,
			0.143567,
			0.408258,
			0.396078,
			0.572081,
			0.145797,
			0.406369,
			0.4,
			0.578304,
			0.148039,
			0.404411,
			0.403922,
			0.584521,
			0.150294,
			0.402385,
			0.407843,
			0.590734,
			0.152563,
			0.40029,
			0.411765,
			0.59694,
			0.154848,
			0.398125,
			0.415686,
			0.603139,
			0.157151,
			0.395891,
			0.419608,
			0.60933,
			0.159474,
			0.393589,
			0.423529,
			0.615513,
			0.161817,
			0.391219,
			0.427451,
			0.621685,
			0.164184,
			0.388781,
			0.431373,
			0.627847,
			0.166575,
			0.386276,
			0.435294,
			0.633998,
			0.168992,
			0.383704,
			0.439216,
			0.640135,
			0.171438,
			0.381065,
			0.443137,
			0.64626,
			0.173914,
			0.378359,
			0.447059,
			0.652369,
			0.176421,
			0.375586,
			0.45098,
			0.658463,
			0.178962,
			0.372748,
			0.454902,
			0.66454,
			0.181539,
			0.369846,
			0.458824,
			0.670599,
			0.184153,
			0.366879,
			0.462745,
			0.676638,
			0.186807,
			0.363849,
			0.466667,
			0.682656,
			0.189501,
			0.360757,
			0.470588,
			0.688653,
			0.192239,
			0.357603,
			0.47451,
			0.694627,
			0.195021,
			0.354388,
			0.478431,
			0.700576,
			0.197851,
			0.351113,
			0.482353,
			0.7065,
			0.200728,
			0.347777,
			0.486275,
			0.712396,
			0.203656,
			0.344383,
			0.490196,
			0.718264,
			0.206636,
			0.340931,
			0.494118,
			0.724103,
			0.20967,
			0.337424,
			0.498039,
			0.729909,
			0.212759,
			0.333861,
			0.501961,
			0.735683,
			0.215906,
			0.330245,
			0.505882,
			0.741423,
			0.219112,
			0.326576,
			0.509804,
			0.747127,
			0.222378,
			0.322856,
			0.513725,
			0.752794,
			0.225706,
			0.319085,
			0.517647,
			0.758422,
			0.229097,
			0.315266,
			0.521569,
			0.76401,
			0.232554,
			0.311399,
			0.52549,
			0.769556,
			0.236077,
			0.307485,
			0.529412,
			0.775059,
			0.239667,
			0.303526,
			0.533333,
			0.780517,
			0.243327,
			0.299523,
			0.537255,
			0.785929,
			0.247056,
			0.295477,
			0.541176,
			0.791293,
			0.250856,
			0.29139,
			0.545098,
			0.796607,
			0.254728,
			0.287264,
			0.54902,
			0.801871,
			0.258674,
			0.283099,
			0.552941,
			0.807082,
			0.262692,
			0.278898,
			0.556863,
			0.812239,
			0.266786,
			0.274661,
			0.560784,
			0.817341,
			0.270954,
			0.27039,
			0.564706,
			0.822386,
			0.275197,
			0.266085,
			0.568627,
			0.827372,
			0.279517,
			0.26175,
			0.572549,
			0.832299,
			0.283913,
			0.257383,
			0.576471,
			0.837165,
			0.288385,
			0.252988,
			0.580392,
			0.841969,
			0.292933,
			0.248564,
			0.584314,
			0.846709,
			0.297559,
			0.244113,
			0.588235,
			0.851384,
			0.30226,
			0.239636,
			0.592157,
			0.855992,
			0.307038,
			0.235133,
			0.596078,
			0.860533,
			0.311892,
			0.230606,
			0.6,
			0.865006,
			0.316822,
			0.226055,
			0.603922,
			0.869409,
			0.321827,
			0.221482,
			0.607843,
			0.873741,
			0.326906,
			0.216886,
			0.611765,
			0.878001,
			0.33206,
			0.212268,
			0.615686,
			0.882188,
			0.337287,
			0.207628,
			0.619608,
			0.886302,
			0.342586,
			0.202968,
			0.623529,
			0.890341,
			0.347957,
			0.198286,
			0.627451,
			0.894305,
			0.353399,
			0.193584,
			0.631373,
			0.898192,
			0.358911,
			0.18886,
			0.635294,
			0.902003,
			0.364492,
			0.184116,
			0.639216,
			0.905735,
			0.37014,
			0.17935,
			0.643137,
			0.90939,
			0.375856,
			0.174563,
			0.647059,
			0.912966,
			0.381636,
			0.169755,
			0.65098,
			0.916462,
			0.387481,
			0.164924,
			0.654902,
			0.919879,
			0.393389,
			0.16007,
			0.658824,
			0.923215,
			0.399359,
			0.155193,
			0.662745,
			0.92647,
			0.405389,
			0.150292,
			0.666667,
			0.929644,
			0.411479,
			0.145367,
			0.670588,
			0.932737,
			0.417627,
			0.140417,
			0.67451,
			0.935747,
			0.423831,
			0.13544,
			0.678431,
			0.938675,
			0.430091,
			0.130438,
			0.682353,
			0.941521,
			0.436405,
			0.125409,
			0.686275,
			0.944285,
			0.442772,
			0.120354,
			0.690196,
			0.946965,
			0.449191,
			0.115272,
			0.694118,
			0.949562,
			0.45566,
			0.110164,
			0.698039,
			0.952075,
			0.462178,
			0.105031,
			0.701961,
			0.954506,
			0.468744,
			0.099874,
			0.705882,
			0.956852,
			0.475356,
			0.094695,
			0.709804,
			0.959114,
			0.482014,
			0.089499,
			0.713725,
			0.961293,
			0.488716,
			0.084289,
			0.717647,
			0.963387,
			0.495462,
			0.079073,
			0.721569,
			0.965397,
			0.502249,
			0.073859,
			0.72549,
			0.967322,
			0.509078,
			0.068659,
			0.729412,
			0.969163,
			0.515946,
			0.063488,
			0.733333,
			0.970919,
			0.522853,
			0.058367,
			0.737255,
			0.97259,
			0.529798,
			0.053324,
			0.741176,
			0.974176,
			0.53678,
			0.048392,
			0.745098,
			0.975677,
			0.543798,
			0.043618,
			0.74902,
			0.977092,
			0.55085,
			0.03905,
			0.752941,
			0.978422,
			0.557937,
			0.034931,
			0.756863,
			0.979666,
			0.565057,
			0.031409,
			0.760784,
			0.980824,
			0.572209,
			0.028508,
			0.764706,
			0.981895,
			0.579392,
			0.02625,
			0.768627,
			0.982881,
			0.586606,
			0.024661,
			0.772549,
			0.983779,
			0.593849,
			0.02377,
			0.776471,
			0.984591,
			0.601122,
			0.023606,
			0.780392,
			0.985315,
			0.608422,
			0.024202,
			0.784314,
			0.985952,
			0.61575,
			0.025592,
			0.788235,
			0.986502,
			0.623105,
			0.027814,
			0.792157,
			0.986964,
			0.630485,
			0.030908,
			0.796078,
			0.987337,
			0.63789,
			0.034916,
			0.8,
			0.987622,
			0.64532,
			0.039886,
			0.803922,
			0.987819,
			0.652773,
			0.045581,
			0.807843,
			0.987926,
			0.66025,
			0.05175,
			0.811765,
			0.987945,
			0.667748,
			0.058329,
			0.815686,
			0.987874,
			0.675267,
			0.065257,
			0.819608,
			0.987714,
			0.682807,
			0.072489,
			0.823529,
			0.987464,
			0.690366,
			0.07999,
			0.827451,
			0.987124,
			0.697944,
			0.087731,
			0.831373,
			0.986694,
			0.70554,
			0.095694,
			0.835294,
			0.986175,
			0.713153,
			0.103863,
			0.839216,
			0.985566,
			0.720782,
			0.112229,
			0.843137,
			0.984865,
			0.728427,
			0.120785,
			0.847059,
			0.984075,
			0.736087,
			0.129527,
			0.85098,
			0.983196,
			0.743758,
			0.138453,
			0.854902,
			0.982228,
			0.751442,
			0.147565,
			0.858824,
			0.981173,
			0.759135,
			0.156863,
			0.862745,
			0.980032,
			0.766837,
			0.166353,
			0.866667,
			0.978806,
			0.774545,
			0.176037,
			0.870588,
			0.977497,
			0.782258,
			0.185923,
			0.87451,
			0.976108,
			0.789974,
			0.196018,
			0.878431,
			0.974638,
			0.797692,
			0.206332,
			0.882353,
			0.973088,
			0.805409,
			0.216877,
			0.886275,
			0.971468,
			0.813122,
			0.227658,
			0.890196,
			0.969783,
			0.820825,
			0.238686,
			0.894118,
			0.968041,
			0.828515,
			0.249972,
			0.898039,
			0.966243,
			0.836191,
			0.261534,
			0.901961,
			0.964394,
			0.843848,
			0.273391,
			0.905882,
			0.962517,
			0.851476,
			0.285546,
			0.909804,
			0.960626,
			0.859069,
			0.29801,
			0.913725,
			0.95872,
			0.866624,
			0.31082,
			0.917647,
			0.956834,
			0.874129,
			0.323974,
			0.921569,
			0.954997,
			0.881569,
			0.337475,
			0.92549,
			0.953215,
			0.888942,
			0.351369,
			0.929412,
			0.951546,
			0.896226,
			0.365627,
			0.933333,
			0.950018,
			0.903409,
			0.380271,
			0.937255,
			0.948683,
			0.910473,
			0.395289,
			0.941176,
			0.947594,
			0.917399,
			0.410665,
			0.945098,
			0.946809,
			0.924168,
			0.426373,
			0.94902,
			0.946392,
			0.930761,
			0.442367,
			0.952941,
			0.946403,
			0.937159,
			0.458592,
			0.956863,
			0.946903,
			0.943348,
			0.47497,
			0.960784,
			0.947937,
			0.949318,
			0.491426,
			0.964706,
			0.949545,
			0.955063,
			0.50786,
			0.968627,
			0.95174,
			0.960587,
			0.524203,
			0.972549,
			0.954529,
			0.965896,
			0.540361,
			0.976471,
			0.957896,
			0.971003,
			0.556275,
			0.980392,
			0.961812,
			0.975924,
			0.571925,
			0.984314,
			0.966249,
			0.980678,
			0.587206,
			0.988235,
			0.971162,
			0.985282,
			0.602154,
			0.992157,
			0.976511,
			0.989753,
			0.61676,
			0.996078,
			0.982257,
			0.994109,
			0.631017,
			1,
			0.988362,
			0.998364,
			0.644924
		]
	},
	{
		ColorSpace: "Diverging",
		Name: "Plasma (matplotlib)",
		NanColor: [
			0,
			1,
			0
		],
		Source: "https://github.com/BIDS/colormap/blob/master/colormaps.py",
		License: "CC0",
		Creator: "Nathaniel J. Smith & Stefan van der Walt",
		RGBPoints: [
			0,
			0.050383,
			0.029803,
			0.527975,
			0.003922,
			0.063536,
			0.028426,
			0.533124,
			0.007843,
			0.075353,
			0.027206,
			0.538007,
			0.011765,
			0.086222,
			0.026125,
			0.542658,
			0.015686,
			0.096379,
			0.025165,
			0.547103,
			0.019608,
			0.10598,
			0.024309,
			0.551368,
			0.023529,
			0.115124,
			0.023556,
			0.555468,
			0.027451,
			0.123903,
			0.022878,
			0.559423,
			0.031373,
			0.132381,
			0.022258,
			0.56325,
			0.035294,
			0.140603,
			0.021687,
			0.566959,
			0.039216,
			0.148607,
			0.021154,
			0.570562,
			0.043137,
			0.156421,
			0.020651,
			0.574065,
			0.047059,
			0.16407,
			0.020171,
			0.577478,
			0.05098,
			0.171574,
			0.019706,
			0.580806,
			0.054902,
			0.17895,
			0.019252,
			0.584054,
			0.058824,
			0.186213,
			0.018803,
			0.587228,
			0.062745,
			0.193374,
			0.018354,
			0.59033,
			0.066667,
			0.200445,
			0.017902,
			0.593364,
			0.070588,
			0.207435,
			0.017442,
			0.596333,
			0.07451,
			0.21435,
			0.016973,
			0.599239,
			0.078431,
			0.221197,
			0.016497,
			0.602083,
			0.082353,
			0.227983,
			0.016007,
			0.604867,
			0.086275,
			0.234715,
			0.015502,
			0.607592,
			0.090196,
			0.241396,
			0.014979,
			0.610259,
			0.094118,
			0.248032,
			0.014439,
			0.612868,
			0.098039,
			0.254627,
			0.013882,
			0.615419,
			0.101961,
			0.261183,
			0.013308,
			0.617911,
			0.105882,
			0.267703,
			0.012716,
			0.620346,
			0.109804,
			0.274191,
			0.012109,
			0.622722,
			0.113725,
			0.280648,
			0.011488,
			0.625038,
			0.117647,
			0.287076,
			0.010855,
			0.627295,
			0.121569,
			0.293478,
			0.010213,
			0.62949,
			0.12549,
			0.299855,
			0.009561,
			0.631624,
			0.129412,
			0.30621,
			0.008902,
			0.633694,
			0.133333,
			0.312543,
			0.008239,
			0.6357,
			0.137255,
			0.318856,
			0.007576,
			0.63764,
			0.141176,
			0.32515,
			0.006915,
			0.639512,
			0.145098,
			0.331426,
			0.006261,
			0.641316,
			0.14902,
			0.337683,
			0.005618,
			0.643049,
			0.152941,
			0.343925,
			0.004991,
			0.64471,
			0.156863,
			0.35015,
			0.004382,
			0.646298,
			0.160784,
			0.356359,
			0.003798,
			0.64781,
			0.164706,
			0.362553,
			0.003243,
			0.649245,
			0.168627,
			0.368733,
			0.002724,
			0.650601,
			0.172549,
			0.374897,
			0.002245,
			0.651876,
			0.176471,
			0.381047,
			0.001814,
			0.653068,
			0.180392,
			0.387183,
			0.001434,
			0.654177,
			0.184314,
			0.393304,
			0.001114,
			0.655199,
			0.188235,
			0.399411,
			0.000859,
			0.656133,
			0.192157,
			0.405503,
			0.000678,
			0.656977,
			0.196078,
			0.41158,
			0.000577,
			0.65773,
			0.2,
			0.417642,
			0.000564,
			0.65839,
			0.203922,
			0.423689,
			0.000646,
			0.658956,
			0.207843,
			0.429719,
			0.000831,
			0.659425,
			0.211765,
			0.435734,
			0.001127,
			0.659797,
			0.215686,
			0.441732,
			0.00154,
			0.660069,
			0.219608,
			0.447714,
			0.00208,
			0.66024,
			0.223529,
			0.453677,
			0.002755,
			0.66031,
			0.227451,
			0.459623,
			0.003574,
			0.660277,
			0.231373,
			0.46555,
			0.004545,
			0.660139,
			0.235294,
			0.471457,
			0.005678,
			0.659897,
			0.239216,
			0.477344,
			0.00698,
			0.659549,
			0.243137,
			0.48321,
			0.00846,
			0.659095,
			0.247059,
			0.489055,
			0.010127,
			0.658534,
			0.25098,
			0.494877,
			0.01199,
			0.657865,
			0.254902,
			0.500678,
			0.014055,
			0.657088,
			0.258824,
			0.506454,
			0.016333,
			0.656202,
			0.262745,
			0.512206,
			0.018833,
			0.655209,
			0.266667,
			0.517933,
			0.021563,
			0.654109,
			0.270588,
			0.523633,
			0.024532,
			0.652901,
			0.27451,
			0.529306,
			0.027747,
			0.651586,
			0.278431,
			0.534952,
			0.031217,
			0.650165,
			0.282353,
			0.54057,
			0.03495,
			0.64864,
			0.286275,
			0.546157,
			0.038954,
			0.64701,
			0.290196,
			0.551715,
			0.043136,
			0.645277,
			0.294118,
			0.557243,
			0.047331,
			0.643443,
			0.298039,
			0.562738,
			0.051545,
			0.641509,
			0.301961,
			0.568201,
			0.055778,
			0.639477,
			0.305882,
			0.573632,
			0.060028,
			0.637349,
			0.309804,
			0.579029,
			0.064296,
			0.635126,
			0.313725,
			0.584391,
			0.068579,
			0.632812,
			0.317647,
			0.589719,
			0.072878,
			0.630408,
			0.321569,
			0.595011,
			0.07719,
			0.627917,
			0.32549,
			0.600266,
			0.081516,
			0.625342,
			0.329412,
			0.605485,
			0.085854,
			0.622686,
			0.333333,
			0.610667,
			0.090204,
			0.619951,
			0.337255,
			0.615812,
			0.094564,
			0.61714,
			0.341176,
			0.620919,
			0.098934,
			0.614257,
			0.345098,
			0.625987,
			0.103312,
			0.611305,
			0.34902,
			0.631017,
			0.107699,
			0.608287,
			0.352941,
			0.636008,
			0.112092,
			0.605205,
			0.356863,
			0.640959,
			0.116492,
			0.602065,
			0.360784,
			0.645872,
			0.120898,
			0.598867,
			0.364706,
			0.650746,
			0.125309,
			0.595617,
			0.368627,
			0.65558,
			0.129725,
			0.592317,
			0.372549,
			0.660374,
			0.134144,
			0.588971,
			0.376471,
			0.665129,
			0.138566,
			0.585582,
			0.380392,
			0.669845,
			0.142992,
			0.582154,
			0.384314,
			0.674522,
			0.147419,
			0.578688,
			0.388235,
			0.67916,
			0.151848,
			0.575189,
			0.392157,
			0.683758,
			0.156278,
			0.57166,
			0.396078,
			0.688318,
			0.160709,
			0.568103,
			0.4,
			0.69284,
			0.165141,
			0.564522,
			0.403922,
			0.697324,
			0.169573,
			0.560919,
			0.407843,
			0.701769,
			0.174005,
			0.557296,
			0.411765,
			0.706178,
			0.178437,
			0.553657,
			0.415686,
			0.710549,
			0.182868,
			0.550004,
			0.419608,
			0.714883,
			0.187299,
			0.546338,
			0.423529,
			0.719181,
			0.191729,
			0.542663,
			0.427451,
			0.723444,
			0.196158,
			0.538981,
			0.431373,
			0.72767,
			0.200586,
			0.535293,
			0.435294,
			0.731862,
			0.205013,
			0.531601,
			0.439216,
			0.736019,
			0.209439,
			0.527908,
			0.443137,
			0.740143,
			0.213864,
			0.524216,
			0.447059,
			0.744232,
			0.218288,
			0.520524,
			0.45098,
			0.748289,
			0.222711,
			0.516834,
			0.454902,
			0.752312,
			0.227133,
			0.513149,
			0.458824,
			0.756304,
			0.231555,
			0.509468,
			0.462745,
			0.760264,
			0.235976,
			0.505794,
			0.466667,
			0.764193,
			0.240396,
			0.502126,
			0.470588,
			0.76809,
			0.244817,
			0.498465,
			0.47451,
			0.771958,
			0.249237,
			0.494813,
			0.478431,
			0.775796,
			0.253658,
			0.491171,
			0.482353,
			0.779604,
			0.258078,
			0.487539,
			0.486275,
			0.783383,
			0.2625,
			0.483918,
			0.490196,
			0.787133,
			0.266922,
			0.480307,
			0.494118,
			0.790855,
			0.271345,
			0.476706,
			0.498039,
			0.794549,
			0.27577,
			0.473117,
			0.501961,
			0.798216,
			0.280197,
			0.469538,
			0.505882,
			0.801855,
			0.284626,
			0.465971,
			0.509804,
			0.805467,
			0.289057,
			0.462415,
			0.513725,
			0.809052,
			0.293491,
			0.45887,
			0.517647,
			0.812612,
			0.297928,
			0.455338,
			0.521569,
			0.816144,
			0.302368,
			0.451816,
			0.52549,
			0.819651,
			0.306812,
			0.448306,
			0.529412,
			0.823132,
			0.311261,
			0.444806,
			0.533333,
			0.826588,
			0.315714,
			0.441316,
			0.537255,
			0.830018,
			0.320172,
			0.437836,
			0.541176,
			0.833422,
			0.324635,
			0.434366,
			0.545098,
			0.836801,
			0.329105,
			0.430905,
			0.54902,
			0.840155,
			0.33358,
			0.427455,
			0.552941,
			0.843484,
			0.338062,
			0.424013,
			0.556863,
			0.846788,
			0.342551,
			0.420579,
			0.560784,
			0.850066,
			0.347048,
			0.417153,
			0.564706,
			0.853319,
			0.351553,
			0.413734,
			0.568627,
			0.856547,
			0.356066,
			0.410322,
			0.572549,
			0.85975,
			0.360588,
			0.406917,
			0.576471,
			0.862927,
			0.365119,
			0.403519,
			0.580392,
			0.866078,
			0.36966,
			0.400126,
			0.584314,
			0.869203,
			0.374212,
			0.396738,
			0.588235,
			0.872303,
			0.378774,
			0.393355,
			0.592157,
			0.875376,
			0.383347,
			0.389976,
			0.596078,
			0.878423,
			0.387932,
			0.3866,
			0.6,
			0.881443,
			0.392529,
			0.383229,
			0.603922,
			0.884436,
			0.397139,
			0.37986,
			0.607843,
			0.887402,
			0.401762,
			0.376494,
			0.611765,
			0.89034,
			0.406398,
			0.37313,
			0.615686,
			0.89325,
			0.411048,
			0.369768,
			0.619608,
			0.896131,
			0.415712,
			0.366407,
			0.623529,
			0.898984,
			0.420392,
			0.363047,
			0.627451,
			0.901807,
			0.425087,
			0.359688,
			0.631373,
			0.904601,
			0.429797,
			0.356329,
			0.635294,
			0.907365,
			0.434524,
			0.35297,
			0.639216,
			0.910098,
			0.439268,
			0.34961,
			0.643137,
			0.9128,
			0.444029,
			0.346251,
			0.647059,
			0.915471,
			0.448807,
			0.34289,
			0.65098,
			0.918109,
			0.453603,
			0.339529,
			0.654902,
			0.920714,
			0.458417,
			0.336166,
			0.658824,
			0.923287,
			0.463251,
			0.332801,
			0.662745,
			0.925825,
			0.468103,
			0.329435,
			0.666667,
			0.928329,
			0.472975,
			0.326067,
			0.670588,
			0.930798,
			0.477867,
			0.322697,
			0.67451,
			0.933232,
			0.48278,
			0.319325,
			0.678431,
			0.93563,
			0.487712,
			0.315952,
			0.682353,
			0.93799,
			0.492667,
			0.312575,
			0.686275,
			0.940313,
			0.497642,
			0.309197,
			0.690196,
			0.942598,
			0.502639,
			0.305816,
			0.694118,
			0.944844,
			0.507658,
			0.302433,
			0.698039,
			0.947051,
			0.512699,
			0.299049,
			0.701961,
			0.949217,
			0.517763,
			0.295662,
			0.705882,
			0.951344,
			0.52285,
			0.292275,
			0.709804,
			0.953428,
			0.52796,
			0.288883,
			0.713725,
			0.95547,
			0.533093,
			0.28549,
			0.717647,
			0.957469,
			0.53825,
			0.282096,
			0.721569,
			0.959424,
			0.543431,
			0.278701,
			0.72549,
			0.961336,
			0.548636,
			0.275305,
			0.729412,
			0.963203,
			0.553865,
			0.271909,
			0.733333,
			0.965024,
			0.559118,
			0.268513,
			0.737255,
			0.966798,
			0.564396,
			0.265118,
			0.741176,
			0.968526,
			0.5697,
			0.261721,
			0.745098,
			0.970205,
			0.575028,
			0.258325,
			0.74902,
			0.971835,
			0.580382,
			0.254931,
			0.752941,
			0.973416,
			0.585761,
			0.25154,
			0.756863,
			0.974947,
			0.591165,
			0.248151,
			0.760784,
			0.976428,
			0.596595,
			0.244767,
			0.764706,
			0.977856,
			0.602051,
			0.241387,
			0.768627,
			0.979233,
			0.607532,
			0.238013,
			0.772549,
			0.980556,
			0.613039,
			0.234646,
			0.776471,
			0.981826,
			0.618572,
			0.231287,
			0.780392,
			0.983041,
			0.624131,
			0.227937,
			0.784314,
			0.984199,
			0.629718,
			0.224595,
			0.788235,
			0.985301,
			0.63533,
			0.221265,
			0.792157,
			0.986345,
			0.640969,
			0.217948,
			0.796078,
			0.987332,
			0.646633,
			0.214648,
			0.8,
			0.98826,
			0.652325,
			0.211364,
			0.803922,
			0.989128,
			0.658043,
			0.2081,
			0.807843,
			0.989935,
			0.663787,
			0.204859,
			0.811765,
			0.990681,
			0.669558,
			0.201642,
			0.815686,
			0.991365,
			0.675355,
			0.198453,
			0.819608,
			0.991985,
			0.681179,
			0.195295,
			0.823529,
			0.992541,
			0.68703,
			0.19217,
			0.827451,
			0.993032,
			0.692907,
			0.189084,
			0.831373,
			0.993456,
			0.69881,
			0.186041,
			0.835294,
			0.993814,
			0.704741,
			0.183043,
			0.839216,
			0.994103,
			0.710698,
			0.180097,
			0.843137,
			0.994324,
			0.716681,
			0.177208,
			0.847059,
			0.994474,
			0.722691,
			0.174381,
			0.85098,
			0.994553,
			0.728728,
			0.171622,
			0.854902,
			0.994561,
			0.734791,
			0.168938,
			0.858824,
			0.994495,
			0.74088,
			0.166335,
			0.862745,
			0.994355,
			0.746995,
			0.163821,
			0.866667,
			0.994141,
			0.753137,
			0.161404,
			0.870588,
			0.993851,
			0.759304,
			0.159092,
			0.87451,
			0.993482,
			0.765499,
			0.156891,
			0.878431,
			0.993033,
			0.77172,
			0.154808,
			0.882353,
			0.992505,
			0.777967,
			0.152855,
			0.886275,
			0.991897,
			0.784239,
			0.151042,
			0.890196,
			0.991209,
			0.790537,
			0.149377,
			0.894118,
			0.990439,
			0.796859,
			0.14787,
			0.898039,
			0.989587,
			0.803205,
			0.146529,
			0.901961,
			0.988648,
			0.809579,
			0.145357,
			0.905882,
			0.987621,
			0.815978,
			0.144363,
			0.909804,
			0.986509,
			0.822401,
			0.143557,
			0.913725,
			0.985314,
			0.828846,
			0.142945,
			0.917647,
			0.984031,
			0.835315,
			0.142528,
			0.921569,
			0.982653,
			0.841812,
			0.142303,
			0.92549,
			0.98119,
			0.848329,
			0.142279,
			0.929412,
			0.979644,
			0.854866,
			0.142453,
			0.933333,
			0.977995,
			0.861432,
			0.142808,
			0.937255,
			0.976265,
			0.868016,
			0.143351,
			0.941176,
			0.974443,
			0.874622,
			0.144061,
			0.945098,
			0.97253,
			0.88125,
			0.144923,
			0.94902,
			0.970533,
			0.887896,
			0.145919,
			0.952941,
			0.968443,
			0.894564,
			0.147014,
			0.956863,
			0.966271,
			0.901249,
			0.14818,
			0.960784,
			0.964021,
			0.90795,
			0.14937,
			0.964706,
			0.961681,
			0.914672,
			0.15052,
			0.968627,
			0.959276,
			0.921407,
			0.151566,
			0.972549,
			0.956808,
			0.928152,
			0.152409,
			0.976471,
			0.954287,
			0.934908,
			0.152921,
			0.980392,
			0.951726,
			0.941671,
			0.152925,
			0.984314,
			0.949151,
			0.948435,
			0.152178,
			0.988235,
			0.946602,
			0.95519,
			0.150328,
			0.992157,
			0.944152,
			0.961916,
			0.146861,
			0.996078,
			0.941896,
			0.96859,
			0.140956,
			1,
			0.940015,
			0.975158,
			0.131326
		]
	},
	{
		ColorSpace: "Diverging",
		Name: "Viridis (matplotlib)",
		NanColor: [
			1,
			0,
			0
		],
		Source: "https://github.com/BIDS/colormap/blob/master/colormaps.py",
		License: "CC0",
		Creator: "Eric Firing",
		RGBPoints: [
			0,
			0.267004,
			0.004874,
			0.329415,
			0.003922,
			0.26851,
			0.009605,
			0.335427,
			0.007843,
			0.269944,
			0.014625,
			0.341379,
			0.011765,
			0.271305,
			0.019942,
			0.347269,
			0.015686,
			0.272594,
			0.025563,
			0.353093,
			0.019608,
			0.273809,
			0.031497,
			0.358853,
			0.023529,
			0.274952,
			0.037752,
			0.364543,
			0.027451,
			0.276022,
			0.044167,
			0.370164,
			0.031373,
			0.277018,
			0.050344,
			0.375715,
			0.035294,
			0.277941,
			0.056324,
			0.381191,
			0.039216,
			0.278791,
			0.062145,
			0.386592,
			0.043137,
			0.279566,
			0.067836,
			0.391917,
			0.047059,
			0.280267,
			0.073417,
			0.397163,
			0.05098,
			0.280894,
			0.078907,
			0.402329,
			0.054902,
			0.281446,
			0.08432,
			0.407414,
			0.058824,
			0.281924,
			0.089666,
			0.412415,
			0.062745,
			0.282327,
			0.094955,
			0.417331,
			0.066667,
			0.282656,
			0.100196,
			0.42216,
			0.070588,
			0.28291,
			0.105393,
			0.426902,
			0.07451,
			0.283091,
			0.110553,
			0.431554,
			0.078431,
			0.283197,
			0.11568,
			0.436115,
			0.082353,
			0.283229,
			0.120777,
			0.440584,
			0.086275,
			0.283187,
			0.125848,
			0.44496,
			0.090196,
			0.283072,
			0.130895,
			0.449241,
			0.094118,
			0.282884,
			0.13592,
			0.453427,
			0.098039,
			0.282623,
			0.140926,
			0.457517,
			0.101961,
			0.28229,
			0.145912,
			0.46151,
			0.105882,
			0.281887,
			0.150881,
			0.465405,
			0.109804,
			0.281412,
			0.155834,
			0.469201,
			0.113725,
			0.280868,
			0.160771,
			0.472899,
			0.117647,
			0.280255,
			0.165693,
			0.476498,
			0.121569,
			0.279574,
			0.170599,
			0.479997,
			0.12549,
			0.278826,
			0.17549,
			0.483397,
			0.129412,
			0.278012,
			0.180367,
			0.486697,
			0.133333,
			0.277134,
			0.185228,
			0.489898,
			0.137255,
			0.276194,
			0.190074,
			0.493001,
			0.141176,
			0.275191,
			0.194905,
			0.496005,
			0.145098,
			0.274128,
			0.199721,
			0.498911,
			0.14902,
			0.273006,
			0.20452,
			0.501721,
			0.152941,
			0.271828,
			0.209303,
			0.504434,
			0.156863,
			0.270595,
			0.214069,
			0.507052,
			0.160784,
			0.269308,
			0.218818,
			0.509577,
			0.164706,
			0.267968,
			0.223549,
			0.512008,
			0.168627,
			0.26658,
			0.228262,
			0.514349,
			0.172549,
			0.265145,
			0.232956,
			0.516599,
			0.176471,
			0.263663,
			0.237631,
			0.518762,
			0.180392,
			0.262138,
			0.242286,
			0.520837,
			0.184314,
			0.260571,
			0.246922,
			0.522828,
			0.188235,
			0.258965,
			0.251537,
			0.524736,
			0.192157,
			0.257322,
			0.25613,
			0.526563,
			0.196078,
			0.255645,
			0.260703,
			0.528312,
			0.2,
			0.253935,
			0.265254,
			0.529983,
			0.203922,
			0.252194,
			0.269783,
			0.531579,
			0.207843,
			0.250425,
			0.27429,
			0.533103,
			0.211765,
			0.248629,
			0.278775,
			0.534556,
			0.215686,
			0.246811,
			0.283237,
			0.535941,
			0.219608,
			0.244972,
			0.287675,
			0.53726,
			0.223529,
			0.243113,
			0.292092,
			0.538516,
			0.227451,
			0.241237,
			0.296485,
			0.539709,
			0.231373,
			0.239346,
			0.300855,
			0.540844,
			0.235294,
			0.237441,
			0.305202,
			0.541921,
			0.239216,
			0.235526,
			0.309527,
			0.542944,
			0.243137,
			0.233603,
			0.313828,
			0.543914,
			0.247059,
			0.231674,
			0.318106,
			0.544834,
			0.25098,
			0.229739,
			0.322361,
			0.545706,
			0.254902,
			0.227802,
			0.326594,
			0.546532,
			0.258824,
			0.225863,
			0.330805,
			0.547314,
			0.262745,
			0.223925,
			0.334994,
			0.548053,
			0.266667,
			0.221989,
			0.339161,
			0.548752,
			0.270588,
			0.220057,
			0.343307,
			0.549413,
			0.27451,
			0.21813,
			0.347432,
			0.550038,
			0.278431,
			0.21621,
			0.351535,
			0.550627,
			0.282353,
			0.214298,
			0.355619,
			0.551184,
			0.286275,
			0.212395,
			0.359683,
			0.55171,
			0.290196,
			0.210503,
			0.363727,
			0.552206,
			0.294118,
			0.208623,
			0.367752,
			0.552675,
			0.298039,
			0.206756,
			0.371758,
			0.553117,
			0.301961,
			0.204903,
			0.375746,
			0.553533,
			0.305882,
			0.203063,
			0.379716,
			0.553925,
			0.309804,
			0.201239,
			0.38367,
			0.554294,
			0.313725,
			0.19943,
			0.387607,
			0.554642,
			0.317647,
			0.197636,
			0.391528,
			0.554969,
			0.321569,
			0.19586,
			0.395433,
			0.555276,
			0.32549,
			0.1941,
			0.399323,
			0.555565,
			0.329412,
			0.192357,
			0.403199,
			0.555836,
			0.333333,
			0.190631,
			0.407061,
			0.556089,
			0.337255,
			0.188923,
			0.41091,
			0.556326,
			0.341176,
			0.187231,
			0.414746,
			0.556547,
			0.345098,
			0.185556,
			0.41857,
			0.556753,
			0.34902,
			0.183898,
			0.422383,
			0.556944,
			0.352941,
			0.182256,
			0.426184,
			0.55712,
			0.356863,
			0.180629,
			0.429975,
			0.557282,
			0.360784,
			0.179019,
			0.433756,
			0.55743,
			0.364706,
			0.177423,
			0.437527,
			0.557565,
			0.368627,
			0.175841,
			0.44129,
			0.557685,
			0.372549,
			0.174274,
			0.445044,
			0.557792,
			0.376471,
			0.172719,
			0.448791,
			0.557885,
			0.380392,
			0.171176,
			0.45253,
			0.557965,
			0.384314,
			0.169646,
			0.456262,
			0.55803,
			0.388235,
			0.168126,
			0.459988,
			0.558082,
			0.392157,
			0.166617,
			0.463708,
			0.558119,
			0.396078,
			0.165117,
			0.467423,
			0.558141,
			0.4,
			0.163625,
			0.471133,
			0.558148,
			0.403922,
			0.162142,
			0.474838,
			0.55814,
			0.407843,
			0.160665,
			0.47854,
			0.558115,
			0.411765,
			0.159194,
			0.482237,
			0.558073,
			0.415686,
			0.157729,
			0.485932,
			0.558013,
			0.419608,
			0.15627,
			0.489624,
			0.557936,
			0.423529,
			0.154815,
			0.493313,
			0.55784,
			0.427451,
			0.153364,
			0.497,
			0.557724,
			0.431373,
			0.151918,
			0.500685,
			0.557587,
			0.435294,
			0.150476,
			0.504369,
			0.55743,
			0.439216,
			0.149039,
			0.508051,
			0.55725,
			0.443137,
			0.147607,
			0.511733,
			0.557049,
			0.447059,
			0.14618,
			0.515413,
			0.556823,
			0.45098,
			0.144759,
			0.519093,
			0.556572,
			0.454902,
			0.143343,
			0.522773,
			0.556295,
			0.458824,
			0.141935,
			0.526453,
			0.555991,
			0.462745,
			0.140536,
			0.530132,
			0.555659,
			0.466667,
			0.139147,
			0.533812,
			0.555298,
			0.470588,
			0.13777,
			0.537492,
			0.554906,
			0.47451,
			0.136408,
			0.541173,
			0.554483,
			0.478431,
			0.135066,
			0.544853,
			0.554029,
			0.482353,
			0.133743,
			0.548535,
			0.553541,
			0.486275,
			0.132444,
			0.552216,
			0.553018,
			0.490196,
			0.131172,
			0.555899,
			0.552459,
			0.494118,
			0.129933,
			0.559582,
			0.551864,
			0.498039,
			0.128729,
			0.563265,
			0.551229,
			0.501961,
			0.127568,
			0.566949,
			0.550556,
			0.505882,
			0.126453,
			0.570633,
			0.549841,
			0.509804,
			0.125394,
			0.574318,
			0.549086,
			0.513725,
			0.124395,
			0.578002,
			0.548287,
			0.517647,
			0.123463,
			0.581687,
			0.547445,
			0.521569,
			0.122606,
			0.585371,
			0.546557,
			0.52549,
			0.121831,
			0.589055,
			0.545623,
			0.529412,
			0.121148,
			0.592739,
			0.544641,
			0.533333,
			0.120565,
			0.596422,
			0.543611,
			0.537255,
			0.120092,
			0.600104,
			0.54253,
			0.541176,
			0.119738,
			0.603785,
			0.5414,
			0.545098,
			0.119512,
			0.607464,
			0.540218,
			0.54902,
			0.119423,
			0.611141,
			0.538982,
			0.552941,
			0.119483,
			0.614817,
			0.537692,
			0.556863,
			0.119699,
			0.61849,
			0.536347,
			0.560784,
			0.120081,
			0.622161,
			0.534946,
			0.564706,
			0.120638,
			0.625828,
			0.533488,
			0.568627,
			0.12138,
			0.629492,
			0.531973,
			0.572549,
			0.122312,
			0.633153,
			0.530398,
			0.576471,
			0.123444,
			0.636809,
			0.528763,
			0.580392,
			0.12478,
			0.640461,
			0.527068,
			0.584314,
			0.126326,
			0.644107,
			0.525311,
			0.588235,
			0.128087,
			0.647749,
			0.523491,
			0.592157,
			0.130067,
			0.651384,
			0.521608,
			0.596078,
			0.132268,
			0.655014,
			0.519661,
			0.6,
			0.134692,
			0.658636,
			0.517649,
			0.603922,
			0.137339,
			0.662252,
			0.515571,
			0.607843,
			0.14021,
			0.665859,
			0.513427,
			0.611765,
			0.143303,
			0.669459,
			0.511215,
			0.615686,
			0.146616,
			0.67305,
			0.508936,
			0.619608,
			0.150148,
			0.676631,
			0.506589,
			0.623529,
			0.153894,
			0.680203,
			0.504172,
			0.627451,
			0.157851,
			0.683765,
			0.501686,
			0.631373,
			0.162016,
			0.687316,
			0.499129,
			0.635294,
			0.166383,
			0.690856,
			0.496502,
			0.639216,
			0.170948,
			0.694384,
			0.493803,
			0.643137,
			0.175707,
			0.6979,
			0.491033,
			0.647059,
			0.180653,
			0.701402,
			0.488189,
			0.65098,
			0.185783,
			0.704891,
			0.485273,
			0.654902,
			0.19109,
			0.708366,
			0.482284,
			0.658824,
			0.196571,
			0.711827,
			0.479221,
			0.662745,
			0.202219,
			0.715272,
			0.476084,
			0.666667,
			0.20803,
			0.718701,
			0.472873,
			0.670588,
			0.214,
			0.722114,
			0.469588,
			0.67451,
			0.220124,
			0.725509,
			0.466226,
			0.678431,
			0.226397,
			0.728888,
			0.462789,
			0.682353,
			0.232815,
			0.732247,
			0.459277,
			0.686275,
			0.239374,
			0.735588,
			0.455688,
			0.690196,
			0.24607,
			0.73891,
			0.452024,
			0.694118,
			0.252899,
			0.742211,
			0.448284,
			0.698039,
			0.259857,
			0.745492,
			0.444467,
			0.701961,
			0.266941,
			0.748751,
			0.440573,
			0.705882,
			0.274149,
			0.751988,
			0.436601,
			0.709804,
			0.281477,
			0.755203,
			0.432552,
			0.713725,
			0.288921,
			0.758394,
			0.428426,
			0.717647,
			0.296479,
			0.761561,
			0.424223,
			0.721569,
			0.304148,
			0.764704,
			0.419943,
			0.72549,
			0.311925,
			0.767822,
			0.415586,
			0.729412,
			0.319809,
			0.770914,
			0.411152,
			0.733333,
			0.327796,
			0.77398,
			0.40664,
			0.737255,
			0.335885,
			0.777018,
			0.402049,
			0.741176,
			0.344074,
			0.780029,
			0.397381,
			0.745098,
			0.35236,
			0.783011,
			0.392636,
			0.74902,
			0.360741,
			0.785964,
			0.387814,
			0.752941,
			0.369214,
			0.788888,
			0.382914,
			0.756863,
			0.377779,
			0.791781,
			0.377939,
			0.760784,
			0.386433,
			0.794644,
			0.372886,
			0.764706,
			0.395174,
			0.797475,
			0.367757,
			0.768627,
			0.404001,
			0.800275,
			0.362552,
			0.772549,
			0.412913,
			0.803041,
			0.357269,
			0.776471,
			0.421908,
			0.805774,
			0.35191,
			0.780392,
			0.430983,
			0.808473,
			0.346476,
			0.784314,
			0.440137,
			0.811138,
			0.340967,
			0.788235,
			0.449368,
			0.813768,
			0.335384,
			0.792157,
			0.458674,
			0.816363,
			0.329727,
			0.796078,
			0.468053,
			0.818921,
			0.323998,
			0.8,
			0.477504,
			0.821444,
			0.318195,
			0.803922,
			0.487026,
			0.823929,
			0.312321,
			0.807843,
			0.496615,
			0.826376,
			0.306377,
			0.811765,
			0.506271,
			0.828786,
			0.300362,
			0.815686,
			0.515992,
			0.831158,
			0.294279,
			0.819608,
			0.525776,
			0.833491,
			0.288127,
			0.823529,
			0.535621,
			0.835785,
			0.281908,
			0.827451,
			0.545524,
			0.838039,
			0.275626,
			0.831373,
			0.555484,
			0.840254,
			0.269281,
			0.835294,
			0.565498,
			0.84243,
			0.262877,
			0.839216,
			0.575563,
			0.844566,
			0.256415,
			0.843137,
			0.585678,
			0.846661,
			0.249897,
			0.847059,
			0.595839,
			0.848717,
			0.243329,
			0.85098,
			0.606045,
			0.850733,
			0.236712,
			0.854902,
			0.616293,
			0.852709,
			0.230052,
			0.858824,
			0.626579,
			0.854645,
			0.223353,
			0.862745,
			0.636902,
			0.856542,
			0.21662,
			0.866667,
			0.647257,
			0.8584,
			0.209861,
			0.870588,
			0.657642,
			0.860219,
			0.203082,
			0.87451,
			0.668054,
			0.861999,
			0.196293,
			0.878431,
			0.678489,
			0.863742,
			0.189503,
			0.882353,
			0.688944,
			0.865448,
			0.182725,
			0.886275,
			0.699415,
			0.867117,
			0.175971,
			0.890196,
			0.709898,
			0.868751,
			0.169257,
			0.894118,
			0.720391,
			0.87035,
			0.162603,
			0.898039,
			0.730889,
			0.871916,
			0.156029,
			0.901961,
			0.741388,
			0.873449,
			0.149561,
			0.905882,
			0.751884,
			0.874951,
			0.143228,
			0.909804,
			0.762373,
			0.876424,
			0.137064,
			0.913725,
			0.772852,
			0.877868,
			0.131109,
			0.917647,
			0.783315,
			0.879285,
			0.125405,
			0.921569,
			0.79376,
			0.880678,
			0.120005,
			0.92549,
			0.804182,
			0.882046,
			0.114965,
			0.929412,
			0.814576,
			0.883393,
			0.110347,
			0.933333,
			0.82494,
			0.88472,
			0.106217,
			0.937255,
			0.83527,
			0.886029,
			0.102646,
			0.941176,
			0.845561,
			0.887322,
			0.099702,
			0.945098,
			0.85581,
			0.888601,
			0.097452,
			0.94902,
			0.866013,
			0.889868,
			0.095953,
			0.952941,
			0.876168,
			0.891125,
			0.09525,
			0.956863,
			0.886271,
			0.892374,
			0.095374,
			0.960784,
			0.89632,
			0.893616,
			0.096335,
			0.964706,
			0.906311,
			0.894855,
			0.098125,
			0.968627,
			0.916242,
			0.896091,
			0.100717,
			0.972549,
			0.926106,
			0.89733,
			0.104071,
			0.976471,
			0.935904,
			0.89857,
			0.108131,
			0.980392,
			0.945636,
			0.899815,
			0.112838,
			0.984314,
			0.9553,
			0.901065,
			0.118128,
			0.988235,
			0.964894,
			0.902323,
			0.123941,
			0.992157,
			0.974417,
			0.90359,
			0.130215,
			0.996078,
			0.983868,
			0.904867,
			0.136897,
			1,
			0.993248,
			0.906157,
			0.143936
		]
	},
	{
		ShowIndexedColorActiveValues: 1,
		IndexedColors: [
			0.07,
			0.5,
			0.7,
			1,
			1,
			1,
			0.85,
			1,
			1,
			0.8,
			0.5,
			1,
			0.76,
			1,
			0,
			1,
			0.71,
			0.71,
			0.5,
			0.5,
			0.5,
			0.05,
			0.05,
			1,
			1,
			0.05,
			0.05,
			0.7,
			1,
			1,
			0.7,
			0.89,
			0.96,
			0.67,
			0.36,
			0.95,
			0.54,
			1,
			0,
			0.75,
			0.65,
			0.65,
			0.5,
			0.6,
			0.6,
			1,
			0.5,
			0,
			1,
			1,
			0.19,
			0.12,
			0.94,
			0.12,
			0.5,
			0.82,
			0.89,
			0.56,
			0.25,
			0.83,
			0.24,
			1,
			0,
			0.9,
			0.9,
			0.9,
			0.75,
			0.76,
			0.78,
			0.65,
			0.65,
			0.67,
			0.54,
			0.6,
			0.78,
			0.61,
			0.48,
			0.78,
			0.5,
			0.48,
			0.78,
			0.44,
			0.48,
			0.78,
			0.36,
			0.48,
			0.76,
			1,
			0.48,
			0.38,
			0.49,
			0.5,
			0.69,
			0.76,
			0.56,
			0.56,
			0.4,
			0.56,
			0.56,
			0.74,
			0.5,
			0.89,
			1,
			0.63,
			0,
			0.65,
			0.16,
			0.16,
			0.36,
			0.72,
			0.82,
			0.44,
			0.18,
			0.69,
			0,
			1,
			0,
			0.58,
			1,
			1,
			0.58,
			0.88,
			0.88,
			0.45,
			0.76,
			0.79,
			0.33,
			0.71,
			0.71,
			0.23,
			0.62,
			0.62,
			0.14,
			0.56,
			0.56,
			0.04,
			0.49,
			0.55,
			0,
			0.41,
			0.52,
			0.88,
			0.88,
			1,
			1,
			0.85,
			0.56,
			0.65,
			0.46,
			0.45,
			0.4,
			0.5,
			0.5,
			0.62,
			0.39,
			0.71,
			0.83,
			0.48,
			0,
			0.58,
			0,
			0.58,
			0.26,
			0.62,
			0.69,
			0.34,
			0.09,
			0.56,
			0,
			0.79,
			0,
			0.44,
			0.83,
			1,
			1,
			1,
			0.78,
			0.85,
			1,
			0.78,
			0.78,
			1,
			0.78,
			0.64,
			1,
			0.78,
			0.56,
			1,
			0.78,
			0.38,
			1,
			0.78,
			0.27,
			1,
			0.78,
			0.19,
			1,
			0.78,
			0.12,
			1,
			0.78,
			0,
			1,
			0.61,
			0,
			0.9,
			0.46,
			0,
			0.83,
			0.32,
			0,
			0.75,
			0.22,
			0,
			0.67,
			0.14,
			0.3,
			0.76,
			1,
			0.3,
			0.65,
			1,
			0.13,
			0.58,
			0.84,
			0.15,
			0.49,
			0.67,
			0.15,
			0.4,
			0.59,
			0.09,
			0.33,
			0.53,
			0.96,
			0.93,
			0.82,
			0.8,
			0.82,
			0.12,
			0.71,
			0.71,
			0.76,
			0.65,
			0.33,
			0.3,
			0.34,
			0.35,
			0.38,
			0.62,
			0.31,
			0.71,
			0.67,
			0.36,
			0,
			0.46,
			0.31,
			0.27,
			0.26,
			0.51,
			0.59,
			0.26,
			0,
			0.4,
			0,
			0.49,
			0,
			0.44,
			0.67,
			0.98,
			0,
			0.73,
			1,
			0,
			0.63,
			1,
			0,
			0.56,
			1,
			0,
			0.5,
			1,
			0,
			0.42,
			1,
			0.33,
			0.36,
			0.95,
			0.47,
			0.36,
			0.89,
			0.54,
			0.31,
			0.89,
			0.63,
			0.21,
			0.83,
			0.7,
			0.12,
			0.83,
			0.7,
			0.12,
			0.73,
			0.7,
			0.05,
			0.65,
			0.74,
			0.05,
			0.53,
			0.78,
			0,
			0.4,
			0.8,
			0,
			0.35,
			0.82,
			0,
			0.31,
			0.85,
			0,
			0.27,
			0.88,
			0,
			0.22,
			0.9,
			0,
			0.18,
			0.91,
			0,
			0.15,
			0.92,
			0,
			0.14,
			0.93,
			0,
			0.13,
			0.94,
			0,
			0.12,
			0.95,
			0,
			0.11,
			0.96,
			0,
			0.1,
			0.97,
			0,
			0.09,
			0.98,
			0,
			0.08,
			0.99,
			0,
			0.07,
			1,
			0,
			0.06
		],
		Annotations: [
			0,
			"Xx",
			1,
			"H",
			2,
			"He",
			3,
			"Li",
			4,
			"Be",
			5,
			"B",
			6,
			"C",
			7,
			"N",
			8,
			"O",
			9,
			"F",
			10,
			"Ne",
			11,
			"Na",
			12,
			"Mg",
			13,
			"Al",
			14,
			"Si",
			15,
			"P",
			16,
			"S",
			17,
			"Cl",
			18,
			"Ar",
			19,
			"K",
			20,
			"Ca",
			21,
			"Sc",
			22,
			"Ti",
			23,
			"V",
			24,
			"Cr",
			25,
			"Mn",
			26,
			"Fe",
			27,
			"Co",
			28,
			"Ni",
			29,
			"Cu",
			30,
			"Zn",
			31,
			"Ga",
			32,
			"Ge",
			33,
			"As",
			34,
			"Se",
			35,
			"Br",
			36,
			"Kr",
			37,
			"Rb",
			38,
			"Sr",
			39,
			"Y",
			40,
			"Zr",
			41,
			"Nb",
			42,
			"Mo",
			43,
			"Tc",
			44,
			"Ru",
			45,
			"Rh",
			46,
			"Pd",
			47,
			"Ag",
			48,
			"Cd",
			49,
			"In",
			50,
			"Sn",
			51,
			"Sb",
			52,
			"Te",
			53,
			"I",
			54,
			"Xe",
			55,
			"Cs",
			56,
			"Ba",
			57,
			"La",
			58,
			"Ce",
			59,
			"Pr",
			60,
			"Nd",
			61,
			"Pm",
			62,
			"Sm",
			63,
			"Eu",
			64,
			"Gd",
			65,
			"Tb",
			66,
			"Dy",
			67,
			"Ho",
			68,
			"Er",
			69,
			"Tm",
			70,
			"Yb",
			71,
			"Lu",
			72,
			"Hf",
			73,
			"Ta",
			74,
			"W",
			75,
			"Re",
			76,
			"Os",
			77,
			"Ir",
			78,
			"Pt",
			79,
			"Au",
			80,
			"Hg",
			81,
			"Tl",
			82,
			"Pb",
			83,
			"Bi",
			84,
			"Po",
			85,
			"At",
			86,
			"Rn",
			87,
			"Fr",
			88,
			"Ra",
			89,
			"Ac",
			90,
			"Th",
			91,
			"Pa",
			92,
			"U",
			93,
			"Np",
			94,
			"Pu",
			95,
			"Am",
			96,
			"Cm",
			97,
			"Bk",
			98,
			"Cf",
			99,
			"Es",
			100,
			"Fm",
			101,
			"Md",
			102,
			"No",
			103,
			"Lr",
			104,
			"Rf",
			105,
			"Db",
			106,
			"Sg",
			107,
			"Bh",
			108,
			"Hs",
			109,
			"Mt",
			110,
			"Ds",
			111,
			"Rg",
			112,
			"Cn",
			113,
			"Uut",
			114,
			"Uuq",
			115,
			"Uup",
			116,
			"Uuh",
			117,
			"Uus",
			118,
			"Uuo"
		],
		Name: "BlueObeliskElements"
	}
];




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Rendering/Core/ColorTransferFunction/ColorMapsLite.js":
/*!*********************************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Rendering/Core/ColorTransferFunction/ColorMapsLite.js ***!
  \*********************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkColorMaps; });
/* harmony import */ var _LiteColorMaps_json_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./LiteColorMaps.json.js */ "../node_modules/@kitware/vtk.js/Rendering/Core/ColorTransferFunction/LiteColorMaps.json.js");


var presetMap = Object.create(null);
_LiteColorMaps_json_js__WEBPACK_IMPORTED_MODULE_0__["v"].filter(function (p) {
  return p.RGBPoints;
}).filter(function (p) {
  return p.ColorSpace !== 'CIELAB';
}).forEach(function (p) {
  presetMap[p.Name] = p;
}); // ----------------------------------------------------------------------------

var rgbPresetNames = Object.keys(presetMap);
rgbPresetNames.sort(); // ----------------------------------------------------------------------------

function getPresetByName(name) {
  return presetMap[name];
} // ----------------------------------------------------------------------------


function addPreset(preset) {
  if (!preset.RGBPoints || preset.ColorSpace === 'CIELAB') {
    return;
  }

  if (!presetMap[preset.Name]) {
    rgbPresetNames.push(preset.Name);
    rgbPresetNames.sort();
  }

  presetMap[preset.Name] = preset;
} // ----------------------------------------------------------------------------


function removePresetByName(name) {
  var index = rgbPresetNames.indexOf(name);

  if (index > -1) {
    rgbPresetNames.splice(index, 1);
  }

  delete presetMap[name];
} // ----------------------------------------------------------------------------


var vtkColorMaps = {
  addPreset: addPreset,
  removePresetByName: removePresetByName,
  getPresetByName: getPresetByName,
  rgbPresetNames: rgbPresetNames
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Rendering/Core/ColorTransferFunction/Constants.js":
/*!*****************************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Rendering/Core/ColorTransferFunction/Constants.js ***!
  \*****************************************************************************************/
/*! exports provided: ColorSpace, Scale, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ColorSpace", function() { return ColorSpace; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Scale", function() { return Scale; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Constants; });
var ColorSpace = {
  RGB: 0,
  HSV: 1,
  LAB: 2,
  DIVERGING: 3
};
var Scale = {
  LINEAR: 0,
  LOG10: 1
};
var Constants = {
  ColorSpace: ColorSpace,
  Scale: Scale
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Rendering/Core/ColorTransferFunction/LiteColorMaps.json.js":
/*!**************************************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Rendering/Core/ColorTransferFunction/LiteColorMaps.json.js ***!
  \**************************************************************************************************/
/*! exports provided: v */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "v", function() { return vtkColorMaps; });
var vtkColorMaps = [
	{
		ColorSpace: "Diverging",
		Name: "Cool to Warm",
		NanColor: [
			1,
			1,
			0
		],
		RGBPoints: [
			0,
			0.23137254902,
			0.298039215686,
			0.752941176471,
			0.5,
			0.865,
			0.865,
			0.865,
			1,
			0.705882352941,
			0.0156862745098,
			0.149019607843
		]
	},
	{
		ColorSpace: "Diverging",
		Name: "Warm to Cool",
		NanColor: [
			1,
			1,
			0
		],
		RGBPoints: [
			0,
			0.705882352941,
			0.0156862745098,
			0.149019607843,
			0.5,
			0.865,
			0.865,
			0.865,
			1,
			0.23137254902,
			0.298039215686,
			0.752941176471
		]
	},
	{
		ColorSpace: "RGB",
		Name: "Rainbow Desaturated",
		NanColor: [
			1,
			1,
			0
		],
		RGBPoints: [
			0,
			0.278431372549,
			0.278431372549,
			0.858823529412,
			0.143,
			0,
			0,
			0.360784313725,
			0.285,
			0,
			1,
			1,
			0.429,
			0,
			0.501960784314,
			0,
			0.571,
			1,
			1,
			0,
			0.714,
			1,
			0.380392156863,
			0,
			0.857,
			0.419607843137,
			0,
			0,
			1,
			0.878431372549,
			0.301960784314,
			0.301960784314
		]
	},
	{
		ColorSpace: "RGB",
		Name: "Cold and Hot",
		NanColor: [
			1,
			1,
			0
		],
		RGBPoints: [
			0,
			0,
			1,
			1,
			0.45,
			0,
			0,
			1,
			0.5,
			0,
			0,
			0.501960784314,
			0.55,
			1,
			0,
			0,
			1,
			1,
			1,
			0
		]
	},
	{
		ColorSpace: "RGB",
		Name: "Black-Body Radiation",
		NanColor: [
			0,
			0.498039215686,
			1
		],
		RGBPoints: [
			0,
			0,
			0,
			0,
			0.4,
			0.901960784314,
			0,
			0,
			0.8,
			0.901960784314,
			0.901960784314,
			0,
			1,
			1,
			1,
			1
		]
	},
	{
		ColorSpace: "RGB",
		Name: "X Ray",
		NanColor: [
			1,
			0,
			0
		],
		RGBPoints: [
			0,
			1,
			1,
			1,
			1,
			0,
			0,
			0
		]
	},
	{
		ColorSpace: "RGB",
		Name: "Grayscale",
		NanColor: [
			1,
			0,
			0
		],
		RGBPoints: [
			0,
			0,
			0,
			0,
			1,
			1,
			1,
			1
		]
	},
	{
		ColorSpace: "RGB",
		Name: "Black, Blue and White",
		NanColor: [
			1,
			1,
			0
		],
		RGBPoints: [
			0,
			0,
			0,
			0,
			0.333,
			0,
			0,
			0.501960784314,
			0.666,
			0,
			0.501960784314,
			1,
			1,
			1,
			1,
			1
		]
	},
	{
		ColorSpace: "RGB",
		Name: "Black, Orange and White",
		NanColor: [
			1,
			1,
			0
		],
		RGBPoints: [
			0,
			0,
			0,
			0,
			0.333,
			0.501960784314,
			0,
			0,
			0.666,
			1,
			0.501960784314,
			0,
			1,
			1,
			1,
			1
		]
	},
	{
		ColorSpace: "Lab",
		Name: "erdc_rainbow_bright",
		RGBPoints: [
			-1,
			0.32549,
			0.14902,
			0.960784,
			-0.866221,
			0.297047,
			0.375586,
			0.963836,
			-0.732441,
			0.180302,
			0.536818,
			0.964627,
			-0.598662,
			0.1302,
			0.649207,
			0.929647,
			-0.464883,
			0.0445143,
			0.749654,
			0.855998,
			-0.331104,
			0.0271325,
			0.830713,
			0.721527,
			-0.197324,
			0.259504,
			0.866145,
			0.543555,
			-0.0635452,
			0.428364,
			0.890725,
			0.329819,
			0.0702341,
			0.568503,
			0.898508,
			0.187623,
			0.204013,
			0.738259,
			0.890317,
			0.0825461,
			0.337793,
			0.84546,
			0.86136,
			0.0147555,
			0.471572,
			0.912191,
			0.808018,
			0,
			0.605351,
			0.962848,
			0.710445,
			0,
			0.73913,
			0.999469,
			0.600258,
			0.0176284,
			0.87291,
			0.994156,
			0.445975,
			0.193912,
			1,
			0.980407,
			0.247105,
			0.262699
		]
	},
	{
		ColorSpace: "Lab",
		Name: "erdc_rainbow_dark",
		RGBPoints: [
			-1,
			0,
			0,
			0.423499,
			-0.866221,
			0,
			0.119346,
			0.529237,
			-0.732441,
			0,
			0.238691,
			0.634976,
			-0.598662,
			0,
			0.346852,
			0.68788,
			-0.464883,
			0,
			0.45022,
			0.718141,
			-0.331104,
			0,
			0.553554,
			0.664839,
			-0.197324,
			0,
			0.651082,
			0.519303,
			-0.0635452,
			0.115841,
			0.72479,
			0.352857,
			0.0702341,
			0.326771,
			0.781195,
			0.140187,
			0.204013,
			0.522765,
			0.798524,
			0.0284624,
			0.337793,
			0.703162,
			0.788685,
			0.00885756,
			0.471572,
			0.845118,
			0.751133,
			0,
			0.605351,
			0.955734,
			0.690825,
			0,
			0.73913,
			0.995402,
			0.567916,
			0.0618524,
			0.87291,
			0.987712,
			0.403398,
			0.164851,
			1,
			0.980407,
			0.247105,
			0.262699
		]
	}
];




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Rendering/Core/Coordinate.js":
/*!********************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Rendering/Core/Coordinate.js ***!
  \********************************************************************/
/*! exports provided: default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkCoordinate$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "../node_modules/@babel/runtime/helpers/defineProperty.js");
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _Coordinate_Constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Coordinate/Constants.js */ "../node_modules/@kitware/vtk.js/Rendering/Core/Coordinate/Constants.js");
/* harmony import */ var _Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../Common/Core/Math/index.js */ "../node_modules/@kitware/vtk.js/Common/Core/Math/index.js");





function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var Coordinate = _Coordinate_Constants_js__WEBPACK_IMPORTED_MODULE_2__["default"].Coordinate;
var vtkErrorMacro = _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].vtkErrorMacro; // ----------------------------------------------------------------------------
// vtkActor methods
// ----------------------------------------------------------------------------

function vtkCoordinate(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkCoordinate');

  publicAPI.setValue = function () {
    if (model.deleted) {
      vtkErrorMacro('instance deleted - cannot call any method');
      return false;
    }

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var array = args; // allow an array passed as a single arg.

    if (array.length === 1 && Array.isArray(array[0])) {
      array = array[0];
    }

    if (array.length === 2) {
      publicAPI.setValue(array[0], array[1], 0.0);
      return true;
    }

    if (array.length !== 3) {
      throw new RangeError('Invalid number of values for array setter');
    }

    var changeDetected = false;
    model.value.forEach(function (item, index) {
      if (item !== array[index]) {
        if (changeDetected) {
          return;
        }

        changeDetected = true;
      }
    });

    if (changeDetected) {
      model.value = [].concat(array);
      publicAPI.modified();
    }

    return true;
  };

  publicAPI.setCoordinateSystemToDisplay = function () {
    publicAPI.setCoordinateSystem(Coordinate.DISPLAY);
  };

  publicAPI.setCoordinateSystemToNormalizedDisplay = function () {
    publicAPI.setCoordinateSystem(Coordinate.NORMALIZED_DISPLAY);
  };

  publicAPI.setCoordinateSystemToViewport = function () {
    publicAPI.setCoordinateSystem(Coordinate.VIEWPORT);
  };

  publicAPI.setCoordinateSystemToNormalizedViewport = function () {
    publicAPI.setCoordinateSystem(Coordinate.NORMALIZED_VIEWPORT);
  };

  publicAPI.setCoordinateSystemToProjection = function () {
    publicAPI.setCoordinateSystem(Coordinate.PROJECTION);
  };

  publicAPI.setCoordinateSystemToView = function () {
    publicAPI.setCoordinateSystem(Coordinate.VIEW);
  };

  publicAPI.setCoordinateSystemToWorld = function () {
    publicAPI.setCoordinateSystem(Coordinate.WORLD);
  };

  publicAPI.getCoordinateSystemAsString = function () {
    return _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].enumToString(Coordinate, model.coordinateSystem);
  };

  publicAPI.getComputedWorldValue = function (ren) {
    var val = model.computedWorldValue;

    if (model.computing) {
      return val;
    }

    model.computing = 1;
    val[0] = model.value[0];
    val[1] = model.value[1];
    val[2] = model.value[2]; // Use our renderer if is defined

    var renderer = ren;

    if (model.renderer) {
      renderer = model.renderer;
    }

    if (!renderer) {
      if (model.coordinateSystem === Coordinate.WORLD) {
        if (model.referenceCoordinate) {
          var refValue = model.referenceCoordinate.getComputedWorldValue(renderer);
          val[0] += refValue[0];
          val[1] += refValue[1];
          val[2] += refValue[2];
        }

        model.computing = 0;
      } else {
        vtkErrorMacro('Attempt to compute world coordinates from another coordinate system without a renderer');
      }

      return val;
    } // convert to current coordinate system


    var view = null;

    if (renderer && renderer.getRenderWindow().getViews()) {
      view = renderer.getRenderWindow().getViews()[0];
    } else {
      return model.computedWorldValue;
    }

    var dims = view.getViewportSize(renderer);
    var aspect = dims[0] / dims[1];

    if (model.referenceCoordinate && model.coordinateSystem !== Coordinate.WORLD) {
      var fval = model.referenceCoordinate.getComputedDoubleDisplayValue(renderer);
      var _refValue = [fval[0], fval[1], 0.0];

      switch (model.coordinateSystem) {
        case Coordinate.NORMALIZED_DISPLAY:
          _refValue = view.displayToNormalizedDisplay(_refValue[0], _refValue[1], _refValue[2]);
          break;

        case Coordinate.VIEWPORT:
          _refValue = view.displayToNormalizedDisplay(_refValue[0], _refValue[1], _refValue[2]);
          _refValue = view.normalizedDisplayToViewport(_refValue[0], _refValue[1], _refValue[2], renderer);
          break;

        case Coordinate.NORMALIZED_VIEWPORT:
          _refValue = view.displayToNormalizedDisplay(_refValue[0], _refValue[1], _refValue[2]);
          _refValue = view.normalizedDisplayToViewport(_refValue[0], _refValue[1], _refValue[2], renderer);
          _refValue = view.viewportToNormalizedViewport(_refValue[0], _refValue[1], _refValue[2], renderer);
          break;

        case Coordinate.PROJECTION:
          _refValue = view.displayToNormalizedDisplay(_refValue[0], _refValue[1], _refValue[2]);
          _refValue = view.normalizedDisplayToViewport(_refValue[0], _refValue[1], _refValue[2], renderer);
          _refValue = view.viewportToNormalizedViewport(_refValue[0], _refValue[1], _refValue[2], renderer);
          _refValue = renderer.normalizedViewportToProjection(_refValue[0], _refValue[1], _refValue[2]);
          break;

        case Coordinate.VIEW:
          _refValue = view.displayToNormalizedDisplay(_refValue[0], _refValue[1], _refValue[2]);
          _refValue = view.normalizedDisplayToViewport(_refValue[0], _refValue[1], _refValue[2], renderer);
          _refValue = view.viewportToNormalizedViewport(_refValue[0], _refValue[1], _refValue[2], renderer);
          _refValue = renderer.normalizedViewportToProjection(_refValue[0], _refValue[1], _refValue[2]);
          _refValue = renderer.projectionToView(_refValue[0], _refValue[1], _refValue[2], aspect);
          break;
      }

      val[0] += _refValue[0];
      val[1] += _refValue[1];
      val[2] += _refValue[2];
    }

    switch (model.coordinateSystem) {
      case Coordinate.DISPLAY:
        val = view.displayToNormalizedDisplay(val[0], val[1], val[2]);
        val = view.normalizedDisplayToViewport(val[0], val[1], val[2], renderer);
        val = view.viewportToNormalizedViewport(val[0], val[1], val[2], renderer);
        val = renderer.normalizedViewportToProjection(val[0], val[1], val[2]);
        val = renderer.projectionToView(val[0], val[1], val[2], aspect);
        val = renderer.viewToWorld(val[0], val[1], val[2]);
        break;

      case Coordinate.NORMALIZED_DISPLAY:
        val = view.normalizedDisplayToViewport(val[0], val[1], val[2], renderer);
        val = view.viewportToNormalizedViewport(val[0], val[1], val[2], renderer);
        val = renderer.normalizedViewportToProjection(val[0], val[1], val[2]);
        val = renderer.projectionToView(val[0], val[1], val[2], aspect);
        val = renderer.viewToWorld(val[0], val[1], val[2]);
        break;

      case Coordinate.VIEWPORT:
        val = view.viewportToNormalizedViewport(val[0], val[1], val[2], renderer);
        val = renderer.normalizedViewportToProjection(val[0], val[1], val[2]);
        val = renderer.projectionToView(val[0], val[1], val[2], aspect);
        val = renderer.viewToWorld(val[0], val[1], val[2]);
        break;

      case Coordinate.NORMALIZED_VIEWPORT:
        val = renderer.normalizedViewportToProjection(val[0], val[1], val[2]);
        val = renderer.projectionToView(val[0], val[1], val[2], aspect);
        val = renderer.viewToWorld(val[0], val[1], val[2]);
        break;

      case Coordinate.PROJECTION:
        val = renderer.projectionToView(val[0], val[1], val[2], aspect);
        val = renderer.viewToWorld(val[0], val[1], val[2]);
        break;

      case Coordinate.VIEW:
        val = renderer.viewToWorld(val[0], val[1], val[2]);
        break;
    }

    if (model.referenceCoordinate && model.coordinateSystem === Coordinate.WORLD) {
      var _refValue2 = publicAPI.getComputedWorldValue(renderer);

      val[0] += _refValue2[0];
      val[1] += _refValue2[1];
      val[2] += _refValue2[2];
    }

    model.computing = 0;
    model.computedWorldValue = val.slice(0);
    return val;
  };

  publicAPI.getComputedViewportValue = function (ren) {
    var f = publicAPI.getComputedDoubleViewportValue(ren);
    return [Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__["J"])(f[0]), Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__["J"])(f[1])];
  };

  publicAPI.getComputedDisplayValue = function (ren) {
    var val = publicAPI.getComputedDoubleDisplayValue(ren);
    return [Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__["I"])(val[0]), Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__["I"])(val[1])];
  };

  publicAPI.getComputedLocalDisplayValue = function (ren) {
    // Use our renderer if it is defined
    var renderer = ren;

    if (model.renderer) {
      renderer = model.renderer;
    }

    var val = publicAPI.getComputedDisplayValue(renderer);

    if (!renderer) {
      vtkErrorMacro('Attempt to convert to local display coordinates without a renderer');
      return val;
    }

    var view = null;

    if (renderer && renderer.getRenderWindow().getViews()) {
      view = renderer.getRenderWindow().getViews()[0];
    } else {
      return val;
    }

    val = view.displayToLocalDisplay(val[0], val[1], val[2]);
    return [Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__["J"])(val[0]), Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__["J"])(val[1])];
  };

  publicAPI.getComputedDoubleViewportValue = function (ren) {
    var renderer = ren;

    if (model.renderer) {
      renderer = model.renderer;
    }

    var val = publicAPI.getComputedDoubleDisplayValue(renderer);

    if (!renderer) {
      return val;
    }

    var view = null;

    if (renderer && renderer.getRenderWindow().getViews()) {
      view = renderer.getRenderWindow().getViews()[0];
    } else {
      return val;
    }

    val = view.displayToNormalizedDisplay(val[0], val[1], val[2]);
    val = view.normalizedDisplayToViewport(val[0], val[1], val[2], renderer);
    return [val[0], val[1]];
  };

  publicAPI.getComputedDoubleDisplayValue = function (ren) {
    if (model.computing) {
      return model.computedDoubleDisplayValue;
    }

    model.computing = 1;
    var val = model.value.slice(0);
    var renderer = ren;

    if (model.renderer) {
      renderer = model.renderer;
    }

    if (!renderer) {
      if (model.coordinateSystem === Coordinate.DISPLAY) {
        model.computedDoubleDisplayValue[0] = val[0];
        model.computedDoubleDisplayValue[1] = val[1];

        if (model.referenceCoordinate) {
          var refValue = model.referenceCoordinate.getComputedDoubleDisplayValue();
          model.computedDoubleDisplayValue[0] += refValue[0];
          model.computedDoubleDisplayValue[1] += refValue[1];
        }
      } else {
        model.computedDoubleDisplayValue[0] = Number.MAX_VALUE;
        model.computedDoubleDisplayValue[1] = Number.MAX_VALUE;
        vtkErrorMacro('Request for coordinate transformation without required viewport');
      }

      return model.computedDoubleDisplayValue;
    }

    var view = null;

    if (renderer && renderer.getRenderWindow().getViews()) {
      view = renderer.getRenderWindow().getViews()[0];
    } else {
      return val;
    }

    var dims = view.getViewportSize(renderer);
    var aspect = dims[0] / dims[1];

    switch (model.coordinateSystem) {
      case Coordinate.WORLD:
        {
          if (model.referenceCoordinate) {
            var _refValue3 = model.referenceCoordinate.getComputedWorldValue(renderer);

            val[0] += _refValue3[0];
            val[1] += _refValue3[1];
            val[2] += _refValue3[2];
          }

          val = renderer.worldToView(val[0], val[1], val[2]);
          val = renderer.viewToProjection(val[0], val[1], val[2], aspect);
          val = renderer.projectionToNormalizedViewport(val[0], val[1], val[2]);
          val = view.normalizedViewportToViewport(val[0], val[1], val[2], renderer);
          val = view.viewportToNormalizedDisplay(val[0], val[1], val[2], renderer);
          val = view.normalizedDisplayToDisplay(val[0], val[1], val[2]);
          break;
        }

      case Coordinate.VIEW:
        {
          val = renderer.viewToProjection(val[0], val[1], val[2], aspect);
          val = renderer.projectionToNormalizedViewport(val[0], val[1], val[2]);
          val = view.normalizedViewportToViewport(val[0], val[1], val[2], renderer);
          val = view.viewportToNormalizedDisplay(val[0], val[1], val[2], renderer);
          val = view.normalizedDisplayToDisplay(val[0], val[1], val[2]);
          break;
        }

      case Coordinate.PROJECTION:
        {
          val = renderer.projectionToNormalizedViewport(val[0], val[1], val[2]);
          val = view.normalizedViewportToViewport(val[0], val[1], val[2], renderer);
          val = view.viewportToNormalizedDisplay(val[0], val[1], val[2], renderer);
          val = view.normalizedDisplayToDisplay(val[0], val[1], val[2]);
          break;
        }

      case Coordinate.NORMALIZED_VIEWPORT:
        {
          val = view.normalizedViewportToViewport(val[0], val[1], val[2], renderer);

          if (model.referenceCoordinate) {
            var _refValue4 = model.referenceCoordinate.getComputedDoubleViewportValue(renderer);

            val[0] += _refValue4[0];
            val[1] += _refValue4[1];
          }

          val = view.viewportToNormalizedDisplay(val[0], val[1], val[2], renderer);
          val = view.normalizedDisplayToDisplay(val[0], val[1], val[2]);
          break;
        }

      case Coordinate.VIEWPORT:
        {
          if (model.referenceCoordinate) {
            var _refValue5 = model.referenceCoordinate.getComputedDoubleViewportValue(renderer);

            val[0] += _refValue5[0];
            val[1] += _refValue5[1];
          }

          val = view.viewportToNormalizedDisplay(val[0], val[1], val[2], renderer);
          val = view.normalizedDisplayToDisplay(val[0], val[1], val[2]);
          break;
        }

      case Coordinate.NORMALIZED_DISPLAY:
        val = view.normalizedDisplayToDisplay(val[0], val[1], val[2]);
        break;

      case Coordinate.USERDEFINED:
        val = model.value.slice(0);
        break;
    } // if we have a reference coordinate and we haven't handled it yet


    if (model.referenceCoordinate && (model.coordinateSystem === Coordinate.DISPLAY || model.coordinateSystem === Coordinate.NORMALIZED_DISPLAY)) {
      var _refValue6 = model.referenceCoordinate.getComputedDoubleDisplayValue(renderer);

      val[0] += _refValue6[0];
      val[1] += _refValue6[1];
    }

    model.computedDoubleDisplayValue[0] = val[0];
    model.computedDoubleDisplayValue[1] = val[1];
    model.computing = 0;
    return model.computedDoubleDisplayValue;
  };

  publicAPI.getComputedValue = function (ren) {
    var renderer = ren;

    if (model.renderer) {
      renderer = model.renderer;
    }

    switch (model.coordinateSystem) {
      case Coordinate.WORLD:
        return publicAPI.getComputedWorldValue(renderer);

      case Coordinate.VIEW:
      case Coordinate.NORMALIZED_VIEWPORT:
      case Coordinate.VIEWPORT:
        {
          var val = publicAPI.getComputedViewportValue(renderer);
          model.computedWorldValue[0] = val[0];
          model.computedWorldValue[1] = val[1];
          break;
        }

      case Coordinate.NORMALIZED_DISPLAY:
      case Coordinate.DISPLAY:
        {
          var _val = model.getComputedDisplayValue(renderer);

          model.computedWorldValue[0] = _val[0];
          model.computedWorldValue[1] = _val[1];
          break;
        }
    }

    return model.computedWorldValue;
  };
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {
  coordinateSystem: Coordinate.WORLD,
  value: [0.0, 0.0, 0.0],
  renderer: null,
  referenceCoordinate: null,
  computing: 0,
  computedWorldValue: [0.0, 0.0, 0.0],
  computedDoubleDisplayValue: [0.0, 0.0]
}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues);
  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].obj(publicAPI, model); // Build VTK API

  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].set(publicAPI, model, ['property']);
  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].get(publicAPI, model, ['value']);
  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].setGet(publicAPI, model, ['coordinateSystem', 'referenceCoordinate', 'renderer']);
  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].getArray(publicAPI, model, ['value'], 3); // Object methods

  vtkCoordinate(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].newInstance(extend, 'vtkCoordinate'); // ----------------------------------------------------------------------------

var vtkCoordinate$1 = _objectSpread({
  newInstance: newInstance,
  extend: extend
}, _Coordinate_Constants_js__WEBPACK_IMPORTED_MODULE_2__["default"]);




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Rendering/Core/Coordinate/Constants.js":
/*!******************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Rendering/Core/Coordinate/Constants.js ***!
  \******************************************************************************/
/*! exports provided: Coordinate, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Coordinate", function() { return Coordinate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Constants; });
var Coordinate = {
  DISPLAY: 0,
  NORMALIZED_DISPLAY: 1,
  VIEWPORT: 2,
  NORMALIZED_VIEWPORT: 3,
  PROJECTION: 4,
  VIEW: 5,
  WORLD: 6
};
var Constants = {
  Coordinate: Coordinate
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Rendering/Core/CubeAxesActor.js":
/*!***********************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Rendering/Core/CubeAxesActor.js ***!
  \***********************************************************************/
/*! exports provided: default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkCubeAxesActor$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "../node_modules/@babel/runtime/helpers/toConsumableArray.js");
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "../node_modules/@babel/runtime/helpers/defineProperty.js");
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! gl-matrix */ "../node_modules/gl-matrix/esm/index.js");
/* harmony import */ var d3_scale__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! d3-scale */ "../node_modules/d3-scale/src/index.js");
/* harmony import */ var _Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../Common/Core/Math/index.js */ "../node_modules/@kitware/vtk.js/Common/Core/Math/index.js");
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _Actor_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Actor.js */ "../node_modules/@kitware/vtk.js/Rendering/Core/Actor.js");
/* harmony import */ var _Common_DataModel_BoundingBox_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../Common/DataModel/BoundingBox.js */ "../node_modules/@kitware/vtk.js/Common/DataModel/BoundingBox.js");
/* harmony import */ var _Common_Core_DataArray_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../Common/Core/DataArray.js */ "../node_modules/@kitware/vtk.js/Common/Core/DataArray.js");
/* harmony import */ var _Mapper_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./Mapper.js */ "../node_modules/@kitware/vtk.js/Rendering/Core/Mapper.js");
/* harmony import */ var _Common_DataModel_PolyData_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../Common/DataModel/PolyData.js */ "../node_modules/@kitware/vtk.js/Common/DataModel/PolyData.js");
/* harmony import */ var _Texture_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./Texture.js */ "../node_modules/@kitware/vtk.js/Rendering/Core/Texture.js");













function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1___default()(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
// vtkCubeAxesActor
// ----------------------------------------------------------------------------
// faces are -x x -y y -z z
// point 0 is 0,0,0 and then +x fastest changing, +y then +z

var faceNormals = [[-1, 0, 0], [1, 0, 0], [0, -1, 0], [0, 1, 0], [0, 0, -1], [0, 0, 1]];
var faceEdges = [[8, 7, 11, 3], [9, 1, 10, 5], [4, 9, 0, 8], [2, 11, 6, 10], [0, 3, 2, 1], [4, 5, 6, 7]];
var edgePoints = [[0, 1], [1, 3], [2, 3], [0, 2], [4, 5], [5, 7], [6, 7], [4, 6], [0, 4], [1, 5], [3, 7], [2, 6]];
var edgeAxes = [0, 1, 0, 1, 0, 1, 0, 1, 2, 2, 2, 2];
var faceAxes = [[1, 2], [1, 2], [0, 2], [0, 2], [0, 1], [0, 1]]; //
// Developer note: This class is broken into the main class and a helper
// class. The main class holds view independent properties (those properties
// that do not change as the view's resolution/aspect ratio change). The
// helper class is instantiated one per view and holds properties that can
// depend on view specific values such as resolution. The helper class code
// could have been left to the View specific implementation (such as
// vtkWebGPUCubeAxesActor) but is instead placed here to it can be shared by
// multiple rendering backends.
//
// some shared temp variables to reduce heap allocs

var ptv3 = new Float64Array(3);
var pt2v3 = new Float64Array(3);
var tmpv3 = new Float64Array(3);
var tmp2v3 = new Float64Array(3);
var xDir = new Float64Array(3);
var yDir = new Float64Array(3);
var invmat = new Float64Array(16);

function applyTextStyle(ctx, style) {
  ctx.strokeStyle = style.strokeColor;
  ctx.lineWidth = style.strokeSize;
  ctx.fillStyle = style.fontColor;
  ctx.font = "".concat(style.fontStyle, " ").concat(style.fontSize, "px ").concat(style.fontFamily);
} // many properties of this actor depend on the API specific view The main
// dependency being the resolution as that drives what font sizes to use.
// Bacause of this we need to do some of the calculations in a API specific
// subclass. But... we don't want a lot of duplicated code between WebGL and
// WebGPU for example so we have this helper class, that is designed to be
// fairly API independent so that API specific views can call this to do
// most of the work.


function vtkCubeAxesActorHelper(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkCubeAxesActorHelper');

  publicAPI.setRenderable = function (renderable) {
    if (model.renderable === renderable) {
      return;
    }

    model.renderable = renderable;
    model.tmActor.addTexture(model.renderable.getTmTexture());
    model.tmActor.setProperty(renderable.getProperty());
    model.tmActor.setParentProp(renderable);
    publicAPI.modified();
  }; // called by updateTexturePolyData


  publicAPI.createPolyDataForOneLabel = function (text, pos, cmat, imat, dir, offset, results) {
    var value = model.renderable.get_tmAtlas().get(text);

    if (!value) {
      return;
    }

    var coords = model.renderable.getTextPolyData().getPoints().getData(); // compute pixel to distance factors

    var size = model.lastSize;
    ptv3[0] = coords[pos * 3];
    ptv3[1] = coords[pos * 3 + 1];
    ptv3[2] = coords[pos * 3 + 2];
    gl_matrix__WEBPACK_IMPORTED_MODULE_2__["vec3"].transformMat4(tmpv3, ptv3, cmat); // moving 0.1 in NDC

    tmpv3[0] += 0.1;
    gl_matrix__WEBPACK_IMPORTED_MODULE_2__["vec3"].transformMat4(pt2v3, tmpv3, imat); // results in WC move of

    gl_matrix__WEBPACK_IMPORTED_MODULE_2__["vec3"].subtract(xDir, pt2v3, ptv3);
    tmpv3[0] -= 0.1;
    tmpv3[1] += 0.1;
    gl_matrix__WEBPACK_IMPORTED_MODULE_2__["vec3"].transformMat4(pt2v3, tmpv3, imat); // results in WC move of

    gl_matrix__WEBPACK_IMPORTED_MODULE_2__["vec3"].subtract(yDir, pt2v3, ptv3);

    for (var i = 0; i < 3; i++) {
      xDir[i] /= 0.5 * 0.1 * size[0];
      yDir[i] /= 0.5 * 0.1 * size[1];
    } // have to find the four corners of the texture polygon for this label
    // convert anchor point to View Coords


    var ptIdx = results.ptIdx;
    var cellIdx = results.cellIdx;
    ptv3[0] = coords[pos * 3];
    ptv3[1] = coords[pos * 3 + 1];
    ptv3[2] = coords[pos * 3 + 2]; // horizontal left, right, or middle alignment based on dir[0]

    if (dir[0] < -0.5) {
      gl_matrix__WEBPACK_IMPORTED_MODULE_2__["vec3"].scale(tmpv3, xDir, dir[0] * offset - value.width);
    } else if (dir[0] > 0.5) {
      gl_matrix__WEBPACK_IMPORTED_MODULE_2__["vec3"].scale(tmpv3, xDir, dir[0] * offset);
    } else {
      gl_matrix__WEBPACK_IMPORTED_MODULE_2__["vec3"].scale(tmpv3, xDir, dir[0] * offset - value.width / 2.0);
    }

    gl_matrix__WEBPACK_IMPORTED_MODULE_2__["vec3"].add(ptv3, ptv3, tmpv3);
    gl_matrix__WEBPACK_IMPORTED_MODULE_2__["vec3"].scale(tmpv3, yDir, dir[1] * offset - value.height / 2.0);
    gl_matrix__WEBPACK_IMPORTED_MODULE_2__["vec3"].add(ptv3, ptv3, tmpv3);
    results.points[ptIdx * 3] = ptv3[0];
    results.points[ptIdx * 3 + 1] = ptv3[1];
    results.points[ptIdx * 3 + 2] = ptv3[2];
    results.tcoords[ptIdx * 2] = value.tcoords[0];
    results.tcoords[ptIdx * 2 + 1] = value.tcoords[1];
    ptIdx++;
    gl_matrix__WEBPACK_IMPORTED_MODULE_2__["vec3"].scale(tmpv3, xDir, value.width);
    gl_matrix__WEBPACK_IMPORTED_MODULE_2__["vec3"].add(ptv3, ptv3, tmpv3);
    results.points[ptIdx * 3] = ptv3[0];
    results.points[ptIdx * 3 + 1] = ptv3[1];
    results.points[ptIdx * 3 + 2] = ptv3[2];
    results.tcoords[ptIdx * 2] = value.tcoords[2];
    results.tcoords[ptIdx * 2 + 1] = value.tcoords[3];
    ptIdx++;
    gl_matrix__WEBPACK_IMPORTED_MODULE_2__["vec3"].scale(tmpv3, yDir, value.height);
    gl_matrix__WEBPACK_IMPORTED_MODULE_2__["vec3"].add(ptv3, ptv3, tmpv3);
    results.points[ptIdx * 3] = ptv3[0];
    results.points[ptIdx * 3 + 1] = ptv3[1];
    results.points[ptIdx * 3 + 2] = ptv3[2];
    results.tcoords[ptIdx * 2] = value.tcoords[4];
    results.tcoords[ptIdx * 2 + 1] = value.tcoords[5];
    ptIdx++;
    gl_matrix__WEBPACK_IMPORTED_MODULE_2__["vec3"].scale(tmpv3, xDir, value.width);
    gl_matrix__WEBPACK_IMPORTED_MODULE_2__["vec3"].subtract(ptv3, ptv3, tmpv3);
    results.points[ptIdx * 3] = ptv3[0];
    results.points[ptIdx * 3 + 1] = ptv3[1];
    results.points[ptIdx * 3 + 2] = ptv3[2];
    results.tcoords[ptIdx * 2] = value.tcoords[6];
    results.tcoords[ptIdx * 2 + 1] = value.tcoords[7];
    ptIdx++; // add the two triangles to represent the quad

    results.polys[cellIdx * 4] = 3;
    results.polys[cellIdx * 4 + 1] = ptIdx - 4;
    results.polys[cellIdx * 4 + 2] = ptIdx - 3;
    results.polys[cellIdx * 4 + 3] = ptIdx - 2;
    cellIdx++;
    results.polys[cellIdx * 4] = 3;
    results.polys[cellIdx * 4 + 1] = ptIdx - 4;
    results.polys[cellIdx * 4 + 2] = ptIdx - 2;
    results.polys[cellIdx * 4 + 3] = ptIdx - 1;
    results.ptIdx += 4;
    results.cellIdx += 2;
  }; // update the polydata associated with drawing the text labels
  // specifically the quads used for each label and their associated tcoords
  // etc. This changes every time the camera viewpoint changes


  publicAPI.updateTexturePolyData = function () {
    var cmat = model.camera.getCompositeProjectionMatrix(model.lastAspectRatio, -1, 1);
    gl_matrix__WEBPACK_IMPORTED_MODULE_2__["mat4"].transpose(cmat, cmat); // update the polydata

    var numLabels = model.renderable.getTextValues().length;
    var numPts = numLabels * 4;
    var numTris = numLabels * 2;
    var points = new Float64Array(numPts * 3);
    var polys = new Uint16Array(numTris * 4);
    var tcoords = new Float32Array(numPts * 2);
    gl_matrix__WEBPACK_IMPORTED_MODULE_2__["mat4"].invert(invmat, cmat);
    var results = {
      ptIdx: 0,
      cellIdx: 0,
      polys: polys,
      points: points,
      tcoords: tcoords
    };
    var ptIdx = 0;
    var textIdx = 0;
    var axisIdx = 0;
    var coords = model.renderable.getTextPolyData().getPoints().getData();
    var textValues = model.renderable.getTextValues();

    while (ptIdx < coords.length / 3) {
      // compute the direction to move out
      ptv3[0] = coords[ptIdx * 3];
      ptv3[1] = coords[ptIdx * 3 + 1];
      ptv3[2] = coords[ptIdx * 3 + 2];
      gl_matrix__WEBPACK_IMPORTED_MODULE_2__["vec3"].transformMat4(tmpv3, ptv3, cmat);
      ptv3[0] = coords[ptIdx * 3 + 3];
      ptv3[1] = coords[ptIdx * 3 + 4];
      ptv3[2] = coords[ptIdx * 3 + 5];
      gl_matrix__WEBPACK_IMPORTED_MODULE_2__["vec3"].transformMat4(tmp2v3, ptv3, cmat);
      gl_matrix__WEBPACK_IMPORTED_MODULE_2__["vec3"].subtract(tmpv3, tmpv3, tmp2v3);
      var dir = [tmpv3[0], tmpv3[1]];
      Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_4__["K"])(dir); // write the axis label

      publicAPI.createPolyDataForOneLabel(textValues[textIdx], ptIdx, cmat, invmat, dir, model.renderable.getAxisTitlePixelOffset(), results);
      ptIdx += 2;
      textIdx++; // write the tick labels

      for (var t = 0; t < model.renderable.getTickCounts()[axisIdx]; t++) {
        publicAPI.createPolyDataForOneLabel(textValues[textIdx], ptIdx, cmat, invmat, dir, model.renderable.getTickLabelPixelOffset(), results);
        ptIdx++;
        textIdx++;
      }

      axisIdx++;
    }

    var tcoordDA = _Common_Core_DataArray_js__WEBPACK_IMPORTED_MODULE_8__["default"].newInstance({
      numberOfComponents: 2,
      values: tcoords,
      name: 'TextureCoordinates'
    });
    model.tmPolyData.getPointData().setTCoords(tcoordDA);
    model.tmPolyData.getPoints().setData(points, 3);
    model.tmPolyData.getPoints().modified();
    model.tmPolyData.getPolys().setData(polys, 1);
    model.tmPolyData.getPolys().modified();
    model.tmPolyData.modified();
  };

  publicAPI.updateAPISpecificData = function (size, camera, renderWindow) {
    // has the size changed?
    if (model.lastSize[0] !== size[0] || model.lastSize[1] !== size[1]) {
      model.lastSize[0] = size[0];
      model.lastSize[1] = size[1];
      model.lastAspectRatio = size[0] / size[1];
      model.forceUpdate = true;
    }

    model.camera = camera; // compute bounds for label quads whenever the camera changes

    publicAPI.updateTexturePolyData();
  };
}

var newCubeAxesActorHelper = _macros_js__WEBPACK_IMPORTED_MODULE_5__["default"].newInstance(function (publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {
    renderable: null
  };
  Object.assign(model, {}, initialValues); // Inheritance

  _macros_js__WEBPACK_IMPORTED_MODULE_5__["default"].obj(publicAPI, model);
  model.tmPolyData = _Common_DataModel_PolyData_js__WEBPACK_IMPORTED_MODULE_10__["default"].newInstance();
  model.tmMapper = _Mapper_js__WEBPACK_IMPORTED_MODULE_9__["default"].newInstance();
  model.tmMapper.setInputData(model.tmPolyData);
  model.tmActor = _Actor_js__WEBPACK_IMPORTED_MODULE_6__["default"].newInstance({
    parentProp: publicAPI
  });
  model.tmActor.setMapper(model.tmMapper);
  _macros_js__WEBPACK_IMPORTED_MODULE_5__["default"].setGet(publicAPI, model, ['renderable']);
  _macros_js__WEBPACK_IMPORTED_MODULE_5__["default"].get(publicAPI, model, ['lastSize', 'lastAspectRatio', 'axisTextStyle', 'tickTextStyle', 'tmActor', 'ticks']);
  model.forceUpdate = false;
  model.lastRedrawTime = {};
  _macros_js__WEBPACK_IMPORTED_MODULE_5__["default"].obj(model.lastRedrawTime, {
    mtime: 0
  });
  model.lastRebuildTime = {};
  _macros_js__WEBPACK_IMPORTED_MODULE_5__["default"].obj(model.lastRebuildTime, {
    mtime: 0
  });
  model.lastSize = [-1, -1]; // internal variables

  model.lastTickBounds = [];
  vtkCubeAxesActorHelper(publicAPI, model);
}, 'vtkCubeAxesActorHelper');

function vtkCubeAxesActor(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkCubeAxesActor');

  publicAPI.setCamera = function (cam) {
    if (model.camera === cam) {
      return;
    }

    if (model.cameraModifiedSub) {
      model.cameraModifiedSub.unsubscribe();
      model.cameraModifiedSub = null;
    }

    model.camera = cam;

    if (cam) {
      model.cameraModifiedSub = cam.onModified(publicAPI.update);
    }

    publicAPI.update();
    publicAPI.modified();
  }; // estimate from a camera model what faces to draw
  // return true if the list of faces to draw has changed


  publicAPI.computeFacesToDraw = function () {
    var cmat = model.camera.getViewMatrix();
    gl_matrix__WEBPACK_IMPORTED_MODULE_2__["mat4"].transpose(cmat, cmat);
    var changed = false;
    var length = _Common_DataModel_BoundingBox_js__WEBPACK_IMPORTED_MODULE_7__["default"].getDiagonalLength(model.dataBounds);
    var faceDot = Math.sin(model.faceVisibilityAngle * Math.PI / 180.0);

    for (var f = 0; f < 6; f++) {
      var drawit = false;
      var faceAxis = Math.floor(f / 2);
      var otherAxis1 = (faceAxis + 1) % 3;
      var otherAxis2 = (faceAxis + 2) % 3; // only for non degenerate axes

      if (model.dataBounds[otherAxis1 * 2] !== model.dataBounds[otherAxis1 * 2 + 1] && model.dataBounds[otherAxis2 * 2] !== model.dataBounds[otherAxis2 * 2 + 1]) {
        // for each face transform the center and off center to get a direction vector
        ptv3[faceAxis] = model.dataBounds[f] - 0.1 * length * faceNormals[f][faceAxis];
        ptv3[otherAxis1] = 0.5 * (model.dataBounds[otherAxis1 * 2] + model.dataBounds[otherAxis1 * 2 + 1]);
        ptv3[otherAxis2] = 0.5 * (model.dataBounds[otherAxis2 * 2] + model.dataBounds[otherAxis2 * 2 + 1]);
        gl_matrix__WEBPACK_IMPORTED_MODULE_2__["vec3"].transformMat4(tmpv3, ptv3, cmat);
        ptv3[faceAxis] = model.dataBounds[f];
        gl_matrix__WEBPACK_IMPORTED_MODULE_2__["vec3"].transformMat4(tmp2v3, ptv3, cmat);
        gl_matrix__WEBPACK_IMPORTED_MODULE_2__["vec3"].subtract(tmpv3, tmp2v3, tmpv3);
        gl_matrix__WEBPACK_IMPORTED_MODULE_2__["vec3"].normalize(tmpv3, tmpv3); // tmpv3 now holds the face normal vector

        drawit = tmpv3[2] > faceDot; // for perspctive we need the view direction to the plane

        if (!model.camera.getParallelProjection()) {
          gl_matrix__WEBPACK_IMPORTED_MODULE_2__["vec3"].normalize(tmp2v3, tmp2v3);
          drawit = gl_matrix__WEBPACK_IMPORTED_MODULE_2__["vec3"].dot(tmp2v3, tmpv3) > faceDot;
        }
      }

      if (drawit !== model.lastFacesToDraw[f]) {
        model.lastFacesToDraw[f] = drawit;
        changed = true;
      }
    }

    return changed;
  }; // update the polydata that represents the boundingd edges and gridlines


  publicAPI.updatePolyData = function (facesToDraw, edgesToDraw, ticks) {
    // compute the number of points and lines required
    var numPts = 0;
    var numLines = 0;
    numPts += 8; // always start with the 8 cube points
    // count edgesToDraw

    var numEdgesToDraw = 0;

    for (var e = 0; e < 12; e++) {
      if (edgesToDraw[e] > 0) {
        numEdgesToDraw++;
      }
    }

    numLines += numEdgesToDraw; // add values for gridlines

    if (model.gridLines) {
      for (var f = 0; f < 6; f++) {
        if (facesToDraw[f]) {
          numPts += ticks[faceAxes[f][0]].length * 2 + ticks[faceAxes[f][1]].length * 2;
          numLines += ticks[faceAxes[f][0]].length + ticks[faceAxes[f][1]].length;
        }
      }
    } // now allocate the memory


    var points = new Float64Array(numPts * 3);
    var lines = new Uint32Array(numLines * 3);
    var ptIdx = 0;
    var lineIdx = 0; // add the 8 corner points

    for (var z = 0; z < 2; z++) {
      for (var y = 0; y < 2; y++) {
        for (var x = 0; x < 2; x++) {
          points[ptIdx * 3] = model.dataBounds[x];
          points[ptIdx * 3 + 1] = model.dataBounds[2 + y];
          points[ptIdx * 3 + 2] = model.dataBounds[4 + z];
          ptIdx++;
        }
      }
    } // draw the edges


    for (var _e = 0; _e < 12; _e++) {
      if (edgesToDraw[_e] > 0) {
        lines[lineIdx * 3] = 2;
        lines[lineIdx * 3 + 1] = edgePoints[_e][0];
        lines[lineIdx * 3 + 2] = edgePoints[_e][1];
        lineIdx++;
      }
    } // now handle gridlines
    // grid lines are tick[axis1] + ticks[axes2] lines each having two points
    // for simplicity we don;t worry about duplicating points, this is tiny


    if (model.gridLines) {
      // for each visible face
      // add the points
      for (var _f = 0; _f < 6; _f++) {
        if (facesToDraw[_f]) {
          var faceIdx = Math.floor(_f / 2);
          var aticks = ticks[faceAxes[_f][0]];

          for (var t = 0; t < aticks.length; t++) {
            points[ptIdx * 3 + faceIdx] = model.dataBounds[_f];
            points[ptIdx * 3 + faceAxes[_f][0]] = aticks[t];
            points[ptIdx * 3 + faceAxes[_f][1]] = model.dataBounds[faceAxes[_f][1] * 2];
            ptIdx++;
            points[ptIdx * 3 + faceIdx] = model.dataBounds[_f];
            points[ptIdx * 3 + faceAxes[_f][0]] = aticks[t];
            points[ptIdx * 3 + faceAxes[_f][1]] = model.dataBounds[faceAxes[_f][1] * 2 + 1];
            ptIdx++;
            lines[lineIdx * 3] = 2;
            lines[lineIdx * 3 + 1] = ptIdx - 2;
            lines[lineIdx * 3 + 2] = ptIdx - 1;
            lineIdx++;
          }

          aticks = ticks[faceAxes[_f][1]];

          for (var _t = 0; _t < aticks.length; _t++) {
            points[ptIdx * 3 + faceIdx] = model.dataBounds[_f];
            points[ptIdx * 3 + faceAxes[_f][1]] = aticks[_t];
            points[ptIdx * 3 + faceAxes[_f][0]] = model.dataBounds[faceAxes[_f][0] * 2];
            ptIdx++;
            points[ptIdx * 3 + faceIdx] = model.dataBounds[_f];
            points[ptIdx * 3 + faceAxes[_f][1]] = aticks[_t];
            points[ptIdx * 3 + faceAxes[_f][0]] = model.dataBounds[faceAxes[_f][0] * 2 + 1];
            ptIdx++;
            lines[lineIdx * 3] = 2;
            lines[lineIdx * 3 + 1] = ptIdx - 2;
            lines[lineIdx * 3 + 2] = ptIdx - 1;
            lineIdx++;
          }
        }
      }
    }

    model.polyData.getPoints().setData(points, 3);
    model.polyData.getPoints().modified();
    model.polyData.getLines().setData(lines, 1);
    model.polyData.getLines().modified();
    model.polyData.modified();
  }; // update the data that represents where to put the labels
  // in world coordinates. This only changes when faces to draw changes
  // of dataBounds changes


  publicAPI.updateTextData = function (facesToDraw, edgesToDraw, ticks, tickStrings) {
    // count outside edgesToDraw
    var textPointCount = 0;

    for (var e = 0; e < 12; e++) {
      if (edgesToDraw[e] === 1) {
        textPointCount += 2;
        textPointCount += ticks[edgeAxes[e]].length;
      }
    }

    var points = model.polyData.getPoints().getData();
    var textPoints = new Float64Array(textPointCount * 3);
    var ptIdx = 0;
    var textIdx = 0;
    var axisCount = 0;

    for (var f = 0; f < 6; f++) {
      if (facesToDraw[f]) {
        for (var _e2 = 0; _e2 < 4; _e2++) {
          var edgeIdx = faceEdges[f][_e2];

          if (edgesToDraw[edgeIdx] === 1) {
            var edgeAxis = edgeAxes[edgeIdx]; // add a middle point on the edge

            var ptIdx1 = edgePoints[edgeIdx][0] * 3;
            var ptIdx2 = edgePoints[edgeIdx][1] * 3;
            textPoints[ptIdx * 3] = 0.5 * (points[ptIdx1] + points[ptIdx2]);
            textPoints[ptIdx * 3 + 1] = 0.5 * (points[ptIdx1 + 1] + points[ptIdx2 + 1]);
            textPoints[ptIdx * 3 + 2] = 0.5 * (points[ptIdx1 + 2] + points[ptIdx2 + 2]);
            ptIdx++; // add a middle face point, we use this to
            // move the labels away from the edge in the right direction

            var faceIdx = Math.floor(f / 2);
            textPoints[ptIdx * 3 + faceIdx] = model.dataBounds[f];
            textPoints[ptIdx * 3 + faceAxes[f][0]] = 0.5 * (model.dataBounds[faceAxes[f][0] * 2] + model.dataBounds[faceAxes[f][0] * 2 + 1]);
            textPoints[ptIdx * 3 + faceAxes[f][1]] = 0.5 * (model.dataBounds[faceAxes[f][1] * 2] + model.dataBounds[faceAxes[f][1] * 2 + 1]);
            ptIdx++; // set the text

            model.textValues[textIdx] = model.axisLabels[edgeAxis];
            textIdx++; // now add the tick marks along the edgeAxis

            var otherAxis1 = (edgeAxis + 1) % 3;
            var otherAxis2 = (edgeAxis + 2) % 3;
            var aticks = ticks[edgeAxis];
            var atickStrings = tickStrings[edgeAxis];
            model.tickCounts[axisCount] = aticks.length;

            for (var t = 0; t < aticks.length; t++) {
              textPoints[ptIdx * 3 + edgeAxis] = aticks[t];
              textPoints[ptIdx * 3 + otherAxis1] = points[ptIdx1 + otherAxis1];
              textPoints[ptIdx * 3 + otherAxis2] = points[ptIdx1 + otherAxis2];
              ptIdx++; // set the text

              model.textValues[textIdx] = atickStrings[t];
              textIdx++;
            }

            axisCount++;
          }
        }
      }
    }

    model.textPolyData.getPoints().setData(textPoints, 3);
    model.textPolyData.modified();
  }; // main method to rebuild the cube axes, gets called on camera modify
  // and changes to key members


  publicAPI.update = function () {
    // Can't do anything if we don't have a camera...
    if (!model.camera) {
      return;
    } // compute what faces to draw


    var facesChanged = publicAPI.computeFacesToDraw();
    var facesToDraw = model.lastFacesToDraw; // have the bounds changed?

    var boundsChanged = false;

    for (var i = 0; i < 6; i++) {
      if (model.dataBounds[i] !== model.lastTickBounds[i]) {
        boundsChanged = true;
        model.lastTickBounds[i] = model.dataBounds[i];
      }
    } // did something significant change? If so rebuild a lot of things


    if (facesChanged || boundsChanged || model.forceUpdate) {
      // compute the edges to draw
      // for each drawn face, mark edges, all single mark edges we draw
      var edgesToDraw = new Array(12).fill(0);

      for (var f = 0; f < 6; f++) {
        if (facesToDraw[f]) {
          for (var e = 0; e < 4; e++) {
            edgesToDraw[faceEdges[f][e]]++;
          }
        }
      } // compute tick marks for axes


      var ticks = [];
      var tickStrings = [];

      for (var _i = 0; _i < 3; _i++) {
        var scale = d3_scale__WEBPACK_IMPORTED_MODULE_3__["scaleLinear"]().domain([model.dataBounds[_i * 2], model.dataBounds[_i * 2 + 1]]);
        ticks[_i] = scale.ticks(5);
        var format = scale.tickFormat(5);
        tickStrings[_i] = ticks[_i].map(format);
      } // update gridlines / edge lines


      publicAPI.updatePolyData(facesToDraw, edgesToDraw, ticks); // compute label world coords and text

      publicAPI.updateTextData(facesToDraw, edgesToDraw, ticks, tickStrings); // rebuild the texture only when force or changed bounds, face
      // visibility changes do to change the atlas

      if (boundsChanged || model.forceUpdate) {
        publicAPI.updateTextureAtlas(tickStrings);
      }
    }

    model.forceUpdate = false;
  }; // create the texture map atlas that contains the rendering of
  // all the text strings. Only needs to be called when the text strings
  // have changed (labels and ticks)


  publicAPI.updateTextureAtlas = function (tickStrings) {
    // compute the width and height we need
    // set the text properties
    model.tmContext.textBaseline = 'bottom';
    model.tmContext.textAlign = 'left'; // first the three labels

    model._tmAtlas.clear();

    var maxWidth = 0;
    var totalHeight = 1; // start one pixel in so we have a border

    for (var i = 0; i < 3; i++) {
      if (!model._tmAtlas.has(model.axisLabels[i])) {
        applyTextStyle(model.tmContext, model.axisTextStyle);
        var metrics = model.tmContext.measureText(model.axisLabels[i]);
        var entry = {
          height: metrics.actualBoundingBoxAscent + 2,
          startingHeight: totalHeight,
          width: metrics.width + 2,
          textStyle: model.axisTextStyle
        };

        model._tmAtlas.set(model.axisLabels[i], entry);

        totalHeight += entry.height;

        if (maxWidth < entry.width) {
          maxWidth = entry.width;
        }
      } // and the ticks


      applyTextStyle(model.tmContext, model.tickTextStyle);

      for (var t = 0; t < tickStrings[i].length; t++) {
        if (!model._tmAtlas.has(tickStrings[i][t])) {
          var _metrics = model.tmContext.measureText(tickStrings[i][t]);

          var _entry = {
            height: _metrics.actualBoundingBoxAscent + 2,
            startingHeight: totalHeight,
            width: _metrics.width + 2,
            textStyle: model.tickTextStyle
          };

          model._tmAtlas.set(tickStrings[i][t], _entry);

          totalHeight += _entry.height;

          if (maxWidth < _entry.width) {
            maxWidth = _entry.width;
          }
        }
      }
    } // always use power of two to avoid interpolation
    // in cases where PO2 is required


    maxWidth = Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_4__["L"])(maxWidth);
    totalHeight = Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_4__["L"])(totalHeight); // set the tcoord values

    model._tmAtlas.forEach(function (value) {
      value.tcoords = [0.0, (totalHeight - value.startingHeight - value.height) / totalHeight, value.width / maxWidth, (totalHeight - value.startingHeight - value.height) / totalHeight, value.width / maxWidth, (totalHeight - value.startingHeight) / totalHeight, 0.0, (totalHeight - value.startingHeight) / totalHeight];
    }); // make sure we have power of two dimensions


    model.tmCanvas.width = maxWidth;
    model.tmCanvas.height = totalHeight;
    model.tmContext.textBaseline = 'bottom';
    model.tmContext.textAlign = 'left';
    model.tmContext.clearRect(0, 0, maxWidth, totalHeight); // draw the text onto the texture

    model._tmAtlas.forEach(function (value, key) {
      applyTextStyle(model.tmContext, value.textStyle);
      model.tmContext.fillText(key, 1, value.startingHeight + value.height - 1);
    });

    model.tmTexture.setCanvas(model.tmCanvas);
    model.tmTexture.modified();
  }; // Make sure the data is correct


  publicAPI.onModified(function () {
    model.forceUpdate = true;
    publicAPI.update();
  });

  publicAPI.setTickTextStyle = function (tickStyle) {
    model.tickTextStyle = _objectSpread(_objectSpread({}, model.tickTextStyle), tickStyle);
    publicAPI.modified();
  };

  publicAPI.setAxisTextStyle = function (axisStyle) {
    model.axisTextStyle = _objectSpread(_objectSpread({}, model.axisTextStyle), axisStyle);
    publicAPI.modified();
  };
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


function defaultValues(initialValues) {
  return _objectSpread({
    camera: null,
    dataBounds: _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(_Common_DataModel_BoundingBox_js__WEBPACK_IMPORTED_MODULE_7__["default"].INIT_BOUNDS),
    faceVisibilityAngle: 8,
    gridLines: true,
    axisLabels: null,
    axisTitlePixelOffset: 35.0,
    axisTextStyle: {
      fontColor: 'white',
      fontStyle: 'normal',
      fontSize: 18,
      fontFamily: 'serif'
    },
    tickLabelPixelOffset: 12.0,
    tickTextStyle: {
      fontColor: 'white',
      fontStyle: 'normal',
      fontSize: 14,
      fontFamily: 'serif'
    }
  }, initialValues);
} // ----------------------------------------------------------------------------


function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, defaultValues(initialValues)); // Inheritance

  _Actor_js__WEBPACK_IMPORTED_MODULE_6__["default"].extend(publicAPI, model, initialValues); // internal variables

  model.lastFacesToDraw = [false, false, false, false, false, false];
  model.axisLabels = ['X-Axis', 'Y-Axis', 'Z-Axis'];
  model.tickCounts = [];
  model.textValues = [];
  model.lastTickBounds = [];
  model.tmCanvas = document.createElement('canvas');
  model.tmContext = model.tmCanvas.getContext('2d');
  model._tmAtlas = new Map(); // for texture atlas

  model.tmTexture = _Texture_js__WEBPACK_IMPORTED_MODULE_11__["default"].newInstance();
  model.tmTexture.setInterpolate(false);
  publicAPI.getProperty().setDiffuse(0.0);
  publicAPI.getProperty().setAmbient(1.0);
  model.gridMapper = _Mapper_js__WEBPACK_IMPORTED_MODULE_9__["default"].newInstance();
  model.polyData = _Common_DataModel_PolyData_js__WEBPACK_IMPORTED_MODULE_10__["default"].newInstance();
  model.gridMapper.setInputData(model.polyData);
  model.gridActor = _Actor_js__WEBPACK_IMPORTED_MODULE_6__["default"].newInstance();
  model.gridActor.setMapper(model.gridMapper);
  model.gridActor.setProperty(publicAPI.getProperty());
  model.gridActor.setParentProp(publicAPI);
  model.textPolyData = _Common_DataModel_PolyData_js__WEBPACK_IMPORTED_MODULE_10__["default"].newInstance();
  _macros_js__WEBPACK_IMPORTED_MODULE_5__["default"].setGet(publicAPI, model, ['axisTitlePixelOffset', 'faceVisibilityAngle', 'gridLines', 'tickLabelPixelOffset']);
  _macros_js__WEBPACK_IMPORTED_MODULE_5__["default"].setGetArray(publicAPI, model, ['dataBounds'], 6);
  _macros_js__WEBPACK_IMPORTED_MODULE_5__["default"].setGetArray(publicAPI, model, ['axisLabels'], 3);
  _macros_js__WEBPACK_IMPORTED_MODULE_5__["default"].get(publicAPI, model, ['axisTextStyle', 'tickTextStyle', 'camera', 'tmTexture', 'textValues', 'textPolyData', '_tmAtlas', 'tickCounts', 'gridActor']); // Object methods

  vtkCubeAxesActor(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = _macros_js__WEBPACK_IMPORTED_MODULE_5__["default"].newInstance(extend, 'vtkCubeAxesActor'); // ----------------------------------------------------------------------------

var vtkCubeAxesActor$1 = {
  newInstance: newInstance,
  extend: extend,
  newCubeAxesActorHelper: newCubeAxesActorHelper
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Rendering/Core/Glyph3DMapper.js":
/*!***********************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Rendering/Core/Glyph3DMapper.js ***!
  \***********************************************************************/
/*! exports provided: default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkGlyph3DMapper$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "../node_modules/@babel/runtime/helpers/defineProperty.js");
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "../node_modules/@babel/runtime/helpers/toConsumableArray.js");
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! gl-matrix */ "../node_modules/gl-matrix/esm/index.js");
/* harmony import */ var _Glyph3DMapper_Constants_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Glyph3DMapper/Constants.js */ "../node_modules/@kitware/vtk.js/Rendering/Core/Glyph3DMapper/Constants.js");
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _Mapper_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Mapper.js */ "../node_modules/@kitware/vtk.js/Rendering/Core/Mapper.js");
/* harmony import */ var _Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../Common/Core/Math/index.js */ "../node_modules/@kitware/vtk.js/Common/Core/Math/index.js");
/* harmony import */ var _Common_DataModel_BoundingBox_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../Common/DataModel/BoundingBox.js */ "../node_modules/@kitware/vtk.js/Common/DataModel/BoundingBox.js");









function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var OrientationModes = _Glyph3DMapper_Constants_js__WEBPACK_IMPORTED_MODULE_3__["default"].OrientationModes,
    ScaleModes = _Glyph3DMapper_Constants_js__WEBPACK_IMPORTED_MODULE_3__["default"].ScaleModes;
var vtkErrorMacro = _macros_js__WEBPACK_IMPORTED_MODULE_4__["default"].vtkErrorMacro; // ----------------------------------------------------------------------------
// class methods
// ----------------------------------------------------------------------------

function vtkGlyph3DMapper(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkGlyph3DMapper');
  /**
   * An orientation array is a vtkDataArray with 3 components. The first
   * component is the angle of rotation along the X axis. The second
   * component is the angle of rotation along the Y axis. The third
   * component is the angle of rotation along the Z axis. Orientation is
   * specified in X,Y,Z order but the rotations are performed in Z,X an Y.
   * This definition is compliant with SetOrientation method on vtkProp3D.
   * By using vector or normal there is a degree of freedom or rotation
   * left (underconstrained). With the orientation array, there is no degree of
   * freedom left.
   */

  publicAPI.getOrientationModeAsString = function () {
    return _macros_js__WEBPACK_IMPORTED_MODULE_4__["default"].enumToString(OrientationModes, model.orientationMode);
  };

  publicAPI.setOrientationModeToDirection = function () {
    return publicAPI.setOrientationMode(OrientationModes.DIRECTION);
  };

  publicAPI.setOrientationModeToRotation = function () {
    return publicAPI.setOrientationMode(OrientationModes.ROTATION);
  };

  publicAPI.setOrientationModeToMatrix = function () {
    return publicAPI.setOrientationMode(OrientationModes.MATRIX);
  };

  publicAPI.getOrientationArrayData = function () {
    var idata = publicAPI.getInputData(0);

    if (!idata || !idata.getPointData()) {
      return null;
    }

    if (!model.orientationArray) {
      return idata.getPointData().getVectors();
    }

    return idata.getPointData().getArray(model.orientationArray);
  };

  publicAPI.getScaleModeAsString = function () {
    return _macros_js__WEBPACK_IMPORTED_MODULE_4__["default"].enumToString(ScaleModes, model.scaleMode);
  };

  publicAPI.setScaleModeToScaleByMagnitude = function () {
    return publicAPI.setScaleMode(ScaleModes.SCALE_BY_MAGNITUDE);
  };

  publicAPI.setScaleModeToScaleByComponents = function () {
    return publicAPI.setScaleMode(ScaleModes.SCALE_BY_COMPONENTS);
  };

  publicAPI.setScaleModeToScaleByConstant = function () {
    return publicAPI.setScaleMode(ScaleModes.SCALE_BY_CONSTANT);
  };

  publicAPI.getScaleArrayData = function () {
    var idata = publicAPI.getInputData(0);

    if (!idata || !idata.getPointData()) {
      return null;
    }

    if (!model.scaleArray) {
      return idata.getPointData().getScalars();
    }

    return idata.getPointData().getArray(model.scaleArray);
  };

  publicAPI.getBounds = function () {
    var idata = publicAPI.getInputData(0);
    var gdata = publicAPI.getInputData(1);

    if (!idata || !gdata) {
      return Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_6__["M"])();
    } // first we build the arrays used for the glyphing


    publicAPI.buildArrays();
    return model.bounds;
  };

  publicAPI.buildArrays = function () {
    // if the mtgime requires it, rebuild
    var idata = publicAPI.getInputData(0);
    var gdata = publicAPI.getInputData(1);

    if (model.buildTime.getMTime() < gdata.getMTime() || model.buildTime.getMTime() < idata.getMTime() || model.buildTime.getMTime() < publicAPI.getMTime()) {
      var pts = idata.getPoints().getData();
      var sArray = publicAPI.getScaleArrayData();
      var sData = null;
      var numSComp = 0;

      if (sArray) {
        sData = sArray.getData();
        numSComp = sArray.getNumberOfComponents();
      }

      if (model.scaling && sArray && model.scaleMode === ScaleModes.SCALE_BY_COMPONENTS && sArray.getNumberOfComponents() !== 3) {
        vtkErrorMacro('Cannot scale by components since scale array does not have 3 components.');
        sArray = null;
      } // get the glyph bounds


      var gbounds = gdata.getBounds(); // convert them to 8 points so we can compute the
      // overall bounds while building the arrays

      var corners = [];
      _Common_DataModel_BoundingBox_js__WEBPACK_IMPORTED_MODULE_7__["default"].getCorners(gbounds, corners);
      model.bounds[0] = _Common_DataModel_BoundingBox_js__WEBPACK_IMPORTED_MODULE_7__["default"].INIT_BOUNDS[0];
      model.bounds[1] = _Common_DataModel_BoundingBox_js__WEBPACK_IMPORTED_MODULE_7__["default"].INIT_BOUNDS[1];
      model.bounds[2] = _Common_DataModel_BoundingBox_js__WEBPACK_IMPORTED_MODULE_7__["default"].INIT_BOUNDS[2];
      model.bounds[3] = _Common_DataModel_BoundingBox_js__WEBPACK_IMPORTED_MODULE_7__["default"].INIT_BOUNDS[3];
      model.bounds[4] = _Common_DataModel_BoundingBox_js__WEBPACK_IMPORTED_MODULE_7__["default"].INIT_BOUNDS[4];
      model.bounds[5] = _Common_DataModel_BoundingBox_js__WEBPACK_IMPORTED_MODULE_7__["default"].INIT_BOUNDS[5];
      var tcorner = new Float64Array(3);
      var oArray = publicAPI.getOrientationArrayData();
      var identity = gl_matrix__WEBPACK_IMPORTED_MODULE_2__["mat4"].identity(new Float64Array(16));
      var trans = [];
      var scale = [];
      var numPts = pts.length / 3;
      model.matrixArray = new Float32Array(16 * numPts);
      var mbuff = model.matrixArray.buffer;
      model.normalArray = new Float32Array(9 * numPts);
      var nbuff = model.normalArray.buffer;
      var tuple = [];

      for (var i = 0; i < numPts; ++i) {
        var z = new Float32Array(mbuff, i * 64, 16);
        trans[0] = pts[i * 3];
        trans[1] = pts[i * 3 + 1];
        trans[2] = pts[i * 3 + 2];
        gl_matrix__WEBPACK_IMPORTED_MODULE_2__["mat4"].translate(z, identity, trans);

        if (oArray) {
          var orientation = [];
          oArray.getTuple(i, orientation);

          switch (model.orientationMode) {
            case OrientationModes.MATRIX:
              {
                // prettier-ignore
                var rotMat4 = [].concat(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_1___default()(orientation.slice(0, 3)), [0], _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_1___default()(orientation.slice(3, 6)), [0], _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_1___default()(orientation.slice(6, 9)), [0, 0, 0, 0, 1]);
                gl_matrix__WEBPACK_IMPORTED_MODULE_2__["mat4"].multiply(z, z, rotMat4);
                break;
              }

            case OrientationModes.ROTATION:
              gl_matrix__WEBPACK_IMPORTED_MODULE_2__["mat4"].rotateZ(z, z, orientation[2]);
              gl_matrix__WEBPACK_IMPORTED_MODULE_2__["mat4"].rotateX(z, z, orientation[0]);
              gl_matrix__WEBPACK_IMPORTED_MODULE_2__["mat4"].rotateY(z, z, orientation[1]);
              break;

            case OrientationModes.DIRECTION:
              if (orientation[1] === 0.0 && orientation[2] === 0.0) {
                if (orientation[0] < 0) {
                  gl_matrix__WEBPACK_IMPORTED_MODULE_2__["mat4"].rotateY(z, z, 3.1415926);
                }
              } else {
                var vMag = Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_6__["n"])(orientation);
                var vNew = [];
                vNew[0] = (orientation[0] + vMag) / 2.0;
                vNew[1] = orientation[1] / 2.0;
                vNew[2] = orientation[2] / 2.0;
                gl_matrix__WEBPACK_IMPORTED_MODULE_2__["mat4"].rotate(z, z, 3.1415926, vNew);
              }

              break;
          }
        } // scale data if appropriate


        if (model.scaling) {
          scale[0] = model.scaleFactor;
          scale[1] = model.scaleFactor;
          scale[2] = model.scaleFactor; // Get the scalar and vector data

          if (sArray) {
            switch (model.scaleMode) {
              case ScaleModes.SCALE_BY_MAGNITUDE:
                for (var t = 0; t < numSComp; ++t) {
                  tuple[t] = sData[i * numSComp + t];
                }

                scale[0] *= Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_6__["n"])(tuple, numSComp);
                scale[1] = scale[0];
                scale[2] = scale[0];
                break;

              case ScaleModes.SCALE_BY_COMPONENTS:
                for (var _t = 0; _t < numSComp; ++_t) {
                  tuple[_t] = sData[i * numSComp + _t];
                }

                scale[0] *= tuple[0];
                scale[1] *= tuple[1];
                scale[2] *= tuple[2];
                break;

              case ScaleModes.SCALE_BY_CONSTANT:
            }
          }

          if (scale[0] === 0.0) {
            scale[0] = 1.0e-10;
          }

          if (scale[1] === 0.0) {
            scale[1] = 1.0e-10;
          }

          if (scale[2] === 0.0) {
            scale[2] = 1.0e-10;
          }

          gl_matrix__WEBPACK_IMPORTED_MODULE_2__["mat4"].scale(z, z, scale);
        } // update bounds


        for (var p = 0; p < 8; ++p) {
          gl_matrix__WEBPACK_IMPORTED_MODULE_2__["vec3"].transformMat4(tcorner, corners[p], z);

          if (tcorner[0] < model.bounds[0]) {
            model.bounds[0] = tcorner[0];
          }

          if (tcorner[1] < model.bounds[2]) {
            model.bounds[2] = tcorner[1];
          }

          if (tcorner[2] < model.bounds[4]) {
            model.bounds[4] = tcorner[2];
          }

          if (tcorner[0] > model.bounds[1]) {
            model.bounds[1] = tcorner[0];
          }

          if (tcorner[1] > model.bounds[3]) {
            model.bounds[3] = tcorner[1];
          }

          if (tcorner[2] > model.bounds[5]) {
            model.bounds[5] = tcorner[2];
          }
        }

        var n = new Float32Array(nbuff, i * 36, 9);
        gl_matrix__WEBPACK_IMPORTED_MODULE_2__["mat3"].fromMat4(n, z);
        gl_matrix__WEBPACK_IMPORTED_MODULE_2__["mat3"].invert(n, n);
        gl_matrix__WEBPACK_IMPORTED_MODULE_2__["mat3"].transpose(n, n);
      } // map scalars as well


      var scalars = publicAPI.getAbstractScalars(idata, model.scalarMode, model.arrayAccessMode, model.arrayId, model.colorByArrayName).scalars;

      if (!model.useLookupTableScalarRange) {
        publicAPI.getLookupTable().setRange(model.scalarRange[0], model.scalarRange[1]);
      }

      model.colorArray = null;
      var lut = publicAPI.getLookupTable();

      if (lut && scalars) {
        // Ensure that the lookup table is built
        lut.build();
        model.colorArray = lut.mapScalars(scalars, model.colorMode, 0);
      }

      model.buildTime.modified();
    }
  };

  publicAPI.getPrimitiveCount = function () {
    var glyph = publicAPI.getInputData(1);
    var mult = publicAPI.getInputData().getPoints().getNumberOfValues() / 3;
    var pcount = {
      points: mult * glyph.getPoints().getNumberOfValues() / 3,
      verts: mult * (glyph.getVerts().getNumberOfValues() - glyph.getVerts().getNumberOfCells()),
      lines: mult * (glyph.getLines().getNumberOfValues() - 2 * glyph.getLines().getNumberOfCells()),
      triangles: mult * (glyph.getPolys().getNumberOfValues() - 3 * glyph.getLines().getNumberOfCells())
    };
    return pcount;
  };
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {
  orient: true,
  orientationMode: OrientationModes.DIRECTION,
  orientationArray: null,
  scaling: true,
  scaleFactor: 1.0,
  scaleMode: ScaleModes.SCALE_BY_MAGNITUDE,
  scaleArray: null,
  matrixArray: null,
  normalArray: null,
  colorArray: null
}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance

  _Mapper_js__WEBPACK_IMPORTED_MODULE_5__["default"].extend(publicAPI, model, initialValues);
  _macros_js__WEBPACK_IMPORTED_MODULE_4__["default"].algo(publicAPI, model, 2, 0);
  model.buildTime = {};
  _macros_js__WEBPACK_IMPORTED_MODULE_4__["default"].obj(model.buildTime, {
    mtime: 0
  });
  model.boundsTime = {};
  _macros_js__WEBPACK_IMPORTED_MODULE_4__["default"].obj(model.boundsTime, {
    mtime: 0
  });
  _macros_js__WEBPACK_IMPORTED_MODULE_4__["default"].setGet(publicAPI, model, ['orient', 'orientationMode', 'orientationArray', 'scaleArray', 'scaleFactor', 'scaleMode', 'scaling']);
  _macros_js__WEBPACK_IMPORTED_MODULE_4__["default"].get(publicAPI, model, ['colorArray', 'matrixArray', 'normalArray', 'buildTime']); // Object methods

  vtkGlyph3DMapper(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = _macros_js__WEBPACK_IMPORTED_MODULE_4__["default"].newInstance(extend, 'vtkGlyph3DMapper'); // ----------------------------------------------------------------------------

var vtkGlyph3DMapper$1 = _objectSpread({
  newInstance: newInstance,
  extend: extend
}, _Glyph3DMapper_Constants_js__WEBPACK_IMPORTED_MODULE_3__["default"]);




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Rendering/Core/Glyph3DMapper/Constants.js":
/*!*********************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Rendering/Core/Glyph3DMapper/Constants.js ***!
  \*********************************************************************************/
/*! exports provided: OrientationModes, ScaleModes, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OrientationModes", function() { return OrientationModes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ScaleModes", function() { return ScaleModes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Constants; });
var OrientationModes = {
  DIRECTION: 0,
  ROTATION: 1,
  MATRIX: 2
};
var ScaleModes = {
  SCALE_BY_CONSTANT: 0,
  SCALE_BY_MAGNITUDE: 1,
  SCALE_BY_COMPONENTS: 2
};
var Constants = {
  OrientationModes: OrientationModes,
  ScaleModes: ScaleModes
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Rendering/Core/HardwareSelector.js":
/*!**************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Rendering/Core/HardwareSelector.js ***!
  \**************************************************************************/
/*! exports provided: default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkHardwareSelector$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ "../node_modules/@babel/runtime/helpers/asyncToGenerator.js");
/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/regenerator */ "../node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _Common_DataModel_DataSet_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../Common/DataModel/DataSet.js */ "../node_modules/@kitware/vtk.js/Common/DataModel/DataSet.js");





var FieldAssociations = _Common_DataModel_DataSet_js__WEBPACK_IMPORTED_MODULE_3__["default"].FieldAssociations; // ----------------------------------------------------------------------------
// vtkHardwareSelector methods
// ----------------------------------------------------------------------------

function vtkHardwareSelector(publicAPI, model) {
  model.classHierarchy.push('vtkHardwareSelector'); // get the source data that is used for generating a selection. This
  // must be called at least once before calling generateSelection. In
  // raster based backends this method will capture the buffers. You can
  // call this once and then make multiple calls to generateSelection.

  publicAPI.getSourceDataAsync = /*#__PURE__*/function () {
    var _ref = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.mark(function _callee(renderer, fx1, fy1, fx2, fy2) {
      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));

    return function (_x, _x2, _x3, _x4, _x5) {
      return _ref.apply(this, arguments);
    };
  }();

  publicAPI.selectAsync = /*#__PURE__*/function () {
    var _ref2 = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.mark(function _callee2(renderer, fx1, fy1, fx2, fy2) {
      var srcData;
      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.wrap(function _callee2$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              _context2.next = 2;
              return publicAPI.getSourceDataAsync(renderer, fx1, fy1, fx2, fy2);

            case 2:
              srcData = _context2.sent;

              if (!srcData) {
                _context2.next = 5;
                break;
              }

              return _context2.abrupt("return", srcData.generateSelection(fx1, fy1, fx2, fy2));

            case 5:
              return _context2.abrupt("return", []);

            case 6:
            case "end":
              return _context2.stop();
          }
        }
      }, _callee2);
    }));

    return function (_x6, _x7, _x8, _x9, _x10) {
      return _ref2.apply(this, arguments);
    };
  }();
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {
  fieldAssociation: FieldAssociations.FIELD_ASSOCIATION_CELLS,
  captureZValues: false
}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance

  _macros_js__WEBPACK_IMPORTED_MODULE_2__["default"].obj(publicAPI, model);
  _macros_js__WEBPACK_IMPORTED_MODULE_2__["default"].setGet(publicAPI, model, ['fieldAssociation', 'captureZValues']); // Object methods

  vtkHardwareSelector(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = _macros_js__WEBPACK_IMPORTED_MODULE_2__["default"].newInstance(extend, 'vtkHardwareSelector'); // ----------------------------------------------------------------------------

var vtkHardwareSelector$1 = {
  newInstance: newInstance,
  extend: extend
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Rendering/Core/ImageMapper.js":
/*!*********************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Rendering/Core/ImageMapper.js ***!
  \*********************************************************************/
/*! exports provided: default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkImageMapper$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "../node_modules/@babel/runtime/helpers/defineProperty.js");
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _ImageMapper_Constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ImageMapper/Constants.js */ "../node_modules/@kitware/vtk.js/Rendering/Core/ImageMapper/Constants.js");
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _AbstractMapper_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./AbstractMapper.js */ "../node_modules/@kitware/vtk.js/Rendering/Core/AbstractMapper.js");
/* harmony import */ var _Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../Common/Core/Math/index.js */ "../node_modules/@kitware/vtk.js/Common/Core/Math/index.js");
/* harmony import */ var _Common_DataModel_Plane_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../Common/DataModel/Plane.js */ "../node_modules/@kitware/vtk.js/Common/DataModel/Plane.js");
/* harmony import */ var _Mapper_CoincidentTopologyHelper_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Mapper/CoincidentTopologyHelper.js */ "../node_modules/@kitware/vtk.js/Rendering/Core/Mapper/CoincidentTopologyHelper.js");
/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! gl-matrix */ "../node_modules/gl-matrix/esm/index.js");









function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var staticOffsetAPI = _Mapper_CoincidentTopologyHelper_js__WEBPACK_IMPORTED_MODULE_6__["default"].staticOffsetAPI,
    otherStaticMethods = _Mapper_CoincidentTopologyHelper_js__WEBPACK_IMPORTED_MODULE_6__["default"].otherStaticMethods;
var vtkWarningMacro = _macros_js__WEBPACK_IMPORTED_MODULE_2__["default"].vtkWarningMacro;
var SlicingMode = _ImageMapper_Constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].SlicingMode; // ----------------------------------------------------------------------------
// vtkImageMapper methods
// ----------------------------------------------------------------------------

function vtkImageMapper(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkImageMapper');

  publicAPI.getSliceAtPosition = function (pos) {
    var image = publicAPI.getInputData();
    var pos3;

    if (pos.length === 3) {
      pos3 = pos;
    } else if (Number.isFinite(pos)) {
      var bds = image.getBounds();

      switch (model.slicingMode) {
        case SlicingMode.X:
          pos3 = [pos, (bds[3] + bds[2]) / 2, (bds[5] + bds[4]) / 2];
          break;

        case SlicingMode.Y:
          pos3 = [(bds[1] + bds[0]) / 2, pos, (bds[5] + bds[4]) / 2];
          break;

        case SlicingMode.Z:
          pos3 = [(bds[1] + bds[0]) / 2, (bds[3] + bds[2]) / 2, pos];
          break;
      }
    }

    var ijk = [0, 0, 0];
    image.worldToIndex(pos3, ijk);
    var ex = image.getExtent();

    var _publicAPI$getClosest = publicAPI.getClosestIJKAxis(),
        ijkMode = _publicAPI$getClosest.ijkMode;

    var slice = 0;

    switch (ijkMode) {
      case SlicingMode.I:
        slice = Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_4__["A"])(ijk[0], ex[0], ex[1]);
        break;

      case SlicingMode.J:
        slice = Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_4__["A"])(ijk[1], ex[2], ex[3]);
        break;

      case SlicingMode.K:
        slice = Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_4__["A"])(ijk[2], ex[4], ex[5]);
        break;

      default:
        return 0;
    }

    return slice;
  };

  publicAPI.setSliceFromCamera = function (cam) {
    var fp = cam.getFocalPoint();

    switch (model.slicingMode) {
      case SlicingMode.I:
      case SlicingMode.J:
      case SlicingMode.K:
        {
          var slice = publicAPI.getSliceAtPosition(fp);
          publicAPI.setSlice(slice);
        }
        break;

      case SlicingMode.X:
        publicAPI.setSlice(fp[0]);
        break;

      case SlicingMode.Y:
        publicAPI.setSlice(fp[1]);
        break;

      case SlicingMode.Z:
        publicAPI.setSlice(fp[2]);
        break;
    }
  };

  publicAPI.setXSlice = function (id) {
    publicAPI.setSlicingMode(SlicingMode.X);
    publicAPI.setSlice(id);
  };

  publicAPI.setYSlice = function (id) {
    publicAPI.setSlicingMode(SlicingMode.Y);
    publicAPI.setSlice(id);
  };

  publicAPI.setZSlice = function (id) {
    publicAPI.setSlicingMode(SlicingMode.Z);
    publicAPI.setSlice(id);
  };

  publicAPI.setISlice = function (id) {
    publicAPI.setSlicingMode(SlicingMode.I);
    publicAPI.setSlice(id);
  };

  publicAPI.setJSlice = function (id) {
    publicAPI.setSlicingMode(SlicingMode.J);
    publicAPI.setSlice(id);
  };

  publicAPI.setKSlice = function (id) {
    publicAPI.setSlicingMode(SlicingMode.K);
    publicAPI.setSlice(id);
  };

  publicAPI.getSlicingModeNormal = function () {
    var out = [0, 0, 0];
    var a = publicAPI.getInputData().getDirection();
    var mat3 = [[a[0], a[1], a[2]], [a[3], a[4], a[5]], [a[6], a[7], a[8]]];

    switch (model.slicingMode) {
      case SlicingMode.X:
        out[0] = 1;
        break;

      case SlicingMode.Y:
        out[1] = 1;
        break;

      case SlicingMode.Z:
        out[2] = 1;
        break;

      case SlicingMode.I:
        Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_4__["N"])(mat3, [1, 0, 0], out);
        break;

      case SlicingMode.J:
        Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_4__["N"])(mat3, [0, 1, 0], out);
        break;

      case SlicingMode.K:
        Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_4__["N"])(mat3, [0, 0, 1], out);
        break;
    }

    return out;
  };

  function computeClosestIJKAxis() {
    var inVec3;

    switch (model.slicingMode) {
      case SlicingMode.X:
        inVec3 = [1, 0, 0];
        break;

      case SlicingMode.Y:
        inVec3 = [0, 1, 0];
        break;

      case SlicingMode.Z:
        inVec3 = [0, 0, 1];
        break;

      default:
        model.closestIJKAxis = {
          ijkMode: model.slicingMode,
          flip: false
        };
        return;
    } // Project vec3 onto direction cosines


    var out = [0, 0, 0]; // The direction matrix in vtkImageData is the indexToWorld rotation matrix
    // with a column-major data layout since it is stored as a WebGL matrix.
    // We need the worldToIndex rotation matrix for the projection, and it needs
    // to be in a row-major data layout to use vtkMath for operations.
    // To go from the indexToWorld column-major matrix to the worldToIndex
    // row-major matrix, we need to transpose it (column -> row) then inverse it.
    // However, that 3x3 matrix is a rotation matrix which is orthonormal, meaning
    // that its inverse is equal to its transpose. We therefore need to apply two
    // transpositions resulting in a no-op.

    var a = publicAPI.getInputData().getDirection();
    var mat3 = [[a[0], a[1], a[2]], [a[3], a[4], a[5]], [a[6], a[7], a[8]]];
    Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_4__["N"])(mat3, inVec3, out);
    var maxAbs = 0.0;
    var ijkMode = -1;
    var flip = false;

    for (var axis = 0; axis < out.length; ++axis) {
      var absValue = Math.abs(out[axis]);

      if (absValue > maxAbs) {
        maxAbs = absValue;
        flip = out[axis] < 0.0;
        ijkMode = axis;
      }
    }

    if (maxAbs !== 1.0) {
      var xyzLabel = 'IJKXYZ'[model.slicingMode];
      var ijkLabel = 'IJKXYZ'[ijkMode];
      vtkWarningMacro("Unaccurate slicing along ".concat(xyzLabel, " axis which ") + "is not aligned with any IJK axis of the image data. " + "Using ".concat(ijkLabel, " axis  as a fallback (").concat(maxAbs, "% aligned). ") + "Necessitates slice reformat that is not yet implemented.  " + "You can switch the slicing mode on your mapper to do IJK slicing instead.");
    }

    model.closestIJKAxis = {
      ijkMode: ijkMode,
      flip: flip
    };
  }

  publicAPI.setSlicingMode = function (mode) {
    if (model.slicingMode === mode) {
      return;
    }

    model.slicingMode = mode;

    if (publicAPI.getInputData()) {
      computeClosestIJKAxis();
    }

    publicAPI.modified();
  };

  publicAPI.getClosestIJKAxis = function () {
    if ((model.closestIJKAxis === undefined || model.closestIJKAxis.ijkMode === SlicingMode.NONE) && publicAPI.getInputData()) {
      computeClosestIJKAxis();
    }

    return model.closestIJKAxis;
  };

  publicAPI.getBounds = function () {
    var image = publicAPI.getInputData();

    if (!image) {
      return Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_4__["M"])();
    }

    if (!model.useCustomExtents) {
      return image.getBounds();
    }

    var ex = model.customDisplayExtent.slice();

    var _publicAPI$getClosest2 = publicAPI.getClosestIJKAxis(),
        ijkMode = _publicAPI$getClosest2.ijkMode;

    var nSlice = model.slice;

    if (ijkMode !== model.slicingMode) {
      // If not IJK slicing, get the IJK slice from the XYZ position/slice
      nSlice = publicAPI.getSliceAtPosition(model.slice);
    }

    switch (ijkMode) {
      case SlicingMode.I:
        ex[0] = nSlice;
        ex[1] = nSlice;
        break;

      case SlicingMode.J:
        ex[2] = nSlice;
        ex[3] = nSlice;
        break;

      case SlicingMode.K:
        ex[4] = nSlice;
        ex[5] = nSlice;
        break;
    }

    return image.extentToBounds(ex);
  };

  publicAPI.getBoundsForSlice = function () {
    var slice = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : model.slice;
    var thickness = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
    var image = publicAPI.getInputData();

    if (!image) {
      return Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_4__["M"])();
    }

    var extent = image.getExtent();

    var _publicAPI$getClosest3 = publicAPI.getClosestIJKAxis(),
        ijkMode = _publicAPI$getClosest3.ijkMode;

    var nSlice = slice;

    if (ijkMode !== model.slicingMode) {
      // If not IJK slicing, get the IJK slice from the XYZ position/slice
      nSlice = publicAPI.getSliceAtPosition(slice);
    }

    switch (ijkMode) {
      case SlicingMode.I:
        extent[0] = nSlice - thickness;
        extent[1] = nSlice + thickness;
        break;

      case SlicingMode.J:
        extent[2] = nSlice - thickness;
        extent[3] = nSlice + thickness;
        break;

      case SlicingMode.K:
        extent[4] = nSlice - thickness;
        extent[5] = nSlice + thickness;
        break;
    }

    return image.extentToBounds(extent);
  };

  publicAPI.getIsOpaque = function () {
    return true;
  };

  function doPicking(p1, p2) {
    var imageData = publicAPI.getInputData();
    var extent = imageData.getExtent(); // Slice origin

    var ijk = [extent[0], extent[2], extent[4]];

    var _publicAPI$getClosest4 = publicAPI.getClosestIJKAxis(),
        ijkMode = _publicAPI$getClosest4.ijkMode;

    var nSlice = model.slice;

    if (ijkMode !== model.slicingMode) {
      // If not IJK slicing, get the IJK slice from the XYZ position/slice
      nSlice = publicAPI.getSliceAtPosition(nSlice);
    }

    ijk[ijkMode] += nSlice;
    var worldOrigin = [0, 0, 0];
    imageData.indexToWorld(ijk, worldOrigin); // Normal computation

    ijk[ijkMode] += 1;
    var worldNormal = [0, 0, 0];
    imageData.indexToWorld(ijk, worldNormal);
    worldNormal[0] -= worldOrigin[0];
    worldNormal[1] -= worldOrigin[1];
    worldNormal[2] -= worldOrigin[2];
    gl_matrix__WEBPACK_IMPORTED_MODULE_7__["vec3"].normalize(worldNormal, worldNormal);
    var intersect = _Common_DataModel_Plane_js__WEBPACK_IMPORTED_MODULE_5__["default"].intersectWithLine(p1, p2, worldOrigin, worldNormal);

    if (intersect.intersection) {
      var point = intersect.x;
      var absoluteIJK = [0, 0, 0];
      imageData.worldToIndex(point, absoluteIJK); // `t` is the parametric position along the line
      // defined in Plane.intersectWithLine

      return {
        t: intersect.t,
        absoluteIJK: absoluteIJK
      };
    }

    return null;
  }

  publicAPI.intersectWithLineForPointPicking = function (p1, p2) {
    var pickingData = doPicking(p1, p2);

    if (pickingData) {
      var imageData = publicAPI.getInputData();
      var extent = imageData.getExtent(); // Get closer integer ijk
      // NB: point picking means closest slice, means rounding

      var ijk = [Math.round(pickingData.absoluteIJK[0]), Math.round(pickingData.absoluteIJK[1]), Math.round(pickingData.absoluteIJK[2])]; // Are we outside our actual extent

      if (ijk[0] < extent[0] || ijk[0] > extent[1] || ijk[1] < extent[2] || ijk[1] > extent[3] || ijk[2] < extent[4] || ijk[2] > extent[5]) {
        return null;
      }

      return {
        t: pickingData.t,
        ijk: ijk
      };
    }

    return null;
  };

  publicAPI.intersectWithLineForCellPicking = function (p1, p2) {
    var pickingData = doPicking(p1, p2);

    if (pickingData) {
      var imageData = publicAPI.getInputData();
      var extent = imageData.getExtent();
      var absIJK = pickingData.absoluteIJK; // Get closer integer ijk
      // NB: cell picking means closest voxel, means flooring

      var ijk = [Math.floor(absIJK[0]), Math.floor(absIJK[1]), Math.floor(absIJK[2])]; // Are we outside our actual extent

      if (ijk[0] < extent[0] || ijk[0] > extent[1] - 1 || ijk[1] < extent[2] || ijk[1] > extent[3] - 1 || ijk[2] < extent[4] || ijk[2] > extent[5] - 1) {
        return null;
      } // Parametric coordinates within cell


      var pCoords = [absIJK[0] - ijk[0], absIJK[1] - ijk[1], absIJK[2] - ijk[2]];
      return {
        t: pickingData.t,
        ijk: ijk,
        pCoords: pCoords
      };
    }

    return null;
  };
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {
  displayExtent: [0, 0, 0, 0, 0, 0],
  customDisplayExtent: [0, 0, 0, 0],
  useCustomExtents: false,
  slice: 0,
  slicingMode: SlicingMode.NONE,
  closestIJKAxis: {
    ijkMode: SlicingMode.NONE,
    flip: false
  },
  renderToRectangle: false,
  sliceAtFocalPoint: false
}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API

  _AbstractMapper_js__WEBPACK_IMPORTED_MODULE_3__["default"].extend(publicAPI, model, initialValues);
  _macros_js__WEBPACK_IMPORTED_MODULE_2__["default"].get(publicAPI, model, ['slicingMode']);
  _macros_js__WEBPACK_IMPORTED_MODULE_2__["default"].setGet(publicAPI, model, ['slice', 'closestIJKAxis', 'useCustomExtents', 'renderToRectangle', 'sliceAtFocalPoint']);
  _macros_js__WEBPACK_IMPORTED_MODULE_2__["default"].setGetArray(publicAPI, model, ['customDisplayExtent'], 4);
  _Mapper_CoincidentTopologyHelper_js__WEBPACK_IMPORTED_MODULE_6__["default"].implementCoincidentTopologyMethods(publicAPI, model); // Object methods

  vtkImageMapper(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = _macros_js__WEBPACK_IMPORTED_MODULE_2__["default"].newInstance(extend, 'vtkImageMapper'); // ----------------------------------------------------------------------------

var vtkImageMapper$1 = _objectSpread(_objectSpread(_objectSpread({
  newInstance: newInstance,
  extend: extend
}, staticOffsetAPI), otherStaticMethods), _ImageMapper_Constants_js__WEBPACK_IMPORTED_MODULE_1__["default"]);




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Rendering/Core/ImageMapper/Constants.js":
/*!*******************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Rendering/Core/ImageMapper/Constants.js ***!
  \*******************************************************************************/
/*! exports provided: SlicingMode, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SlicingMode", function() { return SlicingMode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Constants; });
var SlicingMode = {
  NONE: -1,
  I: 0,
  J: 1,
  K: 2,
  X: 3,
  Y: 4,
  Z: 5
};
var Constants = {
  SlicingMode: SlicingMode
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Rendering/Core/ImageProperty.js":
/*!***********************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Rendering/Core/ImageProperty.js ***!
  \***********************************************************************/
/*! exports provided: default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkImageProperty$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _ImageProperty_Constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ImageProperty/Constants.js */ "../node_modules/@kitware/vtk.js/Rendering/Core/ImageProperty/Constants.js");



var InterpolationType = _ImageProperty_Constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].InterpolationType;
var vtkErrorMacro = _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].vtkErrorMacro;
var VTK_MAX_VRCOMP = 4; // ----------------------------------------------------------------------------
// vtkImageProperty methods
// ----------------------------------------------------------------------------

function vtkImageProperty(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkImageProperty');

  publicAPI.getMTime = function () {
    var mTime = model.mtime;
    var time;

    for (var index = 0; index < VTK_MAX_VRCOMP; index++) {
      // Color MTimes
      if (model.componentData[index].rGBTransferFunction) {
        // time that RGB transfer function was last modified
        time = model.componentData[index].rGBTransferFunction.getMTime();
        mTime = mTime > time ? mTime : time;
      } // Piecewise function MTimes


      if (model.componentData[index].piecewiseFunction) {
        // time that weighting function was last modified
        time = model.componentData[index].piecewiseFunction.getMTime();
        mTime = mTime > time ? mTime : time;
      }
    }

    return mTime;
  }; // Set the color of a volume to an RGB transfer function


  publicAPI.setRGBTransferFunction = function (index, func) {
    // backwards compatible call without the component index
    var idx = index;
    var transferFunc = func;

    if (!Number.isInteger(index)) {
      transferFunc = index;
      idx = 0;
    }

    if (model.componentData[idx].rGBTransferFunction !== transferFunc) {
      model.componentData[idx].rGBTransferFunction = transferFunc;
      publicAPI.modified();
      return true;
    }

    return false;
  }; // Get the currently set RGB transfer function.


  publicAPI.getRGBTransferFunction = function () {
    var idx = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
    return model.componentData[idx].rGBTransferFunction;
  }; // Set the piecewise function


  publicAPI.setPiecewiseFunction = function (index, func) {
    var idx = index;
    var transferFunc = func;

    if (!Number.isInteger(index)) {
      transferFunc = index;
      idx = 0;
    }

    if (model.componentData[idx].piecewiseFunction !== transferFunc) {
      model.componentData[idx].piecewiseFunction = transferFunc;
      publicAPI.modified();
      return true;
    }

    return false;
  }; // Get the component weighting function.


  publicAPI.getPiecewiseFunction = function () {
    var idx = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
    return model.componentData[idx].piecewiseFunction;
  }; // Alias to set the piecewise function


  publicAPI.setScalarOpacity = function (index, func) {
    // backwards compatible call without the component index
    var idx = index;
    var transferFunc = func;

    if (!Number.isInteger(index)) {
      transferFunc = index;
      idx = 0;
    }

    return publicAPI.setPiecewiseFunction(idx, transferFunc);
  }; // Alias to get the piecewise function (backwards compatibility)


  publicAPI.getScalarOpacity = function () {
    var idx = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
    return publicAPI.getPiecewiseFunction(idx);
  };

  publicAPI.setComponentWeight = function (index, value) {
    if (index < 0 || index >= VTK_MAX_VRCOMP) {
      vtkErrorMacro('Invalid index');
      return false;
    }

    var val = Math.min(1, Math.max(0, value));

    if (model.componentData[index].componentWeight !== val) {
      model.componentData[index].componentWeight = val;
      publicAPI.modified();
      return true;
    }

    return false;
  };

  publicAPI.getComponentWeight = function (index) {
    if (index < 0 || index >= VTK_MAX_VRCOMP) {
      vtkErrorMacro('Invalid index');
      return 0.0;
    }

    return model.componentData[index].componentWeight;
  };

  publicAPI.setInterpolationTypeToNearest = function () {
    return publicAPI.setInterpolationType(InterpolationType.NEAREST);
  };

  publicAPI.setInterpolationTypeToLinear = function () {
    return publicAPI.setInterpolationType(InterpolationType.LINEAR);
  };

  publicAPI.getInterpolationTypeAsString = function () {
    return _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].enumToString(InterpolationType, model.interpolationType);
  };
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {
  independentComponents: false,
  interpolationType: InterpolationType.LINEAR,
  colorWindow: 255,
  colorLevel: 127.5,
  ambient: 1.0,
  diffuse: 0.0,
  opacity: 1.0,
  useLookupTableScalarRange: false
}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API

  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].obj(publicAPI, model);

  if (!model.componentData) {
    model.componentData = [];

    for (var i = 0; i < VTK_MAX_VRCOMP; i++) {
      model.componentData.push({
        rGBTransferFunction: null,
        piecewiseFunction: null,
        componentWeight: 1.0
      });
    }
  }

  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].setGet(publicAPI, model, ['independentComponents', 'interpolationType', 'colorWindow', 'colorLevel', 'ambient', 'diffuse', 'opacity', 'useLookupTableScalarRange']); // Object methods

  vtkImageProperty(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].newInstance(extend, 'vtkImageProperty'); // ----------------------------------------------------------------------------

var vtkImageProperty$1 = {
  newInstance: newInstance,
  extend: extend
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Rendering/Core/ImageProperty/Constants.js":
/*!*********************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Rendering/Core/ImageProperty/Constants.js ***!
  \*********************************************************************************/
/*! exports provided: InterpolationType, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InterpolationType", function() { return InterpolationType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Constants; });
var InterpolationType = {
  NEAREST: 0,
  LINEAR: 1
};
var Constants = {
  InterpolationType: InterpolationType
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Rendering/Core/ImageSlice.js":
/*!********************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Rendering/Core/ImageSlice.js ***!
  \********************************************************************/
/*! exports provided: default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkImageSlice$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! gl-matrix */ "../node_modules/gl-matrix/esm/index.js");
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _Common_DataModel_BoundingBox_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../Common/DataModel/BoundingBox.js */ "../node_modules/@kitware/vtk.js/Common/DataModel/BoundingBox.js");
/* harmony import */ var _Prop3D_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Prop3D.js */ "../node_modules/@kitware/vtk.js/Rendering/Core/Prop3D.js");
/* harmony import */ var _ImageProperty_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ImageProperty.js */ "../node_modules/@kitware/vtk.js/Rendering/Core/ImageProperty.js");






var vtkDebugMacro = _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].vtkDebugMacro; // ----------------------------------------------------------------------------
// vtkImageSlice methods
// ----------------------------------------------------------------------------

function vtkImageSlice(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkImageSlice');

  publicAPI.getActors = function () {
    return publicAPI;
  };

  publicAPI.getImages = function () {
    return publicAPI;
  };

  publicAPI.getIsOpaque = function () {
    if (model.forceOpaque) {
      return true;
    }

    if (model.forceTranslucent) {
      return false;
    } // make sure we have a property


    if (!model.property) {
      // force creation of a property
      publicAPI.getProperty();
    }

    var isOpaque = model.property.getOpacity() >= 1.0; // are we using an opaque scalar array, if any?

    isOpaque = isOpaque && (!model.mapper || model.mapper.getIsOpaque());
    return isOpaque;
  }; // Always render during opaque pass, to keep the behavior
  // predictable and because depth-peeling kills alpha-blending.
  // In the future, the Renderer should render images in layers,
  // i.e. where each image will have a layer number assigned to it,
  // and the Renderer will do the images in their own pass.


  publicAPI.hasTranslucentPolygonalGeometry = function () {
    return false;
  };

  publicAPI.makeProperty = _ImageProperty_js__WEBPACK_IMPORTED_MODULE_4__["default"].newInstance;

  publicAPI.getProperty = function () {
    if (model.property === null) {
      model.property = publicAPI.makeProperty();
    }

    return model.property;
  };

  publicAPI.getBounds = function () {
    if (model.mapper === null) {
      return model.bounds;
    } // Check for the special case when the mapper's bounds are unknown


    var bds = model.mapper.getBounds();

    if (!bds || bds.length !== 6) {
      return bds;
    } // Check for the special case when the actor is empty.


    if (bds[0] > bds[1]) {
      model.mapperBounds = bds.concat(); // copy the mapper's bounds

      model.bounds = [1, -1, 1, -1, 1, -1];
      model.boundsMTime.modified();
      return bds;
    } // Check if we have cached values for these bounds - we cache the
    // values returned by model.mapper.getBounds() and we store the time
    // of caching. If the values returned this time are different, or
    // the modified time of this class is newer than the cached time,
    // then we need to rebuild.


    var zip = function zip(rows) {
      return rows[0].map(function (_, c) {
        return rows.map(function (row) {
          return row[c];
        });
      });
    };

    if (!model.mapperBounds || !zip([bds, model.mapperBounds]).reduce(function (a, b) {
      return a && b[0] === b[1];
    }, true) || publicAPI.getMTime() > model.boundsMTime.getMTime()) {
      vtkDebugMacro('Recomputing bounds...');
      model.mapperBounds = bds.map(function (x) {
        return x;
      });
      var bbox = [];
      _Common_DataModel_BoundingBox_js__WEBPACK_IMPORTED_MODULE_2__["default"].getCorners(bds, bbox);
      publicAPI.computeMatrix();
      var tmp4 = new Float64Array(16);
      gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat4"].transpose(tmp4, model.matrix);
      bbox.forEach(function (pt) {
        return gl_matrix__WEBPACK_IMPORTED_MODULE_0__["vec3"].transformMat4(pt, pt, tmp4);
      });
      /* eslint-disable no-multi-assign */

      model.bounds[0] = model.bounds[2] = model.bounds[4] = Number.MAX_VALUE;
      model.bounds[1] = model.bounds[3] = model.bounds[5] = -Number.MAX_VALUE;
      /* eslint-enable no-multi-assign */

      model.bounds = model.bounds.map(function (d, i) {
        return i % 2 === 0 ? bbox.reduce(function (a, b) {
          return a > b[i / 2] ? b[i / 2] : a;
        }, d) : bbox.reduce(function (a, b) {
          return a < b[(i - 1) / 2] ? b[(i - 1) / 2] : a;
        }, d);
      });
      model.boundsMTime.modified();
    }

    return model.bounds;
  };

  publicAPI.getBoundsForSlice = function (slice) {
    var thickness = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
    // Check for the special case when the mapper's bounds are unknown
    var bds = model.mapper.getBoundsForSlice(slice, thickness);

    if (!bds || bds.length !== 6) {
      return bds;
    } // Check for the special case when the actor is empty.


    if (bds[0] > bds[1]) {
      return bds;
    }

    var bbox = [];
    _Common_DataModel_BoundingBox_js__WEBPACK_IMPORTED_MODULE_2__["default"].getCorners(bds, bbox);
    publicAPI.computeMatrix();
    var tmp4 = new Float64Array(16);
    gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat4"].transpose(tmp4, model.matrix);
    bbox.forEach(function (pt) {
      return gl_matrix__WEBPACK_IMPORTED_MODULE_0__["vec3"].transformMat4(pt, pt, tmp4);
    });
    var newBounds = [Number.MAX_VALUE, -Number.MAX_VALUE, Number.MAX_VALUE, -Number.MAX_VALUE, Number.MAX_VALUE, -Number.MAX_VALUE];
    newBounds = newBounds.map(function (d, i) {
      return i % 2 === 0 ? bbox.reduce(function (a, b) {
        return a > b[i / 2] ? b[i / 2] : a;
      }, d) : bbox.reduce(function (a, b) {
        return a < b[(i - 1) / 2] ? b[(i - 1) / 2] : a;
      }, d);
    });
    return newBounds;
  }; //----------------------------------------------------------------------------
  // Get the minimum X bound


  publicAPI.getMinXBound = function () {
    publicAPI.getBounds();
    return model.bounds[0];
  }; // Get the maximum X bound


  publicAPI.getMaxXBound = function () {
    publicAPI.getBounds();
    return model.bounds[1];
  }; // Get the minimum Y bound


  publicAPI.getMinYBound = function () {
    publicAPI.getBounds();
    return model.bounds[2];
  }; // Get the maximum Y bound


  publicAPI.getMaxYBound = function () {
    publicAPI.getBounds();
    return model.bounds[3];
  }; // Get the minimum Z bound


  publicAPI.getMinZBound = function () {
    publicAPI.getBounds();
    return model.bounds[4];
  }; // Get the maximum Z bound


  publicAPI.getMaxZBound = function () {
    publicAPI.getBounds();
    return model.bounds[5];
  };

  publicAPI.getMTime = function () {
    var mt = model.mtime;

    if (model.property !== null) {
      var time = model.property.getMTime();
      mt = time > mt ? time : mt;
    }

    return mt;
  };

  publicAPI.getRedrawMTime = function () {
    var mt = model.mtime;

    if (model.mapper !== null) {
      var time = model.mapper.getMTime();
      mt = time > mt ? time : mt;

      if (model.mapper.getInput() !== null) {
        // FIXME !!! getInputAlgorithm / getInput
        model.mapper.getInputAlgorithm().update();
        time = model.mapper.getInput().getMTime();
        mt = time > mt ? time : mt;
      }
    }

    if (model.property !== null) {
      var _time = model.property.getMTime();

      mt = _time > mt ? _time : mt;

      if (model.property.getRGBTransferFunction() !== null) {
        _time = model.property.getRGBTransferFunction().getMTime();
        mt = _time > mt ? _time : mt;
      }
    }

    return mt;
  };

  publicAPI.getSupportsSelection = function () {
    return model.mapper ? model.mapper.getSupportsSelection() : false;
  };
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {
  mapper: null,
  property: null,
  bounds: [1, -1, 1, -1, 1, -1]
}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance

  _Prop3D_js__WEBPACK_IMPORTED_MODULE_3__["default"].extend(publicAPI, model, initialValues); // vtkTimeStamp

  model.boundsMTime = {};
  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].obj(model.boundsMTime); // Build VTK API

  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].set(publicAPI, model, ['property']);
  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].setGet(publicAPI, model, ['mapper']);
  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].getArray(publicAPI, model, ['bounds'], 6); // Object methods

  vtkImageSlice(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].newInstance(extend, 'vtkImageSlice'); // ----------------------------------------------------------------------------

var vtkImageSlice$1 = {
  newInstance: newInstance,
  extend: extend
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Rendering/Core/InteractorObserver.js":
/*!****************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Rendering/Core/InteractorObserver.js ***!
  \****************************************************************************/
/*! exports provided: STATIC, default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "STATIC", function() { return STATIC; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkInteractorObserver$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "../node_modules/@babel/runtime/helpers/defineProperty.js");
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _RenderWindowInteractor_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./RenderWindowInteractor.js */ "../node_modules/@kitware/vtk.js/Rendering/Core/RenderWindowInteractor.js");




function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var vtkErrorMacro = _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].vtkErrorMacro,
    VOID = _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].VOID; // ----------------------------------------------------------------------------
// Global methods
// ----------------------------------------------------------------------------
//----------------------------------------------------------------------------
// Description:
// Transform from world to display coordinates.

function computeWorldToDisplay(renderer, x, y, z) {
  var view = renderer.getRenderWindow().getViews()[0];
  return view.worldToDisplay(x, y, z, renderer);
} //----------------------------------------------------------------------------
// Description:
// Transform from display to world coordinates.


function computeDisplayToWorld(renderer, x, y, z) {
  var view = renderer.getRenderWindow().getViews()[0];
  return view.displayToWorld(x, y, z, renderer);
} // ----------------------------------------------------------------------------
// Static API
// ----------------------------------------------------------------------------


var STATIC = {
  computeWorldToDisplay: computeWorldToDisplay,
  computeDisplayToWorld: computeDisplayToWorld
}; // ----------------------------------------------------------------------------
// vtkInteractorObserver methods
// ----------------------------------------------------------------------------

function vtkInteractorObserver(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkInteractorObserver');

  var superClass = _objectSpread({}, publicAPI); //----------------------------------------------------------------------------


  function unsubscribeFromEvents() {
    while (model.subscribedEvents.length) {
      model.subscribedEvents.pop().unsubscribe();
    }
  } //----------------------------------------------------------------------------
  // Check what events we can handle and register callbacks


  function subscribeToEvents() {
    _RenderWindowInteractor_js__WEBPACK_IMPORTED_MODULE_2__["default"].handledEvents.forEach(function (eventName) {
      if (publicAPI["handle".concat(eventName)]) {
        model.subscribedEvents.push(model.interactor["on".concat(eventName)](function (callData) {
          if (model.processEvents) {
            return publicAPI["handle".concat(eventName)](callData);
          }

          return VOID;
        }, model.priority));
      }
    });
  } //----------------------------------------------------------------------------
  // Public API methods
  //----------------------------------------------------------------------------


  publicAPI.setInteractor = function (i) {
    if (i === model.interactor) {
      return;
    }

    unsubscribeFromEvents();
    model.interactor = i;

    if (i && model.enabled) {
      subscribeToEvents();
    }

    publicAPI.modified();
  }; //----------------------------------------------------------------------------


  publicAPI.setEnabled = function (enable) {
    if (enable === model.enabled) {
      return;
    }

    unsubscribeFromEvents();

    if (enable) {
      if (model.interactor) {
        subscribeToEvents();
      } else {
        vtkErrorMacro("\n          The interactor must be set before subscribing to events\n        ");
      }
    }

    model.enabled = enable;
    publicAPI.modified();
  }; //----------------------------------------------------------------------------
  // Description:
  // Transform from display to world coordinates.


  publicAPI.computeDisplayToWorld = function (renderer, x, y, z) {
    if (!renderer) {
      return null;
    }

    return model.interactor.getView().displayToWorld(x, y, z, renderer);
  }; //----------------------------------------------------------------------------
  // Description:
  // Transform from world to display coordinates.


  publicAPI.computeWorldToDisplay = function (renderer, x, y, z) {
    if (!renderer) {
      return null;
    }

    return model.interactor.getView().worldToDisplay(x, y, z, renderer);
  }; //----------------------------------------------------------------------------


  publicAPI.setPriority = function (priority) {
    var modified = superClass.setPriority(priority);

    if (modified && model.interactor) {
      unsubscribeFromEvents();
      subscribeToEvents();
    }
  };
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {
  enabled: true,
  interactor: null,
  priority: 0.0,
  processEvents: true,
  subscribedEvents: []
}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Object methods

  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].obj(publicAPI, model);
  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].event(publicAPI, model, 'InteractionEvent');
  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].event(publicAPI, model, 'StartInteractionEvent');
  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].event(publicAPI, model, 'EndInteractionEvent'); // Create get-only macros

  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].get(publicAPI, model, ['interactor', 'enabled']); // Create get-set macros

  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].setGet(publicAPI, model, ['priority', 'processEvents']); // For more macro methods, see "Sources/macros.js"
  // Object specific methods

  vtkInteractorObserver(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].newInstance(extend, 'vtkInteractorObserver'); // ----------------------------------------------------------------------------

var vtkInteractorObserver$1 = _objectSpread({
  newInstance: newInstance,
  extend: extend
}, STATIC);




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Rendering/Core/InteractorStyle.js":
/*!*************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Rendering/Core/InteractorStyle.js ***!
  \*************************************************************************/
/*! exports provided: default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkInteractorStyle$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "../node_modules/@babel/runtime/helpers/defineProperty.js");
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _InteractorObserver_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./InteractorObserver.js */ "../node_modules/@kitware/vtk.js/Rendering/Core/InteractorObserver.js");
/* harmony import */ var _InteractorStyle_Constants_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./InteractorStyle/Constants.js */ "../node_modules/@kitware/vtk.js/Rendering/Core/InteractorStyle/Constants.js");





function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var States = _InteractorStyle_Constants_js__WEBPACK_IMPORTED_MODULE_3__["default"].States; // ----------------------------------------------------------------------------
// Global methods
// ----------------------------------------------------------------------------
// Add module-level functions or api that you want to expose statically via
// the next section...

var stateNames = {
  Rotate: States.IS_ROTATE,
  Pan: States.IS_PAN,
  Spin: States.IS_SPIN,
  Dolly: States.IS_DOLLY,
  CameraPose: States.IS_CAMERA_POSE,
  WindowLevel: States.IS_WINDOW_LEVEL,
  Slice: States.IS_SLICE
}; // ----------------------------------------------------------------------------
// vtkInteractorStyle methods
// ----------------------------------------------------------------------------

function vtkInteractorStyle(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkInteractorStyle'); // Public API methods
  // create bunch of Start/EndState methods

  Object.keys(stateNames).forEach(function (key) {
    _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].event(publicAPI, model, "Start".concat(key, "Event"));

    publicAPI["start".concat(key)] = function () {
      if (model.state !== States.IS_NONE) {
        return;
      }

      model.state = stateNames[key];
      model.interactor.requestAnimation(publicAPI);
      publicAPI.invokeStartInteractionEvent({
        type: 'StartInteractionEvent'
      });
      publicAPI["invokeStart".concat(key, "Event")]({
        type: "Start".concat(key, "Event")
      });
    };

    _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].event(publicAPI, model, "End".concat(key, "Event"));

    publicAPI["end".concat(key)] = function () {
      if (model.state !== stateNames[key]) {
        return;
      }

      model.state = States.IS_NONE;
      model.interactor.cancelAnimation(publicAPI);
      publicAPI.invokeEndInteractionEvent({
        type: 'EndInteractionEvent'
      });
      publicAPI["invokeEnd".concat(key, "Event")]({
        type: "End".concat(key, "Event")
      });
      model.interactor.render();
    };
  }); //----------------------------------------------------------------------------

  publicAPI.handleKeyPress = function (callData) {
    var rwi = model.interactor;
    var ac = null;

    switch (callData.key) {
      case 'r':
      case 'R':
        callData.pokedRenderer.resetCamera();
        rwi.render();
        break;

      case 'w':
      case 'W':
        ac = callData.pokedRenderer.getActors();
        ac.forEach(function (anActor) {
          var prop = anActor.getProperty();

          if (prop.setRepresentationToWireframe) {
            prop.setRepresentationToWireframe();
          }
        });
        rwi.render();
        break;

      case 's':
      case 'S':
        ac = callData.pokedRenderer.getActors();
        ac.forEach(function (anActor) {
          var prop = anActor.getProperty();

          if (prop.setRepresentationToSurface) {
            prop.setRepresentationToSurface();
          }
        });
        rwi.render();
        break;

      case 'v':
      case 'V':
        ac = callData.pokedRenderer.getActors();
        ac.forEach(function (anActor) {
          var prop = anActor.getProperty();

          if (prop.setRepresentationToPoints) {
            prop.setRepresentationToPoints();
          }
        });
        rwi.render();
        break;
    }
  };
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {
  state: States.IS_NONE,
  handleObservers: 1,
  autoAdjustCameraClippingRange: 1
}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance

  _InteractorObserver_js__WEBPACK_IMPORTED_MODULE_2__["default"].extend(publicAPI, model, initialValues); // Object specific methods

  vtkInteractorStyle(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].newInstance(extend, 'vtkInteractorStyle'); // ----------------------------------------------------------------------------

var vtkInteractorStyle$1 = _objectSpread({
  newInstance: newInstance,
  extend: extend
}, _InteractorStyle_Constants_js__WEBPACK_IMPORTED_MODULE_3__["default"]);




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Rendering/Core/InteractorStyle/Constants.js":
/*!***********************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Rendering/Core/InteractorStyle/Constants.js ***!
  \***********************************************************************************/
/*! exports provided: States, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "States", function() { return States; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkInteractorStyleConstants; });
var States = {
  IS_START: 0,
  IS_NONE: 0,
  IS_ROTATE: 1,
  IS_PAN: 2,
  IS_SPIN: 3,
  IS_DOLLY: 4,
  IS_CAMERA_POSE: 11,
  IS_WINDOW_LEVEL: 1024,
  IS_SLICE: 1025
};
var vtkInteractorStyleConstants = {
  States: States
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Rendering/Core/Light.js":
/*!***************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Rendering/Core/Light.js ***!
  \***************************************************************/
/*! exports provided: LIGHT_TYPES, default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LIGHT_TYPES", function() { return LIGHT_TYPES; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkLight$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../Common/Core/Math/index.js */ "../node_modules/@kitware/vtk.js/Common/Core/Math/index.js");



var LIGHT_TYPES = ['HeadLight', 'CameraLight', 'SceneLight']; // ----------------------------------------------------------------------------
// vtkLight methods
// ----------------------------------------------------------------------------

function vtkLight(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkLight');

  publicAPI.getTransformedPosition = function () {
    if (model.transformMatrix) {
      return []; // FIXME !!!!
    }

    return [].concat(model.position);
  };

  publicAPI.getTransformedFocalPoint = function () {
    if (model.transformMatrix) {
      return []; // FIXME !!!!
    }

    return [].concat(model.focalPoint);
  };

  publicAPI.getDirection = function () {
    if (model.directionMTime < model.mtime) {
      model.direction[0] = model.focalPoint[0] - model.position[0];
      model.direction[1] = model.focalPoint[1] - model.position[1];
      model.direction[2] = model.focalPoint[2] - model.position[2];
      Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_1__["l"])(model.direction);
      model.directionMTime = model.mtime;
    }

    return model.direction;
  };

  publicAPI.setDirectionAngle = function (elevation, azimuth) {
    var elevationRadians = Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_1__["r"])(elevation);
    var azimuthRadians = Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_1__["r"])(azimuth);
    publicAPI.setPosition(Math.cos(elevationRadians) * Math.sin(azimuthRadians), Math.sin(elevationRadians), Math.cos(elevationRadians) * Math.cos(azimuthRadians));
    publicAPI.setFocalPoint(0, 0, 0);
    publicAPI.setPositional(0);
  };

  publicAPI.setLightTypeToHeadLight = function () {
    publicAPI.setLightType('HeadLight');
  };

  publicAPI.setLightTypeToCameraLight = function () {
    publicAPI.setLightType('CameraLight');
  };

  publicAPI.setLightTypeToSceneLight = function () {
    publicAPI.setTransformMatrix(null);
    publicAPI.setLightType('SceneLight');
  };

  publicAPI.lightTypeIsHeadLight = function () {
    return model.lightType === 'HeadLight';
  };

  publicAPI.lightTypeIsSceneLight = function () {
    return model.lightType === 'SceneLight';
  };

  publicAPI.lightTypeIsCameraLight = function () {
    return model.lightType === 'CameraLight';
  };
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {
  switch: true,
  intensity: 1,
  color: [1, 1, 1],
  position: [0, 0, 1],
  focalPoint: [0, 0, 0],
  positional: false,
  exponent: 1,
  coneAngle: 30,
  attenuationValues: [1, 0, 0],
  transformMatrix: null,
  lightType: 'SceneLight',
  shadowAttenuation: 1,
  direction: [0, 0, 0],
  directionMTime: 0
}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API

  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].obj(publicAPI, model);
  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].setGet(publicAPI, model, ['intensity', 'switch', 'positional', 'exponent', 'coneAngle', 'transformMatrix', 'lightType', 'shadowAttenuation']);
  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].setGetArray(publicAPI, model, ['color', 'position', 'focalPoint', 'attenuationValues'], 3); // Object methods

  vtkLight(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].newInstance(extend, 'vtkLight'); // ----------------------------------------------------------------------------

var vtkLight$1 = {
  newInstance: newInstance,
  extend: extend,
  LIGHT_TYPES: LIGHT_TYPES
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Rendering/Core/Mapper.js":
/*!****************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Rendering/Core/Mapper.js ***!
  \****************************************************************/
/*! exports provided: default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkMapper$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "../node_modules/@babel/runtime/helpers/defineProperty.js");
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _AbstractMapper3D_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./AbstractMapper3D.js */ "../node_modules/@kitware/vtk.js/Rendering/Core/AbstractMapper3D.js");
/* harmony import */ var _Common_Core_DataArray_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../Common/Core/DataArray.js */ "../node_modules/@kitware/vtk.js/Common/Core/DataArray.js");
/* harmony import */ var _Common_DataModel_ImageData_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../Common/DataModel/ImageData.js */ "../node_modules/@kitware/vtk.js/Common/DataModel/ImageData.js");
/* harmony import */ var _Common_Core_LookupTable_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../Common/Core/LookupTable.js */ "../node_modules/@kitware/vtk.js/Common/Core/LookupTable.js");
/* harmony import */ var _Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../Common/Core/Math/index.js */ "../node_modules/@kitware/vtk.js/Common/Core/Math/index.js");
/* harmony import */ var _Common_Core_ScalarsToColors_Constants_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../Common/Core/ScalarsToColors/Constants.js */ "../node_modules/@kitware/vtk.js/Common/Core/ScalarsToColors/Constants.js");
/* harmony import */ var _Mapper_CoincidentTopologyHelper_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./Mapper/CoincidentTopologyHelper.js */ "../node_modules/@kitware/vtk.js/Rendering/Core/Mapper/CoincidentTopologyHelper.js");
/* harmony import */ var _Mapper_Constants_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./Mapper/Constants.js */ "../node_modules/@kitware/vtk.js/Rendering/Core/Mapper/Constants.js");











function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var staticOffsetAPI = _Mapper_CoincidentTopologyHelper_js__WEBPACK_IMPORTED_MODULE_8__["default"].staticOffsetAPI,
    otherStaticMethods = _Mapper_CoincidentTopologyHelper_js__WEBPACK_IMPORTED_MODULE_8__["default"].otherStaticMethods;
var ColorMode = _Mapper_Constants_js__WEBPACK_IMPORTED_MODULE_9__["default"].ColorMode,
    ScalarMode = _Mapper_Constants_js__WEBPACK_IMPORTED_MODULE_9__["default"].ScalarMode,
    GetArray = _Mapper_Constants_js__WEBPACK_IMPORTED_MODULE_9__["default"].GetArray;
var VectorMode = _Common_Core_ScalarsToColors_Constants_js__WEBPACK_IMPORTED_MODULE_7__["default"].VectorMode;
var VtkDataTypes = _Common_Core_DataArray_js__WEBPACK_IMPORTED_MODULE_3__["default"].VtkDataTypes; // ----------------------------------------------------------------------------

function notImplemented(method) {
  return function () {
    return _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].vtkErrorMacro("vtkMapper::".concat(method, " - NOT IMPLEMENTED"));
  };
} // ----------------------------------------------------------------------------
// vtkMapper methods
// ----------------------------------------------------------------------------


function vtkMapper(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkMapper');

  publicAPI.getBounds = function () {
    var input = publicAPI.getInputData();

    if (!input) {
      model.bounds = Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_6__["M"])();
    } else {
      if (!model.static) {
        publicAPI.update();
      }

      model.bounds = input.getBounds();
    }

    return model.bounds;
  };

  publicAPI.setForceCompileOnly = function (v) {
    model.forceCompileOnly = v; // make sure we do NOT call modified()
  };

  publicAPI.createDefaultLookupTable = function () {
    model.lookupTable = _Common_Core_LookupTable_js__WEBPACK_IMPORTED_MODULE_5__["default"].newInstance();
  };

  publicAPI.getColorModeAsString = function () {
    return _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].enumToString(ColorMode, model.colorMode);
  };

  publicAPI.setColorModeToDefault = function () {
    return publicAPI.setColorMode(0);
  };

  publicAPI.setColorModeToMapScalars = function () {
    return publicAPI.setColorMode(1);
  };

  publicAPI.setColorModeToDirectScalars = function () {
    return publicAPI.setColorMode(2);
  };

  publicAPI.getScalarModeAsString = function () {
    return _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].enumToString(ScalarMode, model.scalarMode);
  };

  publicAPI.setScalarModeToDefault = function () {
    return publicAPI.setScalarMode(0);
  };

  publicAPI.setScalarModeToUsePointData = function () {
    return publicAPI.setScalarMode(1);
  };

  publicAPI.setScalarModeToUseCellData = function () {
    return publicAPI.setScalarMode(2);
  };

  publicAPI.setScalarModeToUsePointFieldData = function () {
    return publicAPI.setScalarMode(3);
  };

  publicAPI.setScalarModeToUseCellFieldData = function () {
    return publicAPI.setScalarMode(4);
  };

  publicAPI.setScalarModeToUseFieldData = function () {
    return publicAPI.setScalarMode(5);
  };

  publicAPI.getAbstractScalars = function (input, scalarMode, arrayAccessMode, arrayId, arrayName) {
    // make sure we have an input
    if (!input || !model.scalarVisibility) {
      return {
        scalars: null,
        cellFLag: false
      };
    }

    var scalars = null;
    var cellFlag = false; // get and scalar data according to scalar mode

    if (scalarMode === ScalarMode.DEFAULT) {
      scalars = input.getPointData().getScalars();

      if (!scalars) {
        scalars = input.getCellData().getScalars();
        cellFlag = true;
      }
    } else if (scalarMode === ScalarMode.USE_POINT_DATA) {
      scalars = input.getPointData().getScalars();
    } else if (scalarMode === ScalarMode.USE_CELL_DATA) {
      scalars = input.getCellData().getScalars();
      cellFlag = true;
    } else if (scalarMode === ScalarMode.USE_POINT_FIELD_DATA) {
      var pd = input.getPointData();

      if (arrayAccessMode === GetArray.BY_ID) {
        scalars = pd.getArrayByIndex(arrayId);
      } else {
        scalars = pd.getArrayByName(arrayName);
      }
    } else if (scalarMode === ScalarMode.USE_CELL_FIELD_DATA) {
      var cd = input.getCellData();
      cellFlag = true;

      if (arrayAccessMode === GetArray.BY_ID) {
        scalars = cd.getArrayByIndex(arrayId);
      } else {
        scalars = cd.getArrayByName(arrayName);
      }
    } else if (scalarMode === ScalarMode.USE_FIELD_DATA) {
      var fd = input.getFieldData();

      if (arrayAccessMode === GetArray.BY_ID) {
        scalars = fd.getArrayByIndex(arrayId);
      } else {
        scalars = fd.getArrayByName(arrayName);
      }
    }

    return {
      scalars: scalars,
      cellFlag: cellFlag
    };
  };

  publicAPI.mapScalars = function (input, alpha) {
    var scalars = publicAPI.getAbstractScalars(input, model.scalarMode, model.arrayAccessMode, model.arrayId, model.colorByArrayName).scalars;

    if (!scalars) {
      model.colorCoordinates = null;
      model.colorTextureMap = null;
      model.colorMapColors = null;
      return;
    } // we want to only recompute when something has changed


    var toString = "".concat(publicAPI.getMTime()).concat(scalars.getMTime()).concat(alpha);
    if (model.colorBuildString === toString) return;

    if (!model.useLookupTableScalarRange) {
      publicAPI.getLookupTable().setRange(model.scalarRange[0], model.scalarRange[1]);
    } // Decide between texture color or vertex color.
    // Cell data always uses vertex color.
    // Only point data can use both texture and vertex coloring.


    if (publicAPI.canUseTextureMapForColoring(input)) {
      publicAPI.mapScalarsToTexture(scalars, alpha);
    } else {
      model.colorCoordinates = null;
      model.colorTextureMap = null;
      var lut = publicAPI.getLookupTable();

      if (lut) {
        // Ensure that the lookup table is built
        lut.build();
        model.colorMapColors = lut.mapScalars(scalars, model.colorMode, model.fieldDataTupleId);
      }
    }

    model.colorBuildString = "".concat(publicAPI.getMTime()).concat(scalars.getMTime()).concat(alpha);
  }; //-----------------------------------------------------------------------------


  publicAPI.scalarToTextureCoordinate = function (scalarValue, // Input scalar
  rangeMin, // range[0]
  invRangeWidth) {
    // 1/(range[1]-range[0])
    var texCoordS = 0.5; // Scalar value is arbitrary when NaN

    var texCoordT = 1.0; // 1.0 in t coordinate means NaN

    if (!Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_6__["i"])(scalarValue)) {
      // 0.0 in t coordinate means not NaN.  So why am I setting it to 0.49?
      // Because when you are mapping scalars and you have a NaN adjacent to
      // anything else, the interpolation everywhere should be NaN.  Thus, I
      // want the NaN color everywhere except right on the non-NaN neighbors.
      // To simulate this, I set the t coord for the real numbers close to
      // the threshold so that the interpolation almost immediately looks up
      // the NaN value.
      texCoordT = 0.49;
      texCoordS = (scalarValue - rangeMin) * invRangeWidth; // Some implementations apparently don't handle relatively large
      // numbers (compared to the range [0.0, 1.0]) very well. In fact,
      // values above 1122.0f appear to cause texture wrap-around on
      // some systems even when edge clamping is enabled. Why 1122.0f? I
      // don't know. For safety, we'll clamp at +/- 1000. This will
      // result in incorrect images when the texture value should be
      // above or below 1000, but I don't have a better solution.

      if (texCoordS > 1000.0) {
        texCoordS = 1000.0;
      } else if (texCoordS < -1000.0) {
        texCoordS = -1000.0;
      }
    }

    return {
      texCoordS: texCoordS,
      texCoordT: texCoordT
    };
  }; //-----------------------------------------------------------------------------


  publicAPI.createColorTextureCoordinates = function (input, output, numScalars, numComps, component, range, tableRange, tableNumberOfColors, useLogScale) {
    // We have to change the range used for computing texture
    // coordinates slightly to accommodate the special above- and
    // below-range colors that are the first and last texels,
    // respectively.
    var scalarTexelWidth = (range[1] - range[0]) / tableNumberOfColors;
    var paddedRange = [];
    paddedRange[0] = range[0] - scalarTexelWidth;
    paddedRange[1] = range[1] + scalarTexelWidth;
    var invRangeWidth = 1.0 / (paddedRange[1] - paddedRange[0]);
    var outputV = output.getData();
    var inputV = input.getData();
    var count = 0;
    var outputCount = 0;

    if (component < 0 || component >= numComps) {
      for (var scalarIdx = 0; scalarIdx < numScalars; ++scalarIdx) {
        var sum = 0;

        for (var compIdx = 0; compIdx < numComps; ++compIdx) {
          sum += inputV[count] * inputV[count];
          count++;
        }

        var magnitude = Math.sqrt(sum);

        if (useLogScale) {
          magnitude = _Common_Core_LookupTable_js__WEBPACK_IMPORTED_MODULE_5__["default"].applyLogScale(magnitude, tableRange, range);
        }

        var outputs = publicAPI.scalarToTextureCoordinate(magnitude, paddedRange[0], invRangeWidth);
        outputV[outputCount] = outputs.texCoordS;
        outputV[outputCount + 1] = outputs.texCoordT;
        outputCount += 2;
      }
    } else {
      count += component;

      for (var _scalarIdx = 0; _scalarIdx < numScalars; ++_scalarIdx) {
        var inputValue = inputV[count];

        if (useLogScale) {
          inputValue = _Common_Core_LookupTable_js__WEBPACK_IMPORTED_MODULE_5__["default"].applyLogScale(inputValue, tableRange, range);
        }

        var _outputs = publicAPI.scalarToTextureCoordinate(inputValue, paddedRange[0], invRangeWidth);

        outputV[outputCount] = _outputs.texCoordS;
        outputV[outputCount + 1] = _outputs.texCoordT;
        outputCount += 2;
        count += numComps;
      }
    }
  };

  publicAPI.mapScalarsToTexture = function (scalars, alpha) {
    var range = model.lookupTable.getRange();
    var useLogScale = model.lookupTable.usingLogScale();

    if (useLogScale) {
      // convert range to log.
      _Common_Core_LookupTable_js__WEBPACK_IMPORTED_MODULE_5__["default"].getLogRange(range, range);
    }

    var origAlpha = model.lookupTable.getAlpha(); // Get rid of vertex color array.  Only texture or vertex coloring
    // can be active at one time.  The existence of the array is the
    // signal to use that technique.

    model.colorMapColors = null; // If the lookup table has changed, then recreate the color texture map.
    // Set a new lookup table changes this->MTime.

    if (model.colorTextureMap == null || publicAPI.getMTime() > model.colorTextureMap.getMTime() || model.lookupTable.getMTime() > model.colorTextureMap.getMTime() || model.lookupTable.getAlpha() !== alpha) {
      model.lookupTable.setAlpha(alpha);
      model.colorTextureMap = null; // Get the texture map from the lookup table.
      // Create a dummy ramp of scalars.
      // In the future, we could extend vtkScalarsToColors.

      model.lookupTable.build();
      var numberOfColors = model.lookupTable.getNumberOfAvailableColors();

      if (numberOfColors > 4094) {
        numberOfColors = 4094;
      }

      numberOfColors += 2;
      var k = (range[1] - range[0]) / (numberOfColors - 1 - 2);
      var newArray = new Float64Array(numberOfColors * 2);

      for (var i = 0; i < numberOfColors; ++i) {
        newArray[i] = range[0] + i * k - k; // minus k to start at below range color

        if (useLogScale) {
          newArray[i] = Math.pow(10.0, newArray[i]);
        }
      } // Dimension on NaN.


      for (var _i = 0; _i < numberOfColors; ++_i) {
        newArray[_i + numberOfColors] = NaN;
      }

      model.colorTextureMap = _Common_DataModel_ImageData_js__WEBPACK_IMPORTED_MODULE_4__["default"].newInstance();
      model.colorTextureMap.setExtent(0, numberOfColors - 1, 0, 1, 0, 0);
      var tmp = _Common_Core_DataArray_js__WEBPACK_IMPORTED_MODULE_3__["default"].newInstance({
        numberOfComponents: 1,
        values: newArray
      });
      model.colorTextureMap.getPointData().setScalars(model.lookupTable.mapScalars(tmp, model.colorMode, 0));
      model.lookupTable.setAlpha(origAlpha);
    } // Create new coordinates if necessary.
    // Need to compare lookup table in case the range has changed.


    if (!model.colorCoordinates || publicAPI.getMTime() > model.colorCoordinates.getMTime() || publicAPI.getInputData(0).getMTime() > model.colorCoordinates.getMTime() || model.lookupTable.getMTime() > model.colorCoordinates.getMTime()) {
      // Get rid of old colors
      model.colorCoordinates = null; // Now create the color texture coordinates.

      var numComps = scalars.getNumberOfComponents();
      var num = scalars.getNumberOfTuples(); // const fArray = new FloatArray(num * 2);

      model.colorCoordinates = _Common_Core_DataArray_js__WEBPACK_IMPORTED_MODULE_3__["default"].newInstance({
        numberOfComponents: 2,
        values: new Float32Array(num * 2)
      });
      var scalarComponent = model.lookupTable.getVectorComponent(); // Although I like the feature of applying magnitude to single component
      // scalars, it is not how the old MapScalars for vertex coloring works.

      if (model.lookupTable.getVectorMode() === VectorMode.MAGNITUDE && scalars.getNumberOfComponents() > 1) {
        scalarComponent = -1;
      }

      publicAPI.createColorTextureCoordinates(scalars, model.colorCoordinates, num, numComps, scalarComponent, range, model.lookupTable.getRange(), model.colorTextureMap.getPointData().getScalars().getNumberOfTuples() / 2 - 2, useLogScale);
    }
  };

  publicAPI.getIsOpaque = function () {
    var lut = publicAPI.getLookupTable();

    if (lut) {
      // Ensure that the lookup table is built
      lut.build();
      return lut.isOpaque();
    }

    return true;
  };

  publicAPI.canUseTextureMapForColoring = function (input) {
    if (!model.interpolateScalarsBeforeMapping) {
      return false; // user doesn't want us to use texture maps at all.
    } // index color does not use textures


    if (model.lookupTable && model.lookupTable.getIndexedLookup()) {
      return false;
    }

    var gasResult = publicAPI.getAbstractScalars(input, model.scalarMode, model.arrayAccessMode, model.arrayId, model.colorByArrayName);
    var scalars = gasResult.scalars;

    if (!scalars) {
      // no scalars on this dataset, we don't care if texture is used at all.
      return false;
    }

    if (gasResult.cellFlag) {
      return false; // cell data colors, don't use textures.
    }

    if (model.colorMode === ColorMode.DEFAULT && scalars.getDataType() === VtkDataTypes.UNSIGNED_CHAR || model.colorMode === ColorMode.DIRECT_SCALARS) {
      // Don't use texture is direct coloring using RGB unsigned chars is
      // requested.
      return false;
    }

    return true;
  };

  publicAPI.clearColorArrays = function () {
    model.colorMapColors = null;
    model.colorCoordinates = null;
    model.colorTextureMap = null;
  };

  publicAPI.getLookupTable = function () {
    if (!model.lookupTable) {
      publicAPI.createDefaultLookupTable();
    }

    return model.lookupTable;
  };

  publicAPI.getMTime = function () {
    var mt = model.mtime;

    if (model.lookupTable !== null) {
      var time = model.lookupTable.getMTime();
      mt = time > mt ? time : mt;
    }

    return mt;
  };

  publicAPI.getPrimitiveCount = function () {
    var input = publicAPI.getInputData();
    var pcount = {
      points: input.getPoints().getNumberOfValues() / 3,
      verts: input.getVerts().getNumberOfValues() - input.getVerts().getNumberOfCells(),
      lines: input.getLines().getNumberOfValues() - 2 * input.getLines().getNumberOfCells(),
      triangles: input.getPolys().getNumberOfValues() - 3 * input.getLines().getNumberOfCells()
    };
    return pcount;
  };

  publicAPI.acquireInvertibleLookupTable = notImplemented('AcquireInvertibleLookupTable');
  publicAPI.valueToColor = notImplemented('ValueToColor');
  publicAPI.colorToValue = notImplemented('ColorToValue');
  publicAPI.useInvertibleColorFor = notImplemented('UseInvertibleColorFor');
  publicAPI.clearInvertibleColor = notImplemented('ClearInvertibleColor');
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {
  colorMapColors: null,
  // Same as this->Colors
  static: false,
  lookupTable: null,
  scalarVisibility: true,
  scalarRange: [0, 1],
  useLookupTableScalarRange: false,
  colorMode: 0,
  scalarMode: 0,
  arrayAccessMode: 1,
  // By_NAME
  renderTime: 0,
  colorByArrayName: null,
  fieldDataTupleId: -1,
  interpolateScalarsBeforeMapping: false,
  colorCoordinates: null,
  colorTextureMap: null,
  forceCompileOnly: 0,
  useInvertibleColors: false,
  invertibleScalars: null,
  viewSpecificProperties: null,
  customShaderAttributes: []
}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance

  _AbstractMapper3D_js__WEBPACK_IMPORTED_MODULE_2__["default"].extend(publicAPI, model, initialValues);
  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].get(publicAPI, model, ['colorCoordinates', 'colorMapColors', 'colorTextureMap']);
  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].setGet(publicAPI, model, ['colorByArrayName', 'arrayAccessMode', 'colorMode', 'fieldDataTupleId', 'interpolateScalarsBeforeMapping', 'lookupTable', 'renderTime', 'scalarMode', 'scalarVisibility', 'static', 'useLookupTableScalarRange', 'viewSpecificProperties', 'customShaderAttributes' // point data array names that will be transferred to the VBO
  ]);
  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].setGetArray(publicAPI, model, ['scalarRange'], 2);

  if (!model.viewSpecificProperties) {
    model.viewSpecificProperties = {};
  }

  _Mapper_CoincidentTopologyHelper_js__WEBPACK_IMPORTED_MODULE_8__["default"].implementCoincidentTopologyMethods(publicAPI, model); // Object methods

  vtkMapper(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].newInstance(extend, 'vtkMapper'); // ----------------------------------------------------------------------------

var vtkMapper$1 = _objectSpread(_objectSpread(_objectSpread({
  newInstance: newInstance,
  extend: extend
}, staticOffsetAPI), otherStaticMethods), _Mapper_Constants_js__WEBPACK_IMPORTED_MODULE_9__["default"]);




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Rendering/Core/Mapper/CoincidentTopologyHelper.js":
/*!*****************************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Rendering/Core/Mapper/CoincidentTopologyHelper.js ***!
  \*****************************************************************************************/
/*! exports provided: CATEGORIES, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CATEGORIES", function() { return CATEGORIES; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return CoincidentTopologyHelper; });
/* harmony import */ var _Static_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Static.js */ "../node_modules/@kitware/vtk.js/Rendering/Core/Mapper/Static.js");
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");



/* eslint-disable arrow-body-style */

function addCoincidentTopologyMethods(publicAPI, model, nameList) {
  nameList.forEach(function (item) {
    publicAPI["get".concat(item.method)] = function () {
      return model[item.key];
    };

    publicAPI["set".concat(item.method)] = function (factor, offset) {
      model[item.key] = {
        factor: factor,
        offset: offset
      };
    };
  });
}

var CATEGORIES = ['Polygon', 'Line', 'Point']; // CoincidentTopology static methods ------------------------------------------

var staticOffsetModel = {
  Polygon: {
    factor: 2,
    offset: 0
  },
  Line: {
    factor: 1,
    offset: -1
  },
  Point: {
    factor: 0,
    offset: -2
  }
};
var staticOffsetAPI = {};
addCoincidentTopologyMethods(staticOffsetAPI, staticOffsetModel, CATEGORIES.map(function (key) {
  return {
    key: key,
    method: "ResolveCoincidentTopology".concat(key, "OffsetParameters")
  };
}));

function implementCoincidentTopologyMethods(publicAPI, model) {
  if (model.resolveCoincidentTopology === undefined) {
    model.resolveCoincidentTopology = false;
  }

  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].setGet(publicAPI, model, ['resolveCoincidentTopology']); // Relative methods

  model.topologyOffset = {
    Polygon: {
      factor: 0,
      offset: 0
    },
    Line: {
      factor: 0,
      offset: 0
    },
    Point: {
      factor: 0,
      offset: 0
    }
  }; // Add Static methods to our instance

  Object.keys(_Static_js__WEBPACK_IMPORTED_MODULE_0__["default"]).forEach(function (methodName) {
    publicAPI[methodName] = _Static_js__WEBPACK_IMPORTED_MODULE_0__["default"][methodName];
  });
  Object.keys(staticOffsetAPI).forEach(function (methodName) {
    publicAPI[methodName] = staticOffsetAPI[methodName];
  });
  addCoincidentTopologyMethods(publicAPI, model.topologyOffset, CATEGORIES.map(function (key) {
    return {
      key: key,
      method: "RelativeCoincidentTopology".concat(key, "OffsetParameters")
    };
  }));

  publicAPI.getCoincidentTopologyPolygonOffsetParameters = function () {
    var globalValue = staticOffsetAPI.getResolveCoincidentTopologyPolygonOffsetParameters();
    var localValue = publicAPI.getRelativeCoincidentTopologyPolygonOffsetParameters();
    return {
      factor: globalValue.factor + localValue.factor,
      offset: globalValue.offset + localValue.offset
    };
  };

  publicAPI.getCoincidentTopologyLineOffsetParameters = function () {
    var globalValue = staticOffsetAPI.getResolveCoincidentTopologyLineOffsetParameters();
    var localValue = publicAPI.getRelativeCoincidentTopologyLineOffsetParameters();
    return {
      factor: globalValue.factor + localValue.factor,
      offset: globalValue.offset + localValue.offset
    };
  };

  publicAPI.getCoincidentTopologyPointOffsetParameter = function () {
    var globalValue = staticOffsetAPI.getResolveCoincidentTopologyPointOffsetParameters();
    var localValue = publicAPI.getRelativeCoincidentTopologyPointOffsetParameters();
    return {
      factor: globalValue.factor + localValue.factor,
      offset: globalValue.offset + localValue.offset
    };
  };
}

var CoincidentTopologyHelper = {
  implementCoincidentTopologyMethods: implementCoincidentTopologyMethods,
  staticOffsetAPI: staticOffsetAPI,
  otherStaticMethods: _Static_js__WEBPACK_IMPORTED_MODULE_0__["default"],
  CATEGORIES: CATEGORIES
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Rendering/Core/Mapper/Constants.js":
/*!**************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Rendering/Core/Mapper/Constants.js ***!
  \**************************************************************************/
/*! exports provided: ColorMode, GetArray, ScalarMode, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ColorMode", function() { return ColorMode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GetArray", function() { return GetArray; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ScalarMode", function() { return ScalarMode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Constants; });
var ColorMode = {
  DEFAULT: 0,
  MAP_SCALARS: 1,
  DIRECT_SCALARS: 2
};
var ScalarMode = {
  DEFAULT: 0,
  USE_POINT_DATA: 1,
  USE_CELL_DATA: 2,
  USE_POINT_FIELD_DATA: 3,
  USE_CELL_FIELD_DATA: 4,
  USE_FIELD_DATA: 5
};
var GetArray = {
  BY_ID: 0,
  BY_NAME: 1
};
var Constants = {
  ColorMode: ColorMode,
  GetArray: GetArray,
  ScalarMode: ScalarMode
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Rendering/Core/Mapper/Static.js":
/*!***********************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Rendering/Core/Mapper/Static.js ***!
  \***********************************************************************/
/*! exports provided: RESOLVE_COINCIDENT_TOPOLOGY_MODE, default, getResolveCoincidentTopology, getResolveCoincidentTopologyAsString, getResolveCoincidentTopologyPolygonOffsetFaces, setResolveCoincidentTopology, setResolveCoincidentTopologyPolygonOffsetFaces, setResolveCoincidentTopologyToDefault, setResolveCoincidentTopologyToOff, setResolveCoincidentTopologyToPolygonOffset */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RESOLVE_COINCIDENT_TOPOLOGY_MODE", function() { return RESOLVE_COINCIDENT_TOPOLOGY_MODE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return otherStaticMethods; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getResolveCoincidentTopology", function() { return getResolveCoincidentTopology; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getResolveCoincidentTopologyAsString", function() { return getResolveCoincidentTopologyAsString; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getResolveCoincidentTopologyPolygonOffsetFaces", function() { return getResolveCoincidentTopologyPolygonOffsetFaces; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setResolveCoincidentTopology", function() { return setResolveCoincidentTopology; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setResolveCoincidentTopologyPolygonOffsetFaces", function() { return setResolveCoincidentTopologyPolygonOffsetFaces; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setResolveCoincidentTopologyToDefault", function() { return setResolveCoincidentTopologyToDefault; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setResolveCoincidentTopologyToOff", function() { return setResolveCoincidentTopologyToOff; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setResolveCoincidentTopologyToPolygonOffset", function() { return setResolveCoincidentTopologyToPolygonOffset; });
var resolveCoincidentTopologyPolygonOffsetFaces = 1;
var resolveCoincidentTopology = 0;
var RESOLVE_COINCIDENT_TOPOLOGY_MODE = ['VTK_RESOLVE_OFF', 'VTK_RESOLVE_POLYGON_OFFSET'];
function getResolveCoincidentTopologyPolygonOffsetFaces() {
  return resolveCoincidentTopologyPolygonOffsetFaces;
}
function setResolveCoincidentTopologyPolygonOffsetFaces(value) {
  resolveCoincidentTopologyPolygonOffsetFaces = value;
}
function getResolveCoincidentTopology() {
  return resolveCoincidentTopology;
}
function setResolveCoincidentTopology() {
  var mode = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
  resolveCoincidentTopology = mode;
}
function setResolveCoincidentTopologyToDefault() {
  setResolveCoincidentTopology(0); // VTK_RESOLVE_OFF
}
function setResolveCoincidentTopologyToOff() {
  setResolveCoincidentTopology(0); // VTK_RESOLVE_OFF
}
function setResolveCoincidentTopologyToPolygonOffset() {
  setResolveCoincidentTopology(1); // VTK_RESOLVE_POLYGON_OFFSET
}
function getResolveCoincidentTopologyAsString() {
  return RESOLVE_COINCIDENT_TOPOLOGY_MODE[resolveCoincidentTopology];
}
var otherStaticMethods = {
  getResolveCoincidentTopologyAsString: getResolveCoincidentTopologyAsString,
  getResolveCoincidentTopologyPolygonOffsetFaces: getResolveCoincidentTopologyPolygonOffsetFaces,
  getResolveCoincidentTopology: getResolveCoincidentTopology,
  setResolveCoincidentTopology: setResolveCoincidentTopology,
  setResolveCoincidentTopologyPolygonOffsetFaces: setResolveCoincidentTopologyPolygonOffsetFaces,
  setResolveCoincidentTopologyToDefault: setResolveCoincidentTopologyToDefault,
  setResolveCoincidentTopologyToOff: setResolveCoincidentTopologyToOff,
  setResolveCoincidentTopologyToPolygonOffset: setResolveCoincidentTopologyToPolygonOffset
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Rendering/Core/Mapper2D.js":
/*!******************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Rendering/Core/Mapper2D.js ***!
  \******************************************************************/
/*! exports provided: default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkMapper2D$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _AbstractMapper_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AbstractMapper.js */ "../node_modules/@kitware/vtk.js/Rendering/Core/AbstractMapper.js");
/* harmony import */ var _Common_Core_LookupTable_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../Common/Core/LookupTable.js */ "../node_modules/@kitware/vtk.js/Common/Core/LookupTable.js");
/* harmony import */ var _Mapper_Constants_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Mapper/Constants.js */ "../node_modules/@kitware/vtk.js/Rendering/Core/Mapper/Constants.js");





var ColorMode = _Mapper_Constants_js__WEBPACK_IMPORTED_MODULE_3__["default"].ColorMode,
    ScalarMode = _Mapper_Constants_js__WEBPACK_IMPORTED_MODULE_3__["default"].ScalarMode,
    GetArray = _Mapper_Constants_js__WEBPACK_IMPORTED_MODULE_3__["default"].GetArray; // ---------------------------------------------------------------------------
// vtkMapper2D methods
// ---------------------------------------------------------------------------

function vtkMapper2D(publicAPI, model) {
  // Set out className
  model.classHierarchy.push('vtkMapper2D');

  publicAPI.createDefaultLookupTable = function () {
    model.lookupTable = _Common_Core_LookupTable_js__WEBPACK_IMPORTED_MODULE_2__["default"].newInstance();
  };

  publicAPI.getColorModeAsString = function () {
    return _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].enumToString(ColorMode, model.colorMode);
  };

  publicAPI.setColorModeToDefault = function () {
    return publicAPI.setColorMode(0);
  };

  publicAPI.setColorModeToMapScalars = function () {
    return publicAPI.setColorMode(1);
  };

  publicAPI.setColorModeToDirectScalars = function () {
    return publicAPI.setColorMode(2);
  };

  publicAPI.getScalarModeAsString = function () {
    return _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].enumToString(ScalarMode, model.scalarMode);
  };

  publicAPI.setScalarModeToDefault = function () {
    return publicAPI.setScalarMode(0);
  };

  publicAPI.setScalarModeToUsePointData = function () {
    return publicAPI.setScalarMode(1);
  };

  publicAPI.setScalarModeToUseCellData = function () {
    return publicAPI.setScalarMode(2);
  };

  publicAPI.setScalarModeToUsePointFieldData = function () {
    return publicAPI.setScalarMode(3);
  };

  publicAPI.setScalarModeToUseCellFieldData = function () {
    return publicAPI.setScalarMode(4);
  };

  publicAPI.setScalarModeToUseFieldData = function () {
    return publicAPI.setScalarMode(5);
  };

  publicAPI.getAbstractScalars = function (input, scalarMode, arrayAccessMode, arrayId, arrayName) {
    // make sure we have an input
    if (!input || !model.scalarVisibility) {
      return {
        scalars: null,
        cellFLag: false
      };
    }

    var scalars = null;
    var cellFlag = false; // get scalar data and point/cell attribute according to scalar mode

    if (scalarMode === ScalarMode.DEFAULT) {
      scalars = input.getPointData().getScalars();

      if (!scalars) {
        scalars = input.getCellData().getScalars();
        cellFlag = true;
      }
    } else if (scalarMode === ScalarMode.USE_POINT_DATA) {
      scalars = input.getPointData().getScalars();
    } else if (scalarMode === ScalarMode.USE_CELL_DATA) {
      scalars = input.getCellData().getScalars();
      cellFlag = true;
    } else if (scalarMode === ScalarMode.USE_POINT_FIELD_DATA) {
      var pd = input.getPointData();

      if (arrayAccessMode === GetArray.BY_ID) {
        scalars = pd.getArrayByIndex(arrayId);
      } else {
        scalars = pd.getArrayByName(arrayName);
      }
    } else if (scalarMode === ScalarMode.USE_CELL_FIELD_DATA) {
      var cd = input.getCellData();
      cellFlag = true;

      if (arrayAccessMode === GetArray.BY_ID) {
        scalars = cd.getArrayByIndex(arrayId);
      } else {
        scalars = cd.getArrayByName(arrayName);
      }
    } else if (scalarMode === ScalarMode.USE_FIELD_DATA) {
      var fd = input.getFieldData();

      if (arrayAccessMode === GetArray.BY_ID) {
        scalars = fd.getArrayByIndex(arrayId);
      } else {
        scalars = fd.getArrayByName(arrayName);
      }
    }

    return {
      scalars: scalars,
      cellFlag: cellFlag
    };
  };

  publicAPI.getLookupTable = function () {
    if (!model.lookupTable) {
      publicAPI.createDefaultLookupTable();
    }

    return model.lookupTable;
  };

  publicAPI.getMTime = function () {
    var mt = model.mtime;

    if (model.lookupTable !== null) {
      var time = model.lookupTable.getMTime();
      mt = time > mt ? time : mt;
    }

    return mt;
  };

  publicAPI.mapScalars = function (input, alpha) {
    var scalars = publicAPI.getAbstractScalars(input, model.scalarMode, model.arrayAccessMode, model.arrayId, model.colorByArrayName).scalars;

    if (!scalars) {
      model.colorMapColors = null;
      return;
    } // we want to only recompute when something has changed


    var toString = "".concat(publicAPI.getMTime()).concat(scalars.getMTime()).concat(alpha);
    if (model.colorBuildString === toString) return;

    if (!model.useLookupTableScalarRange) {
      publicAPI.getLookupTable().setRange(model.scalarRange[0], model.scalarRange[1]);
    }

    var lut = publicAPI.getLookupTable();

    if (lut) {
      // Ensure that the lookup table is built
      lut.build();
      model.colorMapColors = lut.mapScalars(scalars, model.colorMode, model.fieldDataTupleId);
    }

    model.colorBuildString = "".concat(publicAPI.getMTime()).concat(scalars.getMTime()).concat(alpha);
  };
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {
  static: false,
  lookupTable: null,
  scalarVisibility: false,
  scalarRange: [0, 1],
  useLookupTableScalarRange: false,
  colorMode: 0,
  scalarMode: 0,
  arrayAccessMode: 1,
  // By_NAME
  renderTime: 0,
  colorByArrayName: null,
  transformCoordinate: null,
  viewSpecificProperties: null,
  customShaderAttributes: []
}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance

  _AbstractMapper_js__WEBPACK_IMPORTED_MODULE_1__["default"].extend(publicAPI, model, initialValues);
  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].get(publicAPI, model, ['colorMapColors']);
  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].setGet(publicAPI, model, ['arrayAccessMode', 'colorByArrayName', 'colorMode', 'lookupTable', 'renderTime', 'scalarMode', 'scalarVisibility', 'static', 'transformCoordinate', 'useLookupTableScalarRange', 'viewSpecificProperties', 'customShaderAttributes' // point data array names that will be transferred to the VBO
  ]);
  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].setGetArray(publicAPI, model, ['scalarRange'], 2);

  if (!model.viewSpecificProperties) {
    model.viewSpecificProperties = {};
  } // Object methods


  vtkMapper2D(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].newInstance(extend, 'vtkMapper2D'); // ----------------------------------------------------------------------------

var vtkMapper2D$1 = {
  newInstance: newInstance,
  extend: extend
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Rendering/Core/Prop.js":
/*!**************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Rendering/Core/Prop.js ***!
  \**************************************************************/
/*! exports provided: default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkProp$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");


function notImplemented(method) {
  return function () {
    return _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].vtkErrorMacro("vtkProp::".concat(method, " - NOT IMPLEMENTED"));
  };
} // ----------------------------------------------------------------------------
// vtkProp methods
// ----------------------------------------------------------------------------


function vtkProp(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkProp');

  publicAPI.getMTime = function () {
    var m1 = model.mtime;

    for (var index = 0; index < model.textures.length; ++index) {
      var m2 = model.textures[index].getMTime();

      if (m2 > m1) {
        m1 = m2;
      }
    }

    return m1;
  };

  publicAPI.getNestedProps = function () {
    return null;
  };

  publicAPI.getActors = function () {
    return [];
  };

  publicAPI.getActors2D = function () {
    return [];
  };

  publicAPI.getVolumes = function () {
    return [];
  };

  publicAPI.pick = notImplemented('pick');
  publicAPI.hasKey = notImplemented('hasKey');

  publicAPI.getNestedVisibility = function () {
    return model.visibility && (!model.parentProp || model.parentProp.getNestedVisibility());
  };

  publicAPI.getNestedPickable = function () {
    return model.pickable && (!model.parentProp || model.parentProp.getNestedPickable());
  };

  publicAPI.getNestedDragable = function () {
    return model.dragable && (!model.parentProp || model.parentProp.getNestedDragable());
  };

  publicAPI.getRedrawMTime = function () {
    return model.mtime;
  };

  publicAPI.setEstimatedRenderTime = function (t) {
    model.estimatedRenderTime = t;
    model.savedEstimatedRenderTime = t;
  };

  publicAPI.restoreEstimatedRenderTime = function () {
    model.estimatedRenderTime = model.savedEstimatedRenderTime;
  };

  publicAPI.addEstimatedRenderTime = function (t) {
    model.estimatedRenderTime += t;
  };

  publicAPI.setAllocatedRenderTime = function (t) {
    model.allocatedRenderTime = t;
    model.savedEstimatedRenderTime = model.estimatedRenderTime;
    model.estimatedRenderTime = 0;
  };

  publicAPI.getSupportsSelection = function () {
    return false;
  };

  publicAPI.getTextures = function () {
    return model.textures;
  };

  publicAPI.hasTexture = function (texture) {
    return model.textures.indexOf(texture) !== -1;
  };

  publicAPI.addTexture = function (texture) {
    if (texture && !publicAPI.hasTexture(texture)) {
      model.textures = model.textures.concat(texture);
      publicAPI.modified();
    }
  };

  publicAPI.removeTexture = function (texture) {
    var newTextureList = model.textures.filter(function (item) {
      return item !== texture;
    });

    if (model.textures.length !== newTextureList.length) {
      model.textures = newTextureList;
      publicAPI.modified();
    }
  };

  publicAPI.removeAllTextures = function () {
    model.textures = [];
    publicAPI.modified();
  };
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {
  visibility: true,
  pickable: true,
  dragable: true,
  useBounds: true,
  allocatedRenderTime: 10,
  estimatedRenderTime: 0,
  savedEstimatedRenderTime: 0,
  renderTimeMultiplier: 1,
  paths: null,
  textures: []
}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API

  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].obj(publicAPI, model);
  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].get(publicAPI, model, ['estimatedRenderTime', 'allocatedRenderTime']);
  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].setGet(publicAPI, model, ['visibility', 'pickable', 'dragable', 'useBounds', 'renderTimeMultiplier', 'parentProp']); // Object methods

  vtkProp(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].newInstance(extend, 'vtkProp'); // ----------------------------------------------------------------------------

var vtkProp$1 = {
  newInstance: newInstance,
  extend: extend
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Rendering/Core/Prop3D.js":
/*!****************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Rendering/Core/Prop3D.js ***!
  \****************************************************************/
/*! exports provided: default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkProp3D$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! gl-matrix */ "../node_modules/gl-matrix/esm/index.js");
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _Common_DataModel_BoundingBox_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../Common/DataModel/BoundingBox.js */ "../node_modules/@kitware/vtk.js/Common/DataModel/BoundingBox.js");
/* harmony import */ var _Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../Common/Core/Math/index.js */ "../node_modules/@kitware/vtk.js/Common/Core/Math/index.js");
/* harmony import */ var _Prop_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Prop.js */ "../node_modules/@kitware/vtk.js/Rendering/Core/Prop.js");






// vtkProp3D methods
// ----------------------------------------------------------------------------

function vtkProp3D(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkProp3D');

  publicAPI.addPosition = function (deltaXYZ) {
    model.position = model.position.map(function (value, index) {
      return value + deltaXYZ[index];
    });
    publicAPI.modified();
  };

  publicAPI.getOrientationWXYZ = function () {
    var q = gl_matrix__WEBPACK_IMPORTED_MODULE_0__["quat"].create();
    gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat4"].getRotation(q, model.rotation);
    var oaxis = new Float64Array(3);
    var w = gl_matrix__WEBPACK_IMPORTED_MODULE_0__["quat"].getAxisAngle(oaxis, q);
    return [Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__["y"])(w), oaxis[0], oaxis[1], oaxis[2]];
  };

  publicAPI.rotateX = function (val) {
    if (val === 0.0) {
      return;
    }

    gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat4"].rotateX(model.rotation, model.rotation, Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__["r"])(val));
    publicAPI.modified();
  };

  publicAPI.rotateY = function (val) {
    if (val === 0.0) {
      return;
    }

    gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat4"].rotateY(model.rotation, model.rotation, Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__["r"])(val));
    publicAPI.modified();
  };

  publicAPI.rotateZ = function (val) {
    if (val === 0.0) {
      return;
    }

    gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat4"].rotateZ(model.rotation, model.rotation, Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__["r"])(val));
    publicAPI.modified();
  };

  publicAPI.rotateWXYZ = function (degrees, x, y, z) {
    if (degrees === 0.0 || x === 0.0 && y === 0.0 && z === 0.0) {
      return;
    } // convert to radians


    var angle = Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__["r"])(degrees);
    var q = gl_matrix__WEBPACK_IMPORTED_MODULE_0__["quat"].create();
    gl_matrix__WEBPACK_IMPORTED_MODULE_0__["quat"].setAxisAngle(q, [x, y, z], angle);
    var quatMat = new Float64Array(16);
    gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat4"].fromQuat(quatMat, q);
    gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat4"].multiply(model.rotation, model.rotation, quatMat);
    publicAPI.modified();
  };

  publicAPI.setOrientation = function (x, y, z) {
    if (x === model.orientation[0] && y === model.orientation[1] && z === model.orientation[2]) {
      return false;
    }

    model.orientation = [x, y, z];
    gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat4"].identity(model.rotation);
    publicAPI.rotateZ(z);
    publicAPI.rotateX(x);
    publicAPI.rotateY(y);
    publicAPI.modified();
    return true;
  };

  publicAPI.setUserMatrix = function (matrix) {
    gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat4"].copy(model.userMatrix, matrix);
    publicAPI.modified();
  };

  publicAPI.getMatrix = function () {
    publicAPI.computeMatrix();
    return model.matrix;
  };

  publicAPI.computeMatrix = function () {
    // check whether or not need to rebuild the matrix
    if (publicAPI.getMTime() > model.matrixMTime.getMTime()) {
      gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat4"].identity(model.matrix);

      if (model.userMatrix) {
        gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat4"].multiply(model.matrix, model.matrix, model.userMatrix);
      }

      gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat4"].translate(model.matrix, model.matrix, model.origin);
      gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat4"].translate(model.matrix, model.matrix, model.position);
      gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat4"].multiply(model.matrix, model.matrix, model.rotation);
      gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat4"].scale(model.matrix, model.matrix, model.scale);
      gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat4"].translate(model.matrix, model.matrix, [-model.origin[0], -model.origin[1], -model.origin[2]]);
      gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat4"].transpose(model.matrix, model.matrix); // check for identity

      model.isIdentity = true;

      for (var i = 0; i < 4; ++i) {
        for (var j = 0; j < 4; ++j) {
          if ((i === j ? 1.0 : 0.0) !== model.matrix[i + j * 4]) {
            model.isIdentity = false;
          }
        }
      }

      model.matrixMTime.modified();
    }
  };

  publicAPI.getCenter = function () {
    return _Common_DataModel_BoundingBox_js__WEBPACK_IMPORTED_MODULE_2__["default"].getCenter(model.bounds);
  };

  publicAPI.getLength = function () {
    return _Common_DataModel_BoundingBox_js__WEBPACK_IMPORTED_MODULE_2__["default"].getLength(model.bounds);
  };

  publicAPI.getXRange = function () {
    return _Common_DataModel_BoundingBox_js__WEBPACK_IMPORTED_MODULE_2__["default"].getXRange(model.bounds);
  };

  publicAPI.getYRange = function () {
    return _Common_DataModel_BoundingBox_js__WEBPACK_IMPORTED_MODULE_2__["default"].getYRange(model.bounds);
  };

  publicAPI.getZRange = function () {
    return _Common_DataModel_BoundingBox_js__WEBPACK_IMPORTED_MODULE_2__["default"].getZRange(model.bounds);
  };

  publicAPI.getUserMatrix = function () {
    return model.userMatrix;
  };

  function updateIdentityFlag() {
    publicAPI.computeMatrix();
  }

  publicAPI.onModified(updateIdentityFlag);
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {
  origin: [0, 0, 0],
  position: [0, 0, 0],
  orientation: [0, 0, 0],
  rotation: null,
  scale: [1, 1, 1],
  bounds: [1, -1, 1, -1, 1, -1],
  userMatrix: null,
  userMatrixMTime: null,
  cachedProp3D: null,
  isIdentity: true,
  matrixMTime: null
}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance

  _Prop_js__WEBPACK_IMPORTED_MODULE_4__["default"].extend(publicAPI, model, initialValues);
  model.matrixMTime = {};
  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].obj(model.matrixMTime); // Build VTK API

  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].get(publicAPI, model, ['bounds', 'isIdentity']);
  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].getArray(publicAPI, model, ['orientation']);
  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].setGetArray(publicAPI, model, ['origin', 'position', 'scale'], 3); // Object internal instance

  model.matrix = gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat4"].identity(new Float64Array(16));
  model.rotation = gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat4"].identity(new Float64Array(16));
  model.userMatrix = gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat4"].identity(new Float64Array(16));
  model.transform = null; // FIXME
  // Object methods

  vtkProp3D(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].newInstance(extend, 'vtkProp3D'); // ----------------------------------------------------------------------------

var vtkProp3D$1 = {
  newInstance: newInstance,
  extend: extend
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Rendering/Core/Property.js":
/*!******************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Rendering/Core/Property.js ***!
  \******************************************************************/
/*! exports provided: default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkProperty$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "../node_modules/@babel/runtime/helpers/defineProperty.js");
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _Property_Constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Property/Constants.js */ "../node_modules/@kitware/vtk.js/Rendering/Core/Property/Constants.js");




function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var Representation = _Property_Constants_js__WEBPACK_IMPORTED_MODULE_2__["default"].Representation,
    Interpolation = _Property_Constants_js__WEBPACK_IMPORTED_MODULE_2__["default"].Interpolation;

function notImplemented(method) {
  return function () {
    return _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].vtkErrorMacro("vtkProperty::".concat(method, " - NOT IMPLEMENTED"));
  };
} // ----------------------------------------------------------------------------
// vtkProperty methods
// ----------------------------------------------------------------------------


function vtkProperty(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkProperty');

  publicAPI.setColor = function (r, g, b) {
    if (Array.isArray(r)) {
      if (model.color[0] !== r[0] || model.color[1] !== r[1] || model.color[2] !== r[2]) {
        model.color[0] = r[0];
        model.color[1] = r[1];
        model.color[2] = r[2];
        publicAPI.modified();
      }
    } else if (model.color[0] !== r || model.color[1] !== g || model.color[2] !== b) {
      model.color[0] = r;
      model.color[1] = g;
      model.color[2] = b;
      publicAPI.modified();
    }

    publicAPI.setDiffuseColor(model.color);
    publicAPI.setAmbientColor(model.color);
    publicAPI.setSpecularColor(model.color);
  };

  publicAPI.computeCompositeColor = notImplemented('ComputeCompositeColor');

  publicAPI.getColor = function () {
    // Inline computeCompositeColor
    var norm = 0.0;

    if (model.ambient + model.diffuse + model.specular > 0) {
      norm = 1.0 / (model.ambient + model.diffuse + model.specular);
    }

    for (var i = 0; i < 3; i++) {
      model.color[i] = norm * (model.ambient * model.ambientColor[i] + model.diffuse * model.diffuseColor[i] + model.specular * model.specularColor[i]);
    }

    return [].concat(model.color);
  };

  publicAPI.addShaderVariable = notImplemented('AddShaderVariable');

  publicAPI.setInterpolationToFlat = function () {
    return publicAPI.setInterpolation(Interpolation.FLAT);
  };

  publicAPI.setInterpolationToGouraud = function () {
    return publicAPI.setInterpolation(Interpolation.GOURAUD);
  };

  publicAPI.setInterpolationToPhong = function () {
    return publicAPI.setInterpolation(Interpolation.PHONG);
  };

  publicAPI.getInterpolationAsString = function () {
    return _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].enumToString(Interpolation, model.interpolation);
  };

  publicAPI.setRepresentationToWireframe = function () {
    return publicAPI.setRepresentation(Representation.WIREFRAME);
  };

  publicAPI.setRepresentationToSurface = function () {
    return publicAPI.setRepresentation(Representation.SURFACE);
  };

  publicAPI.setRepresentationToPoints = function () {
    return publicAPI.setRepresentation(Representation.POINTS);
  };

  publicAPI.getRepresentationAsString = function () {
    return _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].enumToString(Representation, model.representation);
  };
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {
  color: [1, 1, 1],
  ambientColor: [1, 1, 1],
  diffuseColor: [1, 1, 1],
  specularColor: [1, 1, 1],
  edgeColor: [0, 0, 0],
  ambient: 0,
  diffuse: 1,
  specular: 0,
  specularPower: 1,
  opacity: 1,
  interpolation: Interpolation.GOURAUD,
  representation: Representation.SURFACE,
  edgeVisibility: false,
  backfaceCulling: false,
  frontfaceCulling: false,
  pointSize: 1,
  lineWidth: 1,
  lighting: true,
  shading: false,
  materialName: null
}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API

  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].obj(publicAPI, model);
  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].setGet(publicAPI, model, ['lighting', 'interpolation', 'ambient', 'diffuse', 'specular', 'specularPower', 'opacity', 'edgeVisibility', 'lineWidth', 'pointSize', 'backfaceCulling', 'frontfaceCulling', 'representation']);
  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].setGetArray(publicAPI, model, ['ambientColor', 'specularColor', 'diffuseColor', 'edgeColor'], 3); // Object methods

  vtkProperty(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].newInstance(extend, 'vtkProperty'); // ----------------------------------------------------------------------------

var vtkProperty$1 = _objectSpread({
  newInstance: newInstance,
  extend: extend
}, _Property_Constants_js__WEBPACK_IMPORTED_MODULE_2__["default"]);




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Rendering/Core/Property/Constants.js":
/*!****************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Rendering/Core/Property/Constants.js ***!
  \****************************************************************************/
/*! exports provided: Interpolation, Representation, Shading, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Interpolation", function() { return Interpolation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Representation", function() { return Representation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Shading", function() { return Shading; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return PropertyConst; });
var Shading = {
  FLAT: 0,
  GOURAUD: 1,
  PHONG: 2
};
var Representation = {
  POINTS: 0,
  WIREFRAME: 1,
  SURFACE: 2
};
var Interpolation = Shading;
var PropertyConst = {
  Shading: Shading,
  Representation: Representation,
  Interpolation: Interpolation
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Rendering/Core/Property2D.js":
/*!********************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Rendering/Core/Property2D.js ***!
  \********************************************************************/
/*! exports provided: default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkProperty2D$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _Property2D_Constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Property2D/Constants.js */ "../node_modules/@kitware/vtk.js/Rendering/Core/Property2D/Constants.js");
/* harmony import */ var _Property_Constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Property/Constants.js */ "../node_modules/@kitware/vtk.js/Rendering/Core/Property/Constants.js");




var DisplayLocation = _Property2D_Constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].DisplayLocation; // ----------------------------------------------------------------------------
// vtkProperty2D methods
// ----------------------------------------------------------------------------

function vtkProperty2D(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkProperty2D');

  publicAPI.setDisplayLocationToBackground = function () {
    return publicAPI.setDisplayLocation(DisplayLocation.BACKGROUND);
  };

  publicAPI.setDisplayLocationToForeground = function () {
    return publicAPI.setDisplayLocation(DisplayLocation.FOREGROUND);
  };

  publicAPI.setRepresentationToWireframe = function () {
    return publicAPI.setRepresentation(_Property_Constants_js__WEBPACK_IMPORTED_MODULE_2__["Representation"].WIREFRAME);
  };

  publicAPI.setRepresentationToSurface = function () {
    return publicAPI.setRepresentation(_Property_Constants_js__WEBPACK_IMPORTED_MODULE_2__["Representation"].SURFACE);
  };

  publicAPI.setRepresentationToPoints = function () {
    return publicAPI.setRepresentation(_Property_Constants_js__WEBPACK_IMPORTED_MODULE_2__["Representation"].POINTS);
  };

  publicAPI.getRepresentationAsString = function () {
    return _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].enumToString(_Property_Constants_js__WEBPACK_IMPORTED_MODULE_2__["Representation"], model.representation);
  };
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {
  color: [1, 1, 1],
  opacity: 1,
  pointSize: 1,
  lineWidth: 1,
  representation: _Property_Constants_js__WEBPACK_IMPORTED_MODULE_2__["Representation"].SURFACE,
  displayLocation: DisplayLocation.FOREGROUND
}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API

  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].obj(publicAPI, model);
  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].setGet(publicAPI, model, ['opacity', 'lineWidth', 'pointSize', 'displayLocation', 'representation']);
  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].setGetArray(publicAPI, model, ['color'], 3); // Object methods

  vtkProperty2D(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].newInstance(extend, 'vtkProperty2D'); // ----------------------------------------------------------------------------

var vtkProperty2D$1 = {
  newInstance: newInstance,
  extend: extend
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Rendering/Core/Property2D/Constants.js":
/*!******************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Rendering/Core/Property2D/Constants.js ***!
  \******************************************************************************/
/*! exports provided: DisplayLocation, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DisplayLocation", function() { return DisplayLocation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Constants; });
var DisplayLocation = {
  BACKGROUND: 0,
  FOREGROUND: 1
};
var Constants = {
  DisplayLocation: DisplayLocation
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Rendering/Core/RenderWindow.js":
/*!**********************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Rendering/Core/RenderWindow.js ***!
  \**********************************************************************/
/*! exports provided: default, extend, listViewAPIs, newAPISpecificView, newInstance, registerViewConstructor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkRenderWindow$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "listViewAPIs", function() { return listViewAPIs; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newAPISpecificView", function() { return newAPISpecificView; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "registerViewConstructor", function() { return registerViewConstructor; });
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");


var DEFAULT_VIEW_API = navigator.gpu ? 'WebGPU' : 'WebGL';
var VIEW_CONSTRUCTORS = Object.create(null); // ----------------------------------------------------------------------------
// static methods
// ----------------------------------------------------------------------------

function registerViewConstructor(name, constructor) {
  VIEW_CONSTRUCTORS[name] = constructor;
}
function listViewAPIs() {
  return Object.keys(VIEW_CONSTRUCTORS);
}
function newAPISpecificView(name) {
  var initialValues = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  return VIEW_CONSTRUCTORS[name] && VIEW_CONSTRUCTORS[name](initialValues);
} // ----------------------------------------------------------------------------
// vtkRenderWindow methods
// ----------------------------------------------------------------------------

function vtkRenderWindow(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkRenderWindow'); // Add renderer

  publicAPI.addRenderer = function (renderer) {
    if (publicAPI.hasRenderer(renderer)) {
      return;
    }

    renderer.setRenderWindow(publicAPI);
    model.renderers.push(renderer); // for (this->Renderers->InitTraversal(rsit);
    //      (aren = this->Renderers->GetNextRenderer(rsit)); )
    //   {
    //   aren->SetAllocatedRenderTime
    //     (1.0/(this->DesiredUpdateRate*this->Renderers->GetNumberOfItems()));
    //   }

    publicAPI.modified();
  }; // Remove renderer


  publicAPI.removeRenderer = function (renderer) {
    model.renderers = model.renderers.filter(function (r) {
      return r !== renderer;
    });
    publicAPI.modified();
  };

  publicAPI.hasRenderer = function (ren) {
    return model.renderers.indexOf(ren) !== -1;
  }; // get an API specific view of this data


  publicAPI.newAPISpecificView = function (name) {
    var initialValues = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    return newAPISpecificView(name || model.defaultViewAPI, initialValues);
  }; // Add renderer


  publicAPI.addView = function (view) {
    if (publicAPI.hasView(view)) {
      return;
    }

    view.setRenderable(publicAPI);
    model.views.push(view);
    publicAPI.modified();
  }; // Remove renderer


  publicAPI.removeView = function (view) {
    model.views = model.views.filter(function (r) {
      return r !== view;
    });
    publicAPI.modified();
  };

  publicAPI.hasView = function (view) {
    return model.views.indexOf(view) !== -1;
  }; // handle any pre render initializations


  publicAPI.preRender = function () {
    model.renderers.forEach(function (ren) {
      // make sure we have a camera
      if (!ren.isActiveCameraCreated()) {
        ren.resetCamera();
      }
    });
  };

  publicAPI.render = function () {
    publicAPI.preRender();

    if (model.interactor) {
      model.interactor.render();
    } else {
      model.views.forEach(function (view) {
        return view.traverseAllPasses();
      });
    }
  };

  publicAPI.getStatistics = function () {
    var results = {
      propCount: 0,
      invisiblePropCount: 0
    };
    model.renderers.forEach(function (ren) {
      var props = ren.getViewProps();
      props.forEach(function (prop) {
        if (prop.getVisibility()) {
          results.propCount += 1;
          var mpr = prop.getMapper && prop.getMapper();

          if (mpr && mpr.getPrimitiveCount) {
            var pcount = mpr.getPrimitiveCount();
            Object.keys(pcount).forEach(function (keyName) {
              if (!results[keyName]) {
                results[keyName] = 0;
              }

              results[keyName] += pcount[keyName];
            });
          }
        } else {
          results.invisiblePropCount += 1;
        }
      });
    });
    results.str = Object.keys(results).map(function (keyName) {
      return "".concat(keyName, ": ").concat(results[keyName]);
    }).join('\n');
    return results;
  };

  publicAPI.captureImages = function () {
    var format = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'image/png';
    var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].setImmediate(publicAPI.render);
    return model.views.map(function (view) {
      return view.captureNextImage ? view.captureNextImage(format, opts) : undefined;
    }).filter(function (i) {
      return !!i;
    });
  };
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {
  defaultViewAPI: DEFAULT_VIEW_API,
  renderers: [],
  views: [],
  interactor: null,
  neverRendered: true,
  numberOfLayers: 1
}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API

  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].obj(publicAPI, model);
  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].setGet(publicAPI, model, ['interactor', 'numberOfLayers', 'views', 'defaultViewAPI']);
  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].get(publicAPI, model, ['neverRendered']);
  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].getArray(publicAPI, model, ['renderers']);
  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].event(publicAPI, model, 'completion'); // Object methods

  vtkRenderWindow(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].newInstance(extend, 'vtkRenderWindow'); // ----------------------------------------------------------------------------

var vtkRenderWindow$1 = {
  newInstance: newInstance,
  extend: extend,
  registerViewConstructor: registerViewConstructor,
  listViewAPIs: listViewAPIs,
  newAPISpecificView: newAPISpecificView
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Rendering/Core/RenderWindowInteractor.js":
/*!********************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Rendering/Core/RenderWindowInteractor.js ***!
  \********************************************************************************/
/*! exports provided: default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkRenderWindowInteractor$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "../node_modules/@babel/runtime/helpers/defineProperty.js");
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../Common/Core/Math/index.js */ "../node_modules/@kitware/vtk.js/Common/Core/Math/index.js");
/* harmony import */ var _RenderWindowInteractor_Constants_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./RenderWindowInteractor/Constants.js */ "../node_modules/@kitware/vtk.js/Rendering/Core/RenderWindowInteractor/Constants.js");





function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var Device = _RenderWindowInteractor_Constants_js__WEBPACK_IMPORTED_MODULE_3__["default"].Device,
    Input = _RenderWindowInteractor_Constants_js__WEBPACK_IMPORTED_MODULE_3__["default"].Input;
var vtkWarningMacro = _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].vtkWarningMacro,
    vtkErrorMacro = _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].vtkErrorMacro,
    normalizeWheel = _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].normalizeWheel,
    vtkOnceErrorMacro = _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].vtkOnceErrorMacro; // ----------------------------------------------------------------------------
// Global methods
// ----------------------------------------------------------------------------

var deviceInputMap = {
  'xr-standard': [Input.Trigger, Input.Grip, Input.TrackPad, Input.Thumbstick, Input.A, Input.B]
};
var handledEvents = ['StartAnimation', 'Animation', 'EndAnimation', 'MouseEnter', 'MouseLeave', 'StartMouseMove', 'MouseMove', 'EndMouseMove', 'LeftButtonPress', 'LeftButtonRelease', 'MiddleButtonPress', 'MiddleButtonRelease', 'RightButtonPress', 'RightButtonRelease', 'KeyPress', 'KeyDown', 'KeyUp', 'StartMouseWheel', 'MouseWheel', 'EndMouseWheel', 'StartPinch', 'Pinch', 'EndPinch', 'StartPan', 'Pan', 'EndPan', 'StartRotate', 'Rotate', 'EndRotate', 'Button3D', 'Move3D', 'StartPointerLock', 'EndPointerLock', 'StartInteraction', 'Interaction', 'EndInteraction', 'AnimationFrameRateUpdate'];

function preventDefault(event) {
  if (event.cancelable) {
    event.stopPropagation();
    event.preventDefault();
  }

  return false;
} // ----------------------------------------------------------------------------
// vtkRenderWindowInteractor methods
// ----------------------------------------------------------------------------


function vtkRenderWindowInteractor(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkRenderWindowInteractor'); // Initialize list of requesters

  var animationRequesters = new Set(); // track active event listeners to handle simultaneous button tracking

  var activeListenerCount = 0; // Public API methods
  //----------------------------------------------------------------------

  publicAPI.start = function () {
    // Let the compositing handle the event loop if it wants to.
    // if (publicAPI.HasObserver(vtkCommand::StartEvent) && !publicAPI.HandleEventLoop) {
    //   publicAPI.invokeEvent({ type: 'StartEvent' });
    //   return;
    // }
    // As a convenience, initialize if we aren't initialized yet.
    if (!model.initialized) {
      publicAPI.initialize();

      if (!model.initialized) {
        return;
      }
    } // Pass execution to the subclass which will run the event loop,
    // this will not return until TerminateApp is called.


    publicAPI.startEventLoop();
  }; //----------------------------------------------------------------------


  publicAPI.setRenderWindow = function (aren) {
    vtkErrorMacro('you want to call setView(view) instead of setRenderWindow on a vtk.js interactor');
  }; //----------------------------------------------------------------------


  publicAPI.setInteractorStyle = function (style) {
    if (model.interactorStyle !== style) {
      if (model.interactorStyle != null) {
        model.interactorStyle.setInteractor(null);
      }

      model.interactorStyle = style;

      if (model.interactorStyle != null) {
        if (model.interactorStyle.getInteractor() !== publicAPI) {
          model.interactorStyle.setInteractor(publicAPI);
        }
      }
    }
  }; //---------------------------------------------------------------------


  publicAPI.initialize = function () {
    model.initialized = true;
    publicAPI.enable();
    publicAPI.render();
  };

  publicAPI.enable = function () {
    return publicAPI.setEnabled(true);
  };

  publicAPI.disable = function () {
    return publicAPI.setEnabled(false);
  };

  publicAPI.startEventLoop = function () {
    return vtkWarningMacro('empty event loop');
  };

  function updateCurrentRenderer(x, y) {
    if (!model._forcedRenderer) {
      model.currentRenderer = publicAPI.findPokedRenderer(x, y);
    }
  }

  publicAPI.getCurrentRenderer = function () {
    if (model.currentRenderer) {
      return model.currentRenderer;
    }

    updateCurrentRenderer(0, 0);
    return model.currentRenderer;
  };

  function getScreenEventPositionFor(source) {
    var bounds = model.container.getBoundingClientRect();
    var canvas = model.view.getCanvas();
    var scaleX = canvas.width / bounds.width;
    var scaleY = canvas.height / bounds.height;
    var position = {
      x: scaleX * (source.clientX - bounds.left),
      y: scaleY * (bounds.height - source.clientY + bounds.top),
      z: 0
    };
    updateCurrentRenderer(position.x, position.y);
    return position;
  }

  function getTouchEventPositionsFor(touches) {
    var positions = {};

    for (var i = 0; i < touches.length; i++) {
      var touch = touches[i];
      positions[touch.identifier] = getScreenEventPositionFor(touch);
    }

    return positions;
  }

  function getModifierKeysFor(event) {
    return {
      controlKey: event.ctrlKey,
      altKey: event.altKey,
      shiftKey: event.shiftKey
    };
  }

  function getKeysFor(event) {
    var modifierKeys = getModifierKeysFor(event);

    var keys = _objectSpread({
      key: event.key,
      keyCode: event.charCode
    }, modifierKeys);

    return keys;
  }

  function interactionRegistration(addListeners) {
    var force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
    var rootElm = document;
    var method = addListeners ? 'addEventListener' : 'removeEventListener';
    var invMethod = addListeners ? 'removeEventListener' : 'addEventListener';

    if (!force && !addListeners && activeListenerCount > 0) {
      --activeListenerCount;
    } // only add/remove listeners when there are no registered listeners


    if (!activeListenerCount || force) {
      activeListenerCount = 0;

      if (model.container) {
        model.container[invMethod]('mousemove', publicAPI.handleMouseMove);
      }

      rootElm[method]('mouseup', publicAPI.handleMouseUp);
      rootElm[method]('mousemove', publicAPI.handleMouseMove);
      rootElm[method]('touchend', publicAPI.handleTouchEnd, false);
      rootElm[method]('touchcancel', publicAPI.handleTouchEnd, false);
      rootElm[method]('touchmove', publicAPI.handleTouchMove, false);
    }

    if (!force && addListeners) {
      ++activeListenerCount;
    }
  }

  publicAPI.bindEvents = function (container) {
    model.container = container;
    container.addEventListener('contextmenu', preventDefault); // container.addEventListener('click', preventDefault); // Avoid stopping event propagation

    container.addEventListener('wheel', publicAPI.handleWheel);
    container.addEventListener('DOMMouseScroll', publicAPI.handleWheel);
    container.addEventListener('mouseenter', publicAPI.handleMouseEnter);
    container.addEventListener('mouseleave', publicAPI.handleMouseLeave);
    container.addEventListener('mousemove', publicAPI.handleMouseMove);
    container.addEventListener('mousedown', publicAPI.handleMouseDown);
    document.addEventListener('keypress', publicAPI.handleKeyPress);
    document.addEventListener('keydown', publicAPI.handleKeyDown);
    document.addEventListener('keyup', publicAPI.handleKeyUp);
    document.addEventListener('pointerlockchange', publicAPI.handlePointerLockChange);
    container.addEventListener('touchstart', publicAPI.handleTouchStart, false);
  };

  publicAPI.unbindEvents = function () {
    // force unbinding listeners
    interactionRegistration(false, true);
    model.container.removeEventListener('contextmenu', preventDefault); // model.container.removeEventListener('click', preventDefault); // Avoid stopping event propagation

    model.container.removeEventListener('wheel', publicAPI.handleWheel);
    model.container.removeEventListener('DOMMouseScroll', publicAPI.handleWheel);
    model.container.removeEventListener('mouseenter', publicAPI.handleMouseEnter);
    model.container.removeEventListener('mouseleave', publicAPI.handleMouseLeave);
    model.container.removeEventListener('mousemove', publicAPI.handleMouseMove);
    model.container.removeEventListener('mousedown', publicAPI.handleMouseDown);
    document.removeEventListener('keypress', publicAPI.handleKeyPress);
    document.removeEventListener('keydown', publicAPI.handleKeyDown);
    document.removeEventListener('keyup', publicAPI.handleKeyUp);
    document.removeEventListener('pointerlockchange', publicAPI.handlePointerLockChange);
    model.container.removeEventListener('touchstart', publicAPI.handleTouchStart);
    model.container = null;
  };

  publicAPI.handleKeyPress = function (event) {
    var data = getKeysFor(event);
    publicAPI.keyPressEvent(data);
  };

  publicAPI.handleKeyDown = function (event) {
    var data = getKeysFor(event);
    publicAPI.keyDownEvent(data);
  };

  publicAPI.handleKeyUp = function (event) {
    var data = getKeysFor(event);
    publicAPI.keyUpEvent(data);
  };

  publicAPI.handleMouseDown = function (event) {
    if (event.button > 2) {
      // ignore events from extra mouse buttons such as `back` and `forward`
      return;
    }

    interactionRegistration(true);
    preventDefault(event);

    var callData = _objectSpread(_objectSpread({}, getModifierKeysFor(event)), {}, {
      position: getScreenEventPositionFor(event)
    });

    switch (event.button) {
      case 0:
        publicAPI.leftButtonPressEvent(callData);
        break;

      case 1:
        publicAPI.middleButtonPressEvent(callData);
        break;

      case 2:
        publicAPI.rightButtonPressEvent(callData);
        break;

      default:
        vtkErrorMacro("Unknown mouse button pressed: ".concat(event.button));
        break;
    }
  }; //----------------------------------------------------------------------


  publicAPI.requestPointerLock = function () {
    var canvas = publicAPI.getView().getCanvas();
    canvas.requestPointerLock();
  }; //----------------------------------------------------------------------


  publicAPI.exitPointerLock = function () {
    return document.exitPointerLock();
  }; //----------------------------------------------------------------------


  publicAPI.isPointerLocked = function () {
    return !!document.pointerLockElement;
  }; //----------------------------------------------------------------------


  publicAPI.handlePointerLockChange = function () {
    if (publicAPI.isPointerLocked()) {
      publicAPI.startPointerLockEvent();
    } else {
      publicAPI.endPointerLockEvent();
    }
  }; //----------------------------------------------------------------------


  function forceRender() {
    if (model.view && model.enabled && model.enableRender) {
      model.inRender = true;
      model.view.traverseAllPasses();
      model.inRender = false;
    } // outside the above test so that third-party code can redirect
    // the render to the appropriate class


    publicAPI.invokeRenderEvent();
  }

  publicAPI.requestAnimation = function (requestor) {
    if (requestor === undefined) {
      vtkErrorMacro("undefined requester, can not start animating");
      return;
    }

    if (animationRequesters.has(requestor)) {
      vtkWarningMacro("requester is already registered for animating");
      return;
    }

    animationRequesters.add(requestor);

    if (!model.animationRequest && animationRequesters.size === 1 && !model.xrAnimation) {
      model._animationStartTime = Date.now();
      model._animationFrameCount = 0;
      model.animationRequest = requestAnimationFrame(publicAPI.handleAnimation);
      publicAPI.startAnimationEvent();
    }
  }; // continue animating for at least the specified duration of
  // milliseconds.


  publicAPI.extendAnimation = function (duration) {
    var newEnd = Date.now() + duration;
    model._animationExtendedEnd = Math.max(model._animationExtendedEnd, newEnd);

    if (!model.animationRequest && animationRequesters.size === 0 && !model.xrAnimation) {
      model._animationStartTime = Date.now();
      model._animationFrameCount = 0;
      model.animationRequest = requestAnimationFrame(publicAPI.handleAnimation);
      publicAPI.startAnimationEvent();
    }
  };

  publicAPI.isAnimating = function () {
    return model.xrAnimation || model.animationRequest !== null;
  };

  publicAPI.cancelAnimation = function (requestor) {
    var skipWarning = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

    if (!animationRequesters.has(requestor)) {
      if (!skipWarning) {
        var requestStr = requestor && requestor.getClassName ? requestor.getClassName() : requestor;
        vtkWarningMacro("".concat(requestStr, " did not request an animation"));
      }

      return;
    }

    animationRequesters.delete(requestor);

    if (model.animationRequest && animationRequesters.size === 0 && Date.now() > model._animationExtendedEnd) {
      cancelAnimationFrame(model.animationRequest);
      model.animationRequest = null;
      publicAPI.endAnimationEvent();
      publicAPI.render();
    }
  };

  publicAPI.switchToXRAnimation = function () {
    // cancel existing animation if any
    if (model.animationRequest) {
      cancelAnimationFrame(model.animationRequest);
      model.animationRequest = null;
    }

    model.xrAnimation = true;
  };

  publicAPI.returnFromXRAnimation = function () {
    model.xrAnimation = false;

    if (animationRequesters.size !== 0) {
      model.recentAnimationFrameRate = 10.0;
      model.animationRequest = requestAnimationFrame(publicAPI.handleAnimation);
    }
  };

  publicAPI.updateXRGamepads = function (xrSession, xrFrame, xrRefSpace) {
    // watch for when buttons change state and fire events
    xrSession.inputSources.forEach(function (inputSource) {
      var gripPose = inputSource.gripSpace == null ? null : xrFrame.getPose(inputSource.gripSpace, xrRefSpace);
      var gp = inputSource.gamepad;
      var hand = inputSource.handedness;

      if (gp) {
        if (!(gp.index in model.lastGamepadValues)) {
          model.lastGamepadValues[gp.index] = {
            left: {
              buttons: {}
            },
            right: {
              buttons: {}
            }
          };
        }

        for (var b = 0; b < gp.buttons.length; ++b) {
          if (!(b in model.lastGamepadValues[gp.index][hand].buttons)) {
            model.lastGamepadValues[gp.index][hand].buttons[b] = false;
          }

          if (model.lastGamepadValues[gp.index][hand].buttons[b] !== gp.buttons[b].pressed && gripPose != null) {
            publicAPI.button3DEvent({
              gamepad: gp,
              position: gripPose.transform.position,
              orientation: gripPose.transform.orientation,
              pressed: gp.buttons[b].pressed,
              device: inputSource.handedness === 'left' ? Device.LeftController : Device.RightController,
              input: deviceInputMap[gp.mapping] && deviceInputMap[gp.mapping][b] ? deviceInputMap[gp.mapping][b] : Input.Trigger
            });
            model.lastGamepadValues[gp.index][hand].buttons[b] = gp.buttons[b].pressed;
          }

          if (model.lastGamepadValues[gp.index][hand].buttons[b] && gripPose != null) {
            publicAPI.move3DEvent({
              gamepad: gp,
              position: gripPose.transform.position,
              orientation: gripPose.transform.orientation,
              device: inputSource.handedness === 'left' ? Device.LeftController : Device.RightController
            });
          }
        }
      }
    });
  };

  publicAPI.handleMouseMove = function (event) {
    // Do not consume event for move
    // preventDefault(event);
    var callData = _objectSpread(_objectSpread({}, getModifierKeysFor(event)), {}, {
      position: getScreenEventPositionFor(event)
    });

    if (model.moveTimeoutID === 0) {
      publicAPI.startMouseMoveEvent(callData);
    } else {
      publicAPI.mouseMoveEvent(callData);
      clearTimeout(model.moveTimeoutID);
    } // start a timer to keep us animating while we get mouse move events


    model.moveTimeoutID = setTimeout(function () {
      publicAPI.endMouseMoveEvent();
      model.moveTimeoutID = 0;
    }, 200);
  };

  publicAPI.handleAnimation = function () {
    var currTime = Date.now();
    model._animationFrameCount++;

    if (currTime - model._animationStartTime > 1000.0 && model._animationFrameCount > 1) {
      model.recentAnimationFrameRate = 1000.0 * (model._animationFrameCount - 1) / (currTime - model._animationStartTime);
      model.lastFrameTime = 1.0 / model.recentAnimationFrameRate;
      publicAPI.animationFrameRateUpdateEvent();
      model._animationStartTime = currTime;
      model._animationFrameCount = 1;
    }

    publicAPI.animationEvent();
    forceRender();

    if (animationRequesters.size > 0 || Date.now() < model._animationExtendedEnd) {
      model.animationRequest = requestAnimationFrame(publicAPI.handleAnimation);
    } else {
      cancelAnimationFrame(model.animationRequest);
      model.animationRequest = null;
      publicAPI.endAnimationEvent();
      publicAPI.render();
    }
  };

  publicAPI.handleWheel = function (event) {
    preventDefault(event);
    /**
     * wheel event values can vary significantly across browsers, platforms
     * and devices [1]. `normalizeWheel` uses facebook's solution from their
     * fixed-data-table repository [2].
     *
     * [1] https://developer.mozilla.org/en-US/docs/Web/Events/mousewheel
     * [2] https://github.com/facebookarchive/fixed-data-table/blob/master/src/vendor_upstream/dom/normalizeWheel.js
     *
     * This code will return an object with properties:
     *
     *   spinX   -- normalized spin speed (use for zoom) - x plane
     *   spinY   -- " - y plane
     *   pixelX  -- normalized distance (to pixels) - x plane
     *   pixelY  -- " - y plane
     *
     */

    var callData = _objectSpread(_objectSpread(_objectSpread({}, normalizeWheel(event)), getModifierKeysFor(event)), {}, {
      position: getScreenEventPositionFor(event)
    });

    if (model.wheelTimeoutID === 0) {
      publicAPI.startMouseWheelEvent(callData);
    } else {
      publicAPI.mouseWheelEvent(callData);
      clearTimeout(model.wheelTimeoutID);
    } // start a timer to keep us animating while we get wheel events


    model.wheelTimeoutID = setTimeout(function () {
      publicAPI.extendAnimation(600);
      publicAPI.endMouseWheelEvent();
      model.wheelTimeoutID = 0;
    }, 200);
  };

  publicAPI.handleMouseEnter = function (event) {
    var callData = _objectSpread(_objectSpread({}, getModifierKeysFor(event)), {}, {
      position: getScreenEventPositionFor(event)
    });

    publicAPI.mouseEnterEvent(callData);
  };

  publicAPI.handleMouseLeave = function (event) {
    var callData = _objectSpread(_objectSpread({}, getModifierKeysFor(event)), {}, {
      position: getScreenEventPositionFor(event)
    });

    publicAPI.mouseLeaveEvent(callData);
  };

  publicAPI.handleMouseUp = function (event) {
    interactionRegistration(false);
    preventDefault(event);

    var callData = _objectSpread(_objectSpread({}, getModifierKeysFor(event)), {}, {
      position: getScreenEventPositionFor(event)
    });

    switch (event.button) {
      case 0:
        publicAPI.leftButtonReleaseEvent(callData);
        break;

      case 1:
        publicAPI.middleButtonReleaseEvent(callData);
        break;

      case 2:
        publicAPI.rightButtonReleaseEvent(callData);
        break;

      default:
        vtkErrorMacro("Unknown mouse button released: ".concat(event.button));
        break;
    }
  };

  publicAPI.handleTouchStart = function (event) {
    interactionRegistration(true);
    preventDefault(event); // If multitouch

    if (model.recognizeGestures && event.touches.length > 1) {
      var positions = getTouchEventPositionsFor(event.touches); // did we just transition to multitouch?

      if (event.touches.length === 2) {
        var touch = event.touches[0];
        var callData = {
          position: getScreenEventPositionFor(touch),
          shiftKey: false,
          altKey: false,
          controlKey: false
        };
        publicAPI.leftButtonReleaseEvent(callData);
      } // handle the gesture


      publicAPI.recognizeGesture('TouchStart', positions);
    } else {
      var _touch = event.touches[0];
      var _callData = {
        position: getScreenEventPositionFor(_touch),
        shiftKey: false,
        altKey: false,
        controlKey: false
      };
      publicAPI.leftButtonPressEvent(_callData);
    }
  };

  publicAPI.handleTouchMove = function (event) {
    preventDefault(event);

    if (model.recognizeGestures && event.touches.length > 1) {
      var positions = getTouchEventPositionsFor(event.touches);
      publicAPI.recognizeGesture('TouchMove', positions);
    } else {
      var touch = event.touches[0];
      var callData = {
        position: getScreenEventPositionFor(touch),
        shiftKey: false,
        altKey: false,
        controlKey: false
      };
      publicAPI.mouseMoveEvent(callData);
    }
  };

  publicAPI.handleTouchEnd = function (event) {
    preventDefault(event);

    if (model.recognizeGestures) {
      // No more fingers down
      if (event.touches.length === 0) {
        // If just one finger released, consider as left button
        if (event.changedTouches.length === 1) {
          var touch = event.changedTouches[0];
          var callData = {
            position: getScreenEventPositionFor(touch),
            shiftKey: false,
            altKey: false,
            controlKey: false
          };
          publicAPI.leftButtonReleaseEvent(callData);
          interactionRegistration(false);
        } else {
          // If more than one finger released, recognize touchend
          var positions = getTouchEventPositionsFor(event.changedTouches);
          publicAPI.recognizeGesture('TouchEnd', positions);
          interactionRegistration(false);
        }
      } else if (event.touches.length === 1) {
        // If one finger left, end touch and start button press
        var _positions = getTouchEventPositionsFor(event.changedTouches);

        publicAPI.recognizeGesture('TouchEnd', _positions);
        var _touch2 = event.touches[0];
        var _callData2 = {
          position: getScreenEventPositionFor(_touch2),
          shiftKey: false,
          altKey: false,
          controlKey: false
        };
        publicAPI.leftButtonPressEvent(_callData2);
      } else {
        // If more than one finger left, keep touch move
        var _positions2 = getTouchEventPositionsFor(event.touches);

        publicAPI.recognizeGesture('TouchMove', _positions2);
      }
    } else {
      var _touch3 = event.changedTouches[0];
      var _callData3 = {
        position: getScreenEventPositionFor(_touch3),
        shiftKey: false,
        altKey: false,
        controlKey: false
      };
      publicAPI.leftButtonReleaseEvent(_callData3);
      interactionRegistration(false);
    }
  };

  publicAPI.setView = function (val) {
    if (model.view === val) {
      return;
    }

    model.view = val;
    model.view.getRenderable().setInteractor(publicAPI);
    publicAPI.modified();
  };

  publicAPI.getFirstRenderer = function () {
    var _model$view, _model$view$getRender, _model$view$getRender2;

    return (_model$view = model.view) === null || _model$view === void 0 ? void 0 : (_model$view$getRender = _model$view.getRenderable()) === null || _model$view$getRender === void 0 ? void 0 : (_model$view$getRender2 = _model$view$getRender.getRenderersByReference()) === null || _model$view$getRender2 === void 0 ? void 0 : _model$view$getRender2[0];
  };

  publicAPI.findPokedRenderer = function () {
    var _model$view2, _model$view2$getRende;

    var x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
    var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;

    if (!model.view) {
      return null;
    } // The original order of renderers needs to remain as
    // the first one is the one we want to manipulate the camera on.


    var rc = (_model$view2 = model.view) === null || _model$view2 === void 0 ? void 0 : (_model$view2$getRende = _model$view2.getRenderable()) === null || _model$view2$getRende === void 0 ? void 0 : _model$view2$getRende.getRenderers();

    if (!rc) {
      return null;
    }

    rc.sort(function (a, b) {
      return a.getLayer() - b.getLayer();
    });
    var interactiveren = null;
    var viewportren = null;
    var currentRenderer = null;
    var count = rc.length;

    while (count--) {
      var aren = rc[count];

      if (model.view.isInViewport(x, y, aren) && aren.getInteractive()) {
        currentRenderer = aren;
        break;
      }

      if (interactiveren === null && aren.getInteractive()) {
        // Save this renderer in case we can't find one in the viewport that
        // is interactive.
        interactiveren = aren;
      }

      if (viewportren === null && model.view.isInViewport(x, y, aren)) {
        // Save this renderer in case we can't find one in the viewport that
        // is interactive.
        viewportren = aren;
      }
    } // We must have a value.  If we found an interactive renderer before, that's
    // better than a non-interactive renderer.


    if (currentRenderer === null) {
      currentRenderer = interactiveren;
    } // We must have a value.  If we found a renderer that is in the viewport,
    // that is better than any old viewport (but not as good as an interactive
    // one).


    if (currentRenderer === null) {
      currentRenderer = viewportren;
    } // We must have a value - take anything.


    if (currentRenderer == null) {
      currentRenderer = rc[0];
    }

    return currentRenderer;
  }; // only render if we are not animating. If we are animating
  // then renders will happen naturally anyhow and we definitely
  // do not want extra renders as the make the apparent interaction
  // rate slower.


  publicAPI.render = function () {
    if (!publicAPI.isAnimating() && !model.inRender) {
      forceRender();
    }
  }; // create the generic Event methods


  handledEvents.forEach(function (eventName) {
    var lowerFirst = eventName.charAt(0).toLowerCase() + eventName.slice(1);

    publicAPI["".concat(lowerFirst, "Event")] = function (arg) {
      // Check that interactor enabled
      if (!model.enabled) {
        return;
      } // Check that a poked renderer exists


      var renderer = publicAPI.getCurrentRenderer();

      if (!renderer) {
        vtkOnceErrorMacro("\n          Can not forward events without a current renderer on the interactor.\n        ");
        return;
      } // Pass the eventName and the poked renderer


      var callData = _objectSpread({
        type: eventName,
        pokedRenderer: model.currentRenderer,
        firstRenderer: publicAPI.getFirstRenderer()
      }, arg); // Call invoke


      publicAPI["invoke".concat(eventName)](callData);
    };
  }); // we know we are in multitouch now, so start recognizing

  publicAPI.recognizeGesture = function (event, positions) {
    // more than two pointers we ignore
    if (Object.keys(positions).length > 2) {
      return;
    }

    if (!model.startingEventPositions) {
      model.startingEventPositions = {};
    } // store the initial positions


    if (event === 'TouchStart') {
      Object.keys(positions).forEach(function (key) {
        model.startingEventPositions[key] = positions[key];
      }); // we do not know what the gesture is yet

      model.currentGesture = 'Start';
      return;
    } // end the gesture if needed


    if (event === 'TouchEnd') {
      if (model.currentGesture === 'Pinch') {
        publicAPI.render();
        publicAPI.endPinchEvent();
      }

      if (model.currentGesture === 'Rotate') {
        publicAPI.render();
        publicAPI.endRotateEvent();
      }

      if (model.currentGesture === 'Pan') {
        publicAPI.render();
        publicAPI.endPanEvent();
      }

      model.currentGesture = 'Start';
      model.startingEventPositions = {};
      return;
    } // what are the two pointers we are working with


    var count = 0;
    var posVals = [];
    var startVals = [];
    Object.keys(positions).forEach(function (key) {
      posVals[count] = positions[key];
      startVals[count] = model.startingEventPositions[key];
      count++;
    }); // The meat of the algorithm
    // on move events we analyze them to determine what type
    // of movement it is and then deal with it.
    // calculate the distances

    var originalDistance = Math.sqrt((startVals[0].x - startVals[1].x) * (startVals[0].x - startVals[1].x) + (startVals[0].y - startVals[1].y) * (startVals[0].y - startVals[1].y));
    var newDistance = Math.sqrt((posVals[0].x - posVals[1].x) * (posVals[0].x - posVals[1].x) + (posVals[0].y - posVals[1].y) * (posVals[0].y - posVals[1].y)); // calculate rotations

    var originalAngle = Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_2__["y"])(Math.atan2(startVals[1].y - startVals[0].y, startVals[1].x - startVals[0].x));
    var newAngle = Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_2__["y"])(Math.atan2(posVals[1].y - posVals[0].y, posVals[1].x - posVals[0].x)); // angles are cyclic so watch for that, 1 and 359 are only 2 apart :)

    var angleDeviation = newAngle - originalAngle;
    newAngle = newAngle + 180.0 >= 360.0 ? newAngle - 180.0 : newAngle + 180.0;
    originalAngle = originalAngle + 180.0 >= 360.0 ? originalAngle - 180.0 : originalAngle + 180.0;

    if (Math.abs(newAngle - originalAngle) < Math.abs(angleDeviation)) {
      angleDeviation = newAngle - originalAngle;
    } // calculate the translations


    var trans = [];
    trans[0] = (posVals[0].x - startVals[0].x + posVals[1].x - startVals[1].x) / 2.0;
    trans[1] = (posVals[0].y - startVals[0].y + posVals[1].y - startVals[1].y) / 2.0;

    if (event === 'TouchMove') {
      // OK we want to
      // - immediately respond to the user
      // - allow the user to zoom without panning (saves focal point)
      // - allow the user to rotate without panning (saves focal point)
      // do we know what gesture we are doing yet? If not
      // see if we can figure it out
      if (model.currentGesture === 'Start') {
        // pinch is a move to/from the center point
        // rotate is a move along the circumference
        // pan is a move of the center point
        // compute the distance along each of these axes in pixels
        // the first to break thresh wins
        var thresh = 0.01 * Math.sqrt(model.container.clientWidth * model.container.clientWidth + model.container.clientHeight * model.container.clientHeight);

        if (thresh < 15.0) {
          thresh = 15.0;
        }

        var pinchDistance = Math.abs(newDistance - originalDistance);
        var rotateDistance = newDistance * 3.1415926 * Math.abs(angleDeviation) / 360.0;
        var panDistance = Math.sqrt(trans[0] * trans[0] + trans[1] * trans[1]);

        if (pinchDistance > thresh && pinchDistance > rotateDistance && pinchDistance > panDistance) {
          model.currentGesture = 'Pinch';
          var callData = {
            scale: 1.0,
            touches: positions
          };
          publicAPI.startPinchEvent(callData);
        } else if (rotateDistance > thresh && rotateDistance > panDistance) {
          model.currentGesture = 'Rotate';
          var _callData4 = {
            rotation: 0.0,
            touches: positions
          };
          publicAPI.startRotateEvent(_callData4);
        } else if (panDistance > thresh) {
          model.currentGesture = 'Pan';
          var _callData5 = {
            translation: [0, 0],
            touches: positions
          };
          publicAPI.startPanEvent(_callData5);
        }
      } else {
        // if we have found a specific type of movement then
        // handle it
        if (model.currentGesture === 'Rotate') {
          var _callData6 = {
            rotation: angleDeviation,
            touches: positions
          };
          publicAPI.rotateEvent(_callData6);
        }

        if (model.currentGesture === 'Pinch') {
          var _callData7 = {
            scale: newDistance / originalDistance,
            touches: positions
          };
          publicAPI.pinchEvent(_callData7);
        }

        if (model.currentGesture === 'Pan') {
          var _callData8 = {
            translation: trans,
            touches: positions
          };
          publicAPI.panEvent(_callData8);
        }
      }
    }
  };

  publicAPI.handleVisibilityChange = function () {
    model._animationStartTime = Date.now();
    model._animationFrameCount = 0;
  };

  publicAPI.setCurrentRenderer = function (r) {
    model._forcedRenderer = !!r;
    model.currentRenderer = r;
  }; // Stop animating if the renderWindowInteractor is deleted.


  var superDelete = publicAPI.delete;

  publicAPI.delete = function () {
    while (animationRequesters.size) {
      publicAPI.cancelAnimation(animationRequesters.values().next().value);
    }

    if (typeof document.hidden !== 'undefined') {
      document.removeEventListener('visibilitychange', publicAPI.handleVisibilityChange);
    }

    superDelete();
  }; // Use the Page Visibility API to detect when we switch away from or back to
  // this tab, and reset the animationFrameStart. When tabs are not active, browsers
  // will stop calling requestAnimationFrame callbacks.


  if (typeof document.hidden !== 'undefined') {
    document.addEventListener('visibilitychange', publicAPI.handleVisibilityChange, false);
  }
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {
  renderWindow: null,
  interactorStyle: null,
  picker: null,
  pickingManager: null,
  initialized: false,
  enabled: false,
  enableRender: true,
  currentRenderer: null,
  lightFollowCamera: true,
  desiredUpdateRate: 30.0,
  stillUpdateRate: 2.0,
  container: null,
  view: null,
  recognizeGestures: true,
  currentGesture: 'Start',
  animationRequest: null,
  lastFrameTime: 0.1,
  recentAnimationFrameRate: 10.0,
  wheelTimeoutID: 0,
  moveTimeoutID: 0,
  lastGamepadValues: {}
}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Object methods

  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].obj(publicAPI, model); // run animation at least until this time

  model._animationExtendedEnd = 0;
  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].event(publicAPI, model, 'RenderEvent');
  handledEvents.forEach(function (eventName) {
    return _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].event(publicAPI, model, eventName);
  }); // Create get-only macros

  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].get(publicAPI, model, ['initialized', 'container', 'interactorStyle', 'lastFrameTime', 'recentAnimationFrameRate', 'view']); // Create get-set macros

  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].setGet(publicAPI, model, ['lightFollowCamera', 'enabled', 'enableRender', 'recognizeGestures', 'desiredUpdateRate', 'stillUpdateRate', 'picker']); // For more macro methods, see "Sources/macros.js"
  // Object specific methods

  vtkRenderWindowInteractor(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].newInstance(extend, 'vtkRenderWindowInteractor'); // ----------------------------------------------------------------------------

var vtkRenderWindowInteractor$1 = _objectSpread({
  newInstance: newInstance,
  extend: extend,
  handledEvents: handledEvents
}, _RenderWindowInteractor_Constants_js__WEBPACK_IMPORTED_MODULE_3__["default"]);




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Rendering/Core/RenderWindowInteractor/Constants.js":
/*!******************************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Rendering/Core/RenderWindowInteractor/Constants.js ***!
  \******************************************************************************************/
/*! exports provided: Axis, Device, Input, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Axis", function() { return Axis; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Device", function() { return Device; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Input", function() { return Input; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Constants; });
var Device = {
  Unknown: 0,
  LeftController: 1,
  RightController: 2
};
var Input = {
  Unknown: 0,
  Trigger: 1,
  TrackPad: 2,
  Grip: 3,
  Thumbstick: 4,
  A: 5,
  B: 6,
  ApplicationMenu: 7 // Not exposed in WebXR API

};
var Axis = {
  Unknown: 0,
  TouchpadX: 1,
  TouchpadY: 2,
  ThumbstickX: 3,
  ThumbstickY: 4
};
var Constants = {
  Device: Device,
  Input: Input,
  Axis: Axis
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Rendering/Core/Renderer.js":
/*!******************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Rendering/Core/Renderer.js ***!
  \******************************************************************/
/*! exports provided: default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkRenderer$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! gl-matrix */ "../node_modules/gl-matrix/esm/index.js");
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _Camera_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Camera.js */ "../node_modules/@kitware/vtk.js/Rendering/Core/Camera.js");
/* harmony import */ var _Light_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Light.js */ "../node_modules/@kitware/vtk.js/Rendering/Core/Light.js");
/* harmony import */ var _Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../Common/Core/Math/index.js */ "../node_modules/@kitware/vtk.js/Common/Core/Math/index.js");
/* harmony import */ var _Viewport_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Viewport.js */ "../node_modules/@kitware/vtk.js/Rendering/Core/Viewport.js");
/* harmony import */ var _Common_DataModel_BoundingBox_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../Common/DataModel/BoundingBox.js */ "../node_modules/@kitware/vtk.js/Common/DataModel/BoundingBox.js");








var vtkDebugMacro = _macros_js__WEBPACK_IMPORTED_MODULE_1__["vtkDebugMacro"],
    vtkErrorMacro = _macros_js__WEBPACK_IMPORTED_MODULE_1__["vtkErrorMacro"],
    vtkWarningMacro = _macros_js__WEBPACK_IMPORTED_MODULE_1__["vtkWarningMacro"];

function notImplemented(method) {
  return function () {
    return vtkErrorMacro("vtkRenderer::".concat(method, " - NOT IMPLEMENTED"));
  };
} // ----------------------------------------------------------------------------
// vtkRenderer methods
// ----------------------------------------------------------------------------


function vtkRenderer(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkRenderer'); // Events

  var COMPUTE_VISIBLE_PROP_BOUNDS_EVENT = {
    type: 'ComputeVisiblePropBoundsEvent',
    renderer: publicAPI
  };
  var RESET_CAMERA_CLIPPING_RANGE_EVENT = {
    type: 'ResetCameraClippingRangeEvent',
    renderer: publicAPI
  };
  var RESET_CAMERA_EVENT = {
    type: 'ResetCameraEvent',
    renderer: publicAPI
  };

  publicAPI.updateCamera = function () {
    if (!model.activeCamera) {
      vtkDebugMacro('No cameras are on, creating one.'); // the get method will automagically create a camera
      // and reset it since one hasn't been specified yet.

      publicAPI.getActiveCameraAndResetIfCreated();
    } // update the viewing transformation


    model.activeCamera.render(publicAPI);
    return true;
  };

  publicAPI.updateLightsGeometryToFollowCamera = function () {
    // only update the light's geometry if this Renderer is tracking
    // this lights.  That allows one renderer to view the lights that
    // another renderer is setting up.
    var camera = publicAPI.getActiveCameraAndResetIfCreated();
    model.lights.forEach(function (light) {
      if (light.lightTypeIsSceneLight() || light.lightTypeIsCameraLight()) ; else if (light.lightTypeIsHeadLight()) {
        // update position and orientation of light to match camera.
        light.setPositionFrom(camera.getPositionByReference());
        light.setFocalPointFrom(camera.getFocalPointByReference());
        light.modified(camera.getMTime());
      } else {
        vtkErrorMacro('light has unknown light type', light.get());
      }
    });
  };

  publicAPI.updateLightGeometry = function () {
    if (model.lightFollowCamera) {
      // only update the light's geometry if this Renderer is tracking
      // this lights.  That allows one renderer to view the lights that
      // another renderer is setting up.
      return publicAPI.updateLightsGeometryToFollowCamera();
    }

    return true;
  };

  publicAPI.allocateTime = notImplemented('allocateTime');
  publicAPI.updateGeometry = notImplemented('updateGeometry');

  publicAPI.getVTKWindow = function () {
    return model.renderWindow;
  };

  publicAPI.setLayer = function (layer) {
    vtkDebugMacro(publicAPI.getClassName(), publicAPI, 'setting Layer to ', layer);

    if (model.layer !== layer) {
      model.layer = layer;
      publicAPI.modified();
    }

    publicAPI.setPreserveColorBuffer(!!layer);
  };

  publicAPI.setActiveCamera = function (camera) {
    if (model.activeCamera === camera) {
      return false;
    }

    model.activeCamera = camera;
    publicAPI.modified();
    publicAPI.invokeEvent({
      type: 'ActiveCameraEvent',
      camera: camera
    });
    return true;
  };

  publicAPI.makeCamera = function () {
    var camera = _Camera_js__WEBPACK_IMPORTED_MODULE_2__["default"].newInstance();
    publicAPI.invokeEvent({
      type: 'CreateCameraEvent',
      camera: camera
    });
    return camera;
  }; // Replace the set/get macro method


  publicAPI.getActiveCamera = function () {
    if (!model.activeCamera) {
      model.activeCamera = publicAPI.makeCamera();
    }

    return model.activeCamera;
  };

  publicAPI.getActiveCameraAndResetIfCreated = function () {
    if (!model.activeCamera) {
      publicAPI.getActiveCamera();
      publicAPI.resetCamera();
    }

    return model.activeCamera;
  };

  publicAPI.getActors = function () {
    model.actors = [];
    model.props.forEach(function (prop) {
      model.actors = model.actors.concat(prop.getActors());
    });
    return model.actors;
  };

  publicAPI.addActor = publicAPI.addViewProp;

  publicAPI.removeActor = function (actor) {
    model.actors = model.actors.filter(function (a) {
      return a !== actor;
    });
    publicAPI.removeViewProp(actor);
    publicAPI.modified();
  };

  publicAPI.removeAllActors = function () {
    var actors = publicAPI.getActors();
    actors.forEach(function (actor) {
      publicAPI.removeViewProp(actor);
    });
    model.actors = [];
    publicAPI.modified();
  };

  publicAPI.getVolumes = function () {
    model.volumes = [];
    model.props.forEach(function (prop) {
      model.volumes = model.volumes.concat(prop.getVolumes());
    });
    return model.volumes;
  };

  publicAPI.addVolume = publicAPI.addViewProp;

  publicAPI.removeVolume = function (volume) {
    model.volumes = model.volumes.filter(function (v) {
      return v !== volume;
    });
    publicAPI.removeViewProp(volume);
    publicAPI.modified();
  };

  publicAPI.removeAllVolumes = function () {
    var volumes = publicAPI.getVolumes();
    volumes.forEach(function (volume) {
      publicAPI.removeViewProp(volume);
    });
    model.volumes = [];
    publicAPI.modified();
  };

  publicAPI.addLight = function (light) {
    model.lights = [].concat(model.lights, light);
    publicAPI.modified();
  };

  publicAPI.removeLight = function (light) {
    model.lights = model.lights.filter(function (l) {
      return l !== light;
    });
    publicAPI.modified();
  };

  publicAPI.removeAllLights = function () {
    model.lights = [];
    publicAPI.modified();
  };

  publicAPI.setLightCollection = function (lights) {
    model.lights = lights;
    publicAPI.modified();
  };

  publicAPI.makeLight = _Light_js__WEBPACK_IMPORTED_MODULE_3__["default"].newInstance;

  publicAPI.createLight = function () {
    if (!model.automaticLightCreation) {
      return;
    }

    if (model.createdLight) {
      publicAPI.removeLight(model.createdLight);
      model.createdLight.delete();
      model.createdLight = null;
    }

    model.createdLight = publicAPI.makeLight();
    publicAPI.addLight(model.createdLight);
    model.createdLight.setLightTypeToHeadLight(); // set these values just to have a good default should LightFollowCamera
    // be turned off.

    model.createdLight.setPosition(publicAPI.getActiveCamera().getPosition());
    model.createdLight.setFocalPoint(publicAPI.getActiveCamera().getFocalPoint());
  }; // requires the aspect ratio of the viewport as X/Y


  publicAPI.normalizedDisplayToWorld = function (x, y, z, aspect) {
    var vpd = publicAPI.normalizedDisplayToProjection(x, y, z);
    vpd = publicAPI.projectionToView(vpd[0], vpd[1], vpd[2], aspect);
    return publicAPI.viewToWorld(vpd[0], vpd[1], vpd[2]);
  }; // requires the aspect ratio of the viewport as X/Y


  publicAPI.worldToNormalizedDisplay = function (x, y, z, aspect) {
    var vpd = publicAPI.worldToView(x, y, z);
    vpd = publicAPI.viewToProjection(vpd[0], vpd[1], vpd[2], aspect);
    return publicAPI.projectionToNormalizedDisplay(vpd[0], vpd[1], vpd[2]);
  }; // requires the aspect ratio of the viewport as X/Y


  publicAPI.viewToWorld = function (x, y, z) {
    if (model.activeCamera === null) {
      vtkErrorMacro('ViewToWorld: no active camera, cannot compute view to world, returning 0,0,0');
      return [0, 0, 0];
    } // get the view matrix from the active camera


    var matrix = model.activeCamera.getViewMatrix();
    gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat4"].invert(matrix, matrix);
    gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat4"].transpose(matrix, matrix); // Transform point to world coordinates

    var result = new Float64Array([x, y, z]);
    gl_matrix__WEBPACK_IMPORTED_MODULE_0__["vec3"].transformMat4(result, result, matrix);
    return result;
  };

  publicAPI.projectionToView = function (x, y, z, aspect) {
    if (model.activeCamera === null) {
      vtkErrorMacro('ProjectionToView: no active camera, cannot compute projection to view, returning 0,0,0');
      return [0, 0, 0];
    } // get the projection transformation from the active camera


    var matrix = model.activeCamera.getProjectionMatrix(aspect, -1.0, 1.0);
    gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat4"].invert(matrix, matrix);
    gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat4"].transpose(matrix, matrix); // Transform point to world coordinates

    var result = new Float64Array([x, y, z]);
    gl_matrix__WEBPACK_IMPORTED_MODULE_0__["vec3"].transformMat4(result, result, matrix);
    return result;
  }; // Convert world point coordinates to view coordinates.


  publicAPI.worldToView = function (x, y, z) {
    if (model.activeCamera === null) {
      vtkErrorMacro('WorldToView: no active camera, cannot compute view to world, returning 0,0,0');
      return [0, 0, 0];
    } // get the view transformation from the active camera


    var matrix = model.activeCamera.getViewMatrix();
    gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat4"].transpose(matrix, matrix);
    var result = new Float64Array([x, y, z]);
    gl_matrix__WEBPACK_IMPORTED_MODULE_0__["vec3"].transformMat4(result, result, matrix);
    return result;
  }; // Convert world point coordinates to view coordinates.
  // requires the aspect ratio of the viewport as X/Y


  publicAPI.viewToProjection = function (x, y, z, aspect) {
    if (model.activeCamera === null) {
      vtkErrorMacro('ViewToProjection: no active camera, cannot compute view to projection, returning 0,0,0');
      return [0, 0, 0];
    } // get the projeciton transformation from the active camera


    var matrix = model.activeCamera.getProjectionMatrix(aspect, -1.0, 1.0);
    gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat4"].transpose(matrix, matrix);
    var result = new Float64Array([x, y, z]);
    gl_matrix__WEBPACK_IMPORTED_MODULE_0__["vec3"].transformMat4(result, result, matrix);
    return result;
  };

  publicAPI.computeVisiblePropBounds = function () {
    model.allBounds[0] = _Common_DataModel_BoundingBox_js__WEBPACK_IMPORTED_MODULE_6__["default"].INIT_BOUNDS[0];
    model.allBounds[1] = _Common_DataModel_BoundingBox_js__WEBPACK_IMPORTED_MODULE_6__["default"].INIT_BOUNDS[1];
    model.allBounds[2] = _Common_DataModel_BoundingBox_js__WEBPACK_IMPORTED_MODULE_6__["default"].INIT_BOUNDS[2];
    model.allBounds[3] = _Common_DataModel_BoundingBox_js__WEBPACK_IMPORTED_MODULE_6__["default"].INIT_BOUNDS[3];
    model.allBounds[4] = _Common_DataModel_BoundingBox_js__WEBPACK_IMPORTED_MODULE_6__["default"].INIT_BOUNDS[4];
    model.allBounds[5] = _Common_DataModel_BoundingBox_js__WEBPACK_IMPORTED_MODULE_6__["default"].INIT_BOUNDS[5];
    var nothingVisible = true;
    publicAPI.invokeEvent(COMPUTE_VISIBLE_PROP_BOUNDS_EVENT); // loop through all props

    for (var index = 0; index < model.props.length; ++index) {
      var prop = model.props[index];

      if (prop.getVisibility() && prop.getUseBounds()) {
        var bounds = prop.getBounds();

        if (bounds && Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_4__["O"])(bounds)) {
          nothingVisible = false;

          if (bounds[0] < model.allBounds[0]) {
            model.allBounds[0] = bounds[0];
          }

          if (bounds[1] > model.allBounds[1]) {
            model.allBounds[1] = bounds[1];
          }

          if (bounds[2] < model.allBounds[2]) {
            model.allBounds[2] = bounds[2];
          }

          if (bounds[3] > model.allBounds[3]) {
            model.allBounds[3] = bounds[3];
          }

          if (bounds[4] < model.allBounds[4]) {
            model.allBounds[4] = bounds[4];
          }

          if (bounds[5] > model.allBounds[5]) {
            model.allBounds[5] = bounds[5];
          }
        }
      }
    }

    if (nothingVisible) {
      Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_4__["u"])(model.allBounds);
      vtkDebugMacro("Can't compute bounds, no 3D props are visible");
    }

    return model.allBounds;
  };

  publicAPI.resetCamera = function () {
    var bounds = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
    var boundsToUse = bounds || publicAPI.computeVisiblePropBounds();
    var center = [0, 0, 0];

    if (!Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_4__["O"])(boundsToUse)) {
      vtkDebugMacro('Cannot reset camera!');
      return false;
    }

    var vn = null;

    if (publicAPI.getActiveCamera()) {
      vn = model.activeCamera.getViewPlaneNormal();
    } else {
      vtkErrorMacro('Trying to reset non-existent camera');
      return false;
    } // Reset the perspective zoom factors, otherwise subsequent zooms will cause
    // the view angle to become very small and cause bad depth sorting.


    model.activeCamera.setViewAngle(30.0);
    center[0] = (boundsToUse[0] + boundsToUse[1]) / 2.0;
    center[1] = (boundsToUse[2] + boundsToUse[3]) / 2.0;
    center[2] = (boundsToUse[4] + boundsToUse[5]) / 2.0;
    var w1 = boundsToUse[1] - boundsToUse[0];
    var w2 = boundsToUse[3] - boundsToUse[2];
    var w3 = boundsToUse[5] - boundsToUse[4];
    w1 *= w1;
    w2 *= w2;
    w3 *= w3;
    var radius = w1 + w2 + w3; // If we have just a single point, pick a radius of 1.0

    radius = radius === 0 ? 1.0 : radius; // compute the radius of the enclosing sphere

    radius = Math.sqrt(radius) * 0.5; // default so that the bounding sphere fits within the view fustrum
    // compute the distance from the intersection of the view frustum with the
    // bounding sphere. Basically in 2D draw a circle representing the bounding
    // sphere in 2D then draw a horizontal line going out from the center of
    // the circle. That is the camera view. Then draw a line from the camera
    // position to the point where it intersects the circle. (it will be tangent
    // to the circle at this point, this is important, only go to the tangent
    // point, do not draw all the way to the view plane). Then draw the radius
    // from the tangent point to the center of the circle. You will note that
    // this forms a right triangle with one side being the radius, another being
    // the target distance for the camera, then just find the target dist using
    // a sin.

    var angle = Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_4__["r"])(model.activeCamera.getViewAngle());
    var parallelScale = radius;
    var distance = radius / Math.sin(angle * 0.5); // check view-up vector against view plane normal

    var vup = model.activeCamera.getViewUp();

    if (Math.abs(Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_4__["d"])(vup, vn)) > 0.999) {
      vtkWarningMacro('Resetting view-up since view plane normal is parallel');
      model.activeCamera.setViewUp(-vup[2], vup[0], vup[1]);
    } // update the camera


    model.activeCamera.setFocalPoint(center[0], center[1], center[2]);
    model.activeCamera.setPosition(center[0] + distance * vn[0], center[1] + distance * vn[1], center[2] + distance * vn[2]);
    publicAPI.resetCameraClippingRange(boundsToUse); // setup default parallel scale

    model.activeCamera.setParallelScale(parallelScale); // update reasonable world to physical values

    model.activeCamera.setPhysicalScale(radius);
    model.activeCamera.setPhysicalTranslation(-center[0], -center[1], -center[2]); // Here to let parallel/distributed compositing intercept
    // and do the right thing.

    publicAPI.invokeEvent(RESET_CAMERA_EVENT);
    return true;
  };

  publicAPI.resetCameraClippingRange = function () {
    var bounds = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
    var boundsToUse = bounds || publicAPI.computeVisiblePropBounds();

    if (!Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_4__["O"])(boundsToUse)) {
      vtkDebugMacro('Cannot reset camera clipping range!');
      return false;
    } // Make sure we have an active camera


    publicAPI.getActiveCameraAndResetIfCreated();

    if (!model.activeCamera) {
      vtkErrorMacro('Trying to reset clipping range of non-existent camera');
      return false;
    } // Get the exact range for the bounds


    var range = model.activeCamera.computeClippingRange(boundsToUse); // do not let far - near be less than 0.1 of the window height
    // this is for cases such as 2D images which may have zero range

    var minGap = 0.0;

    if (model.activeCamera.getParallelProjection()) {
      minGap = 0.2 * model.activeCamera.getParallelScale();
    } else {
      var angle = Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_4__["r"])(model.activeCamera.getViewAngle());
      minGap = 0.2 * Math.tan(angle / 2.0) * range[1];
    }

    if (range[1] - range[0] < minGap) {
      minGap = minGap - range[1] + range[0];
      range[1] += minGap / 2.0;
      range[0] -= minGap / 2.0;
    } // Do not let the range behind the camera throw off the calculation.


    if (range[0] < 0.0) {
      range[0] = 0.0;
    } // Give ourselves a little breathing room


    range[0] = 0.99 * range[0] - (range[1] - range[0]) * model.clippingRangeExpansion;
    range[1] = 1.01 * range[1] + (range[1] - range[0]) * model.clippingRangeExpansion; // Make sure near is not bigger than far

    range[0] = range[0] >= range[1] ? 0.01 * range[1] : range[0]; // Make sure near is at least some fraction of far - this prevents near
    // from being behind the camera or too close in front. How close is too
    // close depends on the resolution of the depth buffer

    if (!model.nearClippingPlaneTolerance) {
      model.nearClippingPlaneTolerance = 0.01;
    } // make sure the front clipping range is not too far from the far clippnig
    // range, this is to make sure that the zbuffer resolution is effectively
    // used


    if (range[0] < model.nearClippingPlaneTolerance * range[1]) {
      range[0] = model.nearClippingPlaneTolerance * range[1];
    }

    model.activeCamera.setClippingRange(range[0], range[1]); // Here to let parallel/distributed compositing intercept
    // and do the right thing.

    publicAPI.invokeEvent(RESET_CAMERA_CLIPPING_RANGE_EVENT);
    return false;
  };

  publicAPI.setRenderWindow = function (renderWindow) {
    if (renderWindow !== model.renderWindow) {
      model.vtkWindow = renderWindow;
      model.renderWindow = renderWindow;
    }
  };

  publicAPI.visibleActorCount = function () {
    return model.props.filter(function (prop) {
      return prop.getVisibility();
    }).length;
  };

  publicAPI.visibleVolumeCount = publicAPI.visibleActorCount;

  publicAPI.getMTime = function () {
    var m1 = model.mtime;
    var m2 = model.activeCamera ? model.activeCamera.getMTime() : 0;

    if (m2 > m1) {
      m1 = m2;
    }

    var m3 = model.createdLight ? model.createdLight.getMTime() : 0;

    if (m3 > m1) {
      m1 = m3;
    }

    return m1;
  };

  publicAPI.getTransparent = function () {
    return !!model.preserveColorBuffer;
  };

  publicAPI.isActiveCameraCreated = function () {
    return !!model.activeCamera;
  };
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {
  pickedProp: null,
  activeCamera: null,
  allBounds: [],
  ambient: [1, 1, 1],
  allocatedRenderTime: 100,
  timeFactor: 1,
  createdLight: null,
  automaticLightCreation: true,
  twoSidedLighting: true,
  lastRenderTimeInSeconds: -1,
  renderWindow: null,
  lights: [],
  actors: [],
  volumes: [],
  lightFollowCamera: true,
  numberOfPropsRendered: 0,
  propArray: null,
  pathArray: null,
  layer: 0,
  preserveColorBuffer: false,
  preserveDepthBuffer: false,
  computeVisiblePropBounds: Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_4__["M"])(),
  interactive: true,
  nearClippingPlaneTolerance: 0,
  clippingRangeExpansion: 0.05,
  erase: true,
  draw: true,
  useShadows: false,
  useDepthPeeling: false,
  occlusionRatio: 0,
  maximumNumberOfPeels: 4,
  selector: null,
  delegate: null,
  texturedBackground: false,
  backgroundTexture: null,
  pass: 0
}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance

  _Viewport_js__WEBPACK_IMPORTED_MODULE_5__["default"].extend(publicAPI, model, initialValues); // make sure background has 4 entries. Default to opaque black

  if (!model.background) model.background = [0, 0, 0, 1];

  while (model.background.length < 3) {
    model.background.push(0);
  }

  if (model.background.length === 3) model.background.push(1); // Build VTK API

  Object(_macros_js__WEBPACK_IMPORTED_MODULE_1__["get"])(publicAPI, model, ['renderWindow', 'allocatedRenderTime', 'timeFactor', 'lastRenderTimeInSeconds', 'numberOfPropsRendered', 'lastRenderingUsedDepthPeeling', 'selector']);
  Object(_macros_js__WEBPACK_IMPORTED_MODULE_1__["setGet"])(publicAPI, model, ['twoSidedLighting', 'lightFollowCamera', 'automaticLightCreation', 'erase', 'draw', 'nearClippingPlaneTolerance', 'clippingRangeExpansion', 'backingStore', 'interactive', 'layer', 'preserveColorBuffer', 'preserveDepthBuffer', 'useDepthPeeling', 'occlusionRatio', 'maximumNumberOfPeels', 'delegate', 'backgroundTexture', 'texturedBackground', 'useShadows', 'pass']);
  Object(_macros_js__WEBPACK_IMPORTED_MODULE_1__["getArray"])(publicAPI, model, ['actors', 'volumes', 'lights']);
  Object(_macros_js__WEBPACK_IMPORTED_MODULE_1__["setGetArray"])(publicAPI, model, ['background'], 4, 1.0); // Object methods

  vtkRenderer(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = Object(_macros_js__WEBPACK_IMPORTED_MODULE_1__["newInstance"])(extend, 'vtkRenderer'); // ----------------------------------------------------------------------------

var vtkRenderer$1 = {
  newInstance: newInstance,
  extend: extend
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Rendering/Core/ScalarBarActor.js":
/*!************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Rendering/Core/ScalarBarActor.js ***!
  \************************************************************************/
/*! exports provided: default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkScalarBarActor$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "../node_modules/@babel/runtime/helpers/toConsumableArray.js");
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "../node_modules/@babel/runtime/helpers/defineProperty.js");
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! gl-matrix */ "../node_modules/gl-matrix/esm/index.js");
/* harmony import */ var d3_scale__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! d3-scale */ "../node_modules/d3-scale/src/index.js");
/* harmony import */ var _Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../Common/Core/Math/index.js */ "../node_modules/@kitware/vtk.js/Common/Core/Math/index.js");
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _Actor_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Actor.js */ "../node_modules/@kitware/vtk.js/Rendering/Core/Actor.js");
/* harmony import */ var _Common_Core_DataArray_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../Common/Core/DataArray.js */ "../node_modules/@kitware/vtk.js/Common/Core/DataArray.js");
/* harmony import */ var _Common_Core_ScalarsToColors_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../Common/Core/ScalarsToColors.js */ "../node_modules/@kitware/vtk.js/Common/Core/ScalarsToColors.js");
/* harmony import */ var _Mapper_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./Mapper.js */ "../node_modules/@kitware/vtk.js/Rendering/Core/Mapper.js");
/* harmony import */ var _Common_DataModel_PolyData_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../Common/DataModel/PolyData.js */ "../node_modules/@kitware/vtk.js/Common/DataModel/PolyData.js");
/* harmony import */ var _Texture_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./Texture.js */ "../node_modules/@kitware/vtk.js/Rendering/Core/Texture.js");













function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1___default()(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var VectorMode = _Common_Core_ScalarsToColors_js__WEBPACK_IMPORTED_MODULE_8__["default"].VectorMode; // ----------------------------------------------------------------------------
// vtkScalarBarActor
//
// Note log scales are currently not supported
//
// Developer note: This class is broken into the main class and a helper
// class. The main class holds view independent properties (those properties
// that do not change as the view's resolution/aspect ratio change). The
// helper class is instantiated one per view and holds properties that can
// depend on view specific values such as resolution. The helper class code
// could have been left to the View specific implementation (such as
// vtkWebGPUScalarBarActor) but is instead placed here to it can be shared by
// multiple rendering backends.
//
// ----------------------------------------------------------------------------
// some shared temp variables to reduce heap allocs

var ptv3 = new Float64Array(3);
var pt2v3 = new Float64Array(3);
var tmpv3 = new Float64Array(3);
var tmp2v3 = new Float64Array(3);
var xDir = new Float64Array(3);
var yDir = new Float64Array(3);
var invmat = new Float64Array(16);

function applyTextStyle(ctx, style) {
  ctx.strokeStyle = style.strokeColor;
  ctx.lineWidth = style.strokeSize;
  ctx.fillStyle = style.fontColor;
  ctx.font = "".concat(style.fontStyle, " ").concat(style.fontSize, "px ").concat(style.fontFamily);
} // ----------------------------------------------------------------------------
// Default autoLayout function
// ----------------------------------------------------------------------------
// compute good values to use based on window size etc a bunch of heuristics
// here with hand tuned constants These values worked for me but really this
// method could be redically changed. The basic gist is
// 1) compute a resonable font size
// 2) render the text atlas using those font sizes
// 3) pick horizontal or vertical bsed on window size
// 4) based on the size of the title and tick labels rendered
//    compute the box size and position such that
//    the text will all fit nicely and the bar will be a resonable size
// 5) compute the bar segments based on the above settings
//
// Note that this function can and should read values from the
// ScalarBarActor but should only write values to the view dependent helper
// instance that is provided as those values are the ones that will be used
// for rendering.
//


function defaultAutoLayout(publicAPI, model) {
  return function (helper) {
    // we don't do a linear scale, the proportions for
    // a 700 pixel window differ from a 1400
    var lastSize = helper.getLastSize();
    var xAxisAdjust = Math.pow(lastSize[0] / 700, 0.8);
    var yAxisAdjust = Math.pow(lastSize[1] / 700, 0.8);
    var minAdjust = Math.min(xAxisAdjust, yAxisAdjust);
    var axisTextStyle = helper.getAxisTextStyle();
    var tickTextStyle = helper.getTickTextStyle();
    Object.assign(axisTextStyle, model.axisTextStyle);
    Object.assign(tickTextStyle, model.tickTextStyle); // compute a reasonable font size first

    axisTextStyle.fontSize = Math.max(24 * minAdjust, 12);

    if (helper.getLastAspectRatio() > 1.0) {
      tickTextStyle.fontSize = Math.max(20 * minAdjust, 10);
    } else {
      tickTextStyle.fontSize = Math.max(16 * minAdjust, 10);
    } // rebuild the text atlas


    var textSizes = helper.updateTextureAtlas(); // now compute the boxSize and pixel offsets, different algorithm
    // for horizonal versus vertical

    helper.setTopTitle(false);
    var boxSize = helper.getBoxSizeByReference(); // if vertical

    if (helper.getLastAspectRatio() > 1.0) {
      helper.setTickLabelPixelOffset(0.4 * tickTextStyle.fontSize);
      var tickWidth = 2.0 * (textSizes.tickWidth + helper.getTickLabelPixelOffset()) / lastSize[0];
      helper.setAxisTitlePixelOffset(0.8 * axisTextStyle.fontSize); // width required if the title is vertical

      var titleWidth = 2.0 * (textSizes.titleHeight + helper.getAxisTitlePixelOffset()) / lastSize[0]; // if the title will fit within the width of the bar then that looks
      // nicer to put it at the top (helper.topTitle), otherwise rotate it
      // and place it sideways

      if (tickWidth + 0.4 * titleWidth > 2.0 * textSizes.titleWidth / lastSize[0]) {
        helper.setTopTitle(true);
        boxSize[0] = tickWidth + 0.4 * titleWidth;
        helper.setBoxPosition([0.98 - boxSize[0], -0.92]);
      } else {
        boxSize[0] = tickWidth + 1.4 * titleWidth;
        helper.setBoxPosition([0.99 - boxSize[0], -0.92]);
      }

      boxSize[1] = Math.max(1.2, Math.min(1.84 / yAxisAdjust, 1.84));
    } else {
      // horizontal
      helper.setAxisTitlePixelOffset(2.0 * tickTextStyle.fontSize);
      helper.setTickLabelPixelOffset(0.5 * tickTextStyle.fontSize);
      var tickHeight = 2.0 * (textSizes.tickHeight + helper.getTickLabelPixelOffset()) / lastSize[1];
      var titleHeight = 2.0 * (textSizes.titleHeight + helper.getAxisTitlePixelOffset()) / lastSize[1];

      var _tickWidth = 2.0 * textSizes.tickWidth / lastSize[0];

      boxSize[0] = Math.min(1.9, Math.max(1.4, 1.4 * _tickWidth * (helper.getTicks().length + 3)));
      boxSize[1] = tickHeight + titleHeight;
      helper.setBoxPosition([-0.5 * boxSize[0], -0.97]);
    } // recomute bar segments based on positioning


    helper.recomputeBarSegments(textSizes);
  };
} // many properties of this actor depend on the API specific view The main
// dependency being the resolution as that drives what font sizes to use.
// Bacause of this we need to do some of the calculations in a API specific
// subclass. But... we don't want a lot of duplicated code between WebGL and
// WebGPU for example so we have this helper class, that is designed to be
// fairly API independent so that API specific views can call this to do
// most of the work.


function vtkScalarBarActorHelper(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkScalarBarActorHelper');

  publicAPI.setRenderable = function (renderable) {
    if (model.renderable === renderable) {
      return;
    }

    model.renderable = renderable;
    model.barActor.setProperty(renderable.getProperty());
    model.barActor.setParentProp(renderable);
    model.tmActor.setProperty(renderable.getProperty());
    model.tmActor.setParentProp(renderable);
    model.axisTextStyle = _objectSpread({}, renderable.getAxisTextStyle());
    model.tickTextStyle = _objectSpread({}, renderable.getTickTextStyle());
    publicAPI.modified();
  };

  publicAPI.updateAPISpecificData = function (size, camera, renderWindow) {
    // has the size changed?
    if (model.lastSize[0] !== size[0] || model.lastSize[1] !== size[1]) {
      model.lastSize[0] = size[0];
      model.lastSize[1] = size[1];
      model.lastAspectRatio = size[0] / size[1];
      model.forceUpdate = true;
    }

    var scalarsToColors = model.renderable.getScalarsToColors();

    if (!scalarsToColors || !model.renderable.getVisibility()) {
      return;
    } // make sure the lut is assigned to our mapper


    model.barMapper.setLookupTable(scalarsToColors); // camera should be the same for all views

    model.camera = camera;
    model.renderWindow = renderWindow; // did something significant change? If so rebuild a lot of things

    if (model.forceUpdate || Math.max(scalarsToColors.getMTime(), publicAPI.getMTime()) > model.lastRebuildTime.getMTime()) {
      var range = scalarsToColors.getMappingRange();
      model.lastTickBounds = _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(range);
      model.barMapper.setScalarRange(model.lastTickBounds); // compute tick marks for axes (update for log scale)

      var scale = d3_scale__WEBPACK_IMPORTED_MODULE_3__["scaleLinear"]().domain([model.lastTickBounds[0], model.lastTickBounds[1]]);
      model.ticks = scale.ticks(5);
      var format = scale.tickFormat(5);
      model.tickstrings = model.ticks.map(format);

      if (model.renderable.getAutomated()) {
        model.renderable.getAutoLayout()(publicAPI);
      } else {
        // copy values from renderable
        model.axisTextStyle = _objectSpread({}, model.renderable.getAxisTextStyle());
        model.tickTextStyle = _objectSpread({}, model.renderable.getTickTextStyle());
        model.barPosition = _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(model.renderable.getBarPosition());
        model.barSize = _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(model.renderable.getBarSize());
        model.boxPosition = _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(model.renderable.getBoxPosition());
        model.boxSize = _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(model.renderable.getBoxSize());
        model.axisTitlePixelOffset = model.renderable.getAxisTitlePixelOffset();
        model.tickLabelPixelOffset = model.renderable.getTickLabelPixelOffset(); // rebuild the texture only when force or changed bounds, face
        // visibility changes do to change the atlas

        var textSizes = publicAPI.updateTextureAtlas(); // recompute bar segments based on positioning

        publicAPI.recomputeBarSegments(textSizes);
      }

      model.forceViewUpdate = true;
      model.lastRebuildTime.modified();
      model.forceUpdate = false;
    } // compute bounds for label quads whenever the camera changes or forced
    // the polydata mapper could be modified to accept NDC coords then this
    // would be called far less often


    if (model.forceViewUpdate || model.camera.getMTime() > model.lastRedrawTime.getMTime()) {
      publicAPI.updatePolyDataForLabels();
      publicAPI.updatePolyDataForBarSegments();
      model.lastRedrawTime.modified();
      model.forceViewUpdate = false;
    }
  }; // create the texture map atlas that contains the rendering of
  // all the text strings. Only needs to be called when the text strings
  // have changed (labels and ticks)


  publicAPI.updateTextureAtlas = function () {
    // set the text properties
    model.tmContext.textBaseline = 'bottom';
    model.tmContext.textAlign = 'left'; // return some factors about the text atlas

    var results = {}; // first the axislabel

    var newTmAtlas = new Map();
    var maxWidth = 0;
    var totalHeight = 1; // start one pixel in so we have a border

    applyTextStyle(model.tmContext, model.axisTextStyle);
    var metrics = model.tmContext.measureText(model.renderable.getAxisLabel());
    var entry = {
      height: metrics.actualBoundingBoxAscent + 2,
      startingHeight: totalHeight,
      width: metrics.width + 2,
      textStyle: model.axisTextStyle
    };
    newTmAtlas.set(model.renderable.getAxisLabel(), entry);
    totalHeight += entry.height;
    maxWidth = entry.width;
    results.titleWidth = entry.width;
    results.titleHeight = entry.height; // and the ticks, NaN Below and Above

    results.tickWidth = 0;
    results.tickHeight = 0;
    applyTextStyle(model.tmContext, model.tickTextStyle);
    var strings = [].concat(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(model.tickstrings), ['NaN', 'Below', 'Above']);

    for (var t = 0; t < strings.length; t++) {
      if (!newTmAtlas.has(strings[t])) {
        metrics = model.tmContext.measureText(strings[t]);
        entry = {
          height: metrics.actualBoundingBoxAscent + 2,
          startingHeight: totalHeight,
          width: metrics.width + 2,
          textStyle: model.tickTextStyle
        };
        newTmAtlas.set(strings[t], entry);
        totalHeight += entry.height;

        if (maxWidth < entry.width) {
          maxWidth = entry.width;
        }

        if (results.tickWidth < entry.width) {
          results.tickWidth = entry.width;
        }

        if (results.tickHeight < entry.height) {
          results.tickHeight = entry.height;
        }
      }
    } // always use power of two to avoid interpolation
    // in cases where PO2 is required


    maxWidth = Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_4__["L"])(maxWidth);
    totalHeight = Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_4__["L"])(totalHeight); // set the tcoord values

    newTmAtlas.forEach(function (value) {
      value.tcoords = [0.0, (totalHeight - value.startingHeight - value.height) / totalHeight, value.width / maxWidth, (totalHeight - value.startingHeight - value.height) / totalHeight, value.width / maxWidth, (totalHeight - value.startingHeight) / totalHeight, 0.0, (totalHeight - value.startingHeight) / totalHeight];
    }); // make sure we have power of two dimensions

    model.tmCanvas.width = maxWidth;
    model.tmCanvas.height = totalHeight;
    model.tmContext.textBaseline = 'bottom';
    model.tmContext.textAlign = 'left';
    model.tmContext.clearRect(0, 0, maxWidth, totalHeight); // draw the text onto the texture

    newTmAtlas.forEach(function (value, key) {
      applyTextStyle(model.tmContext, value.textStyle);
      model.tmContext.fillText(key, 1, value.startingHeight + value.height - 1);
    });
    model.tmTexture.setCanvas(model.tmCanvas); // mark as modified since the canvas typically doesn't change

    model.tmTexture.modified();
    model._tmAtlas = newTmAtlas;
    return results;
  };

  publicAPI.computeBarSize = function (textSizes) {
    // compute orientation
    model.vertical = model.boxSize[1] > model.boxSize[0];
    var tickHeight = 2.0 * textSizes.tickHeight / model.lastSize[1];
    var segSize = [1, 1]; // horizontal and vertical have different astetics so adjust based on
    // orientation

    if (model.vertical) {
      var tickWidth = 2.0 * (textSizes.tickWidth + model.tickLabelPixelOffset) / model.lastSize[0];

      if (model.topTitle) {
        var titleHeight = 2.0 * (textSizes.titleHeight + model.axisTitlePixelOffset) / model.lastSize[1];
        model.barSize[0] = model.boxSize[0] - tickWidth;
        model.barSize[1] = model.boxSize[1] - titleHeight;
      } else {
        // rotated title so width is based off height
        var titleWidth = 2.0 * (textSizes.titleHeight + model.axisTitlePixelOffset) / model.lastSize[0];
        model.barSize[0] = model.boxSize[0] - titleWidth - tickWidth;
        model.barSize[1] = model.boxSize[1];
      }

      model.barPosition[0] = model.boxPosition[0] + tickWidth;
      model.barPosition[1] = model.boxPosition[1];
      segSize[1] = tickHeight;
    } else {
      var _tickWidth2 = (2.0 * textSizes.tickWidth - 8) / model.lastSize[0];

      var _titleHeight = 2.0 * (textSizes.titleHeight + model.axisTitlePixelOffset) / model.lastSize[1];

      model.barSize[0] = model.boxSize[0];
      model.barPosition[0] = model.boxPosition[0];
      model.barSize[1] = model.boxSize[1] - _titleHeight - tickHeight;
      model.barPosition[1] = model.boxPosition[1];
      segSize[0] = _tickWidth2;
    }

    return segSize;
  }; // based on all the settins compute a barSegments array
  // containing the segments opf the scalar bar
  // each segment contains
  //   corners[4][2]
  //   title - e.g. NaN, Above, ticks
  //   scalars - the normalized scalars values to use for that segment
  //
  // Note that the bar consumes the space in the box that remains after
  // leaving room for the text labels


  publicAPI.recomputeBarSegments = function (textSizes) {
    var _model$renderable$get, _model$renderable$get2, _model$renderable$get3, _model$renderable$get4;

    // first compute the barSize/Position
    var segSize = publicAPI.computeBarSize(textSizes);
    model.barSegments = [];
    var startPos = [0.0, 0.0]; // horizontal and vertical have different astetics so adjust based on
    // orientation

    var barAxis = model.vertical ? 1 : 0;
    var segSpace = model.vertical ? 0.01 : 0.02;

    function pushSeg(title, scalars) {
      model.barSegments.push({
        corners: [[].concat(startPos), [startPos[0] + segSize[0], startPos[1]], [startPos[0] + segSize[0], startPos[1] + segSize[1]], [startPos[0], startPos[1] + segSize[1]]],
        scalars: scalars,
        title: title
      });
      startPos[barAxis] += segSize[barAxis] + segSpace;
    }

    if (model.renderable.getDrawNanAnnotation() && model.renderable.getScalarsToColors().getNanColor()) {
      pushSeg('NaN', [NaN, NaN, NaN, NaN]);
    }

    if (model.renderable.getDrawBelowRangeSwatch() && (_model$renderable$get = (_model$renderable$get2 = model.renderable.getScalarsToColors()).getUseBelowRangeColor) !== null && _model$renderable$get !== void 0 && _model$renderable$get.call(_model$renderable$get2)) {
      pushSeg('Below', [-0.1, -0.1, -0.1, -0.1]);
    }

    var haveAbove = (_model$renderable$get3 = (_model$renderable$get4 = model.renderable.getScalarsToColors()).getUseAboveRangeColor) === null || _model$renderable$get3 === void 0 ? void 0 : _model$renderable$get3.call(_model$renderable$get4); // extra space around the ticks section

    startPos[barAxis] += segSpace;
    var oldSegSize = segSize[barAxis];
    segSize[barAxis] = haveAbove ? 1.0 - 2.0 * segSpace - segSize[barAxis] - startPos[barAxis] : 1.0 - segSpace - startPos[barAxis];
    pushSeg('ticks', model.vertical ? [0, 0, 0.995, 0.995] : [0, 0.995, 0.995, 0]);

    if (model.renderable.getDrawAboveRangeSwatch() && haveAbove) {
      segSize[barAxis] = oldSegSize;
      startPos[barAxis] += segSpace;
      pushSeg('Above', [1.1, 1.1, 1.1, 1.1]);
    }
  }; // called by updatePolyDataForLabels
  // modifies class constants ptv3, tmpv3


  publicAPI.createPolyDataForOneLabel = function (text, pos, xdir, ydir, dir, offset, results) {
    var value = model._tmAtlas.get(text);

    if (!value) {
      return;
    } // have to find the four corners of the texture polygon for this label
    // convert anchor point to View Coords


    var ptIdx = results.ptIdx;
    var cellIdx = results.cellIdx;
    ptv3[0] = pos[0];
    ptv3[1] = pos[1];
    ptv3[2] = pos[2]; // horizontal left, right, or middle alignment based on dir[0]

    if (dir[0] < -0.5) {
      gl_matrix__WEBPACK_IMPORTED_MODULE_2__["vec3"].scale(tmpv3, xdir, dir[0] * offset - value.width);
    } else if (dir[0] > 0.5) {
      gl_matrix__WEBPACK_IMPORTED_MODULE_2__["vec3"].scale(tmpv3, xdir, dir[0] * offset);
    } else {
      gl_matrix__WEBPACK_IMPORTED_MODULE_2__["vec3"].scale(tmpv3, xdir, dir[0] * offset - value.width / 2.0);
    }

    gl_matrix__WEBPACK_IMPORTED_MODULE_2__["vec3"].add(ptv3, ptv3, tmpv3);
    gl_matrix__WEBPACK_IMPORTED_MODULE_2__["vec3"].scale(tmpv3, ydir, dir[1] * offset - value.height / 2.0);
    gl_matrix__WEBPACK_IMPORTED_MODULE_2__["vec3"].add(ptv3, ptv3, tmpv3);
    results.points[ptIdx * 3] = ptv3[0];
    results.points[ptIdx * 3 + 1] = ptv3[1];
    results.points[ptIdx * 3 + 2] = ptv3[2];
    results.tcoords[ptIdx * 2] = value.tcoords[0];
    results.tcoords[ptIdx * 2 + 1] = value.tcoords[1];
    ptIdx++;
    gl_matrix__WEBPACK_IMPORTED_MODULE_2__["vec3"].scale(tmpv3, xdir, value.width);
    gl_matrix__WEBPACK_IMPORTED_MODULE_2__["vec3"].add(ptv3, ptv3, tmpv3);
    results.points[ptIdx * 3] = ptv3[0];
    results.points[ptIdx * 3 + 1] = ptv3[1];
    results.points[ptIdx * 3 + 2] = ptv3[2];
    results.tcoords[ptIdx * 2] = value.tcoords[2];
    results.tcoords[ptIdx * 2 + 1] = value.tcoords[3];
    ptIdx++;
    gl_matrix__WEBPACK_IMPORTED_MODULE_2__["vec3"].scale(tmpv3, ydir, value.height);
    gl_matrix__WEBPACK_IMPORTED_MODULE_2__["vec3"].add(ptv3, ptv3, tmpv3);
    results.points[ptIdx * 3] = ptv3[0];
    results.points[ptIdx * 3 + 1] = ptv3[1];
    results.points[ptIdx * 3 + 2] = ptv3[2];
    results.tcoords[ptIdx * 2] = value.tcoords[4];
    results.tcoords[ptIdx * 2 + 1] = value.tcoords[5];
    ptIdx++;
    gl_matrix__WEBPACK_IMPORTED_MODULE_2__["vec3"].scale(tmpv3, xdir, value.width);
    gl_matrix__WEBPACK_IMPORTED_MODULE_2__["vec3"].subtract(ptv3, ptv3, tmpv3);
    results.points[ptIdx * 3] = ptv3[0];
    results.points[ptIdx * 3 + 1] = ptv3[1];
    results.points[ptIdx * 3 + 2] = ptv3[2];
    results.tcoords[ptIdx * 2] = value.tcoords[6];
    results.tcoords[ptIdx * 2 + 1] = value.tcoords[7];
    ptIdx++; // add the two triangles to represent the quad

    results.polys[cellIdx * 4] = 3;
    results.polys[cellIdx * 4 + 1] = ptIdx - 4;
    results.polys[cellIdx * 4 + 2] = ptIdx - 3;
    results.polys[cellIdx * 4 + 3] = ptIdx - 2;
    cellIdx++;
    results.polys[cellIdx * 4] = 3;
    results.polys[cellIdx * 4 + 1] = ptIdx - 4;
    results.polys[cellIdx * 4 + 2] = ptIdx - 2;
    results.polys[cellIdx * 4 + 3] = ptIdx - 1;
    results.ptIdx += 4;
    results.cellIdx += 2;
  }; // update the polydata associated with drawing the text labels
  // specifically the quads used for each label and their associated tcoords
  // etc. This changes every time the camera viewpoint changes


  publicAPI.updatePolyDataForLabels = function () {
    var cmat = model.camera.getCompositeProjectionMatrix(model.lastAspectRatio, -1, 1);
    gl_matrix__WEBPACK_IMPORTED_MODULE_2__["mat4"].transpose(cmat, cmat);
    gl_matrix__WEBPACK_IMPORTED_MODULE_2__["mat4"].invert(invmat, cmat);
    var size = model.lastSize; // compute pixel to distance factors

    tmpv3[0] = 0.0;
    tmpv3[1] = 0.0;
    tmpv3[2] = -0.99; // near plane

    gl_matrix__WEBPACK_IMPORTED_MODULE_2__["vec3"].transformMat4(ptv3, tmpv3, invmat); // moving 0.1 in NDC

    tmpv3[0] += 0.1;
    gl_matrix__WEBPACK_IMPORTED_MODULE_2__["vec3"].transformMat4(pt2v3, tmpv3, invmat); // results in WC move of

    gl_matrix__WEBPACK_IMPORTED_MODULE_2__["vec3"].subtract(xDir, pt2v3, ptv3);
    tmpv3[0] -= 0.1;
    tmpv3[1] += 0.1;
    gl_matrix__WEBPACK_IMPORTED_MODULE_2__["vec3"].transformMat4(pt2v3, tmpv3, invmat); // results in WC move of

    gl_matrix__WEBPACK_IMPORTED_MODULE_2__["vec3"].subtract(yDir, pt2v3, ptv3);

    for (var i = 0; i < 3; i++) {
      xDir[i] /= 0.5 * 0.1 * size[0];
      yDir[i] /= 0.5 * 0.1 * size[1];
    } // update the polydata


    var numLabels = model.tickstrings.length + model.barSegments.length;
    var numPts = numLabels * 4;
    var numTris = numLabels * 2;
    var points = new Float64Array(numPts * 3);
    var polys = new Uint16Array(numTris * 4);
    var tcoords = new Float32Array(numPts * 2);
    var results = {
      ptIdx: 0,
      cellIdx: 0,
      polys: polys,
      points: points,
      tcoords: tcoords
    }; // compute the direction vector, to make the code general we place text

    var offsetAxis = model.vertical ? 0 : 1;
    var spacedAxis = model.vertical ? 1 : 0; // draw the title

    var dir = [0, 1];

    if (model.vertical) {
      if (model.topTitle) {
        tmpv3[0] = model.boxPosition[0] + 0.5 * model.boxSize[0];
        tmpv3[1] = model.barPosition[1] + model.barSize[1];
        gl_matrix__WEBPACK_IMPORTED_MODULE_2__["vec3"].transformMat4(ptv3, tmpv3, invmat); // write the axis label

        publicAPI.createPolyDataForOneLabel(model.renderable.getAxisLabel(), ptv3, xDir, yDir, [0, 1], model.axisTitlePixelOffset, results);
      } else {
        tmpv3[0] = model.barPosition[0] + model.barSize[0];
        tmpv3[1] = model.barPosition[1] + 0.5 * model.barSize[1];
        gl_matrix__WEBPACK_IMPORTED_MODULE_2__["vec3"].transformMat4(ptv3, tmpv3, invmat); // write the axis label

        gl_matrix__WEBPACK_IMPORTED_MODULE_2__["vec3"].scale(xDir, xDir, -1);
        publicAPI.createPolyDataForOneLabel(model.renderable.getAxisLabel(), ptv3, yDir, xDir, [0, -1], model.axisTitlePixelOffset, results);
        gl_matrix__WEBPACK_IMPORTED_MODULE_2__["vec3"].scale(xDir, xDir, -1);
      }

      dir = [-1, 0];
    } else {
      tmpv3[0] = model.barPosition[0] + 0.5 * model.barSize[0];
      tmpv3[1] = model.barPosition[1] + model.barSize[1];
      gl_matrix__WEBPACK_IMPORTED_MODULE_2__["vec3"].transformMat4(ptv3, tmpv3, invmat);
      publicAPI.createPolyDataForOneLabel(model.renderable.getAxisLabel(), ptv3, xDir, yDir, dir, model.axisTitlePixelOffset, results);
    }

    tmp2v3[2] = -0.99; // near plane

    tmp2v3[offsetAxis] = model.barPosition[offsetAxis] + (0.5 * dir[offsetAxis] + 0.5) * model.barSize[offsetAxis];
    tmp2v3[spacedAxis] = model.barPosition[spacedAxis] + model.barSize[spacedAxis] * 0.5; // draw bar segment labels

    var tickSeg = null;

    for (var _i = 0; _i < model.barSegments.length; _i++) {
      var seg = model.barSegments[_i];

      if (seg.title === 'ticks') {
        // handle ticks below
        tickSeg = seg;
      } else {
        tmp2v3[spacedAxis] = model.barPosition[spacedAxis] + 0.5 * model.barSize[spacedAxis] * (seg.corners[2][spacedAxis] + seg.corners[0][spacedAxis]);
        gl_matrix__WEBPACK_IMPORTED_MODULE_2__["vec3"].transformMat4(ptv3, tmp2v3, invmat);
        publicAPI.createPolyDataForOneLabel(seg.title, ptv3, xDir, yDir, dir, model.tickLabelPixelOffset, results);
      }
    } // write the tick labels


    var tickSegmentStart = model.barPosition[spacedAxis] + model.barSize[spacedAxis] * tickSeg.corners[0][spacedAxis];
    var tickSegmentSize = model.barSize[spacedAxis] * (tickSeg.corners[2][spacedAxis] - tickSeg.corners[0][spacedAxis]);

    for (var t = 0; t < model.ticks.length; t++) {
      var tickPos = (model.ticks[t] - model.lastTickBounds[0]) / (model.lastTickBounds[1] - model.lastTickBounds[0]);
      tmp2v3[spacedAxis] = tickSegmentStart + tickSegmentSize * tickPos;
      gl_matrix__WEBPACK_IMPORTED_MODULE_2__["vec3"].transformMat4(ptv3, tmp2v3, invmat);
      publicAPI.createPolyDataForOneLabel(model.tickstrings[t], ptv3, xDir, yDir, dir, model.tickLabelPixelOffset, results);
    }

    var tcoordDA = _Common_Core_DataArray_js__WEBPACK_IMPORTED_MODULE_7__["default"].newInstance({
      numberOfComponents: 2,
      values: tcoords,
      name: 'TextureCoordinates'
    });
    model.tmPolyData.getPointData().setTCoords(tcoordDA);
    model.tmPolyData.getPoints().setData(points, 3);
    model.tmPolyData.getPoints().modified();
    model.tmPolyData.getPolys().setData(polys, 1);
    model.tmPolyData.getPolys().modified();
    model.tmPolyData.modified();
  };

  publicAPI.updatePolyDataForBarSegments = function () {
    var _scalarsToColors$getU, _scalarsToColors$getU2;

    var cmat = model.camera.getCompositeProjectionMatrix(model.lastAspectRatio, -1, 1);
    gl_matrix__WEBPACK_IMPORTED_MODULE_2__["mat4"].transpose(cmat, cmat);
    gl_matrix__WEBPACK_IMPORTED_MODULE_2__["mat4"].invert(invmat, cmat);
    var scalarsToColors = model.renderable.getScalarsToColors();
    var numberOfExtraColors = 0;

    if (model.renderable.getDrawNanAnnotation() && scalarsToColors.getNanColor()) {
      numberOfExtraColors += 1;
    }

    if (model.renderable.getDrawBelowRangeSwatch() && (_scalarsToColors$getU = scalarsToColors.getUseBelowRangeColor) !== null && _scalarsToColors$getU !== void 0 && _scalarsToColors$getU.call(scalarsToColors)) {
      numberOfExtraColors += 1;
    }

    if (model.renderable.getDrawAboveRangeSwatch() && (_scalarsToColors$getU2 = scalarsToColors.getUseAboveRangeColor) !== null && _scalarsToColors$getU2 !== void 0 && _scalarsToColors$getU2.call(scalarsToColors)) {
      numberOfExtraColors += 1;
    }

    var numPts = 4 * (1 + numberOfExtraColors);
    var numQuads = numPts; // handle vector component mode

    var numComps = 1;

    if (scalarsToColors.getVectorMode() === VectorMode.COMPONENT) {
      numComps = scalarsToColors.getVectorComponent() + 1;
    } // create the colored bars


    var points = new Float64Array(numPts * 3);
    var cells = new Uint16Array(numQuads * 5);
    var scalars = new Float32Array(numPts * numComps);
    var ptIdx = 0;
    var cellIdx = 0;

    for (var i = 0; i < model.barSegments.length; i++) {
      var seg = model.barSegments[i];
      tmp2v3[1] = model.barPosition[1] + model.barSize[1] * 0.5;
      tmp2v3[2] = -0.99; // near plane

      for (var e = 0; e < 4; e++) {
        tmp2v3[0] = model.barPosition[0] + seg.corners[e][0] * model.barSize[0];
        tmp2v3[1] = model.barPosition[1] + seg.corners[e][1] * model.barSize[1];
        gl_matrix__WEBPACK_IMPORTED_MODULE_2__["vec3"].transformMat4(ptv3, tmp2v3, invmat);
        points[ptIdx * 3] = ptv3[0];
        points[ptIdx * 3 + 1] = ptv3[1];
        points[ptIdx * 3 + 2] = ptv3[2];

        for (var nc = 0; nc < numComps; nc++) {
          scalars[ptIdx * numComps + nc] = model.lastTickBounds[0] + seg.scalars[e] * (model.lastTickBounds[1] - model.lastTickBounds[0]);
        }

        ptIdx++;
      }

      cells[cellIdx * 5] = 4;
      cells[cellIdx * 5 + 1] = ptIdx - 4;
      cells[cellIdx * 5 + 2] = ptIdx - 3;
      cells[cellIdx * 5 + 3] = ptIdx - 2;
      cells[cellIdx * 5 + 4] = ptIdx - 1;
      cellIdx++;
    }

    var scalarsDA = _Common_Core_DataArray_js__WEBPACK_IMPORTED_MODULE_7__["default"].newInstance({
      numberOfComponents: numComps,
      values: scalars,
      name: 'Scalars'
    });
    model.polyData.getPointData().setScalars(scalarsDA);
    model.polyData.getPoints().setData(points, 3);
    model.polyData.getPoints().modified();
    model.polyData.getPolys().setData(cells, 1);
    model.polyData.getPolys().modified();
    model.polyData.modified();
  };
}

var newScalarBarActorHelper = _macros_js__WEBPACK_IMPORTED_MODULE_5__["default"].newInstance(function (publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {
    renderable: null
  };
  Object.assign(model, {}, initialValues); // Inheritance

  _macros_js__WEBPACK_IMPORTED_MODULE_5__["default"].obj(publicAPI, model);
  _macros_js__WEBPACK_IMPORTED_MODULE_5__["default"].setGet(publicAPI, model, ['axisTitlePixelOffset', 'tickLabelPixelOffset', 'renderable', 'topTitle']);
  _macros_js__WEBPACK_IMPORTED_MODULE_5__["default"].get(publicAPI, model, ['lastSize', 'lastAspectRatio', 'axisTextStyle', 'tickTextStyle', 'barActor', 'tmActor', 'ticks']);
  _macros_js__WEBPACK_IMPORTED_MODULE_5__["default"].getArray(publicAPI, model, ['boxPosition', 'boxSize']);
  _macros_js__WEBPACK_IMPORTED_MODULE_5__["default"].setArray(publicAPI, model, ['boxPosition', 'boxSize'], 2);
  model.forceUpdate = false;
  model.lastRedrawTime = {};
  _macros_js__WEBPACK_IMPORTED_MODULE_5__["default"].obj(model.lastRedrawTime, {
    mtime: 0
  });
  model.lastRebuildTime = {};
  _macros_js__WEBPACK_IMPORTED_MODULE_5__["default"].obj(model.lastRebuildTime, {
    mtime: 0
  });
  model.lastSize = [-1, -1];
  model.tmCanvas = document.createElement('canvas');
  model.tmContext = model.tmCanvas.getContext('2d');
  model._tmAtlas = new Map();
  model.barMapper = _Mapper_js__WEBPACK_IMPORTED_MODULE_9__["default"].newInstance();
  model.barMapper.setInterpolateScalarsBeforeMapping(true);
  model.polyData = _Common_DataModel_PolyData_js__WEBPACK_IMPORTED_MODULE_10__["default"].newInstance();
  model.barMapper.setInputData(model.polyData);
  model.barActor = _Actor_js__WEBPACK_IMPORTED_MODULE_6__["default"].newInstance();
  model.barActor.setMapper(model.barMapper); // for texture atlas

  model.tmPolyData = _Common_DataModel_PolyData_js__WEBPACK_IMPORTED_MODULE_10__["default"].newInstance();
  model.tmMapper = _Mapper_js__WEBPACK_IMPORTED_MODULE_9__["default"].newInstance();
  model.tmMapper.setInputData(model.tmPolyData);
  model.tmTexture = _Texture_js__WEBPACK_IMPORTED_MODULE_11__["default"].newInstance();
  model.tmTexture.setInterpolate(false);
  model.tmActor = _Actor_js__WEBPACK_IMPORTED_MODULE_6__["default"].newInstance({
    parentProp: publicAPI
  });
  model.tmActor.setMapper(model.tmMapper);
  model.tmActor.addTexture(model.tmTexture);
  model.barPosition = [0, 0];
  model.barSize = [0, 0];
  model.boxPosition = [0.88, -0.92];
  model.boxSize = [0.1, 1.1]; // internal variables

  model.lastTickBounds = [];
  vtkScalarBarActorHelper(publicAPI, model);
}, 'vtkScalarBarActorHelper'); //
// Now we define the public class that the application sets view independent
// properties on. This class is fairly small as it mainly just holds
// properties setter and getters leaving all calculations to the helper
// class.
//

function vtkScalarBarActor(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkScalarBarActor');

  publicAPI.setTickTextStyle = function (tickStyle) {
    model.tickTextStyle = _objectSpread(_objectSpread({}, model.tickTextStyle), tickStyle);
    publicAPI.modified();
  };

  publicAPI.setAxisTextStyle = function (axisStyle) {
    model.axisTextStyle = _objectSpread(_objectSpread({}, model.axisTextStyle), axisStyle);
    publicAPI.modified();
  };

  publicAPI.resetAutoLayoutToDefault = function () {
    model.autoLayout = defaultAutoLayout(publicAPI, model);
  };
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


function defaultValues(initialValues) {
  return _objectSpread({
    automated: true,
    autoLayout: null,
    axisLabel: 'Scalar Value',
    barPosition: [0, 0],
    barSize: [0, 0],
    boxPosition: [0.88, -0.92],
    boxSize: [0.1, 1.1],
    scalarToColors: null,
    axisTitlePixelOffset: 36.0,
    axisTextStyle: {
      fontColor: 'white',
      fontStyle: 'normal',
      fontSize: 18,
      fontFamily: 'serif'
    },
    tickLabelPixelOffset: 14.0,
    tickTextStyle: {
      fontColor: 'white',
      fontStyle: 'normal',
      fontSize: 14,
      fontFamily: 'serif'
    },
    drawNanAnnotation: true,
    drawBelowRangeSwatch: true,
    drawAboveRangeSwatch: true
  }, initialValues);
} // ----------------------------------------------------------------------------


function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, defaultValues(initialValues));
  if (!model.autoLayout) model.autoLayout = defaultAutoLayout(publicAPI, model); // Inheritance

  _Actor_js__WEBPACK_IMPORTED_MODULE_6__["default"].extend(publicAPI, model, initialValues);
  publicAPI.getProperty().setDiffuse(0.0);
  publicAPI.getProperty().setAmbient(1.0);
  _macros_js__WEBPACK_IMPORTED_MODULE_5__["default"].setGet(publicAPI, model, ['automated', 'autoLayout', 'axisTitlePixelOffset', 'axisLabel', 'scalarsToColors', 'tickLabelPixelOffset', 'drawNanAnnotation', 'drawBelowRangeSwatch', 'drawAboveRangeSwatch']);
  _macros_js__WEBPACK_IMPORTED_MODULE_5__["default"].get(publicAPI, model, ['axisTextStyle', 'tickTextStyle']);
  _macros_js__WEBPACK_IMPORTED_MODULE_5__["default"].getArray(publicAPI, model, ['boxPosition', 'boxSize']);
  _macros_js__WEBPACK_IMPORTED_MODULE_5__["default"].setArray(publicAPI, model, ['boxPosition', 'boxSize'], 2); // Object methods

  vtkScalarBarActor(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = _macros_js__WEBPACK_IMPORTED_MODULE_5__["default"].newInstance(extend, 'vtkScalarBarActor'); // ----------------------------------------------------------------------------

var vtkScalarBarActor$1 = {
  newInstance: newInstance,
  extend: extend,
  newScalarBarActorHelper: newScalarBarActorHelper
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Rendering/Core/Texture.js":
/*!*****************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Rendering/Core/Texture.js ***!
  \*****************************************************************/
/*! exports provided: default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkTexture$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");


// vtkTexture methods
// ----------------------------------------------------------------------------

function vtkTexture(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkTexture');

  publicAPI.imageLoaded = function () {
    model.image.removeEventListener('load', publicAPI.imageLoaded);
    model.imageLoaded = true;
    publicAPI.modified();
  };

  publicAPI.setJsImageData = function (imageData) {
    if (model.jsImageData === imageData) {
      return;
    } // clear other entries


    if (imageData !== null) {
      publicAPI.setInputData(null);
      publicAPI.setInputConnection(null);
      model.image = null;
      model.canvas = null;
    }

    model.jsImageData = imageData;
    model.imageLoaded = true;
    publicAPI.modified();
  };

  publicAPI.setCanvas = function (canvas) {
    if (model.canvas === canvas) {
      return;
    } // clear other entries


    if (canvas !== null) {
      publicAPI.setInputData(null);
      publicAPI.setInputConnection(null);
      model.image = null;
      model.jsImageData = null;
    }

    model.canvas = canvas;
    publicAPI.modified();
  };

  publicAPI.setImage = function (image) {
    if (model.image === image) {
      return;
    } // clear other entries


    if (image !== null) {
      publicAPI.setInputData(null);
      publicAPI.setInputConnection(null);
      model.canvas = null;
      model.jsImageData = null;
    }

    model.image = image;
    model.imageLoaded = false;

    if (image.complete) {
      publicAPI.imageLoaded();
    } else {
      image.addEventListener('load', publicAPI.imageLoaded);
    }

    publicAPI.modified();
  };
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {
  repeat: false,
  interpolate: false,
  edgeClamp: false,
  image: null,
  canvas: null,
  imageLoaded: false,
  jsImageData: null
}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API

  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].obj(publicAPI, model);
  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].algo(publicAPI, model, 6, 0);
  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].get(publicAPI, model, ['canvas', 'image', 'jsImageData', 'imageLoaded']);
  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].setGet(publicAPI, model, ['repeat', 'edgeClamp', 'interpolate']);
  vtkTexture(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].newInstance(extend, 'vtkTexture'); // ----------------------------------------------------------------------------

var vtkTexture$1 = {
  newInstance: newInstance,
  extend: extend
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Rendering/Core/Viewport.js":
/*!******************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Rendering/Core/Viewport.js ***!
  \******************************************************************/
/*! exports provided: default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkViewport$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");


var vtkErrorMacro = _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].vtkErrorMacro;

function notImplemented(method) {
  return function () {
    return vtkErrorMacro("vtkViewport::".concat(method, " - NOT IMPLEMENTED"));
  };
} // ----------------------------------------------------------------------------
// vtkViewport methods
// ----------------------------------------------------------------------------


function vtkViewport(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkViewport'); // Public API methods

  publicAPI.getViewProps = function () {
    return model.props;
  };

  publicAPI.hasViewProp = function (prop) {
    return !!model.props.filter(function (item) {
      return item === prop;
    }).length;
  };

  publicAPI.addViewProp = function (prop) {
    if (prop && !publicAPI.hasViewProp(prop)) {
      model.props = model.props.concat(prop);
    }
  };

  publicAPI.removeViewProp = function (prop) {
    var newPropList = model.props.filter(function (item) {
      return item !== prop;
    });

    if (model.props.length !== newPropList.length) {
      model.props = newPropList;
    }
  };

  publicAPI.removeAllViewProps = function () {
    model.props = [];
  }; // this method get all the props including any nested props


  function gatherProps(prop) {
    var allProps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
    allProps.push(prop);
    var children = prop.getNestedProps();

    if (children && children.length) {
      for (var i = 0; i < children.length; i++) {
        gatherProps(children[i], allProps);
      }
    }

    return allProps;
  }

  publicAPI.getViewPropsWithNestedProps = function () {
    var allPropsArray = [];

    for (var i = 0; i < model.props.length; i++) {
      gatherProps(model.props[i], allPropsArray);
    }

    return allPropsArray;
  };

  publicAPI.addActor2D = publicAPI.addViewProp;

  publicAPI.removeActor2D = function (prop) {
    // VTK way: model.actors2D.RemoveItem(prop);
    publicAPI.removeViewProp(prop);
  };

  publicAPI.getActors2D = function () {
    model.actors2D = [];
    model.props.forEach(function (prop) {
      model.actors2D = model.actors2D.concat(prop.getActors2D());
    });
    return model.actors2D;
  };

  publicAPI.displayToView = function () {
    return vtkErrorMacro('call displayToView on your view instead');
  };

  publicAPI.viewToDisplay = function () {
    return vtkErrorMacro('callviewtodisplay on your view instead');
  };

  publicAPI.getSize = function () {
    return vtkErrorMacro('call getSize on your View instead');
  };

  publicAPI.normalizedDisplayToProjection = function (x, y, z) {
    // first to normalized viewport
    var nvp = publicAPI.normalizedDisplayToNormalizedViewport(x, y, z); // then to view

    return publicAPI.normalizedViewportToProjection(nvp[0], nvp[1], nvp[2]);
  };

  publicAPI.normalizedDisplayToNormalizedViewport = function (x, y, z) {
    var scale = [model.viewport[2] - model.viewport[0], model.viewport[3] - model.viewport[1]];
    return [(x - model.viewport[0]) / scale[0], (y - model.viewport[1]) / scale[1], z];
  };

  publicAPI.normalizedViewportToProjection = function (x, y, z) {
    return [x * 2.0 - 1.0, y * 2.0 - 1.0, z * 2.0 - 1.0];
  };

  publicAPI.projectionToNormalizedDisplay = function (x, y, z) {
    // first to nvp
    var nvp = publicAPI.projectionToNormalizedViewport(x, y, z); // then to ndp

    return publicAPI.normalizedViewportToNormalizedDisplay(nvp[0], nvp[1], nvp[2]);
  };

  publicAPI.normalizedViewportToNormalizedDisplay = function (x, y, z) {
    var scale = [model.viewport[2] - model.viewport[0], model.viewport[3] - model.viewport[1]];
    return [x * scale[0] + model.viewport[0], y * scale[1] + model.viewport[1], z];
  };

  publicAPI.projectionToNormalizedViewport = function (x, y, z) {
    return [(x + 1.0) * 0.5, (y + 1.0) * 0.5, (z + 1.0) * 0.5];
  };

  publicAPI.PickPropFrom = notImplemented('PickPropFrom');
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {
  vtkWindow: null,
  background: [0, 0, 0],
  background2: [0.2, 0.2, 0.2],
  gradientBackground: false,
  viewport: [0, 0, 1, 1],
  aspect: [1, 1],
  pixelAspect: [1, 1],
  props: [],
  actors2D: []
}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API

  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].obj(publicAPI, model);
  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].event(publicAPI, model, 'event');
  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].setGetArray(publicAPI, model, ['viewport'], 4);
  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].setGetArray(publicAPI, model, ['background', 'background2'], 3);
  vtkViewport(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].newInstance(extend, 'vtkViewport'); // ----------------------------------------------------------------------------

var vtkViewport$1 = {
  newInstance: newInstance,
  extend: extend
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Rendering/Core/Volume.js":
/*!****************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Rendering/Core/Volume.js ***!
  \****************************************************************/
/*! exports provided: default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkVolume$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! gl-matrix */ "../node_modules/gl-matrix/esm/index.js");
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _Common_DataModel_BoundingBox_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../Common/DataModel/BoundingBox.js */ "../node_modules/@kitware/vtk.js/Common/DataModel/BoundingBox.js");
/* harmony import */ var _Prop3D_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Prop3D.js */ "../node_modules/@kitware/vtk.js/Rendering/Core/Prop3D.js");
/* harmony import */ var _VolumeProperty_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./VolumeProperty.js */ "../node_modules/@kitware/vtk.js/Rendering/Core/VolumeProperty.js");






var vtkDebugMacro = _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].vtkDebugMacro; // ----------------------------------------------------------------------------
// vtkVolume methods
// ----------------------------------------------------------------------------

function vtkVolume(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkVolume');

  publicAPI.getVolumes = function () {
    return publicAPI;
  };

  publicAPI.makeProperty = _VolumeProperty_js__WEBPACK_IMPORTED_MODULE_4__["default"].newInstance;

  publicAPI.getProperty = function () {
    if (model.property === null) {
      model.property = publicAPI.makeProperty();
    }

    return model.property;
  };

  publicAPI.getBounds = function () {
    if (model.mapper === null) {
      return model.bounds;
    } // Check for the special case when the mapper's bounds are unknown


    var bds = model.mapper.getBounds();

    if (!bds || bds.length !== 6) {
      return bds;
    } // Check for the special case when the actor is empty.


    if (bds[0] > bds[1]) {
      model.mapperBounds = bds.concat(); // copy the mapper's bounds

      model.bounds = [1, -1, 1, -1, 1, -1];
      model.boundsMTime.modified();
      return bds;
    } // Check if we have cached values for these bounds - we cache the
    // values returned by model.mapper.getBounds() and we store the time
    // of caching. If the values returned this time are different, or
    // the modified time of this class is newer than the cached time,
    // then we need to rebuild.


    var zip = function zip(rows) {
      return rows[0].map(function (_, c) {
        return rows.map(function (row) {
          return row[c];
        });
      });
    };

    if (!model.mapperBounds || !zip([bds, model.mapperBounds]).reduce(function (a, b) {
      return a && b[0] === b[1];
    }, true) || publicAPI.getMTime() > model.boundsMTime.getMTime()) {
      vtkDebugMacro('Recomputing bounds...');
      model.mapperBounds = bds.map(function (x) {
        return x;
      });
      var bbox = [];
      _Common_DataModel_BoundingBox_js__WEBPACK_IMPORTED_MODULE_2__["default"].getCorners(bds, bbox);
      publicAPI.computeMatrix();
      var tmp4 = new Float64Array(16);
      gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat4"].transpose(tmp4, model.matrix);
      bbox.forEach(function (pt) {
        return gl_matrix__WEBPACK_IMPORTED_MODULE_0__["vec3"].transformMat4(pt, pt, tmp4);
      });
      /* eslint-disable no-multi-assign */

      model.bounds[0] = model.bounds[2] = model.bounds[4] = Number.MAX_VALUE;
      model.bounds[1] = model.bounds[3] = model.bounds[5] = -Number.MAX_VALUE;
      /* eslint-enable no-multi-assign */

      model.bounds = model.bounds.map(function (d, i) {
        return i % 2 === 0 ? bbox.reduce(function (a, b) {
          return a > b[i / 2] ? b[i / 2] : a;
        }, d) : bbox.reduce(function (a, b) {
          return a < b[(i - 1) / 2] ? b[(i - 1) / 2] : a;
        }, d);
      });
      model.boundsMTime.modified();
    }

    return model.bounds;
  };

  publicAPI.getMTime = function () {
    var mt = model.mtime;

    if (model.property !== null) {
      var time = model.property.getMTime();
      mt = time > mt ? time : mt;
    }

    return mt;
  };

  publicAPI.getRedrawMTime = function () {
    var mt = model.mtime;

    if (model.mapper !== null) {
      var time = model.mapper.getMTime();
      mt = time > mt ? time : mt;

      if (model.mapper.getInput() !== null) {
        // FIXME !!! getInputAlgorithm / getInput
        model.mapper.getInputAlgorithm().update();
        time = model.mapper.getInput().getMTime();
        mt = time > mt ? time : mt;
      }
    }

    return mt;
  };
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {
  mapper: null,
  property: null,
  bounds: [1, -1, 1, -1, 1, -1]
}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance

  _Prop3D_js__WEBPACK_IMPORTED_MODULE_3__["default"].extend(publicAPI, model, initialValues); // vtkTimeStamp

  model.boundsMTime = {};
  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].obj(model.boundsMTime); // Build VTK API

  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].set(publicAPI, model, ['property']);
  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].setGet(publicAPI, model, ['mapper']);
  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].getArray(publicAPI, model, ['bounds'], 6); // Object methods

  vtkVolume(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].newInstance(extend, 'vtkVolume'); // ----------------------------------------------------------------------------

var vtkVolume$1 = {
  newInstance: newInstance,
  extend: extend
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Rendering/Core/VolumeMapper.js":
/*!**********************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Rendering/Core/VolumeMapper.js ***!
  \**********************************************************************/
/*! exports provided: default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkVolumeMapper$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../Common/Core/Math/index.js */ "../node_modules/@kitware/vtk.js/Common/Core/Math/index.js");
/* harmony import */ var _VolumeMapper_Constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./VolumeMapper/Constants.js */ "../node_modules/@kitware/vtk.js/Rendering/Core/VolumeMapper/Constants.js");
/* harmony import */ var _AbstractMapper_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./AbstractMapper.js */ "../node_modules/@kitware/vtk.js/Rendering/Core/AbstractMapper.js");





var BlendMode = _VolumeMapper_Constants_js__WEBPACK_IMPORTED_MODULE_2__["default"].BlendMode,
    FilterMode = _VolumeMapper_Constants_js__WEBPACK_IMPORTED_MODULE_2__["default"].FilterMode; // ----------------------------------------------------------------------------
// vtkVolumeMapper methods
// ----------------------------------------------------------------------------

function vtkVolumeMapper(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkVolumeMapper');

  publicAPI.getBounds = function () {
    var input = publicAPI.getInputData();

    if (!input) {
      model.bounds = Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_1__["M"])();
    } else {
      if (!model.static) {
        publicAPI.update();
      }

      model.bounds = input.getBounds();
    }

    return model.bounds;
  };

  publicAPI.update = function () {
    publicAPI.getInputData();
  };

  publicAPI.setBlendModeToComposite = function () {
    publicAPI.setBlendMode(BlendMode.COMPOSITE_BLEND);
  };

  publicAPI.setBlendModeToMaximumIntensity = function () {
    publicAPI.setBlendMode(BlendMode.MAXIMUM_INTENSITY_BLEND);
  };

  publicAPI.setBlendModeToMinimumIntensity = function () {
    publicAPI.setBlendMode(BlendMode.MINIMUM_INTENSITY_BLEND);
  };

  publicAPI.setBlendModeToAverageIntensity = function () {
    publicAPI.setBlendMode(BlendMode.AVERAGE_INTENSITY_BLEND);
  };

  publicAPI.setBlendModeToAdditiveIntensity = function () {
    publicAPI.setBlendMode(BlendMode.ADDITIVE_INTENSITY_BLEND);
  };

  publicAPI.getBlendModeAsString = function () {
    return _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].enumToString(BlendMode, model.blendMode);
  };

  publicAPI.setAverageIPScalarRange = function (min, max) {
    console.warn('setAverageIPScalarRange is deprecated use setIpScalarRange');
    publicAPI.setIpScalarRange(min, max);
  };

  publicAPI.getFilterModeAsString = function () {
    return _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].enumToString(FilterMode, model.filterMode);
  };

  publicAPI.setFilterModeToOff = function () {
    publicAPI.setFilterMode(FilterMode.OFF);
  };

  publicAPI.setFilterModeToNormalized = function () {
    publicAPI.setFilterMode(FilterMode.NORMALIZED);
  };

  publicAPI.setFilterModeToRaw = function () {
    publicAPI.setFilterMode(FilterMode.RAW);
  };
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------
// TODO: what values to use for averageIPScalarRange to get GLSL to use max / min values like [-Math.inf, Math.inf]?


var DEFAULT_VALUES = {
  bounds: [1, -1, 1, -1, 1, -1],
  sampleDistance: 1.0,
  imageSampleDistance: 1.0,
  maximumSamplesPerRay: 1000,
  autoAdjustSampleDistances: true,
  blendMode: BlendMode.COMPOSITE_BLEND,
  ipScalarRange: [-1000000.0, 1000000.0],
  filterMode: FilterMode.OFF,
  // ignored by WebGL so no behavior change
  preferSizeOverAccuracy: false // Whether to use halfFloat representation of float, when it is inaccurate

}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues);
  _AbstractMapper_js__WEBPACK_IMPORTED_MODULE_3__["default"].extend(publicAPI, model, initialValues);
  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].setGet(publicAPI, model, ['sampleDistance', 'imageSampleDistance', 'maximumSamplesPerRay', 'autoAdjustSampleDistances', 'blendMode', 'filterMode', 'preferSizeOverAccuracy']);
  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].setGetArray(publicAPI, model, ['ipScalarRange'], 2);
  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].event(publicAPI, model, 'lightingActivated'); // Object methods

  vtkVolumeMapper(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].newInstance(extend, 'vtkVolumeMapper'); // ----------------------------------------------------------------------------

var vtkVolumeMapper$1 = {
  newInstance: newInstance,
  extend: extend
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Rendering/Core/VolumeMapper/Constants.js":
/*!********************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Rendering/Core/VolumeMapper/Constants.js ***!
  \********************************************************************************/
/*! exports provided: BlendMode, FilterMode, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BlendMode", function() { return BlendMode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FilterMode", function() { return FilterMode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Constants; });
var BlendMode = {
  COMPOSITE_BLEND: 0,
  MAXIMUM_INTENSITY_BLEND: 1,
  MINIMUM_INTENSITY_BLEND: 2,
  AVERAGE_INTENSITY_BLEND: 3,
  ADDITIVE_INTENSITY_BLEND: 4
};
var FilterMode = {
  OFF: 0,
  NORMALIZED: 1,
  RAW: 2
};
var Constants = {
  BlendMode: BlendMode,
  FilterMode: FilterMode
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Rendering/Core/VolumeProperty.js":
/*!************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Rendering/Core/VolumeProperty.js ***!
  \************************************************************************/
/*! exports provided: default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkVolumeProperty$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "../node_modules/@babel/runtime/helpers/defineProperty.js");
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _ColorTransferFunction_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ColorTransferFunction.js */ "../node_modules/@kitware/vtk.js/Rendering/Core/ColorTransferFunction.js");
/* harmony import */ var _Common_DataModel_PiecewiseFunction_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../Common/DataModel/PiecewiseFunction.js */ "../node_modules/@kitware/vtk.js/Common/DataModel/PiecewiseFunction.js");
/* harmony import */ var _VolumeProperty_Constants_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./VolumeProperty/Constants.js */ "../node_modules/@kitware/vtk.js/Rendering/Core/VolumeProperty/Constants.js");






function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var InterpolationType = _VolumeProperty_Constants_js__WEBPACK_IMPORTED_MODULE_4__["default"].InterpolationType,
    OpacityMode = _VolumeProperty_Constants_js__WEBPACK_IMPORTED_MODULE_4__["default"].OpacityMode;
var vtkErrorMacro = _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].vtkErrorMacro;
var VTK_MAX_VRCOMP = 4; // ----------------------------------------------------------------------------
// vtkVolumeProperty methods
// ----------------------------------------------------------------------------

function vtkVolumeProperty(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkVolumeProperty');

  publicAPI.getMTime = function () {
    var mTime = model.mtime;
    var time;

    for (var index = 0; index < VTK_MAX_VRCOMP; index++) {
      // Color MTimes
      if (model.componentData[index].colorChannels === 1) {
        if (model.componentData[index].grayTransferFunction) {
          // time that Gray transfer function was last modified
          time = model.componentData[index].grayTransferFunction.getMTime();
          mTime = mTime > time ? mTime : time;
        }
      } else if (model.componentData[index].colorChannels === 3) {
        if (model.componentData[index].rGBTransferFunction) {
          // time that RGB transfer function was last modified
          time = model.componentData[index].rGBTransferFunction.getMTime();
          mTime = mTime > time ? mTime : time;
        }
      } // Opacity MTimes


      if (model.componentData[index].scalarOpacity) {
        // time that Scalar opacity transfer function was last modified
        time = model.componentData[index].scalarOpacity.getMTime();
        mTime = mTime > time ? mTime : time;
      }

      if (model.componentData[index].gradientOpacity) {
        if (!model.componentData[index].disableGradientOpacity) {
          // time that Gradient opacity transfer function was last modified
          time = model.componentData[index].gradientOpacity.getMTime();
          mTime = mTime > time ? mTime : time;
        }
      }
    }

    return mTime;
  };

  publicAPI.getColorChannels = function (index) {
    if (index < 0 || index > 3) {
      vtkErrorMacro('Bad index - must be between 0 and 3');
      return 0;
    }

    return model.componentData[index].colorChannels;
  }; // Set the color of a volume to a gray transfer function


  publicAPI.setGrayTransferFunction = function (index, func) {
    var modified = false;

    if (model.componentData[index].grayTransferFunction !== func) {
      model.componentData[index].grayTransferFunction = func;
      modified = true;
    }

    if (model.componentData[index].colorChannels !== 1) {
      model.componentData[index].colorChannels = 1;
      modified = true;
    }

    if (modified) {
      publicAPI.modified();
    }

    return modified;
  }; // Get the currently set gray transfer function. Create one if none set.


  publicAPI.getGrayTransferFunction = function (index) {
    if (model.componentData[index].grayTransferFunction === null) {
      model.componentData[index].grayTransferFunction = _Common_DataModel_PiecewiseFunction_js__WEBPACK_IMPORTED_MODULE_3__["default"].newInstance();
      model.componentData[index].grayTransferFunction.addPoint(0, 0.0);
      model.componentData[index].grayTransferFunction.addPoint(1024, 1.0);

      if (model.componentData[index].colorChannels !== 1) {
        model.componentData[index].colorChannels = 1;
      }

      publicAPI.modified();
    }

    return model.componentData[index].grayTransferFunction;
  }; // Set the color of a volume to an RGB transfer function


  publicAPI.setRGBTransferFunction = function (index, func) {
    var modified = false;

    if (model.componentData[index].rGBTransferFunction !== func) {
      model.componentData[index].rGBTransferFunction = func;
      modified = true;
    }

    if (model.componentData[index].colorChannels !== 3) {
      model.componentData[index].colorChannels = 3;
      modified = true;
    }

    if (modified) {
      publicAPI.modified();
    }

    return modified;
  }; // Get the currently set RGB transfer function. Create one if none set.


  publicAPI.getRGBTransferFunction = function (index) {
    if (model.componentData[index].rGBTransferFunction === null) {
      model.componentData[index].rGBTransferFunction = _ColorTransferFunction_js__WEBPACK_IMPORTED_MODULE_2__["default"].newInstance();
      model.componentData[index].rGBTransferFunction.addRGBPoint(0, 0.0, 0.0, 0.0);
      model.componentData[index].rGBTransferFunction.addRGBPoint(1024, 1.0, 1.0, 1.0);

      if (model.componentData[index].colorChannels !== 3) {
        model.componentData[index].colorChannels = 3;
      }

      publicAPI.modified();
    }

    return model.componentData[index].rGBTransferFunction;
  }; // Set the scalar opacity of a volume to a transfer function


  publicAPI.setScalarOpacity = function (index, func) {
    if (model.componentData[index].scalarOpacity !== func) {
      model.componentData[index].scalarOpacity = func;
      publicAPI.modified();
      return true;
    }

    return false;
  }; // Get the scalar opacity transfer function. Create one if none set.


  publicAPI.getScalarOpacity = function (index) {
    if (model.componentData[index].scalarOpacity === null) {
      model.componentData[index].scalarOpacity = _Common_DataModel_PiecewiseFunction_js__WEBPACK_IMPORTED_MODULE_3__["default"].newInstance();
      model.componentData[index].scalarOpacity.addPoint(0, 1.0);
      model.componentData[index].scalarOpacity.addPoint(1024, 1.0);
      publicAPI.modified();
    }

    return model.componentData[index].scalarOpacity;
  };

  publicAPI.setComponentWeight = function (index, value) {
    if (index < 0 || index >= VTK_MAX_VRCOMP) {
      vtkErrorMacro('Invalid index');
      return false;
    }

    var val = Math.min(1, Math.max(0, value));

    if (model.componentData[index].componentWeight !== val) {
      model.componentData[index].componentWeight = val;
      publicAPI.modified();
      return true;
    }

    return false;
  };

  publicAPI.getComponentWeight = function (index) {
    if (index < 0 || index >= VTK_MAX_VRCOMP) {
      vtkErrorMacro('Invalid index');
      return 0.0;
    }

    return model.componentData[index].componentWeight;
  };

  publicAPI.setInterpolationTypeToNearest = function () {
    return publicAPI.setInterpolationType(InterpolationType.NEAREST);
  };

  publicAPI.setInterpolationTypeToLinear = function () {
    return publicAPI.setInterpolationType(InterpolationType.LINEAR);
  };

  publicAPI.setInterpolationTypeToFastLinear = function () {
    return publicAPI.setInterpolationType(InterpolationType.FAST_LINEAR);
  };

  publicAPI.getInterpolationTypeAsString = function () {
    return _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].enumToString(InterpolationType, model.interpolationType);
  };

  var sets = ['useGradientOpacity', 'scalarOpacityUnitDistance', 'gradientOpacityMinimumValue', 'gradientOpacityMinimumOpacity', 'gradientOpacityMaximumValue', 'gradientOpacityMaximumOpacity', 'opacityMode'];
  sets.forEach(function (val) {
    var cap = _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].capitalize(val);

    publicAPI["set".concat(cap)] = function (index, value) {
      if (model.componentData[index]["".concat(val)] !== value) {
        model.componentData[index]["".concat(val)] = value;
        publicAPI.modified();
        return true;
      }

      return false;
    };
  });
  var gets = ['useGradientOpacity', 'scalarOpacityUnitDistance', 'gradientOpacityMinimumValue', 'gradientOpacityMinimumOpacity', 'gradientOpacityMaximumValue', 'gradientOpacityMaximumOpacity', 'opacityMode'];
  gets.forEach(function (val) {
    var cap = _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].capitalize(val);

    publicAPI["get".concat(cap)] = function (index) {
      return model.componentData[index]["".concat(val)];
    };
  });
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {
  independentComponents: true,
  interpolationType: InterpolationType.FAST_LINEAR,
  shade: 0,
  ambient: 0.1,
  diffuse: 0.7,
  specular: 0.2,
  specularPower: 10.0,
  useLabelOutline: false,
  labelOutlineThickness: 1
}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API

  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].obj(publicAPI, model);

  if (!model.componentData) {
    model.componentData = [];

    for (var i = 0; i < VTK_MAX_VRCOMP; ++i) {
      model.componentData.push({
        colorChannels: 1,
        grayTransferFunction: null,
        rGBTransferFunction: null,
        scalarOpacity: null,
        scalarOpacityUnitDistance: 1.0,
        opacityMode: OpacityMode.FRACTIONAL,
        gradientOpacityMinimumValue: 0,
        gradientOpacityMinimumOpacity: 0.0,
        gradientOpacityMaximumValue: 1.0,
        gradientOpacityMaximumOpacity: 1.0,
        useGradientOpacity: false,
        componentWeight: 1.0
      });
    }
  }

  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].setGet(publicAPI, model, ['independentComponents', 'interpolationType', 'shade', 'ambient', 'diffuse', 'specular', 'specularPower', 'useLabelOutline', 'labelOutlineThickness']); // Object methods

  vtkVolumeProperty(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].newInstance(extend, 'vtkVolumeProperty'); // ----------------------------------------------------------------------------

var vtkVolumeProperty$1 = _objectSpread({
  newInstance: newInstance,
  extend: extend
}, _VolumeProperty_Constants_js__WEBPACK_IMPORTED_MODULE_4__["default"]);




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Rendering/Core/VolumeProperty/Constants.js":
/*!**********************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Rendering/Core/VolumeProperty/Constants.js ***!
  \**********************************************************************************/
/*! exports provided: InterpolationType, OpacityMode, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InterpolationType", function() { return InterpolationType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OpacityMode", function() { return OpacityMode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Constants; });
var InterpolationType = {
  NEAREST: 0,
  LINEAR: 1,
  FAST_LINEAR: 2
};
var OpacityMode = {
  FRACTIONAL: 0,
  PROPORTIONAL: 1
};
var Constants = {
  InterpolationType: InterpolationType,
  OpacityMode: OpacityMode
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/Actor.js":
/*!*****************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Rendering/OpenGL/Actor.js ***!
  \*****************************************************************/
/*! exports provided: default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkActor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! gl-matrix */ "../node_modules/gl-matrix/esm/index.js");
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _SceneGraph_ViewNode_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../SceneGraph/ViewNode.js */ "../node_modules/@kitware/vtk.js/Rendering/SceneGraph/ViewNode.js");
/* harmony import */ var _ViewNodeFactory_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ViewNodeFactory.js */ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/ViewNodeFactory.js");





// vtkOpenGLActor methods
// ----------------------------------------------------------------------------

function vtkOpenGLActor(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkOpenGLActor'); // Builds myself.

  publicAPI.buildPass = function (prepass) {
    if (prepass) {
      model.openGLRenderWindow = publicAPI.getFirstAncestorOfType('vtkOpenGLRenderWindow');
      model.openGLRenderer = publicAPI.getFirstAncestorOfType('vtkOpenGLRenderer');
      model.context = model.openGLRenderWindow.getContext();
      publicAPI.prepareNodes();
      publicAPI.addMissingNodes(model.renderable.getTextures());
      publicAPI.addMissingNode(model.renderable.getMapper());
      publicAPI.removeUnusedNodes(); // we store textures and mapper

      model.ogltextures = null;
      model.activeTextures = null;

      for (var index = 0; index < model.children.length; index++) {
        var child = model.children[index];

        if (child.isA('vtkOpenGLTexture')) {
          if (!model.ogltextures) {
            model.ogltextures = [];
          }

          model.ogltextures.push(child);
        } else {
          model.oglmapper = child;
        }
      }
    }
  };

  publicAPI.traverseOpaqueZBufferPass = function (renderPass) {
    if (!model.renderable || !model.renderable.getNestedVisibility() || model.openGLRenderer.getSelector() && !model.renderable.getNestedPickable()) {
      return;
    }

    publicAPI.apply(renderPass, true);
    model.oglmapper.traverse(renderPass);
    publicAPI.apply(renderPass, false);
  }; // we draw textures, then mapper, then post pass textures


  publicAPI.traverseOpaquePass = function (renderPass) {
    if (!model.renderable || !model.renderable.getNestedVisibility() || !model.renderable.getIsOpaque() || model.openGLRenderer.getSelector() && !model.renderable.getNestedPickable()) {
      return;
    }

    publicAPI.apply(renderPass, true);
    model.oglmapper.traverse(renderPass);
    publicAPI.apply(renderPass, false);
  }; // we draw textures, then mapper, then post pass textures


  publicAPI.traverseTranslucentPass = function (renderPass) {
    if (!model.renderable || !model.renderable.getNestedVisibility() || model.renderable.getIsOpaque() || model.openGLRenderer.getSelector() && !model.renderable.getNestedPickable()) {
      return;
    }

    publicAPI.apply(renderPass, true);
    model.oglmapper.traverse(renderPass);
    publicAPI.apply(renderPass, false);
  };

  publicAPI.activateTextures = function () {
    // always traverse textures first, then mapper
    if (!model.ogltextures) {
      return;
    }

    model.activeTextures = [];

    for (var index = 0; index < model.ogltextures.length; index++) {
      var child = model.ogltextures[index];
      child.render();

      if (child.getHandle()) {
        model.activeTextures.push(child);
      }
    }
  };

  publicAPI.queryPass = function (prepass, renderPass) {
    if (prepass) {
      if (!model.renderable || !model.renderable.getVisibility()) {
        return;
      }

      if (model.renderable.getIsOpaque()) {
        renderPass.incrementOpaqueActorCount();
      } else {
        renderPass.incrementTranslucentActorCount();
      }
    }
  };

  publicAPI.opaqueZBufferPass = function (prepass, renderPass) {
    return publicAPI.opaquePass(prepass, renderPass);
  };

  publicAPI.opaquePass = function (prepass, renderPass) {
    if (prepass) {
      model.context.depthMask(true);
      publicAPI.activateTextures();
    } else if (model.activeTextures) {
      for (var index = 0; index < model.activeTextures.length; index++) {
        model.activeTextures[index].deactivate();
      }
    }
  }; // Renders myself


  publicAPI.translucentPass = function (prepass, renderPass) {
    if (prepass) {
      model.context.depthMask(false);
      publicAPI.activateTextures();
    } else if (model.activeTextures) {
      for (var index = 0; index < model.activeTextures.length; index++) {
        model.activeTextures[index].deactivate();
      }
    }
  };

  publicAPI.getKeyMatrices = function () {
    // has the actor changed?
    if (model.renderable.getMTime() > model.keyMatrixTime.getMTime()) {
      model.renderable.computeMatrix();
      gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat4"].copy(model.keyMatrices.mcwc, model.renderable.getMatrix());
      gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat4"].transpose(model.keyMatrices.mcwc, model.keyMatrices.mcwc);

      if (model.renderable.getIsIdentity()) {
        gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat3"].identity(model.keyMatrices.normalMatrix);
      } else {
        gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat3"].fromMat4(model.keyMatrices.normalMatrix, model.keyMatrices.mcwc);
        gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat3"].invert(model.keyMatrices.normalMatrix, model.keyMatrices.normalMatrix);
        gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat3"].transpose(model.keyMatrices.normalMatrix, model.keyMatrices.normalMatrix);
      }

      model.keyMatrixTime.modified();
    }

    return model.keyMatrices;
  };
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {
  context: null,
  keyMatrixTime: null,
  keyMatrices: null,
  activeTextures: null
}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance

  _SceneGraph_ViewNode_js__WEBPACK_IMPORTED_MODULE_2__["default"].extend(publicAPI, model, initialValues);
  model.keyMatrixTime = {};
  Object(_macros_js__WEBPACK_IMPORTED_MODULE_1__["obj"])(model.keyMatrixTime, {
    mtime: 0
  });
  model.keyMatrices = {
    normalMatrix: gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat3"].identity(new Float64Array(9)),
    mcwc: gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat4"].identity(new Float64Array(16))
  }; // Build VTK API

  Object(_macros_js__WEBPACK_IMPORTED_MODULE_1__["setGet"])(publicAPI, model, ['context']);
  Object(_macros_js__WEBPACK_IMPORTED_MODULE_1__["get"])(publicAPI, model, ['activeTextures']); // Object methods

  vtkOpenGLActor(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = Object(_macros_js__WEBPACK_IMPORTED_MODULE_1__["newInstance"])(extend); // ----------------------------------------------------------------------------

var vtkActor = {
  newInstance: newInstance,
  extend: extend
}; // Register ourself to OpenGL backend if imported

Object(_ViewNodeFactory_js__WEBPACK_IMPORTED_MODULE_3__["registerOverride"])('vtkActor', newInstance);




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/Actor2D.js":
/*!*******************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Rendering/OpenGL/Actor2D.js ***!
  \*******************************************************************/
/*! exports provided: default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkActor2D; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _SceneGraph_ViewNode_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../SceneGraph/ViewNode.js */ "../node_modules/@kitware/vtk.js/Rendering/SceneGraph/ViewNode.js");
/* harmony import */ var _ViewNodeFactory_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ViewNodeFactory.js */ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/ViewNodeFactory.js");




// vtkOpenGLActor methods
// ----------------------------------------------------------------------------

function vtkOpenGLActor2D(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkOpenGLActor2D'); // Builds myself.

  publicAPI.buildPass = function (prepass) {
    if (prepass) {
      if (!model.renderable) {
        return;
      }

      model.openGLRenderWindow = publicAPI.getFirstAncestorOfType('vtkOpenGLRenderWindow');
      model.openGLRenderer = publicAPI.getFirstAncestorOfType('vtkOpenGLRenderer');
      model.context = model.openGLRenderWindow.getContext();
      publicAPI.prepareNodes();
      publicAPI.addMissingNodes(model.renderable.getTextures());
      publicAPI.addMissingNode(model.renderable.getMapper());
      publicAPI.removeUnusedNodes(); // we store textures and mapper

      model.ogltextures = null;
      model.activeTextures = null;

      for (var index = 0; index < model.children.length; index++) {
        var child = model.children[index];

        if (child.isA('vtkOpenGLTexture')) {
          if (!model.ogltextures) {
            model.ogltextures = [];
          }

          model.ogltextures.push(child);
        } else {
          model.oglmapper = child;
        }
      }
    }
  };

  publicAPI.queryPass = function (prepass, renderPass) {
    if (prepass) {
      if (!model.renderable || !model.renderable.getVisibility()) {
        return;
      }

      renderPass.incrementOverlayActorCount();
    }
  }; // we draw textures, then mapper, then post pass textures


  publicAPI.traverseOpaquePass = function (renderPass) {
    if (!model.oglmapper || !model.renderable || !model.renderable.getNestedVisibility() || !model.renderable.getIsOpaque() || model.openGLRenderer.getSelector() && !model.renderable.getNestedPickable()) {
      return;
    }

    publicAPI.apply(renderPass, true);
    model.oglmapper.traverse(renderPass);
    publicAPI.apply(renderPass, false);
  }; // we draw textures, then mapper, then post pass textures


  publicAPI.traverseTranslucentPass = function (renderPass) {
    if (!model.oglmapper || !model.renderable || !model.renderable.getNestedVisibility() || model.renderable.getIsOpaque() || model.openGLRenderer.getSelector() && !model.renderable.getNestedPickable()) {
      return;
    }

    publicAPI.apply(renderPass, true);
    model.oglmapper.traverse(renderPass);
    publicAPI.apply(renderPass, false);
  };

  publicAPI.traverseOverlayPass = function (renderPass) {
    if (!model.oglmapper || !model.renderable || !model.renderable.getNestedVisibility() || model.openGLRenderer.getSelector() && !model.renderable.getNestedPickable) {
      return;
    }

    publicAPI.apply(renderPass, true);
    model.oglmapper.traverse(renderPass);
    publicAPI.apply(renderPass, false);
  };

  publicAPI.activateTextures = function () {
    // always traverse textures first, then mapper
    if (!model.ogltextures) {
      return;
    }

    model.activeTextures = [];

    for (var index = 0; index < model.ogltextures.length; index++) {
      var child = model.ogltextures[index];
      child.render();

      if (child.getHandle()) {
        model.activeTextures.push(child);
      }
    }
  }; // Renders myself


  publicAPI.opaquePass = function (prepass, renderPass) {
    if (prepass) {
      model.context.depthMask(true);
      publicAPI.activateTextures();
    } else if (model.activeTextures) {
      // deactivate textures
      for (var index = 0; index < model.activeTextures.length; index++) {
        model.activeTextures[index].deactivate();
      }
    }
  }; // Renders myself


  publicAPI.translucentPass = function (prepass, renderPass) {
    if (prepass) {
      model.context.depthMask(false);
      publicAPI.activateTextures();
    } else if (model.activeTextures) {
      for (var index = 0; index < model.activeTextures.length; index++) {
        model.activeTextures[index].deactivate();
      }
    }
  }; // Renders myself


  publicAPI.overlayPass = function (prepass, renderPass) {
    if (prepass) {
      model.context.depthMask(true);
      publicAPI.activateTextures();
    } else if (model.activeTextures) {
      // deactivate textures
      for (var index = 0; index < model.activeTextures.length; index++) {
        model.activeTextures[index].deactivate();
      }
    }
  };
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {
  context: null,
  activeTextures: null
}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance

  _SceneGraph_ViewNode_js__WEBPACK_IMPORTED_MODULE_1__["default"].extend(publicAPI, model, initialValues); // Build VTK API

  Object(_macros_js__WEBPACK_IMPORTED_MODULE_0__["setGet"])(publicAPI, model, ['context']);
  Object(_macros_js__WEBPACK_IMPORTED_MODULE_0__["get"])(publicAPI, model, ['activeTextures']); // Object methods

  vtkOpenGLActor2D(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = Object(_macros_js__WEBPACK_IMPORTED_MODULE_0__["newInstance"])(extend); // ----------------------------------------------------------------------------

var vtkActor2D = {
  newInstance: newInstance,
  extend: extend
}; // Register ourself to OpenGL backend if imported

Object(_ViewNodeFactory_js__WEBPACK_IMPORTED_MODULE_2__["registerOverride"])('vtkActor2D', newInstance);




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/BufferObject.js":
/*!************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Rendering/OpenGL/BufferObject.js ***!
  \************************************************************************/
/*! exports provided: STATIC, default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "STATIC", function() { return STATIC; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkBufferObject; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "../node_modules/@babel/runtime/helpers/defineProperty.js");
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _BufferObject_Constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./BufferObject/Constants.js */ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/BufferObject/Constants.js");




function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var ObjectType = _BufferObject_Constants_js__WEBPACK_IMPORTED_MODULE_2__["default"].ObjectType; // ----------------------------------------------------------------------------
// Global methods
// ----------------------------------------------------------------------------
// ----------------------------------------------------------------------------
// Static API
// ----------------------------------------------------------------------------

var STATIC = {}; // ----------------------------------------------------------------------------
// vtkOpenGLBufferObject methods
// ----------------------------------------------------------------------------

function vtkOpenGLBufferObject(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkOpenGLBufferObject'); // Class-specific private functions

  function convertType(type) {
    switch (type) {
      case ObjectType.ELEMENT_ARRAY_BUFFER:
        return model.context.ELEMENT_ARRAY_BUFFER;

      case ObjectType.TEXTURE_BUFFER:
        if ('TEXTURE_BUFFER' in model.context) {
          return model.context.TEXTURE_BUFFER;
        }

      /* eslint-disable no-fallthrough */
      // Intentional fallthrough in case there is no TEXTURE_BUFFER in WebGL

      case ObjectType.ARRAY_BUFFER:
      default:
        return model.context.ARRAY_BUFFER;

      /* eslint-enable no-fallthrough */
    }
  }

  var internalType = null;
  var internalHandle = null;
  var dirty = true;
  var error = ''; // Public API methods

  publicAPI.getType = function () {
    return internalType;
  };

  publicAPI.setType = function (value) {
    internalType = value;
  };

  publicAPI.getHandle = function () {
    return internalHandle;
  };

  publicAPI.isReady = function () {
    return dirty === false;
  };

  publicAPI.generateBuffer = function (type) {
    var objectTypeGL = convertType(type);

    if (internalHandle === null) {
      internalHandle = model.context.createBuffer();
      internalType = type;
    }

    return convertType(internalType) === objectTypeGL;
  };

  publicAPI.upload = function (data, type) {
    // buffer, size, type
    var alreadyGenerated = publicAPI.generateBuffer(type);

    if (!alreadyGenerated) {
      error = 'Trying to upload array buffer to incompatible buffer.';
      return false;
    }

    model.context.bindBuffer(convertType(internalType), internalHandle);
    model.context.bufferData(convertType(internalType), data, model.context.STATIC_DRAW);
    dirty = false;
    return true;
  };

  publicAPI.bind = function () {
    if (!internalHandle) {
      return false;
    }

    model.context.bindBuffer(convertType(internalType), internalHandle);
    return true;
  };

  publicAPI.release = function () {
    if (!internalHandle) {
      return false;
    }

    model.context.bindBuffer(convertType(internalType), null);
    return true;
  };

  publicAPI.releaseGraphicsResources = function () {
    if (internalHandle !== null) {
      model.context.bindBuffer(convertType(internalType), null);
      model.context.deleteBuffer(internalHandle);
      internalHandle = null;
    }
  };

  publicAPI.setOpenGLRenderWindow = function (rw) {
    if (model.openGLRenderWindow === rw) {
      return;
    }

    publicAPI.releaseGraphicsResources();
    model.openGLRenderWindow = rw;
    model.context = null;

    if (rw) {
      model.context = model.openGLRenderWindow.getContext();
    }
  };

  publicAPI.getError = function () {
    return error;
  };
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {
  objectType: ObjectType.ARRAY_BUFFER,
  openGLRenderWindow: null,
  context: null
}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Object methods

  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].obj(publicAPI, model);
  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].get(publicAPI, model, ['openGLRenderWindow']);
  vtkOpenGLBufferObject(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].newInstance(extend); // ----------------------------------------------------------------------------

var vtkBufferObject = _objectSpread(_objectSpread({
  newInstance: newInstance,
  extend: extend
}, STATIC), _BufferObject_Constants_js__WEBPACK_IMPORTED_MODULE_2__["default"]);




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/BufferObject/Constants.js":
/*!**********************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Rendering/OpenGL/BufferObject/Constants.js ***!
  \**********************************************************************************/
/*! exports provided: ObjectType, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ObjectType", function() { return ObjectType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Constants; });
var ObjectType = {
  ARRAY_BUFFER: 0,
  ELEMENT_ARRAY_BUFFER: 1,
  TEXTURE_BUFFER: 2
};
var Constants = {
  ObjectType: ObjectType
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/Camera.js":
/*!******************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Rendering/OpenGL/Camera.js ***!
  \******************************************************************/
/*! exports provided: default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkCamera; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! gl-matrix */ "../node_modules/gl-matrix/esm/index.js");
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _SceneGraph_ViewNode_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../SceneGraph/ViewNode.js */ "../node_modules/@kitware/vtk.js/Rendering/SceneGraph/ViewNode.js");
/* harmony import */ var _ViewNodeFactory_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ViewNodeFactory.js */ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/ViewNodeFactory.js");





// vtkOpenGLCamera methods
// ----------------------------------------------------------------------------

function vtkOpenGLCamera(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkOpenGLCamera');

  publicAPI.buildPass = function (prepass) {
    if (prepass) {
      model.openGLRenderer = publicAPI.getFirstAncestorOfType('vtkOpenGLRenderer');
      model.openGLRenderWindow = model.openGLRenderer.getParent();
      model.context = model.openGLRenderWindow.getContext();
    }
  }; // Renders myself


  publicAPI.opaquePass = function (prepass) {
    if (prepass) {
      var tsize = model.openGLRenderer.getTiledSizeAndOrigin();
      model.context.viewport(tsize.lowerLeftU, tsize.lowerLeftV, tsize.usize, tsize.vsize);
      model.context.scissor(tsize.lowerLeftU, tsize.lowerLeftV, tsize.usize, tsize.vsize);
    }
  };

  publicAPI.translucentPass = publicAPI.opaquePass;
  publicAPI.opaqueZBufferPass = publicAPI.opaquePass;
  publicAPI.volumePass = publicAPI.opaquePass;

  publicAPI.getKeyMatrices = function (ren) {
    // has the camera changed?
    if (ren !== model.lastRenderer || model.openGLRenderWindow.getMTime() > model.keyMatrixTime.getMTime() || publicAPI.getMTime() > model.keyMatrixTime.getMTime() || ren.getMTime() > model.keyMatrixTime.getMTime() || model.renderable.getMTime() > model.keyMatrixTime.getMTime()) {
      gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat4"].copy(model.keyMatrices.wcvc, model.renderable.getViewMatrix());
      gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat3"].fromMat4(model.keyMatrices.normalMatrix, model.keyMatrices.wcvc);
      gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat3"].invert(model.keyMatrices.normalMatrix, model.keyMatrices.normalMatrix);
      gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat4"].transpose(model.keyMatrices.wcvc, model.keyMatrices.wcvc);
      var aspectRatio = model.openGLRenderer.getAspectRatio();
      gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat4"].copy(model.keyMatrices.vcpc, model.renderable.getProjectionMatrix(aspectRatio, -1, 1));
      gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat4"].transpose(model.keyMatrices.vcpc, model.keyMatrices.vcpc);
      gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat4"].multiply(model.keyMatrices.wcpc, model.keyMatrices.vcpc, model.keyMatrices.wcvc);
      model.keyMatrixTime.modified();
      model.lastRenderer = ren;
    }

    return model.keyMatrices;
  };
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {
  context: null,
  lastRenderer: null,
  keyMatrixTime: null,
  keyMatrices: null
}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance

  _SceneGraph_ViewNode_js__WEBPACK_IMPORTED_MODULE_2__["default"].extend(publicAPI, model, initialValues);
  model.keyMatrixTime = {};
  Object(_macros_js__WEBPACK_IMPORTED_MODULE_1__["obj"])(model.keyMatrixTime); // values always get set by the get method

  model.keyMatrices = {
    normalMatrix: new Float64Array(9),
    vcpc: new Float64Array(16),
    wcvc: new Float64Array(16),
    wcpc: new Float64Array(16)
  }; // Build VTK API

  Object(_macros_js__WEBPACK_IMPORTED_MODULE_1__["setGet"])(publicAPI, model, ['context', 'keyMatrixTime']); // Object methods

  vtkOpenGLCamera(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = Object(_macros_js__WEBPACK_IMPORTED_MODULE_1__["newInstance"])(extend); // ----------------------------------------------------------------------------

var vtkCamera = {
  newInstance: newInstance,
  extend: extend
}; // Register ourself to OpenGL backend if imported

Object(_ViewNodeFactory_js__WEBPACK_IMPORTED_MODULE_3__["registerOverride"])('vtkCamera', newInstance);




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/CellArrayBufferObject.js":
/*!*********************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Rendering/OpenGL/CellArrayBufferObject.js ***!
  \*********************************************************************************/
/*! exports provided: default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkCellArrayBufferObject; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! gl-matrix */ "../node_modules/gl-matrix/esm/index.js");
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _BufferObject_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./BufferObject.js */ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/BufferObject.js");
/* harmony import */ var _BufferObject_Constants_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./BufferObject/Constants.js */ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/BufferObject/Constants.js");
/* harmony import */ var _Core_Property_Constants_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Core/Property/Constants.js */ "../node_modules/@kitware/vtk.js/Rendering/Core/Property/Constants.js");






var vtkErrorMacro = _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].vtkErrorMacro; // ----------------------------------------------------------------------------
// Static functions
// ----------------------------------------------------------------------------

function computeInverseShiftAndScaleMatrix(coordShift, coordScale) {
  var inverseScale = new Float64Array(3);
  gl_matrix__WEBPACK_IMPORTED_MODULE_0__["vec3"].inverse(inverseScale, coordScale);
  var matrix = new Float64Array(16);
  gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat4"].fromRotationTranslationScale(matrix, gl_matrix__WEBPACK_IMPORTED_MODULE_0__["quat"].create(), coordShift, inverseScale);
  return matrix;
}

function shouldApplyCoordShiftAndScale(coordShift, coordScale) {
  if (coordShift === null || coordScale === null) {
    return false;
  }

  return !(gl_matrix__WEBPACK_IMPORTED_MODULE_0__["vec3"].exactEquals(coordShift, [0, 0, 0]) && gl_matrix__WEBPACK_IMPORTED_MODULE_0__["vec3"].exactEquals(coordScale, [1, 1, 1]));
} // ----------------------------------------------------------------------------
// vtkOpenGLCellArrayBufferObject methods
// ----------------------------------------------------------------------------


function vtkOpenGLCellArrayBufferObject(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkOpenGLCellArrayBufferObject');
  publicAPI.setType(_BufferObject_Constants_js__WEBPACK_IMPORTED_MODULE_3__["ObjectType"].ARRAY_BUFFER);

  publicAPI.createVBO = function (cellArray, inRep, outRep, options) {
    if (!cellArray.getData() || !cellArray.getData().length) {
      model.elementCount = 0;
      return 0;
    } // Figure out how big each block will be, currently 6 or 7 floats.


    model.blockSize = 3;
    model.vertexOffset = 0;
    model.normalOffset = 0;
    model.tCoordOffset = 0;
    model.tCoordComponents = 0;
    model.colorComponents = 0;
    model.colorOffset = 0;
    model.customData = [];
    var pointData = options.points.getData();
    var normalData = null;
    var tcoordData = null;
    var colorData = null;
    var colorComponents = options.colors ? options.colors.getNumberOfComponents() : 0;
    var textureComponents = options.tcoords ? options.tcoords.getNumberOfComponents() : 0; // the values of 4 below are because floats are 4 bytes

    if (options.normals) {
      model.normalOffset = 4 * model.blockSize;
      model.blockSize += 3;
      normalData = options.normals.getData();
    }

    if (options.customAttributes) {
      options.customAttributes.forEach(function (a) {
        if (a) {
          model.customData.push({
            data: a.getData(),
            offset: 4 * model.blockSize,
            components: a.getNumberOfComponents(),
            name: a.getName()
          });
          model.blockSize += a.getNumberOfComponents();
        }
      });
    }

    if (options.tcoords) {
      model.tCoordOffset = 4 * model.blockSize;
      model.tCoordComponents = textureComponents;
      model.blockSize += textureComponents;
      tcoordData = options.tcoords.getData();
    }

    if (options.colors) {
      model.colorComponents = options.colors.getNumberOfComponents();
      model.colorOffset = 0;
      colorData = options.colors.getData();

      if (!model.colorBO) {
        model.colorBO = _BufferObject_js__WEBPACK_IMPORTED_MODULE_2__["default"].newInstance();
      }

      model.colorBO.setOpenGLRenderWindow(model.openGLRenderWindow);
    } else {
      model.colorBO = null;
    }

    model.stride = 4 * model.blockSize;
    var pointIdx = 0;
    var normalIdx = 0;
    var tcoordIdx = 0;
    var colorIdx = 0;
    var custIdx = 0;
    var cellCount = 0;
    var addAPoint;
    var cellBuilders = {
      // easy, every input point becomes an output point
      anythingToPoints: function anythingToPoints(numPoints, cellPts, offset) {
        for (var i = 0; i < numPoints; ++i) {
          addAPoint(cellPts[offset + i]);
        }
      },
      linesToWireframe: function linesToWireframe(numPoints, cellPts, offset) {
        // for lines we add a bunch of segments
        for (var i = 0; i < numPoints - 1; ++i) {
          addAPoint(cellPts[offset + i]);
          addAPoint(cellPts[offset + i + 1]);
        }
      },
      polysToWireframe: function polysToWireframe(numPoints, cellPts, offset) {
        // for polys we add a bunch of segments and close it
        if (numPoints > 2) {
          for (var i = 0; i < numPoints; ++i) {
            addAPoint(cellPts[offset + i]);
            addAPoint(cellPts[offset + (i + 1) % numPoints]);
          }
        }
      },
      stripsToWireframe: function stripsToWireframe(numPoints, cellPts, offset) {
        if (numPoints > 2) {
          // for strips we add a bunch of segments and close it
          for (var i = 0; i < numPoints - 1; ++i) {
            addAPoint(cellPts[offset + i]);
            addAPoint(cellPts[offset + i + 1]);
          }

          for (var _i = 0; _i < numPoints - 2; _i++) {
            addAPoint(cellPts[offset + _i]);
            addAPoint(cellPts[offset + _i + 2]);
          }
        }
      },
      polysToSurface: function polysToSurface(npts, cellPts, offset) {
        for (var i = 0; i < npts - 2; i++) {
          addAPoint(cellPts[offset + 0]);
          addAPoint(cellPts[offset + i + 1]);
          addAPoint(cellPts[offset + i + 2]);
        }
      },
      stripsToSurface: function stripsToSurface(npts, cellPts, offset) {
        for (var i = 0; i < npts - 2; i++) {
          addAPoint(cellPts[offset + i]);
          addAPoint(cellPts[offset + i + 1 + i % 2]);
          addAPoint(cellPts[offset + i + 1 + (i + 1) % 2]);
        }
      }
    };
    var cellCounters = {
      // easy, every input point becomes an output point
      anythingToPoints: function anythingToPoints(numPoints, cellPts) {
        return numPoints;
      },
      linesToWireframe: function linesToWireframe(numPoints, cellPts) {
        if (numPoints > 1) {
          return (numPoints - 1) * 2;
        }

        return 0;
      },
      polysToWireframe: function polysToWireframe(numPoints, cellPts) {
        if (numPoints > 2) {
          return numPoints * 2;
        }

        return 0;
      },
      stripsToWireframe: function stripsToWireframe(numPoints, cellPts) {
        if (numPoints > 2) {
          return numPoints * 4 - 6;
        }

        return 0;
      },
      polysToSurface: function polysToSurface(npts, cellPts) {
        if (npts > 2) {
          return (npts - 2) * 3;
        }

        return 0;
      },
      stripsToSurface: function stripsToSurface(npts, cellPts, offset) {
        if (npts > 2) {
          return (npts - 2) * 3;
        }

        return 0;
      }
    };
    var func = null;
    var countFunc = null;

    if (outRep === _Core_Property_Constants_js__WEBPACK_IMPORTED_MODULE_4__["Representation"].POINTS || inRep === 'verts') {
      func = cellBuilders.anythingToPoints;
      countFunc = cellCounters.anythingToPoints;
    } else if (outRep === _Core_Property_Constants_js__WEBPACK_IMPORTED_MODULE_4__["Representation"].WIREFRAME || inRep === 'lines') {
      func = cellBuilders["".concat(inRep, "ToWireframe")];
      countFunc = cellCounters["".concat(inRep, "ToWireframe")];
    } else {
      func = cellBuilders["".concat(inRep, "ToSurface")];
      countFunc = cellCounters["".concat(inRep, "ToSurface")];
    }

    var array = cellArray.getData();
    var size = array.length;
    var caboCount = 0;

    for (var index = 0; index < size;) {
      caboCount += countFunc(array[index], array);
      index += array[index] + 1;
    }

    var packedUCVBO = null;
    var packedVBO = new Float32Array(caboCount * model.blockSize);

    if (colorData) {
      packedUCVBO = new Uint8Array(caboCount * 4);
    }

    var vboidx = 0;
    var ucidx = 0; // Find out if shift scale should be used
    // Compute squares of diagonal size and distance from the origin

    var diagSq = 0.0;
    var distSq = 0.0;

    for (var i = 0; i < 3; ++i) {
      var range = options.points.getRange(i);
      var delta = range[1] - range[0];
      diagSq += delta * delta;
      var distShift = 0.5 * (range[1] + range[0]);
      distSq += distShift * distShift;
    }

    var useShiftAndScale = diagSq > 0 && (Math.abs(distSq) / diagSq > 1.0e6 || // If data is far from the origin relative to its size
    Math.abs(Math.log10(diagSq)) > 3.0 || // If the size is huge when not far from the origin
    diagSq === 0 && distSq > 1.0e6); // If data is a point, but far from the origin

    if (useShiftAndScale) {
      // Compute shift and scale vectors
      var coordShift = new Float64Array(3);
      var coordScale = new Float64Array(3);

      for (var _i2 = 0; _i2 < 3; ++_i2) {
        var _range = options.points.getRange(_i2);

        var _delta = _range[1] - _range[0];

        coordShift[_i2] = 0.5 * (_range[1] + _range[0]);
        coordScale[_i2] = _delta > 0 ? 1.0 / _delta : 1.0;
      }

      publicAPI.setCoordShiftAndScale(coordShift, coordScale);
    } else if (model.coordShiftAndScaleEnabled === true) {
      // Make sure to reset
      publicAPI.setCoordShiftAndScale(null, null);
    }

    addAPoint = function addAPointFunc(i) {
      // Vertices
      pointIdx = i * 3;

      if (!model.coordShiftAndScaleEnabled) {
        packedVBO[vboidx++] = pointData[pointIdx++];
        packedVBO[vboidx++] = pointData[pointIdx++];
        packedVBO[vboidx++] = pointData[pointIdx++];
      } else {
        // Apply shift and scale
        packedVBO[vboidx++] = (pointData[pointIdx++] - model.coordShift[0]) * model.coordScale[0];
        packedVBO[vboidx++] = (pointData[pointIdx++] - model.coordShift[1]) * model.coordScale[1];
        packedVBO[vboidx++] = (pointData[pointIdx++] - model.coordShift[2]) * model.coordScale[2];
      }

      if (normalData !== null) {
        if (options.haveCellNormals) {
          normalIdx = (cellCount + options.cellOffset) * 3;
        } else {
          normalIdx = i * 3;
        }

        packedVBO[vboidx++] = normalData[normalIdx++];
        packedVBO[vboidx++] = normalData[normalIdx++];
        packedVBO[vboidx++] = normalData[normalIdx++];
      }

      model.customData.forEach(function (attr) {
        custIdx = i * attr.components;

        for (var j = 0; j < attr.components; ++j) {
          packedVBO[vboidx++] = attr.data[custIdx++];
        }
      });

      if (tcoordData !== null) {
        tcoordIdx = i * textureComponents;

        for (var j = 0; j < textureComponents; ++j) {
          packedVBO[vboidx++] = tcoordData[tcoordIdx++];
        }
      }

      if (colorData !== null) {
        if (options.haveCellScalars) {
          colorIdx = (cellCount + options.cellOffset) * colorComponents;
        } else {
          colorIdx = i * colorComponents;
        }

        packedUCVBO[ucidx++] = colorData[colorIdx++];
        packedUCVBO[ucidx++] = colorData[colorIdx++];
        packedUCVBO[ucidx++] = colorData[colorIdx++];
        packedUCVBO[ucidx++] = colorComponents === 4 ? colorData[colorIdx++] : 255;
      }
    };

    for (var _index = 0; _index < size;) {
      func(array[_index], array, _index + 1);
      _index += array[_index] + 1;
      cellCount++;
    }

    model.elementCount = caboCount;
    publicAPI.upload(packedVBO, _BufferObject_Constants_js__WEBPACK_IMPORTED_MODULE_3__["ObjectType"].ARRAY_BUFFER);

    if (model.colorBO) {
      model.colorBOStride = 4;
      model.colorBO.upload(packedUCVBO, _BufferObject_Constants_js__WEBPACK_IMPORTED_MODULE_3__["ObjectType"].ARRAY_BUFFER);
    }

    return cellCount;
  };

  publicAPI.setCoordShiftAndScale = function (coordShift, coordScale) {
    if (coordShift !== null && (coordShift.constructor !== Float64Array || coordShift.length !== 3)) {
      vtkErrorMacro('Wrong type for coordShift, expected vec3 or null');
      return;
    }

    if (coordScale !== null && (coordScale.constructor !== Float64Array || coordScale.length !== 3)) {
      vtkErrorMacro('Wrong type for coordScale, expected vec3 or null');
      return;
    }

    if (model.coordShift === null || coordShift === null || !gl_matrix__WEBPACK_IMPORTED_MODULE_0__["vec3"].equals(coordShift, model.coordShift)) {
      model.coordShift = coordShift;
    }

    if (model.coordScale === null || coordScale === null || !gl_matrix__WEBPACK_IMPORTED_MODULE_0__["vec3"].equals(coordScale, model.coordScale)) {
      model.coordScale = coordScale;
    }

    model.coordShiftAndScaleEnabled = shouldApplyCoordShiftAndScale(model.coordShift, model.coordScale);

    if (model.coordShiftAndScaleEnabled) {
      model.inverseShiftAndScaleMatrix = computeInverseShiftAndScaleMatrix(model.coordShift, model.coordScale);
    } else {
      model.inverseShiftAndScaleMatrix = null;
    }
  };
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {
  elementCount: 0,
  stride: 0,
  colorBOStride: 0,
  vertexOffset: 0,
  normalOffset: 0,
  tCoordOffset: 0,
  tCoordComponents: 0,
  colorOffset: 0,
  colorComponents: 0,
  tcoordBO: null,
  customData: [],
  coordShift: null,
  coordScale: null,
  coordShiftAndScaleEnabled: false,
  inverseShiftAndScaleMatrix: null
}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance

  _BufferObject_js__WEBPACK_IMPORTED_MODULE_2__["default"].extend(publicAPI, model, initialValues);
  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].setGet(publicAPI, model, ['colorBO', 'elementCount', 'stride', 'colorBOStride', 'vertexOffset', 'normalOffset', 'tCoordOffset', 'tCoordComponents', 'colorOffset', 'colorComponents', 'customData']);
  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].get(publicAPI, model, ['coordShift', 'coordScale', 'coordShiftAndScaleEnabled', 'inverseShiftAndScaleMatrix']); // Object specific methods

  vtkOpenGLCellArrayBufferObject(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].newInstance(extend); // ----------------------------------------------------------------------------

var vtkCellArrayBufferObject = {
  newInstance: newInstance,
  extend: extend
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/CubeAxesActor.js":
/*!*************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Rendering/OpenGL/CubeAxesActor.js ***!
  \*************************************************************************/
/*! exports provided: default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return index; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _Core_CubeAxesActor_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Core/CubeAxesActor.js */ "../node_modules/@kitware/vtk.js/Rendering/Core/CubeAxesActor.js");
/* harmony import */ var _SceneGraph_ViewNode_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../SceneGraph/ViewNode.js */ "../node_modules/@kitware/vtk.js/Rendering/SceneGraph/ViewNode.js");
/* harmony import */ var _ViewNodeFactory_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ViewNodeFactory.js */ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/ViewNodeFactory.js");





// vtkOpenGLCubeAxesActor methods
// ----------------------------------------------------------------------------

function vtkOpenGLCubeAxesActor(publicAPI, model) {
  model.classHierarchy.push('vtkOpenGLCubeAxesActor'); // Builds myself.

  publicAPI.buildPass = function (prepass) {
    if (prepass) {
      model.openGLRenderer = publicAPI.getFirstAncestorOfType('vtkOpenGLRenderer');
      model.openGLRenderWindow = model.openGLRenderer.getParent();

      if (!model.CubeAxesActorHelper.getRenderable()) {
        model.CubeAxesActorHelper.setRenderable(model.renderable);
      }

      publicAPI.prepareNodes();
      publicAPI.addMissingNode(model.CubeAxesActorHelper.getTmActor());
      publicAPI.addMissingNode(model.renderable.getGridActor());
      publicAPI.removeUnusedNodes();
    }
  };

  publicAPI.opaquePass = function (prepass, renderPass) {
    if (prepass) {
      var camera = model.openGLRenderer ? model.openGLRenderer.getRenderable().getActiveCamera() : null;
      var tsize = model.openGLRenderer.getTiledSizeAndOrigin();
      model.CubeAxesActorHelper.updateAPISpecificData([tsize.usize, tsize.vsize], camera, model.openGLRenderWindow.getRenderable());
    }
  };
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance

  _SceneGraph_ViewNode_js__WEBPACK_IMPORTED_MODULE_2__["default"].extend(publicAPI, model, initialValues);
  model.CubeAxesActorHelper = _Core_CubeAxesActor_js__WEBPACK_IMPORTED_MODULE_1__["default"].newCubeAxesActorHelper(); // Object methods

  vtkOpenGLCubeAxesActor(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = Object(_macros_js__WEBPACK_IMPORTED_MODULE_0__["newInstance"])(extend, 'vtkOpenGLCubeAxesActor'); // ----------------------------------------------------------------------------

var index = {
  newInstance: newInstance,
  extend: extend
}; // Register ourself to OpenGL backend if imported

Object(_ViewNodeFactory_js__WEBPACK_IMPORTED_MODULE_3__["registerOverride"])('vtkCubeAxesActor', newInstance);




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/ForwardPass.js":
/*!***********************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Rendering/OpenGL/ForwardPass.js ***!
  \***********************************************************************/
/*! exports provided: default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkForwardPass$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _Framebuffer_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Framebuffer.js */ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/Framebuffer.js");
/* harmony import */ var _SceneGraph_RenderPass_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../SceneGraph/RenderPass.js */ "../node_modules/@kitware/vtk.js/Rendering/SceneGraph/RenderPass.js");




function vtkForwardPass(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkForwardPass'); // this pass implements a forward rendering pipeline
  // if both volumes and opaque geometry are present
  // it will mix the two together by capturing a zbuffer
  // first

  publicAPI.traverse = function (viewNode) {
    var parent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

    if (model.deleted) {
      return;
    } // we just render our delegates in order


    model.currentParent = parent; // build

    publicAPI.setCurrentOperation('buildPass');
    viewNode.traverse(publicAPI);
    var numlayers = viewNode.getRenderable().getNumberOfLayers(); // iterate over renderers

    var renderers = viewNode.getChildren();

    for (var i = 0; i < numlayers; i++) {
      for (var index = 0; index < renderers.length; index++) {
        var renNode = renderers[index];
        var ren = viewNode.getRenderable().getRenderers()[index];

        if (ren.getDraw() && ren.getLayer() === i) {
          // check for both opaque and volume actors
          model.opaqueActorCount = 0;
          model.translucentActorCount = 0;
          model.volumeCount = 0;
          model.overlayActorCount = 0;
          publicAPI.setCurrentOperation('queryPass');
          renNode.traverse(publicAPI); // do we need to capture a zbuffer?

          if (model.opaqueActorCount > 0 && model.volumeCount > 0 || model.depthRequested) {
            var size = viewNode.getFramebufferSize(); // make sure the framebuffer is setup

            if (model.framebuffer === null) {
              model.framebuffer = _Framebuffer_js__WEBPACK_IMPORTED_MODULE_1__["default"].newInstance();
            }

            model.framebuffer.setOpenGLRenderWindow(viewNode);
            model.framebuffer.saveCurrentBindingsAndBuffers();
            var fbSize = model.framebuffer.getSize();

            if (fbSize === null || fbSize[0] !== size[0] || fbSize[1] !== size[1]) {
              model.framebuffer.create(size[0], size[1]);
              model.framebuffer.populateFramebuffer();
            }

            model.framebuffer.bind();
            publicAPI.setCurrentOperation('opaqueZBufferPass');
            renNode.traverse(publicAPI);
            model.framebuffer.restorePreviousBindingsAndBuffers(); // reset now that we have done it

            model.depthRequested = false;
          }

          publicAPI.setCurrentOperation('cameraPass');
          renNode.traverse(publicAPI);

          if (model.opaqueActorCount > 0) {
            publicAPI.setCurrentOperation('opaquePass');
            renNode.traverse(publicAPI);
          }

          if (model.translucentActorCount > 0) {
            publicAPI.setCurrentOperation('translucentPass');
            renNode.traverse(publicAPI);
          }

          if (model.volumeCount > 0) {
            publicAPI.setCurrentOperation('volumePass');
            renNode.traverse(publicAPI);
          }

          if (model.overlayActorCount > 0) {
            publicAPI.setCurrentOperation('overlayPass');
            renNode.traverse(publicAPI);
          }
        }
      }
    }
  };

  publicAPI.getZBufferTexture = function () {
    if (model.framebuffer) {
      return model.framebuffer.getColorTexture();
    }

    return null;
  };

  publicAPI.requestDepth = function () {
    model.depthRequested = true;
  };

  publicAPI.incrementOpaqueActorCount = function () {
    return model.opaqueActorCount++;
  };

  publicAPI.incrementTranslucentActorCount = function () {
    return model.translucentActorCount++;
  };

  publicAPI.incrementVolumeCount = function () {
    return model.volumeCount++;
  };

  publicAPI.incrementOverlayActorCount = function () {
    return model.overlayActorCount++;
  };
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {
  opaqueActorCount: 0,
  translucentActorCount: 0,
  volumeCount: 0,
  overlayActorCount: 0,
  framebuffer: null,
  depthRequested: false
}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API

  _SceneGraph_RenderPass_js__WEBPACK_IMPORTED_MODULE_2__["default"].extend(publicAPI, model, initialValues);
  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].get(publicAPI, model, ['framebuffer']); // Object methods

  vtkForwardPass(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].newInstance(extend, 'vtkForwardPass'); // ----------------------------------------------------------------------------

var vtkForwardPass$1 = {
  newInstance: newInstance,
  extend: extend
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/Framebuffer.js":
/*!***********************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Rendering/OpenGL/Framebuffer.js ***!
  \***********************************************************************/
/*! exports provided: default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkOpenGLFramebuffer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _Texture_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Texture.js */ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/Texture.js");
/* harmony import */ var _Common_Core_DataArray_Constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../Common/Core/DataArray/Constants.js */ "../node_modules/@kitware/vtk.js/Common/Core/DataArray/Constants.js");
/* harmony import */ var _Texture_Constants_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Texture/Constants.js */ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/Texture/Constants.js");





// vtkFramebuffer methods
// ----------------------------------------------------------------------------

function vtkFramebuffer(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkFramebuffer');

  publicAPI.getBothMode = function () {
    return model.context.FRAMEBUFFER;
  }; // publicAPI.getDrawMode = () => model.context.DRAW_FRAMEBUFFER;
  // publicAPI.getReadMode = () => model.context.READ_FRAMEBUFFER;


  publicAPI.saveCurrentBindingsAndBuffers = function (modeIn) {
    var mode = typeof modeIn !== 'undefined' ? modeIn : publicAPI.getBothMode();
    publicAPI.saveCurrentBindings(mode);
    publicAPI.saveCurrentBuffers(mode);
  };

  publicAPI.saveCurrentBindings = function (modeIn) {
    var gl = model.context;
    model.previousDrawBinding = gl.getParameter(model.context.FRAMEBUFFER_BINDING);
    model.previousActiveFramebuffer = model.openGLRenderWindow.getActiveFramebuffer();
  };

  publicAPI.saveCurrentBuffers = function (modeIn) {// noop on webgl 1
  };

  publicAPI.restorePreviousBindingsAndBuffers = function (modeIn) {
    var mode = typeof modeIn !== 'undefined' ? modeIn : publicAPI.getBothMode();
    publicAPI.restorePreviousBindings(mode);
    publicAPI.restorePreviousBuffers(mode);
  };

  publicAPI.restorePreviousBindings = function (modeIn) {
    var gl = model.context;
    gl.bindFramebuffer(gl.FRAMEBUFFER, model.previousDrawBinding);
    model.openGLRenderWindow.setActiveFramebuffer(model.previousActiveFramebuffer);
  };

  publicAPI.restorePreviousBuffers = function (modeIn) {// currently a noop on webgl1
  };

  publicAPI.bind = function () {
    model.context.bindFramebuffer(model.context.FRAMEBUFFER, model.glFramebuffer);

    if (model.colorTexture) {
      model.colorTexture.bind();
    }

    model.openGLRenderWindow.setActiveFramebuffer(publicAPI);
  };

  publicAPI.create = function (width, height) {
    model.glFramebuffer = model.context.createFramebuffer();
    model.glFramebuffer.width = width;
    model.glFramebuffer.height = height;
  };

  publicAPI.setColorBuffer = function (texture) {
    var attachment = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
    var gl = model.context;
    var glAttachment = gl.COLOR_ATTACHMENT0;

    if (attachment > 0) {
      if (model.openGLRenderWindow.getWebgl2()) {
        glAttachment += attachment;
      } else {
        Object(_macros_js__WEBPACK_IMPORTED_MODULE_0__["vtkErrorMacro"])('Using multiple framebuffer attachments requires WebGL 2');
        return;
      }
    }

    model.colorTexture = texture;
    gl.framebufferTexture2D(gl.FRAMEBUFFER, glAttachment, gl.TEXTURE_2D, texture.getHandle(), 0);
  };

  publicAPI.removeColorBuffer = function () {
    var attachment = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
    var gl = model.context;
    var glAttachment = gl.COLOR_ATTACHMENT0;

    if (attachment > 0) {
      if (model.openGLRenderWindow.getWebgl2()) {
        glAttachment += attachment;
      } else {
        Object(_macros_js__WEBPACK_IMPORTED_MODULE_0__["vtkErrorMacro"])('Using multiple framebuffer attachments requires WebGL 2');
        return;
      }
    }

    gl.framebufferTexture2D(gl.FRAMEBUFFER, glAttachment, gl.TEXTURE_2D, null, 0);
  };

  publicAPI.setDepthBuffer = function (texture) {
    if (model.openGLRenderWindow.getWebgl2()) {
      var gl = model.context;
      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.TEXTURE_2D, texture.getHandle(), 0);
    } else {
      Object(_macros_js__WEBPACK_IMPORTED_MODULE_0__["vtkErrorMacro"])('Attaching depth buffer textures to fbo requires WebGL 2');
    }
  };

  publicAPI.removeDepthBuffer = function () {
    if (model.openGLRenderWindow.getWebgl2()) {
      var gl = model.context;
      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.TEXTURE_2D, null, 0);
    } else {
      Object(_macros_js__WEBPACK_IMPORTED_MODULE_0__["vtkErrorMacro"])('Attaching depth buffer textures to framebuffers requires WebGL 2');
    }
  };

  publicAPI.getGLFramebuffer = function () {
    return model.glFramebuffer;
  };

  publicAPI.setOpenGLRenderWindow = function (rw) {
    if (model.openGLRenderWindow === rw) {
      return;
    }

    publicAPI.releaseGraphicsResources();
    model.openGLRenderWindow = rw;
    model.context = null;

    if (rw) {
      model.context = model.openGLRenderWindow.getContext();
    }
  };

  publicAPI.releaseGraphicsResources = function () {
    if (model.glFramebuffer) {
      model.context.deleteFramebuffer(model.glFramebuffer);
    }

    if (model.colorTexture) {
      model.colorTexture.releaseGraphicsResources();
    }
  };

  publicAPI.getSize = function () {
    var size = [0, 0];

    if (model.glFramebuffer !== null) {
      size[0] = model.glFramebuffer.width;
      size[1] = model.glFramebuffer.height;
    }

    return size;
  };

  publicAPI.populateFramebuffer = function () {
    publicAPI.bind();
    var gl = model.context;
    var texture = _Texture_js__WEBPACK_IMPORTED_MODULE_1__["default"].newInstance();
    texture.setOpenGLRenderWindow(model.openGLRenderWindow);
    texture.setMinificationFilter(_Texture_Constants_js__WEBPACK_IMPORTED_MODULE_3__["Filter"].LINEAR);
    texture.setMagnificationFilter(_Texture_Constants_js__WEBPACK_IMPORTED_MODULE_3__["Filter"].LINEAR);
    texture.create2DFromRaw(model.glFramebuffer.width, model.glFramebuffer.height, 4, _Common_Core_DataArray_Constants_js__WEBPACK_IMPORTED_MODULE_2__["VtkDataTypes"].UNSIGNED_CHAR, null);
    publicAPI.setColorBuffer(texture); // for now do not count on having a depth buffer texture
    // as they are not standard webgl 1

    model.depthTexture = gl.createRenderbuffer();
    gl.bindRenderbuffer(gl.RENDERBUFFER, model.depthTexture);
    gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, model.glFramebuffer.width, model.glFramebuffer.height);
    gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, model.depthTexture);
  };
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {
  openGLRenderWindow: null,
  glFramebuffer: null,
  colorTexture: null,
  depthTexture: null,
  previousDrawBinding: 0,
  previousReadBinding: 0,
  previousDrawBuffer: 0,
  previousReadBuffer: 0,
  previousActiveFramebuffer: null
}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API

  Object(_macros_js__WEBPACK_IMPORTED_MODULE_0__["obj"])(publicAPI, model);
  Object(_macros_js__WEBPACK_IMPORTED_MODULE_0__["setGet"])(publicAPI, model, ['colorTexture']); // For more macro methods, see "Sources/macros.js"
  // Object specific methods

  vtkFramebuffer(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = Object(_macros_js__WEBPACK_IMPORTED_MODULE_0__["newInstance"])(extend, 'vtkFramebuffer'); // ----------------------------------------------------------------------------

var vtkOpenGLFramebuffer = {
  newInstance: newInstance,
  extend: extend
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/Glyph3DMapper.js":
/*!*************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Rendering/OpenGL/Glyph3DMapper.js ***!
  \*************************************************************************/
/*! exports provided: default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkGlyph3DMapper; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "../node_modules/@babel/runtime/helpers/defineProperty.js");
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! gl-matrix */ "../node_modules/gl-matrix/esm/index.js");
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _BufferObject_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./BufferObject.js */ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/BufferObject.js");
/* harmony import */ var _HardwareSelector_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./HardwareSelector.js */ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/HardwareSelector.js");
/* harmony import */ var _Core_Property_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../Core/Property.js */ "../node_modules/@kitware/vtk.js/Rendering/Core/Property.js");
/* harmony import */ var _PolyDataMapper_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./PolyDataMapper.js */ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/PolyDataMapper.js");
/* harmony import */ var _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./ShaderProgram.js */ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/ShaderProgram.js");
/* harmony import */ var _ViewNodeFactory_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./ViewNodeFactory.js */ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/ViewNodeFactory.js");










function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var vtkErrorMacro = _macros_js__WEBPACK_IMPORTED_MODULE_2__["vtkErrorMacro"];
var Representation = _Core_Property_js__WEBPACK_IMPORTED_MODULE_5__["default"].Representation;
var ObjectType = _BufferObject_js__WEBPACK_IMPORTED_MODULE_3__["default"].ObjectType;
var PassTypes = _HardwareSelector_js__WEBPACK_IMPORTED_MODULE_4__["default"].PassTypes;
var StartEvent = {
  type: 'StartEvent'
};
var EndEvent = {
  type: 'EndEvent'
}; // ----------------------------------------------------------------------------
// vtkOpenGLSphereMapper methods
// ----------------------------------------------------------------------------

function vtkOpenGLGlyph3DMapper(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkOpenGLGlyph3DMapper'); // Capture 'parentClass' api for internal use

  var superClass = _objectSpread({}, publicAPI);

  publicAPI.renderPiece = function (ren, actor) {
    publicAPI.invokeEvent(StartEvent);

    if (!model.renderable.getStatic()) {
      model.renderable.update();
    }

    model.currentInput = model.renderable.getInputData(1);
    publicAPI.invokeEvent(EndEvent);

    if (!model.currentInput) {
      vtkErrorMacro('No input!');
      return;
    } // if there are no points then we are done


    if (!model.currentInput.getPoints || !model.currentInput.getPoints().getNumberOfValues()) {
      return;
    } // apply faceCulling


    var gl = model.context;

    if (model.openGLRenderWindow.getWebgl2()) {
      model.hardwareSupport = true;
      model.extension = null;
    } else if (!model.extension) {
      model.extension = model.context.getExtension('ANGLE_instanced_arrays');
      model.hardwareSupport = !!model.extension;
    } // to test without extension support uncomment the next two lines
    // model.extension = null;
    // model.hardwareSupport = !!model.extension;


    var backfaceCulling = actor.getProperty().getBackfaceCulling();
    var frontfaceCulling = actor.getProperty().getFrontfaceCulling();

    if (!backfaceCulling && !frontfaceCulling) {
      model.openGLRenderWindow.disableCullFace();
    } else if (frontfaceCulling) {
      model.openGLRenderWindow.enableCullFace();
      gl.cullFace(gl.FRONT);
    } else {
      model.openGLRenderWindow.enableCullFace();
      gl.cullFace(gl.BACK);
    }

    publicAPI.renderPieceStart(ren, actor);
    publicAPI.renderPieceDraw(ren, actor);
    publicAPI.renderPieceFinish(ren, actor);
  };

  publicAPI.multiply4x4WithOffset = function (out, a, b, off) {
    var a00 = a[0];
    var a01 = a[1];
    var a02 = a[2];
    var a03 = a[3];
    var a10 = a[4];
    var a11 = a[5];
    var a12 = a[6];
    var a13 = a[7];
    var a20 = a[8];
    var a21 = a[9];
    var a22 = a[10];
    var a23 = a[11];
    var a30 = a[12];
    var a31 = a[13];
    var a32 = a[14];
    var a33 = a[15]; // Cache only the current line of the second matrix

    var b0 = b[off];
    var b1 = b[off + 1];
    var b2 = b[off + 2];
    var b3 = b[off + 3];
    out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;
    out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;
    out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;
    out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;
    b0 = b[off + 4];
    b1 = b[off + 5];
    b2 = b[off + 6];
    b3 = b[off + 7];
    out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;
    out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;
    out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;
    out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;
    b0 = b[off + 8];
    b1 = b[off + 9];
    b2 = b[off + 10];
    b3 = b[off + 11];
    out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;
    out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;
    out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;
    out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;
    b0 = b[off + 12];
    b1 = b[off + 13];
    b2 = b[off + 14];
    b3 = b[off + 15];
    out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;
    out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;
    out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;
    out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;
  };

  publicAPI.replaceShaderNormal = function (shaders, ren, actor) {
    if (model.hardwareSupport) {
      var lastLightComplexity = model.lastBoundBO.getReferenceByName('lastLightComplexity');

      if (lastLightComplexity > 0) {
        var VSSource = shaders.Vertex;

        if (model.lastBoundBO.getCABO().getNormalOffset()) {
          VSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__["default"].substitute(VSSource, '//VTK::Normal::Dec', ['attribute vec3 normalMC;', 'attribute mat3 gNormal;', 'uniform mat3 normalMatrix;', 'varying vec3 normalVCVSOutput;']).result;
          VSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__["default"].substitute(VSSource, '//VTK::Normal::Impl', ['normalVCVSOutput = normalMatrix * gNormal * normalMC;']).result;
        }

        shaders.Vertex = VSSource;
      }
    }

    superClass.replaceShaderNormal(shaders, ren, actor);
  };

  publicAPI.replaceShaderColor = function (shaders, ren, actor) {
    if (model.hardwareSupport && model.renderable.getColorArray()) {
      var VSSource = shaders.Vertex;
      var GSSource = shaders.Geometry;
      var FSSource = shaders.Fragment;
      var lastLightComplexity = model.lastBoundBO.getReferenceByName('lastLightComplexity'); // create the material/color property declarations, and VS implementation
      // these are always defined

      var colorDec = ['uniform float ambient;', 'uniform float diffuse;', 'uniform float specular;', 'uniform float opacityUniform; // the fragment opacity']; // add more for specular

      if (lastLightComplexity) {
        colorDec = colorDec.concat(['uniform vec3 specularColorUniform;', 'uniform float specularPowerUniform;']);
      } // now handle the more complex fragment shader implementation
      // the following are always defined variables.  We start
      // by assigning a default value from the uniform


      var colorImpl = ['vec3 ambientColor;', '  vec3 diffuseColor;', '  float opacity;'];

      if (lastLightComplexity) {
        colorImpl = colorImpl.concat(['  vec3 specularColor;', '  float specularPower;']);
      }

      colorImpl = colorImpl.concat(['  opacity = opacityUniform;']);

      if (lastLightComplexity) {
        colorImpl = colorImpl.concat(['  specularColor = specularColorUniform;', '  specularPower = specularPowerUniform;']);
      }

      if (!model.drawingEdges) {
        colorDec = colorDec.concat(['varying vec4 vertexColorVSOutput;']);
        VSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__["default"].substitute(VSSource, '//VTK::Color::Dec', ['attribute vec4 gColor;', 'varying vec4 vertexColorVSOutput;']).result;
        VSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__["default"].substitute(VSSource, '//VTK::Color::Impl', ['vertexColorVSOutput = gColor;']).result;
        GSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__["default"].substitute(GSSource, '//VTK::Color::Dec', ['in vec4 vertexColorVSOutput[];', 'out vec4 vertexColorGSOutput;']).result;
        GSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__["default"].substitute(GSSource, '//VTK::Color::Impl', ['vertexColorGSOutput = vertexColorVSOutput[i];']).result;
        colorImpl = colorImpl.concat(['  diffuseColor = vertexColorVSOutput.rgb;', '  ambientColor = vertexColorVSOutput.rgb;', '  opacity = opacity*vertexColorVSOutput.a;']);
      }

      FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__["default"].substitute(FSSource, '//VTK::Color::Impl', colorImpl).result;
      FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__["default"].substitute(FSSource, '//VTK::Color::Dec', colorDec).result;
      shaders.Vertex = VSSource;
      shaders.Geometry = GSSource;
      shaders.Fragment = FSSource;
    }

    superClass.replaceShaderColor(shaders, ren, actor);
  };

  publicAPI.replaceShaderPositionVC = function (shaders, ren, actor) {
    if (model.hardwareSupport) {
      var VSSource = shaders.Vertex; // do we need the vertex in the shader in View Coordinates

      var lastLightComplexity = model.lastBoundBO.getReferenceByName('lastLightComplexity');

      if (lastLightComplexity > 0) {
        VSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__["default"].substitute(VSSource, '//VTK::PositionVC::Impl', ['vec4 gVertexMC = gMatrix * vertexMC;', 'vertexVCVSOutput = MCVCMatrix * gVertexMC;', '  gl_Position = MCPCMatrix * gVertexMC;']).result;
        VSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__["default"].substitute(VSSource, '//VTK::Camera::Dec', ['attribute mat4 gMatrix;', 'uniform mat4 MCPCMatrix;', 'uniform mat4 MCVCMatrix;']).result;
      } else {
        VSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__["default"].substitute(VSSource, '//VTK::Camera::Dec', ['attribute mat4 gMatrix;', 'uniform mat4 MCPCMatrix;']).result;
        VSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__["default"].substitute(VSSource, '//VTK::PositionVC::Impl', ['vec4 gVertexMC = gMatrix * vertexMC;', '  gl_Position = MCPCMatrix * gVertexMC;']).result;
      }

      shaders.Vertex = VSSource;
    }

    superClass.replaceShaderPositionVC(shaders, ren, actor);
  };

  publicAPI.replaceShaderPicking = function (shaders, ren, actor) {
    if (model.hardwareSupport) {
      var FSSource = shaders.Fragment;
      var VSSource = shaders.Vertex;
      VSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__["default"].substitute(VSSource, '//VTK::Picking::Dec', ['attribute vec3 mapperIndexVS;', 'varying vec3 mapperIndexVSOutput;']).result;
      VSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__["default"].substitute(VSSource, '//VTK::Picking::Impl', '  mapperIndexVSOutput = mapperIndexVS;').result;
      shaders.Vertex = VSSource;
      FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__["default"].substitute(FSSource, '//VTK::Picking::Dec', ['varying vec3 mapperIndexVSOutput;', 'uniform vec3 mapperIndex;', 'uniform int picking;']).result;
      FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__["default"].substitute(FSSource, '//VTK::Picking::Impl', ['  vec4 pickColor = picking == 2 ? vec4(mapperIndexVSOutput,1.0) : vec4(mapperIndex,1.0);', '  gl_FragData[0] = picking != 0 ? pickColor : gl_FragData[0];']).result;
      shaders.Fragment = FSSource;
    } else {
      superClass.replaceShaderPicking(shaders, ren, actor);
    }
  };

  publicAPI.updateGlyphShaderParameters = function (normalMatrixUsed, mcvcMatrixUsed, cellBO, carray, garray, narray, p, selector) {
    var program = cellBO.getProgram();

    if (normalMatrixUsed) {
      var a = model.normalMatrix;
      var b = narray;
      var ofs = p * 9;
      var out = model.tmpMat3;
      var a00 = a[0];
      var a01 = a[1];
      var a02 = a[2];
      var a10 = a[3];
      var a11 = a[4];
      var a12 = a[5];
      var a20 = a[6];
      var a21 = a[7];
      var a22 = a[8];
      var b00 = b[ofs];
      var b01 = b[ofs + 1];
      var b02 = b[ofs + 2];
      var b10 = b[ofs + 3];
      var b11 = b[ofs + 4];
      var b12 = b[ofs + 5];
      var b20 = b[ofs + 6];
      var b21 = b[ofs + 7];
      var b22 = b[ofs + 8];
      out[0] = b00 * a00 + b01 * a10 + b02 * a20;
      out[1] = b00 * a01 + b01 * a11 + b02 * a21;
      out[2] = b00 * a02 + b01 * a12 + b02 * a22;
      out[3] = b10 * a00 + b11 * a10 + b12 * a20;
      out[4] = b10 * a01 + b11 * a11 + b12 * a21;
      out[5] = b10 * a02 + b11 * a12 + b12 * a22;
      out[6] = b20 * a00 + b21 * a10 + b22 * a20;
      out[7] = b20 * a01 + b21 * a11 + b22 * a21;
      out[8] = b20 * a02 + b21 * a12 + b22 * a22;
      program.setUniformMatrix3x3('normalMatrix', model.tmpMat3);
    }

    publicAPI.multiply4x4WithOffset(model.tmpMat4, model.mcpcMatrix, garray, p * 16);
    program.setUniformMatrix('MCPCMatrix', model.tmpMat4);

    if (mcvcMatrixUsed) {
      publicAPI.multiply4x4WithOffset(model.tmpMat4, model.mcvcMatrix, garray, p * 16);
      program.setUniformMatrix('MCVCMatrix', model.tmpMat4);
    } // set color


    if (carray) {
      var cdata = carray.getData();
      model.tmpColor[0] = cdata[p * 4] / 255.0;
      model.tmpColor[1] = cdata[p * 4 + 1] / 255.0;
      model.tmpColor[2] = cdata[p * 4 + 2] / 255.0;
      program.setUniform3fArray('ambientColorUniform', model.tmpColor);
      program.setUniform3fArray('diffuseColorUniform', model.tmpColor);
    }

    if (selector) {
      program.setUniform3fArray('mapperIndex', selector.getPropColorValue());
    }
  };

  publicAPI.renderPieceDraw = function (ren, actor) {
    var representation = actor.getProperty().getRepresentation();
    var gl = model.context;
    var drawSurfaceWithEdges = actor.getProperty().getEdgeVisibility() && representation === Representation.SURFACE; // [WMVP]C == {world, model, view, projection} coordinates
    // E.g., WCPC == world to projection coordinate transformation

    var keyMats = model.openGLCamera.getKeyMatrices(ren);
    var actMats = model.openGLActor.getKeyMatrices(); // precompute the actor+camera mats once

    gl_matrix__WEBPACK_IMPORTED_MODULE_1__["mat3"].multiply(model.normalMatrix, keyMats.normalMatrix, actMats.normalMatrix);
    gl_matrix__WEBPACK_IMPORTED_MODULE_1__["mat4"].multiply(model.mcpcMatrix, keyMats.wcpc, actMats.mcwc);
    gl_matrix__WEBPACK_IMPORTED_MODULE_1__["mat4"].multiply(model.mcvcMatrix, keyMats.wcvc, actMats.mcwc);
    var garray = model.renderable.getMatrixArray();
    var narray = model.renderable.getNormalArray();
    var carray = model.renderable.getColorArray();
    var numPts = garray.length / 16;
    var compositePass = false;

    if (model.openGLRenderer.getSelector()) {
      if (model.openGLRenderer.getSelector().getCurrentPass() === PassTypes.COMPOSITE_INDEX_PASS) {
        compositePass = true;
      }
    } // for every primitive type


    for (var i = model.primTypes.Start; i < model.primTypes.End; i++) {
      // if there are entries
      var cabo = model.primitives[i].getCABO();

      if (cabo.getElementCount()) {
        // are we drawing edges
        model.drawingEdges = drawSurfaceWithEdges && (i === model.primTypes.TrisEdges || i === model.primTypes.TriStripsEdges);
        publicAPI.updateShaders(model.primitives[i], ren, actor);
        var program = model.primitives[i].getProgram();
        var mode = publicAPI.getOpenGLMode(representation, i);
        var normalMatrixUsed = program.isUniformUsed('normalMatrix');
        var mcvcMatrixUsed = program.isUniformUsed('MCVCMatrix');

        if (model.hardwareSupport) {
          if (model.extension) {
            model.extension.drawArraysInstancedANGLE(mode, 0, cabo.getElementCount(), numPts);
          } else {
            gl.drawArraysInstanced(mode, 0, cabo.getElementCount(), numPts);
          }
        } else {
          // draw the array multiple times with different cam matrix
          for (var p = 0; p < numPts; ++p) {
            if (compositePass) {
              model.openGLRenderer.getSelector().renderCompositeIndex(p);
            }

            publicAPI.updateGlyphShaderParameters(normalMatrixUsed, mcvcMatrixUsed, model.primitives[i], carray, garray, narray, p, compositePass ? model.openGLRenderer.getSelector() : null);
            gl.drawArrays(mode, 0, cabo.getElementCount());
          }
        }
      }
    }
  };

  publicAPI.setMapperShaderParameters = function (cellBO, ren, actor) {
    if (cellBO.getCABO().getElementCount() && (model.glyphBOBuildTime.getMTime() > cellBO.getAttributeUpdateTime().getMTime() || cellBO.getShaderSourceTime().getMTime() > cellBO.getAttributeUpdateTime().getMTime())) {
      if (cellBO.getProgram().isAttributeUsed('gMatrix')) {
        if (!cellBO.getVAO().addAttributeMatrixWithDivisor(cellBO.getProgram(), model.matrixBuffer, 'gMatrix', 0, 64, model.context.FLOAT, 4, false, 1)) {
          vtkErrorMacro('Error setting gMatrix in shader VAO.');
        }
      } else {
        cellBO.getVAO().removeAttributeArray('gMatrix');
      }

      if (cellBO.getProgram().isAttributeUsed('gNormal')) {
        if (!cellBO.getVAO().addAttributeMatrixWithDivisor(cellBO.getProgram(), model.normalBuffer, 'gNormal', 0, 36, model.context.FLOAT, 3, false, 1)) {
          vtkErrorMacro('Error setting gNormal in shader VAO.');
        }
      } else {
        cellBO.getVAO().removeAttributeArray('gNormal');
      }

      if (cellBO.getProgram().isAttributeUsed('gColor')) {
        if (!cellBO.getVAO().addAttributeArrayWithDivisor(cellBO.getProgram(), model.colorBuffer, 'gColor', 0, 4, model.context.UNSIGNED_BYTE, 4, true, 1, false)) {
          vtkErrorMacro('Error setting gColor in shader VAO.');
        }
      } else {
        cellBO.getVAO().removeAttributeArray('gColor');
      }

      if (cellBO.getProgram().isAttributeUsed('mapperIndexVS')) {
        if (!cellBO.getVAO().addAttributeArrayWithDivisor(cellBO.getProgram(), model.pickBuffer, 'mapperIndexVS', 0, 4, model.context.UNSIGNED_BYTE, 4, true, 1, false)) {
          vtkErrorMacro('Error setting mapperIndexVS in shader VAO.');
        }
      } else {
        cellBO.getVAO().removeAttributeArray('mapperIndexVS');
      }

      superClass.setMapperShaderParameters(cellBO, ren, actor);
      cellBO.getAttributeUpdateTime().modified();
      return;
    }

    superClass.setMapperShaderParameters(cellBO, ren, actor);
  };

  publicAPI.getNeedToRebuildBufferObjects = function (ren, actor) {
    model.renderable.buildArrays(); // first do a coarse check
    // Note that the actor's mtime includes it's properties mtime

    var vmtime = model.VBOBuildTime.getMTime();

    if (vmtime < model.renderable.getBuildTime().getMTime()) {
      return true;
    }

    return superClass.getNeedToRebuildBufferObjects(ren, actor);
  };

  publicAPI.buildBufferObjects = function (ren, actor) {
    if (model.hardwareSupport) {
      // update the buffer objects if needed
      var garray = model.renderable.getMatrixArray();
      var narray = model.renderable.getNormalArray();
      var carray = model.renderable.getColorArray();

      if (!model.matrixBuffer) {
        model.matrixBuffer = _BufferObject_js__WEBPACK_IMPORTED_MODULE_3__["default"].newInstance();
        model.matrixBuffer.setOpenGLRenderWindow(model.openGLRenderWindow);
        model.normalBuffer = _BufferObject_js__WEBPACK_IMPORTED_MODULE_3__["default"].newInstance();
        model.normalBuffer.setOpenGLRenderWindow(model.openGLRenderWindow);
        model.colorBuffer = _BufferObject_js__WEBPACK_IMPORTED_MODULE_3__["default"].newInstance();
        model.colorBuffer.setOpenGLRenderWindow(model.openGLRenderWindow);
        model.pickBuffer = _BufferObject_js__WEBPACK_IMPORTED_MODULE_3__["default"].newInstance();
        model.pickBuffer.setOpenGLRenderWindow(model.openGLRenderWindow);
      }

      if (model.renderable.getBuildTime().getMTime() > model.glyphBOBuildTime.getMTime()) {
        model.matrixBuffer.upload(garray, ObjectType.ARRAY_BUFFER);
        model.normalBuffer.upload(narray, ObjectType.ARRAY_BUFFER);

        if (carray) {
          model.colorBuffer.upload(carray.getData(), ObjectType.ARRAY_BUFFER);
        } else {
          model.colorBuffer.releaseGraphicsResources();
        }

        var numPts = garray.length / 16;
        var parray = new Uint8Array(4 * numPts);

        for (var i = 0; i < numPts; ++i) {
          var value = i + 1;
          var offset = i * 4;
          parray[offset] = value % 256;
          value -= parray[offset];
          value /= 256;
          parray[offset + 1] = value % 256;
          value -= parray[offset + 1];
          value /= 256;
          parray[offset + 2] = value % 256;
          parray[offset + 3] = 255;
        }

        model.pickBuffer.upload(parray, ObjectType.ARRAY_BUFFER);
        model.glyphBOBuildTime.modified();
      }
    }

    return superClass.buildBufferObjects(ren, actor);
  };
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {
  normalMatrix: null,
  mcpcMatrix: null,
  mcwcMatrix: null
}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance

  _PolyDataMapper_js__WEBPACK_IMPORTED_MODULE_6__["default"].extend(publicAPI, model, initialValues);
  model.tmpMat3 = gl_matrix__WEBPACK_IMPORTED_MODULE_1__["mat3"].identity(new Float64Array(9));
  model.normalMatrix = gl_matrix__WEBPACK_IMPORTED_MODULE_1__["mat3"].identity(new Float64Array(9));
  model.mcpcMatrix = gl_matrix__WEBPACK_IMPORTED_MODULE_1__["mat4"].identity(new Float64Array(16));
  model.mcvcMatrix = gl_matrix__WEBPACK_IMPORTED_MODULE_1__["mat4"].identity(new Float64Array(16));
  model.tmpColor = [];
  model.glyphBOBuildTime = {};
  Object(_macros_js__WEBPACK_IMPORTED_MODULE_2__["obj"])(model.glyphBOBuildTime, {
    mtime: 0
  }); // Object methods

  vtkOpenGLGlyph3DMapper(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = Object(_macros_js__WEBPACK_IMPORTED_MODULE_2__["newInstance"])(extend, 'vtkOpenGLGlyph3DMapper'); // ----------------------------------------------------------------------------

var vtkGlyph3DMapper = {
  newInstance: newInstance,
  extend: extend
}; // Register ourself to OpenGL backend if imported

Object(_ViewNodeFactory_js__WEBPACK_IMPORTED_MODULE_8__["registerOverride"])('vtkGlyph3DMapper', newInstance);




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/HardwareSelector.js":
/*!****************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Rendering/OpenGL/HardwareSelector.js ***!
  \****************************************************************************/
/*! exports provided: default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkHardwareSelector; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "../node_modules/@babel/runtime/helpers/defineProperty.js");
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "../node_modules/@babel/runtime/helpers/toConsumableArray.js");
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ "../node_modules/@babel/runtime/helpers/asyncToGenerator.js");
/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/regenerator */ "../node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _HardwareSelector_Constants_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./HardwareSelector/Constants.js */ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/HardwareSelector/Constants.js");
/* harmony import */ var _Core_HardwareSelector_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../Core/HardwareSelector.js */ "../node_modules/@kitware/vtk.js/Rendering/Core/HardwareSelector.js");
/* harmony import */ var _Framebuffer_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Framebuffer.js */ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/Framebuffer.js");
/* harmony import */ var _Common_DataModel_SelectionNode_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../Common/DataModel/SelectionNode.js */ "../node_modules/@kitware/vtk.js/Common/DataModel/SelectionNode.js");
/* harmony import */ var _Common_DataModel_DataSet_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../Common/DataModel/DataSet.js */ "../node_modules/@kitware/vtk.js/Common/DataModel/DataSet.js");











function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var PassTypes = _HardwareSelector_Constants_js__WEBPACK_IMPORTED_MODULE_5__["default"].PassTypes;
var SelectionContent = _Common_DataModel_SelectionNode_js__WEBPACK_IMPORTED_MODULE_8__["default"].SelectionContent,
    SelectionField = _Common_DataModel_SelectionNode_js__WEBPACK_IMPORTED_MODULE_8__["default"].SelectionField;
var FieldAssociations = _Common_DataModel_DataSet_js__WEBPACK_IMPORTED_MODULE_9__["default"].FieldAssociations;
var vtkErrorMacro = _macros_js__WEBPACK_IMPORTED_MODULE_4__["default"].vtkErrorMacro;
var idOffset = 1;

function getInfoHash(info) {
  return "".concat(info.propID, " ").concat(info.compositeID);
}

function convert(xx, yy, pb, area) {
  if (!pb) {
    return 0;
  }

  var offset = (yy * (area[2] - area[0] + 1) + xx) * 4;
  var rgb = [];
  rgb[0] = pb[offset];
  rgb[1] = pb[offset + 1];
  rgb[2] = pb[offset + 2];
  var val = rgb[2];
  val *= 256;
  val += rgb[1];
  val *= 256;
  val += rgb[0];
  return val;
}

function getPixelInformationWithData(buffdata, inDisplayPosition, maxDistance, outSelectedPosition) {
  // Base case
  var maxDist = maxDistance < 0 ? 0 : maxDistance;

  if (maxDist === 0) {
    outSelectedPosition[0] = inDisplayPosition[0];
    outSelectedPosition[1] = inDisplayPosition[1];

    if (inDisplayPosition[0] < buffdata.area[0] || inDisplayPosition[0] > buffdata.area[2] || inDisplayPosition[1] < buffdata.area[1] || inDisplayPosition[1] > buffdata.area[3]) {
      return null;
    } // offset inDisplayPosition based on the lower-left-corner of the Area.


    var displayPosition = [inDisplayPosition[0] - buffdata.area[0], inDisplayPosition[1] - buffdata.area[1]];
    var actorid = convert(displayPosition[0], displayPosition[1], buffdata.pixBuffer[PassTypes.ACTOR_PASS], buffdata.area);

    if (actorid <= 0 || actorid - idOffset >= buffdata.props.length) {
      // the pixel did not hit any actor.
      return null;
    }

    var _info = {};
    _info.valid = true;
    _info.propID = actorid - idOffset;
    _info.prop = buffdata.props[_info.propID];
    var compositeID = convert(displayPosition[0], displayPosition[1], buffdata.pixBuffer[PassTypes.COMPOSITE_INDEX_PASS], buffdata.area);

    if (compositeID < 0 || compositeID > 0xffffff) {
      compositeID = 0;
    }

    _info.compositeID = compositeID - idOffset;

    if (buffdata.captureZValues) {
      var offset = (displayPosition[1] * (buffdata.area[2] - buffdata.area[0] + 1) + displayPosition[0]) * 4;
      _info.zValue = (256 * buffdata.zBuffer[offset] + buffdata.zBuffer[offset + 1]) / 65535.0;
      _info.displayPosition = inDisplayPosition;
    }

    return _info;
  } // Iterate over successively growing boxes.
  // They recursively call the base case to handle single pixels.


  var dispPos = [inDisplayPosition[0], inDisplayPosition[1]];
  var curPos = [0, 0];
  var info = getPixelInformationWithData(buffdata, inDisplayPosition, 0, outSelectedPosition);

  if (info && info.valid) {
    return info;
  }

  for (var dist = 1; dist < maxDist; ++dist) {
    // Vertical sides of box.
    for (var y = dispPos[1] > dist ? dispPos[1] - dist : 0; y <= dispPos[1] + dist; ++y) {
      curPos[1] = y;

      if (dispPos[0] >= dist) {
        curPos[0] = dispPos[0] - dist;
        info = getPixelInformationWithData(buffdata, curPos, 0, outSelectedPosition);

        if (info && info.valid) {
          return info;
        }
      }

      curPos[0] = dispPos[0] + dist;
      info = getPixelInformationWithData(buffdata, curPos, 0, outSelectedPosition);

      if (info && info.valid) {
        return info;
      }
    } // Horizontal sides of box.


    for (var x = dispPos[0] >= dist ? dispPos[0] - (dist - 1) : 0; x <= dispPos[0] + (dist - 1); ++x) {
      curPos[0] = x;

      if (dispPos[1] >= dist) {
        curPos[1] = dispPos[1] - dist;
        info = getPixelInformationWithData(buffdata, curPos, 0, outSelectedPosition);

        if (info && info.valid) {
          return info;
        }
      }

      curPos[1] = dispPos[1] + dist;
      info = getPixelInformationWithData(buffdata, curPos, 0, outSelectedPosition);

      if (info && info.valid) {
        return info;
      }
    }
  } // nothing hit.


  outSelectedPosition[0] = inDisplayPosition[0];
  outSelectedPosition[1] = inDisplayPosition[1];
  return null;
} //-----------------------------------------------------------------------------


function convertSelection(fieldassociation, dataMap, captureZValues, renderer, openGLRenderWindow) {
  var sel = [];
  var count = 0;
  dataMap.forEach(function (value, key) {
    var child = _Common_DataModel_SelectionNode_js__WEBPACK_IMPORTED_MODULE_8__["default"].newInstance();
    child.setContentType(SelectionContent.INDICES);

    switch (fieldassociation) {
      case FieldAssociations.FIELD_ASSOCIATION_CELLS:
        child.setFieldType(SelectionField.CELL);
        break;

      case FieldAssociations.FIELD_ASSOCIATION_POINTS:
        child.setFieldType(SelectionField.POINT);
        break;

      default:
        vtkErrorMacro('Unknown field association');
    }

    child.getProperties().propID = value.info.propID;
    child.getProperties().prop = value.info.prop;
    child.getProperties().compositeID = value.info.compositeID;
    child.getProperties().pixelCount = value.pixelCount;

    if (captureZValues) {
      child.getProperties().displayPosition = [value.info.displayPosition[0], value.info.displayPosition[1], value.info.zValue];
      child.getProperties().worldPosition = openGLRenderWindow.displayToWorld(value.info.displayPosition[0], value.info.displayPosition[1], value.info.zValue, renderer);
    }

    child.setSelectionList(value.attributeIDs);
    sel[count] = child;
    count++;
  });
  return sel;
} //----------------------------------------------------------------------------


function generateSelectionWithData(buffdata, fx1, fy1, fx2, fy2) {
  var x1 = Math.floor(fx1);
  var y1 = Math.floor(fy1);
  var x2 = Math.floor(fx2);
  var y2 = Math.floor(fy2);
  var dataMap = new Map();
  var outSelectedPosition = [0, 0];

  for (var yy = y1; yy <= y2; yy++) {
    for (var xx = x1; xx <= x2; xx++) {
      var pos = [xx, yy];
      var info = getPixelInformationWithData(buffdata, pos, 0, outSelectedPosition);

      if (info && info.valid) {
        var hash = getInfoHash(info);

        if (!dataMap.has(hash)) {
          dataMap.set(hash, {
            info: info,
            pixelCount: 1,
            attributeIDs: [info.attributeID]
          });
        } else {
          var dmv = dataMap.get(hash);
          dmv.pixelCount++;

          if (buffdata.captureZValues) {
            if (info.zValue < dmv.info.zValue) {
              dmv.info = info;
            }
          }

          if (dmv.attributeIDs.indexOf(info.attributeID) === -1) {
            dmv.attributeIDs.push(info.attributeID);
          }
        }
      }
    }
  }

  return convertSelection(buffdata.fieldAssociation, dataMap, buffdata.captureZValues, buffdata.renderer, buffdata.openGLRenderWindow);
} // ----------------------------------------------------------------------------
// vtkOpenGLHardwareSelector methods
// ----------------------------------------------------------------------------


function vtkOpenGLHardwareSelector(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkOpenGLHardwareSelector'); //----------------------------------------------------------------------------

  publicAPI.releasePixBuffers = function () {
    model.pixBuffer = [];
    model.zBuffer = null;
  }; //----------------------------------------------------------------------------


  publicAPI.beginSelection = function () {
    model.openGLRenderer = model.openGLRenderWindow.getViewNodeFor(model.renderer);
    model.maxAttributeId = 0;
    var size = model.openGLRenderWindow.getSize();

    if (!model.framebuffer) {
      model.framebuffer = _Framebuffer_js__WEBPACK_IMPORTED_MODULE_7__["default"].newInstance();
      model.framebuffer.setOpenGLRenderWindow(model.openGLRenderWindow);
      model.framebuffer.saveCurrentBindingsAndBuffers();
      model.framebuffer.create(size[0], size[1]); // this calls model.framebuffer.bind()

      model.framebuffer.populateFramebuffer();
    } else {
      model.framebuffer.setOpenGLRenderWindow(model.openGLRenderWindow);
      model.framebuffer.saveCurrentBindingsAndBuffers();
      var fbSize = model.framebuffer.getSize();

      if (fbSize[0] !== size[0] || fbSize[1] !== size[1]) {
        model.framebuffer.create(size[0], size[1]); // this calls model.framebuffer.bind()

        model.framebuffer.populateFramebuffer();
      } else {
        model.framebuffer.bind();
      }
    }

    model.openGLRenderer.clear();
    model.openGLRenderer.setSelector(publicAPI);
    model.hitProps = {};
    model.props = [];
    publicAPI.releasePixBuffers();
  }; //----------------------------------------------------------------------------


  publicAPI.endSelection = function () {
    model.hitProps = {};
    model.openGLRenderer.setSelector(null);
    model.framebuffer.restorePreviousBindingsAndBuffers();
  };

  publicAPI.preCapturePass = function () {};

  publicAPI.postCapturePass = function () {}; //----------------------------------------------------------------------------


  publicAPI.select = function () {
    var sel = null;

    if (publicAPI.captureBuffers()) {
      sel = publicAPI.generateSelection(model.area[0], model.area[1], model.area[2], model.area[3]);
      publicAPI.releasePixBuffers();
    }

    return sel;
  };

  publicAPI.getSourceDataAsync = /*#__PURE__*/function () {
    var _ref = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default.a.mark(function _callee(renderer, fx1, fy1, fx2, fy2) {
      var size, result;
      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default.a.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              // assign the renderer
              model.renderer = renderer; // set area to all if no arguments provided

              if (fx1 === undefined) {
                size = model.openGLRenderWindow.getSize();
                publicAPI.setArea(0, 0, size[0] - 1, size[1] - 1);
              } else {
                publicAPI.setArea(fx1, fy1, fx2, fy2);
              } // just do capture buffers and package up the result


              if (publicAPI.captureBuffers()) {
                _context.next = 4;
                break;
              }

              return _context.abrupt("return", false);

            case 4:
              result = {
                area: _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_1___default()(model.area),
                pixBuffer: _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_1___default()(model.pixBuffer),
                captureZValues: model.captureZValues,
                zBuffer: model.zBuffer,
                props: _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_1___default()(model.props),
                fieldAssociation: model.fieldAssociation,
                renderer: renderer,
                openGLRenderWindow: model.openGLRenderWindow
              };

              result.generateSelection = function () {
                for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
                  args[_key] = arguments[_key];
                }

                return generateSelectionWithData.apply(void 0, [result].concat(args));
              };

              return _context.abrupt("return", result);

            case 7:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));

    return function (_x, _x2, _x3, _x4, _x5) {
      return _ref.apply(this, arguments);
    };
  }(); //----------------------------------------------------------------------------


  publicAPI.captureBuffers = function () {
    if (!model.renderer || !model.openGLRenderWindow) {
      vtkErrorMacro('Renderer and view must be set before calling Select.');
      return false;
    }

    model.openGLRenderer = model.openGLRenderWindow.getViewNodeFor(model.renderer); // todo revisit making selection part of core
    // then we can do this in core

    model.openGLRenderWindow.getRenderable().preRender(); // int rgba[4];
    // rwin.getColorBufferSizes(rgba);
    // if (rgba[0] < 8 || rgba[1] < 8 || rgba[2] < 8) {
    //   vtkErrorMacro("Color buffer depth must be at least 8 bit. "
    //     "Currently: " << rgba[0] << ", " << rgba[1] << ", " <<rgba[2]);
    //   return false;
    // }

    publicAPI.invokeEvent({
      type: 'StartEvent'
    }); // Initialize renderer for selection.
    // change the renderer's background to black, which will indicate a miss

    model.originalBackground = model.renderer.getBackgroundByReference();
    model.renderer.setBackground(0.0, 0.0, 0.0);
    var rpasses = model.openGLRenderWindow.getRenderPasses();
    publicAPI.beginSelection();

    for (model.currentPass = PassTypes.MIN_KNOWN_PASS; model.currentPass <= PassTypes.COMPOSITE_INDEX_PASS; model.currentPass++) {
      if (publicAPI.passRequired(model.currentPass)) {
        publicAPI.preCapturePass(model.currentPass);

        if (model.captureZValues && model.currentPass === PassTypes.ACTOR_PASS && typeof rpasses[0].requestDepth === 'function' && typeof rpasses[0].getFramebuffer === 'function') {
          rpasses[0].requestDepth();
          model.openGLRenderWindow.traverseAllPasses();
        } else {
          model.openGLRenderWindow.traverseAllPasses();
        }

        publicAPI.postCapturePass(model.currentPass);
        publicAPI.savePixelBuffer(model.currentPass);
      }
    }

    publicAPI.endSelection(); // restore original background

    model.renderer.setBackground(model.originalBackground);
    publicAPI.invokeEvent({
      type: 'EndEvent'
    }); // restore image, not needed?
    // model.openGLRenderWindow.traverseAllPasses();

    return true;
  }; //----------------------------------------------------------------------------


  publicAPI.passRequired = function (pass) {
    return true;
  }; //----------------------------------------------------------------------------


  publicAPI.savePixelBuffer = function (passNo) {
    model.pixBuffer[passNo] = model.openGLRenderWindow.getPixelData(model.area[0], model.area[1], model.area[2], model.area[3]);

    if (passNo === PassTypes.ACTOR_PASS) {
      if (model.captureZValues) {
        var rpasses = model.openGLRenderWindow.getRenderPasses();

        if (typeof rpasses[0].requestDepth === 'function' && typeof rpasses[0].getFramebuffer === 'function') {
          var fb = rpasses[0].getFramebuffer();
          fb.saveCurrentBindingsAndBuffers();
          fb.bind();
          model.zBuffer = model.openGLRenderWindow.getPixelData(model.area[0], model.area[1], model.area[2], model.area[3]);
          fb.restorePreviousBindingsAndBuffers();
        }
      }

      publicAPI.buildPropHitList(model.pixBuffer[passNo]);
    }
  }; //----------------------------------------------------------------------------


  publicAPI.buildPropHitList = function (pixelbuffer) {
    for (var yy = 0; yy <= model.area[3] - model.area[1]; yy++) {
      for (var xx = 0; xx <= model.area[2] - model.area[0]; xx++) {
        var val = convert(xx, yy, pixelbuffer, model.area);

        if (val > 0) {
          val--;

          if (!(val in model.hitProps)) {
            model.hitProps[val] = true;
          }
        }
      }
    }
  }; //----------------------------------------------------------------------------


  publicAPI.renderProp = function (prop) {
    if (model.currentPass === PassTypes.ACTOR_PASS) {
      publicAPI.setPropColorValueFromInt(model.props.length + idOffset);
      model.props.push(prop);
    }
  }; //----------------------------------------------------------------------------


  publicAPI.renderCompositeIndex = function (index) {
    if (model.currentPass === PassTypes.COMPOSITE_INDEX_PASS) {
      publicAPI.setPropColorValueFromInt(index + idOffset);
    }
  }; //----------------------------------------------------------------------------
  // TODO: make inline


  publicAPI.renderAttributeId = function (attribid) {
    if (attribid < 0) {
      // negative attribid is valid. It happens when rendering higher order
      // elements where new points are added for rendering smooth surfaces.
      return;
    }

    model.maxAttributeId = attribid > model.maxAttributeId ? attribid : model.maxAttributeId; // if (model.currentPass < PassTypes.ID_LOW24) {
    //   return; // useless...
    // }
  }; //----------------------------------------------------------------------------


  publicAPI.passTypeToString = function (type) {
    return _macros_js__WEBPACK_IMPORTED_MODULE_4__["default"].enumToString(PassTypes, type);
  }; //----------------------------------------------------------------------------


  publicAPI.isPropHit = function (id) {
    return Boolean(model.hitProps[id]);
  };

  publicAPI.setPropColorValueFromInt = function (val) {
    model.propColorValue[0] = val % 256 / 255.0;
    model.propColorValue[1] = Math.floor(val / 256) % 256 / 255.0;
    model.propColorValue[2] = Math.floor(val / 65536) % 256 / 255.0;
  }; // info has
  //   valid
  //   propId
  //   prop
  //   compositeID
  //   attributeID
  //----------------------------------------------------------------------------


  publicAPI.getPixelInformation = function (inDisplayPosition, maxDistance, outSelectedPosition) {
    // Base case
    var maxDist = maxDistance < 0 ? 0 : maxDistance;

    if (maxDist === 0) {
      outSelectedPosition[0] = inDisplayPosition[0];
      outSelectedPosition[1] = inDisplayPosition[1];

      if (inDisplayPosition[0] < model.area[0] || inDisplayPosition[0] > model.area[2] || inDisplayPosition[1] < model.area[1] || inDisplayPosition[1] > model.area[3]) {
        return null;
      } // offset inDisplayPosition based on the lower-left-corner of the Area.


      var displayPosition = [inDisplayPosition[0] - model.area[0], inDisplayPosition[1] - model.area[1]];
      var actorid = convert(displayPosition[0], displayPosition[1], model.pixBuffer[PassTypes.ACTOR_PASS], model.area);

      if (actorid <= 0 || actorid - idOffset >= model.props.length) {
        // the pixel did not hit any actor.
        return null;
      }

      var _info2 = {};
      _info2.valid = true;
      _info2.propID = actorid - idOffset;
      _info2.prop = model.props[_info2.propID];
      var compositeID = convert(displayPosition[0], displayPosition[1], model.pixBuffer[PassTypes.COMPOSITE_INDEX_PASS], model.area);

      if (compositeID < 0 || compositeID > 0xffffff) {
        compositeID = 0;
      }

      _info2.compositeID = compositeID - idOffset;

      if (model.captureZValues) {
        var offset = (displayPosition[1] * (model.area[2] - model.area[0] + 1) + displayPosition[0]) * 4;
        _info2.zValue = (256 * model.zBuffer[offset] + model.zBuffer[offset + 1]) / 65535.0;
        _info2.displayPosition = inDisplayPosition;
      }

      return _info2;
    } // Iterate over successively growing boxes.
    // They recursively call the base case to handle single pixels.


    var dispPos = [inDisplayPosition[0], inDisplayPosition[1]];
    var curPos = [0, 0];
    var info = publicAPI.getPixelInformation(inDisplayPosition, 0, outSelectedPosition);

    if (info && info.valid) {
      return info;
    }

    for (var dist = 1; dist < maxDist; ++dist) {
      // Vertical sides of box.
      for (var y = dispPos[1] > dist ? dispPos[1] - dist : 0; y <= dispPos[1] + dist; ++y) {
        curPos[1] = y;

        if (dispPos[0] >= dist) {
          curPos[0] = dispPos[0] - dist;
          info = publicAPI.getPixelInformation(curPos, 0, outSelectedPosition);

          if (info && info.valid) {
            return info;
          }
        }

        curPos[0] = dispPos[0] + dist;
        info = publicAPI.getPixelInformation(curPos, 0, outSelectedPosition);

        if (info && info.valid) {
          return info;
        }
      } // Horizontal sides of box.


      for (var x = dispPos[0] >= dist ? dispPos[0] - (dist - 1) : 0; x <= dispPos[0] + (dist - 1); ++x) {
        curPos[0] = x;

        if (dispPos[1] >= dist) {
          curPos[1] = dispPos[1] - dist;
          info = publicAPI.getPixelInformation(curPos, 0, outSelectedPosition);

          if (info && info.valid) {
            return info;
          }
        }

        curPos[1] = dispPos[1] + dist;
        info = publicAPI.getPixelInformation(curPos, 0, outSelectedPosition);

        if (info && info.valid) {
          return info;
        }
      }
    } // nothing hit.


    outSelectedPosition[0] = inDisplayPosition[0];
    outSelectedPosition[1] = inDisplayPosition[1];
    return null;
  }; //----------------------------------------------------------------------------


  publicAPI.generateSelection = function (fx1, fy1, fx2, fy2) {
    var x1 = Math.floor(fx1);
    var y1 = Math.floor(fy1);
    var x2 = Math.floor(fx2);
    var y2 = Math.floor(fy2);
    var dataMap = new Map();
    var outSelectedPosition = [0, 0];

    for (var yy = y1; yy <= y2; yy++) {
      for (var xx = x1; xx <= x2; xx++) {
        var pos = [xx, yy];
        var info = publicAPI.getPixelInformation(pos, 0, outSelectedPosition);

        if (info && info.valid) {
          var hash = getInfoHash(info);

          if (!dataMap.has(hash)) {
            dataMap.set(hash, {
              info: info,
              pixelCount: 1,
              attributeIDs: [info.attributeID]
            });
          } else {
            var dmv = dataMap.get(hash);
            dmv.pixelCount++;

            if (model.captureZValues) {
              if (info.zValue < dmv.info.zValue) {
                dmv.info = info;
              }
            }

            if (dmv.attributeIDs.indexOf(info.attributeID) === -1) {
              dmv.attributeIDs.push(info.attributeID);
            }
          }
        }
      }
    }

    return convertSelection(model.fieldAssociation, dataMap, model.captureZValues, model.renderer, model.openGLRenderWindow);
  }; //----------------------------------------------------------------------------


  publicAPI.attach = function (w, r) {
    model.openGLRenderWindow = w;
    model.renderer = r;
  }; // override


  var superSetArea = publicAPI.setArea;

  publicAPI.setArea = function () {
    if (superSetArea.apply(void 0, arguments)) {
      model.area[0] = Math.floor(model.area[0]);
      model.area[1] = Math.floor(model.area[1]);
      model.area[2] = Math.floor(model.area[2]);
      model.area[3] = Math.floor(model.area[3]);
      return true;
    }

    return false;
  };
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {
  area: undefined,
  renderer: null,
  openGLRenderWindow: null,
  openGLRenderer: null,
  currentPass: -1,
  propColorValue: null,
  props: null,
  idOffset: 1
}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API

  _Core_HardwareSelector_js__WEBPACK_IMPORTED_MODULE_6__["default"].extend(publicAPI, model, initialValues);
  model.propColorValue = [0, 0, 0];
  model.props = [];

  if (!model.area) {
    model.area = [0, 0, 0, 0];
  }

  _macros_js__WEBPACK_IMPORTED_MODULE_4__["default"].setGetArray(publicAPI, model, ['area'], 4);
  _macros_js__WEBPACK_IMPORTED_MODULE_4__["default"].setGet(publicAPI, model, ['renderer', 'currentPass', 'openGLRenderWindow']);
  _macros_js__WEBPACK_IMPORTED_MODULE_4__["default"].setGetArray(publicAPI, model, ['propColorValue'], 3);
  _macros_js__WEBPACK_IMPORTED_MODULE_4__["default"].event(publicAPI, model, 'event'); // Object methods

  vtkOpenGLHardwareSelector(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = _macros_js__WEBPACK_IMPORTED_MODULE_4__["default"].newInstance(extend, 'vtkOpenGLHardwareSelector'); // ----------------------------------------------------------------------------

var vtkHardwareSelector = _objectSpread({
  newInstance: newInstance,
  extend: extend
}, _HardwareSelector_Constants_js__WEBPACK_IMPORTED_MODULE_5__["default"]);




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/HardwareSelector/Constants.js":
/*!**************************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Rendering/OpenGL/HardwareSelector/Constants.js ***!
  \**************************************************************************************/
/*! exports provided: PassTypes, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PassTypes", function() { return PassTypes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Constants; });
var PassTypes = {
  MIN_KNOWN_PASS: 0,
  ACTOR_PASS: 0,
  COMPOSITE_INDEX_PASS: 1,
  ID_LOW24: 2,
  MAX_KNOWN_PASS: 2
};
var Constants = {
  PassTypes: PassTypes
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/Helper.js":
/*!******************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Rendering/OpenGL/Helper.js ***!
  \******************************************************************/
/*! exports provided: default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkHelper; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _CellArrayBufferObject_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./CellArrayBufferObject.js */ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/CellArrayBufferObject.js");
/* harmony import */ var _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ShaderProgram.js */ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/ShaderProgram.js");
/* harmony import */ var _VertexArrayObject_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./VertexArrayObject.js */ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/VertexArrayObject.js");





// vtkOpenGLHelper methods
// ----------------------------------------------------------------------------

function vtkOpenGLHelper(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkOpenGLHelper');

  publicAPI.setOpenGLRenderWindow = function (win) {
    model.program.setContext(win.getContext());
    model.VAO.setOpenGLRenderWindow(win);
    model.CABO.setOpenGLRenderWindow(win);
  };

  publicAPI.releaseGraphicsResources = function (oglwin) {
    model.VAO.releaseGraphicsResources();
    model.CABO.releaseGraphicsResources();
    model.CABO.setElementCount(0);
  };
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {
  program: null,
  shaderSourceTime: null,
  VAO: null,
  attributeUpdateTime: null,
  CABO: null,
  primitiveType: 0
}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API

  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].obj(publicAPI, model);
  model.shaderSourceTime = {};
  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].obj(model.shaderSourceTime);
  model.attributeUpdateTime = {};
  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].obj(model.attributeUpdateTime);
  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].setGet(publicAPI, model, ['program', 'shaderSourceTime', 'VAO', 'attributeUpdateTime', 'CABO', 'primitiveType']);
  model.program = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_2__["default"].newInstance();
  model.VAO = _VertexArrayObject_js__WEBPACK_IMPORTED_MODULE_3__["default"].newInstance();
  model.CABO = _CellArrayBufferObject_js__WEBPACK_IMPORTED_MODULE_1__["default"].newInstance(); // Object methods

  vtkOpenGLHelper(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].newInstance(extend); // ----------------------------------------------------------------------------

var vtkHelper = {
  newInstance: newInstance,
  extend: extend
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/ImageMapper.js":
/*!***********************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Rendering/OpenGL/ImageMapper.js ***!
  \***********************************************************************/
/*! exports provided: default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkImageMapper; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! gl-matrix */ "../node_modules/gl-matrix/esm/index.js");
/* harmony import */ var _Core_ImageMapper_Constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Core/ImageMapper/Constants.js */ "../node_modules/@kitware/vtk.js/Rendering/Core/ImageMapper/Constants.js");
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _Common_Core_DataArray_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../Common/Core/DataArray.js */ "../node_modules/@kitware/vtk.js/Common/Core/DataArray.js");
/* harmony import */ var _Common_Core_DataArray_Constants_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../Common/Core/DataArray/Constants.js */ "../node_modules/@kitware/vtk.js/Common/Core/DataArray/Constants.js");
/* harmony import */ var _Helper_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Helper.js */ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/Helper.js");
/* harmony import */ var _Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../Common/Core/Math/index.js */ "../node_modules/@kitware/vtk.js/Common/Core/Math/index.js");
/* harmony import */ var _Texture_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Texture.js */ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/Texture.js");
/* harmony import */ var _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./ShaderProgram.js */ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/ShaderProgram.js");
/* harmony import */ var _SceneGraph_ViewNode_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../SceneGraph/ViewNode.js */ "../node_modules/@kitware/vtk.js/Rendering/SceneGraph/ViewNode.js");
/* harmony import */ var _Core_Property_Constants_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../Core/Property/Constants.js */ "../node_modules/@kitware/vtk.js/Rendering/Core/Property/Constants.js");
/* harmony import */ var _Texture_Constants_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./Texture/Constants.js */ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/Texture/Constants.js");
/* harmony import */ var _Core_ImageProperty_Constants_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../Core/ImageProperty/Constants.js */ "../node_modules/@kitware/vtk.js/Rendering/Core/ImageProperty/Constants.js");
/* harmony import */ var _glsl_vtkPolyDataVS_glsl_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./glsl/vtkPolyDataVS.glsl.js */ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/glsl/vtkPolyDataVS.glsl.js");
/* harmony import */ var _glsl_vtkPolyDataFS_glsl_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./glsl/vtkPolyDataFS.glsl.js */ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/glsl/vtkPolyDataFS.glsl.js");
/* harmony import */ var _ReplacementShaderMapper_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./ReplacementShaderMapper.js */ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/ReplacementShaderMapper.js");
/* harmony import */ var _ViewNodeFactory_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./ViewNodeFactory.js */ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/ViewNodeFactory.js");


















var vtkErrorMacro = _macros_js__WEBPACK_IMPORTED_MODULE_2__["vtkErrorMacro"];
var SlicingMode = _Core_ImageMapper_Constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].SlicingMode; // ----------------------------------------------------------------------------
// helper methods
// ----------------------------------------------------------------------------

function computeFnToString(property, fn, numberOfComponents) {
  var pwfun = fn.apply(property);

  if (pwfun) {
    var iComps = property.getIndependentComponents();
    return "".concat(property.getMTime(), "-").concat(iComps, "-").concat(numberOfComponents);
  }

  return '0';
} // ----------------------------------------------------------------------------
// vtkOpenGLImageMapper methods
// ----------------------------------------------------------------------------


function vtkOpenGLImageMapper(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkOpenGLImageMapper');

  publicAPI.buildPass = function (prepass) {
    if (prepass) {
      model.openGLImageSlice = publicAPI.getFirstAncestorOfType('vtkOpenGLImageSlice');
      model.openGLRenderer = publicAPI.getFirstAncestorOfType('vtkOpenGLRenderer');
      model.openGLRenderWindow = model.openGLRenderer.getParent();
      model.context = model.openGLRenderWindow.getContext();
      model.tris.setOpenGLRenderWindow(model.openGLRenderWindow);
      model.openGLTexture.setOpenGLRenderWindow(model.openGLRenderWindow);
      model.colorTexture.setOpenGLRenderWindow(model.openGLRenderWindow);
      model.pwfTexture.setOpenGLRenderWindow(model.openGLRenderWindow);
      var ren = model.openGLRenderer.getRenderable();
      model.openGLCamera = model.openGLRenderer.getViewNodeFor(ren.getActiveCamera()); // is slice set by the camera

      if (model.renderable.getSliceAtFocalPoint()) {
        model.renderable.setSliceFromCamera(ren.getActiveCamera());
      }
    }
  };

  publicAPI.translucentPass = function (prepass) {
    if (prepass) {
      publicAPI.render();
    }
  };

  publicAPI.opaqueZBufferPass = function (prepass) {
    if (prepass) {
      model.haveSeenDepthRequest = true;
      model.renderDepth = true;
      publicAPI.render();
      model.renderDepth = false;
    }
  };

  publicAPI.opaquePass = function (prepass) {
    if (prepass) {
      publicAPI.render();
    }
  };

  publicAPI.getCoincidentParameters = function (ren, actor) {
    if (model.renderable.getResolveCoincidentTopology()) {
      return model.renderable.getCoincidentTopologyPolygonOffsetParameters();
    }

    return null;
  }; // Renders myself


  publicAPI.render = function () {
    var actor = model.openGLImageSlice.getRenderable();
    var ren = model.openGLRenderer.getRenderable();
    publicAPI.renderPiece(ren, actor);
  };

  publicAPI.buildShaders = function (shaders, ren, actor) {
    publicAPI.getShaderTemplate(shaders, ren, actor);
    publicAPI.replaceShaderValues(shaders, ren, actor);
  };

  publicAPI.getShaderTemplate = function (shaders, ren, actor) {
    shaders.Vertex = _glsl_vtkPolyDataVS_glsl_js__WEBPACK_IMPORTED_MODULE_13__["v"];
    shaders.Fragment = _glsl_vtkPolyDataFS_glsl_js__WEBPACK_IMPORTED_MODULE_14__["v"];
    shaders.Geometry = '';
  };

  publicAPI.replaceShaderValues = function (shaders, ren, actor) {
    var VSSource = shaders.Vertex;
    var FSSource = shaders.Fragment;
    VSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_8__["default"].substitute(VSSource, '//VTK::Camera::Dec', ['uniform mat4 MCPCMatrix;']).result;
    VSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_8__["default"].substitute(VSSource, '//VTK::PositionVC::Impl', ['  gl_Position = MCPCMatrix * vertexMC;']).result;
    VSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_8__["default"].substitute(VSSource, '//VTK::TCoord::Impl', 'tcoordVCVSOutput = tcoordMC;').result;
    VSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_8__["default"].substitute(VSSource, '//VTK::TCoord::Dec', 'attribute vec2 tcoordMC; varying vec2 tcoordVCVSOutput;').result;
    var tNumComp = model.openGLTexture.getComponents();
    var iComps = actor.getProperty().getIndependentComponents();
    var tcoordDec = ['varying vec2 tcoordVCVSOutput;', // color shift and scale
    'uniform float cshift0;', 'uniform float cscale0;', // pwf shift and scale
    'uniform float pwfshift0;', 'uniform float pwfscale0;', 'uniform sampler2D texture1;', 'uniform sampler2D colorTexture1;', 'uniform sampler2D pwfTexture1;', 'uniform float opacity;'];

    if (iComps) {
      for (var comp = 1; comp < tNumComp; comp++) {
        tcoordDec = tcoordDec.concat([// color shift and scale
        "uniform float cshift".concat(comp, ";"), "uniform float cscale".concat(comp, ";"), // weighting shift and scale
        "uniform float pwfshift".concat(comp, ";"), "uniform float pwfscale".concat(comp, ";")]);
      } // the heights defined below are the locations
      // for the up to four components of the tfuns
      // the tfuns have a height of 2XnumComps pixels so the
      // values are computed to hit the middle of the two rows
      // for that component


      switch (tNumComp) {
        case 1:
          tcoordDec = tcoordDec.concat(['uniform float mix0;', '#define height0 0.5']);
          break;

        case 2:
          tcoordDec = tcoordDec.concat(['uniform float mix0;', 'uniform float mix1;', '#define height0 0.25', '#define height1 0.75']);
          break;

        case 3:
          tcoordDec = tcoordDec.concat(['uniform float mix0;', 'uniform float mix1;', 'uniform float mix2;', '#define height0 0.17', '#define height1 0.5', '#define height2 0.83']);
          break;

        case 4:
          tcoordDec = tcoordDec.concat(['uniform float mix0;', 'uniform float mix1;', 'uniform float mix2;', 'uniform float mix3;', '#define height0 0.125', '#define height1 0.375', '#define height2 0.625', '#define height3 0.875']);
          break;

        default:
          vtkErrorMacro('Unsupported number of independent coordinates.');
      }
    }

    FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_8__["default"].substitute(FSSource, '//VTK::TCoord::Dec', tcoordDec).result;

    if (iComps) {
      var rgba = ['r', 'g', 'b', 'a'];
      var tcoordImpl = ['vec4 tvalue = texture2D(texture1, tcoordVCVSOutput);'];

      for (var _comp = 0; _comp < tNumComp; _comp++) {
        tcoordImpl = tcoordImpl.concat(["vec3 tcolor".concat(_comp, " = mix").concat(_comp, " * texture2D(colorTexture1, vec2(tvalue.").concat(rgba[_comp], " * cscale").concat(_comp, " + cshift").concat(_comp, ", height").concat(_comp, ")).rgb;"), "float compWeight".concat(_comp, " = mix").concat(_comp, " * texture2D(pwfTexture1, vec2(tvalue.").concat(rgba[_comp], " * pwfscale").concat(_comp, " + pwfshift").concat(_comp, ", height").concat(_comp, ")).r;")]);
      }

      switch (tNumComp) {
        case 1:
          tcoordImpl = tcoordImpl.concat(['gl_FragData[0] = vec4(tcolor0.rgb, opacity);']);
          break;

        case 2:
          tcoordImpl = tcoordImpl.concat(['float weightSum = compWeight0 + compWeight1;', 'gl_FragData[0] = vec4(vec3((tcolor0.rgb * (compWeight0 / weightSum)) + (tcolor1.rgb * (compWeight1 / weightSum))), opacity);']);
          break;

        case 3:
          tcoordImpl = tcoordImpl.concat(['float weightSum = compWeight0 + compWeight1 + compWeight2;', 'gl_FragData[0] = vec4(vec3((tcolor0.rgb * (compWeight0 / weightSum)) + (tcolor1.rgb * (compWeight1 / weightSum)) + (tcolor2.rgb * (compWeight2 / weightSum))), opacity);']);
          break;

        case 4:
          tcoordImpl = tcoordImpl.concat(['float weightSum = compWeight0 + compWeight1 + compWeight2 + compWeight3;', 'gl_FragData[0] = vec4(vec3((tcolor0.rgb * (compWeight0 / weightSum)) + (tcolor1.rgb * (compWeight1 / weightSum)) + (tcolor2.rgb * (compWeight2 / weightSum)) + (tcolor3.rgb * (compWeight3 / weightSum))), opacity);']);
          break;

        default:
          vtkErrorMacro('Unsupported number of independent coordinates.');
      }

      FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_8__["default"].substitute(FSSource, '//VTK::TCoord::Impl', tcoordImpl).result;
    } else {
      // dependent components
      switch (tNumComp) {
        case 1:
          FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_8__["default"].substitute(FSSource, '//VTK::TCoord::Impl', ['float intensity = texture2D(texture1, tcoordVCVSOutput).r;', 'vec3 tcolor = texture2D(colorTexture1, vec2(intensity * cscale0 + cshift0, 0.5)).rgb;', 'float scalarOpacity = texture2D(pwfTexture1, vec2(intensity * pwfscale0 + pwfshift0, 0.5)).r;', 'gl_FragData[0] = vec4(tcolor, scalarOpacity * opacity);']).result;
          break;

        case 2:
          FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_8__["default"].substitute(FSSource, '//VTK::TCoord::Impl', ['vec4 tcolor = texture2D(texture1, tcoordVCVSOutput);', 'float intensity = tcolor.r*cscale0 + cshift0;', 'gl_FragData[0] = vec4(texture2D(colorTexture1, vec2(intensity, 0.5)).rgb, pwfscale0*tcolor.g + pwfshift0);']).result;
          break;

        default:
          FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_8__["default"].substitute(FSSource, '//VTK::TCoord::Impl', ['vec4 tcolor = cscale0*texture2D(texture1, tcoordVCVSOutput.st) + cshift0;', 'gl_FragData[0] = vec4(texture2D(colorTexture1, vec2(tcolor.r,0.5)).r,', '  texture2D(colorTexture1, vec2(tcolor.g,0.5)).r,', '  texture2D(colorTexture1, vec2(tcolor.b,0.5)).r, tcolor.a);']).result;
      }
    }

    if (model.haveSeenDepthRequest) {
      FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_8__["default"].substitute(FSSource, '//VTK::ZBuffer::Dec', 'uniform int depthRequest;').result;
      FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_8__["default"].substitute(FSSource, '//VTK::ZBuffer::Impl', ['if (depthRequest == 1) {', 'float iz = floor(gl_FragCoord.z*65535.0 + 0.1);', 'float rf = floor(iz/256.0)/255.0;', 'float gf = mod(iz,256.0)/255.0;', 'gl_FragData[0] = vec4(rf, gf, 0.0, 1.0); }']).result;
    }

    shaders.Vertex = VSSource;
    shaders.Fragment = FSSource;
    publicAPI.replaceShaderClip(shaders, ren, actor);
    publicAPI.replaceShaderCoincidentOffset(shaders, ren, actor);
  };

  publicAPI.replaceShaderClip = function (shaders, ren, actor) {
    var VSSource = shaders.Vertex;
    var FSSource = shaders.Fragment;

    if (model.renderable.getNumberOfClippingPlanes()) {
      var numClipPlanes = model.renderable.getNumberOfClippingPlanes();

      if (numClipPlanes > 6) {
        Object(_macros_js__WEBPACK_IMPORTED_MODULE_2__["vtkErrorMacro"])('OpenGL has a limit of 6 clipping planes');
        numClipPlanes = 6;
      }

      VSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_8__["default"].substitute(VSSource, '//VTK::Clip::Dec', ['uniform int numClipPlanes;', 'uniform vec4 clipPlanes[6];', 'varying float clipDistancesVSOutput[6];']).result;
      VSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_8__["default"].substitute(VSSource, '//VTK::Clip::Impl', ['for (int planeNum = 0; planeNum < 6; planeNum++)', '    {', '    if (planeNum >= numClipPlanes)', '        {', '        break;', '        }', '    clipDistancesVSOutput[planeNum] = dot(clipPlanes[planeNum], vertexMC);', '    }']).result;
      FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_8__["default"].substitute(FSSource, '//VTK::Clip::Dec', ['uniform int numClipPlanes;', 'varying float clipDistancesVSOutput[6];']).result;
      FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_8__["default"].substitute(FSSource, '//VTK::Clip::Impl', ['for (int planeNum = 0; planeNum < 6; planeNum++)', '    {', '    if (planeNum >= numClipPlanes)', '        {', '        break;', '        }', '    if (clipDistancesVSOutput[planeNum] < 0.0) discard;', '    }']).result;
    }

    shaders.Vertex = VSSource;
    shaders.Fragment = FSSource;
  };

  publicAPI.getNeedToRebuildShaders = function (cellBO, ren, actor) {
    // has something changed that would require us to recreate the shader?
    // candidates are
    // property modified (representation interpolation and lighting)
    // input modified
    // light complexity changed
    var tNumComp = model.openGLTexture.getComponents();
    var iComp = actor.getProperty().getIndependentComponents();

    if (model.lastHaveSeenDepthRequest !== model.haveSeenDepthRequest || cellBO.getProgram() === 0 || model.lastTextureComponents !== tNumComp || model.lastIndependentComponents !== iComp) {
      model.lastHaveSeenDepthRequest = model.haveSeenDepthRequest;
      model.lastTextureComponents = tNumComp;
      model.lastIndependentComponents = iComp;
      return true;
    }

    return false;
  };

  publicAPI.updateShaders = function (cellBO, ren, actor) {
    model.lastBoundBO = cellBO; // has something changed that would require us to recreate the shader?

    if (publicAPI.getNeedToRebuildShaders(cellBO, ren, actor)) {
      var shaders = {
        Vertex: null,
        Fragment: null,
        Geometry: null
      };
      publicAPI.buildShaders(shaders, ren, actor); // compile and bind the program if needed

      var newShader = model.openGLRenderWindow.getShaderCache().readyShaderProgramArray(shaders.Vertex, shaders.Fragment, shaders.Geometry); // if the shader changed reinitialize the VAO

      if (newShader !== cellBO.getProgram()) {
        cellBO.setProgram(newShader); // reset the VAO as the shader has changed

        cellBO.getVAO().releaseGraphicsResources();
      }

      cellBO.getShaderSourceTime().modified();
    } else {
      model.openGLRenderWindow.getShaderCache().readyShaderProgram(cellBO.getProgram());
    }

    cellBO.getVAO().bind();
    publicAPI.setMapperShaderParameters(cellBO, ren, actor);
    publicAPI.setCameraShaderParameters(cellBO, ren, actor);
    publicAPI.setPropertyShaderParameters(cellBO, ren, actor);
  };

  publicAPI.setMapperShaderParameters = function (cellBO, ren, actor) {
    // Now to update the VAO too, if necessary.
    if (cellBO.getCABO().getElementCount() && (model.VBOBuildTime > cellBO.getAttributeUpdateTime().getMTime() || cellBO.getShaderSourceTime().getMTime() > cellBO.getAttributeUpdateTime().getMTime())) {
      if (cellBO.getProgram().isAttributeUsed('vertexMC')) {
        if (!cellBO.getVAO().addAttributeArray(cellBO.getProgram(), cellBO.getCABO(), 'vertexMC', cellBO.getCABO().getVertexOffset(), cellBO.getCABO().getStride(), model.context.FLOAT, 3, model.context.FALSE)) {
          vtkErrorMacro('Error setting vertexMC in shader VAO.');
        }
      }

      if (cellBO.getProgram().isAttributeUsed('tcoordMC') && cellBO.getCABO().getTCoordOffset()) {
        if (!cellBO.getVAO().addAttributeArray(cellBO.getProgram(), cellBO.getCABO(), 'tcoordMC', cellBO.getCABO().getTCoordOffset(), cellBO.getCABO().getStride(), model.context.FLOAT, cellBO.getCABO().getTCoordComponents(), model.context.FALSE)) {
          vtkErrorMacro('Error setting tcoordMC in shader VAO.');
        }
      }

      cellBO.getAttributeUpdateTime().modified();
    }

    var texUnit = model.openGLTexture.getTextureUnit();
    cellBO.getProgram().setUniformi('texture1', texUnit);
    var numComp = model.openGLTexture.getComponents();
    var iComps = actor.getProperty().getIndependentComponents();

    if (iComps) {
      for (var i = 0; i < numComp; i++) {
        cellBO.getProgram().setUniformf("mix".concat(i), actor.getProperty().getComponentWeight(i));
      }
    }

    var oglShiftScale = model.openGLTexture.getShiftAndScale(); // three levels of shift scale combined into one
    // for performance in the fragment shader

    for (var _i = 0; _i < numComp; _i++) {
      var cw = actor.getProperty().getColorWindow();
      var cl = actor.getProperty().getColorLevel();
      var target = iComps ? _i : 0;
      var cfun = actor.getProperty().getRGBTransferFunction(target);

      if (cfun && actor.getProperty().getUseLookupTableScalarRange()) {
        var cRange = cfun.getRange();
        cw = cRange[1] - cRange[0];
        cl = 0.5 * (cRange[1] + cRange[0]);
      }

      var scale = oglShiftScale.scale / cw;
      var shift = (oglShiftScale.shift - cl) / cw + 0.5;
      cellBO.getProgram().setUniformf("cshift".concat(_i), shift);
      cellBO.getProgram().setUniformf("cscale".concat(_i), scale);
    } // pwf shift/scale


    for (var _i2 = 0; _i2 < numComp; _i2++) {
      var pwfScale = 1.0;
      var pwfShift = 0.0;

      var _target = iComps ? _i2 : 0;

      var pwfun = actor.getProperty().getPiecewiseFunction(_target);

      if (pwfun) {
        var pwfRange = pwfun.getRange();
        var length = pwfRange[1] - pwfRange[0];
        var mid = 0.5 * (pwfRange[0] + pwfRange[1]);
        pwfScale = oglShiftScale.scale / length;
        pwfShift = (oglShiftScale.shift - mid) / length + 0.5;
      }

      cellBO.getProgram().setUniformf("pwfshift".concat(_i2), pwfShift);
      cellBO.getProgram().setUniformf("pwfscale".concat(_i2), pwfScale);
    }

    if (model.haveSeenDepthRequest) {
      cellBO.getProgram().setUniformi('depthRequest', model.renderDepth ? 1 : 0);
    } // handle coincident


    if (cellBO.getProgram().isUniformUsed('coffset')) {
      var cp = publicAPI.getCoincidentParameters(ren, actor);
      cellBO.getProgram().setUniformf('coffset', cp.offset); // cfactor isn't always used when coffset is.

      if (cellBO.getProgram().isUniformUsed('cfactor')) {
        cellBO.getProgram().setUniformf('cfactor', cp.factor);
      }
    }

    var texColorUnit = model.colorTexture.getTextureUnit();
    cellBO.getProgram().setUniformi('colorTexture1', texColorUnit);
    var texOpacityUnit = model.pwfTexture.getTextureUnit();
    cellBO.getProgram().setUniformi('pwfTexture1', texOpacityUnit);

    if (model.renderable.getNumberOfClippingPlanes()) {
      // add all the clipping planes
      var numClipPlanes = model.renderable.getNumberOfClippingPlanes();

      if (numClipPlanes > 6) {
        Object(_macros_js__WEBPACK_IMPORTED_MODULE_2__["vtkErrorMacro"])('OpenGL has a limit of 6 clipping planes');
        numClipPlanes = 6;
      }

      var image = model.currentInput;
      var w2imat4 = image.getWorldToIndex();
      var shiftScaleEnabled = cellBO.getCABO().getCoordShiftAndScaleEnabled();
      var inverseShiftScaleMatrix = shiftScaleEnabled ? cellBO.getCABO().getInverseShiftAndScaleMatrix() : null;
      var mat = inverseShiftScaleMatrix ? gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat4"].copy(model.imagematinv, actor.getMatrix()) : actor.getMatrix();

      if (inverseShiftScaleMatrix) {
        gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat4"].transpose(mat, mat);
        gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat4"].multiply(mat, mat, inverseShiftScaleMatrix);
        gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat4"].transpose(mat, mat);
      }

      gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat4"].multiply(model.imagematinv, mat, w2imat4);
      var planeEquations = [];

      for (var _i3 = 0; _i3 < numClipPlanes; _i3++) {
        var planeEquation = [];
        model.renderable.getClippingPlaneInDataCoords(model.imagematinv, _i3, planeEquation);

        for (var j = 0; j < 4; j++) {
          planeEquations.push(planeEquation[j]);
        }
      }

      cellBO.getProgram().setUniformi('numClipPlanes', numClipPlanes);
      cellBO.getProgram().setUniform4fv('clipPlanes', planeEquations);
    }
  };

  publicAPI.setCameraShaderParameters = function (cellBO, ren, actor) {
    var program = cellBO.getProgram();
    var actMats = model.openGLImageSlice.getKeyMatrices();
    var image = model.currentInput;
    var i2wmat4 = image.getIndexToWorld();
    gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat4"].multiply(model.imagemat, actMats.mcwc, i2wmat4);
    var keyMats = model.openGLCamera.getKeyMatrices(ren);
    gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat4"].multiply(model.imagemat, keyMats.wcpc, model.imagemat);

    if (cellBO.getCABO().getCoordShiftAndScaleEnabled()) {
      var inverseShiftScaleMat = cellBO.getCABO().getInverseShiftAndScaleMatrix();
      gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat4"].multiply(model.imagemat, model.imagemat, inverseShiftScaleMat);
    }

    program.setUniformMatrix('MCPCMatrix', model.imagemat);
  };

  publicAPI.setPropertyShaderParameters = function (cellBO, ren, actor) {
    var program = cellBO.getProgram();
    var ppty = actor.getProperty();
    var opacity = ppty.getOpacity();
    program.setUniformf('opacity', opacity);
  };

  publicAPI.renderPieceStart = function (ren, actor) {
    // make sure the BOs are up to date
    publicAPI.updateBufferObjects(ren, actor); // Bind the OpenGL, this is shared between the different primitive/cell types.

    model.lastBoundBO = null;
  };

  publicAPI.renderPieceDraw = function (ren, actor) {
    var gl = model.context; // activate the texture

    model.openGLTexture.activate();
    model.colorTexture.activate();
    model.pwfTexture.activate(); // draw polygons

    if (model.tris.getCABO().getElementCount()) {
      // First we do the triangles, update the shader, set uniforms, etc.
      publicAPI.updateShaders(model.tris, ren, actor);
      gl.drawArrays(gl.TRIANGLES, 0, model.tris.getCABO().getElementCount());
      model.tris.getVAO().release();
    }

    model.openGLTexture.deactivate();
    model.colorTexture.deactivate();
    model.pwfTexture.deactivate();
  };

  publicAPI.renderPieceFinish = function (ren, actor) {};

  publicAPI.renderPiece = function (ren, actor) {
    // Make sure that we have been properly initialized.
    // if (ren.getRenderWindow().checkAbortStatus()) {
    //   return;
    // }
    publicAPI.invokeEvent({
      type: 'StartEvent'
    });
    model.renderable.update();
    model.currentInput = model.renderable.getInputData();
    publicAPI.invokeEvent({
      type: 'EndEvent'
    });

    if (!model.currentInput) {
      vtkErrorMacro('No input!');
      return;
    }

    publicAPI.renderPieceStart(ren, actor);
    publicAPI.renderPieceDraw(ren, actor);
    publicAPI.renderPieceFinish(ren, actor);
  };

  publicAPI.computeBounds = function (ren, actor) {
    if (!publicAPI.getInput()) {
      Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_6__["u"])(model.bounds);
      return;
    }

    model.bounds = publicAPI.getInput().getBounds();
  };

  publicAPI.updateBufferObjects = function (ren, actor) {
    // Rebuild buffers if needed
    if (publicAPI.getNeedToRebuildBufferObjects(ren, actor)) {
      publicAPI.buildBufferObjects(ren, actor);
    }
  };

  publicAPI.getNeedToRebuildBufferObjects = function (ren, actor) {
    // first do a coarse check
    if (model.VBOBuildTime.getMTime() < publicAPI.getMTime() || model.VBOBuildTime.getMTime() < actor.getMTime() || model.VBOBuildTime.getMTime() < model.renderable.getMTime() || model.VBOBuildTime.getMTime() < actor.getProperty().getMTime() || model.VBOBuildTime.getMTime() < model.currentInput.getMTime()) {
      return true;
    }

    return false;
  };

  publicAPI.buildBufferObjects = function (ren, actor) {
    var image = model.currentInput;

    if (!image) {
      return;
    }

    var imgScalars = image.getPointData() && image.getPointData().getScalars();

    if (!imgScalars) {
      return;
    }

    var actorProperty = actor.getProperty(); // set interpolation on the texture based on property setting

    var iType = actorProperty.getInterpolationType();

    if (iType === _Core_ImageProperty_Constants_js__WEBPACK_IMPORTED_MODULE_12__["InterpolationType"].NEAREST) {
      model.colorTexture.setMinificationFilter(_Texture_Constants_js__WEBPACK_IMPORTED_MODULE_11__["Filter"].NEAREST);
      model.colorTexture.setMagnificationFilter(_Texture_Constants_js__WEBPACK_IMPORTED_MODULE_11__["Filter"].NEAREST);
      model.pwfTexture.setMinificationFilter(_Texture_Constants_js__WEBPACK_IMPORTED_MODULE_11__["Filter"].NEAREST);
      model.pwfTexture.setMagnificationFilter(_Texture_Constants_js__WEBPACK_IMPORTED_MODULE_11__["Filter"].NEAREST);
    } else {
      model.colorTexture.setMinificationFilter(_Texture_Constants_js__WEBPACK_IMPORTED_MODULE_11__["Filter"].LINEAR);
      model.colorTexture.setMagnificationFilter(_Texture_Constants_js__WEBPACK_IMPORTED_MODULE_11__["Filter"].LINEAR);
      model.pwfTexture.setMinificationFilter(_Texture_Constants_js__WEBPACK_IMPORTED_MODULE_11__["Filter"].LINEAR);
      model.pwfTexture.setMagnificationFilter(_Texture_Constants_js__WEBPACK_IMPORTED_MODULE_11__["Filter"].LINEAR);
    }

    var numComp = imgScalars.getNumberOfComponents();
    var iComps = actorProperty.getIndependentComponents();
    var numIComps = iComps ? numComp : 1;
    var textureHeight = iComps ? 2 * numIComps : 1;
    var cfunToString = computeFnToString(actorProperty, actorProperty.getRGBTransferFunction, numIComps);

    if (model.colorTextureString !== cfunToString) {
      var cWidth = 1024;
      var cSize = cWidth * textureHeight * 3;
      var cTable = new Uint8Array(cSize);
      var cfun = actorProperty.getRGBTransferFunction();

      if (cfun) {
        var tmpTable = new Float32Array(cWidth * 3);

        for (var c = 0; c < numIComps; c++) {
          cfun = actorProperty.getRGBTransferFunction(c);
          var cRange = cfun.getRange();
          cfun.getTable(cRange[0], cRange[1], cWidth, tmpTable, 1);

          if (iComps) {
            for (var i = 0; i < cWidth * 3; i++) {
              cTable[c * cWidth * 6 + i] = 255.0 * tmpTable[i];
              cTable[c * cWidth * 6 + i + cWidth * 3] = 255.0 * tmpTable[i];
            }
          } else {
            for (var _i4 = 0; _i4 < cWidth * 3; _i4++) {
              cTable[c * cWidth * 6 + _i4] = 255.0 * tmpTable[_i4];
            }
          }
        }

        model.colorTexture.create2DFromRaw(cWidth, textureHeight, 3, _Common_Core_DataArray_Constants_js__WEBPACK_IMPORTED_MODULE_4__["VtkDataTypes"].UNSIGNED_CHAR, cTable);
      } else {
        for (var _i5 = 0; _i5 < cWidth * 3; ++_i5) {
          cTable[_i5] = 255.0 * _i5 / ((cWidth - 1) * 3);
          cTable[_i5 + 1] = 255.0 * _i5 / ((cWidth - 1) * 3);
          cTable[_i5 + 2] = 255.0 * _i5 / ((cWidth - 1) * 3);
        }

        model.colorTexture.create2DFromRaw(cWidth, 1, 3, _Common_Core_DataArray_Constants_js__WEBPACK_IMPORTED_MODULE_4__["VtkDataTypes"].UNSIGNED_CHAR, cTable);
      }

      model.colorTextureString = cfunToString;
    } // Build piecewise function buffer.  This buffer is used either
    // for component weighting or opacity, depending on whether we're
    // rendering components independently or not.


    var pwfunToString = computeFnToString(actorProperty, actorProperty.getPiecewiseFunction, numIComps);

    if (model.pwfTextureString !== pwfunToString) {
      var pwfWidth = 1024;
      var pwfSize = pwfWidth * textureHeight;
      var pwfTable = new Uint8Array(pwfSize);
      var pwfun = actorProperty.getPiecewiseFunction(); // support case where pwfun is added/removed

      model.pwfTexture.resetFormatAndType();

      if (pwfun) {
        var pwfFloatTable = new Float32Array(pwfSize);

        var _tmpTable = new Float32Array(pwfWidth);

        for (var _c = 0; _c < numIComps; ++_c) {
          pwfun = actorProperty.getPiecewiseFunction(_c);

          if (pwfun === null) {
            // Piecewise constant max if no function supplied for this component
            pwfFloatTable.fill(1.0);
          } else {
            var pwfRange = pwfun.getRange();
            pwfun.getTable(pwfRange[0], pwfRange[1], pwfWidth, _tmpTable, 1); // adjust for sample distance etc

            if (iComps) {
              for (var _i6 = 0; _i6 < pwfWidth; _i6++) {
                pwfFloatTable[_c * pwfWidth * 2 + _i6] = _tmpTable[_i6];
                pwfFloatTable[_c * pwfWidth * 2 + _i6 + pwfWidth] = _tmpTable[_i6];
              }
            } else {
              for (var _i7 = 0; _i7 < pwfWidth; _i7++) {
                pwfFloatTable[_c * pwfWidth * 2 + _i7] = _tmpTable[_i7];
              }
            }
          }
        }

        model.pwfTexture.create2DFromRaw(pwfWidth, textureHeight, 1, _Common_Core_DataArray_Constants_js__WEBPACK_IMPORTED_MODULE_4__["VtkDataTypes"].FLOAT, pwfFloatTable);
      } else {
        // default is opaque
        pwfTable.fill(255.0);
        model.pwfTexture.create2DFromRaw(pwfWidth, 1, 1, _Common_Core_DataArray_Constants_js__WEBPACK_IMPORTED_MODULE_4__["VtkDataTypes"].UNSIGNED_CHAR, pwfTable);
      }

      model.pwfTextureString = pwfunToString;
    } // Find what IJK axis and what direction to slice along


    var _model$renderable$get = model.renderable.getClosestIJKAxis(),
        ijkMode = _model$renderable$get.ijkMode; // Find the IJK slice


    var slice = model.renderable.getSlice();

    if (ijkMode !== model.renderable.getSlicingMode()) {
      // If not IJK slicing, get the IJK slice from the XYZ position/slice
      slice = model.renderable.getSliceAtPosition(slice);
    }

    var nSlice = Math.round(slice); // Find sliceOffset

    var ext = image.getExtent();
    var sliceOffset;

    if (ijkMode === SlicingMode.I) {
      sliceOffset = nSlice - ext[0];
    }

    if (ijkMode === SlicingMode.J) {
      sliceOffset = nSlice - ext[2];
    }

    if (ijkMode === SlicingMode.K || ijkMode === SlicingMode.NONE) {
      sliceOffset = nSlice - ext[4];
    } // rebuild the VBO if the data has changed


    var toString = "".concat(slice, "A").concat(image.getMTime(), "A").concat(imgScalars.getMTime(), "B").concat(publicAPI.getMTime(), "C").concat(model.renderable.getSlicingMode(), "D").concat(actor.getProperty().getMTime());

    if (model.VBOBuildString !== toString) {
      // Build the VBOs
      var dims = image.getDimensions();

      if (iType === _Core_ImageProperty_Constants_js__WEBPACK_IMPORTED_MODULE_12__["InterpolationType"].NEAREST) {
        if (numComp === 4) {
          model.openGLTexture.setGenerateMipmap(true);
          model.openGLTexture.setMinificationFilter(_Texture_Constants_js__WEBPACK_IMPORTED_MODULE_11__["Filter"].NEAREST);
        } else {
          model.openGLTexture.setMinificationFilter(_Texture_Constants_js__WEBPACK_IMPORTED_MODULE_11__["Filter"].NEAREST);
        }

        model.openGLTexture.setMagnificationFilter(_Texture_Constants_js__WEBPACK_IMPORTED_MODULE_11__["Filter"].NEAREST);
      } else {
        if (numComp === 4) {
          model.openGLTexture.setGenerateMipmap(true);
          model.openGLTexture.setMinificationFilter(_Texture_Constants_js__WEBPACK_IMPORTED_MODULE_11__["Filter"].LINEAR_MIPMAP_LINEAR);
        } else {
          model.openGLTexture.setMinificationFilter(_Texture_Constants_js__WEBPACK_IMPORTED_MODULE_11__["Filter"].LINEAR);
        }

        model.openGLTexture.setMagnificationFilter(_Texture_Constants_js__WEBPACK_IMPORTED_MODULE_11__["Filter"].LINEAR);
      }

      model.openGLTexture.setWrapS(_Texture_Constants_js__WEBPACK_IMPORTED_MODULE_11__["Wrap"].CLAMP_TO_EDGE);
      model.openGLTexture.setWrapT(_Texture_Constants_js__WEBPACK_IMPORTED_MODULE_11__["Wrap"].CLAMP_TO_EDGE);
      var sliceSize = dims[0] * dims[1] * numComp;
      var ptsArray = new Float32Array(12);
      var tcoordArray = new Float32Array(8);

      for (var _i8 = 0; _i8 < 4; _i8++) {
        tcoordArray[_i8 * 2] = _i8 % 2 ? 1.0 : 0.0;
        tcoordArray[_i8 * 2 + 1] = _i8 > 1 ? 1.0 : 0.0;
      }

      var basicScalars = imgScalars.getData();
      var scalars = null; // Get right scalars according to slicing mode

      if (ijkMode === SlicingMode.I) {
        scalars = new basicScalars.constructor(dims[2] * dims[1] * numComp);
        var id = 0;

        for (var k = 0; k < dims[2]; k++) {
          for (var j = 0; j < dims[1]; j++) {
            var bsIdx = (sliceOffset + j * dims[0] + k * dims[0] * dims[1]) * numComp;
            id = (k * dims[1] + j) * numComp;
            scalars.set(basicScalars.subarray(bsIdx, bsIdx + numComp), id);
          }
        }

        dims[0] = dims[1];
        dims[1] = dims[2];
        ptsArray[0] = slice;
        ptsArray[1] = ext[2];
        ptsArray[2] = ext[4];
        ptsArray[3] = slice;
        ptsArray[4] = ext[3];
        ptsArray[5] = ext[4];
        ptsArray[6] = slice;
        ptsArray[7] = ext[2];
        ptsArray[8] = ext[5];
        ptsArray[9] = slice;
        ptsArray[10] = ext[3];
        ptsArray[11] = ext[5];
      } else if (ijkMode === SlicingMode.J) {
        scalars = new basicScalars.constructor(dims[2] * dims[0] * numComp);
        var _id = 0;

        for (var _k = 0; _k < dims[2]; _k++) {
          for (var _i9 = 0; _i9 < dims[0]; _i9++) {
            var _bsIdx = (_i9 + sliceOffset * dims[0] + _k * dims[0] * dims[1]) * numComp;

            _id = (_k * dims[0] + _i9) * numComp;
            scalars.set(basicScalars.subarray(_bsIdx, _bsIdx + numComp), _id);
          }
        }

        dims[1] = dims[2];
        ptsArray[0] = ext[0];
        ptsArray[1] = slice;
        ptsArray[2] = ext[4];
        ptsArray[3] = ext[1];
        ptsArray[4] = slice;
        ptsArray[5] = ext[4];
        ptsArray[6] = ext[0];
        ptsArray[7] = slice;
        ptsArray[8] = ext[5];
        ptsArray[9] = ext[1];
        ptsArray[10] = slice;
        ptsArray[11] = ext[5];
      } else if (ijkMode === SlicingMode.K || ijkMode === SlicingMode.NONE) {
        scalars = basicScalars.subarray(sliceOffset * sliceSize, (sliceOffset + 1) * sliceSize);
        ptsArray[0] = ext[0];
        ptsArray[1] = ext[2];
        ptsArray[2] = slice;
        ptsArray[3] = ext[1];
        ptsArray[4] = ext[2];
        ptsArray[5] = slice;
        ptsArray[6] = ext[0];
        ptsArray[7] = ext[3];
        ptsArray[8] = slice;
        ptsArray[9] = ext[1];
        ptsArray[10] = ext[3];
        ptsArray[11] = slice;
      } else {
        vtkErrorMacro('Reformat slicing not yet supported.');
      }

      model.openGLTexture.create2DFromRaw(dims[0], dims[1], numComp, imgScalars.getDataType(), scalars);
      model.openGLTexture.activate();
      model.openGLTexture.sendParameters();
      model.openGLTexture.deactivate();
      var points = _Common_Core_DataArray_js__WEBPACK_IMPORTED_MODULE_3__["default"].newInstance({
        numberOfComponents: 3,
        values: ptsArray
      });
      points.setName('points');
      var tcoords = _Common_Core_DataArray_js__WEBPACK_IMPORTED_MODULE_3__["default"].newInstance({
        numberOfComponents: 2,
        values: tcoordArray
      });
      tcoords.setName('tcoords');
      var cellArray = new Uint16Array(8);
      cellArray[0] = 3;
      cellArray[1] = 0;
      cellArray[2] = 1;
      cellArray[3] = 3;
      cellArray[4] = 3;
      cellArray[5] = 0;
      cellArray[6] = 3;
      cellArray[7] = 2;
      var cells = _Common_Core_DataArray_js__WEBPACK_IMPORTED_MODULE_3__["default"].newInstance({
        numberOfComponents: 1,
        values: cellArray
      });
      model.tris.getCABO().createVBO(cells, 'polys', _Core_Property_Constants_js__WEBPACK_IMPORTED_MODULE_10__["Representation"].SURFACE, {
        points: points,
        tcoords: tcoords,
        cellOffset: 0
      });
      model.VBOBuildTime.modified();
      model.VBOBuildString = toString;
    }
  };
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {
  VBOBuildTime: 0,
  VBOBuildString: null,
  openGLTexture: null,
  tris: null,
  imagemat: null,
  imagematinv: null,
  colorTexture: null,
  pwfTexture: null,
  lastHaveSeenDepthRequest: false,
  haveSeenDepthRequest: false,
  lastTextureComponents: 0
}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance

  _SceneGraph_ViewNode_js__WEBPACK_IMPORTED_MODULE_9__["default"].extend(publicAPI, model, initialValues);
  _ReplacementShaderMapper_js__WEBPACK_IMPORTED_MODULE_15__["default"].implementReplaceShaderCoincidentOffset(publicAPI, model, initialValues);
  model.tris = _Helper_js__WEBPACK_IMPORTED_MODULE_5__["default"].newInstance();
  model.openGLTexture = _Texture_js__WEBPACK_IMPORTED_MODULE_7__["default"].newInstance();
  model.colorTexture = _Texture_js__WEBPACK_IMPORTED_MODULE_7__["default"].newInstance();
  model.pwfTexture = _Texture_js__WEBPACK_IMPORTED_MODULE_7__["default"].newInstance();
  model.imagemat = gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat4"].identity(new Float64Array(16));
  model.imagematinv = gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat4"].identity(new Float64Array(16)); // Build VTK API

  Object(_macros_js__WEBPACK_IMPORTED_MODULE_2__["setGet"])(publicAPI, model, []);
  model.VBOBuildTime = {};
  Object(_macros_js__WEBPACK_IMPORTED_MODULE_2__["obj"])(model.VBOBuildTime); // Object methods

  vtkOpenGLImageMapper(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = Object(_macros_js__WEBPACK_IMPORTED_MODULE_2__["newInstance"])(extend, 'vtkOpenGLImageMapper'); // ----------------------------------------------------------------------------

var vtkImageMapper = {
  newInstance: newInstance,
  extend: extend
}; // Register ourself to OpenGL backend if imported

Object(_ViewNodeFactory_js__WEBPACK_IMPORTED_MODULE_16__["registerOverride"])('vtkImageMapper', newInstance);




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/ImageSlice.js":
/*!**********************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Rendering/OpenGL/ImageSlice.js ***!
  \**********************************************************************/
/*! exports provided: default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkImageSlice; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! gl-matrix */ "../node_modules/gl-matrix/esm/index.js");
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _SceneGraph_ViewNode_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../SceneGraph/ViewNode.js */ "../node_modules/@kitware/vtk.js/Rendering/SceneGraph/ViewNode.js");
/* harmony import */ var _ViewNodeFactory_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ViewNodeFactory.js */ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/ViewNodeFactory.js");





// vtkOpenGLImageSlice methods
// ----------------------------------------------------------------------------

function vtkOpenGLImageSlice(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkOpenGLImageSlice'); // Builds myself.

  publicAPI.buildPass = function (prepass) {
    if (!model.renderable || !model.renderable.getVisibility()) {
      return;
    }

    if (prepass) {
      if (!model.renderable) {
        return;
      }

      model.openGLRenderWindow = publicAPI.getFirstAncestorOfType('vtkOpenGLRenderWindow');
      model.openGLRenderer = publicAPI.getFirstAncestorOfType('vtkOpenGLRenderer');
      model.context = model.openGLRenderWindow.getContext();
      publicAPI.prepareNodes();
      publicAPI.addMissingNode(model.renderable.getMapper());
      publicAPI.removeUnusedNodes();
    }
  };

  publicAPI.traverseOpaqueZBufferPass = function (renderPass) {
    publicAPI.traverseOpaquePass(renderPass);
  }; // we draw textures, then mapper, then post pass textures


  publicAPI.traverseOpaquePass = function (renderPass) {
    if (!model.renderable || !model.renderable.getNestedVisibility() || !model.renderable.getIsOpaque() || model.openGLRenderer.getSelector() && !model.renderable.getNestedPickable()) {
      return;
    }

    publicAPI.apply(renderPass, true);
    model.children.forEach(function (child) {
      child.traverse(renderPass);
    });
    publicAPI.apply(renderPass, false);
  }; // we draw textures, then mapper, then post pass textures


  publicAPI.traverseTranslucentPass = function (renderPass) {
    if (!model.renderable || !model.renderable.getNestedVisibility() || model.renderable.getIsOpaque() || model.openGLRenderer.getSelector() && !model.renderable.getNestedPickable()) {
      return;
    }

    publicAPI.apply(renderPass, true);
    model.children.forEach(function (child) {
      child.traverse(renderPass);
    });
    publicAPI.apply(renderPass, false);
  };

  publicAPI.queryPass = function (prepass, renderPass) {
    if (prepass) {
      if (!model.renderable || !model.renderable.getVisibility()) {
        return;
      }

      if (model.renderable.getIsOpaque()) {
        renderPass.incrementOpaqueActorCount();
      } else {
        renderPass.incrementTranslucentActorCount();
      }
    }
  };

  publicAPI.opaqueZBufferPass = function (prepass, renderPass) {
    return publicAPI.opaquePass(prepass, renderPass);
  }; // Renders myself


  publicAPI.opaquePass = function (prepass, renderPass) {
    if (prepass) {
      model.context.depthMask(true);
    }
  }; // Renders myself


  publicAPI.translucentPass = function (prepass, renderPass) {
    model.context.depthMask(!prepass);
  };

  publicAPI.getKeyMatrices = function () {
    // has the actor changed?
    if (model.renderable.getMTime() > model.keyMatrixTime.getMTime()) {
      gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat4"].copy(model.keyMatrices.mcwc, model.renderable.getMatrix());
      gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat4"].transpose(model.keyMatrices.mcwc, model.keyMatrices.mcwc);
      model.keyMatrixTime.modified();
    }

    return model.keyMatrices;
  };
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {
  context: null,
  keyMatrixTime: null,
  keyMatrices: null
}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance

  _SceneGraph_ViewNode_js__WEBPACK_IMPORTED_MODULE_2__["default"].extend(publicAPI, model, initialValues);
  model.keyMatrixTime = {};
  Object(_macros_js__WEBPACK_IMPORTED_MODULE_1__["obj"])(model.keyMatrixTime, {
    mtime: 0
  });
  model.keyMatrices = {
    mcwc: gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat4"].identity(new Float64Array(16))
  }; // Build VTK API

  Object(_macros_js__WEBPACK_IMPORTED_MODULE_1__["setGet"])(publicAPI, model, ['context']); // Object methods

  vtkOpenGLImageSlice(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = Object(_macros_js__WEBPACK_IMPORTED_MODULE_1__["newInstance"])(extend, 'vtkOpenGLImageSlice'); // ----------------------------------------------------------------------------

var vtkImageSlice = {
  newInstance: newInstance,
  extend: extend
}; // Register ourself to OpenGL backend if imported

Object(_ViewNodeFactory_js__WEBPACK_IMPORTED_MODULE_3__["registerOverride"])('vtkImageSlice', newInstance);




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/PixelSpaceCallbackMapper.js":
/*!************************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Rendering/OpenGL/PixelSpaceCallbackMapper.js ***!
  \************************************************************************************/
/*! exports provided: default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkPixelSpaceCallbackMapper; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _SceneGraph_ViewNode_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../SceneGraph/ViewNode.js */ "../node_modules/@kitware/vtk.js/Rendering/SceneGraph/ViewNode.js");
/* harmony import */ var _ViewNodeFactory_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ViewNodeFactory.js */ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/ViewNodeFactory.js");




// import { mat4, vec3 }     from 'gl-matrix';
var vtkDebugMacro = _macros_js__WEBPACK_IMPORTED_MODULE_0__["vtkDebugMacro"]; // ----------------------------------------------------------------------------
// vtkOpenGLPixelSpaceCallbackMapper methods
// ----------------------------------------------------------------------------

function vtkOpenGLPixelSpaceCallbackMapper(publicAPI, model) {
  model.classHierarchy.push('vtkOpenGLPixelSpaceCallbackMapper');

  publicAPI.opaquePass = function (prepass, renderPass) {
    model.openGLRenderer = publicAPI.getFirstAncestorOfType('vtkOpenGLRenderer');
    model.openGLRenderWindow = model.openGLRenderer.getParent();
    var aspectRatio = model.openGLRenderer.getAspectRatio();
    var camera = model.openGLRenderer ? model.openGLRenderer.getRenderable().getActiveCamera() : null;
    var tsize = model.openGLRenderer.getTiledSizeAndOrigin();
    var texels = null;

    if (model.renderable.getUseZValues()) {
      var zbt = renderPass.getZBufferTexture();
      var width = Math.floor(zbt.getWidth());
      var height = Math.floor(zbt.getHeight());
      var gl = model.openGLRenderWindow.getContext();
      zbt.bind(); // Here we need to use vtkFramebuffer to save current settings (bindings/buffers)

      var fb = renderPass.getFramebuffer();

      if (!fb) {
        vtkDebugMacro('No framebuffer to save/restore');
      } else {
        // save framebuffer settings
        fb.saveCurrentBindingsAndBuffers();
      }

      var framebuffer = gl.createFramebuffer();
      gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);
      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, zbt.getHandle(), 0);

      if (gl.checkFramebufferStatus(gl.FRAMEBUFFER) === gl.FRAMEBUFFER_COMPLETE) {
        texels = new Uint8Array(width * height * 4);
        gl.viewport(0, 0, width, height);
        gl.readPixels(0, 0, width, height, gl.RGBA, gl.UNSIGNED_BYTE, texels);
      } // Now we need to restore framebuffer bindings/buffers


      if (fb) {
        fb.restorePreviousBindingsAndBuffers();
      }

      gl.deleteFramebuffer(framebuffer);
    }

    model.renderable.invokeCallback(model.renderable.getInputData(), camera, aspectRatio, tsize, texels);
  };

  publicAPI.queryPass = function (prepass, renderPass) {
    if (prepass) {
      if (model.renderable.getUseZValues()) {
        renderPass.requestDepth();
      }
    }
  };
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance

  _SceneGraph_ViewNode_js__WEBPACK_IMPORTED_MODULE_1__["default"].extend(publicAPI, model, initialValues); // Object methods

  vtkOpenGLPixelSpaceCallbackMapper(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = Object(_macros_js__WEBPACK_IMPORTED_MODULE_0__["newInstance"])(extend, 'vtkOpenGLPixelSpaceCallbackMapper'); // ----------------------------------------------------------------------------

var vtkPixelSpaceCallbackMapper = {
  newInstance: newInstance,
  extend: extend
}; // Register ourself to OpenGL backend if imported

Object(_ViewNodeFactory_js__WEBPACK_IMPORTED_MODULE_2__["registerOverride"])('vtkPixelSpaceCallbackMapper', newInstance);




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/PolyDataMapper.js":
/*!**************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Rendering/OpenGL/PolyDataMapper.js ***!
  \**************************************************************************/
/*! exports provided: default, extend, newInstance, primTypes */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkOpenGLPolyDataMapper$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "primTypes", function() { return primTypes; });
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "../node_modules/@babel/runtime/helpers/toConsumableArray.js");
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! gl-matrix */ "../node_modules/gl-matrix/esm/index.js");
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _Helper_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Helper.js */ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/Helper.js");
/* harmony import */ var _Core_Mapper_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Core/Mapper.js */ "../node_modules/@kitware/vtk.js/Rendering/Core/Mapper.js");
/* harmony import */ var _Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../Common/Core/Math/index.js */ "../node_modules/@kitware/vtk.js/Common/Core/Math/index.js");
/* harmony import */ var _Texture_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Texture.js */ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/Texture.js");
/* harmony import */ var _Core_Property_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../Core/Property.js */ "../node_modules/@kitware/vtk.js/Rendering/Core/Property.js");
/* harmony import */ var _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./ShaderProgram.js */ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/ShaderProgram.js");
/* harmony import */ var _SceneGraph_ViewNode_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../SceneGraph/ViewNode.js */ "../node_modules/@kitware/vtk.js/Rendering/SceneGraph/ViewNode.js");
/* harmony import */ var _glsl_vtkPolyDataVS_glsl_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./glsl/vtkPolyDataVS.glsl.js */ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/glsl/vtkPolyDataVS.glsl.js");
/* harmony import */ var _glsl_vtkPolyDataFS_glsl_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./glsl/vtkPolyDataFS.glsl.js */ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/glsl/vtkPolyDataFS.glsl.js");
/* harmony import */ var _ReplacementShaderMapper_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./ReplacementShaderMapper.js */ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/ReplacementShaderMapper.js");
/* harmony import */ var _ViewNodeFactory_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./ViewNodeFactory.js */ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/ViewNodeFactory.js");















/* eslint-disable no-lonely-if */

var primTypes = {
  Start: 0,
  Points: 0,
  Lines: 1,
  Tris: 2,
  TriStrips: 3,
  TrisEdges: 4,
  TriStripsEdges: 5,
  End: 6
};
var Representation = _Core_Property_js__WEBPACK_IMPORTED_MODULE_7__["default"].Representation,
    Shading = _Core_Property_js__WEBPACK_IMPORTED_MODULE_7__["default"].Shading;
var ScalarMode = _Core_Mapper_js__WEBPACK_IMPORTED_MODULE_4__["default"].ScalarMode;
var Filter = _Texture_js__WEBPACK_IMPORTED_MODULE_6__["default"].Filter,
    Wrap = _Texture_js__WEBPACK_IMPORTED_MODULE_6__["default"].Wrap;
var vtkErrorMacro = _macros_js__WEBPACK_IMPORTED_MODULE_2__["vtkErrorMacro"];
var StartEvent = {
  type: 'StartEvent'
};
var EndEvent = {
  type: 'EndEvent'
}; // ----------------------------------------------------------------------------
// vtkOpenGLPolyDataMapper methods
// ----------------------------------------------------------------------------

function vtkOpenGLPolyDataMapper(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkOpenGLPolyDataMapper');

  publicAPI.buildPass = function (prepass) {
    if (prepass) {
      model.openGLActor = publicAPI.getFirstAncestorOfType('vtkOpenGLActor');
      model.openGLRenderer = model.openGLActor.getFirstAncestorOfType('vtkOpenGLRenderer');
      model.openGLRenderWindow = model.openGLRenderer.getParent();
      model.openGLCamera = model.openGLRenderer.getViewNodeFor(model.openGLRenderer.getRenderable().getActiveCamera());
    }
  }; // Renders myself


  publicAPI.translucentPass = function (prepass) {
    if (prepass) {
      publicAPI.render();
    }
  };

  publicAPI.opaqueZBufferPass = function (prepass) {
    if (prepass) {
      model.haveSeenDepthRequest = true;
      model.renderDepth = true;
      publicAPI.render();
      model.renderDepth = false;
    }
  };

  publicAPI.opaquePass = function (prepass) {
    if (prepass) {
      publicAPI.render();
    }
  };

  publicAPI.render = function () {
    var ctx = model.openGLRenderWindow.getContext();

    if (model.context !== ctx) {
      model.context = ctx;

      for (var i = primTypes.Start; i < primTypes.End; i++) {
        model.primitives[i].setOpenGLRenderWindow(model.openGLRenderWindow);
      }
    }

    var actor = model.openGLActor.getRenderable();
    var ren = model.openGLRenderer.getRenderable();
    publicAPI.renderPiece(ren, actor);
  };

  publicAPI.buildShaders = function (shaders, ren, actor) {
    publicAPI.getShaderTemplate(shaders, ren, actor); // user specified pre replacements

    var openGLSpec = model.renderable.getViewSpecificProperties().OpenGL;
    var shaderReplacements = null;

    if (openGLSpec) {
      shaderReplacements = openGLSpec.ShaderReplacements;
    }

    if (shaderReplacements) {
      for (var i = 0; i < shaderReplacements.length; i++) {
        var currReplacement = shaderReplacements[i];

        if (currReplacement.replaceFirst) {
          var shaderType = currReplacement.shaderType;
          var ssrc = shaders[shaderType];
          var substituteRes = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_8__["default"].substitute(ssrc, currReplacement.originalValue, currReplacement.replacementValue, currReplacement.replaceAll);
          shaders[shaderType] = substituteRes.result;
        }
      }
    }

    publicAPI.replaceShaderValues(shaders, ren, actor); // user specified post replacements

    if (shaderReplacements) {
      for (var _i = 0; _i < shaderReplacements.length; _i++) {
        var _currReplacement = shaderReplacements[_i];

        if (!_currReplacement.replaceFirst) {
          var _shaderType = _currReplacement.shaderType;
          var _ssrc = shaders[_shaderType];

          var _substituteRes = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_8__["default"].substitute(_ssrc, _currReplacement.originalValue, _currReplacement.replacementValue, _currReplacement.replaceAll);

          shaders[_shaderType] = _substituteRes.result;
        }
      }
    }
  };

  publicAPI.getShaderTemplate = function (shaders, ren, actor) {
    var openGLSpecProp = model.renderable.getViewSpecificProperties().OpenGL;
    var vertexShaderCode = _glsl_vtkPolyDataVS_glsl_js__WEBPACK_IMPORTED_MODULE_10__["v"];

    if (openGLSpecProp) {
      var vertexSpecProp = openGLSpecProp.VertexShaderCode;

      if (vertexSpecProp !== undefined && vertexSpecProp !== '') {
        vertexShaderCode = vertexSpecProp;
      }
    }

    shaders.Vertex = vertexShaderCode;
    var fragmentShaderCode = _glsl_vtkPolyDataFS_glsl_js__WEBPACK_IMPORTED_MODULE_11__["v"];

    if (openGLSpecProp) {
      var fragmentSpecProp = openGLSpecProp.FragmentShaderCode;

      if (fragmentSpecProp !== undefined && fragmentSpecProp !== '') {
        fragmentShaderCode = fragmentSpecProp;
      }
    }

    shaders.Fragment = fragmentShaderCode;
    var geometryShaderCode = '';

    if (openGLSpecProp) {
      var geometrySpecProp = openGLSpecProp.GeometryShaderCode;

      if (geometrySpecProp !== undefined) {
        geometryShaderCode = geometrySpecProp;
      }
    }

    shaders.Geometry = geometryShaderCode;
  };

  publicAPI.replaceShaderColor = function (shaders, ren, actor) {
    var VSSource = shaders.Vertex;
    var GSSource = shaders.Geometry;
    var FSSource = shaders.Fragment;
    var lastLightComplexity = model.lastBoundBO.getReferenceByName('lastLightComplexity'); // create the material/color property declarations, and VS implementation
    // these are always defined

    var colorDec = ['uniform float ambient;', 'uniform float diffuse;', 'uniform float specular;', 'uniform float opacityUniform; // the fragment opacity', 'uniform vec3 ambientColorUniform;', 'uniform vec3 diffuseColorUniform;']; // add more for specular

    if (lastLightComplexity) {
      colorDec = colorDec.concat(['uniform vec3 specularColorUniform;', 'uniform float specularPowerUniform;']);
    } // now handle the more complex fragment shader implementation
    // the following are always defined variables.  We start
    // by assigning a default value from the uniform


    var colorImpl = ['vec3 ambientColor;', '  vec3 diffuseColor;', '  float opacity;'];

    if (lastLightComplexity) {
      colorImpl = colorImpl.concat(['  vec3 specularColor;', '  float specularPower;']);
    }

    colorImpl = colorImpl.concat(['  ambientColor = ambientColorUniform;', '  diffuseColor = diffuseColorUniform;', '  opacity = opacityUniform;']);

    if (lastLightComplexity) {
      colorImpl = colorImpl.concat(['  specularColor = specularColorUniform;', '  specularPower = specularPowerUniform;']);
    } // add scalar vertex coloring


    if (model.lastBoundBO.getCABO().getColorComponents() !== 0 && !model.drawingEdges) {
      colorDec = colorDec.concat(['varying vec4 vertexColorVSOutput;']);
      VSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_8__["default"].substitute(VSSource, '//VTK::Color::Dec', ['attribute vec4 scalarColor;', 'varying vec4 vertexColorVSOutput;']).result;
      VSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_8__["default"].substitute(VSSource, '//VTK::Color::Impl', ['vertexColorVSOutput =  scalarColor;']).result;
      GSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_8__["default"].substitute(GSSource, '//VTK::Color::Dec', ['in vec4 vertexColorVSOutput[];', 'out vec4 vertexColorGSOutput;']).result;
      GSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_8__["default"].substitute(GSSource, '//VTK::Color::Impl', ['vertexColorGSOutput = vertexColorVSOutput[i];']).result;
    }

    if (model.lastBoundBO.getCABO().getColorComponents() !== 0 && !model.drawingEdges) {
      FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_8__["default"].substitute(FSSource, '//VTK::Color::Impl', colorImpl.concat(['  diffuseColor = vertexColorVSOutput.rgb;', '  ambientColor = vertexColorVSOutput.rgb;', '  opacity = opacity*vertexColorVSOutput.a;'])).result;
    } else {
      if (model.renderable.getInterpolateScalarsBeforeMapping() && model.renderable.getColorCoordinates() && !model.drawingEdges) {
        FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_8__["default"].substitute(FSSource, '//VTK::Color::Impl', colorImpl.concat(['  vec4 texColor = texture2D(texture1, tcoordVCVSOutput.st);', '  diffuseColor = texColor.rgb;', '  ambientColor = texColor.rgb;', '  opacity = opacity*texColor.a;'])).result;
      } else {
        if (actor.getBackfaceProperty() && !model.drawingEdges) {
          colorDec = colorDec.concat(['uniform float opacityUniformBF; // the fragment opacity', 'uniform float ambientIntensityBF; // the material ambient', 'uniform float diffuseIntensityBF; // the material diffuse', 'uniform vec3 ambientColorUniformBF; // ambient material color', 'uniform vec3 diffuseColorUniformBF; // diffuse material color']);

          if (lastLightComplexity) {
            colorDec = colorDec.concat(['uniform float specularIntensityBF; // the material specular intensity', 'uniform vec3 specularColorUniformBF; // intensity weighted color', 'uniform float specularPowerUniformBF;']);
            colorImpl = colorImpl.concat(['if (gl_FrontFacing == false) {', '  ambientColor = ambientIntensityBF * ambientColorUniformBF;', '  diffuseColor = diffuseIntensityBF * diffuseColorUniformBF;', '  specularColor = specularIntensityBF * specularColorUniformBF;', '  specularPower = specularPowerUniformBF;', '  opacity = opacityUniformBF; }']);
          } else {
            colorImpl = colorImpl.concat(['if (gl_FrontFacing == false) {', '  ambientColor = ambientIntensityBF * ambientColorUniformBF;', '  diffuseColor = diffuseIntensityBF * diffuseColorUniformBF;', '  opacity = opacityUniformBF; }']);
          }
        }

        if (model.haveCellScalars && !model.drawingEdges) {
          colorDec = colorDec.concat(['uniform samplerBuffer texture1;']);
        }

        FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_8__["default"].substitute(FSSource, '//VTK::Color::Impl', colorImpl).result;
      }
    }

    FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_8__["default"].substitute(FSSource, '//VTK::Color::Dec', colorDec).result;
    shaders.Vertex = VSSource;
    shaders.Geometry = GSSource;
    shaders.Fragment = FSSource;
  };

  publicAPI.replaceShaderLight = function (shaders, ren, actor) {
    var FSSource = shaders.Fragment; // check for shadow maps

    var shadowFactor = '';
    var lastLightComplexity = model.lastBoundBO.getReferenceByName('lastLightComplexity');
    var lastLightCount = model.lastBoundBO.getReferenceByName('lastLightCount');
    var sstring = [];

    switch (lastLightComplexity) {
      case 0:
        // no lighting or RENDER_VALUES
        FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_8__["default"].substitute(FSSource, '//VTK::Light::Impl', ['  gl_FragData[0] = vec4(ambientColor * ambient + diffuseColor * diffuse, opacity);', '  //VTK::Light::Impl'], false).result;
        break;

      case 1:
        // headlight
        FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_8__["default"].substitute(FSSource, '//VTK::Light::Impl', ['  float df = max(0.0, normalVCVSOutput.z);', '  float sf = pow(df, specularPower);', '  vec3 diffuseL = df * diffuseColor;', '  vec3 specularL = sf * specularColor;', '  gl_FragData[0] = vec4(ambientColor * ambient + diffuseL * diffuse + specularL * specular, opacity);', '  //VTK::Light::Impl'], false).result;
        break;

      case 2:
        // light kit
        for (var lc = 0; lc < lastLightCount; ++lc) {
          sstring = sstring.concat(["uniform vec3 lightColor".concat(lc, ";"), "uniform vec3 lightDirectionVC".concat(lc, "; // normalized"), "uniform vec3 lightHalfAngleVC".concat(lc, "; // normalized")]);
        }

        FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_8__["default"].substitute(FSSource, '//VTK::Light::Dec', sstring).result;
        sstring = ['vec3 diffuseL = vec3(0,0,0);', '  vec3 specularL = vec3(0,0,0);', '  float df;'];

        for (var _lc = 0; _lc < lastLightCount; ++_lc) {
          sstring = sstring.concat(["  df = max(0.0, dot(normalVCVSOutput, -lightDirectionVC".concat(_lc, "));"), "  diffuseL += ((df".concat(shadowFactor, ") * lightColor").concat(_lc, ");"), "  if (dot(normalVCVSOutput, lightDirectionVC".concat(_lc, ") < 0.0)"), '    {', "    float sf = pow( max(0.0, dot(lightHalfAngleVC".concat(_lc, ",normalVCVSOutput)), specularPower);"), "    specularL += ((sf".concat(shadowFactor, ") * lightColor").concat(_lc, ");"), '    }']);
        }

        sstring = sstring.concat(['  diffuseL = diffuseL * diffuseColor;', '  specularL = specularL * specularColor;', '  gl_FragData[0] = vec4(ambientColor * ambient + diffuseL * diffuse + specularL * specular, opacity);', '  //VTK::Light::Impl']);
        FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_8__["default"].substitute(FSSource, '//VTK::Light::Impl', sstring, false).result;
        break;

      case 3:
        // positional
        for (var _lc2 = 0; _lc2 < lastLightCount; ++_lc2) {
          sstring = sstring.concat(["uniform vec3 lightColor".concat(_lc2, ";"), "uniform vec3 lightDirectionVC".concat(_lc2, "; // normalized"), "uniform vec3 lightHalfAngleVC".concat(_lc2, "; // normalized"), "uniform vec3 lightPositionVC".concat(_lc2, ";"), "uniform vec3 lightAttenuation".concat(_lc2, ";"), "uniform float lightConeAngle".concat(_lc2, ";"), "uniform float lightExponent".concat(_lc2, ";"), "uniform int lightPositional".concat(_lc2, ";")]);
        }

        FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_8__["default"].substitute(FSSource, '//VTK::Light::Dec', sstring).result;
        sstring = ['vec3 diffuseL = vec3(0,0,0);', '  vec3 specularL = vec3(0,0,0);', '  vec3 vertLightDirectionVC;', '  float attenuation;', '  float df;'];

        for (var _lc3 = 0; _lc3 < lastLightCount; ++_lc3) {
          sstring = sstring.concat(['  attenuation = 1.0;', "  if (lightPositional".concat(_lc3, " == 0)"), '    {', "      vertLightDirectionVC = lightDirectionVC".concat(_lc3, ";"), '    }', '  else', '    {', "    vertLightDirectionVC = vertexVC.xyz - lightPositionVC".concat(_lc3, ";"), '    float distanceVC = length(vertLightDirectionVC);', '    vertLightDirectionVC = normalize(vertLightDirectionVC);', '    attenuation = 1.0 /', "      (lightAttenuation".concat(_lc3, ".x"), "       + lightAttenuation".concat(_lc3, ".y * distanceVC"), "       + lightAttenuation".concat(_lc3, ".z * distanceVC * distanceVC);"), '    // per OpenGL standard cone angle is 90 or less for a spot light', "    if (lightConeAngle".concat(_lc3, " <= 90.0)"), '      {', "      float coneDot = dot(vertLightDirectionVC, lightDirectionVC".concat(_lc3, ");"), '      // if inside the cone', "      if (coneDot >= cos(radians(lightConeAngle".concat(_lc3, ")))"), '        {', "        attenuation = attenuation * pow(coneDot, lightExponent".concat(_lc3, ");"), '        }', '      else', '        {', '        attenuation = 0.0;', '        }', '      }', '    }', '    df = max(0.0, attenuation*dot(normalVCVSOutput, -vertLightDirectionVC));', "    diffuseL += ((df".concat(shadowFactor, ") * lightColor").concat(_lc3, ");"), '    if (dot(normalVCVSOutput, vertLightDirectionVC) < 0.0)', '      {', "      float sf = attenuation*pow( max(0.0, dot(lightHalfAngleVC".concat(_lc3, ",normalVCVSOutput)), specularPower);"), "    specularL += ((sf".concat(shadowFactor, ") * lightColor").concat(_lc3, ");"), '    }']);
        }

        sstring = sstring.concat(['  diffuseL = diffuseL * diffuseColor;', '  specularL = specularL * specularColor;', '  gl_FragData[0] = vec4(ambientColor * ambient + diffuseL * diffuse + specularL * specular, opacity);', '  //VTK::Light::Impl']);
        FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_8__["default"].substitute(FSSource, '//VTK::Light::Impl', sstring, false).result;
        break;

      default:
        vtkErrorMacro('bad light complexity');
    }

    shaders.Fragment = FSSource;
  };

  publicAPI.replaceShaderNormal = function (shaders, ren, actor) {
    var lastLightComplexity = model.lastBoundBO.getReferenceByName('lastLightComplexity');

    if (lastLightComplexity > 0) {
      var VSSource = shaders.Vertex;
      var GSSource = shaders.Geometry;
      var FSSource = shaders.Fragment;

      if (model.lastBoundBO.getCABO().getNormalOffset()) {
        VSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_8__["default"].substitute(VSSource, '//VTK::Normal::Dec', ['attribute vec3 normalMC;', 'uniform mat3 normalMatrix;', 'varying vec3 normalVCVSOutput;']).result;
        VSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_8__["default"].substitute(VSSource, '//VTK::Normal::Impl', ['normalVCVSOutput = normalMatrix * normalMC;']).result;
        GSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_8__["default"].substitute(GSSource, '//VTK::Normal::Dec', ['in vec3 normalVCVSOutput[];', 'out vec3 normalVCGSOutput;']).result;
        GSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_8__["default"].substitute(GSSource, '//VTK::Normal::Impl', ['normalVCGSOutput = normalVCVSOutput[i];']).result;
        FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_8__["default"].substitute(FSSource, '//VTK::Normal::Dec', ['varying vec3 normalVCVSOutput;']).result;
        FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_8__["default"].substitute(FSSource, '//VTK::Normal::Impl', ['vec3 normalVCVSOutput = normalize(normalVCVSOutput);', //  if (!gl_FrontFacing) does not work in intel hd4000 mac
        //  if (int(gl_FrontFacing) == 0) does not work on mesa
        '  if (gl_FrontFacing == false) { normalVCVSOutput = -normalVCVSOutput; }']).result;
      } else {
        if (model.haveCellNormals) {
          FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_8__["default"].substitute(FSSource, '//VTK::Normal::Dec', ['uniform mat3 normalMatrix;', 'uniform samplerBuffer textureN;']).result;
          FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_8__["default"].substitute(FSSource, '//VTK::Normal::Impl', ['vec3 normalVCVSOutput = normalize(normalMatrix *', '    texelFetchBuffer(textureN, gl_PrimitiveID + PrimitiveIDOffset).xyz);', '  if (gl_FrontFacing == false) { normalVCVSOutput = -normalVCVSOutput; }']).result;
        } else {
          if (publicAPI.getOpenGLMode(actor.getProperty().getRepresentation(), model.lastBoundBO.getPrimitiveType()) === model.context.LINES) {
            // generate a normal for lines, it will be perpendicular to the line
            // and maximally aligned with the camera view direction
            // no clue if this is the best way to do this.
            // the code below has been optimized a bit so what follows is
            // an explanation of the basic approach. Compute the gradient of the line
            // with respect to x and y, the the larger of the two
            // cross that with the camera view direction. That gives a vector
            // orthogonal to the camera view and the line. Note that the line and the camera
            // view are probably not orthogonal. Which is why when we cross result that with
            // the line gradient again we get a reasonable normal. It will be othogonal to
            // the line (which is a plane but maximally aligned with the camera view.
            FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_8__["default"].substitute(FSSource, '//VTK::UniformFlow::Impl', ['  vec3 fdx = dFdx(vertexVC.xyz);', '  vec3 fdy = dFdy(vertexVC.xyz);', '  //VTK::UniformFlow::Impl'] // For further replacements
            ).result;
            FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_8__["default"].substitute(FSSource, '//VTK::Normal::Impl', ['vec3 normalVCVSOutput;', '  if (abs(fdx.x) > 0.0)', '    { fdx = normalize(fdx); normalVCVSOutput = normalize(cross(vec3(fdx.y, -fdx.x, 0.0), fdx)); }', '  else { fdy = normalize(fdy); normalVCVSOutput = normalize(cross(vec3(fdy.y, -fdy.x, 0.0), fdy));}']).result;
          } else {
            FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_8__["default"].substitute(FSSource, '//VTK::Normal::Dec', ['uniform int cameraParallel;']).result;
            FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_8__["default"].substitute(FSSource, '//VTK::UniformFlow::Impl', [// '  vec3 fdx = vec3(dFdx(vertexVC.x),dFdx(vertexVC.y),dFdx(vertexVC.z));',
            // '  vec3 fdy = vec3(dFdy(vertexVC.x),dFdy(vertexVC.y),dFdy(vertexVC.z));',
            '  vec3 fdx = dFdx(vertexVC.xyz);', '  vec3 fdy = dFdy(vertexVC.xyz);', '  //VTK::UniformFlow::Impl'] // For further replacements
            ).result;
            FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_8__["default"].substitute(FSSource, '//VTK::Normal::Impl', ['  fdx = normalize(fdx);', '  fdy = normalize(fdy);', '  vec3 normalVCVSOutput = normalize(cross(fdx,fdy));', // the code below is faster, but does not work on some devices
            // 'vec3 normalVC = normalize(cross(dFdx(vertexVC.xyz), dFdy(vertexVC.xyz)));',
            '  if (cameraParallel == 1 && normalVCVSOutput.z < 0.0) { normalVCVSOutput = -1.0*normalVCVSOutput; }', '  if (cameraParallel == 0 && dot(normalVCVSOutput,vertexVC.xyz) > 0.0) { normalVCVSOutput = -1.0*normalVCVSOutput; }']).result;
          }
        }
      }

      shaders.Vertex = VSSource;
      shaders.Geometry = GSSource;
      shaders.Fragment = FSSource;
    }
  };

  publicAPI.replaceShaderPositionVC = function (shaders, ren, actor) {
    var VSSource = shaders.Vertex;
    var GSSource = shaders.Geometry;
    var FSSource = shaders.Fragment; // for points make sure to add in the point size

    if (actor.getProperty().getRepresentation() === Representation.POINTS || model.lastBoundBO.getPrimitiveType() === primTypes.Points) {
      VSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_8__["default"].substitute(VSSource, '//VTK::PositionVC::Impl', ['//VTK::PositionVC::Impl', "  gl_PointSize = ".concat(actor.getProperty().getPointSize(), ".0;")], false).result;
    } // do we need the vertex in the shader in View Coordinates


    var lastLightComplexity = model.lastBoundBO.getReferenceByName('lastLightComplexity');

    if (lastLightComplexity > 0) {
      VSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_8__["default"].substitute(VSSource, '//VTK::PositionVC::Dec', ['varying vec4 vertexVCVSOutput;']).result;
      VSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_8__["default"].substitute(VSSource, '//VTK::PositionVC::Impl', ['vertexVCVSOutput = MCVCMatrix * vertexMC;', '  gl_Position = MCPCMatrix * vertexMC;']).result;
      VSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_8__["default"].substitute(VSSource, '//VTK::Camera::Dec', ['uniform mat4 MCPCMatrix;', 'uniform mat4 MCVCMatrix;']).result;
      GSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_8__["default"].substitute(GSSource, '//VTK::PositionVC::Dec', ['in vec4 vertexVCVSOutput[];', 'out vec4 vertexVCGSOutput;']).result;
      GSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_8__["default"].substitute(GSSource, '//VTK::PositionVC::Impl', ['vertexVCGSOutput = vertexVCVSOutput[i];']).result;
      FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_8__["default"].substitute(FSSource, '//VTK::PositionVC::Dec', ['varying vec4 vertexVCVSOutput;']).result;
      FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_8__["default"].substitute(FSSource, '//VTK::PositionVC::Impl', ['vec4 vertexVC = vertexVCVSOutput;']).result;
    } else {
      VSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_8__["default"].substitute(VSSource, '//VTK::Camera::Dec', ['uniform mat4 MCPCMatrix;']).result;
      VSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_8__["default"].substitute(VSSource, '//VTK::PositionVC::Impl', ['  gl_Position = MCPCMatrix * vertexMC;']).result;
    }

    shaders.Vertex = VSSource;
    shaders.Geometry = GSSource;
    shaders.Fragment = FSSource;
  };

  publicAPI.replaceShaderTCoord = function (shaders, ren, actor) {
    if (model.lastBoundBO.getCABO().getTCoordOffset()) {
      var VSSource = shaders.Vertex;
      var GSSource = shaders.Geometry;
      var FSSource = shaders.Fragment;

      if (model.drawingEdges) {
        return;
      }

      VSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_8__["default"].substitute(VSSource, '//VTK::TCoord::Impl', 'tcoordVCVSOutput = tcoordMC;').result; // we only handle the first texture by default
      // additional textures are activated and we set the uniform
      // for the texture unit they are assigned to, but you have to
      // add in the shader code to do something with them

      var tus = model.openGLActor.getActiveTextures();
      var tNumComp = 2;
      var tcdim = 2;

      if (tus && tus.length > 0) {
        tNumComp = tus[0].getComponents();

        if (tus[0].getTarget() === model.context.TEXTURE_CUBE_MAP) {
          tcdim = 3;
        }
      }

      if (model.renderable.getColorTextureMap()) {
        tNumComp = model.renderable.getColorTextureMap().getPointData().getScalars().getNumberOfComponents();
        tcdim = 2;
      }

      if (tcdim === 2) {
        VSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_8__["default"].substitute(VSSource, '//VTK::TCoord::Dec', 'attribute vec2 tcoordMC; varying vec2 tcoordVCVSOutput;').result;
        GSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_8__["default"].substitute(GSSource, '//VTK::TCoord::Dec', ['in vec2 tcoordVCVSOutput[];', 'out vec2 tcoordVCGSOutput;']).result;
        GSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_8__["default"].substitute(GSSource, '//VTK::TCoord::Impl', 'tcoordVCGSOutput = tcoordVCVSOutput[i];').result;
        FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_8__["default"].substitute(FSSource, '//VTK::TCoord::Dec', ['varying vec2 tcoordVCVSOutput;', 'uniform sampler2D texture1;']).result;

        if (tus && tus.length >= 1) {
          switch (tNumComp) {
            case 1:
              FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_8__["default"].substitute(FSSource, '//VTK::TCoord::Impl', ['  vec4 tcolor = texture2D(texture1, tcoordVCVSOutput);', '  ambientColor = ambientColor*tcolor.r;', '  diffuseColor = diffuseColor*tcolor.r;']).result;
              break;

            case 2:
              FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_8__["default"].substitute(FSSource, '//VTK::TCoord::Impl', ['  vec4 tcolor = texture2D(texture1, tcoordVCVSOutput);', '  ambientColor = ambientColor*tcolor.r;', '  diffuseColor = diffuseColor*tcolor.r;', '  opacity = opacity * tcolor.g;']).result;
              break;

            default:
              FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_8__["default"].substitute(FSSource, '//VTK::TCoord::Impl', ['  vec4 tcolor = texture2D(texture1, tcoordVCVSOutput);', '  ambientColor = ambientColor*tcolor.rgb;', '  diffuseColor = diffuseColor*tcolor.rgb;', '  opacity = opacity * tcolor.a;']).result;
          }
        }
      } else {
        VSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_8__["default"].substitute(VSSource, '//VTK::TCoord::Dec', 'attribute vec3 tcoordMC; varying vec3 tcoordVCVSOutput;').result;
        GSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_8__["default"].substitute(GSSource, '//VTK::TCoord::Dec', ['in vec3 tcoordVCVSOutput[];', 'out vec3 tcoordVCGSOutput;']).result;
        GSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_8__["default"].substitute(GSSource, '//VTK::TCoord::Impl', 'tcoordVCGSOutput = tcoordVCVSOutput[i];').result;
        FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_8__["default"].substitute(FSSource, '//VTK::TCoord::Dec', ['varying vec3 tcoordVCVSOutput;', 'uniform samplerCube texture1;']).result;

        switch (tNumComp) {
          case 1:
            FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_8__["default"].substitute(FSSource, '//VTK::TCoord::Impl', ['  vec4 tcolor = textureCube(texture1, tcoordVCVSOutput);', '  ambientColor = ambientColor*tcolor.r;', '  diffuseColor = diffuseColor*tcolor.r;']).result;
            break;

          case 2:
            FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_8__["default"].substitute(FSSource, '//VTK::TCoord::Impl', ['  vec4 tcolor = textureCube(texture1, tcoordVCVSOutput);', '  ambientColor = ambientColor*tcolor.r;', '  diffuseColor = diffuseColor*tcolor.r;', '  opacity = opacity * tcolor.g;']).result;
            break;

          default:
            FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_8__["default"].substitute(FSSource, '//VTK::TCoord::Impl', ['  vec4 tcolor = textureCube(texture1, tcoordVCVSOutput);', '  ambientColor = ambientColor*tcolor.rgb;', '  diffuseColor = diffuseColor*tcolor.rgb;', '  opacity = opacity * tcolor.a;']).result;
        }
      }

      shaders.Vertex = VSSource;
      shaders.Geometry = GSSource;
      shaders.Fragment = FSSource;
    }
  };

  publicAPI.replaceShaderClip = function (shaders, ren, actor) {
    var VSSource = shaders.Vertex;
    var FSSource = shaders.Fragment;

    if (model.renderable.getNumberOfClippingPlanes()) {
      var numClipPlanes = model.renderable.getNumberOfClippingPlanes();
      VSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_8__["default"].substitute(VSSource, '//VTK::Clip::Dec', ['uniform int numClipPlanes;', "uniform vec4 clipPlanes[".concat(numClipPlanes, "];"), "varying float clipDistancesVSOutput[".concat(numClipPlanes, "];")]).result;
      VSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_8__["default"].substitute(VSSource, '//VTK::Clip::Impl', ["for (int planeNum = 0; planeNum < ".concat(numClipPlanes, "; planeNum++)"), '    {', '    if (planeNum >= numClipPlanes)', '        {', '        break;', '        }', '    clipDistancesVSOutput[planeNum] = dot(clipPlanes[planeNum], vertexMC);', '    }']).result;
      FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_8__["default"].substitute(FSSource, '//VTK::Clip::Dec', ['uniform int numClipPlanes;', "varying float clipDistancesVSOutput[".concat(numClipPlanes, "];")]).result;
      FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_8__["default"].substitute(FSSource, '//VTK::Clip::Impl', ["for (int planeNum = 0; planeNum < ".concat(numClipPlanes, "; planeNum++)"), '    {', '    if (planeNum >= numClipPlanes)', '        {', '        break;', '        }', '    if (clipDistancesVSOutput[planeNum] < 0.0) discard;', '    }']).result;
    }

    shaders.Vertex = VSSource;
    shaders.Fragment = FSSource;
  };

  publicAPI.getCoincidentParameters = function (ren, actor) {
    // 1. ResolveCoincidentTopology is On and non zero for this primitive
    // type
    var cp = null;
    var prop = actor.getProperty();

    if (model.renderable.getResolveCoincidentTopology() || prop.getEdgeVisibility() && prop.getRepresentation() === Representation.SURFACE) {
      var primType = model.lastBoundBO.getPrimitiveType();

      if (primType === primTypes.Points || prop.getRepresentation() === Representation.POINTS) {
        cp = model.renderable.getCoincidentTopologyPointOffsetParameter();
      } else if (primType === primTypes.Lines || prop.getRepresentation() === Representation.WIREFRAME) {
        cp = model.renderable.getCoincidentTopologyLineOffsetParameters();
      } else if (primType === primTypes.Tris || primType === primTypes.TriStrips) {
        cp = model.renderable.getCoincidentTopologyPolygonOffsetParameters();
      }

      if (primType === primTypes.TrisEdges || primType === primTypes.TriStripsEdges) {
        cp = model.renderable.getCoincidentTopologyPolygonOffsetParameters();
        cp.factor /= 2.0;
        cp.offset /= 2.0;
      }
    } // hardware picking always offset due to saved zbuffer
    // This gets you above the saved surface depth buffer.
    // vtkHardwareSelector* selector = ren->GetSelector();
    // if (selector &&
    //     selector->GetFieldAssociation() == vtkDataObject::FIELD_ASSOCIATION_POINTS)
    // {
    //   offset -= 2.0;
    //   return;
    // }


    return cp;
  };

  publicAPI.replaceShaderPicking = function (shaders, ren, actor) {
    var FSSource = shaders.Fragment;
    FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_8__["default"].substitute(FSSource, '//VTK::Picking::Dec', ['uniform vec3 mapperIndex;', 'uniform int picking;']).result;
    FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_8__["default"].substitute(FSSource, '//VTK::Picking::Impl', '  gl_FragData[0] = picking != 0 ? vec4(mapperIndex,1.0) : gl_FragData[0];').result;
    shaders.Fragment = FSSource;
  };

  publicAPI.replaceShaderValues = function (shaders, ren, actor) {
    publicAPI.replaceShaderColor(shaders, ren, actor);
    publicAPI.replaceShaderNormal(shaders, ren, actor);
    publicAPI.replaceShaderLight(shaders, ren, actor);
    publicAPI.replaceShaderTCoord(shaders, ren, actor);
    publicAPI.replaceShaderPicking(shaders, ren, actor);
    publicAPI.replaceShaderClip(shaders, ren, actor);
    publicAPI.replaceShaderCoincidentOffset(shaders, ren, actor);
    publicAPI.replaceShaderPositionVC(shaders, ren, actor);

    if (model.haveSeenDepthRequest) {
      var FSSource = shaders.Fragment;
      FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_8__["default"].substitute(FSSource, '//VTK::ZBuffer::Dec', 'uniform int depthRequest;').result;
      FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_8__["default"].substitute(FSSource, '//VTK::ZBuffer::Impl', ['if (depthRequest == 1) {', 'float iz = floor(gl_FragCoord.z*65535.0 + 0.1);', 'float rf = floor(iz/256.0)/255.0;', 'float gf = mod(iz,256.0)/255.0;', 'gl_FragData[0] = vec4(rf, gf, 0.0, 1.0); }']).result;
      shaders.Fragment = FSSource;
    }
  };

  publicAPI.getNeedToRebuildShaders = function (cellBO, ren, actor) {
    var lightComplexity = 0;
    var numberOfLights = 0;
    var primType = cellBO.getPrimitiveType();
    var poly = model.currentInput; // different algo from C++ as of 5/2019

    var needLighting = false;
    var pointNormals = poly.getPointData().getNormals();
    var cellNormals = poly.getCellData().getNormals();
    var flat = actor.getProperty().getInterpolation() === Shading.FLAT;
    var representation = actor.getProperty().getRepresentation();
    var mode = publicAPI.getOpenGLMode(representation, primType); // 1) all surfaces need lighting

    if (mode === model.context.TRIANGLES) {
      needLighting = true; // 2) all cell normals without point normals need lighting
    } else if (cellNormals && !pointNormals) {
      needLighting = true; // 3) Phong + pointNormals need lighting
    } else if (!flat && pointNormals) {
      needLighting = true; // 4) Phong Lines need lighting
    } else if (!flat && mode === model.context.LINES) {
      needLighting = true;
    } // 5) everything else is unlit
    // do we need lighting?


    if (actor.getProperty().getLighting() && needLighting) {
      // consider the lighting complexity to determine which case applies
      // simple headlight, Light Kit, the whole feature set of VTK
      lightComplexity = 0;
      var lights = ren.getLightsByReference();

      for (var index = 0; index < lights.length; ++index) {
        var light = lights[index];
        var status = light.getSwitch();

        if (status > 0) {
          numberOfLights++;

          if (lightComplexity === 0) {
            lightComplexity = 1;
          }
        }

        if (lightComplexity === 1 && (numberOfLights > 1 || light.getIntensity() !== 1.0 || !light.lightTypeIsHeadLight())) {
          lightComplexity = 2;
        }

        if (lightComplexity < 3 && light.getPositional()) {
          lightComplexity = 3;
        }
      }
    }

    var needRebuild = false;
    var lastLightComplexity = model.lastBoundBO.getReferenceByName('lastLightComplexity');
    var lastLightCount = model.lastBoundBO.getReferenceByName('lastLightCount');

    if (lastLightComplexity !== lightComplexity || lastLightCount !== numberOfLights) {
      model.lastBoundBO.set({
        lastLightComplexity: lightComplexity
      }, true);
      model.lastBoundBO.set({
        lastLightCount: numberOfLights
      }, true);
      needRebuild = true;
    } // has something changed that would require us to recreate the shader?
    // candidates are
    // property modified (representation interpolation and lighting)
    // input modified
    // light complexity changed


    if (model.lastHaveSeenDepthRequest !== model.haveSeenDepthRequest || cellBO.getProgram() === 0 || cellBO.getShaderSourceTime().getMTime() < publicAPI.getMTime() || cellBO.getShaderSourceTime().getMTime() < actor.getMTime() || cellBO.getShaderSourceTime().getMTime() < model.renderable.getMTime() || cellBO.getShaderSourceTime().getMTime() < model.currentInput.getMTime() || needRebuild) {
      model.lastHaveSeenDepthRequest = model.haveSeenDepthRequest;
      return true;
    }

    return false;
  };

  publicAPI.updateShaders = function (cellBO, ren, actor) {
    model.lastBoundBO = cellBO; // has something changed that would require us to recreate the shader?

    if (publicAPI.getNeedToRebuildShaders(cellBO, ren, actor)) {
      var shaders = {
        Vertex: null,
        Fragment: null,
        Geometry: null
      };
      publicAPI.buildShaders(shaders, ren, actor); // compile and bind the program if needed

      var newShader = model.openGLRenderWindow.getShaderCache().readyShaderProgramArray(shaders.Vertex, shaders.Fragment, shaders.Geometry); // if the shader changed reinitialize the VAO

      if (newShader !== cellBO.getProgram()) {
        cellBO.setProgram(newShader); // reset the VAO as the shader has changed

        cellBO.getVAO().releaseGraphicsResources();
      }

      cellBO.getShaderSourceTime().modified();
    } else {
      model.openGLRenderWindow.getShaderCache().readyShaderProgram(cellBO.getProgram());
    }

    cellBO.getVAO().bind();
    publicAPI.setMapperShaderParameters(cellBO, ren, actor);
    publicAPI.setPropertyShaderParameters(cellBO, ren, actor);
    publicAPI.setCameraShaderParameters(cellBO, ren, actor);
    publicAPI.setLightingShaderParameters(cellBO, ren, actor);
    var listCallbacks = model.renderable.getViewSpecificProperties().ShadersCallbacks;

    if (listCallbacks) {
      listCallbacks.forEach(function (object) {
        object.callback(object.userData, cellBO, ren, actor);
      });
    }
  };

  publicAPI.setMapperShaderParameters = function (cellBO, ren, actor) {
    // Now to update the VAO too, if necessary.
    if (cellBO.getProgram().isUniformUsed('PrimitiveIDOffset')) {
      cellBO.getProgram().setUniformi('PrimitiveIDOffset', model.primitiveIDOffset);
    }

    if (cellBO.getCABO().getElementCount() && (model.VBOBuildTime.getMTime() > cellBO.getAttributeUpdateTime().getMTime() || cellBO.getShaderSourceTime().getMTime() > cellBO.getAttributeUpdateTime().getMTime())) {
      var lastLightComplexity = model.lastBoundBO.getReferenceByName('lastLightComplexity');

      if (cellBO.getProgram().isAttributeUsed('vertexMC')) {
        if (!cellBO.getVAO().addAttributeArray(cellBO.getProgram(), cellBO.getCABO(), 'vertexMC', cellBO.getCABO().getVertexOffset(), cellBO.getCABO().getStride(), model.context.FLOAT, 3, false)) {
          vtkErrorMacro('Error setting vertexMC in shader VAO.');
        }
      }

      if (cellBO.getProgram().isAttributeUsed('normalMC') && cellBO.getCABO().getNormalOffset() && lastLightComplexity > 0) {
        if (!cellBO.getVAO().addAttributeArray(cellBO.getProgram(), cellBO.getCABO(), 'normalMC', cellBO.getCABO().getNormalOffset(), cellBO.getCABO().getStride(), model.context.FLOAT, 3, false)) {
          vtkErrorMacro('Error setting normalMC in shader VAO.');
        }
      } else {
        cellBO.getVAO().removeAttributeArray('normalMC');
      }

      model.renderable.getCustomShaderAttributes().forEach(function (attrName, idx) {
        if (cellBO.getProgram().isAttributeUsed("".concat(attrName, "MC"))) {
          if (!cellBO.getVAO().addAttributeArray(cellBO.getProgram(), cellBO.getCABO(), "".concat(attrName, "MC"), cellBO.getCABO().getCustomData()[idx].offset, cellBO.getCABO().getStride(), model.context.FLOAT, cellBO.getCABO().getCustomData()[idx].components, false)) {
            vtkErrorMacro("Error setting ".concat(attrName, "MC in shader VAO."));
          }
        }
      });

      if (cellBO.getProgram().isAttributeUsed('tcoordMC') && cellBO.getCABO().getTCoordOffset()) {
        if (!cellBO.getVAO().addAttributeArray(cellBO.getProgram(), cellBO.getCABO(), 'tcoordMC', cellBO.getCABO().getTCoordOffset(), cellBO.getCABO().getStride(), model.context.FLOAT, cellBO.getCABO().getTCoordComponents(), false)) {
          vtkErrorMacro('Error setting tcoordMC in shader VAO.');
        }
      } else {
        cellBO.getVAO().removeAttributeArray('tcoordMC');
      }

      if (cellBO.getProgram().isAttributeUsed('scalarColor') && cellBO.getCABO().getColorComponents()) {
        if (!cellBO.getVAO().addAttributeArray(cellBO.getProgram(), cellBO.getCABO().getColorBO(), 'scalarColor', cellBO.getCABO().getColorOffset(), cellBO.getCABO().getColorBOStride(), model.context.UNSIGNED_BYTE, 4, true)) {
          vtkErrorMacro('Error setting scalarColor in shader VAO.');
        }
      } else {
        cellBO.getVAO().removeAttributeArray('scalarColor');
      }

      cellBO.getAttributeUpdateTime().modified();
    }

    if (model.renderable.getNumberOfClippingPlanes()) {
      // add all the clipping planes
      var numClipPlanes = model.renderable.getNumberOfClippingPlanes();
      var planeEquations = [];
      var shiftScaleEnabled = cellBO.getCABO().getCoordShiftAndScaleEnabled();
      var inverseShiftScaleMatrix = shiftScaleEnabled ? cellBO.getCABO().getInverseShiftAndScaleMatrix() : null;
      var mat = inverseShiftScaleMatrix ? gl_matrix__WEBPACK_IMPORTED_MODULE_1__["mat4"].copy(model.tmpMat4, actor.getMatrix()) : actor.getMatrix();

      if (inverseShiftScaleMatrix) {
        gl_matrix__WEBPACK_IMPORTED_MODULE_1__["mat4"].transpose(mat, mat);
        gl_matrix__WEBPACK_IMPORTED_MODULE_1__["mat4"].multiply(mat, mat, inverseShiftScaleMatrix);
        gl_matrix__WEBPACK_IMPORTED_MODULE_1__["mat4"].transpose(mat, mat);
      }

      for (var i = 0; i < numClipPlanes; i++) {
        var planeEquation = [];
        model.renderable.getClippingPlaneInDataCoords(mat, i, planeEquation);

        for (var j = 0; j < 4; j++) {
          planeEquations.push(planeEquation[j]);
        }
      }

      cellBO.getProgram().setUniformi('numClipPlanes', numClipPlanes);
      cellBO.getProgram().setUniform4fv('clipPlanes', planeEquations);
    }

    if (model.internalColorTexture && cellBO.getProgram().isUniformUsed('texture1')) {
      cellBO.getProgram().setUniformi('texture1', model.internalColorTexture.getTextureUnit());
    }

    var tus = model.openGLActor.getActiveTextures();

    if (tus) {
      for (var index = 0; index < tus.length; ++index) {
        var tex = tus[index];
        var texUnit = tex.getTextureUnit();
        var tname = "texture".concat(texUnit + 1);

        if (cellBO.getProgram().isUniformUsed(tname)) {
          cellBO.getProgram().setUniformi(tname, texUnit);
        }
      }
    } // handle depth requests


    if (model.haveSeenDepthRequest) {
      cellBO.getProgram().setUniformi('depthRequest', model.renderDepth ? 1 : 0);
    } // handle coincident


    if (cellBO.getProgram().isUniformUsed('coffset')) {
      var cp = publicAPI.getCoincidentParameters(ren, actor);
      cellBO.getProgram().setUniformf('coffset', cp.offset); // cfactor isn't always used when coffset is.

      if (cellBO.getProgram().isUniformUsed('cfactor')) {
        cellBO.getProgram().setUniformf('cfactor', cp.factor);
      }
    }

    var selector = model.openGLRenderer.getSelector();
    cellBO.getProgram().setUniform3fArray('mapperIndex', selector ? selector.getPropColorValue() : [0.0, 0.0, 0.0]);
    cellBO.getProgram().setUniformi('picking', selector ? selector.getCurrentPass() + 1 : 0);
  };

  publicAPI.setLightingShaderParameters = function (cellBO, ren, actor) {
    // for unlit and headlight there are no lighting parameters
    var lastLightComplexity = model.lastBoundBO.getReferenceByName('lastLightComplexity');

    if (lastLightComplexity < 2) {
      return;
    }

    var program = cellBO.getProgram(); // bind some light settings

    var numberOfLights = 0;
    var lights = ren.getLightsByReference();

    for (var index = 0; index < lights.length; ++index) {
      var light = lights[index];
      var status = light.getSwitch();

      if (status > 0.0) {
        var dColor = light.getColorByReference();
        var intensity = light.getIntensity();
        model.lightColor[0] = dColor[0] * intensity;
        model.lightColor[1] = dColor[1] * intensity;
        model.lightColor[2] = dColor[2] * intensity; // get required info from light

        var ld = light.getDirection();
        var transform = ren.getActiveCamera().getViewMatrix();

        var newLightDirection = _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(ld);

        if (light.lightTypeIsSceneLight()) {
          newLightDirection[0] = transform[0] * ld[0] + transform[1] * ld[1] + transform[2] * ld[2];
          newLightDirection[1] = transform[4] * ld[0] + transform[5] * ld[1] + transform[6] * ld[2];
          newLightDirection[2] = transform[8] * ld[0] + transform[9] * ld[1] + transform[10] * ld[2];
          Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_5__["l"])(newLightDirection);
        }

        model.lightDirection[0] = newLightDirection[0];
        model.lightDirection[1] = newLightDirection[1];
        model.lightDirection[2] = newLightDirection[2];
        model.lightHalfAngle[0] = -model.lightDirection[0];
        model.lightHalfAngle[1] = -model.lightDirection[1];
        model.lightHalfAngle[2] = -model.lightDirection[2] + 1.0;
        Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_5__["l"])(model.lightDirection);
        program.setUniform3fArray("lightColor".concat(numberOfLights), model.lightColor);
        program.setUniform3fArray("lightDirectionVC".concat(numberOfLights), model.lightDirection);
        program.setUniform3fArray("lightHalfAngleVC".concat(numberOfLights), model.lightHalfAngle);
        numberOfLights++;
      }
    } // we are done unless we have positional lights


    if (lastLightComplexity < 3) {
      return;
    } // for lightkit case there are some parameters to set


    var cam = ren.getActiveCamera();
    var viewTF = cam.getViewMatrix();
    gl_matrix__WEBPACK_IMPORTED_MODULE_1__["mat4"].transpose(viewTF, viewTF);
    numberOfLights = 0;

    for (var _index = 0; _index < lights.length; ++_index) {
      var _light = lights[_index];

      var _status = _light.getSwitch();

      if (_status > 0.0) {
        var lp = _light.getTransformedPosition();

        var np = new Float64Array(3);
        gl_matrix__WEBPACK_IMPORTED_MODULE_1__["vec3"].transformMat4(np, lp, viewTF);
        program.setUniform3fArray("lightAttenuation".concat(numberOfLights), _light.getAttenuationValuesByReference());
        program.setUniformi("lightPositional".concat(numberOfLights), _light.getPositional());
        program.setUniformf("lightExponent".concat(numberOfLights), _light.getExponent());
        program.setUniformf("lightConeAngle".concat(numberOfLights), _light.getConeAngle());
        program.setUniform3fArray("lightPositionVC".concat(numberOfLights), [np[0], np[1], np[2]]);
        numberOfLights++;
      }
    }
  };

  function safeMatrixMultiply(matrixArray, matrixType, tmpMat) {
    matrixType.identity(tmpMat);
    return matrixArray.reduce(function (res, matrix, index) {
      if (index === 0) {
        return matrix ? matrixType.copy(res, matrix) : matrixType.identity(res);
      }

      return matrix ? matrixType.multiply(res, res, matrix) : res;
    }, tmpMat);
  }

  publicAPI.setCameraShaderParameters = function (cellBO, ren, actor) {
    var program = cellBO.getProgram(); // [WMVP]C == {world, model, view, projection} coordinates
    // E.g., WCPC == world to projection coordinate transformation

    var keyMats = model.openGLCamera.getKeyMatrices(ren);
    var cam = ren.getActiveCamera();
    var camm = model.openGLCamera.getKeyMatrixTime().getMTime();
    var progm = program.getLastCameraMTime();
    var shiftScaleEnabled = cellBO.getCABO().getCoordShiftAndScaleEnabled();
    var inverseShiftScaleMatrix = shiftScaleEnabled ? cellBO.getCABO().getInverseShiftAndScaleMatrix() : null;
    var actorIsIdentity = actor.getIsIdentity();
    var actMats = actorIsIdentity ? {
      mcwc: null,
      normalMatrix: null
    } : model.openGLActor.getKeyMatrices();
    program.setUniformMatrix('MCPCMatrix', safeMatrixMultiply([keyMats.wcpc, actMats.mcwc, inverseShiftScaleMatrix], gl_matrix__WEBPACK_IMPORTED_MODULE_1__["mat4"], model.tmpMat4));

    if (program.isUniformUsed('MCVCMatrix')) {
      program.setUniformMatrix('MCVCMatrix', safeMatrixMultiply([keyMats.wcvc, actMats.mcwc, inverseShiftScaleMatrix], gl_matrix__WEBPACK_IMPORTED_MODULE_1__["mat4"], model.tmpMat4));
    }

    if (program.isUniformUsed('normalMatrix')) {
      program.setUniformMatrix3x3('normalMatrix', safeMatrixMultiply([keyMats.normalMatrix, actMats.normalMatrix], gl_matrix__WEBPACK_IMPORTED_MODULE_1__["mat3"], model.tmpMat3));
    }

    if (progm !== camm) {
      if (program.isUniformUsed('cameraParallel')) {
        program.setUniformi('cameraParallel', cam.getParallelProjection());
      }

      program.setLastCameraMTime(camm);
    }

    if (!actorIsIdentity) {
      // reset the cam mtime as actor modified the shader values
      program.setLastCameraMTime(0);
    }
  };

  publicAPI.setPropertyShaderParameters = function (cellBO, ren, actor) {
    var program = cellBO.getProgram();
    var ppty = actor.getProperty();
    var opacity = ppty.getOpacity();
    var aColor = model.drawingEdges ? ppty.getEdgeColorByReference() : ppty.getAmbientColorByReference();
    var dColor = model.drawingEdges ? ppty.getEdgeColorByReference() : ppty.getDiffuseColorByReference();
    var aIntensity = model.drawingEdges ? 1.0 : ppty.getAmbient();
    var dIntensity = model.drawingEdges ? 0.0 : ppty.getDiffuse();
    var sIntensity = model.drawingEdges ? 0.0 : ppty.getSpecular();
    var specularPower = ppty.getSpecularPower();
    program.setUniformf('opacityUniform', opacity);
    program.setUniform3fArray('ambientColorUniform', aColor);
    program.setUniform3fArray('diffuseColorUniform', dColor);
    program.setUniformf('ambient', aIntensity);
    program.setUniformf('diffuse', dIntensity); // we are done unless we have lighting

    var lastLightComplexity = model.lastBoundBO.getReferenceByName('lastLightComplexity');

    if (lastLightComplexity < 1) {
      return;
    }

    var sColor = ppty.getSpecularColorByReference();
    program.setUniform3fArray('specularColorUniform', sColor);
    program.setUniformf('specularPowerUniform', specularPower);
    program.setUniformf('specular', sIntensity); // now set the backface properties if we have them

    if (program.isUniformUsed('ambientIntensityBF')) {
      ppty = actor.getBackfaceProperty();
      opacity = ppty.getOpacity();
      aColor = ppty.getAmbientColor();
      aIntensity = ppty.getAmbient();
      dColor = ppty.getDiffuseColor();
      dIntensity = ppty.getDiffuse();
      sColor = ppty.getSpecularColor();
      sIntensity = ppty.getSpecular();
      program.setUniformf('ambientIntensityBF', aIntensity);
      program.setUniformf('diffuseIntensityBF', dIntensity);
      program.setUniformf('opacityUniformBF', opacity);
      program.setUniform3fArray('ambientColorUniformBF', aColor);
      program.setUniform3fArray('diffuseColorUniformBF', dColor); // we are done unless we have lighting

      if (lastLightComplexity < 1) {
        return;
      }

      program.setUniformf('specularIntensityBF', sIntensity);
      program.setUniform3fArray('specularColorUniformBF', sColor);
      program.setUniformf('specularPowerUniformBF', specularPower);
    }
  };

  publicAPI.renderPieceStart = function (ren, actor) {
    model.primitiveIDOffset = 0;

    if (model.openGLRenderer.getSelector()) {
      switch (model.openGLRenderer.getSelector().getCurrentPass()) {
        default:
          model.openGLRenderer.getSelector().renderProp(actor);
      }
    } // make sure the BOs are up to date


    publicAPI.updateBufferObjects(ren, actor); // If we are coloring by texture, then load the texture map.
    // Use Map as indicator, because texture hangs around.

    if (model.renderable.getColorTextureMap()) {
      model.internalColorTexture.activate();
    } // Bind the OpenGL, this is shared between the different primitive/cell types.


    model.lastBoundBO = null;
  };

  publicAPI.renderPieceDraw = function (ren, actor) {
    var representation = actor.getProperty().getRepresentation();
    var gl = model.context;
    var drawSurfaceWithEdges = actor.getProperty().getEdgeVisibility() && representation === Representation.SURFACE;
    gl.lineWidth(actor.getProperty().getLineWidth()); // for every primitive type

    for (var i = primTypes.Start; i < primTypes.End; i++) {
      // if there are entries
      var cabo = model.primitives[i].getCABO();

      if (cabo.getElementCount()) {
        // are we drawing edges
        model.drawingEdges = drawSurfaceWithEdges && (i === primTypes.TrisEdges || i === primTypes.TriStripsEdges);
        var mode = publicAPI.getOpenGLMode(representation, i);

        if (!model.drawingEdges || !model.renderDepth) {
          publicAPI.updateShaders(model.primitives[i], ren, actor);
          gl.drawArrays(mode, 0, cabo.getElementCount());
        }

        var stride = (mode === gl.POINTS ? 1 : 0) || (mode === gl.LINES ? 2 : 3);
        model.primitiveIDOffset += cabo.getElementCount() / stride;
      }
    } // reset the line width


    gl.lineWidth(1);
  };

  publicAPI.getOpenGLMode = function (rep, type) {
    if (rep === Representation.POINTS || type === primTypes.Points) {
      return model.context.POINTS;
    }

    if (rep === Representation.WIREFRAME || type === primTypes.Lines || type === primTypes.TrisEdges || type === primTypes.TriStripsEdges) {
      return model.context.LINES;
    }

    return model.context.TRIANGLES;
  };

  publicAPI.renderPieceFinish = function (ren, actor) {
    if (model.LastBoundBO) {
      model.LastBoundBO.getVAO().release();
    }

    if (model.renderable.getColorTextureMap()) {
      model.internalColorTexture.deactivate();
    }
  };

  publicAPI.renderPiece = function (ren, actor) {
    // Make sure that we have been properly initialized.
    // if (ren.getRenderWindow().checkAbortStatus()) {
    //   return;
    // }
    publicAPI.invokeEvent(StartEvent);

    if (!model.renderable.getStatic()) {
      model.renderable.update();
    }

    model.currentInput = model.renderable.getInputData();
    publicAPI.invokeEvent(EndEvent);

    if (!model.currentInput) {
      vtkErrorMacro('No input!');
      return;
    } // if there are no points then we are done


    if (!model.currentInput.getPoints || !model.currentInput.getPoints().getNumberOfValues()) {
      return;
    } // apply faceCulling


    var gl = model.context;
    var backfaceCulling = actor.getProperty().getBackfaceCulling();
    var frontfaceCulling = actor.getProperty().getFrontfaceCulling();

    if (!backfaceCulling && !frontfaceCulling) {
      model.openGLRenderWindow.disableCullFace();
    } else if (frontfaceCulling) {
      model.openGLRenderWindow.enableCullFace();
      gl.cullFace(gl.FRONT);
    } else {
      model.openGLRenderWindow.enableCullFace();
      gl.cullFace(gl.BACK);
    }

    publicAPI.renderPieceStart(ren, actor);
    publicAPI.renderPieceDraw(ren, actor);
    publicAPI.renderPieceFinish(ren, actor);
  };

  publicAPI.computeBounds = function (ren, actor) {
    if (!publicAPI.getInput()) {
      Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_5__["u"])(model.bounds);
      return;
    }

    model.bounds = publicAPI.getInput().getBounds();
  };

  publicAPI.updateBufferObjects = function (ren, actor) {
    // Rebuild buffers if needed
    if (publicAPI.getNeedToRebuildBufferObjects(ren, actor)) {
      publicAPI.buildBufferObjects(ren, actor);
    }
  };

  publicAPI.getNeedToRebuildBufferObjects = function (ren, actor) {
    // first do a coarse check
    // Note that the actor's mtime includes it's properties mtime
    var vmtime = model.VBOBuildTime.getMTime();

    if (vmtime < publicAPI.getMTime() || vmtime < model.renderable.getMTime() || vmtime < actor.getMTime() || vmtime < model.currentInput.getMTime()) {
      return true;
    }

    return false;
  };

  publicAPI.buildBufferObjects = function (ren, actor) {
    var poly = model.currentInput;

    if (poly === null) {
      return;
    }

    model.renderable.mapScalars(poly, 1.0);
    var c = model.renderable.getColorMapColors();
    model.haveCellScalars = false;
    var scalarMode = model.renderable.getScalarMode();

    if (model.renderable.getScalarVisibility()) {
      // We must figure out how the scalars should be mapped to the polydata.
      if ((scalarMode === ScalarMode.USE_CELL_DATA || scalarMode === ScalarMode.USE_CELL_FIELD_DATA || scalarMode === ScalarMode.USE_FIELD_DATA || !poly.getPointData().getScalars()) && scalarMode !== ScalarMode.USE_POINT_FIELD_DATA && c) {
        model.haveCellScalars = true;
      }
    } // Do we have normals?


    var n = actor.getProperty().getInterpolation() !== Shading.FLAT ? poly.getPointData().getNormals() : null;

    if (n === null && poly.getCellData().getNormals()) {
      model.haveCellNormals = true;
      n = poly.getCellData().getNormals();
    } // rebuild the VBO if the data has changed we create a string for the VBO what
    // can change the VBO? points normals tcoords colors so what can change those?
    // the input data is clearly one as it can change all four items tcoords may
    // haveTextures or not colors may change based on quite a few mapping
    // parameters in the mapper


    var representation = actor.getProperty().getRepresentation();
    var tcoords = poly.getPointData().getTCoords();

    if (!model.openGLActor.getActiveTextures()) {
      tcoords = null;
    } // handle color mapping via texture


    if (model.renderable.getColorCoordinates()) {
      tcoords = model.renderable.getColorCoordinates();

      if (!model.internalColorTexture) {
        model.internalColorTexture = _Texture_js__WEBPACK_IMPORTED_MODULE_6__["default"].newInstance();
      }

      var tex = model.internalColorTexture; // the following 4 lines allow for NPOT textures

      tex.setMinificationFilter(Filter.NEAREST);
      tex.setMagnificationFilter(Filter.NEAREST);
      tex.setWrapS(Wrap.CLAMP_TO_EDGE);
      tex.setWrapT(Wrap.CLAMP_TO_EDGE);
      tex.setOpenGLRenderWindow(model.openGLRenderWindow);
      var input = model.renderable.getColorTextureMap();
      var ext = input.getExtent();
      var inScalars = input.getPointData().getScalars();
      tex.create2DFromRaw(ext[1] - ext[0] + 1, ext[3] - ext[2] + 1, inScalars.getNumberOfComponents(), inScalars.getDataType(), inScalars.getData());
      tex.activate();
      tex.sendParameters();
      tex.deactivate();
    }

    var toString = "".concat(poly.getMTime(), "A").concat(representation, "B").concat(poly.getMTime()) + "C".concat(n ? n.getMTime() : 1, "D").concat(c ? c.getMTime() : 1) + "E".concat(actor.getProperty().getEdgeVisibility()) + "F".concat(tcoords ? tcoords.getMTime() : 1);

    if (model.VBOBuildString !== toString) {
      // Build the VBOs
      var points = poly.getPoints();
      var options = {
        points: points,
        normals: n,
        tcoords: tcoords,
        colors: c,
        cellOffset: 0,
        haveCellScalars: model.haveCellScalars,
        haveCellNormals: model.haveCellNormals,
        customAttributes: model.renderable.getCustomShaderAttributes().map(function (arrayName) {
          return poly.getPointData().getArrayByName(arrayName);
        })
      };
      options.cellOffset += model.primitives[primTypes.Points].getCABO().createVBO(poly.getVerts(), 'verts', representation, options);
      options.cellOffset += model.primitives[primTypes.Lines].getCABO().createVBO(poly.getLines(), 'lines', representation, options);
      options.cellOffset += model.primitives[primTypes.Tris].getCABO().createVBO(poly.getPolys(), 'polys', representation, options);
      options.cellOffset += model.primitives[primTypes.TriStrips].getCABO().createVBO(poly.getStrips(), 'strips', representation, options);
      var drawSurfaceWithEdges = actor.getProperty().getEdgeVisibility() && representation === Representation.SURFACE; // if we have edge visibility build the edge VBOs

      if (drawSurfaceWithEdges) {
        model.primitives[primTypes.TrisEdges].getCABO().createVBO(poly.getPolys(), 'polys', Representation.WIREFRAME, {
          points: points,
          normals: n,
          tcoords: null,
          colors: null,
          cellOffset: 0,
          haveCellScalars: false,
          haveCellNormals: false
        });
        model.primitives[primTypes.TriStripsEdges].getCABO().createVBO(poly.getStrips(), 'strips', Representation.WIREFRAME, {
          points: points,
          normals: n,
          tcoords: null,
          colors: null,
          cellOffset: 0,
          haveCellScalars: false,
          haveCellNormals: false
        });
      } else {
        // otherwise free them
        model.primitives[primTypes.TrisEdges].releaseGraphicsResources(model.openGLRenderWindow);
        model.primitives[primTypes.TriStripsEdges].releaseGraphicsResources(model.openGLRenderWindow);
      }

      model.VBOBuildTime.modified();
      model.VBOBuildString = toString;
    }
  };
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {
  context: null,
  VBOBuildTime: 0,
  VBOBuildString: null,
  primitives: null,
  primTypes: null,
  shaderRebuildString: null,
  tmpMat4: null,
  ambientColor: [],
  // used internally
  diffuseColor: [],
  // used internally
  specularColor: [],
  // used internally
  lightColor: [],
  // used internally
  lightHalfAngle: [],
  // used internally
  lightDirection: [],
  // used internally
  lastHaveSeenDepthRequest: false,
  haveSeenDepthRequest: false
}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance

  _SceneGraph_ViewNode_js__WEBPACK_IMPORTED_MODULE_9__["default"].extend(publicAPI, model, initialValues);
  _ReplacementShaderMapper_js__WEBPACK_IMPORTED_MODULE_12__["default"].implementReplaceShaderCoincidentOffset(publicAPI, model, initialValues);
  model.primitives = [];
  model.primTypes = primTypes;
  model.tmpMat3 = gl_matrix__WEBPACK_IMPORTED_MODULE_1__["mat3"].identity(new Float64Array(9));
  model.tmpMat4 = gl_matrix__WEBPACK_IMPORTED_MODULE_1__["mat4"].identity(new Float64Array(16));

  for (var i = primTypes.Start; i < primTypes.End; i++) {
    model.primitives[i] = _Helper_js__WEBPACK_IMPORTED_MODULE_3__["default"].newInstance();
    model.primitives[i].setPrimitiveType(i);
    model.primitives[i].set({
      lastLightComplexity: 0,
      lastLightCount: 0,
      lastSelectionPass: false
    }, true);
  } // Build VTK API


  Object(_macros_js__WEBPACK_IMPORTED_MODULE_2__["setGet"])(publicAPI, model, ['context']);
  model.VBOBuildTime = {};
  Object(_macros_js__WEBPACK_IMPORTED_MODULE_2__["obj"])(model.VBOBuildTime, {
    mtime: 0
  }); // Object methods

  vtkOpenGLPolyDataMapper(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = Object(_macros_js__WEBPACK_IMPORTED_MODULE_2__["newInstance"])(extend, 'vtkOpenGLPolyDataMapper'); // ----------------------------------------------------------------------------

var vtkOpenGLPolyDataMapper$1 = {
  newInstance: newInstance,
  extend: extend,
  primTypes: primTypes
}; // Register ourself to OpenGL backend if imported

Object(_ViewNodeFactory_js__WEBPACK_IMPORTED_MODULE_13__["registerOverride"])('vtkMapper', newInstance);




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/PolyDataMapper2D.js":
/*!****************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Rendering/OpenGL/PolyDataMapper2D.js ***!
  \****************************************************************************/
/*! exports provided: default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkPolyDataMapper2D; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! gl-matrix */ "../node_modules/gl-matrix/esm/index.js");
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _Helper_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Helper.js */ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/Helper.js");
/* harmony import */ var _Core_Mapper2D_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Core/Mapper2D.js */ "../node_modules/@kitware/vtk.js/Rendering/Core/Mapper2D.js");
/* harmony import */ var _PolyDataMapper_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./PolyDataMapper.js */ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/PolyDataMapper.js");
/* harmony import */ var _Common_Core_Points_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../Common/Core/Points.js */ "../node_modules/@kitware/vtk.js/Common/Core/Points.js");
/* harmony import */ var _glsl_vtkPolyData2DFS_glsl_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./glsl/vtkPolyData2DFS.glsl.js */ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/glsl/vtkPolyData2DFS.glsl.js");
/* harmony import */ var _glsl_vtkPolyData2DVS_glsl_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./glsl/vtkPolyData2DVS.glsl.js */ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/glsl/vtkPolyData2DVS.glsl.js");
/* harmony import */ var _ReplacementShaderMapper_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./ReplacementShaderMapper.js */ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/ReplacementShaderMapper.js");
/* harmony import */ var _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./ShaderProgram.js */ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/ShaderProgram.js");
/* harmony import */ var _SceneGraph_ViewNode_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../SceneGraph/ViewNode.js */ "../node_modules/@kitware/vtk.js/Rendering/SceneGraph/ViewNode.js");
/* harmony import */ var _Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../Common/Core/Math/index.js */ "../node_modules/@kitware/vtk.js/Common/Core/Math/index.js");
/* harmony import */ var _Core_Property_Constants_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../Core/Property/Constants.js */ "../node_modules/@kitware/vtk.js/Rendering/Core/Property/Constants.js");
/* harmony import */ var _Core_Property2D_Constants_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../Core/Property2D/Constants.js */ "../node_modules/@kitware/vtk.js/Rendering/Core/Property2D/Constants.js");
/* harmony import */ var _ViewNodeFactory_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./ViewNodeFactory.js */ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/ViewNodeFactory.js");
















// import { mat3, mat4, vec3 } from 'gl-matrix';
var primTypes = _PolyDataMapper_js__WEBPACK_IMPORTED_MODULE_4__["default"].primTypes;
var ScalarMode = _Core_Mapper2D_js__WEBPACK_IMPORTED_MODULE_3__["default"].ScalarMode;
var vtkErrorMacro = _macros_js__WEBPACK_IMPORTED_MODULE_1__["vtkErrorMacro"];
var StartEvent = {
  type: 'StartEvent'
};
var EndEvent = {
  type: 'EndEvent'
}; // ----------------------------------------------------------------------------
// vtkOpenGLPolyDataMapper2D methods
// ----------------------------------------------------------------------------

function vtkOpenGLPolyDataMapper2D(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkOpenGLPolyDataMapper2D');

  publicAPI.buildPass = function (prepass) {
    if (prepass) {
      model.openGLActor2D = publicAPI.getFirstAncestorOfType('vtkOpenGLActor2D');
      model.openGLRenderer = model.openGLActor2D.getFirstAncestorOfType('vtkOpenGLRenderer');
      model.openGLRenderWindow = model.openGLRenderer.getParent();
      model.openGLCamera = model.openGLRenderer.getViewNodeFor(model.openGLRenderer.getRenderable().getActiveCamera());
    }
  };

  publicAPI.overlayPass = function (prepass) {
    if (prepass) {
      publicAPI.render();
    }
  };

  publicAPI.getShaderTemplate = function (shaders, ren, actor) {
    var openGLSpecProp = model.renderable.getViewSpecificProperties().OpenGL;
    var vertexShaderCode = _glsl_vtkPolyData2DVS_glsl_js__WEBPACK_IMPORTED_MODULE_7__["v"];

    if (openGLSpecProp) {
      var vertexSpecProp = openGLSpecProp.VertexShaderCode;

      if (vertexSpecProp !== undefined && vertexSpecProp !== '') {
        vertexShaderCode = vertexSpecProp;
      }
    }

    shaders.Vertex = vertexShaderCode;
    var fragmentShaderCode = _glsl_vtkPolyData2DFS_glsl_js__WEBPACK_IMPORTED_MODULE_6__["v"];

    if (openGLSpecProp) {
      var fragmentSpecProp = openGLSpecProp.FragmentShaderCode;

      if (fragmentSpecProp !== undefined && fragmentSpecProp !== '') {
        fragmentShaderCode = fragmentSpecProp;
      }
    }

    shaders.Fragment = fragmentShaderCode;
    var geometryShaderCode = '';

    if (openGLSpecProp) {
      var geometrySpecProp = openGLSpecProp.GeometryShaderCode;

      if (geometrySpecProp !== undefined) {
        geometryShaderCode = geometrySpecProp;
      }
    }

    shaders.Geometry = geometryShaderCode;
  };

  publicAPI.render = function () {
    var ctx = model.openGLRenderWindow.getContext();

    if (model.context !== ctx) {
      model.context = ctx;

      for (var i = primTypes.Start; i < primTypes.End; i++) {
        model.primitives[i].setOpenGLRenderWindow(model.openGLRenderWindow);
      }
    }

    var actor = model.openGLActor2D.getRenderable();
    var ren = model.openGLRenderer.getRenderable();
    publicAPI.renderPiece(ren, actor);
  };

  publicAPI.renderPiece = function (ren, actor) {
    publicAPI.invokeEvent(StartEvent);

    if (!model.renderable.getStatic()) {
      model.renderable.update();
    }

    model.currentInput = model.renderable.getInputData();
    publicAPI.invokeEvent(EndEvent);

    if (!model.currentInput) {
      vtkErrorMacro('No input!');
      return;
    } // if there are no points then we are done


    if (!model.currentInput.getPoints || !model.currentInput.getPoints().getNumberOfValues()) {
      return;
    }

    publicAPI.renderPieceStart(ren, actor);
    publicAPI.renderPieceDraw(ren, actor);
    publicAPI.renderPieceFinish(ren, actor);
  };

  publicAPI.renderPieceStart = function (ren, actor) {
    model.primitiveIDOffset = 0;

    if (model.openGLRenderer.getSelector()) {
      switch (model.openGLRenderer.getSelector().getCurrentPass()) {
        default:
          model.openGLRenderer.getSelector().renderProp(actor);
      }
    } // make sure the BOs are up to date


    publicAPI.updateBufferObjects(ren, actor); // Bind the OpenGL, this is shared between the different primitive/cell types.

    model.lastBoundBO = null;
  };

  publicAPI.getNeedToRebuildShaders = function (cellBO, ren, actor) {
    // has something changed that would require us to recreate the shader?
    // candidates are
    // property modified (representation interpolation and lighting)
    // input modified
    // light complexity changed
    if (cellBO.getProgram() === 0 || cellBO.getShaderSourceTime().getMTime() < publicAPI.getMTime() || cellBO.getShaderSourceTime().getMTime() < actor.getMTime() || cellBO.getShaderSourceTime().getMTime() < model.renderable.getMTime() || cellBO.getShaderSourceTime().getMTime() < model.currentInput.getMTime()) {
      return true;
    }

    return false;
  };

  publicAPI.updateBufferObjects = function (ren, actor) {
    // Rebuild buffers if needed
    if (publicAPI.getNeedToRebuildBufferObjects(ren, actor)) {
      publicAPI.buildBufferObjects(ren, actor);
    }
  };

  publicAPI.getNeedToRebuildBufferObjects = function (ren, actor) {
    // first do a coarse check
    // Note that the actor's mtime includes it's properties mtime
    var vmtime = model.VBOBuildTime.getMTime();

    if (vmtime < publicAPI.getMTime() || vmtime < model.renderable.getMTime() || vmtime < actor.getMTime() || vmtime < model.currentInput.getMTime() || model.renderable.getTransformCoordinate() && vmtime < ren.getMTime()) {
      return true;
    }

    return false;
  };

  publicAPI.getOpenGLMode = function (rep, type) {
    if (rep === _Core_Property_Constants_js__WEBPACK_IMPORTED_MODULE_12__["Representation"].POINTS || type === primTypes.Points) {
      return model.context.POINTS;
    }

    if (rep === _Core_Property_Constants_js__WEBPACK_IMPORTED_MODULE_12__["Representation"].WIREFRAME || type === primTypes.Lines || type === primTypes.TrisEdges || type === primTypes.TriStripsEdges) {
      return model.context.LINES;
    }

    return model.context.TRIANGLES;
  };

  publicAPI.buildBufferObjects = function (ren, actor) {
    var poly = model.currentInput;

    if (poly === null) {
      return;
    }

    model.renderable.mapScalars(poly, actor.getProperty().getOpacity());
    var c = model.renderable.getColorMapColors();
    model.haveCellScalars = false;
    var scalarMode = model.renderable.getScalarMode();

    if (model.renderable.getScalarVisibility()) {
      // We must figure out how the scalars should be mapped to the polydata.
      if ((scalarMode === ScalarMode.USE_CELL_DATA || scalarMode === ScalarMode.USE_CELL_FIELD_DATA || scalarMode === ScalarMode.USE_FIELD_DATA || !poly.getPointData().getScalars()) && scalarMode !== ScalarMode.USE_POINT_FIELD_DATA && c) {
        model.haveCellScalars = true;
      }
    }

    var representation = actor.getProperty().getRepresentation();
    var tcoords = poly.getPointData().getTCoords();

    if (!model.openGLActor2D.getActiveTextures()) {
      tcoords = null;
    }

    var transformCoordinate = model.renderable.getTransformCoordinate();
    var toString = "".concat(poly.getMTime(), "A").concat(representation, "B").concat(poly.getMTime()) + "C".concat(c ? c.getMTime() : 1) + "D".concat(tcoords ? tcoords.getMTime() : 1) + "E".concat(transformCoordinate ? ren.getMTime() : 1);

    if (model.VBOBuildString !== toString) {
      // Build the VBOs
      var points = poly.getPoints();

      if (transformCoordinate) {
        var p = _Common_Core_Points_js__WEBPACK_IMPORTED_MODULE_5__["default"].newInstance();
        var numPts = points.getNumberOfPoints();
        p.setNumberOfPoints(numPts);

        for (var i = 0; i < numPts; ++i) {
          transformCoordinate.setValue(points.getPoint(i));
          var v = transformCoordinate.getComputedDoubleViewportValue(ren);
          p.setPoint(i, v[0], v[1], 0.0);
        }

        points = p;
      }

      var options = {
        points: points,
        tcoords: tcoords,
        colors: c,
        cellOffset: 0,
        haveCellScalars: model.haveCellSCalars,
        customAttributes: model.renderable.getCustomShaderAttributes().map(function (arrayName) {
          return poly.getPointData().getArrayByName(arrayName);
        })
      };
      options.cellOffset += model.primitives[primTypes.Points].getCABO().createVBO(poly.getVerts(), 'verts', representation, options);
      options.cellOffset += model.primitives[primTypes.Lines].getCABO().createVBO(poly.getLines(), 'lines', representation, options);
      options.cellOffset += model.primitives[primTypes.Tris].getCABO().createVBO(poly.getPolys(), 'polys', representation, options);
      options.cellOffset += model.primitives[primTypes.TriStrips].getCABO().createVBO(poly.getStrips(), 'strips', representation, options);
      model.VBOBuildTime.modified();
      model.VBOBuildString = toString;
    }
  };

  publicAPI.renderPieceDraw = function (ren, actor) {
    var representation = actor.getProperty().getRepresentation();
    var drawSurfaceWithEdges = false;
    var gl = model.context;
    gl.lineWidth(actor.getProperty().getLineWidth());
    gl.depthMask(true); // for every primitive type

    for (var i = primTypes.Start; i < primTypes.End; i++) {
      // if there are entries
      var cabo = model.primitives[i].getCABO();

      if (cabo.getElementCount()) {
        // are we drawing edges
        model.drawingEdges = drawSurfaceWithEdges ;
        var mode = publicAPI.getOpenGLMode(representation, i);

        if (!model.drawingEdges || !model.renderDepth) {
          publicAPI.updateShaders(model.primitives[i], ren, actor);
          gl.drawArrays(mode, 0, cabo.getElementCount());
        }

        var stride = (mode === gl.POINTS ? 1 : 0) || (mode === gl.LINES ? 2 : 3);
        model.primitiveIDOffset += cabo.getElementCount() / stride;
      }
    } // reset the line width


    gl.lineWidth(1);
  };

  publicAPI.renderPieceFinish = function (ren, actor) {
    if (model.LastBoundBO) {
      model.LastBoundBO.getVAO().release();
    }
  };

  publicAPI.buildShaders = function (shaders, ren, actor) {
    publicAPI.getShaderTemplate(shaders, ren, actor); // user specified pre replacements

    var openGLSpec = model.renderable.getViewSpecificProperties().OpenGL;
    var shaderReplacements = null;

    if (openGLSpec) {
      shaderReplacements = openGLSpec.ShaderReplacements;
    }

    if (shaderReplacements) {
      for (var i = 0; i < shaderReplacements.length; i++) {
        var currReplacement = shaderReplacements[i];

        if (currReplacement.replaceFirst) {
          var shaderType = currReplacement.shaderType;
          var ssrc = shaders[shaderType];
          var substituteRes = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_9__["default"].substitute(ssrc, currReplacement.originalValue, currReplacement.replacementValue, currReplacement.replaceAll);
          shaders[shaderType] = substituteRes.result;
        }
      }
    }

    publicAPI.replaceShaderValues(shaders, ren, actor); // user specified post replacements

    if (shaderReplacements) {
      for (var _i = 0; _i < shaderReplacements.length; _i++) {
        var _currReplacement = shaderReplacements[_i];

        if (!_currReplacement.replaceFirst) {
          var _shaderType = _currReplacement.shaderType;
          var _ssrc = shaders[_shaderType];

          var _substituteRes = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_9__["default"].substitute(_ssrc, _currReplacement.originalValue, _currReplacement.replacementValue, _currReplacement.replaceAll);

          shaders[_shaderType] = _substituteRes.result;
        }
      }
    }
  };

  publicAPI.replaceShaderValues = function (shaders, ren, actor) {
    publicAPI.replaceShaderColor(shaders, ren, actor);
    publicAPI.replaceShaderTCoord(shaders, ren, actor);
    publicAPI.replaceShaderPicking(shaders, ren, actor);
    publicAPI.replaceShaderPositionVC(shaders, ren, actor);
  };

  publicAPI.replaceShaderColor = function (shaders, ren, actor) {
    var VSSource = shaders.Vertex;
    var GSSource = shaders.Geometry;
    var FSSource = shaders.Fragment;

    if (model.haveCellScalars) {
      FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_9__["default"].substitute(FSSource, '//VTK::Color::Dec', ['uniform samplerBuffer texture1;']).result;
      FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_9__["default"].substitute(FSSource, '//VTK::Color::Impl', ['gl_FragData[0] = texelFetchBuffer(texture1, gl_PrimitiveID + PrimitiveIDOffset);']).result;
    }

    if (model.lastBoundBO.getCABO().getColorComponents() !== 0) {
      VSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_9__["default"].substitute(VSSource, '//VTK::Color::Dec', ['in vec4 diffuseColor;', 'out vec4 fcolorVSOutput;']).result;
      VSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_9__["default"].substitute(VSSource, '//VTK::Color::Impl', ['fcolorVSOutput = diffuseColor;']).result;
      GSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_9__["default"].substitute(GSSource, '//VTK::Color::Dec', ['in vec4 fcolorVSOutput[];\n', 'out vec4 fcolorGSOutput;']).result;
      GSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_9__["default"].substitute(GSSource, '//VTK::Color::Impl', ['fcolorGSOutput = fcolorVSOutput[i];']).result;
      FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_9__["default"].substitute(FSSource, '//VTK::Color::Dec', ['in vec4 fcolorVSOutput;']).result;
      FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_9__["default"].substitute(FSSource, '//VTK::Color::Impl', ['gl_FragData[0] = fcolorVSOutput;']).result;
    } else {
      FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_9__["default"].substitute(FSSource, '//VTK::Color::Dec', ['uniform vec4 diffuseColor;']).result;
      FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_9__["default"].substitute(FSSource, '//VTK::Color::Impl', ['gl_FragData[0] = diffuseColor;']).result;
    }

    shaders.Vertex = VSSource;
    shaders.Geometry = GSSource;
    shaders.Fragment = FSSource;
  };

  publicAPI.replaceShaderTCoord = function (shaders, ren, actor) {
    if (model.lastBoundBO.getCABO().getTCoordOffset()) {
      var VSSource = shaders.Vertex;
      var GSSource = shaders.Geometry;
      var FSSource = shaders.Fragment;
      var tcdim = model.lastBoundBO.getCABO().getTCoordComponents();

      if (tcdim === 1) {
        VSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_9__["default"].substitute(VSSource, '//VTK::TCoord::Dec', ['in float tcoordMC;', 'out float tcoordVCVSOutput;']).result;
        VSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_9__["default"].substitute(VSSource, '//VTK::TCoord::Impl', ['tcoordVCVSOutput = tcoordMC;']).result;
        GSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_9__["default"].substitute(GSSource, '//VTK::TCoord::Dec', ['in float tcoordVCVSOutput[];\n', 'out float tcoordVCGSOutput;']).result;
        GSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_9__["default"].substitute(GSSource, ['//VTK::TCoord::Impl', 'tcoordVCGSOutput = tcoordVCVSOutput[i];']).result;
        FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_9__["default"].substitute(FSSource, '//VTK::TCoord::Dec', ['in float tcoordVCVSOutput;', 'uniform sampler2D texture1;']).result;
        FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_9__["default"].substitute(FSSource, '//VTK::TCoord::Impl', ['gl_FragData[0] = gl_FragData[0]*texture2D(texture1, vec2(tcoordVCVSOutput,0));']).result;
      } else if (tcdim === 2) {
        VSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_9__["default"].substitute(VSSource, '//VTK::TCoord::Dec', ['in vec2 tcoordMC;', 'out vec2 tcoordVCVSOutput;']).result;
        VSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_9__["default"].substitute(VSSource, '//VTK::TCoord::Impl', ['tcoordVCVSOutput = tcoordMC;']).result;
        GSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_9__["default"].substitute(GSSource, '//VTK::TCoord::Dec', ['in vec2 tcoordVCVSOutput[];\n', 'out vec2 tcoordVCGSOutput;']).result;
        GSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_9__["default"].substitute(GSSource, '//VTK::TCoord::Impl', ['tcoordVCGSOutput = tcoordVCVSOutput[i];']).result;
        FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_9__["default"].substitute(FSSource, '//VTK::TCoord::Dec', ['in vec2 tcoordVCVSOutput;', 'uniform sampler2D texture1;']).result;
        FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_9__["default"].substitute(FSSource, '//VTK::TCoord::Impl', ['gl_FragData[0] = gl_FragData[0]*texture2D(texture1, tcoordVCVSOutput.st);']).result;
      }

      if (model.haveCellScalars) {
        GSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_9__["default"].substitute(GSSource, '//VTK::PrimID::Impl', ['gl_PrimitiveID = gl_PrimitiveIDIn;']).result;
      }

      shaders.Vertex = VSSource;
      shaders.Geometry = GSSource;
      shaders.Fragment = FSSource;
    }
  };

  publicAPI.replaceShaderPicking = function (shaders, ren, actor) {
    var FSSource = shaders.Fragment;
    FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_9__["default"].substitute(FSSource, '//VTK::Picking::Dec', ['uniform vec3 mapperIndex;', 'uniform int picking;']).result;
    FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_9__["default"].substitute(FSSource, '//VTK::Picking::Impl', '  gl_FragData[0] = picking != 0 ? vec4(mapperIndex,1.0) : gl_FragData[0];').result;
    shaders.Fragment = FSSource;
  };

  publicAPI.replaceShaderPositionVC = function (shaders, ren, actor) {
    var VSSource = shaders.Vertex;
    var GSSource = shaders.Geometry;
    var FSSource = shaders.Fragment; // for points make sure to add in the point size

    if (actor.getProperty().getRepresentation() === _Core_Property_Constants_js__WEBPACK_IMPORTED_MODULE_12__["Representation"].POINTS || model.lastBoundBO.getPrimitiveType() === primTypes.Points) {
      VSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_9__["default"].substitute(VSSource, '//VTK::PositionVC::Impl', ['//VTK::PositionVC::Impl', "  gl_PointSize = ".concat(actor.getProperty().getPointSize(), ".0;")], false).result;
    }

    shaders.Vertex = VSSource;
    shaders.Geometry = GSSource;
    shaders.Fragment = FSSource;
  };

  publicAPI.updateShaders = function (cellBO, ren, actor) {
    model.lastBoundBO = cellBO; // has something changed that would require us to recreate the shader?

    if (publicAPI.getNeedToRebuildShaders(cellBO, ren, actor)) {
      var shaders = {
        Vertex: null,
        Fragment: null,
        Geometry: null
      };
      publicAPI.buildShaders(shaders, ren, actor); // compile and bind the program if needed

      var newShader = model.openGLRenderWindow.getShaderCache().readyShaderProgramArray(shaders.Vertex, shaders.Fragment, shaders.Geometry); // if the shader changed reinitialize the VAO

      if (newShader !== cellBO.getProgram()) {
        cellBO.setProgram(newShader); // reset the VAO as the shader has changed

        cellBO.getVAO().releaseGraphicsResources();
      }

      cellBO.getShaderSourceTime().modified();
    } else {
      model.openGLRenderWindow.getShaderCache().readyShaderProgram(cellBO.getProgram());
    }

    cellBO.getVAO().bind();
    publicAPI.setMapperShaderParameters(cellBO, ren, actor);
    publicAPI.setPropertyShaderParameters(cellBO, ren, actor);
    publicAPI.setCameraShaderParameters(cellBO, ren, actor);
    var listCallbacks = model.renderable.getViewSpecificProperties().ShadersCallbacks;

    if (listCallbacks) {
      listCallbacks.forEach(function (object) {
        object.callback(object.userData, cellBO, ren, actor);
      });
    }
  };

  publicAPI.setMapperShaderParameters = function (cellBO, ren, actor) {
    // Now to update the VAO too, if necessary.
    if (cellBO.getProgram().isUniformUsed('PrimitiveIDOffset')) {
      cellBO.getProgram().setUniformi('PrimitiveIDOffset', model.primitiveIDOffset);
    }

    if (cellBO.getProgram().isAttributeUsed('vertexWC')) {
      if (!cellBO.getVAO().addAttributeArray(cellBO.getProgram(), cellBO.getCABO(), 'vertexWC', cellBO.getCABO().getVertexOffset(), cellBO.getCABO().getStride(), model.context.FLOAT, 3, false)) {
        vtkErrorMacro('Error setting vertexWC in shader VAO.');
      }
    }

    if (cellBO.getCABO().getElementCount() && (model.VBOBuildTime.getMTime() > cellBO.getAttributeUpdateTime().getMTime() || cellBO.getShaderSourceTime().getMTime() > cellBO.getAttributeUpdateTime().getMTime())) {
      model.renderable.getCustomShaderAttributes().forEach(function (attrName, idx) {
        if (cellBO.getProgram().isAttributeUsed("".concat(attrName, "MC"))) {
          if (!cellBO.getVAO().addAttributeArray(cellBO.getProgram(), cellBO.getCABO(), "".concat(attrName, "MC"), cellBO.getCABO().getCustomData()[idx].offset, cellBO.getCABO().getStride(), model.context.FLOAT, cellBO.getCABO().getCustomData()[idx].components, false)) {
            vtkErrorMacro("Error setting ".concat(attrName, "MC in shader VAO."));
          }
        }
      });

      if (cellBO.getProgram().isAttributeUsed('tcoordMC') && cellBO.getCABO().getTCoordOffset()) {
        if (!cellBO.getVAO().addAttributeArray(cellBO.getProgram(), cellBO.getCABO(), 'tcoordMC', cellBO.getCABO().getTCoordOffset(), cellBO.getCABO().getStride(), model.context.FLOAT, cellBO.getCABO().getTCoordComponents(), false)) {
          vtkErrorMacro('Error setting tcoordMC in shader VAO.');
        }
      } else {
        cellBO.getVAO().removeAttributeArray('tcoordMC');
      }

      if (model.internalColorTexture && cellBO.getProgram().isUniformUsed('texture1')) {
        cellBO.getProgram().setUniformi('texture1', model.internalColorTexture.getTextureUnit());
      }

      var tus = model.openGLActor2D.getActiveTextures();

      if (tus) {
        for (var index = 0; index < tus.length; ++index) {
          var tex = tus[index];
          var texUnit = tex.getTextureUnit();
          var tname = "texture".concat(texUnit + 1);

          if (cellBO.getProgram().isUniformUsed(tname)) {
            cellBO.getProgram().setUniformi(tname, texUnit);
          }
        }
      } // handle wide lines


      if (publicAPI.haveWideLines(ren, actor)) {
        var gl = model.context;
        var vp = gl.getParameter(gl.VIEWPORT);
        var lineWidth = [1, 1];
        lineWidth[0] = 2.0 * actor.getProperty().getLineWidth() / vp[2];
        lineWidth[1] = 2.0 * actor.getProperty().getLineWidth() / vp[3];
        cellBO.getProgram().setUniform2f('lineWidthNVC', lineWidth);
      }

      var selector = model.openGLRenderer.getSelector();
      cellBO.getProgram().setUniform3fArray('mapperIndex', selector ? selector.getPropColorValue() : [0.0, 0.0, 0.0]);
      cellBO.getProgram().setUniformi('picking', selector ? selector.getCurrentPass() + 1 : 0);
    }
  };

  publicAPI.setPropertyShaderParameters = function (cellBO, ren, actor) {
    var c = model.renderable.getColorMapColors();

    if (!c || c.getNumberOfComponents() === 0) {
      var program = cellBO.getProgram();
      var ppty = actor.getProperty();
      var opacity = ppty.getOpacity();
      var dColor = ppty.getColor();
      var diffuseColor = [dColor[0], dColor[1], dColor[2], opacity];
      program.setUniform4f('diffuseColor', diffuseColor);
    }
  };

  function safeMatrixMultiply(matrixArray, matrixType, tmpMat) {
    matrixType.identity(tmpMat);
    return matrixArray.reduce(function (res, matrix, index) {
      if (index === 0) {
        return matrix ? matrixType.copy(res, matrix) : matrixType.identity(res);
      }

      return matrix ? matrixType.multiply(res, res, matrix) : res;
    }, tmpMat);
  }

  publicAPI.setCameraShaderParameters = function (cellBO, ren, actor) {
    var program = cellBO.getProgram();
    var shiftScaleEnabled = cellBO.getCABO().getCoordShiftAndScaleEnabled();
    var inverseShiftScaleMatrix = shiftScaleEnabled ? cellBO.getCABO().getInverseShiftAndScaleMatrix() : null; // Get the position of the actor

    var size = model.openGLRenderer.getTiledSizeAndOrigin();
    var vport = ren.getViewport();
    var actorPos = actor.getActualPositionCoordinate().getComputedViewportValue(ren); // Get the window info
    // const tileViewport = ren.getVTKWindow().getTileViewport();
    // Assume tile viewport is 0 1 based on vtkOpenGLRenderer

    var tileViewport = [0.0, 0.0, 1.0, 1.0];
    var visVP = [0, 1, 0, 1];
    visVP[0] = vport[0] >= tileViewport[0] ? vport[0] : tileViewport[0];
    visVP[1] = vport[1] >= tileViewport[1] ? vport[1] : tileViewport[1];
    visVP[2] = vport[2] >= tileViewport[2] ? vport[2] : tileViewport[2];
    visVP[3] = vport[3] >= tileViewport[3] ? vport[3] : tileViewport[3];

    if (visVP[0] >= visVP[2]) {
      return;
    }

    if (visVP[1] >= visVP[3]) {
      return;
    }

    size.usize = Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_11__["J"])(size.usize * (visVP[2] - visVP[0]) / (vport[2] - vport[0]));
    size.vsize = Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_11__["J"])(size.vsize * (visVP[3] - visVP[1]) / (vport[3] - vport[1]));
    var winSize = model.openGLRenderer.getParent().getSize();
    var xoff = Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_11__["J"])(actorPos[0] - (visVP[0] - vport[0]) * winSize[0]);
    var yoff = Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_11__["J"])(actorPos[1] - (visVP[1] - vport[1]) * winSize[1]); // set ortho projection

    var left = -xoff;
    var right = -xoff + size.usize;
    var bottom = -yoff;
    var top = -yoff + size.vsize; // it's an error to call glOrtho with
    // either left==right or top==bottom

    if (left === right) {
      right = left + 1.0;
    }

    if (bottom === top) {
      top = bottom + 1.0;
    } // compute the combined ModelView matrix and send it down to save time in the shader


    var tmpMat4 = gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat4"].identity(new Float64Array(16));
    tmpMat4[0] = 2.0 / (right - left);
    tmpMat4[1 * 4 + 1] = 2.0 / (top - bottom);
    tmpMat4[0 * 4 + 3] = -1.0 * (right + left) / (right - left);
    tmpMat4[1 * 4 + 3] = -1.0 * (top + bottom) / (top - bottom);
    tmpMat4[2 * 4 + 2] = 0.0;
    tmpMat4[2 * 4 + 3] = actor.getProperty().getDisplayLocation() === _Core_Property2D_Constants_js__WEBPACK_IMPORTED_MODULE_13__["DisplayLocation"].FOREGROUND ? -1.0 : 1.0;
    tmpMat4[3 * 4 + 3] = 1.0;
    gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat4"].transpose(tmpMat4, tmpMat4);
    program.setUniformMatrix('WCVCMatrix', safeMatrixMultiply([tmpMat4, inverseShiftScaleMatrix], gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat4"], model.tmpMat4));
  };

  publicAPI.haveWideLines = function (ren, actor) {
    if (model.lastBoundBO === model.lines && actor.getProperty().getLineWidth() > 1.0) {
      // we have wide lines, but the OpenGL implementation may
      // actually support them, check the range to see if we
      // really need have to implement our own wide lines
      // vtkOpenGLRenderWindow* renWin = vtkOpenGLRenderWindow::SafeDownCast(ren->GetVTKWindow());
      // return !(
      //   renWin && renWin->GetMaximumHardwareLineWidth() >= actor->GetProperty()->GetLineWidth());
      return true;
    }

    return false;
  };
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {
  context: null,
  VBOBuildTime: 0,
  VBOBuildString: null,
  primitives: null,
  primTypes: null,
  shaderRebuildString: null
}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance

  _SceneGraph_ViewNode_js__WEBPACK_IMPORTED_MODULE_10__["default"].extend(publicAPI, model, initialValues);
  _ReplacementShaderMapper_js__WEBPACK_IMPORTED_MODULE_8__["default"].implementReplaceShaderCoincidentOffset(publicAPI, model, initialValues);
  model.primitives = [];
  model.primTypes = primTypes;
  model.tmpMat4 = gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat4"].identity(new Float64Array(16));

  for (var i = primTypes.Start; i < primTypes.End; i++) {
    model.primitives[i] = _Helper_js__WEBPACK_IMPORTED_MODULE_2__["default"].newInstance();
    model.primitives[i].setPrimitiveType(i);
    model.primitives[i].set({
      lastLightComplexity: 0,
      lastLightCount: 0,
      lastSelectionPass: false
    }, true);
  } // Build VTK API


  Object(_macros_js__WEBPACK_IMPORTED_MODULE_1__["setGet"])(publicAPI, model, ['context']);
  model.VBOBuildTime = {};
  Object(_macros_js__WEBPACK_IMPORTED_MODULE_1__["obj"])(model.VBOBuildTime, {
    mtime: 0
  }); // Object methods

  vtkOpenGLPolyDataMapper2D(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = Object(_macros_js__WEBPACK_IMPORTED_MODULE_1__["newInstance"])(extend, 'vtkOpenGLPolyDataMapper2D'); // ----------------------------------------------------------------------------

var vtkPolyDataMapper2D = {
  newInstance: newInstance,
  extend: extend
}; // Register ourself to OpenGL backend if imported

Object(_ViewNodeFactory_js__WEBPACK_IMPORTED_MODULE_14__["registerOverride"])('vtkMapper2D', newInstance);




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/Profiles/Geometry.js":
/*!*****************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Rendering/OpenGL/Profiles/Geometry.js ***!
  \*****************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Camera_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Camera.js */ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/Camera.js");
/* harmony import */ var _Renderer_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Renderer.js */ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/Renderer.js");
/* harmony import */ var _Actor_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Actor.js */ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/Actor.js");
/* harmony import */ var _Actor2D_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Actor2D.js */ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/Actor2D.js");
/* harmony import */ var _CubeAxesActor_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../CubeAxesActor.js */ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/CubeAxesActor.js");
/* harmony import */ var _PolyDataMapper_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../PolyDataMapper.js */ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/PolyDataMapper.js");
/* harmony import */ var _PolyDataMapper2D_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../PolyDataMapper2D.js */ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/PolyDataMapper2D.js");
/* harmony import */ var _ScalarBarActor_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../ScalarBarActor.js */ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/ScalarBarActor.js");
/* harmony import */ var _Skybox_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../Skybox.js */ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/Skybox.js");
/* harmony import */ var _Texture_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../Texture.js */ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/Texture.js");
/* harmony import */ var _PixelSpaceCallbackMapper_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../PixelSpaceCallbackMapper.js */ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/PixelSpaceCallbackMapper.js");













/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/Profiles/Glyph.js":
/*!**************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Rendering/OpenGL/Profiles/Glyph.js ***!
  \**************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Glyph3DMapper_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Glyph3DMapper.js */ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/Glyph3DMapper.js");



/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/Profiles/Volume.js":
/*!***************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Rendering/OpenGL/Profiles/Volume.js ***!
  \***************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Camera_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Camera.js */ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/Camera.js");
/* harmony import */ var _Renderer_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Renderer.js */ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/Renderer.js");
/* harmony import */ var _ImageMapper_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../ImageMapper.js */ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/ImageMapper.js");
/* harmony import */ var _ImageSlice_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../ImageSlice.js */ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/ImageSlice.js");
/* harmony import */ var _Volume_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Volume.js */ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/Volume.js");
/* harmony import */ var _VolumeMapper_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../VolumeMapper.js */ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/VolumeMapper.js");
/* harmony import */ var _PixelSpaceCallbackMapper_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../PixelSpaceCallbackMapper.js */ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/PixelSpaceCallbackMapper.js");









/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/RenderWindow.js":
/*!************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Rendering/OpenGL/RenderWindow.js ***!
  \************************************************************************/
/*! exports provided: default, extend, newInstance, popMonitorGLContextCount, pushMonitorGLContextCount */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(global) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkRenderWindow; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "popMonitorGLContextCount", function() { return popMonitorGLContextCount; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pushMonitorGLContextCount", function() { return pushMonitorGLContextCount; });
/* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ "../node_modules/@babel/runtime/helpers/slicedToArray.js");
/* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "../node_modules/@babel/runtime/helpers/toConsumableArray.js");
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ "../node_modules/@babel/runtime/helpers/asyncToGenerator.js");
/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/regenerator */ "../node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _Common_Core_DataArray_Constants_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../Common/Core/DataArray/Constants.js */ "../node_modules/@kitware/vtk.js/Common/Core/DataArray/Constants.js");
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _Core_RenderWindow_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../Core/RenderWindow.js */ "../node_modules/@kitware/vtk.js/Rendering/Core/RenderWindow.js");
/* harmony import */ var _ForwardPass_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./ForwardPass.js */ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/ForwardPass.js");
/* harmony import */ var _HardwareSelector_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./HardwareSelector.js */ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/HardwareSelector.js");
/* harmony import */ var _ShaderCache_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./ShaderCache.js */ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/ShaderCache.js");
/* harmony import */ var _TextureUnitManager_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./TextureUnitManager.js */ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/TextureUnitManager.js");
/* harmony import */ var _ViewNodeFactory_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./ViewNodeFactory.js */ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/ViewNodeFactory.js");
/* harmony import */ var _SceneGraph_RenderPass_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../SceneGraph/RenderPass.js */ "../node_modules/@kitware/vtk.js/Rendering/SceneGraph/RenderPass.js");
/* harmony import */ var _SceneGraph_RenderWindowViewNode_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../SceneGraph/RenderWindowViewNode.js */ "../node_modules/@kitware/vtk.js/Rendering/SceneGraph/RenderWindowViewNode.js");















var vtkDebugMacro = _macros_js__WEBPACK_IMPORTED_MODULE_5__["default"].vtkDebugMacro,
    vtkErrorMacro = _macros_js__WEBPACK_IMPORTED_MODULE_5__["default"].vtkErrorMacro;
var SCREENSHOT_PLACEHOLDER = {
  position: 'absolute',
  top: 0,
  left: 0,
  width: '100%',
  height: '100%'
};
var DEFAULT_RESET_FACTORS = {
  vr: {
    rescaleFactor: 1.0,
    translateZ: -0.7 // 0.7 m forward from the camera

  },
  ar: {
    rescaleFactor: 0.25,
    // scale down AR for viewing comfort by default
    translateZ: -0.5 // 0.5 m forward from the camera

  }
};

function checkRenderTargetSupport(gl, format, type) {
  // create temporary frame buffer and texture
  var framebuffer = gl.createFramebuffer();
  var texture = gl.createTexture();
  gl.bindTexture(gl.TEXTURE_2D, texture);
  gl.texImage2D(gl.TEXTURE_2D, 0, format, 2, 2, 0, format, type, null);
  gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);
  gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0); // check frame buffer status

  var status = gl.checkFramebufferStatus(gl.FRAMEBUFFER); // clean up

  gl.bindFramebuffer(gl.FRAMEBUFFER, null);
  gl.bindTexture(gl.TEXTURE_2D, null);
  return status === gl.FRAMEBUFFER_COMPLETE;
} // ----------------------------------------------------------------------------
// Monitor the usage of GL context across vtkOpenGLRenderWindow instances
// ----------------------------------------------------------------------------


var GL_CONTEXT_COUNT = 0;
var GL_CONTEXT_LISTENERS = [];

function createGLContext() {
  GL_CONTEXT_COUNT++;
  GL_CONTEXT_LISTENERS.forEach(function (cb) {
    return cb(GL_CONTEXT_COUNT);
  });
}

function deleteGLContext() {
  GL_CONTEXT_COUNT--;
  GL_CONTEXT_LISTENERS.forEach(function (cb) {
    return cb(GL_CONTEXT_COUNT);
  });
}

function pushMonitorGLContextCount(cb) {
  GL_CONTEXT_LISTENERS.push(cb);
}
function popMonitorGLContextCount(cb) {
  return GL_CONTEXT_LISTENERS.pop();
} // ----------------------------------------------------------------------------
// vtkOpenGLRenderWindow methods
// ----------------------------------------------------------------------------

function vtkOpenGLRenderWindow(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkOpenGLRenderWindow');

  publicAPI.getViewNodeFactory = function () {
    return model.myFactory;
  }; // Auto update style


  var previousSize = [0, 0];

  function updateWindow() {
    // Canvas size
    if (model.renderable) {
      if (model.size[0] !== previousSize[0] || model.size[1] !== previousSize[1]) {
        previousSize[0] = model.size[0];
        previousSize[1] = model.size[1];
        model.canvas.setAttribute('width', model.size[0]);
        model.canvas.setAttribute('height', model.size[1]);
      }
    } // ImageStream size


    if (model.viewStream) {
      // If same size that's a NoOp
      model.viewStream.setSize(model.size[0], model.size[1]);
    } // Offscreen ?


    model.canvas.style.display = model.useOffScreen ? 'none' : 'block'; // Cursor type

    if (model.el) {
      model.el.style.cursor = model.cursorVisibility ? model.cursor : 'none';
    } // Invalidate cached DOM container size


    model.containerSize = null;
  }

  publicAPI.onModified(updateWindow); // Builds myself.

  publicAPI.buildPass = function (prepass) {
    if (prepass) {
      if (!model.renderable) {
        return;
      }

      publicAPI.prepareNodes();
      publicAPI.addMissingNodes(model.renderable.getRenderersByReference());
      publicAPI.removeUnusedNodes();
      publicAPI.initialize();
      model.children.forEach(function (child) {
        child.setOpenGLRenderWindow(publicAPI);
      });
    }
  };

  publicAPI.initialize = function () {
    if (!model.initialized) {
      model.context = publicAPI.get3DContext();
      model.textureUnitManager = _TextureUnitManager_js__WEBPACK_IMPORTED_MODULE_10__["default"].newInstance();
      model.textureUnitManager.setContext(model.context);
      model.shaderCache.setContext(model.context); // initialize blending for transparency

      var gl = model.context;
      gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);
      gl.depthFunc(gl.LEQUAL);
      gl.enable(gl.BLEND);
      model.initialized = true;
    }
  };

  publicAPI.makeCurrent = function () {
    model.context.makeCurrent();
  };

  publicAPI.setContainer = function (el) {
    if (model.el && model.el !== el) {
      if (model.canvas.parentNode !== model.el) {
        vtkErrorMacro('Error: canvas parent node does not match container');
      } // Remove canvas from previous container


      model.el.removeChild(model.canvas); // If the renderer has previously added
      // a background image, remove it from the DOM.

      if (model.el.contains(model.bgImage)) {
        model.el.removeChild(model.bgImage);
      }
    }

    if (model.el !== el) {
      model.el = el;

      if (model.el) {
        model.el.appendChild(model.canvas); // If the renderer is set to use a background
        // image, attach it to the DOM.

        if (model.useBackgroundImage) {
          model.el.appendChild(model.bgImage);
        }
      } // Trigger modified()


      publicAPI.modified();
    }
  };

  publicAPI.getContainer = function () {
    return model.el;
  };

  publicAPI.getContainerSize = function () {
    if (!model.containerSize && model.el) {
      var _model$el$getBounding = model.el.getBoundingClientRect(),
          width = _model$el$getBounding.width,
          height = _model$el$getBounding.height;

      model.containerSize = [width, height];
    }

    return model.containerSize || model.size;
  };

  publicAPI.getFramebufferSize = function () {
    if (model.activeFramebuffer) {
      return model.activeFramebuffer.getSize();
    }

    return model.size;
  };

  publicAPI.getPixelData = function (x1, y1, x2, y2) {
    var pixels = new Uint8Array((x2 - x1 + 1) * (y2 - y1 + 1) * 4);
    model.context.readPixels(x1, y1, x2 - x1 + 1, y2 - y1 + 1, model.context.RGBA, model.context.UNSIGNED_BYTE, pixels);
    return pixels;
  };

  publicAPI.get3DContext = function () {
    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {
      preserveDrawingBuffer: false,
      depth: true,
      alpha: true
    };
    var result = null; // Do we have webxr support

    if (navigator.xr !== undefined && navigator.xr.isSessionSupported('immersive-vr')) {
      publicAPI.invokeHaveVRDisplay();
    }

    var webgl2Supported = typeof WebGL2RenderingContext !== 'undefined';
    model.webgl2 = false;

    if (model.defaultToWebgl2 && webgl2Supported) {
      result = model.canvas.getContext('webgl2', options);

      if (result) {
        model.webgl2 = true;
        vtkDebugMacro('using webgl2');
      }
    }

    if (!result) {
      vtkDebugMacro('using webgl1');
      result = model.canvas.getContext('webgl', options) || model.canvas.getContext('experimental-webgl', options);
    } // prevent default context lost handler


    model.canvas.addEventListener('webglcontextlost', function (event) {
      event.preventDefault();
    }, false);
    model.canvas.addEventListener('webglcontextrestored', publicAPI.restoreContext, false);
    return result;
  }; // Request an XR session on the user device with WebXR,
  // typically in response to a user request such as a button press


  publicAPI.startXR = function (isAR) {
    if (navigator.xr === undefined) {
      throw new Error('WebXR is not available');
    }

    model.xrSessionIsAR = isAR;
    var sessionType = isAR ? 'immersive-ar' : 'immersive-vr';

    if (!navigator.xr.isSessionSupported(sessionType)) {
      if (isAR) {
        throw new Error('Device does not support AR session');
      } else {
        throw new Error('VR display is not available');
      }
    }

    if (model.xrSession === null) {
      navigator.xr.requestSession(sessionType).then(publicAPI.enterXR, function () {
        throw new Error('Failed to create XR session!');
      });
    } else {
      throw new Error('XR Session already exists!');
    }
  }; // When an XR session is available, set up the XRWebGLLayer
  // and request the first animation frame for the device


  publicAPI.enterXR = /*#__PURE__*/function () {
    var _ref = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default.a.mark(function _callee(xrSession) {
      var gl, glLayer;
      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default.a.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              model.xrSession = xrSession;
              model.oldCanvasSize = model.size.slice();

              if (!(model.xrSession !== null)) {
                _context.next = 15;
                break;
              }

              gl = publicAPI.get3DContext();
              _context.next = 6;
              return gl.makeXRCompatible();

            case 6:
              glLayer = new global.XRWebGLLayer(model.xrSession, gl);
              publicAPI.setSize(glLayer.framebufferWidth, glLayer.framebufferHeight);
              model.xrSession.updateRenderState({
                baseLayer: glLayer
              });
              model.xrSession.requestReferenceSpace('local').then(function (refSpace) {
                model.xrReferenceSpace = refSpace;
              });
              publicAPI.resetXRScene();
              model.renderable.getInteractor().switchToXRAnimation();
              model.xrSceneFrame = model.xrSession.requestAnimationFrame(publicAPI.xrRender);
              _context.next = 16;
              break;

            case 15:
              throw new Error('Failed to enter VR with a null xrSession.');

            case 16:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));

    return function (_x) {
      return _ref.apply(this, arguments);
    };
  }();

  publicAPI.resetXRScene = function () {
    var inputRescaleFactor = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_RESET_FACTORS.vr.rescaleFactor;
    var inputTranslateZ = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_RESET_FACTORS.vr.translateZ;
    // Adjust world-to-physical parameters for different modalities
    // Default parameter values are for VR (model.xrSessionIsAR == false)
    var rescaleFactor = inputRescaleFactor;
    var translateZ = inputTranslateZ;

    if (model.xrSessionIsAR && rescaleFactor === DEFAULT_RESET_FACTORS.vr.rescaleFactor) {
      // Scale down by default in AR
      rescaleFactor = DEFAULT_RESET_FACTORS.ar.rescaleFactor;
    }

    if (model.xrSessionIsAR && translateZ === DEFAULT_RESET_FACTORS.vr.translateZ) {
      // Default closer to the camera in AR
      translateZ = DEFAULT_RESET_FACTORS.ar.translateZ;
    }

    var ren = model.renderable.getRenderers()[0];
    ren.resetCamera();
    var camera = ren.getActiveCamera();
    var physicalScale = camera.getPhysicalScale();
    var physicalTranslation = camera.getPhysicalTranslation();
    physicalScale /= rescaleFactor;
    translateZ *= physicalScale;
    physicalTranslation[2] += translateZ;
    camera.setPhysicalScale(physicalScale);
    camera.setPhysicalTranslation(physicalTranslation);
  };

  publicAPI.stopXR = /*#__PURE__*/_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default.a.mark(function _callee2() {
    var gl, ren;
    return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default.a.wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            if (!(navigator.xr === undefined)) {
              _context2.next = 2;
              break;
            }

            return _context2.abrupt("return");

          case 2:
            if (!(model.xrSession !== null)) {
              _context2.next = 10;
              break;
            }

            model.xrSession.cancelAnimationFrame(model.xrSceneFrame);
            model.renderable.getInteractor().returnFromXRAnimation();
            gl = publicAPI.get3DContext();
            gl.bindFramebuffer(gl.FRAMEBUFFER, null);
            _context2.next = 9;
            return model.xrSession.end().catch(function (error) {
              if (!(error instanceof DOMException)) {
                throw error;
              }
            });

          case 9:
            model.xrSession = null;

          case 10:
            if (model.oldCanvasSize !== undefined) {
              publicAPI.setSize.apply(publicAPI, _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_1___default()(model.oldCanvasSize));
            } // Reset to default canvas


            ren = model.renderable.getRenderers()[0];
            ren.getActiveCamera().setProjectionMatrix(null);
            ren.resetCamera();
            ren.setViewport(0.0, 0, 1.0, 1.0);
            publicAPI.traverseAllPasses();

          case 16:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2);
  }));

  publicAPI.xrRender = /*#__PURE__*/function () {
    var _ref3 = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default.a.mark(function _callee3(t, frame) {
      var xrSession, xrPose, gl, glLayer, ren;
      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default.a.wrap(function _callee3$(_context3) {
        while (1) {
          switch (_context3.prev = _context3.next) {
            case 0:
              xrSession = frame.session;
              model.renderable.getInteractor().updateXRGamepads(xrSession, frame, model.xrReferenceSpace);
              model.xrSceneFrame = model.xrSession.requestAnimationFrame(publicAPI.xrRender);
              xrPose = frame.getViewerPose(model.xrReferenceSpace);

              if (xrPose) {
                gl = publicAPI.get3DContext();

                if (model.xrSessionIsAR && model.oldCanvasSize !== undefined) {
                  gl.canvas.width = model.oldCanvasSize[0];
                  gl.canvas.height = model.oldCanvasSize[1];
                }

                glLayer = xrSession.renderState.baseLayer;
                gl.bindFramebuffer(gl.FRAMEBUFFER, glLayer.framebuffer);
                gl.clear(gl.COLOR_BUFFER_BIT);
                gl.clear(gl.DEPTH_BUFFER_BIT); // get the first renderer

                ren = model.renderable.getRenderers()[0]; // Do a render pass for each eye

                xrPose.views.forEach(function (view) {
                  var viewport = glLayer.getViewport(view);
                  gl.viewport(viewport.x, viewport.y, viewport.width, viewport.height); // TODO: Appropriate handling for AR passthrough on HMDs
                  // with two eyes will require further investigation.

                  if (!model.xrSessionIsAR) {
                    if (view.eye === 'left') {
                      ren.setViewport(0, 0, 0.5, 1.0);
                    } else if (view.eye === 'right') {
                      ren.setViewport(0.5, 0, 1.0, 1.0);
                    } else {
                      // No handling for non-eye viewport
                      return;
                    }
                  }

                  ren.getActiveCamera().computeViewParametersFromPhysicalMatrix(view.transform.inverse.matrix);
                  ren.getActiveCamera().setProjectionMatrix(view.projectionMatrix);
                  publicAPI.traverseAllPasses();
                });
              }

            case 5:
            case "end":
              return _context3.stop();
          }
        }
      }, _callee3);
    }));

    return function (_x2, _x3) {
      return _ref3.apply(this, arguments);
    };
  }();

  publicAPI.restoreContext = function () {
    var rp = _SceneGraph_RenderPass_js__WEBPACK_IMPORTED_MODULE_12__["default"].newInstance();
    rp.setCurrentOperation('Release');
    rp.traverse(publicAPI, null);
  };

  publicAPI.activateTexture = function (texture) {
    // Only add if it isn't already there
    var result = model._textureResourceIds.get(texture);

    if (result !== undefined) {
      model.context.activeTexture(model.context.TEXTURE0 + result);
      return;
    }

    var activeUnit = publicAPI.getTextureUnitManager().allocate();

    if (activeUnit < 0) {
      vtkErrorMacro('Hardware does not support the number of textures defined.');
      return;
    }

    model._textureResourceIds.set(texture, activeUnit);

    model.context.activeTexture(model.context.TEXTURE0 + activeUnit);
  };

  publicAPI.deactivateTexture = function (texture) {
    // Only deactivate if it isn't already there
    var result = model._textureResourceIds.get(texture);

    if (result !== undefined) {
      publicAPI.getTextureUnitManager().free(result);
      delete model._textureResourceIds.delete(texture);
    }
  };

  publicAPI.getTextureUnitForTexture = function (texture) {
    var result = model._textureResourceIds.get(texture);

    if (result !== undefined) {
      return result;
    }

    return -1;
  };

  publicAPI.getDefaultTextureInternalFormat = function (vtktype, numComps, useFloat) {
    if (model.webgl2) {
      switch (vtktype) {
        case _Common_Core_DataArray_Constants_js__WEBPACK_IMPORTED_MODULE_4__["VtkDataTypes"].UNSIGNED_CHAR:
          switch (numComps) {
            case 1:
              return model.context.R8;

            case 2:
              return model.context.RG8;

            case 3:
              return model.context.RGB8;

            case 4:
            default:
              return model.context.RGBA8;
          }

        case _Common_Core_DataArray_Constants_js__WEBPACK_IMPORTED_MODULE_4__["VtkDataTypes"].FLOAT:
        default:
          switch (numComps) {
            case 1:
              return model.context.R16F;

            case 2:
              return model.context.RG16F;

            case 3:
              return model.context.RGB16F;

            case 4:
            default:
              return model.context.RGBA16F;
          }

      }
    } // webgl1 only supports four types


    switch (numComps) {
      case 1:
        return model.context.LUMINANCE;

      case 2:
        return model.context.LUMINANCE_ALPHA;

      case 3:
        return model.context.RGB;

      case 4:
      default:
        return model.context.RGBA;
    }
  };

  publicAPI.setBackgroundImage = function (img) {
    model.bgImage.src = img.src;
  };

  publicAPI.setUseBackgroundImage = function (value) {
    model.useBackgroundImage = value; // Add or remove the background image from the
    // DOM as specified.

    if (model.useBackgroundImage && !model.el.contains(model.bgImage)) {
      model.el.appendChild(model.bgImage);
    } else if (!model.useBackgroundImage && model.el.contains(model.bgImage)) {
      model.el.removeChild(model.bgImage);
    }
  };

  function getCanvasDataURL() {
    var format = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : model.imageFormat;
    // Copy current canvas to not modify the original
    var temporaryCanvas = document.createElement('canvas');
    var temporaryContext = temporaryCanvas.getContext('2d');
    temporaryCanvas.width = model.canvas.width;
    temporaryCanvas.height = model.canvas.height;
    temporaryContext.drawImage(model.canvas, 0, 0); // Get current client rect to place canvas

    var mainBoundingClientRect = model.canvas.getBoundingClientRect();
    var renderWindow = model.renderable;
    var renderers = renderWindow.getRenderers();
    renderers.forEach(function (renderer) {
      var viewProps = renderer.getViewProps();
      viewProps.forEach(function (viewProp) {
        // Check if the prop has a container that should have canvas
        if (viewProp.getContainer) {
          var container = viewProp.getContainer();
          var canvasList = container.getElementsByTagName('canvas'); // Go throughout all canvas and copy it into temporary main canvas

          for (var i = 0; i < canvasList.length; i++) {
            var currentCanvas = canvasList[i];
            var boundingClientRect = currentCanvas.getBoundingClientRect();
            var newXPosition = boundingClientRect.x - mainBoundingClientRect.x;
            var newYPosition = boundingClientRect.y - mainBoundingClientRect.y;
            temporaryContext.drawImage(currentCanvas, newXPosition, newYPosition);
          }
        }
      });
    });
    var screenshot = temporaryCanvas.toDataURL(format);
    temporaryCanvas.remove();
    publicAPI.invokeImageReady(screenshot);
  }

  publicAPI.captureNextImage = function () {
    var format = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'image/png';

    var _ref4 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
        _ref4$resetCamera = _ref4.resetCamera,
        resetCamera = _ref4$resetCamera === void 0 ? false : _ref4$resetCamera,
        _ref4$size = _ref4.size,
        size = _ref4$size === void 0 ? null : _ref4$size,
        _ref4$scale = _ref4.scale,
        scale = _ref4$scale === void 0 ? 1 : _ref4$scale;

    if (model.deleted) {
      return null;
    }

    model.imageFormat = format;
    var previous = model.notifyStartCaptureImage;
    model.notifyStartCaptureImage = true;
    model._screenshot = {
      size: !!size || scale !== 1 ? size || model.size.map(function (val) {
        return val * scale;
      }) : null
    };
    return new Promise(function (resolve, reject) {
      var subscription = publicAPI.onImageReady(function (imageURL) {
        if (model._screenshot.size === null) {
          model.notifyStartCaptureImage = previous;
          subscription.unsubscribe();

          if (model._screenshot.placeHolder) {
            // resize the main canvas back to its original size and show it
            model.size = model._screenshot.originalSize; // process the resize

            publicAPI.modified(); // restore the saved camera parameters, if applicable

            if (model._screenshot.cameras) {
              model._screenshot.cameras.forEach(function (_ref5) {
                var restoreParamsFn = _ref5.restoreParamsFn,
                    arg = _ref5.arg;
                return restoreParamsFn(arg);
              });
            } // Trigger a render at the original size


            publicAPI.traverseAllPasses(); // Remove and clean up the placeholder, revealing the original

            model.el.removeChild(model._screenshot.placeHolder);

            model._screenshot.placeHolder.remove();

            model._screenshot = null;
          }

          resolve(imageURL);
        } else {
          // Create a placeholder image overlay while we resize and render
          var tmpImg = document.createElement('img');
          tmpImg.style = SCREENSHOT_PLACEHOLDER;
          tmpImg.src = imageURL;
          model._screenshot.placeHolder = model.el.appendChild(tmpImg); // hide the main canvas

          model.canvas.style.display = 'none'; // remember the main canvas original size, then resize it

          model._screenshot.originalSize = model.size;
          model.size = model._screenshot.size;
          model._screenshot.size = null; // process the resize

          publicAPI.modified();

          if (resetCamera) {
            var isUserResetCamera = resetCamera !== true; // If resetCamera was requested, we first save camera parameters
            // from all the renderers, so we can restore them later

            model._screenshot.cameras = model.renderable.getRenderers().map(function (renderer) {
              var camera = renderer.getActiveCamera();
              var params = camera.get('focalPoint', 'position', 'parallelScale');
              return {
                resetCameraArgs: isUserResetCamera ? {
                  renderer: renderer
                } : undefined,
                resetCameraFn: isUserResetCamera ? resetCamera : renderer.resetCamera,
                restoreParamsFn: camera.set,
                // "clone" the params so we don't keep refs to properties
                arg: JSON.parse(JSON.stringify(params))
              };
            }); // Perform the resetCamera() on each renderer only after capturing
            // the params from all active cameras, in case there happen to be
            // linked cameras among the renderers.

            model._screenshot.cameras.forEach(function (_ref6) {
              var resetCameraFn = _ref6.resetCameraFn,
                  resetCameraArgs = _ref6.resetCameraArgs;
              return resetCameraFn(resetCameraArgs);
            });
          } // Trigger a render at the custom size


          publicAPI.traverseAllPasses();
        }
      });
    });
  };

  publicAPI.getGLInformations = function () {
    var gl = publicAPI.get3DContext();
    var glTextureFloat = gl.getExtension('OES_texture_float');
    var glTextureHalfFloat = gl.getExtension('OES_texture_half_float');
    var glDebugRendererInfo = gl.getExtension('WEBGL_debug_renderer_info');
    var glDrawBuffers = gl.getExtension('WEBGL_draw_buffers');
    var glAnisotropic = gl.getExtension('EXT_texture_filter_anisotropic') || gl.getExtension('WEBKIT_EXT_texture_filter_anisotropic');
    var params = [['Max Vertex Attributes', 'MAX_VERTEX_ATTRIBS', gl.getParameter(gl.MAX_VERTEX_ATTRIBS)], ['Max Varying Vectors', 'MAX_VARYING_VECTORS', gl.getParameter(gl.MAX_VARYING_VECTORS)], ['Max Vertex Uniform Vectors', 'MAX_VERTEX_UNIFORM_VECTORS', gl.getParameter(gl.MAX_VERTEX_UNIFORM_VECTORS)], ['Max Fragment Uniform Vectors', 'MAX_FRAGMENT_UNIFORM_VECTORS', gl.getParameter(gl.MAX_FRAGMENT_UNIFORM_VECTORS)], ['Max Fragment Texture Image Units', 'MAX_TEXTURE_IMAGE_UNITS', gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS)], ['Max Vertex Texture Image Units', 'MAX_VERTEX_TEXTURE_IMAGE_UNITS', gl.getParameter(gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS)], ['Max Combined Texture Image Units', 'MAX_COMBINED_TEXTURE_IMAGE_UNITS', gl.getParameter(gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS)], ['Max 2D Texture Size', 'MAX_TEXTURE_SIZE', gl.getParameter(gl.MAX_TEXTURE_SIZE)], ['Max Cube Texture Size', 'MAX_CUBE_MAP_TEXTURE_SIZE', gl.getParameter(gl.MAX_CUBE_MAP_TEXTURE_SIZE)], ['Max Texture Anisotropy', 'MAX_TEXTURE_MAX_ANISOTROPY_EXT', glAnisotropic && gl.getParameter(glAnisotropic.MAX_TEXTURE_MAX_ANISOTROPY_EXT)], ['Point Size Range', 'ALIASED_POINT_SIZE_RANGE', gl.getParameter(gl.ALIASED_POINT_SIZE_RANGE).join(' - ')], ['Line Width Range', 'ALIASED_LINE_WIDTH_RANGE', gl.getParameter(gl.ALIASED_LINE_WIDTH_RANGE).join(' - ')], ['Max Viewport Dimensions', 'MAX_VIEWPORT_DIMS', gl.getParameter(gl.MAX_VIEWPORT_DIMS).join(' - ')], ['Max Renderbuffer Size', 'MAX_RENDERBUFFER_SIZE', gl.getParameter(gl.MAX_RENDERBUFFER_SIZE)], ['Framebuffer Red Bits', 'RED_BITS', gl.getParameter(gl.RED_BITS)], ['Framebuffer Green Bits', 'GREEN_BITS', gl.getParameter(gl.GREEN_BITS)], ['Framebuffer Blue Bits', 'BLUE_BITS', gl.getParameter(gl.BLUE_BITS)], ['Framebuffer Alpha Bits', 'ALPHA_BITS', gl.getParameter(gl.ALPHA_BITS)], ['Framebuffer Depth Bits', 'DEPTH_BITS', gl.getParameter(gl.DEPTH_BITS)], ['Framebuffer Stencil Bits', 'STENCIL_BITS', gl.getParameter(gl.STENCIL_BITS)], ['Framebuffer Subpixel Bits', 'SUBPIXEL_BITS', gl.getParameter(gl.SUBPIXEL_BITS)], ['MSAA Samples', 'SAMPLES', gl.getParameter(gl.SAMPLES)], ['MSAA Sample Buffers', 'SAMPLE_BUFFERS', gl.getParameter(gl.SAMPLE_BUFFERS)], ['Supported Formats for UByte Render Targets     ', 'UNSIGNED_BYTE RENDER TARGET FORMATS', [glTextureFloat && checkRenderTargetSupport(gl, gl.RGBA, gl.UNSIGNED_BYTE) ? 'RGBA' : '', glTextureFloat && checkRenderTargetSupport(gl, gl.RGB, gl.UNSIGNED_BYTE) ? 'RGB' : '', glTextureFloat && checkRenderTargetSupport(gl, gl.LUMINANCE, gl.UNSIGNED_BYTE) ? 'LUMINANCE' : '', glTextureFloat && checkRenderTargetSupport(gl, gl.ALPHA, gl.UNSIGNED_BYTE) ? 'ALPHA' : '', glTextureFloat && checkRenderTargetSupport(gl, gl.LUMINANCE_ALPHA, gl.UNSIGNED_BYTE) ? 'LUMINANCE_ALPHA' : ''].join(' ')], ['Supported Formats for Half Float Render Targets', 'HALF FLOAT RENDER TARGET FORMATS', [glTextureHalfFloat && checkRenderTargetSupport(gl, gl.RGBA, glTextureHalfFloat.HALF_FLOAT_OES) ? 'RGBA' : '', glTextureHalfFloat && checkRenderTargetSupport(gl, gl.RGB, glTextureHalfFloat.HALF_FLOAT_OES) ? 'RGB' : '', glTextureHalfFloat && checkRenderTargetSupport(gl, gl.LUMINANCE, glTextureHalfFloat.HALF_FLOAT_OES) ? 'LUMINANCE' : '', glTextureHalfFloat && checkRenderTargetSupport(gl, gl.ALPHA, glTextureHalfFloat.HALF_FLOAT_OES) ? 'ALPHA' : '', glTextureHalfFloat && checkRenderTargetSupport(gl, gl.LUMINANCE_ALPHA, glTextureHalfFloat.HALF_FLOAT_OES) ? 'LUMINANCE_ALPHA' : ''].join(' ')], ['Supported Formats for Full Float Render Targets', 'FLOAT RENDER TARGET FORMATS', [glTextureFloat && checkRenderTargetSupport(gl, gl.RGBA, gl.FLOAT) ? 'RGBA' : '', glTextureFloat && checkRenderTargetSupport(gl, gl.RGB, gl.FLOAT) ? 'RGB' : '', glTextureFloat && checkRenderTargetSupport(gl, gl.LUMINANCE, gl.FLOAT) ? 'LUMINANCE' : '', glTextureFloat && checkRenderTargetSupport(gl, gl.ALPHA, gl.FLOAT) ? 'ALPHA' : '', glTextureFloat && checkRenderTargetSupport(gl, gl.LUMINANCE_ALPHA, gl.FLOAT) ? 'LUMINANCE_ALPHA' : ''].join(' ')], ['Max Multiple Render Targets Buffers', 'MAX_DRAW_BUFFERS_WEBGL', glDrawBuffers ? gl.getParameter(glDrawBuffers.MAX_DRAW_BUFFERS_WEBGL) : 0], ['High Float Precision in Vertex Shader', 'HIGH_FLOAT VERTEX_SHADER', [gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.HIGH_FLOAT).precision, ' (-2<sup>', gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.HIGH_FLOAT).rangeMin, '</sup> - 2<sup>', gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.HIGH_FLOAT).rangeMax, '</sup>)'].join('')], ['Medium Float Precision in Vertex Shader', 'MEDIUM_FLOAT VERTEX_SHADER', [gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.MEDIUM_FLOAT).precision, ' (-2<sup>', gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.MEDIUM_FLOAT).rangeMin, '</sup> - 2<sup>', gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.MEDIUM_FLOAT).rangeMax, '</sup>)'].join('')], ['Low Float Precision in Vertex Shader', 'LOW_FLOAT VERTEX_SHADER', [gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.LOW_FLOAT).precision, ' (-2<sup>', gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.LOW_FLOAT).rangeMin, '</sup> - 2<sup>', gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.LOW_FLOAT).rangeMax, '</sup>)'].join('')], ['High Float Precision in Fragment Shader', 'HIGH_FLOAT FRAGMENT_SHADER', [gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_FLOAT).precision, ' (-2<sup>', gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_FLOAT).rangeMin, '</sup> - 2<sup>', gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_FLOAT).rangeMax, '</sup>)'].join('')], ['Medium Float Precision in Fragment Shader', 'MEDIUM_FLOAT FRAGMENT_SHADER', [gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT).precision, ' (-2<sup>', gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT).rangeMin, '</sup> - 2<sup>', gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT).rangeMax, '</sup>)'].join('')], ['Low Float Precision in Fragment Shader', 'LOW_FLOAT FRAGMENT_SHADER', [gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_FLOAT).precision, ' (-2<sup>', gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_FLOAT).rangeMin, '</sup> - 2<sup>', gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_FLOAT).rangeMax, '</sup>)'].join('')], ['High Int Precision in Vertex Shader', 'HIGH_INT VERTEX_SHADER', [gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.HIGH_INT).precision, ' (-2<sup>', gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.HIGH_INT).rangeMin, '</sup> - 2<sup>', gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.HIGH_INT).rangeMax, '</sup>)'].join('')], ['Medium Int Precision in Vertex Shader', 'MEDIUM_INT VERTEX_SHADER', [gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.MEDIUM_INT).precision, ' (-2<sup>', gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.MEDIUM_INT).rangeMin, '</sup> - 2<sup>', gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.MEDIUM_INT).rangeMax, '</sup>)'].join('')], ['Low Int Precision in Vertex Shader', 'LOW_INT VERTEX_SHADER', [gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.LOW_INT).precision, ' (-2<sup>', gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.LOW_INT).rangeMin, '</sup> - 2<sup>', gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.LOW_INT).rangeMax, '</sup>)'].join('')], ['High Int Precision in Fragment Shader', 'HIGH_INT FRAGMENT_SHADER', [gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_INT).precision, ' (-2<sup>', gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_INT).rangeMin, '</sup> - 2<sup>', gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_INT).rangeMax, '</sup>)'].join('')], ['Medium Int Precision in Fragment Shader', 'MEDIUM_INT FRAGMENT_SHADER', [gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_INT).precision, ' (-2<sup>', gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_INT).rangeMin, '</sup> - 2<sup>', gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_INT).rangeMax, '</sup>)'].join('')], ['Low Int Precision in Fragment Shader', 'LOW_INT FRAGMENT_SHADER', [gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_INT).precision, ' (-2<sup>', gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_INT).rangeMin, '</sup> - 2<sup>', gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_INT).rangeMax, '</sup>)'].join('')], ['Supported Extensions', 'EXTENSIONS', gl.getSupportedExtensions().join('<br/>\t\t\t\t\t    ')], ['WebGL Renderer', 'RENDERER', gl.getParameter(gl.RENDERER)], ['WebGL Vendor', 'VENDOR', gl.getParameter(gl.VENDOR)], ['WebGL Version', 'VERSION', gl.getParameter(gl.VERSION)], ['Shading Language Version', 'SHADING_LANGUAGE_VERSION', gl.getParameter(gl.SHADING_LANGUAGE_VERSION)], ['Unmasked Renderer', 'UNMASKED_RENDERER', glDebugRendererInfo && gl.getParameter(glDebugRendererInfo.UNMASKED_RENDERER_WEBGL)], ['Unmasked Vendor', 'UNMASKED_VENDOR', glDebugRendererInfo && gl.getParameter(glDebugRendererInfo.UNMASKED_VENDOR_WEBGL)], ['WebGL Version', 'WEBGL_VERSION', model.webgl2 ? 2 : 1]];
    var result = {};

    while (params.length) {
      var _params$pop = params.pop(),
          _params$pop2 = _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0___default()(_params$pop, 3),
          label = _params$pop2[0],
          key = _params$pop2[1],
          value = _params$pop2[2];

      if (key) {
        result[key] = {
          label: label,
          value: value
        };
      }
    }

    return result;
  };

  publicAPI.traverseAllPasses = function () {
    if (model.renderPasses) {
      for (var index = 0; index < model.renderPasses.length; ++index) {
        model.renderPasses[index].traverse(publicAPI, null);
      }
    }

    if (model.notifyStartCaptureImage) {
      getCanvasDataURL();
    }
  };

  publicAPI.disableCullFace = function () {
    if (model.cullFaceEnabled) {
      model.context.disable(model.context.CULL_FACE);
      model.cullFaceEnabled = false;
    }
  };

  publicAPI.enableCullFace = function () {
    if (!model.cullFaceEnabled) {
      model.context.enable(model.context.CULL_FACE);
      model.cullFaceEnabled = true;
    }
  };

  publicAPI.setViewStream = function (stream) {
    if (model.viewStream === stream) {
      return false;
    }

    if (model.subscription) {
      model.subscription.unsubscribe();
      model.subscription = null;
    }

    model.viewStream = stream;

    if (model.viewStream) {
      // Force background to be transparent + render
      var mainRenderer = model.renderable.getRenderers()[0];
      mainRenderer.getBackgroundByReference()[3] = 0; // Enable display of the background image

      publicAPI.setUseBackgroundImage(true); // Bind to remote stream

      model.subscription = model.viewStream.onImageReady(function (e) {
        return publicAPI.setBackgroundImage(e.image);
      });
      model.viewStream.setSize(model.size[0], model.size[1]);
      model.viewStream.invalidateCache();
      model.viewStream.render();
      publicAPI.modified();
    }

    return true;
  };

  publicAPI.createSelector = function () {
    var ret = _HardwareSelector_js__WEBPACK_IMPORTED_MODULE_8__["default"].newInstance();
    ret.setOpenGLRenderWindow(publicAPI);
    return ret;
  };

  publicAPI.delete = _macros_js__WEBPACK_IMPORTED_MODULE_5__["default"].chain(publicAPI.delete, publicAPI.setViewStream, deleteGLContext);
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {
  cullFaceEnabled: false,
  shaderCache: null,
  initialized: false,
  context: null,
  canvas: null,
  cursorVisibility: true,
  cursor: 'pointer',
  textureUnitManager: null,
  textureResourceIds: null,
  containerSize: null,
  renderPasses: [],
  notifyStartCaptureImage: false,
  webgl2: false,
  defaultToWebgl2: true,
  // attempt webgl2 on by default
  activeFramebuffer: null,
  xrSession: null,
  xrSessionIsAR: false,
  xrReferenceSpace: null,
  xrSupported: true,
  imageFormat: 'image/png',
  useOffScreen: false,
  useBackgroundImage: false
}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance

  _SceneGraph_RenderWindowViewNode_js__WEBPACK_IMPORTED_MODULE_13__["default"].extend(publicAPI, model, initialValues); // Create internal instances

  model.canvas = document.createElement('canvas');
  model.canvas.style.width = '100%';
  createGLContext();

  if (!model.selector) {
    model.selector = _HardwareSelector_js__WEBPACK_IMPORTED_MODULE_8__["default"].newInstance();
    model.selector.setOpenGLRenderWindow(publicAPI);
  } // Create internal bgImage


  model.bgImage = new Image();
  model.bgImage.style.position = 'absolute';
  model.bgImage.style.left = '0';
  model.bgImage.style.top = '0';
  model.bgImage.style.width = '100%';
  model.bgImage.style.height = '100%';
  model.bgImage.style.zIndex = '-1';
  model._textureResourceIds = new Map();
  model.myFactory = _ViewNodeFactory_js__WEBPACK_IMPORTED_MODULE_11__["default"].newInstance();
  /* eslint-disable no-use-before-define */

  model.myFactory.registerOverride('vtkRenderWindow', newInstance);
  /* eslint-enable no-use-before-define */

  model.shaderCache = _ShaderCache_js__WEBPACK_IMPORTED_MODULE_9__["default"].newInstance();
  model.shaderCache.setOpenGLRenderWindow(publicAPI); // setup default forward pass rendering

  model.renderPasses[0] = _ForwardPass_js__WEBPACK_IMPORTED_MODULE_7__["default"].newInstance();
  _macros_js__WEBPACK_IMPORTED_MODULE_5__["default"].event(publicAPI, model, 'imageReady');
  _macros_js__WEBPACK_IMPORTED_MODULE_5__["default"].event(publicAPI, model, 'haveVRDisplay'); // Build VTK API

  _macros_js__WEBPACK_IMPORTED_MODULE_5__["default"].get(publicAPI, model, ['shaderCache', 'textureUnitManager', 'webgl2', 'vrDisplay', 'useBackgroundImage', 'xrSupported']);
  _macros_js__WEBPACK_IMPORTED_MODULE_5__["default"].setGet(publicAPI, model, ['initialized', 'context', 'canvas', 'renderPasses', 'notifyStartCaptureImage', 'defaultToWebgl2', 'cursor', 'useOffScreen', // might want to make this not call modified as
  // we change the active framebuffer a lot. Or maybe
  // only mark modified if the size or depth
  // of the buffer has changed
  'activeFramebuffer']);
  _macros_js__WEBPACK_IMPORTED_MODULE_5__["default"].setGetArray(publicAPI, model, ['size'], 2); // Object methods

  vtkOpenGLRenderWindow(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = _macros_js__WEBPACK_IMPORTED_MODULE_5__["default"].newInstance(extend, 'vtkOpenGLRenderWindow'); // ----------------------------------------------------------------------------
// Register API specific RenderWindow implementation
// ----------------------------------------------------------------------------

Object(_Core_RenderWindow_js__WEBPACK_IMPORTED_MODULE_6__["registerViewConstructor"])('WebGL', newInstance); // ----------------------------------------------------------------------------

var vtkRenderWindow = {
  newInstance: newInstance,
  extend: extend,
  pushMonitorGLContextCount: pushMonitorGLContextCount,
  popMonitorGLContextCount: popMonitorGLContextCount
};



/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../dash-vtk/node_modules/webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/Renderer.js":
/*!********************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Rendering/OpenGL/Renderer.js ***!
  \********************************************************************/
/*! exports provided: default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkRenderer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _SceneGraph_ViewNode_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../SceneGraph/ViewNode.js */ "../node_modules/@kitware/vtk.js/Rendering/SceneGraph/ViewNode.js");
/* harmony import */ var _ViewNodeFactory_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ViewNodeFactory.js */ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/ViewNodeFactory.js");




var vtkDebugMacro = _macros_js__WEBPACK_IMPORTED_MODULE_0__["vtkDebugMacro"]; // ----------------------------------------------------------------------------
// vtkOpenGLRenderer methods
// ----------------------------------------------------------------------------

/* eslint-disable no-bitwise */

function vtkOpenGLRenderer(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkOpenGLRenderer'); // Builds myself.

  publicAPI.buildPass = function (prepass) {
    if (prepass) {
      if (!model.renderable) {
        return;
      }

      publicAPI.updateLights();
      publicAPI.prepareNodes();
      publicAPI.addMissingNode(model.renderable.getActiveCamera());
      publicAPI.addMissingNodes(model.renderable.getViewPropsWithNestedProps());
      publicAPI.removeUnusedNodes();
    }
  };

  publicAPI.updateLights = function () {
    var count = 0;
    var lights = model.renderable.getLightsByReference();

    for (var index = 0; index < lights.length; ++index) {
      if (lights[index].getSwitch() > 0.0) {
        count++;
      }
    }

    if (!count) {
      vtkDebugMacro('No lights are on, creating one.');
      model.renderable.createLight();
    }

    return count;
  };

  publicAPI.opaqueZBufferPass = function (prepass) {
    if (prepass) {
      var clearMask = 0;
      var gl = model.context;

      if (!model.renderable.getTransparent()) {
        model.context.clearColor(1.0, 0.0, 0.0, 1.0);
        clearMask |= gl.COLOR_BUFFER_BIT;
      }

      if (!model.renderable.getPreserveDepthBuffer()) {
        gl.clearDepth(1.0);
        clearMask |= gl.DEPTH_BUFFER_BIT;
        model.context.depthMask(true);
      }

      var ts = publicAPI.getTiledSizeAndOrigin();
      gl.enable(gl.SCISSOR_TEST);
      gl.scissor(ts.lowerLeftU, ts.lowerLeftV, ts.usize, ts.vsize);
      gl.viewport(ts.lowerLeftU, ts.lowerLeftV, ts.usize, ts.vsize);
      gl.colorMask(true, true, true, true);
      gl.clear(clearMask);
      gl.enable(gl.DEPTH_TEST);
    }
  }; // Renders myself


  publicAPI.cameraPass = function (prepass) {
    if (prepass) {
      publicAPI.clear();
    }
  };

  publicAPI.getAspectRatio = function () {
    var size = model.parent.getSizeByReference();
    var viewport = model.renderable.getViewportByReference();
    return size[0] * (viewport[2] - viewport[0]) / ((viewport[3] - viewport[1]) * size[1]);
  };

  publicAPI.getTiledSizeAndOrigin = function () {
    var vport = model.renderable.getViewportByReference(); // if there is no window assume 0 1

    var tileViewPort = [0.0, 0.0, 1.0, 1.0]; // find the lower left corner of the viewport, taking into account the
    // lower left boundary of this tile

    var vpu = vport[0] - tileViewPort[0];
    var vpv = vport[1] - tileViewPort[1]; // store the result as a pixel value

    var ndvp = model.parent.normalizedDisplayToDisplay(vpu, vpv);
    var lowerLeftU = Math.round(ndvp[0]);
    var lowerLeftV = Math.round(ndvp[1]); // find the upper right corner of the viewport, taking into account the
    // lower left boundary of this tile

    var vpu2 = vport[2] - tileViewPort[0];
    var vpv2 = vport[3] - tileViewPort[1];
    var ndvp2 = model.parent.normalizedDisplayToDisplay(vpu2, vpv2); // now compute the size of the intersection of the viewport with the
    // current tile

    var usize = Math.round(ndvp2[0]) - lowerLeftU;
    var vsize = Math.round(ndvp2[1]) - lowerLeftV;

    if (usize < 0) {
      usize = 0;
    }

    if (vsize < 0) {
      vsize = 0;
    }

    return {
      usize: usize,
      vsize: vsize,
      lowerLeftU: lowerLeftU,
      lowerLeftV: lowerLeftV
    };
  };

  publicAPI.clear = function () {
    var clearMask = 0;
    var gl = model.context;

    if (!model.renderable.getTransparent()) {
      var background = model.renderable.getBackgroundByReference(); // renderable ensures that background has 4 entries.

      model.context.clearColor(background[0], background[1], background[2], background[3]);
      clearMask |= gl.COLOR_BUFFER_BIT;
    }

    if (!model.renderable.getPreserveDepthBuffer()) {
      gl.clearDepth(1.0);
      clearMask |= gl.DEPTH_BUFFER_BIT;
      model.context.depthMask(true);
    }

    gl.colorMask(true, true, true, true);
    var ts = publicAPI.getTiledSizeAndOrigin();
    gl.enable(gl.SCISSOR_TEST);
    gl.scissor(ts.lowerLeftU, ts.lowerLeftV, ts.usize, ts.vsize);
    gl.viewport(ts.lowerLeftU, ts.lowerLeftV, ts.usize, ts.vsize);
    gl.clear(clearMask);
    gl.enable(gl.DEPTH_TEST);
    /* eslint-enable no-bitwise */
  };

  publicAPI.releaseGraphicsResources = function () {
    if (model.selector !== null) {
      model.selector.releaseGraphicsResources();
    }
  };

  publicAPI.setOpenGLRenderWindow = function (rw) {
    if (model.openGLRenderWindow === rw) {
      return;
    }

    publicAPI.releaseGraphicsResources();
    model.openGLRenderWindow = rw;
    model.context = null;

    if (rw) {
      model.context = model.openGLRenderWindow.getContext();
    }
  };
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {
  context: null,
  openGLRenderWindow: null,
  selector: null
}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance

  _SceneGraph_ViewNode_js__WEBPACK_IMPORTED_MODULE_1__["default"].extend(publicAPI, model, initialValues); // Build VTK API

  Object(_macros_js__WEBPACK_IMPORTED_MODULE_0__["get"])(publicAPI, model, ['shaderCache']);
  Object(_macros_js__WEBPACK_IMPORTED_MODULE_0__["setGet"])(publicAPI, model, ['selector']); // Object methods

  vtkOpenGLRenderer(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = Object(_macros_js__WEBPACK_IMPORTED_MODULE_0__["newInstance"])(extend, 'vtkOpenGLRenderer'); // ----------------------------------------------------------------------------

var vtkRenderer = {
  newInstance: newInstance,
  extend: extend
}; // Register ourself to OpenGL backend if imported

Object(_ViewNodeFactory_js__WEBPACK_IMPORTED_MODULE_2__["registerOverride"])('vtkRenderer', newInstance);




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/ReplacementShaderMapper.js":
/*!***********************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Rendering/OpenGL/ReplacementShaderMapper.js ***!
  \***********************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkReplacementShaderMapper; });
/* harmony import */ var _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ShaderProgram.js */ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/ShaderProgram.js");


function implementReplaceShaderCoincidentOffset(publicAPI, model) {

  publicAPI.replaceShaderCoincidentOffset = function (shaders, ren, actor) {
    var cp = publicAPI.getCoincidentParameters(ren, actor); // if we need an offset handle it here
    // The value of .000016 is suitable for depth buffers
    // of at least 16 bit depth. We do not query the depth
    // right now because we would need some mechanism to
    // cache the result taking into account FBO changes etc.

    if (cp && (cp.factor !== 0.0 || cp.offset !== 0.0)) {
      var FSSource = shaders.Fragment;
      FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_0__["default"].substitute(FSSource, '//VTK::Coincident::Dec', ['uniform float cfactor;', 'uniform float coffset;']).result;

      if (model.context.getExtension('EXT_frag_depth')) {
        if (cp.factor !== 0.0) {
          FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_0__["default"].substitute(FSSource, '//VTK::UniformFlow::Impl', ['float cscale = length(vec2(dFdx(gl_FragCoord.z),dFdy(gl_FragCoord.z)));', '//VTK::UniformFlow::Impl'], false).result;
          FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_0__["default"].substitute(FSSource, '//VTK::Depth::Impl', 'gl_FragDepthEXT = gl_FragCoord.z + cfactor*cscale + 0.000016*coffset;').result;
        } else {
          FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_0__["default"].substitute(FSSource, '//VTK::Depth::Impl', 'gl_FragDepthEXT = gl_FragCoord.z + 0.000016*coffset;').result;
        }
      }

      if (model.openGLRenderWindow.getWebgl2()) {
        if (cp.factor !== 0.0) {
          FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_0__["default"].substitute(FSSource, '//VTK::UniformFlow::Impl', ['float cscale = length(vec2(dFdx(gl_FragCoord.z),dFdy(gl_FragCoord.z)));', '//VTK::UniformFlow::Impl'], false).result;
          FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_0__["default"].substitute(FSSource, '//VTK::Depth::Impl', 'gl_FragDepth = gl_FragCoord.z + cfactor*cscale + 0.000016*coffset;').result;
        } else {
          FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_0__["default"].substitute(FSSource, '//VTK::Depth::Impl', 'gl_FragDepth = gl_FragCoord.z + 0.000016*coffset;').result;
        }
      }

      shaders.Fragment = FSSource;
    }
  };
}

var vtkReplacementShaderMapper = {
  implementReplaceShaderCoincidentOffset: implementReplaceShaderCoincidentOffset
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/ScalarBarActor.js":
/*!**************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Rendering/OpenGL/ScalarBarActor.js ***!
  \**************************************************************************/
/*! exports provided: default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return index; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _Core_ScalarBarActor_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Core/ScalarBarActor.js */ "../node_modules/@kitware/vtk.js/Rendering/Core/ScalarBarActor.js");
/* harmony import */ var _SceneGraph_ViewNode_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../SceneGraph/ViewNode.js */ "../node_modules/@kitware/vtk.js/Rendering/SceneGraph/ViewNode.js");
/* harmony import */ var _ViewNodeFactory_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ViewNodeFactory.js */ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/ViewNodeFactory.js");





// vtkOpenGLScalarBarActor methods
// ----------------------------------------------------------------------------

function vtkOpenGLScalarBarActor(publicAPI, model) {
  model.classHierarchy.push('vtkOpenGLScalarBarActor'); // Builds myself.

  publicAPI.buildPass = function (prepass) {
    if (prepass) {
      model.openGLRenderer = publicAPI.getFirstAncestorOfType('vtkOpenGLRenderer');
      model.openGLRenderWindow = model.openGLRenderer.getParent();

      if (!model.scalarBarActorHelper.getRenderable()) {
        model.scalarBarActorHelper.setRenderable(model.renderable);
      }

      publicAPI.prepareNodes();
      publicAPI.addMissingNode(model.scalarBarActorHelper.getBarActor());
      publicAPI.addMissingNode(model.scalarBarActorHelper.getTmActor());
      publicAPI.removeUnusedNodes();
    }
  };

  publicAPI.opaquePass = function (prepass, renderPass) {
    if (prepass) {
      var camera = model.openGLRenderer ? model.openGLRenderer.getRenderable().getActiveCamera() : null;
      var tsize = model.openGLRenderer.getTiledSizeAndOrigin();
      model.scalarBarActorHelper.updateAPISpecificData([tsize.usize, tsize.vsize], camera, model.openGLRenderWindow.getRenderable());
    }
  };
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance

  _SceneGraph_ViewNode_js__WEBPACK_IMPORTED_MODULE_2__["default"].extend(publicAPI, model, initialValues);
  model.scalarBarActorHelper = _Core_ScalarBarActor_js__WEBPACK_IMPORTED_MODULE_1__["default"].newScalarBarActorHelper(); // Object methods

  vtkOpenGLScalarBarActor(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = Object(_macros_js__WEBPACK_IMPORTED_MODULE_0__["newInstance"])(extend, 'vtkOpenGLScalarBarActor'); // ----------------------------------------------------------------------------

var index = {
  newInstance: newInstance,
  extend: extend
}; // Register ourself to OpenGL backend if imported

Object(_ViewNodeFactory_js__WEBPACK_IMPORTED_MODULE_3__["registerOverride"])('vtkScalarBarActor', newInstance);




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/Shader.js":
/*!******************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Rendering/OpenGL/Shader.js ***!
  \******************************************************************/
/*! exports provided: default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkShader$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");


var vtkErrorMacro = _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].vtkErrorMacro; // export const SHADER_TYPES = ['Vertex', 'Fragment', 'Geometry', 'Unknown'];
// ----------------------------------------------------------------------------
// vtkShader methods
// ----------------------------------------------------------------------------

function vtkShader(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkShader');

  publicAPI.compile = function () {
    var stype = model.context.VERTEX_SHADER;

    if (!model.source || !model.source.length || model.shaderType === 'Unknown') {
      return false;
    } // Ensure we delete the previous shader if necessary.


    if (model.handle !== 0) {
      model.context.deleteShader(model.handle);
      model.handle = 0;
    }

    switch (model.shaderType) {
      // case vtkShader::Geometry:
      //   type = GL_GEOMETRY_SHADER;
      //   break;
      case 'Fragment':
        stype = model.context.FRAGMENT_SHADER;
        break;

      case 'Vertex':
      default:
        stype = model.context.VERTEX_SHADER;
        break;
    }

    model.handle = model.context.createShader(stype);
    model.context.shaderSource(model.handle, model.source);
    model.context.compileShader(model.handle);
    var isCompiled = model.context.getShaderParameter(model.handle, model.context.COMPILE_STATUS);

    if (!isCompiled) {
      var lastError = model.context.getShaderInfoLog(model.handle);
      vtkErrorMacro("Error compiling shader '".concat(model.source, "': ").concat(lastError));
      model.context.deleteShader(model.handle);
      model.handle = 0;
      return false;
    } // The shader compiled, store its handle and return success.


    return true;
  };

  publicAPI.cleanup = function () {
    if (model.shaderType === 'Unknown' || model.handle === 0) {
      return;
    }

    model.context.deleteShader(model.handle);
    model.handle = 0;
    model.dirty = true;
  };
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {
  shaderType: 'Unknown',
  source: '',
  error: '',
  handle: 0,
  dirty: false,
  context: null
}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API

  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].obj(publicAPI, model);
  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].setGet(publicAPI, model, ['shaderType', 'source', 'error', 'handle', 'context']); // Object methods

  vtkShader(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].newInstance(extend, 'vtkShader'); // ----------------------------------------------------------------------------

var vtkShader$1 = {
  newInstance: newInstance,
  extend: extend
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/ShaderCache.js":
/*!***********************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Rendering/OpenGL/ShaderCache.js ***!
  \***********************************************************************/
/*! exports provided: default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkShaderCache$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var spark_md5__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! spark-md5 */ "../node_modules/spark-md5/spark-md5.js");
/* harmony import */ var spark_md5__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(spark_md5__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ShaderProgram.js */ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/ShaderProgram.js");




var SET_GET_FIELDS = ['lastShaderBound', 'context', 'openGLRenderWindow']; // ----------------------------------------------------------------------------
// vtkShaderCache methods
// ----------------------------------------------------------------------------

function vtkShaderCache(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkShaderCache');

  publicAPI.replaceShaderValues = function (VSSource, FSSource, GSSource) {
    // first handle renaming any Fragment shader inputs
    // if we have a geometry shader. By default fragment shaders
    // assume their inputs come from a Vertex Shader. When we
    // have a Geometry shader we rename the frament shader inputs
    // to come from the geometry shader
    var nFSSource = FSSource;

    if (GSSource.length > 0) {
      nFSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_2__["default"].substitute(nFSSource, 'VSOut', 'GSOut').result;
    }

    var gl2 = model.openGLRenderWindow.getWebgl2();
    var fragDepthString = '\n';
    var version = '#version 100\n';

    if (gl2) {
      version = '#version 300 es\n' + '#define attribute in\n' + '#define textureCube texture\n' + '#define texture2D texture\n' + '#define textureCubeLod textureLod\n' + '#define texture2DLod textureLod\n';
    } else {
      model.context.getExtension('OES_standard_derivatives');

      if (model.context.getExtension('EXT_frag_depth')) {
        fragDepthString = '#extension GL_EXT_frag_depth : enable\n';
      }

      if (model.context.getExtension('EXT_shader_texture_lod')) {
        fragDepthString += '#extension GL_EXT_shader_texture_lod : enable\n' + '#define textureCubeLod textureCubeLodEXT\n' + '#define texture2DLod texture2DLodEXT';
      }
    }

    nFSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_2__["default"].substitute(nFSSource, '//VTK::System::Dec', ["".concat(version, "\n"), gl2 ? '' : '#extension GL_OES_standard_derivatives : enable\n', fragDepthString, '#ifdef GL_FRAGMENT_PRECISION_HIGH', 'precision highp float;', 'precision highp int;', '#else', 'precision mediump float;', 'precision mediump int;', '#endif']).result;
    var nVSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_2__["default"].substitute(VSSource, '//VTK::System::Dec', ["".concat(version, "\n"), '#ifdef GL_FRAGMENT_PRECISION_HIGH', 'precision highp float;', 'precision highp int;', '#else', 'precision mediump float;', 'precision mediump int;', '#endif']).result;

    if (gl2) {
      nVSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_2__["default"].substitute(nVSSource, 'varying', 'out').result;
      nFSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_2__["default"].substitute(nFSSource, 'varying', 'in').result;
      nFSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_2__["default"].substitute(nFSSource, 'gl_FragData\\[0\\]', 'fragOutput0').result;
      nFSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_2__["default"].substitute(nFSSource, '//VTK::Output::Dec', 'layout(location = 0) out vec4 fragOutput0;').result;
    } // nFSSource = ShaderProgram.substitute(nFSSource, 'gl_FragData\\[0\\]',
    //   'gl_FragColor').result;


    var nGSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_2__["default"].substitute(GSSource, '//VTK::System::Dec', version).result;
    return {
      VSSource: nVSSource,
      FSSource: nFSSource,
      GSSource: nGSSource
    };
  }; // return NULL if there is an issue


  publicAPI.readyShaderProgramArray = function (vertexCode, fragmentCode, geometryCode) {
    var data = publicAPI.replaceShaderValues(vertexCode, fragmentCode, geometryCode);
    var shader = publicAPI.getShaderProgram(data.VSSource, data.FSSource, data.GSSource);
    return publicAPI.readyShaderProgram(shader);
  };

  publicAPI.readyShaderProgram = function (shader) {
    if (!shader) {
      return null;
    } // compile if needed


    if (!shader.getCompiled() && !shader.compileShader()) {
      return null;
    } // bind if needed


    if (!publicAPI.bindShader(shader)) {
      return null;
    }

    return shader;
  };

  publicAPI.getShaderProgram = function (vertexCode, fragmentCode, geometryCode) {
    // compute the MD5 and the check the map
    var hashInput = "".concat(vertexCode).concat(fragmentCode).concat(geometryCode);
    var result = spark_md5__WEBPACK_IMPORTED_MODULE_0___default.a.hash(hashInput); // does it already exist?

    var loc = Object.keys(model.shaderPrograms).indexOf(result);

    if (loc === -1) {
      // create one
      var sps = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_2__["default"].newInstance();
      sps.setContext(model.context);
      sps.getVertexShader().setSource(vertexCode);
      sps.getFragmentShader().setSource(fragmentCode);

      if (geometryCode) {
        sps.getGeometryShader().setSource(geometryCode);
      }

      sps.setMd5Hash(result);
      model.shaderPrograms[result] = sps;
      return sps;
    }

    return model.shaderPrograms[result];
  };

  publicAPI.releaseGraphicsResources = function (win) {
    // NOTE:
    // In the current implementation as of October 26th, if a shader
    // program is created by ShaderCache then it should make sure
    // that it releases the graphics resources used by these programs.
    // It is not wisely for callers to do that since then they would
    // have to loop over all the programs were in use and invoke
    // release graphics resources individually.
    publicAPI.releaseCurrentShader();
    Object.keys(model.shaderPrograms).map(function (key) {
      return model.shaderPrograms[key];
    }).forEach(function (sp) {
      return sp.releaseGraphicsResources(win);
    });
  };

  publicAPI.releaseGraphicsResources = function () {
    // release prior shader
    if (model.astShaderBound) {
      model.lastShaderBound.release();
      model.lastShaderBound = null;
    }
  };

  publicAPI.bindShader = function (shader) {
    if (model.lastShaderBound === shader) {
      return 1;
    } // release prior shader


    if (model.lastShaderBound) {
      model.lastShaderBound.release();
    }

    shader.bind();
    model.lastShaderBound = shader;
    return 1;
  };
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {
  lastShaderBound: null,
  shaderPrograms: null,
  context: null,
  openGLRenderWindow: null
}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Internal objects

  model.shaderPrograms = {}; // Build VTK API

  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].obj(publicAPI, model);
  _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].setGet(publicAPI, model, SET_GET_FIELDS); // Object methods

  vtkShaderCache(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = _macros_js__WEBPACK_IMPORTED_MODULE_1__["default"].newInstance(extend, 'vtkShaderCache'); // ----------------------------------------------------------------------------

var vtkShaderCache$1 = {
  newInstance: newInstance,
  extend: extend
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/ShaderProgram.js":
/*!*************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Rendering/OpenGL/ShaderProgram.js ***!
  \*************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkShaderProgram$1; });
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _Shader_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Shader.js */ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/Shader.js");



var vtkErrorMacro = _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].vtkErrorMacro; // perform in place string substitutions, indicate if a substitution was done
// this is useful for building up shader strings which typically involve
// lots of string substitutions. Return true if a substitution was done.

function substitute(source, search, replace) {
  var all = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;
  var replaceStr = Array.isArray(replace) ? replace.join('\n') : replace;
  var replaced = false;

  if (source.search(search) !== -1) {
    replaced = true;
  }

  var gflag = '';

  if (all) {
    gflag = 'g';
  }

  var regex = new RegExp(search, gflag);
  var resultstr = source.replace(regex, replaceStr);
  return {
    replace: replaced,
    result: resultstr
  };
} // ----------------------------------------------------------------------------
// vtkShaderProgram methods
// ----------------------------------------------------------------------------


function vtkShaderProgram(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkShaderProgram');

  publicAPI.compileShader = function () {
    if (!model.vertexShader.compile()) {
      vtkErrorMacro(model.vertexShader.getSource().split('\n').map(function (line, index) {
        return "".concat(index, ": ").concat(line);
      }).join('\n'));
      vtkErrorMacro(model.vertexShader.getError());
      return 0;
    }

    if (!model.fragmentShader.compile()) {
      vtkErrorMacro(model.fragmentShader.getSource().split('\n').map(function (line, index) {
        return "".concat(index, ": ").concat(line);
      }).join('\n'));
      vtkErrorMacro(model.fragmentShader.getError());
      return 0;
    } // skip geometry for now


    if (!publicAPI.attachShader(model.vertexShader)) {
      vtkErrorMacro(model.error);
      return 0;
    }

    if (!publicAPI.attachShader(model.fragmentShader)) {
      vtkErrorMacro(model.error);
      return 0;
    }

    if (!publicAPI.link()) {
      vtkErrorMacro("Links failed: ".concat(model.error));
      return 0;
    }

    publicAPI.setCompiled(true);
    return 1;
  };

  publicAPI.cleanup = function () {
    if (model.shaderType === 'Unknown' || model.handle === 0) {
      return;
    }

    model.context.deleteShader(model.handle);
    model.handle = 0;
  };

  publicAPI.bind = function () {
    if (!model.linked && !publicAPI.link()) {
      return false;
    }

    model.context.useProgram(model.handle);
    publicAPI.setBound(true);
    return true;
  };

  publicAPI.isBound = function () {
    return !!model.bound;
  };

  publicAPI.release = function () {
    model.context.useProgram(null);
    publicAPI.setBound(false);
  };

  publicAPI.setContext = function (ctx) {
    model.vertexShader.setContext(ctx);
    model.fragmentShader.setContext(ctx);
    model.geometryShader.setContext(ctx);
  };

  publicAPI.link = function () {
    if (model.inked) {
      return true;
    }

    if (model.handle === 0) {
      model.error = 'Program has not been initialized, and/or does not have shaders.';
      return false;
    } // clear out the list of uniforms used


    model.uniformLocs = {};
    model.context.linkProgram(model.handle);
    var isCompiled = model.context.getProgramParameter(model.handle, model.context.LINK_STATUS);

    if (!isCompiled) {
      var lastError = model.context.getProgramInfoLog(model.handle);
      vtkErrorMacro("Error linking shader ".concat(lastError));
      model.handle = 0;
      return false;
    }

    publicAPI.setLinked(true);
    model.attributeLocs = {};
    return true;
  };

  publicAPI.setUniformMatrix = function (name, v) {
    var location = publicAPI.findUniform(name);

    if (location === -1) {
      model.error = "Could not set uniform ".concat(name, " . No such uniform.");
      return false;
    }

    var f32 = new Float32Array(v);
    model.context.uniformMatrix4fv(location, false, f32);
    return true;
  };

  publicAPI.setUniformMatrix3x3 = function (name, v) {
    var location = publicAPI.findUniform(name);

    if (location === -1) {
      model.error = "Could not set uniform ".concat(name, " . No such uniform.");
      return false;
    }

    var f32 = new Float32Array(v);
    model.context.uniformMatrix3fv(location, false, f32);
    return true;
  };

  publicAPI.setUniformf = function (name, v) {
    var location = publicAPI.findUniform(name);

    if (location === -1) {
      model.error = "Could not set uniform ".concat(name, " . No such uniform.");
      return false;
    }

    model.context.uniform1f(location, v);
    return true;
  };

  publicAPI.setUniformfv = function (name, v) {
    var location = publicAPI.findUniform(name);

    if (location === -1) {
      model.error = "Could not set uniform ".concat(name, " . No such uniform.");
      return false;
    }

    model.context.uniform1fv(location, v);
    return true;
  };

  publicAPI.setUniformi = function (name, v) {
    var location = publicAPI.findUniform(name);

    if (location === -1) {
      model.error = "Could not set uniform ".concat(name, " . No such uniform.");
      return false;
    }

    model.context.uniform1i(location, v);
    return true;
  };

  publicAPI.setUniformiv = function (name, v) {
    var location = publicAPI.findUniform(name);

    if (location === -1) {
      model.error = "Could not set uniform ".concat(name, " . No such uniform.");
      return false;
    }

    model.context.uniform1iv(location, v);
    return true;
  };

  publicAPI.setUniform2f = function (name, v1, v2) {
    var location = publicAPI.findUniform(name);

    if (location === -1) {
      model.error = "Could not set uniform ".concat(name, " . No such uniform.");
      return false;
    }

    if (v2 === undefined) {
      throw new RangeError('Invalid number of values for array');
    }

    model.context.uniform2f(location, v1, v2);
    return true;
  };

  publicAPI.setUniform2fv = function (name, v) {
    var location = publicAPI.findUniform(name);

    if (location === -1) {
      model.error = "Could not set uniform ".concat(name, " . No such uniform.");
      return false;
    }

    model.context.uniform2fv(location, v);
    return true;
  };

  publicAPI.setUniform2i = function (name, v1, v2) {
    var location = publicAPI.findUniform(name);

    if (location === -1) {
      model.error = "Could not set uniform ".concat(name, " . No such uniform.");
      return false;
    }

    if (v2 === undefined) {
      throw new RangeError('Invalid number of values for array');
    }

    model.context.uniform2i(location, v1, v2);
    return true;
  };

  publicAPI.setUniform2iv = function (name, v) {
    var location = publicAPI.findUniform(name);

    if (location === -1) {
      model.error = "Could not set uniform ".concat(name, " . No such uniform.");
      return false;
    }

    model.context.uniform2iv(location, v);
    return true;
  };

  publicAPI.setUniform3f = function (name, a1, a2, a3) {
    var location = publicAPI.findUniform(name);

    if (location === -1) {
      model.error = "Could not set uniform ".concat(name, " . No such uniform.");
      return false;
    }

    if (a3 === undefined) {
      throw new RangeError('Invalid number of values for array');
    }

    model.context.uniform3f(location, a1, a2, a3);
    return true;
  };

  publicAPI.setUniform3fArray = function (name, a) {
    var location = publicAPI.findUniform(name);

    if (location === -1) {
      model.error = "Could not set uniform ".concat(name, " . No such uniform.");
      return false;
    }

    if (!Array.isArray(a) || a.length !== 3) {
      throw new RangeError('Invalid number of values for array');
    }

    model.context.uniform3f(location, a[0], a[1], a[2]);
    return true;
  };

  publicAPI.setUniform3fv = function (name, v) {
    var location = publicAPI.findUniform(name);

    if (location === -1) {
      model.error = "Could not set uniform ".concat(name, " . No such uniform.");
      return false;
    }

    model.context.uniform3fv(location, v);
    return true;
  };

  publicAPI.setUniform3i = function (name) {
    var location = publicAPI.findUniform(name);

    if (location === -1) {
      model.error = "Could not set uniform ".concat(name, " . No such uniform.");
      return false;
    }

    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    var array = args; // allow an array passed as a single argument

    if (array.length === 1 && Array.isArray(array[0])) {
      array = array[0];
    }

    if (array.length !== 3) {
      throw new RangeError('Invalid number of values for array');
    }

    model.context.uniform3i(location, array[0], array[1], array[2]);
    return true;
  };

  publicAPI.setUniform3iv = function (name, v) {
    var location = publicAPI.findUniform(name);

    if (location === -1) {
      model.error = "Could not set uniform ".concat(name, " . No such uniform.");
      return false;
    }

    model.context.uniform3iv(location, v);
    return true;
  };

  publicAPI.setUniform4f = function (name) {
    var location = publicAPI.findUniform(name);

    if (location === -1) {
      model.error = "Could not set uniform ".concat(name, " . No such uniform.");
      return false;
    }

    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
      args[_key2 - 1] = arguments[_key2];
    }

    var array = args; // allow an array passed as a single argument

    if (array.length === 1 && Array.isArray(array[0])) {
      array = array[0];
    }

    if (array.length !== 4) {
      throw new RangeError('Invalid number of values for array');
    }

    model.context.uniform4f(location, array[0], array[1], array[2], array[3]);
    return true;
  };

  publicAPI.setUniform4fv = function (name, v) {
    var location = publicAPI.findUniform(name);

    if (location === -1) {
      model.error = "Could not set uniform ".concat(name, " . No such uniform.");
      return false;
    }

    model.context.uniform4fv(location, v);
    return true;
  };

  publicAPI.setUniform4i = function (name) {
    var location = publicAPI.findUniform(name);

    if (location === -1) {
      model.error = "Could not set uniform ".concat(name, " . No such uniform.");
      return false;
    }

    for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {
      args[_key3 - 1] = arguments[_key3];
    }

    var array = args; // allow an array passed as a single argument

    if (array.length === 1 && Array.isArray(array[0])) {
      array = array[0];
    }

    if (array.length !== 4) {
      throw new RangeError('Invalid number of values for array');
    }

    model.context.uniform4i(location, array[0], array[1], array[2], array[3]);
    return true;
  };

  publicAPI.setUniform4iv = function (name, v) {
    var location = publicAPI.findUniform(name);

    if (location === -1) {
      model.error = "Could not set uniform ".concat(name, " . No such uniform.");
      return false;
    }

    model.context.uniform4iv(location, v);
    return true;
  };

  publicAPI.findUniform = function (name) {
    if (!name || !model.linked) {
      return -1;
    } // see if we have cached the result


    var loc = model.uniformLocs[name];

    if (loc !== undefined) {
      return loc;
    }

    loc = model.context.getUniformLocation(model.handle, name);

    if (loc === null) {
      model.error = "Uniform ".concat(name, " not found in current shader program.");
      model.uniformLocs[name] = -1;
      return -1;
    }

    model.uniformLocs[name] = loc;
    return loc;
  };

  publicAPI.isUniformUsed = function (name) {
    if (!name) {
      return false;
    } // see if we have cached the result


    var loc = model.uniformLocs[name];

    if (loc !== undefined) {
      return loc !== null;
    }

    if (!model.linked) {
      vtkErrorMacro('attempt to find uniform when the shader program is not linked');
      return false;
    }

    loc = model.context.getUniformLocation(model.handle, name);
    model.uniformLocs[name] = loc;

    if (loc === null) {
      return false;
    }

    return true;
  };

  publicAPI.isAttributeUsed = function (name) {
    if (!name) {
      return false;
    } // see if we have cached the result


    var loc = Object.keys(model.attributeLocs).indexOf(name);

    if (loc !== -1) {
      return true;
    }

    if (!model.linked) {
      vtkErrorMacro('attempt to find uniform when the shader program is not linked');
      return false;
    }

    loc = model.context.getAttribLocation(model.handle, name);

    if (loc === -1) {
      return false;
    }

    model.attributeLocs[name] = loc;
    return true;
  };

  publicAPI.attachShader = function (shader) {
    if (shader.getHandle() === 0) {
      model.error = 'Shader object was not initialized, cannot attach it.';
      return false;
    }

    if (shader.getShaderType() === 'Unknown') {
      model.error = 'Shader object is of type Unknown and cannot be used.';
      return false;
    }

    if (model.handle === 0) {
      var thandle = model.context.createProgram();

      if (thandle === 0) {
        model.error = 'Could not create shader program.';
        return false;
      }

      model.handle = thandle;
      model.linked = false;
    }

    if (shader.getShaderType() === 'Vertex') {
      if (model.vertexShaderHandle !== 0) {
        model.comntext.detachShader(model.handle, model.vertexShaderHandle);
      }

      model.vertexShaderHandle = shader.getHandle();
    }

    if (shader.getShaderType() === 'Fragment') {
      if (model.fragmentShaderHandle !== 0) {
        model.context.detachShader(model.handle, model.fragmentShaderHandle);
      }

      model.fragmentShaderHandle = shader.getHandle();
    }

    model.context.attachShader(model.handle, shader.getHandle());
    publicAPI.setLinked(false);
    return true;
  };

  publicAPI.detachShader = function (shader) {
    if (shader.getHandle() === 0) {
      model.error = 'shader object was not initialized, cannot attach it.';
      return false;
    }

    if (shader.getShaderType() === 'Unknown') {
      model.error = 'Shader object is of type Unknown and cannot be used.';
      return false;
    }

    if (model.handle === 0) {
      model.error = 'This shader program has not been initialized yet.';
    }

    switch (shader.getShaderType()) {
      case 'Vertex':
        if (model.vertexShaderHandle !== shader.getHandle()) {
          model.error = 'The supplied shader was not attached to this program.';
          return false;
        }

        model.context.detachShader(model.handle, shader.getHandle());
        model.vertexShaderHandle = 0;
        model.linked = false;
        return true;

      case 'Fragment':
        if (model.fragmentShaderHandle !== shader.getHandle()) {
          model.error = 'The supplied shader was not attached to this program.';
          return false;
        }

        model.context.detachShader(model.handle, shader.getHandle());
        model.fragmentShaderHandle = 0;
        model.linked = false;
        return true;

      default:
        return false;
    }
  };

  publicAPI.setContext = function (ctx) {
    model.context = ctx;
    model.vertexShader.setContext(ctx);
    model.fragmentShader.setContext(ctx);
    model.geometryShader.setContext(ctx);
  };

  publicAPI.setLastCameraMTime = function (mtime) {
    model.lastCameraMTime = mtime;
  }; // publicAPI.enableAttributeArray = (name) => {
  //   const location = publicAPI.findAttributeArray(name);
  //   if (location === -1) {
  //     model.error = `Could not enable attribute ${name} No such attribute.`;
  //     return false;
  //   }
  //   model.context.enableVertexAttribArray(location);
  //   return true;
  // };
  // publicAPI.disableAttributeArray = (name) => {
  //   const location = publicAPI.findAttributeArray(name);
  //   if (location === -1) {
  //     model.error = `Could not enable attribute ${name} No such attribute.`;
  //     return false;
  //   }
  //   model.context.disableVertexAttribArray(location);
  //   return true;
  // };

} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {
  vertexShaderHandle: 0,
  fragmentShaderHandle: 0,
  geometryShaderHandle: 0,
  vertexShader: null,
  fragmentShader: null,
  geometryShader: null,
  linked: false,
  bound: false,
  compiled: false,
  error: '',
  handle: 0,
  numberOfOutputs: 0,
  attributesLocs: null,
  uniformLocs: null,
  md5Hash: 0,
  context: null,
  lastCameraMTime: null
}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Instantiate internal objects

  model.attributesLocs = {};
  model.uniformLocs = {};
  model.vertexShader = _Shader_js__WEBPACK_IMPORTED_MODULE_1__["default"].newInstance();
  model.vertexShader.setShaderType('Vertex');
  model.fragmentShader = _Shader_js__WEBPACK_IMPORTED_MODULE_1__["default"].newInstance();
  model.fragmentShader.setShaderType('Fragment');
  model.geometryShader = _Shader_js__WEBPACK_IMPORTED_MODULE_1__["default"].newInstance();
  model.geometryShader.setShaderType('Geometry'); // Build VTK API

  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].obj(publicAPI, model);
  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].get(publicAPI, model, ['lastCameraMTime']);
  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].setGet(publicAPI, model, ['error', 'handle', 'compiled', 'bound', 'md5Hash', 'vertexShader', 'fragmentShader', 'geometryShader', 'linked']); // Object methods

  vtkShaderProgram(publicAPI, model);
} // ----------------------------------------------------------------------------


var newInstance = _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].newInstance(extend, 'vtkShaderProgram'); // ----------------------------------------------------------------------------

var vtkShaderProgram$1 = {
  newInstance: newInstance,
  extend: extend,
  substitute: substitute
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/Skybox.js":
/*!******************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Rendering/OpenGL/Skybox.js ***!
  \******************************************************************/
/*! exports provided: default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkSkybox; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! gl-matrix */ "../node_modules/gl-matrix/esm/index.js");
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _Common_Core_DataArray_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../Common/Core/DataArray.js */ "../node_modules/@kitware/vtk.js/Common/Core/DataArray.js");
/* harmony import */ var _Helper_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Helper.js */ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/Helper.js");
/* harmony import */ var _SceneGraph_ViewNode_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../SceneGraph/ViewNode.js */ "../node_modules/@kitware/vtk.js/Rendering/SceneGraph/ViewNode.js");
/* harmony import */ var _Texture_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Texture.js */ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/Texture.js");
/* harmony import */ var _Core_Property_Constants_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../Core/Property/Constants.js */ "../node_modules/@kitware/vtk.js/Rendering/Core/Property/Constants.js");
/* harmony import */ var _ViewNodeFactory_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./ViewNodeFactory.js */ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/ViewNodeFactory.js");









var vtkErrorMacro = _macros_js__WEBPACK_IMPORTED_MODULE_1__["vtkErrorMacro"]; // ----------------------------------------------------------------------------
// vtkOpenGLSkybox methods
// ----------------------------------------------------------------------------

function vtkOpenGLSkybox(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkOpenGLSkybox'); // Builds myself.

  publicAPI.buildPass = function (prepass) {
    if (prepass) {
      model.openGLRenderer = publicAPI.getFirstAncestorOfType('vtkOpenGLRenderer');
      model.openGLRenderWindow = model.openGLRenderer.getParent();
      model.context = model.openGLRenderWindow.getContext();
      model.tris.setOpenGLRenderWindow(model.openGLRenderWindow);
      model.openGLTexture.setOpenGLRenderWindow(model.openGLRenderWindow);
      var ren = model.openGLRenderer.getRenderable();
      model.openGLCamera = model.openGLRenderer.getViewNodeFor(ren.getActiveCamera());
    }
  };

  publicAPI.queryPass = function (prepass, renderPass) {
    if (prepass) {
      if (!model.renderable || !model.renderable.getVisibility()) {
        return;
      }

      renderPass.incrementOpaqueActorCount();
    }
  };

  publicAPI.opaquePass = function (prepass, renderPass) {
    if (prepass && !model.openGLRenderer.getSelector()) {
      publicAPI.updateBufferObjects();
      model.context.depthMask(true);
      model.openGLRenderWindow.getShaderCache().readyShaderProgram(model.tris.getProgram());
      model.openGLTexture.render(model.openGLRenderWindow);
      var texUnit = model.openGLTexture.getTextureUnit();
      model.tris.getProgram().setUniformi('sbtexture', texUnit);
      var ren = model.openGLRenderer.getRenderable();
      var keyMats = model.openGLCamera.getKeyMatrices(ren);
      var imat = new Float64Array(16);
      gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat4"].invert(imat, keyMats.wcpc);
      model.tris.getProgram().setUniformMatrix('IMCPCMatrix', imat);

      if (model.lastFormat === 'box') {
        var camPos = ren.getActiveCamera().getPosition();
        model.tris.getProgram().setUniform3f('camPos', camPos[0], camPos[1], camPos[2]);
      }

      model.tris.getVAO().bind(); // draw polygons

      model.context.drawArrays(model.context.TRIANGLES, 0, model.tris.getCABO().getElementCount());
      model.tris.getVAO().release();
      model.openGLTexture.deactivate();
    }
  };

  publicAPI.updateBufferObjects = function () {
    // build the VBO if needed, only happens once
    if (!model.tris.getCABO().getElementCount()) {
      var ptsArray = new Float32Array(12);

      for (var i = 0; i < 4; i++) {
        ptsArray[i * 3] = i % 2 * 2 - 1.0;
        ptsArray[i * 3 + 1] = i > 1 ? 1.0 : -1.0;
        ptsArray[i * 3 + 2] = 1.0;
      }

      var points = _Common_Core_DataArray_js__WEBPACK_IMPORTED_MODULE_2__["default"].newInstance({
        numberOfComponents: 3,
        values: ptsArray
      });
      points.setName('points');
      var cellArray = new Uint16Array(8);
      cellArray[0] = 3;
      cellArray[1] = 0;
      cellArray[2] = 1;
      cellArray[3] = 3;
      cellArray[4] = 3;
      cellArray[5] = 0;
      cellArray[6] = 3;
      cellArray[7] = 2;
      var cells = _Common_Core_DataArray_js__WEBPACK_IMPORTED_MODULE_2__["default"].newInstance({
        numberOfComponents: 1,
        values: cellArray
      });
      model.tris.getCABO().createVBO(cells, 'polys', _Core_Property_Constants_js__WEBPACK_IMPORTED_MODULE_6__["Representation"].SURFACE, {
        points: points,
        cellOffset: 0
      });
    } // update the program?


    if (model.renderable.getFormat() !== model.lastFormat) {
      model.lastFormat = model.renderable.getFormat();

      if (model.lastFormat === 'box') {
        // we invert Y below because opengl is messed up!
        // Cube Maps have been specified to follow the RenderMan
        // specification (for whatever reason), and RenderMan
        // assumes the images' origin being in the upper left,
        // contrary to the usual OpenGL behaviour of having the
        // image origin in the lower left. That's why things get
        // swapped in the Y direction. It totally breaks with the usual
        // OpenGL semantics and doesn't make sense at all.
        // But now we're stuck with it.  From
        // https://stackoverflow.com/questions/11685608/convention-of-faces-in-opengl-cubemapping
        //
        model.tris.setProgram(model.openGLRenderWindow.getShaderCache().readyShaderProgramArray("//VTK::System::Dec\n             attribute vec3 vertexMC;\n             uniform mat4 IMCPCMatrix;\n             varying vec3 TexCoords;\n             void main () {\n              gl_Position = vec4(vertexMC.xyz, 1.0);\n              vec4 wpos = IMCPCMatrix * gl_Position;\n              TexCoords = wpos.xyz/wpos.w;\n             }", "//VTK::System::Dec\n             //VTK::Output::Dec\n             varying vec3 TexCoords;\n             uniform samplerCube sbtexture;\n             uniform vec3 camPos;\n             void main () {\n               // skybox looks from inside out\n               // which means we have to adjust\n               // our tcoords. Otherwise text would\n               // be flipped\n               vec3 tc = normalize(TexCoords - camPos);\n               if (abs(tc.z) < max(abs(tc.x),abs(tc.y)))\n               {\n                 tc = vec3(1.0, 1.0, -1.0) * tc;\n               }\n               else\n               {\n                 tc = vec3(-1.0, 1.0, 1.0) * tc;\n               }\n               gl_FragData[0] = textureCube(sbtexture, tc);\n             }", ''));
      }

      if (model.lastFormat === 'background') {
        // maps the texture to the window
        model.tris.setProgram(model.openGLRenderWindow.getShaderCache().readyShaderProgramArray("//VTK::System::Dec\n             attribute vec3 vertexMC;\n             uniform mat4 IMCPCMatrix;\n             varying vec2 TexCoords;\n             void main () {\n              gl_Position = vec4(vertexMC.xyz, 1.0);\n              vec4 wpos = IMCPCMatrix * gl_Position;\n              TexCoords = vec2(vertexMC.x, vertexMC.y)*0.5 + 0.5;\n             }", "//VTK::System::Dec\n             //VTK::Output::Dec\n             varying vec2 TexCoords;\n             uniform sampler2D sbtexture;\n             void main () {\n               gl_FragData[0] = texture2D(sbtexture, TexCoords);\n             }", ''));
      }

      model.tris.getShaderSourceTime().modified();
      model.tris.getVAO().bind();

      if (!model.tris.getVAO().addAttributeArray(model.tris.getProgram(), model.tris.getCABO(), 'vertexMC', model.tris.getCABO().getVertexOffset(), model.tris.getCABO().getStride(), model.context.FLOAT, 3, model.context.FALSE)) {
        vtkErrorMacro('Error setting vertexMC in shader VAO.');
      }
    } // set/update the texture map if needed


    var tmaps = model.renderable.getTextures();

    if (!tmaps.length) {
      vtkErrorMacro('vtkSkybox requires a texture map');
    }

    if (model.openGLTexture.getRenderable() !== tmaps[0]) {
      model.openGLTexture.releaseGraphicsResources(model.openGLRenderWindow);
      model.openGLTexture.setRenderable(tmaps[0]);
    }
  };
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {
  context: null
}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance

  _SceneGraph_ViewNode_js__WEBPACK_IMPORTED_MODULE_4__["default"].extend(publicAPI, model, initialValues);
  model.openGLTexture = _Texture_js__WEBPACK_IMPORTED_MODULE_5__["default"].newInstance();
  model.tris = _Helper_js__WEBPACK_IMPORTED_MODULE_3__["default"].newInstance();
  model.keyMatrixTime = {};
  Object(_macros_js__WEBPACK_IMPORTED_MODULE_1__["obj"])(model.keyMatrixTime, {
    mtime: 0
  });
  model.keyMatrices = {
    normalMatrix: gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat3"].identity(new Float64Array(9)),
    mcwc: gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat4"].identity(new Float64Array(16))
  }; // Build VTK API

  Object(_macros_js__WEBPACK_IMPORTED_MODULE_1__["setGet"])(publicAPI, model, ['context']);
  Object(_macros_js__WEBPACK_IMPORTED_MODULE_1__["get"])(publicAPI, model, ['activeTextures']); // Object methods

  vtkOpenGLSkybox(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = Object(_macros_js__WEBPACK_IMPORTED_MODULE_1__["newInstance"])(extend); // ----------------------------------------------------------------------------

var vtkSkybox = {
  newInstance: newInstance,
  extend: extend
}; // Register ourself to OpenGL backend if imported

Object(_ViewNodeFactory_js__WEBPACK_IMPORTED_MODULE_7__["registerOverride"])('vtkSkybox', newInstance);




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/Texture.js":
/*!*******************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Rendering/OpenGL/Texture.js ***!
  \*******************************************************************/
/*! exports provided: default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkOpenGLTexture$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "../node_modules/@babel/runtime/helpers/defineProperty.js");
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _Texture_Constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Texture/Constants.js */ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/Texture/Constants.js");
/* harmony import */ var _Common_Core_HalfFloat_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../Common/Core/HalfFloat.js */ "../node_modules/@kitware/vtk.js/Common/Core/HalfFloat.js");
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _Common_Core_DataArray_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../Common/Core/DataArray.js */ "../node_modules/@kitware/vtk.js/Common/Core/DataArray.js");
/* harmony import */ var _Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../Common/Core/Math/index.js */ "../node_modules/@kitware/vtk.js/Common/Core/Math/index.js");
/* harmony import */ var _SceneGraph_ViewNode_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../SceneGraph/ViewNode.js */ "../node_modules/@kitware/vtk.js/Rendering/SceneGraph/ViewNode.js");
/* harmony import */ var _ViewNodeFactory_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./ViewNodeFactory.js */ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/ViewNodeFactory.js");









function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var Wrap = _Texture_Constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].Wrap,
    Filter = _Texture_Constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].Filter;
var VtkDataTypes = _Common_Core_DataArray_js__WEBPACK_IMPORTED_MODULE_4__["default"].VtkDataTypes;
var vtkDebugMacro = _macros_js__WEBPACK_IMPORTED_MODULE_3__["vtkDebugMacro"],
    vtkErrorMacro = _macros_js__WEBPACK_IMPORTED_MODULE_3__["vtkErrorMacro"],
    vtkWarningMacro = _macros_js__WEBPACK_IMPORTED_MODULE_3__["vtkWarningMacro"]; // ----------------------------------------------------------------------------
// vtkOpenGLTexture methods
// ----------------------------------------------------------------------------

function vtkOpenGLTexture(publicAPI, model) {
  var _this = this;

  // Set our className
  model.classHierarchy.push('vtkOpenGLTexture'); // Renders myself

  publicAPI.render = function () {
    var renWin = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;

    if (renWin) {
      model.openGLRenderWindow = renWin;
    } else {
      model.openGLRenderer = publicAPI.getFirstAncestorOfType('vtkOpenGLRenderer'); // sync renderable properties

      model.openGLRenderWindow = model.openGLRenderer.getParent();
    }

    model.context = model.openGLRenderWindow.getContext();

    if (model.renderable.getInterpolate()) {
      if (model.generateMipmap) {
        publicAPI.setMinificationFilter(Filter.LINEAR_MIPMAP_LINEAR);
      } else {
        publicAPI.setMinificationFilter(Filter.LINEAR);
      }

      publicAPI.setMagnificationFilter(Filter.LINEAR);
    } else {
      publicAPI.setMinificationFilter(Filter.NEAREST);
      publicAPI.setMagnificationFilter(Filter.NEAREST);
    }

    if (model.renderable.getRepeat()) {
      publicAPI.setWrapR(Wrap.REPEAT);
      publicAPI.setWrapS(Wrap.REPEAT);
      publicAPI.setWrapT(Wrap.REPEAT);
    } // clear image if input data is set


    if (model.renderable.getInputData()) {
      model.renderable.setImage(null);
    } // create the texture if it is not done already


    if (!model.handle || model.renderable.getMTime() > model.textureBuildTime.getMTime()) {
      // if we have an Image
      if (model.renderable.getImage() !== null) {
        if (model.renderable.getInterpolate()) {
          model.generateMipmap = true;
          publicAPI.setMinificationFilter(Filter.LINEAR_MIPMAP_LINEAR);
        } // Have an Image which may not be complete


        if (model.renderable.getImage() && model.renderable.getImageLoaded()) {
          publicAPI.create2DFromImage(model.renderable.getImage());
          publicAPI.activate();
          publicAPI.sendParameters();
          model.textureBuildTime.modified();
        }
      } // if we have a canvas


      if (model.renderable.getCanvas() !== null) {
        if (model.renderable.getInterpolate()) {
          model.generateMipmap = true;
          publicAPI.setMinificationFilter(Filter.LINEAR_MIPMAP_LINEAR);
        }

        var canvas = model.renderable.getCanvas();
        publicAPI.create2DFromRaw(canvas.width, canvas.height, 4, VtkDataTypes.UNSIGNED_CHAR, canvas, true);
        publicAPI.activate();
        publicAPI.sendParameters();
        model.textureBuildTime.modified();
      } // if we have jsImageData


      if (model.renderable.getJsImageData() !== null) {
        var jsid = model.renderable.getJsImageData();

        if (model.renderable.getInterpolate()) {
          model.generateMipmap = true;
          publicAPI.setMinificationFilter(Filter.LINEAR_MIPMAP_LINEAR);
        }

        publicAPI.create2DFromRaw(jsid.width, jsid.height, 4, VtkDataTypes.UNSIGNED_CHAR, jsid.data, true);
        publicAPI.activate();
        publicAPI.sendParameters();
        model.textureBuildTime.modified();
      } // if we have InputData


      var input = model.renderable.getInputData(0);

      if (input && input.getPointData().getScalars()) {
        var ext = input.getExtent();
        var inScalars = input.getPointData().getScalars(); // do we have a cube map? Six inputs

        var data = [];

        for (var i = 0; i < model.renderable.getNumberOfInputPorts(); ++i) {
          var indata = model.renderable.getInputData(i);
          var scalars = indata ? indata.getPointData().getScalars().getData() : null;

          if (scalars) {
            data.push(scalars);
          }
        }

        if (model.renderable.getInterpolate() && inScalars.getNumberOfComponents() === 4) {
          model.generateMipmap = true;
          publicAPI.setMinificationFilter(Filter.LINEAR_MIPMAP_LINEAR);
        }

        if (data.length % 6 === 0) {
          publicAPI.createCubeFromRaw(ext[1] - ext[0] + 1, ext[3] - ext[2] + 1, inScalars.getNumberOfComponents(), inScalars.getDataType(), data);
        } else {
          publicAPI.create2DFromRaw(ext[1] - ext[0] + 1, ext[3] - ext[2] + 1, inScalars.getNumberOfComponents(), inScalars.getDataType(), inScalars.getData());
        }

        publicAPI.activate();
        publicAPI.sendParameters();
        model.textureBuildTime.modified();
      }
    }

    if (model.handle) {
      publicAPI.activate();
    }
  }; //----------------------------------------------------------------------------


  publicAPI.destroyTexture = function () {
    // deactivate it first
    publicAPI.deactivate();

    if (model.context && model.handle) {
      model.context.deleteTexture(model.handle);
    }

    model.handle = 0;
    model.numberOfDimensions = 0;
    model.target = 0;
    model.components = 0;
    model.width = 0;
    model.height = 0;
    model.depth = 0;
    publicAPI.resetFormatAndType();
  }; //----------------------------------------------------------------------------


  publicAPI.createTexture = function () {
    // reuse the existing handle if we have one
    if (!model.handle) {
      model.handle = model.context.createTexture();

      if (model.target) {
        model.context.bindTexture(model.target, model.handle); // See: http://www.openmodel.context..org/wiki/Common_Mistakes#Creating_a_complete_texture
        // turn off mip map filter or set the base and max level correctly. here
        // both are done.

        model.context.texParameteri(model.target, model.context.TEXTURE_MIN_FILTER, publicAPI.getOpenGLFilterMode(model.minificationFilter));
        model.context.texParameteri(model.target, model.context.TEXTURE_MAG_FILTER, publicAPI.getOpenGLFilterMode(model.magnificationFilter));
        model.context.texParameteri(model.target, model.context.TEXTURE_WRAP_S, publicAPI.getOpenGLWrapMode(model.wrapS));
        model.context.texParameteri(model.target, model.context.TEXTURE_WRAP_T, publicAPI.getOpenGLWrapMode(model.wrapT));

        if (model.openGLRenderWindow.getWebgl2()) {
          model.context.texParameteri(model.target, model.context.TEXTURE_WRAP_R, publicAPI.getOpenGLWrapMode(model.wrapR));
        }

        model.context.bindTexture(model.target, null);
      }
    }
  }; //---------------------------------------------------------------------------


  publicAPI.getTextureUnit = function () {
    if (model.openGLRenderWindow) {
      return model.openGLRenderWindow.getTextureUnitForTexture(publicAPI);
    }

    return -1;
  }; //---------------------------------------------------------------------------


  publicAPI.activate = function () {
    // activate a free texture unit for this texture
    model.openGLRenderWindow.activateTexture(publicAPI);
    publicAPI.bind();
  }; //---------------------------------------------------------------------------


  publicAPI.deactivate = function () {
    if (model.openGLRenderWindow) {
      model.openGLRenderWindow.deactivateTexture(publicAPI);
    }
  }; //---------------------------------------------------------------------------


  publicAPI.releaseGraphicsResources = function (rwin) {
    if (rwin && model.handle) {
      rwin.activateTexture(publicAPI);
      rwin.deactivateTexture(publicAPI);
      model.context.deleteTexture(model.handle);
      model.handle = 0;
      model.numberOfDimensions = 0;
      model.target = 0;
      model.internalFormat = 0;
      model.format = 0;
      model.openGLDataType = 0;
      model.components = 0;
      model.width = 0;
      model.height = 0;
      model.depth = 0;
    }

    if (model.shaderProgram) {
      model.shaderProgram.releaseGraphicsResources(rwin);
      model.shaderProgram = null;
    }
  }; //----------------------------------------------------------------------------


  publicAPI.bind = function () {
    model.context.bindTexture(model.target, model.handle);

    if (model.autoParameters && publicAPI.getMTime() > model.sendParametersTime.getMTime()) {
      publicAPI.sendParameters();
    }
  }; //----------------------------------------------------------------------------


  publicAPI.isBound = function () {
    var result = false;

    if (model.context && model.handle) {
      var target = 0;

      switch (model.target) {
        case model.context.TEXTURE_2D:
          target = model.context.TEXTURE_BINDING_2D;
          break;

        default:
          vtkWarningMacro('impossible case');
          break;
      }

      var oid = model.context.getIntegerv(target);
      result = oid === model.handle;
    }

    return result;
  }; //----------------------------------------------------------------------------


  publicAPI.sendParameters = function () {
    model.context.texParameteri(model.target, model.context.TEXTURE_WRAP_S, publicAPI.getOpenGLWrapMode(model.wrapS));
    model.context.texParameteri(model.target, model.context.TEXTURE_WRAP_T, publicAPI.getOpenGLWrapMode(model.wrapT));

    if (model.openGLRenderWindow.getWebgl2()) {
      model.context.texParameteri(model.target, model.context.TEXTURE_WRAP_R, publicAPI.getOpenGLWrapMode(model.wrapR));
    }

    model.context.texParameteri(model.target, model.context.TEXTURE_MIN_FILTER, publicAPI.getOpenGLFilterMode(model.minificationFilter));
    model.context.texParameteri(model.target, model.context.TEXTURE_MAG_FILTER, publicAPI.getOpenGLFilterMode(model.magnificationFilter));

    if (model.openGLRenderWindow.getWebgl2()) {
      model.context.texParameteri(model.target, model.context.TEXTURE_BASE_LEVEL, model.baseLevel);
      model.context.texParameteri(model.target, model.context.TEXTURE_MAX_LEVEL, model.maxLevel);
    } // model.context.texParameterf(model.target, model.context.TEXTURE_MIN_LOD, model.minLOD);
    // model.context.texParameterf(model.target, model.context.TEXTURE_MAX_LOD, model.maxLOD);


    model.sendParametersTime.modified();
  }; //----------------------------------------------------------------------------


  publicAPI.getInternalFormat = function (vtktype, numComps) {
    if (!model.internalFormat) {
      model.internalFormat = publicAPI.getDefaultInternalFormat(vtktype, numComps);
    }

    if (!model.internalFormat) {
      vtkDebugMacro("Unable to find suitable internal format for T=".concat(vtktype, " NC= ").concat(numComps));
    }

    return model.internalFormat;
  }; //----------------------------------------------------------------------------


  publicAPI.getDefaultInternalFormat = function (vtktype, numComps) {
    var result = 0; // try default next

    result = model.openGLRenderWindow.getDefaultTextureInternalFormat(vtktype, numComps, false);

    if (result) {
      return result;
    } // try floating point


    result = _this.openGLRenderWindow.getDefaultTextureInternalFormat(vtktype, numComps, true);

    if (!result) {
      vtkDebugMacro('Unsupported internal texture type!');
      vtkDebugMacro("Unable to find suitable internal format for T=".concat(vtktype, " NC= ").concat(numComps));
    }

    return result;
  }; //----------------------------------------------------------------------------


  publicAPI.setInternalFormat = function (iFormat) {
    if (iFormat !== model.internalFormat) {
      model.internalFormat = iFormat;
      publicAPI.modified();
    }
  }; //----------------------------------------------------------------------------


  publicAPI.getFormat = function (vtktype, numComps) {
    model.format = publicAPI.getDefaultFormat(vtktype, numComps);
    return model.format;
  }; //----------------------------------------------------------------------------


  publicAPI.getDefaultFormat = function (vtktype, numComps) {
    if (model.openGLRenderWindow.getWebgl2()) {
      switch (numComps) {
        case 1:
          return model.context.RED;

        case 2:
          return model.context.RG;

        case 3:
          return model.context.RGB;

        case 4:
          return model.context.RGBA;

        default:
          return model.context.RGB;
      }
    } else {
      // webgl1
      switch (numComps) {
        case 1:
          return model.context.LUMINANCE;

        case 2:
          return model.context.LUMINANCE_ALPHA;

        case 3:
          return model.context.RGB;

        case 4:
          return model.context.RGBA;

        default:
          return model.context.RGB;
      }
    }
  }; //----------------------------------------------------------------------------


  publicAPI.resetFormatAndType = function () {
    model.format = 0;
    model.internalFormat = 0;
    model.openGLDataType = 0;
  }; //----------------------------------------------------------------------------


  publicAPI.getDefaultDataType = function (vtkScalarType) {
    var useHalfFloatType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

    // DON'T DEAL with VTK_CHAR as this is platform dependent.
    if (model.openGLRenderWindow.getWebgl2()) {
      switch (vtkScalarType) {
        // case VtkDataTypes.SIGNED_CHAR:
        //   return model.context.BYTE;
        case VtkDataTypes.UNSIGNED_CHAR:
          return model.context.UNSIGNED_BYTE;

        case useHalfFloatType && VtkDataTypes.SHORT:
          return model.context.HALF_FLOAT;

        case useHalfFloatType && VtkDataTypes.UNSIGNED_SHORT:
          return model.context.HALF_FLOAT;
        // case VtkDataTypes.INT:
        //   return model.context.INT;
        // case VtkDataTypes.UNSIGNED_INT:
        //   return model.context.UNSIGNED_INT;

        case VtkDataTypes.FLOAT:
        case VtkDataTypes.VOID: // used for depth component textures.

        default:
          return model.context.FLOAT;
      }
    }

    switch (vtkScalarType) {
      // case VtkDataTypes.SIGNED_CHAR:
      //   return model.context.BYTE;
      case VtkDataTypes.UNSIGNED_CHAR:
        return model.context.UNSIGNED_BYTE;
      // case VtkDataTypes.SHORT:
      //   return model.context.SHORT;
      // case VtkDataTypes.UNSIGNED_SHORT:
      //   return model.context.UNSIGNED_SHORT;
      // case VtkDataTypes.INT:
      //   return model.context.INT;
      // case VtkDataTypes.UNSIGNED_INT:
      //   return model.context.UNSIGNED_INT;

      case VtkDataTypes.FLOAT:
      case VtkDataTypes.VOID: // used for depth component textures.

      default:
        if (model.context.getExtension('OES_texture_float') && model.context.getExtension('OES_texture_float_linear')) {
          return model.context.FLOAT;
        }

        {
          var halfFloat = model.context.getExtension('OES_texture_half_float');

          if (halfFloat && model.context.getExtension('OES_texture_half_float_linear')) {
            return halfFloat.HALF_FLOAT_OES;
          }
        }
        return model.context.UNSIGNED_BYTE;
    }
  }; //----------------------------------------------------------------------------


  publicAPI.getOpenGLDataType = function (vtkScalarType) {
    var useHalfFloatType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
    model.openGLDataType = publicAPI.getDefaultDataType(vtkScalarType, useHalfFloatType);
    return model.openGLDataType;
  };

  publicAPI.getShiftAndScale = function () {
    var shift = 0.0;
    var scale = 1.0; // for all float type internal formats

    switch (model.openGLDataType) {
      case model.context.BYTE:
        scale = 127.5;
        shift = scale - 128.0;
        break;

      case model.context.UNSIGNED_BYTE:
        scale = 255.0;
        shift = 0.0;
        break;

      case model.context.SHORT:
        scale = 32767.5;
        shift = scale - 32768.0;
        break;

      case model.context.UNSIGNED_SHORT:
        scale = 65536.0;
        shift = 0.0;
        break;

      case model.context.INT:
        scale = 2147483647.5;
        shift = scale - 2147483648.0;
        break;

      case model.context.UNSIGNED_INT:
        scale = 4294967295.0;
        shift = 0.0;
        break;

      case model.context.FLOAT:
    }

    return {
      shift: shift,
      scale: scale
    };
  }; //----------------------------------------------------------------------------


  publicAPI.getOpenGLFilterMode = function (emode) {
    switch (emode) {
      case Filter.NEAREST:
        return model.context.NEAREST;

      case Filter.LINEAR:
        return model.context.LINEAR;

      case Filter.NEAREST_MIPMAP_NEAREST:
        return model.context.NEAREST_MIPMAP_NEAREST;

      case Filter.NEAREST_MIPMAP_LINEAR:
        return model.context.NEAREST_MIPMAP_LINEAR;

      case Filter.LINEAR_MIPMAP_NEAREST:
        return model.context.LINEAR_MIPMAP_NEAREST;

      case Filter.LINEAR_MIPMAP_LINEAR:
        return model.context.LINEAR_MIPMAP_LINEAR;

      default:
        return model.context.NEAREST;
    }
  }; //----------------------------------------------------------------------------


  publicAPI.getOpenGLWrapMode = function (vtktype) {
    switch (vtktype) {
      case Wrap.CLAMP_TO_EDGE:
        return model.context.CLAMP_TO_EDGE;

      case Wrap.REPEAT:
        return model.context.REPEAT;

      case Wrap.MIRRORED_REPEAT:
        return model.context.MIRRORED_REPEAT;

      default:
        return model.context.CLAMP_TO_EDGE;
    }
  }; //----------------------------------------------------------------------------


  function updateArrayDataType(dataType, data) {
    var depth = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
    var pixData = [];
    var pixCount = model.width * model.height * model.components;

    if (depth) {
      pixCount *= model.depth;
    } // if the opengl data type is float
    // then the data array must be float


    if (dataType !== VtkDataTypes.FLOAT && model.openGLDataType === model.context.FLOAT) {
      for (var idx = 0; idx < data.length; idx++) {
        var newArray = new Float32Array(pixCount);

        for (var i = 0; i < pixCount; i++) {
          newArray[i] = data[idx][i];
        }

        pixData.push(newArray);
      }
    } // if the opengl data type is ubyte
    // then the data array must be u8, we currently simply truncate the data


    if (dataType !== VtkDataTypes.UNSIGNED_CHAR && model.openGLDataType === model.context.UNSIGNED_BYTE) {
      for (var _idx = 0; _idx < data.length; _idx++) {
        var _newArray = new Uint8Array(pixCount);

        for (var _i = 0; _i < pixCount; _i++) {
          _newArray[_i] = data[_idx][_i];
        }

        pixData.push(_newArray);
      }
    } // if the opengl data type is half float
    // then the data array must be u16


    var halfFloatExt = model.context.getExtension('OES_texture_half_float');
    var halfFloat = model.openGLRenderWindow.getWebgl2() ? model.openGLDataType === model.context.HALF_FLOAT : halfFloatExt && model.openGLDataType === halfFloatExt.HALF_FLOAT_OES;

    if (halfFloat) {
      for (var _idx2 = 0; _idx2 < data.length; _idx2++) {
        var _newArray2 = new Uint16Array(pixCount);

        for (var _i2 = 0; _i2 < pixCount; _i2++) {
          _newArray2[_i2] = _Common_Core_HalfFloat_js__WEBPACK_IMPORTED_MODULE_2__["default"].toHalf(data[_idx2][_i2]);
        }

        pixData.push(_newArray2);
      }
    } // The output has to be filled


    if (pixData.length === 0) {
      for (var _i3 = 0; _i3 < data.length; _i3++) {
        pixData.push(data[_i3]);
      }
    }

    return pixData;
  } //----------------------------------------------------------------------------


  function scaleTextureToHighestPowerOfTwo(data) {
    if (model.openGLRenderWindow.getWebgl2()) {
      // No need if webGL2
      return data;
    }

    var pixData = [];
    var width = model.width;
    var height = model.height;
    var numComps = model.components;

    if (data && (!Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_5__["P"])(width) || !Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_5__["P"])(height))) {
      // Scale up the texture to the next highest power of two dimensions.
      var halfFloat = model.context.getExtension('OES_texture_half_float');
      var newWidth = Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_5__["L"])(width);
      var newHeight = Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_5__["L"])(height);
      var pixCount = newWidth * newHeight * model.components;

      for (var idx = 0; idx < data.length; idx++) {
        if (data[idx] !== null) {
          var newArray = null;
          var jFactor = height / newHeight;
          var iFactor = width / newWidth;
          var usingHalf = false;

          if (model.openGLDataType === model.context.FLOAT) {
            newArray = new Float32Array(pixCount);
          } else if (halfFloat && model.openGLDataType === halfFloat.HALF_FLOAT_OES) {
            newArray = new Uint16Array(pixCount);
            usingHalf = true;
          } else {
            newArray = new Uint8Array(pixCount);
          }

          for (var j = 0; j < newHeight; j++) {
            var joff = j * newWidth * numComps;
            var jidx = j * jFactor;
            var jlow = Math.floor(jidx);
            var jhi = Math.ceil(jidx);

            if (jhi >= height) {
              jhi = height - 1;
            }

            var jmix = jidx - jlow;
            var jmix1 = 1.0 - jmix;
            jlow = jlow * width * numComps;
            jhi = jhi * width * numComps;

            for (var i = 0; i < newWidth; i++) {
              var ioff = i * numComps;
              var iidx = i * iFactor;
              var ilow = Math.floor(iidx);
              var ihi = Math.ceil(iidx);

              if (ihi >= width) {
                ihi = width - 1;
              }

              var imix = iidx - ilow;
              ilow *= numComps;
              ihi *= numComps;

              for (var c = 0; c < numComps; c++) {
                if (usingHalf) {
                  newArray[joff + ioff + c] = _Common_Core_HalfFloat_js__WEBPACK_IMPORTED_MODULE_2__["default"].toHalf(_Common_Core_HalfFloat_js__WEBPACK_IMPORTED_MODULE_2__["default"].fromHalf(data[idx][jlow + ilow + c]) * jmix1 * (1.0 - imix) + _Common_Core_HalfFloat_js__WEBPACK_IMPORTED_MODULE_2__["default"].fromHalf(data[idx][jlow + ihi + c]) * jmix1 * imix + _Common_Core_HalfFloat_js__WEBPACK_IMPORTED_MODULE_2__["default"].fromHalf(data[idx][jhi + ilow + c]) * jmix * (1.0 - imix) + _Common_Core_HalfFloat_js__WEBPACK_IMPORTED_MODULE_2__["default"].fromHalf(data[idx][jhi + ihi + c]) * jmix * imix);
                } else {
                  newArray[joff + ioff + c] = data[idx][jlow + ilow + c] * jmix1 * (1.0 - imix) + data[idx][jlow + ihi + c] * jmix1 * imix + data[idx][jhi + ilow + c] * jmix * (1.0 - imix) + data[idx][jhi + ihi + c] * jmix * imix;
                }
              }
            }
          }

          pixData.push(newArray);
          model.width = newWidth;
          model.height = newHeight;
        } else {
          pixData.push(null);
        }
      }
    } // The output has to be filled


    if (pixData.length === 0) {
      for (var _i4 = 0; _i4 < data.length; _i4++) {
        pixData.push(data[_i4]);
      }
    }

    return pixData;
  } //----------------------------------------------------------------------------


  publicAPI.create2DFromRaw = function (width, height, numComps, dataType, data) {
    var flip = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;
    // Now determine the texture parameters using the arguments.
    publicAPI.getOpenGLDataType(dataType);
    publicAPI.getInternalFormat(dataType, numComps);
    publicAPI.getFormat(dataType, numComps);

    if (!model.internalFormat || !model.format || !model.openGLDataType) {
      vtkErrorMacro('Failed to determine texture parameters.');
      return false;
    }

    model.target = model.context.TEXTURE_2D;
    model.components = numComps;
    model.width = width;
    model.height = height;
    model.depth = 1;
    model.numberOfDimensions = 2;
    model.openGLRenderWindow.activateTexture(publicAPI);
    publicAPI.createTexture();
    publicAPI.bind(); // Create an array of texture with one texture

    var dataArray = [data];
    var pixData = updateArrayDataType(dataType, dataArray);
    var scaledData = scaleTextureToHighestPowerOfTwo(pixData); // Source texture data from the PBO.

    model.context.pixelStorei(model.context.UNPACK_FLIP_Y_WEBGL, flip);
    model.context.pixelStorei(model.context.UNPACK_ALIGNMENT, 1);
    model.context.texImage2D(model.target, 0, model.internalFormat, model.width, model.height, 0, model.format, model.openGLDataType, scaledData[0]);

    if (model.generateMipmap) {
      model.context.generateMipmap(model.target);
    } // always reset the flip


    if (flip) {
      model.context.pixelStorei(model.context.UNPACK_FLIP_Y_WEBGL, false);
    }

    publicAPI.deactivate();
    return true;
  }; //----------------------------------------------------------------------------


  publicAPI.createCubeFromRaw = function (width, height, numComps, dataType, data) {
    // Now determine the texture parameters using the arguments.
    publicAPI.getOpenGLDataType(dataType);
    publicAPI.getInternalFormat(dataType, numComps);
    publicAPI.getFormat(dataType, numComps);

    if (!model.internalFormat || !model.format || !model.openGLDataType) {
      vtkErrorMacro('Failed to determine texture parameters.');
      return false;
    }

    model.target = model.context.TEXTURE_CUBE_MAP;
    model.components = numComps;
    model.width = width;
    model.height = height;
    model.depth = 1;
    model.numberOfDimensions = 2;
    model.openGLRenderWindow.activateTexture(publicAPI);
    model.maxLevel = data.length / 6 - 1;
    publicAPI.createTexture();
    publicAPI.bind();
    var pixData = updateArrayDataType(dataType, data);
    var scaledData = scaleTextureToHighestPowerOfTwo(pixData); // invert the data because opengl is messed up with cube maps
    // and uses the old renderman standard with Y going down
    // even though it is completely at odds with OpenGL standards

    var invertedData = [];
    var widthLevel = model.width;
    var heightLevel = model.height;

    for (var i = 0; i < scaledData.length; i++) {
      if (i % 6 === 0 && i !== 0) {
        widthLevel /= 2;
        heightLevel /= 2;
      }

      invertedData[i] = Object(_macros_js__WEBPACK_IMPORTED_MODULE_3__["newTypedArray"])(dataType, heightLevel * widthLevel * model.components);

      for (var y = 0; y < heightLevel; ++y) {
        var row1 = y * widthLevel * model.components;
        var row2 = (heightLevel - y - 1) * widthLevel * model.components;
        invertedData[i].set(scaledData[i].slice(row2, row2 + widthLevel * model.components), row1);
      }
    } // Source texture data from the PBO.


    model.context.pixelStorei(model.context.UNPACK_ALIGNMENT, 1); // We get the 6 images

    for (var _i5 = 0; _i5 < 6; _i5++) {
      // For each mipmap level
      var j = 0;
      var w = model.width;
      var h = model.height;

      while (w >= 1 && h >= 1) {
        // In webgl 1, all levels need to be defined. So if the latest level size is
        // 8x8, we have to add 3 more null textures (4x4, 2x2, 1x1)
        // In webgl 2, the attribute maxLevel will be use.
        var tempData = null;

        if (j <= model.maxLevel) {
          tempData = invertedData[6 * j + _i5];
        }

        model.context.texImage2D(model.context.TEXTURE_CUBE_MAP_POSITIVE_X + _i5, j, model.internalFormat, w, h, 0, model.format, model.openGLDataType, tempData);
        j++;
        w /= 2;
        h /= 2;
      }
    } // generateMipmap must not be called here because we manually upload all levels
    // if it is called, all levels will be overwritten


    publicAPI.deactivate();
    return true;
  }; //----------------------------------------------------------------------------


  publicAPI.createDepthFromRaw = function (width, height, dataType, data) {
    // Now determine the texture parameters using the arguments.
    publicAPI.getOpenGLDataType(dataType);
    model.format = model.context.DEPTH_COMPONENT;

    if (model.openGLRenderWindow.getWebgl2()) {
      if (dataType === VtkDataTypes.FLOAT) {
        model.internalFormat = model.context.DEPTH_COMPONENT32F;
      } else {
        model.internalFormat = model.context.DEPTH_COMPONENT16;
      }
    } else {
      model.internalFormat = model.context.DEPTH_COMPONENT;
    }

    if (!model.internalFormat || !model.format || !model.openGLDataType) {
      vtkErrorMacro('Failed to determine texture parameters.');
      return false;
    }

    model.target = model.context.TEXTURE_2D;
    model.components = 1;
    model.width = width;
    model.height = height;
    model.depth = 1;
    model.numberOfDimensions = 2;
    model.openGLRenderWindow.activateTexture(publicAPI);
    publicAPI.createTexture();
    publicAPI.bind(); // Source texture data from the PBO.
    // model.context.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);

    model.context.pixelStorei(model.context.UNPACK_ALIGNMENT, 1);
    model.context.texImage2D(model.target, 0, model.internalFormat, model.width, model.height, 0, model.format, model.openGLDataType, data);

    if (model.generateMipmap) {
      model.context.generateMipmap(model.target);
    }

    publicAPI.deactivate();
    return true;
  }; //----------------------------------------------------------------------------


  publicAPI.create2DFromImage = function (image) {
    // Now determine the texture parameters using the arguments.
    publicAPI.getOpenGLDataType(VtkDataTypes.UNSIGNED_CHAR);
    publicAPI.getInternalFormat(VtkDataTypes.UNSIGNED_CHAR, 4);
    publicAPI.getFormat(VtkDataTypes.UNSIGNED_CHAR, 4);

    if (!model.internalFormat || !model.format || !model.openGLDataType) {
      vtkErrorMacro('Failed to determine texture parameters.');
      return false;
    }

    model.target = model.context.TEXTURE_2D;
    model.components = 4;
    model.width = image.width;
    model.height = image.height;
    model.depth = 1;
    model.numberOfDimensions = 2;
    model.openGLRenderWindow.activateTexture(publicAPI);
    publicAPI.createTexture();
    publicAPI.bind(); // Source texture data from the PBO.
    // model.context.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);

    model.context.pixelStorei(model.context.UNPACK_ALIGNMENT, 1); // Scale up the texture to the next highest power of two dimensions (if needed) and flip y.

    var needNearestPowerOfTwo = !Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_5__["P"])(image.width) || !Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_5__["P"])(image.height);
    var canvas = document.createElement('canvas');
    canvas.width = needNearestPowerOfTwo ? Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_5__["L"])(image.width) : image.width;
    canvas.height = needNearestPowerOfTwo ? Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_5__["L"])(image.height) : image.height;
    var ctx = canvas.getContext('2d');
    ctx.translate(0, canvas.height);
    ctx.scale(1, -1);
    ctx.drawImage(image, 0, 0, image.width, image.height, 0, 0, canvas.width, canvas.height);
    var safeImage = canvas;
    model.context.texImage2D(model.target, 0, model.internalFormat, model.format, model.openGLDataType, safeImage);

    if (model.generateMipmap) {
      model.context.generateMipmap(model.target);
    }

    publicAPI.deactivate();
    return true;
  };

  function computeScaleOffsets(numComps, numPixelsIn, data) {
    // compute min and max values per component
    var min = [];
    var max = [];

    for (var c = 0; c < numComps; ++c) {
      min[c] = data[c];
      max[c] = data[c];
    }

    var count = 0;

    for (var i = 0; i < numPixelsIn; ++i) {
      for (var _c = 0; _c < numComps; ++_c) {
        if (data[count] < min[_c]) {
          min[_c] = data[count];
        }

        if (data[count] > max[_c]) {
          max[_c] = data[count];
        }

        count++;
      }
    }

    var offset = [];
    var scale = [];

    for (var _c2 = 0; _c2 < numComps; ++_c2) {
      if (min[_c2] === max[_c2]) {
        max[_c2] = min[_c2] + 1.0;
      }

      offset[_c2] = min[_c2];
      scale[_c2] = max[_c2] - min[_c2];
    }

    return {
      scale: scale,
      offset: offset
    };
  } // HalfFloat only represents numbers between [-2048, 2048] exactly accurate,
  // for numbers outside of this range there is a precision limitation


  function hasExactHalfFloat(offset, scale) {
    // Per Component
    for (var c = 0; c < offset.length; c++) {
      var min = offset[c];
      var max = scale[c] + min;

      if (min < -2048 || min > 2048 || max < -2048 || max > 2048) {
        return false;
      }
    }

    return true;
  }

  function checkUseHalfFloat(dataType, offset, scale, preferSizeOverAccuracy) {
    var useHalfFloatType = true;
    publicAPI.getOpenGLDataType(dataType, useHalfFloatType);
    var halfFloatExt = model.context.getExtension('OES_texture_half_float');
    var useHalfFloat = model.openGLRenderWindow.getWebgl2() ? model.openGLDataType === model.context.HALF_FLOAT : halfFloatExt && model.openGLDataType === halfFloatExt.HALF_FLOAT_OES;

    if (!useHalfFloat) {
      return false;
    } // Don't consider halfFloat and convert back to Float when the range of data does not generate an accurate halfFloat
    // AND it is not preferable to have a smaller texture than an exact texture.


    if (!hasExactHalfFloat(offset, scale) && !preferSizeOverAccuracy) {
      return false;
    }

    return true;
  } //----------------------------------------------------------------------------


  publicAPI.create3DFromRaw = function (width, height, depth, numComps, dataType, data) {
    // Permit OpenGLDataType to be half float, if applicable, for 3D
    var useHalfFloatType = true;
    publicAPI.getOpenGLDataType(dataType, useHalfFloatType); // Now determine the texture parameters using the arguments.

    publicAPI.getInternalFormat(dataType, numComps);
    publicAPI.getFormat(dataType, numComps);

    if (!model.internalFormat || !model.format || !model.openGLDataType) {
      vtkErrorMacro('Failed to determine texture parameters.');
      return false;
    }

    model.target = model.context.TEXTURE_3D;
    model.components = numComps;
    model.width = width;
    model.height = height;
    model.depth = depth;
    model.numberOfDimensions = 3;
    model.openGLRenderWindow.activateTexture(publicAPI);
    publicAPI.createTexture();
    publicAPI.bind(); // Create an array of texture with one texture

    var dataArray = [data];
    var is3DArray = true;
    var pixData = updateArrayDataType(dataType, dataArray, is3DArray);
    var scaledData = scaleTextureToHighestPowerOfTwo(pixData); // Source texture data from the PBO.
    // model.context.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);
    // model.context.pixelStorei(model.context.UNPACK_ALIGNMENT, 1);

    model.context.texImage3D(model.target, 0, model.internalFormat, model.width, model.height, model.depth, 0, model.format, model.openGLDataType, scaledData[0]);

    if (model.generateMipmap) {
      model.context.generateMipmap(model.target);
    }

    publicAPI.deactivate();
    return true;
  }; //----------------------------------------------------------------------------
  // This method simulates a 3D texture using 2D


  publicAPI.create3DFilterableFromRaw = function (width, height, depth, numComps, dataType, data) {
    var preferSizeOverAccuracy = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : false;
    var numPixelsIn = width * height * depth; // initialize offset/scale

    var offset = [];
    var scale = [];

    for (var c = 0; c < numComps; ++c) {
      offset[c] = 0.0;
      scale[c] = 1.0;
    } // store the information, we will need it later
    // offset and scale are the offset and scale required to get
    // the texture value back to data values ala
    // data = texture * scale + offset
    // and texture = (data - offset)/scale


    model.volumeInfo = {
      scale: scale,
      offset: offset,
      width: width,
      height: height,
      depth: depth
    }; // Check if we can accurately use halfFloat or whether it is preferred to have a smaller size texture
    // compute min and max values

    var _computeScaleOffsets = computeScaleOffsets(numComps, numPixelsIn, data),
        computedOffset = _computeScaleOffsets.offset,
        computedScale = _computeScaleOffsets.scale;

    model.volumeInfo.dataComputedScale = computedScale;
    model.volumeInfo.dataComputedOffset = computedOffset;
    var useHalfFloat = checkUseHalfFloat(dataType, computedOffset, computedScale, preferSizeOverAccuracy); // WebGL2 path, we have 3d textures etc

    if (model.openGLRenderWindow.getWebgl2()) {
      if (dataType === VtkDataTypes.FLOAT || useHalfFloat && (dataType === VtkDataTypes.SHORT || dataType === VtkDataTypes.UNSIGNED_SHORT)) {
        return publicAPI.create3DFromRaw(width, height, depth, numComps, dataType, data);
      }

      if (dataType === VtkDataTypes.UNSIGNED_CHAR) {
        for (var _c3 = 0; _c3 < numComps; ++_c3) {
          model.volumeInfo.scale[_c3] = 255.0;
        }

        return publicAPI.create3DFromRaw(width, height, depth, numComps, dataType, data);
      } // otherwise convert to float


      var _newArray3 = new Float32Array(numPixelsIn * numComps); // compute min and max values


      model.volumeInfo.offset = computedOffset;
      model.volumeInfo.scale = computedScale;
      var count = 0;
      var scaleInverse = computedScale.map(function (s) {
        return 1 / s;
      });

      for (var i = 0; i < numPixelsIn; i++) {
        for (var nc = 0; nc < numComps; nc++) {
          _newArray3[count] = (data[count] - computedOffset[nc]) * scaleInverse[nc];
          count++;
        }
      }

      return publicAPI.create3DFromRaw(width, height, depth, numComps, VtkDataTypes.FLOAT, _newArray3);
    } // not webgl2, deal with webgl1, no 3d textures
    // and maybe no float textures
    // compute min and max values


    var res = computeScaleOffsets(numComps, numPixelsIn, data);

    var volCopyData = function volCopyData(outArray, outIdx, inValue, smin, smax) {
      outArray[outIdx] = inValue;
    };

    var dataTypeToUse = VtkDataTypes.UNSIGNED_CHAR; // unsigned char gets used as is

    if (dataType === VtkDataTypes.UNSIGNED_CHAR) {
      for (var _c4 = 0; _c4 < numComps; ++_c4) {
        res.offset[_c4] = 0.0;
        res.scale[_c4] = 255.0;
      }
    } else if (model.context.getExtension('OES_texture_float') && model.context.getExtension('OES_texture_float_linear')) {
      // use float textures scaled to 0.0 to 1.0
      dataTypeToUse = VtkDataTypes.FLOAT;

      volCopyData = function volCopyData(outArray, outIdx, inValue, soffset, sscale) {
        outArray[outIdx] = (inValue - soffset) / sscale;
      };
    } else {
      // worst case, scale data to uchar
      dataTypeToUse = VtkDataTypes.UNSIGNED_CHAR;

      volCopyData = function volCopyData(outArray, outIdx, inValue, soffset, sscale) {
        outArray[outIdx] = 255.0 * (inValue - soffset) / sscale;
      };
    } // Now determine the texture parameters using the arguments.


    publicAPI.getOpenGLDataType(dataTypeToUse);
    publicAPI.getInternalFormat(dataTypeToUse, numComps);
    publicAPI.getFormat(dataTypeToUse, numComps);

    if (!model.internalFormat || !model.format || !model.openGLDataType) {
      vtkErrorMacro('Failed to determine texture parameters.');
      return false;
    } // have to pack this 3D texture into pot 2D texture


    model.target = model.context.TEXTURE_2D;
    model.components = numComps;
    model.depth = 1;
    model.numberOfDimensions = 2; // MAX_TEXTURE_SIZE gives the max dimensions that can be supported by the GPU,
    // but it doesn't mean it will fit in memory. If we have to use a float data type
    // or 4 components, there are good chances that the texture size will blow up
    // and could not fit in the GPU memory. Use a smaller texture size in that case,
    // which will force a downsampling of the dataset.
    // That problem does not occur when using webGL2 since we can pack the data in
    // denser textures based on our data type.
    // TODO: try to fit in the biggest supported texture, catch the gl error if it
    // does not fix (OUT_OF_MEMORY), then attempt with smaller texture

    var maxTexDim = model.context.getParameter(model.context.MAX_TEXTURE_SIZE);

    if (maxTexDim > 4096 && (dataTypeToUse === VtkDataTypes.FLOAT || numComps >= 3)) {
      maxTexDim = 4096;
    } // compute estimate for XY subsample


    var xstride = 1;
    var ystride = 1;

    if (numPixelsIn > maxTexDim * maxTexDim) {
      xstride = Math.ceil(Math.sqrt(numPixelsIn / (maxTexDim * maxTexDim)));
      ystride = xstride;
    }

    var targetWidth = Math.sqrt(numPixelsIn) / xstride;
    targetWidth = Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_5__["L"])(targetWidth); // determine X reps

    var xreps = Math.floor(targetWidth * xstride / width);
    var yreps = Math.ceil(depth / xreps);
    var targetHeight = Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_5__["L"])(height * yreps / ystride);
    model.width = targetWidth;
    model.height = targetHeight;
    model.openGLRenderWindow.activateTexture(publicAPI);
    publicAPI.createTexture();
    publicAPI.bind(); // store the information, we will need it later

    model.volumeInfo.xreps = xreps;
    model.volumeInfo.yreps = yreps;
    model.volumeInfo.xstride = xstride;
    model.volumeInfo.ystride = ystride;
    model.volumeInfo.offset = res.offset;
    model.volumeInfo.scale = res.scale; // OK stuff the data into the 2d TEXTURE
    // first allocate the new texture

    var newArray;
    var pixCount = targetWidth * targetHeight * numComps;

    if (dataTypeToUse === VtkDataTypes.FLOAT) {
      newArray = new Float32Array(pixCount);
    } else {
      newArray = new Uint8Array(pixCount);
    } // then stuff the data into it, nothing fancy right now
    // for stride


    var outIdx = 0;
    var tileWidth = Math.floor(width / xstride);
    var tileHeight = Math.floor(height / ystride);

    for (var yRep = 0; yRep < yreps; yRep++) {
      var xrepsThisRow = Math.min(xreps, depth - yRep * xreps);
      var outXContIncr = numComps * (model.width - xrepsThisRow * Math.floor(width / xstride));

      for (var tileY = 0; tileY < tileHeight; tileY++) {
        for (var xRep = 0; xRep < xrepsThisRow; xRep++) {
          var inOffset = numComps * ((yRep * xreps + xRep) * width * height + ystride * tileY * width);

          for (var tileX = 0; tileX < tileWidth; tileX++) {
            // copy value
            for (var _nc = 0; _nc < numComps; _nc++) {
              volCopyData(newArray, outIdx, data[inOffset + xstride * tileX * numComps + _nc], res.offset[_nc], res.scale[_nc]);
              outIdx++;
            }
          }
        }

        outIdx += outXContIncr;
      }
    } // Source texture data from the PBO.
    // model.context.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);


    model.context.pixelStorei(model.context.UNPACK_ALIGNMENT, 1);
    model.context.texImage2D(model.target, 0, model.internalFormat, model.width, model.height, 0, model.format, model.openGLDataType, newArray);
    publicAPI.deactivate();
    return true;
  };

  publicAPI.setOpenGLRenderWindow = function (rw) {
    if (model.openGLRenderWindow === rw) {
      return;
    }

    publicAPI.releaseGraphicsResources();
    model.openGLRenderWindow = rw;
    model.context = null;

    if (rw) {
      model.context = model.openGLRenderWindow.getContext();
    }
  }; //----------------------------------------------------------------------------


  publicAPI.getMaximumTextureSize = function (ctx) {
    if (ctx && ctx.isCurrent()) {
      return ctx.getIntegerv(ctx.MAX_TEXTURE_SIZE);
    }

    return -1;
  };
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {
  openGLRenderWindow: null,
  context: null,
  handle: 0,
  sendParametersTime: null,
  textureBuildTime: null,
  numberOfDimensions: 0,
  target: 0,
  format: 0,
  openGLDataType: 0,
  components: 0,
  width: 0,
  height: 0,
  depth: 0,
  autoParameters: true,
  wrapS: Wrap.CLAMP_TO_EDGE,
  wrapT: Wrap.CLAMP_TO_EDGE,
  wrapR: Wrap.CLAMP_TO_EDGE,
  minificationFilter: Filter.NEAREST,
  magnificationFilter: Filter.NEAREST,
  minLOD: -1000.0,
  maxLOD: 1000.0,
  baseLevel: 0,
  maxLevel: 1000,
  generateMipmap: false
}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance

  _SceneGraph_ViewNode_js__WEBPACK_IMPORTED_MODULE_6__["default"].extend(publicAPI, model, initialValues);
  model.sendParametersTime = {};
  Object(_macros_js__WEBPACK_IMPORTED_MODULE_3__["obj"])(model.sendParametersTime, {
    mtime: 0
  });
  model.textureBuildTime = {};
  Object(_macros_js__WEBPACK_IMPORTED_MODULE_3__["obj"])(model.textureBuildTime, {
    mtime: 0
  }); // Build VTK API

  Object(_macros_js__WEBPACK_IMPORTED_MODULE_3__["set"])(publicAPI, model, ['format', 'openGLDataType']);
  Object(_macros_js__WEBPACK_IMPORTED_MODULE_3__["setGet"])(publicAPI, model, ['keyMatrixTime', 'minificationFilter', 'magnificationFilter', 'wrapS', 'wrapT', 'wrapR', 'generateMipmap']);
  Object(_macros_js__WEBPACK_IMPORTED_MODULE_3__["get"])(publicAPI, model, ['width', 'height', 'volumeInfo', 'components', 'handle', 'target']); // Object methods

  vtkOpenGLTexture(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = Object(_macros_js__WEBPACK_IMPORTED_MODULE_3__["newInstance"])(extend, 'vtkOpenGLTexture'); // ----------------------------------------------------------------------------

var vtkOpenGLTexture$1 = _objectSpread({
  newInstance: newInstance,
  extend: extend
}, _Texture_Constants_js__WEBPACK_IMPORTED_MODULE_1__["default"]); // Register ourself to OpenGL backend if imported

Object(_ViewNodeFactory_js__WEBPACK_IMPORTED_MODULE_7__["registerOverride"])('vtkTexture', newInstance);




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/Texture/Constants.js":
/*!*****************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Rendering/OpenGL/Texture/Constants.js ***!
  \*****************************************************************************/
/*! exports provided: Filter, Wrap, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Filter", function() { return Filter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Wrap", function() { return Wrap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Constants; });
var Wrap = {
  CLAMP_TO_EDGE: 0,
  REPEAT: 1,
  MIRRORED_REPEAT: 2
};
var Filter = {
  NEAREST: 0,
  LINEAR: 1,
  NEAREST_MIPMAP_NEAREST: 2,
  NEAREST_MIPMAP_LINEAR: 3,
  LINEAR_MIPMAP_NEAREST: 4,
  LINEAR_MIPMAP_LINEAR: 5
};
var Constants = {
  Wrap: Wrap,
  Filter: Filter
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/TextureUnitManager.js":
/*!******************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Rendering/OpenGL/TextureUnitManager.js ***!
  \******************************************************************************/
/*! exports provided: default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkTextureUnitManager; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");


var vtkErrorMacro = _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].vtkErrorMacro; // ----------------------------------------------------------------------------
// vtkOpenGLTextureUnitManager methods
// ----------------------------------------------------------------------------

function vtkOpenGLTextureUnitManager(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkOpenGLTextureUnitManager'); // ----------------------------------------------------------------------------
  // Description:
  // Delete the allocation table and check if it is not called before
  // all the texture units have been released.

  publicAPI.deleteTable = function () {
    for (var i = 0; i < model.numberOfTextureUnits; ++i) {
      if (model.textureUnits[i] === true) {
        vtkErrorMacro('some texture units  were not properly released');
      }
    }

    model.textureUnits = [];
    model.numberOfTextureUnits = 0;
  }; // ----------------------------------------------------------------------------


  publicAPI.setContext = function (ctx) {
    if (model.context !== ctx) {
      if (model.context !== 0) {
        publicAPI.deleteTable();
      }

      model.context = ctx;

      if (model.context) {
        model.numberOfTextureUnits = ctx.getParameter(ctx.MAX_TEXTURE_IMAGE_UNITS);

        for (var i = 0; i < model.numberOfTextureUnits; ++i) {
          model.textureUnits[i] = false;
        }
      }

      publicAPI.modified();
    }
  }; // ----------------------------------------------------------------------------
  // Description:
  // Reserve a texture unit. It returns its number.
  // It returns -1 if the allocation failed (because there are no more
  // texture units left).
  // \post valid_result: result==-1 || result>=0 && result<this->GetNumberOfTextureUnits())
  // \post allocated: result==-1 || this->IsAllocated(result)


  publicAPI.allocate = function () {
    for (var i = 0; i < model.numberOfTextureUnits; i++) {
      if (!publicAPI.isAllocated(i)) {
        model.textureUnits[i] = true;
        return i;
      }
    }

    return -1;
  };

  publicAPI.allocateUnit = function (unit) {
    if (publicAPI.isAllocated(unit)) {
      return -1;
    }

    model.textureUnits[unit] = true;
    return unit;
  }; // ----------------------------------------------------------------------------
  // Description:
  // Tell if texture unit `textureUnitId' is already allocated.
  // \pre valid_id_range : textureUnitId>=0 && textureUnitId<this->GetNumberOfTextureUnits()


  publicAPI.isAllocated = function (textureUnitId) {
    return model.textureUnits[textureUnitId];
  }; // ----------------------------------------------------------------------------
  // Description:
  // Release a texture unit.
  // \pre valid_id: textureUnitId>=0 && textureUnitId<this->GetNumberOfTextureUnits()
  // \pre allocated_id: this->IsAllocated(textureUnitId)


  publicAPI.free = function (val) {
    model.textureUnits[val] = false;
  };
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {
  context: null,
  numberOfTextureUnits: 0,
  textureUnits: 0
}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues);
  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].obj(publicAPI, model);
  model.textureUnits = []; // Build VTK API

  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].get(publicAPI, model, ['numberOfTextureUnits']);
  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].setGet(publicAPI, model, ['context']); // Object methods

  vtkOpenGLTextureUnitManager(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].newInstance(extend, 'vtkOpenGLTextureUnitManager'); // ----------------------------------------------------------------------------

var vtkTextureUnitManager = {
  newInstance: newInstance,
  extend: extend
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/VertexArrayObject.js":
/*!*****************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Rendering/OpenGL/VertexArrayObject.js ***!
  \*****************************************************************************/
/*! exports provided: default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkVertexArrayObject; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _BufferObject_Constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./BufferObject/Constants.js */ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/BufferObject/Constants.js");



// vtkOpenGLVertexArrayObject methods
// ----------------------------------------------------------------------------

function vtkOpenGLVertexArrayObject(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkOpenGLVertexArrayObject'); // Public API methods

  publicAPI.exposedMethod = function () {// This is a publicly exposed method of this object
  };

  publicAPI.initialize = function () {
    model.instancingExtension = null;

    if (!model.openGLRenderWindow.getWebgl2()) {
      model.instancingExtension = model.context.getExtension('ANGLE_instanced_arrays');
    }

    if (!model.forceEmulation && model.openGLRenderWindow && model.openGLRenderWindow.getWebgl2()) {
      model.extension = null;
      model.supported = true;
      model.handleVAO = model.context.createVertexArray();
    } else {
      model.extension = model.context.getExtension('OES_vertex_array_object'); // Start setting up VAO

      if (!model.forceEmulation && model.extension) {
        model.supported = true;
        model.handleVAO = model.extension.createVertexArrayOES();
      } else {
        model.supported = false;
      }
    }
  };

  publicAPI.isReady = function () {
    return (// We either probed and allocated a VAO, or are falling back as the current
      // hardware does not support VAOs.
      model.handleVAO !== 0 || model.supported === false
    );
  };

  publicAPI.bind = function () {
    // Either simply bind the VAO, or emulate behavior by binding all attributes.
    if (!publicAPI.isReady()) {
      publicAPI.initialize();
    }

    if (publicAPI.isReady() && model.supported) {
      if (model.extension) {
        model.extension.bindVertexArrayOES(model.handleVAO);
      } else {
        model.context.bindVertexArray(model.handleVAO);
      }
    } else if (publicAPI.isReady()) {
      var gl = model.context;

      for (var ibuff = 0; ibuff < model.buffers.length; ++ibuff) {
        var buff = model.buffers[ibuff];
        model.context.bindBuffer(gl.ARRAY_BUFFER, buff.buffer);

        for (var iatt = 0; iatt < buff.attributes.length; ++iatt) {
          var attrIt = buff.attributes[iatt];
          var matrixCount = attrIt.isMatrix ? attrIt.size : 1;

          for (var i = 0; i < matrixCount; ++i) {
            gl.enableVertexAttribArray(attrIt.index + i);
            gl.vertexAttribPointer(attrIt.index + i, attrIt.size, attrIt.type, attrIt.normalize, attrIt.stride, attrIt.offset + attrIt.stride * i / attrIt.size);

            if (attrIt.divisor > 0) {
              if (model.instancingExtension) {
                model.instancingExtension.vertexAttribDivisorANGLE(attrIt.index + i, 1);
              } else {
                gl.vertexAttribDivisor(attrIt.index + i, 1);
              }
            }
          }
        }
      }
    }
  };

  publicAPI.release = function () {
    // Either simply release the VAO, or emulate behavior by releasing all attributes.
    if (publicAPI.isReady() && model.supported) {
      if (model.extension) {
        model.extension.bindVertexArrayOES(null);
      } else {
        model.context.bindVertexArray(null);
      }
    } else if (publicAPI.isReady()) {
      var gl = model.context;

      for (var ibuff = 0; ibuff < model.buffers.length; ++ibuff) {
        var buff = model.buffers[ibuff];
        model.context.bindBuffer(gl.ARRAY_BUFFER, buff.buffer);

        for (var iatt = 0; iatt < buff.attributes.length; ++iatt) {
          var attrIt = buff.attributes[iatt];
          var matrixCount = attrIt.isMatrix ? attrIt.size : 1;

          for (var i = 0; i < matrixCount; ++i) {
            gl.enableVertexAttribArray(attrIt.index + i);
            gl.vertexAttribPointer(attrIt.index + i, attrIt.size, attrIt.type, attrIt.normalize, attrIt.stride, attrIt.offset + attrIt.stride * i / attrIt.size);

            if (attrIt.divisor > 0) {
              if (model.instancingExtension) {
                model.instancingExtension.vertexAttribDivisorANGLE(attrIt.index + i, 0);
              } else {
                gl.vertexAttribDivisor(attrIt.index + i, 0);
              }
            }

            gl.disableVertexAttribArray(attrIt.index + i);
          }
        }
      }
    }
  };

  publicAPI.shaderProgramChanged = function () {
    publicAPI.release();

    if (model.handleVAO) {
      if (model.extension) {
        model.extension.deleteVertexArrayOES(model.handleVAO);
      } else {
        model.context.deleteVertexArray(model.handleVAO);
      }
    }

    model.handleVAO = 0;
    model.handleProgram = 0;
  };

  publicAPI.releaseGraphicsResources = function () {
    publicAPI.shaderProgramChanged();

    if (model.handleVAO) {
      if (model.extension) {
        model.extension.deleteVertexArrayOES(model.handleVAO);
      } else {
        model.context.deleteVertexArray(model.handleVAO);
      }
    }

    model.handleVAO = 0;
    model.supported = true;
    model.handleProgram = 0;
  };

  publicAPI.addAttributeArray = function (program, buffer, name, offset, stride, elementType, elementTupleSize, normalize) {
    return publicAPI.addAttributeArrayWithDivisor(program, buffer, name, offset, stride, elementType, elementTupleSize, normalize, 0, false);
  };

  publicAPI.addAttributeArrayWithDivisor = function (program, buffer, name, offset, stride, elementType, elementTupleSize, normalize, divisor, isMatrix) {
    if (!program) {
      return false;
    } // Check the program is bound, and the buffer is valid.


    if (!program.isBound() || buffer.getHandle() === 0 || buffer.getType() !== _BufferObject_Constants_js__WEBPACK_IMPORTED_MODULE_1__["ObjectType"].ARRAY_BUFFER) {
      return false;
    } // Perform initialization if necessary, ensure program matches VAOs.


    if (model.handleProgram === 0) {
      model.handleProgram = program.getHandle();
    }

    if (!publicAPI.isReady()) {
      publicAPI.initialize();
    }

    if (!publicAPI.isReady() || model.handleProgram !== program.getHandle()) {
      return false;
    }

    var gl = model.context;
    var attribs = {};
    attribs.name = name;
    attribs.index = gl.getAttribLocation(model.handleProgram, name);
    attribs.offset = offset;
    attribs.stride = stride;
    attribs.type = elementType;
    attribs.size = elementTupleSize;
    attribs.normalize = normalize;
    attribs.isMatrix = isMatrix;
    attribs.divisor = divisor;

    if (attribs.Index === -1) {
      return false;
    } // Always make the call as even the first use wants the attrib pointer setting
    // up when we are emulating.


    buffer.bind();
    gl.enableVertexAttribArray(attribs.index);
    gl.vertexAttribPointer(attribs.index, attribs.size, attribs.type, attribs.normalize, attribs.stride, attribs.offset);

    if (divisor > 0) {
      if (model.instancingExtension) {
        model.instancingExtension.vertexAttribDivisorANGLE(attribs.index, 1);
      } else {
        gl.vertexAttribDivisor(attribs.index, 1);
      }
    }

    attribs.buffer = buffer.getHandle(); // If vertex array objects are not supported then build up our list.

    if (!model.supported) {
      // find the buffer
      var buffFound = false;

      for (var ibuff = 0; ibuff < model.buffers.length; ++ibuff) {
        var buff = model.buffers[ibuff];

        if (buff.buffer === attribs.buffer) {
          buffFound = true;
          var found = false;

          for (var iatt = 0; iatt < buff.attributes.length; ++iatt) {
            var attrIt = buff.attributes[iatt];

            if (attrIt.name === name) {
              found = true;
              buff.attributes[iatt] = attribs;
            }
          }

          if (!found) {
            buff.attributes.push(attribs);
          }
        }
      }

      if (!buffFound) {
        model.buffers.push({
          buffer: attribs.buffer,
          attributes: [attribs]
        });
      }
    }

    return true;
  };

  publicAPI.addAttributeMatrixWithDivisor = function (program, buffer, name, offset, stride, elementType, elementTupleSize, normalize, divisor) {
    // bind the first row of values
    var result = publicAPI.addAttributeArrayWithDivisor(program, buffer, name, offset, stride, elementType, elementTupleSize, normalize, divisor, true);

    if (!result) {
      return result;
    }

    var gl = model.context;
    var index = gl.getAttribLocation(model.handleProgram, name);

    for (var i = 1; i < elementTupleSize; i++) {
      gl.enableVertexAttribArray(index + i);
      gl.vertexAttribPointer(index + i, elementTupleSize, elementType, normalize, stride, offset + stride * i / elementTupleSize);

      if (divisor > 0) {
        if (model.instancingExtension) {
          model.instancingExtension.vertexAttribDivisorANGLE(index + i, 1);
        } else {
          gl.vertexAttribDivisor(index + i, 1);
        }
      }
    }

    return true;
  };

  publicAPI.removeAttributeArray = function (name) {
    if (!publicAPI.isReady() || model.handleProgram === 0) {
      return false;
    } // If we don't have real VAOs find the entry and remove it too.


    if (!model.supported) {
      for (var ibuff = 0; ibuff < model.buffers.length; ++ibuff) {
        var buff = model.buffers[ibuff];

        for (var iatt = 0; iatt < buff.attributes.length; ++iatt) {
          var attrIt = buff.attributes[iatt];

          if (attrIt.name === name) {
            buff.attributes.splice(iatt, 1);

            if (!buff.attributes.length) {
              model.buffers.splice(ibuff, 1);
            }

            return true;
          }
        }
      }
    }

    return true;
  };

  publicAPI.setOpenGLRenderWindow = function (rw) {
    if (model.openGLRenderWindow === rw) {
      return;
    }

    publicAPI.releaseGraphicsResources();
    model.openGLRenderWindow = rw;
    model.context = null;

    if (rw) {
      model.context = model.openGLRenderWindow.getContext();
    }
  };
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {
  forceEmulation: false,
  handleVAO: 0,
  handleProgram: 0,
  supported: true,
  buffers: null,
  context: null,
  openGLRenderWindow: null
}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Internal objects initialization

  model.buffers = []; // Object methods

  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].obj(publicAPI, model); // Create get-only macros

  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].get(publicAPI, model, ['supported']); // Create get-set macros

  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].setGet(publicAPI, model, ['forceEmulation']); // For more macro methods, see "Sources/macros.js"
  // Object specific methods

  vtkOpenGLVertexArrayObject(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].newInstance(extend, 'vtkOpenGLVertexArrayObject'); // ----------------------------------------------------------------------------

var vtkVertexArrayObject = {
  newInstance: newInstance,
  extend: extend
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/ViewNodeFactory.js":
/*!***************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Rendering/OpenGL/ViewNodeFactory.js ***!
  \***************************************************************************/
/*! exports provided: default, extend, newInstance, registerOverride */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkViewNodeFactory; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "registerOverride", function() { return registerOverride; });
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _SceneGraph_ViewNodeFactory_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../SceneGraph/ViewNodeFactory.js */ "../node_modules/@kitware/vtk.js/Rendering/SceneGraph/ViewNodeFactory.js");



var CLASS_MAPPING = Object.create(null);
function registerOverride(className, fn) {
  CLASS_MAPPING[className] = fn;
} // ----------------------------------------------------------------------------
// vtkOpenGLViewNodeFactory methods
// ----------------------------------------------------------------------------

function vtkOpenGLViewNodeFactory(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkOpenGLViewNodeFactory');
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Static class mapping shared across instances

  model.overrides = CLASS_MAPPING; // Inheritance

  _SceneGraph_ViewNodeFactory_js__WEBPACK_IMPORTED_MODULE_1__["default"].extend(publicAPI, model, initialValues); // Object methods

  vtkOpenGLViewNodeFactory(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].newInstance(extend, 'vtkOpenGLViewNodeFactory'); // ----------------------------------------------------------------------------

var vtkViewNodeFactory = {
  newInstance: newInstance,
  extend: extend
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/Volume.js":
/*!******************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Rendering/OpenGL/Volume.js ***!
  \******************************************************************/
/*! exports provided: default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkVolume; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! gl-matrix */ "../node_modules/gl-matrix/esm/index.js");
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _SceneGraph_ViewNode_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../SceneGraph/ViewNode.js */ "../node_modules/@kitware/vtk.js/Rendering/SceneGraph/ViewNode.js");
/* harmony import */ var _ViewNodeFactory_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ViewNodeFactory.js */ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/ViewNodeFactory.js");





// vtkOpenGLVolume methods
// ----------------------------------------------------------------------------

function vtkOpenGLVolume(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkOpenGLVolume'); // Builds myself.

  publicAPI.buildPass = function (prepass) {
    if (!model.renderable || !model.renderable.getVisibility()) {
      return;
    }

    if (prepass) {
      model.openGLRenderWindow = publicAPI.getFirstAncestorOfType('vtkOpenGLRenderWindow');
      model.openGLRenderer = publicAPI.getFirstAncestorOfType('vtkOpenGLRenderer');
      model.context = model.openGLRenderWindow.getContext();
      publicAPI.prepareNodes();
      publicAPI.addMissingNode(model.renderable.getMapper());
      publicAPI.removeUnusedNodes();
    }
  };

  publicAPI.queryPass = function (prepass, renderPass) {
    if (prepass) {
      if (!model.renderable || !model.renderable.getVisibility()) {
        return;
      }

      renderPass.incrementVolumeCount();
    }
  };

  publicAPI.traverseVolumePass = function (renderPass) {
    if (!model.renderable || !model.renderable.getNestedVisibility() || model.openGLRenderer.getSelector() && !model.renderable.getNestedPickable()) {
      return;
    }

    publicAPI.apply(renderPass, true);
    model.children[0].traverse(renderPass);
    publicAPI.apply(renderPass, false);
  }; // Renders myself


  publicAPI.volumePass = function (prepass) {
    if (!model.renderable || !model.renderable.getVisibility()) {
      return;
    }

    model.context.depthMask(!prepass);
  };

  publicAPI.getKeyMatrices = function () {
    // has the actor changed?
    if (model.renderable.getMTime() > model.keyMatrixTime.getMTime()) {
      model.renderable.computeMatrix();
      gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat4"].copy(model.MCWCMatrix, model.renderable.getMatrix());
      gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat4"].transpose(model.MCWCMatrix, model.MCWCMatrix);

      if (model.renderable.getIsIdentity()) {
        gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat3"].identity(model.normalMatrix);
      } else {
        gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat3"].fromMat4(model.normalMatrix, model.MCWCMatrix);
        gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat3"].invert(model.normalMatrix, model.normalMatrix);
      }

      model.keyMatrixTime.modified();
    }

    return {
      mcwc: model.MCWCMatrix,
      normalMatrix: model.normalMatrix
    };
  };
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {// context: null,
  // keyMatrixTime: null,
  // normalMatrix: null,
  // MCWCMatrix: null,
}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance

  _SceneGraph_ViewNode_js__WEBPACK_IMPORTED_MODULE_2__["default"].extend(publicAPI, model, initialValues);
  model.keyMatrixTime = {};
  Object(_macros_js__WEBPACK_IMPORTED_MODULE_1__["obj"])(model.keyMatrixTime, {
    mtime: 0
  }); // always set by getter

  model.normalMatrix = new Float64Array(9);
  model.MCWCMatrix = new Float64Array(16); // Build VTK API

  Object(_macros_js__WEBPACK_IMPORTED_MODULE_1__["setGet"])(publicAPI, model, ['context']); // Object methods

  vtkOpenGLVolume(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = Object(_macros_js__WEBPACK_IMPORTED_MODULE_1__["newInstance"])(extend, 'vtkOpenGLVolume'); // ----------------------------------------------------------------------------

var vtkVolume = {
  newInstance: newInstance,
  extend: extend
}; // Register ourself to OpenGL backend if imported

Object(_ViewNodeFactory_js__WEBPACK_IMPORTED_MODULE_3__["registerOverride"])('vtkVolume', newInstance);




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/VolumeMapper.js":
/*!************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Rendering/OpenGL/VolumeMapper.js ***!
  \************************************************************************/
/*! exports provided: default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkVolumeMapper; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "../node_modules/@babel/runtime/helpers/defineProperty.js");
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! gl-matrix */ "../node_modules/gl-matrix/esm/index.js");
/* harmony import */ var _Common_Core_DataArray_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../Common/Core/DataArray.js */ "../node_modules/@kitware/vtk.js/Common/Core/DataArray.js");
/* harmony import */ var _Common_Core_DataArray_Constants_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../Common/Core/DataArray/Constants.js */ "../node_modules/@kitware/vtk.js/Common/Core/DataArray/Constants.js");
/* harmony import */ var _Helper_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Helper.js */ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/Helper.js");
/* harmony import */ var _Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../Common/Core/Math/index.js */ "../node_modules/@kitware/vtk.js/Common/Core/Math/index.js");
/* harmony import */ var _Framebuffer_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Framebuffer.js */ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/Framebuffer.js");
/* harmony import */ var _Texture_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./Texture.js */ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/Texture.js");
/* harmony import */ var _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./ShaderProgram.js */ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/ShaderProgram.js");
/* harmony import */ var _VertexArrayObject_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./VertexArrayObject.js */ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/VertexArrayObject.js");
/* harmony import */ var _SceneGraph_ViewNode_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../SceneGraph/ViewNode.js */ "../node_modules/@kitware/vtk.js/Rendering/SceneGraph/ViewNode.js");
/* harmony import */ var _Core_Property_Constants_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../Core/Property/Constants.js */ "../node_modules/@kitware/vtk.js/Rendering/Core/Property/Constants.js");
/* harmony import */ var _Texture_Constants_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./Texture/Constants.js */ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/Texture/Constants.js");
/* harmony import */ var _Core_VolumeProperty_Constants_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../Core/VolumeProperty/Constants.js */ "../node_modules/@kitware/vtk.js/Rendering/Core/VolumeProperty/Constants.js");
/* harmony import */ var _Core_VolumeMapper_Constants_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../Core/VolumeMapper/Constants.js */ "../node_modules/@kitware/vtk.js/Rendering/Core/VolumeMapper/Constants.js");
/* harmony import */ var _glsl_vtkVolumeVS_glsl_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./glsl/vtkVolumeVS.glsl.js */ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/glsl/vtkVolumeVS.glsl.js");
/* harmony import */ var _glsl_vtkVolumeFS_glsl_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./glsl/vtkVolumeFS.glsl.js */ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/glsl/vtkVolumeFS.glsl.js");
/* harmony import */ var _ViewNodeFactory_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./ViewNodeFactory.js */ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/ViewNodeFactory.js");




















function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var vtkWarningMacro = _macros_js__WEBPACK_IMPORTED_MODULE_1__["vtkWarningMacro"],
    vtkErrorMacro = _macros_js__WEBPACK_IMPORTED_MODULE_1__["vtkErrorMacro"]; // TODO: Do we want this in some shared utility? Shouldwe just use lodash.isEqual

function arrayEquals(a, b) {
  if (a.length !== b.length) {
    return false;
  }

  for (var i = 0; i < a.length; ++i) {
    if (a[i] !== b[i]) {
      return false;
    }
  }

  return true;
} // ----------------------------------------------------------------------------
// vtkOpenGLVolumeMapper methods
// ----------------------------------------------------------------------------


function vtkOpenGLVolumeMapper(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkOpenGLVolumeMapper');

  publicAPI.buildPass = function () {
    model.zBufferTexture = null;
  }; // ohh someone is doing a zbuffer pass, use that for
  // intermixed volume rendering


  publicAPI.opaqueZBufferPass = function (prepass, renderPass) {
    if (prepass) {
      var zbt = renderPass.getZBufferTexture();

      if (zbt !== model.zBufferTexture) {
        model.zBufferTexture = zbt;
      }
    }
  }; // Renders myself


  publicAPI.volumePass = function (prepass, renderPass) {
    if (prepass) {
      model.openGLRenderWindow = publicAPI.getFirstAncestorOfType('vtkOpenGLRenderWindow');
      model.context = model.openGLRenderWindow.getContext();
      model.tris.setOpenGLRenderWindow(model.openGLRenderWindow);
      model.jitterTexture.setOpenGLRenderWindow(model.openGLRenderWindow);
      model.framebuffer.setOpenGLRenderWindow(model.openGLRenderWindow); // Per Component?

      model.scalarTexture.setOpenGLRenderWindow(model.openGLRenderWindow);
      model.colorTexture.setOpenGLRenderWindow(model.openGLRenderWindow);
      model.opacityTexture.setOpenGLRenderWindow(model.openGLRenderWindow);
      model.openGLVolume = publicAPI.getFirstAncestorOfType('vtkOpenGLVolume');
      var actor = model.openGLVolume.getRenderable();
      model.openGLRenderer = publicAPI.getFirstAncestorOfType('vtkOpenGLRenderer');
      var ren = model.openGLRenderer.getRenderable();
      model.openGLCamera = model.openGLRenderer.getViewNodeFor(ren.getActiveCamera());
      publicAPI.renderPiece(ren, actor);
    }
  };

  publicAPI.buildShaders = function (shaders, ren, actor) {
    publicAPI.getShaderTemplate(shaders, ren, actor);
    publicAPI.replaceShaderValues(shaders, ren, actor);
  };

  publicAPI.getShaderTemplate = function (shaders, ren, actor) {
    shaders.Vertex = _glsl_vtkVolumeVS_glsl_js__WEBPACK_IMPORTED_MODULE_16__["v"];
    shaders.Fragment = _glsl_vtkVolumeFS_glsl_js__WEBPACK_IMPORTED_MODULE_17__["v"];
    shaders.Geometry = '';
  };

  publicAPI.replaceShaderValues = function (shaders, ren, actor) {
    var FSSource = shaders.Fragment; // define some values in the shader

    var iType = actor.getProperty().getInterpolationType();

    if (iType === _Core_VolumeProperty_Constants_js__WEBPACK_IMPORTED_MODULE_14__["InterpolationType"].LINEAR) {
      FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_9__["default"].substitute(FSSource, '//VTK::TrilinearOn', '#define vtkTrilinearOn').result;
    }

    var vtkImageLabelOutline = actor.getProperty().getUseLabelOutline();

    if (vtkImageLabelOutline === true) {
      FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_9__["default"].substitute(FSSource, '//VTK::ImageLabelOutlineOn', '#define vtkImageLabelOutlineOn').result;
    }

    var numComp = model.scalarTexture.getComponents();
    FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_9__["default"].substitute(FSSource, '//VTK::NumComponents', "#define vtkNumComponents ".concat(numComp)).result;
    var iComps = actor.getProperty().getIndependentComponents();

    if (iComps) {
      FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_9__["default"].substitute(FSSource, '//VTK::IndependentComponentsOn', '#define vtkIndependentComponentsOn').result; // Define any proportional components

      var proportionalComponents = [];

      for (var nc = 0; nc < numComp; nc++) {
        if (actor.getProperty().getOpacityMode(nc) === _Core_VolumeProperty_Constants_js__WEBPACK_IMPORTED_MODULE_14__["OpacityMode"].PROPORTIONAL) {
          proportionalComponents.push("#define vtkComponent".concat(nc, "Proportional"));
        }
      }

      if (proportionalComponents.length > 0) {
        FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_9__["default"].substitute(FSSource, '//VTK::vtkProportionalComponents', proportionalComponents.join('\n')).result;
      }
    } // WebGL only supports loops over constants
    // and does not support while loops so we
    // have to hard code how many steps/samples to take
    // We do a break so most systems will gracefully
    // early terminate, but it is always possible
    // a system will execute every step regardless


    var ext = model.currentInput.getExtent();
    var spc = model.currentInput.getSpacing();
    var vsize = new Float64Array(3);
    gl_matrix__WEBPACK_IMPORTED_MODULE_2__["vec3"].set(vsize, (ext[1] - ext[0]) * spc[0], (ext[3] - ext[2]) * spc[1], (ext[5] - ext[4]) * spc[2]);
    var maxSamples = gl_matrix__WEBPACK_IMPORTED_MODULE_2__["vec3"].length(vsize) / model.renderable.getSampleDistance();
    FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_9__["default"].substitute(FSSource, '//VTK::MaximumSamplesValue', "".concat(Math.ceil(maxSamples))).result; // set light complexity

    FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_9__["default"].substitute(FSSource, '//VTK::LightComplexity', "#define vtkLightComplexity ".concat(model.lastLightComplexity)).result; // if using gradient opacity define that

    model.gopacity = actor.getProperty().getUseGradientOpacity(0);

    for (var _nc = 1; iComps && !model.gopacity && _nc < numComp; ++_nc) {
      if (actor.getProperty().getUseGradientOpacity(_nc)) {
        model.gopacity = true;
      }
    }

    if (model.gopacity) {
      FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_9__["default"].substitute(FSSource, '//VTK::GradientOpacityOn', '#define vtkGradientOpacityOn').result;
    } // if we have a ztexture then declare it and use it


    if (model.zBufferTexture !== null) {
      FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_9__["default"].substitute(FSSource, '//VTK::ZBuffer::Dec', ['uniform sampler2D zBufferTexture;', 'uniform float vpWidth;', 'uniform float vpHeight;']).result;
      FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_9__["default"].substitute(FSSource, '//VTK::ZBuffer::Impl', ['vec4 depthVec = texture2D(zBufferTexture, vec2(gl_FragCoord.x / vpWidth, gl_FragCoord.y/vpHeight));', 'float zdepth = (depthVec.r*256.0 + depthVec.g)/257.0;', 'zdepth = zdepth * 2.0 - 1.0;', 'zdepth = -2.0 * camFar * camNear / (zdepth*(camFar-camNear)-(camFar+camNear)) - camNear;', 'zdepth = -zdepth/rayDir.z;', 'dists.y = min(zdepth,dists.y);']).result;
    } // Set the BlendMode approach


    FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_9__["default"].substitute(FSSource, '//VTK::BlendMode', "".concat(model.renderable.getBlendMode())).result;
    shaders.Fragment = FSSource;
    publicAPI.replaceShaderLight(shaders, ren, actor);
    publicAPI.replaceShaderClippingPlane(shaders, ren, actor);
  };

  publicAPI.replaceShaderLight = function (shaders, ren, actor) {
    var FSSource = shaders.Fragment; // check for shadow maps

    var shadowFactor = '';

    switch (model.lastLightComplexity) {
      case 1: // headlight

      case 2: // light kit

      case 3:
        {
          // positional not implemented fallback to directional
          var lightNum = 0;
          ren.getLights().forEach(function (light) {
            var status = light.getSwitch();

            if (status > 0) {
              FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_9__["default"].substitute(FSSource, '//VTK::Light::Dec', [// intensity weighted color
              "uniform vec3 lightColor".concat(lightNum, ";"), "uniform vec3 lightDirectionVC".concat(lightNum, "; // normalized"), "uniform vec3 lightHalfAngleVC".concat(lightNum, "; // normalized"), '//VTK::Light::Dec'], false).result;
              FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_9__["default"].substitute(FSSource, '//VTK::Light::Impl', [//              `  float df = max(0.0, dot(normal.rgb, -lightDirectionVC${lightNum}));`,
              "  float df = abs(dot(normal.rgb, -lightDirectionVC".concat(lightNum, "));"), "  diffuse += ((df".concat(shadowFactor, ") * lightColor").concat(lightNum, ");"), // '  if (df > 0.0)',
              // '    {',
              //              `    float sf = pow( max(0.0, dot(lightHalfAngleWC${lightNum},normal.rgb)), specularPower);`,
              "    float sf = pow( abs(dot(lightHalfAngleVC".concat(lightNum, ",normal.rgb)), vSpecularPower);"), "    specular += ((sf".concat(shadowFactor, ") * lightColor").concat(lightNum, ");"), //              '    }',
              '  //VTK::Light::Impl'], false).result;
              lightNum++;
            }
          });
          break;
        }
    }

    shaders.Fragment = FSSource;
  };

  publicAPI.replaceShaderClippingPlane = function (shaders, ren, actor) {
    var FSSource = shaders.Fragment;

    if (model.renderable.getClippingPlanes().length > 0) {
      var clipPlaneSize = model.renderable.getClippingPlanes().length;
      FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_9__["default"].substitute(FSSource, '//VTK::ClipPlane::Dec', ["uniform vec3 vClipPlaneNormals[6];", "uniform float vClipPlaneDistances[6];", '//VTK::ClipPlane::Dec'], false).result;
      FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_9__["default"].substitute(FSSource, '//VTK::ClipPlane::Impl', ["for(int i = 0; i < ".concat(clipPlaneSize, "; i++) {"), '  float rayDirRatio = dot(rayDir, vClipPlaneNormals[i]);', '  float equationResult = dot(vertexVCVSOutput, vClipPlaneNormals[i]) + vClipPlaneDistances[i];', '  if (rayDirRatio == 0.0)', '  {', '    if (equationResult < 0.0) dists.x = dists.y;', '    continue;', '  }', '  float result = -1.0 * equationResult / rayDirRatio;', '  if (rayDirRatio < 0.0) dists.y = min(dists.y, result);', '  else dists.x = max(dists.x, result);', '}', '//VTK::ClipPlane::Impl'], false).result;
    }

    shaders.Fragment = FSSource;
  };

  publicAPI.getNeedToRebuildShaders = function (cellBO, ren, actor) {
    // do we need lighting?
    var lightComplexity = 0;

    if (actor.getProperty().getShade() && model.renderable.getBlendMode() === _Core_VolumeMapper_Constants_js__WEBPACK_IMPORTED_MODULE_15__["BlendMode"].COMPOSITE_BLEND) {
      // consider the lighting complexity to determine which case applies
      // simple headlight, Light Kit, the whole feature set of VTK
      lightComplexity = 0;
      model.numberOfLights = 0;
      ren.getLights().forEach(function (light) {
        var status = light.getSwitch();

        if (status > 0) {
          model.numberOfLights++;

          if (lightComplexity === 0) {
            lightComplexity = 1;
          }
        }

        if (lightComplexity === 1 && (model.numberOfLights > 1 || light.getIntensity() !== 1.0 || !light.lightTypeIsHeadLight())) {
          lightComplexity = 2;
        }

        if (lightComplexity < 3 && light.getPositional()) {
          lightComplexity = 3;
        }
      });
    }

    var needRebuild = false;

    if (model.lastLightComplexity !== lightComplexity) {
      model.lastLightComplexity = lightComplexity;
      needRebuild = true;
    }

    var numComp = model.scalarTexture.getComponents();
    var iComps = actor.getProperty().getIndependentComponents();
    var usesProportionalComponents = false;
    var proportionalComponents = [];

    if (iComps) {
      // Define any proportional components
      for (var nc = 0; nc < numComp; nc++) {
        proportionalComponents.push(actor.getProperty().getOpacityMode(nc));
      }

      if (proportionalComponents.length > 0) {
        usesProportionalComponents = true;
      }
    }

    var ext = model.currentInput.getExtent();
    var spc = model.currentInput.getSpacing();
    var vsize = new Float64Array(3);
    gl_matrix__WEBPACK_IMPORTED_MODULE_2__["vec3"].set(vsize, (ext[1] - ext[0]) * spc[0], (ext[3] - ext[2]) * spc[1], (ext[5] - ext[4]) * spc[2]);
    var maxSamples = gl_matrix__WEBPACK_IMPORTED_MODULE_2__["vec3"].length(vsize) / model.renderable.getSampleDistance();
    var state = {
      interpolationType: actor.getProperty().getInterpolationType(),
      useLabelOutline: actor.getProperty().getUseLabelOutline(),
      numComp: numComp,
      usesProportionalComponents: usesProportionalComponents,
      iComps: iComps,
      maxSamples: maxSamples,
      useGradientOpacity: actor.getProperty().getUseGradientOpacity(0),
      blendMode: model.renderable.getBlendMode(),
      proportionalComponents: proportionalComponents
    }; // We only need to rebuild the shader if one of these variables has changed,
    // since they are used in the shader template replacement step.

    if (!model.previousState || model.previousState.interpolationType !== state.interpolationType || model.previousState.useLabelOutline !== state.useLabelOutline || model.previousState.numComp !== state.numComp || model.previousState.usesProportionalComponents !== state.usesProportionalComponents || model.previousState.iComps !== state.iComps || model.previousState.maxSamples !== state.maxSamples || model.previousState.useGradientOpacity !== state.useGradientOpacity || model.previousState.blendMode !== state.blendMode || !arrayEquals(model.previousState.proportionalComponents, state.proportionalComponents)) {
      model.previousState = _objectSpread({}, state);
      return true;
    } // has something changed that would require us to recreate the shader?


    if (cellBO.getProgram() === 0 || needRebuild || model.lastHaveSeenDepthRequest !== model.haveSeenDepthRequest || !!model.lastZBufferTexture !== !!model.zBufferTexture || cellBO.getShaderSourceTime().getMTime() < publicAPI.getMTime() || cellBO.getShaderSourceTime().getMTime() < model.renderable.getMTime()) {
      model.lastZBufferTexture = model.zBufferTexture;
      return true;
    }

    return false;
  };

  publicAPI.updateShaders = function (cellBO, ren, actor) {
    model.lastBoundBO = cellBO; // has something changed that would require us to recreate the shader?

    if (publicAPI.getNeedToRebuildShaders(cellBO, ren, actor)) {
      var shaders = {
        Vertex: null,
        Fragment: null,
        Geometry: null
      };
      publicAPI.buildShaders(shaders, ren, actor); // compile and bind the program if needed

      var newShader = model.openGLRenderWindow.getShaderCache().readyShaderProgramArray(shaders.Vertex, shaders.Fragment, shaders.Geometry); // if the shader changed reinitialize the VAO

      if (newShader !== cellBO.getProgram()) {
        cellBO.setProgram(newShader); // reset the VAO as the shader has changed

        cellBO.getVAO().releaseGraphicsResources();
      }

      cellBO.getShaderSourceTime().modified();
    } else {
      model.openGLRenderWindow.getShaderCache().readyShaderProgram(cellBO.getProgram());
    }

    cellBO.getVAO().bind();
    publicAPI.setMapperShaderParameters(cellBO, ren, actor);
    publicAPI.setCameraShaderParameters(cellBO, ren, actor);
    publicAPI.setPropertyShaderParameters(cellBO, ren, actor);
    publicAPI.getClippingPlaneShaderParameters(cellBO, ren, actor);
  };

  publicAPI.setMapperShaderParameters = function (cellBO, ren, actor) {
    // Now to update the VAO too, if necessary.
    var program = cellBO.getProgram();

    if (cellBO.getCABO().getElementCount() && (model.VBOBuildTime.getMTime() > cellBO.getAttributeUpdateTime().getMTime() || cellBO.getShaderSourceTime().getMTime() > cellBO.getAttributeUpdateTime().getMTime())) {
      if (program.isAttributeUsed('vertexDC')) {
        if (!cellBO.getVAO().addAttributeArray(program, cellBO.getCABO(), 'vertexDC', cellBO.getCABO().getVertexOffset(), cellBO.getCABO().getStride(), model.context.FLOAT, 3, model.context.FALSE)) {
          vtkErrorMacro('Error setting vertexDC in shader VAO.');
        }
      }

      cellBO.getAttributeUpdateTime().modified();
    }

    program.setUniformi('texture1', model.scalarTexture.getTextureUnit());
    program.setUniformf('sampleDistance', model.renderable.getSampleDistance());
    var volInfo = model.scalarTexture.getVolumeInfo();
    var ipScalarRange = model.renderable.getIpScalarRange();
    var minVals = [];
    var maxVals = [];

    for (var i = 0; i < 4; i++) {
      // convert iprange from 0-1 into data range values
      minVals[i] = ipScalarRange[0] * volInfo.dataComputedScale[i] + volInfo.dataComputedOffset[i];
      maxVals[i] = ipScalarRange[1] * volInfo.dataComputedScale[i] + volInfo.dataComputedOffset[i]; // convert data ranges into texture values

      minVals[i] = (minVals[i] - volInfo.offset[i]) / volInfo.scale[i];
      maxVals[i] = (maxVals[i] - volInfo.offset[i]) / volInfo.scale[i];
    }

    program.setUniform4f('ipScalarRangeMin', minVals[0], minVals[1], minVals[2], minVals[3]);
    program.setUniform4f('ipScalarRangeMax', maxVals[0], maxVals[1], maxVals[2], maxVals[3]); // if we have a zbuffer texture then set it

    if (model.zBufferTexture !== null) {
      program.setUniformi('zBufferTexture', model.zBufferTexture.getTextureUnit());
      var size = publicAPI.getRenderTargetSize();
      program.setUniformf('vpWidth', size[0]);
      program.setUniformf('vpHeight', size[1]);
    }
  };

  publicAPI.setCameraShaderParameters = function (cellBO, ren, actor) {
    // // [WMVP]C == {world, model, view, projection} coordinates
    // // E.g., WCPC == world to projection coordinate transformation
    var keyMats = model.openGLCamera.getKeyMatrices(ren);
    var actMats = model.openGLVolume.getKeyMatrices();
    gl_matrix__WEBPACK_IMPORTED_MODULE_2__["mat4"].multiply(model.modelToView, keyMats.wcvc, actMats.mcwc);
    var program = cellBO.getProgram();
    var cam = model.openGLCamera.getRenderable();
    var crange = cam.getClippingRange();
    program.setUniformf('camThick', crange[1] - crange[0]);
    program.setUniformf('camNear', crange[0]);
    program.setUniformf('camFar', crange[1]);
    var bounds = model.currentInput.getBounds();
    var dims = model.currentInput.getDimensions(); // compute the viewport bounds of the volume
    // we will only render those fragments.

    var pos = new Float64Array(3);
    var dir = new Float64Array(3);
    var dcxmin = 1.0;
    var dcxmax = -1.0;
    var dcymin = 1.0;
    var dcymax = -1.0;

    for (var i = 0; i < 8; ++i) {
      gl_matrix__WEBPACK_IMPORTED_MODULE_2__["vec3"].set(pos, bounds[i % 2], bounds[2 + Math.floor(i / 2) % 2], bounds[4 + Math.floor(i / 4)]);
      gl_matrix__WEBPACK_IMPORTED_MODULE_2__["vec3"].transformMat4(pos, pos, model.modelToView);

      if (!cam.getParallelProjection()) {
        gl_matrix__WEBPACK_IMPORTED_MODULE_2__["vec3"].normalize(dir, pos); // now find the projection of this point onto a
        // nearZ distance plane. Since the camera is at 0,0,0
        // in VC the ray is just t*pos and
        // t is -nearZ/dir.z
        // intersection becomes pos.x/pos.z

        var t = -crange[0] / pos[2];
        gl_matrix__WEBPACK_IMPORTED_MODULE_2__["vec3"].scale(pos, dir, t);
      } // now convert to DC


      gl_matrix__WEBPACK_IMPORTED_MODULE_2__["vec3"].transformMat4(pos, pos, keyMats.vcpc);
      dcxmin = Math.min(pos[0], dcxmin);
      dcxmax = Math.max(pos[0], dcxmax);
      dcymin = Math.min(pos[1], dcymin);
      dcymax = Math.max(pos[1], dcymax);
    }

    program.setUniformf('dcxmin', dcxmin);
    program.setUniformf('dcxmax', dcxmax);
    program.setUniformf('dcymin', dcymin);
    program.setUniformf('dcymax', dcymax);

    if (program.isUniformUsed('cameraParallel')) {
      program.setUniformi('cameraParallel', cam.getParallelProjection());
    }

    var ext = model.currentInput.getExtent();
    var spc = model.currentInput.getSpacing();
    var vsize = new Float64Array(3);
    gl_matrix__WEBPACK_IMPORTED_MODULE_2__["vec3"].set(vsize, (ext[1] - ext[0] + 1) * spc[0], (ext[3] - ext[2] + 1) * spc[1], (ext[5] - ext[4] + 1) * spc[2]);
    program.setUniform3f('vSpacing', spc[0], spc[1], spc[2]);
    gl_matrix__WEBPACK_IMPORTED_MODULE_2__["vec3"].set(pos, ext[0], ext[2], ext[4]);
    model.currentInput.indexToWorldVec3(pos, pos);
    gl_matrix__WEBPACK_IMPORTED_MODULE_2__["vec3"].transformMat4(pos, pos, model.modelToView);
    program.setUniform3f('vOriginVC', pos[0], pos[1], pos[2]); // apply the image directions

    var i2wmat4 = model.currentInput.getIndexToWorld();
    gl_matrix__WEBPACK_IMPORTED_MODULE_2__["mat4"].multiply(model.idxToView, model.modelToView, i2wmat4);
    gl_matrix__WEBPACK_IMPORTED_MODULE_2__["mat3"].multiply(model.idxNormalMatrix, keyMats.normalMatrix, actMats.normalMatrix);
    gl_matrix__WEBPACK_IMPORTED_MODULE_2__["mat3"].multiply(model.idxNormalMatrix, model.idxNormalMatrix, model.currentInput.getDirection());
    var maxSamples = gl_matrix__WEBPACK_IMPORTED_MODULE_2__["vec3"].length(vsize) / model.renderable.getSampleDistance();

    if (maxSamples > model.renderable.getMaximumSamplesPerRay()) {
      vtkWarningMacro("The number of steps required ".concat(Math.ceil(maxSamples), " is larger than the\n        specified maximum number of steps ").concat(model.renderable.getMaximumSamplesPerRay(), ".\n        Please either change the\n        volumeMapper sampleDistance or its maximum number of samples."));
    }

    var vctoijk = new Float64Array(3);
    gl_matrix__WEBPACK_IMPORTED_MODULE_2__["vec3"].set(vctoijk, 1.0, 1.0, 1.0);
    gl_matrix__WEBPACK_IMPORTED_MODULE_2__["vec3"].divide(vctoijk, vctoijk, vsize);
    program.setUniform3f('vVCToIJK', vctoijk[0], vctoijk[1], vctoijk[2]);
    program.setUniform3i('volumeDimensions', dims[0], dims[1], dims[2]);

    if (!model.openGLRenderWindow.getWebgl2()) {
      var volInfo = model.scalarTexture.getVolumeInfo();
      program.setUniformf('texWidth', model.scalarTexture.getWidth());
      program.setUniformf('texHeight', model.scalarTexture.getHeight());
      program.setUniformi('xreps', volInfo.xreps);
      program.setUniformi('xstride', volInfo.xstride);
      program.setUniformi('ystride', volInfo.ystride);
    } // map normals through normal matrix
    // then use a point on the plane to compute the distance


    var normal = new Float64Array(3);
    var pos2 = new Float64Array(3);

    for (var _i = 0; _i < 6; ++_i) {
      switch (_i) {
        case 1:
          gl_matrix__WEBPACK_IMPORTED_MODULE_2__["vec3"].set(normal, -1.0, 0.0, 0.0);
          gl_matrix__WEBPACK_IMPORTED_MODULE_2__["vec3"].set(pos2, ext[0], ext[2], ext[4]);
          break;

        case 2:
          gl_matrix__WEBPACK_IMPORTED_MODULE_2__["vec3"].set(normal, 0.0, 1.0, 0.0);
          gl_matrix__WEBPACK_IMPORTED_MODULE_2__["vec3"].set(pos2, ext[1], ext[3], ext[5]);
          break;

        case 3:
          gl_matrix__WEBPACK_IMPORTED_MODULE_2__["vec3"].set(normal, 0.0, -1.0, 0.0);
          gl_matrix__WEBPACK_IMPORTED_MODULE_2__["vec3"].set(pos2, ext[0], ext[2], ext[4]);
          break;

        case 4:
          gl_matrix__WEBPACK_IMPORTED_MODULE_2__["vec3"].set(normal, 0.0, 0.0, 1.0);
          gl_matrix__WEBPACK_IMPORTED_MODULE_2__["vec3"].set(pos2, ext[1], ext[3], ext[5]);
          break;

        case 5:
          gl_matrix__WEBPACK_IMPORTED_MODULE_2__["vec3"].set(normal, 0.0, 0.0, -1.0);
          gl_matrix__WEBPACK_IMPORTED_MODULE_2__["vec3"].set(pos2, ext[0], ext[2], ext[4]);
          break;

        case 0:
        default:
          gl_matrix__WEBPACK_IMPORTED_MODULE_2__["vec3"].set(normal, 1.0, 0.0, 0.0);
          gl_matrix__WEBPACK_IMPORTED_MODULE_2__["vec3"].set(pos2, ext[1], ext[3], ext[5]);
          break;
      }

      gl_matrix__WEBPACK_IMPORTED_MODULE_2__["vec3"].transformMat3(normal, normal, model.idxNormalMatrix);
      gl_matrix__WEBPACK_IMPORTED_MODULE_2__["vec3"].transformMat4(pos2, pos2, model.idxToView);
      var dist = -1.0 * gl_matrix__WEBPACK_IMPORTED_MODULE_2__["vec3"].dot(pos2, normal); // we have the plane in view coordinates
      // specify the planes in view coordinates

      program.setUniform3f("vPlaneNormal".concat(_i), normal[0], normal[1], normal[2]);
      program.setUniformf("vPlaneDistance".concat(_i), dist);

      if (actor.getProperty().getUseLabelOutline()) {
        var image = model.currentInput;
        var worldToIndex = image.getWorldToIndex();
        program.setUniformMatrix('vWCtoIDX', worldToIndex); // Get the projection coordinate to world coordinate transformation matrix.

        gl_matrix__WEBPACK_IMPORTED_MODULE_2__["mat4"].invert(model.projectionToWorld, keyMats.wcpc);
        program.setUniformMatrix('PCWCMatrix', model.projectionToWorld);
        var size = publicAPI.getRenderTargetSize();
        program.setUniformf('vpWidth', size[0]);
        program.setUniformf('vpHeight', size[1]);
        var offset = publicAPI.getRenderTargetOffset();
        program.setUniformf('vpOffsetX', offset[0] / size[0]);
        program.setUniformf('vpOffsetY', offset[1] / size[1]);
      }
    }

    gl_matrix__WEBPACK_IMPORTED_MODULE_2__["mat4"].invert(model.projectionToView, keyMats.vcpc);
    program.setUniformMatrix('PCVCMatrix', model.projectionToView); // handle lighting values

    switch (model.lastLightComplexity) {
      case 1: // headlight

      case 2: // light kit

      case 3:
        {
          // positional not implemented fallback to directional
          // mat3.transpose(keyMats.normalMatrix, keyMats.normalMatrix);
          var lightNum = 0;
          var lightColor = [];
          ren.getLights().forEach(function (light) {
            var status = light.getSwitch();

            if (status > 0) {
              var dColor = light.getColor();
              var intensity = light.getIntensity();
              lightColor[0] = dColor[0] * intensity;
              lightColor[1] = dColor[1] * intensity;
              lightColor[2] = dColor[2] * intensity;
              program.setUniform3fArray("lightColor".concat(lightNum), lightColor);
              var ldir = light.getDirection();
              gl_matrix__WEBPACK_IMPORTED_MODULE_2__["vec3"].set(normal, ldir[0], ldir[1], ldir[2]);
              gl_matrix__WEBPACK_IMPORTED_MODULE_2__["vec3"].transformMat3(normal, normal, keyMats.normalMatrix);
              program.setUniform3f("lightDirectionVC".concat(lightNum), normal[0], normal[1], normal[2]); // camera DOP is 0,0,-1.0 in VC

              var halfAngle = [-0.5 * normal[0], -0.5 * normal[1], -0.5 * (normal[2] - 1.0)];
              program.setUniform3fArray("lightHalfAngleVC".concat(lightNum), halfAngle);
              lightNum++;
            }
          }); // mat3.transpose(keyMats.normalMatrix, keyMats.normalMatrix);

          break;
        }
    }
  };

  publicAPI.setPropertyShaderParameters = function (cellBO, ren, actor) {
    var program = cellBO.getProgram();
    program.setUniformi('ctexture', model.colorTexture.getTextureUnit());
    program.setUniformi('otexture', model.opacityTexture.getTextureUnit());
    program.setUniformi('jtexture', model.jitterTexture.getTextureUnit());
    var volInfo = model.scalarTexture.getVolumeInfo();
    var vprop = actor.getProperty(); // set the component mix when independent

    var numComp = model.scalarTexture.getComponents();
    var iComps = actor.getProperty().getIndependentComponents();

    if (iComps && numComp >= 2) {
      for (var i = 0; i < numComp; i++) {
        program.setUniformf("mix".concat(i), actor.getProperty().getComponentWeight(i));
      }
    } // three levels of shift scale combined into one
    // for performance in the fragment shader


    for (var _i2 = 0; _i2 < numComp; _i2++) {
      var target = iComps ? _i2 : 0;
      var sscale = volInfo.scale[_i2];
      var ofun = vprop.getScalarOpacity(target);
      var oRange = ofun.getRange();
      var oscale = sscale / (oRange[1] - oRange[0]);
      var oshift = (volInfo.offset[_i2] - oRange[0]) / (oRange[1] - oRange[0]);
      program.setUniformf("oshift".concat(_i2), oshift);
      program.setUniformf("oscale".concat(_i2), oscale);
      var cfun = vprop.getRGBTransferFunction(target);
      var cRange = cfun.getRange();
      program.setUniformf("cshift".concat(_i2), (volInfo.offset[_i2] - cRange[0]) / (cRange[1] - cRange[0]));
      program.setUniformf("cscale".concat(_i2), sscale / (cRange[1] - cRange[0]));
    }

    if (model.gopacity) {
      if (iComps) {
        for (var nc = 0; nc < numComp; ++nc) {
          var _sscale = volInfo.scale[nc];
          var useGO = vprop.getUseGradientOpacity(nc);

          if (useGO) {
            var gomin = vprop.getGradientOpacityMinimumOpacity(nc);
            var gomax = vprop.getGradientOpacityMaximumOpacity(nc);
            program.setUniformf("gomin".concat(nc), gomin);
            program.setUniformf("gomax".concat(nc), gomax);
            var goRange = [vprop.getGradientOpacityMinimumValue(nc), vprop.getGradientOpacityMaximumValue(nc)];
            program.setUniformf("goscale".concat(nc), _sscale * (gomax - gomin) / (goRange[1] - goRange[0]));
            program.setUniformf("goshift".concat(nc), -goRange[0] * (gomax - gomin) / (goRange[1] - goRange[0]) + gomin);
          } else {
            program.setUniformf("gomin".concat(nc), 1.0);
            program.setUniformf("gomax".concat(nc), 1.0);
            program.setUniformf("goscale".concat(nc), 0.0);
            program.setUniformf("goshift".concat(nc), 1.0);
          }
        }
      } else {
        var _sscale2 = volInfo.scale[numComp - 1];

        var _gomin = vprop.getGradientOpacityMinimumOpacity(0);

        var _gomax = vprop.getGradientOpacityMaximumOpacity(0);

        program.setUniformf('gomin0', _gomin);
        program.setUniformf('gomax0', _gomax);
        var _goRange = [vprop.getGradientOpacityMinimumValue(0), vprop.getGradientOpacityMaximumValue(0)];
        program.setUniformf('goscale0', _sscale2 * (_gomax - _gomin) / (_goRange[1] - _goRange[0]));
        program.setUniformf('goshift0', -_goRange[0] * (_gomax - _gomin) / (_goRange[1] - _goRange[0]) + _gomin);
      }
    }

    var vtkImageLabelOutline = actor.getProperty().getUseLabelOutline();

    if (vtkImageLabelOutline === true) {
      var labelOutlineThickness = actor.getProperty().getLabelOutlineThickness();
      program.setUniformi('outlineThickness', labelOutlineThickness);
    }

    if (model.lastLightComplexity > 0) {
      program.setUniformf('vAmbient', vprop.getAmbient());
      program.setUniformf('vDiffuse', vprop.getDiffuse());
      program.setUniformf('vSpecular', vprop.getSpecular());
      program.setUniformf('vSpecularPower', vprop.getSpecularPower());
    }
  };

  publicAPI.getClippingPlaneShaderParameters = function (cellBO, ren, actor) {
    if (model.renderable.getClippingPlanes().length > 0) {
      var keyMats = model.openGLCamera.getKeyMatrices(ren);
      var clipPlaneNormals = [];
      var clipPlaneDistances = [];
      var clipPlanes = model.renderable.getClippingPlanes();
      var clipPlaneSize = clipPlanes.length;

      for (var i = 0; i < clipPlaneSize; ++i) {
        var clipPlaneNormal = clipPlanes[i].getNormal();
        var clipPlanePos = clipPlanes[i].getOrigin();
        gl_matrix__WEBPACK_IMPORTED_MODULE_2__["vec3"].transformMat3(clipPlaneNormal, clipPlaneNormal, keyMats.normalMatrix);
        gl_matrix__WEBPACK_IMPORTED_MODULE_2__["vec3"].transformMat4(clipPlanePos, clipPlanePos, keyMats.wcvc);
        var clipPlaneDist = -1.0 * gl_matrix__WEBPACK_IMPORTED_MODULE_2__["vec3"].dot(clipPlanePos, clipPlaneNormal);
        clipPlaneNormals.push(clipPlaneNormal[0]);
        clipPlaneNormals.push(clipPlaneNormal[1]);
        clipPlaneNormals.push(clipPlaneNormal[2]);
        clipPlaneDistances.push(clipPlaneDist);
      }

      var program = cellBO.getProgram();
      program.setUniform3fv("vClipPlaneNormals", clipPlaneNormals);
      program.setUniformfv("vClipPlaneDistances", clipPlaneDistances);
    }
  }; // unsubscribe from our listeners


  publicAPI.delete = Object(_macros_js__WEBPACK_IMPORTED_MODULE_1__["chain"])(function () {
    if (model._animationRateSubscription) {
      model._animationRateSubscription.unsubscribe();

      model._animationRateSubscription = null;
    }
  }, publicAPI.delete);

  publicAPI.getRenderTargetSize = function () {
    if (model._useSmallViewport) {
      return [model._smallViewportWidth, model._smallViewportHeight];
    }

    var _model$openGLRenderer = model.openGLRenderer.getTiledSizeAndOrigin(),
        usize = _model$openGLRenderer.usize,
        vsize = _model$openGLRenderer.vsize;

    return [usize, vsize];
  };

  publicAPI.getRenderTargetOffset = function () {
    var _model$openGLRenderer2 = model.openGLRenderer.getTiledSizeAndOrigin(),
        lowerLeftU = _model$openGLRenderer2.lowerLeftU,
        lowerLeftV = _model$openGLRenderer2.lowerLeftV;

    return [lowerLeftU, lowerLeftV];
  };

  publicAPI.renderPieceStart = function (ren, actor) {
    var rwi = ren.getVTKWindow().getInteractor();
    model._useSmallViewport = false;

    if (rwi.isAnimating() && model._lastScale > 1.5) {
      model._useSmallViewport = true;
    }

    if (!model._animationRateSubscription) {
      // when the animation frame rate changes recompute the scale factor
      model._animationRateSubscription = rwi.onAnimationFrameRateUpdate(function () {
        if (model.renderable.getAutoAdjustSampleDistances()) {
          var frate = rwi.getRecentAnimationFrameRate();
          var adjustment = rwi.getDesiredUpdateRate() / frate; // only change if we are off by 15%

          if (adjustment > 1.15 || adjustment < 0.85) {
            model._lastScale *= adjustment;
          } // clamp scale to some reasonable values.
          // Below 1.5 we will just be using full resolution as that is close enough
          // Above 400 seems like a lot so we limit to that 1/20th per axis


          if (model._lastScale > 400) {
            model._lastScale = 400;
          }

          if (model._lastScale < 1.5) {
            model._lastScale = 1.5;
          }
        } else {
          model._lastScale = model.renderable.getImageSampleDistance() * model.renderable.getImageSampleDistance();
        }

        var size = model.openGLRenderWindow.getFramebufferSize();
        model._smallViewportWidth = Math.ceil(size[0] / Math.sqrt(model._lastScale));
        model._smallViewportHeight = Math.ceil(size[1] / Math.sqrt(model._lastScale));
      });
    } // use/create/resize framebuffer if needed


    if (model._useSmallViewport) {
      var size = model.openGLRenderWindow.getFramebufferSize(); // adjust viewportSize to always be at most the dest fo size

      if (model._smallViewportHeight > size[1]) {
        model._smallViewportHeight = size[1];
      }

      if (model._smallViewportWidth > size[0]) {
        model._smallViewportWidth = size[0];
      }

      model.framebuffer.saveCurrentBindingsAndBuffers();

      if (model.framebuffer.getGLFramebuffer() === null) {
        model.framebuffer.create(size[0], size[1]);
        model.framebuffer.populateFramebuffer();
      } else {
        var fbSize = model.framebuffer.getSize();

        if (fbSize[0] !== size[0] || fbSize[1] !== size[1]) {
          model.framebuffer.create(size[0], size[1]);
          model.framebuffer.populateFramebuffer();
        }
      }

      model.framebuffer.bind();
      var gl = model.context;
      gl.clearColor(0.0, 0.0, 0.0, 0.0);
      gl.colorMask(true, true, true, true);
      gl.clear(gl.COLOR_BUFFER_BIT);
      gl.viewport(0, 0, model._smallViewportWidth, model._smallViewportHeight);
      model.fvp = [model._smallViewportWidth / size[0], model._smallViewportHeight / size[1]];
    }

    model.context.disable(model.context.DEPTH_TEST); // make sure the BOs are up to date

    publicAPI.updateBufferObjects(ren, actor); // set interpolation on the texture based on property setting

    var iType = actor.getProperty().getInterpolationType();

    if (iType === _Core_VolumeProperty_Constants_js__WEBPACK_IMPORTED_MODULE_14__["InterpolationType"].NEAREST) {
      model.scalarTexture.setMinificationFilter(_Texture_Constants_js__WEBPACK_IMPORTED_MODULE_13__["Filter"].NEAREST);
      model.scalarTexture.setMagnificationFilter(_Texture_Constants_js__WEBPACK_IMPORTED_MODULE_13__["Filter"].NEAREST);
    } else {
      model.scalarTexture.setMinificationFilter(_Texture_Constants_js__WEBPACK_IMPORTED_MODULE_13__["Filter"].LINEAR);
      model.scalarTexture.setMagnificationFilter(_Texture_Constants_js__WEBPACK_IMPORTED_MODULE_13__["Filter"].LINEAR);
    } // Bind the OpenGL, this is shared between the different primitive/cell types.


    model.lastBoundBO = null; // if we have a zbuffer texture then activate it

    if (model.zBufferTexture !== null) {
      model.zBufferTexture.activate();
    }
  };

  publicAPI.renderPieceDraw = function (ren, actor) {
    var gl = model.context; // render the texture

    model.scalarTexture.activate();
    model.opacityTexture.activate();
    model.colorTexture.activate();
    model.jitterTexture.activate();
    publicAPI.updateShaders(model.tris, ren, actor); // First we do the triangles, update the shader, set uniforms, etc.
    // for (let i = 0; i < 11; ++i) {
    //   gl.drawArrays(gl.TRIANGLES, 66 * i, 66);
    // }

    gl.drawArrays(gl.TRIANGLES, 0, model.tris.getCABO().getElementCount());
    model.tris.getVAO().release();
    model.scalarTexture.deactivate();
    model.colorTexture.deactivate();
    model.opacityTexture.deactivate();
    model.jitterTexture.deactivate();
  };

  publicAPI.renderPieceFinish = function (ren, actor) {
    // if we have a zbuffer texture then deactivate it
    if (model.zBufferTexture !== null) {
      model.zBufferTexture.deactivate();
    }

    if (model._useSmallViewport) {
      // now copy the framebuffer with the volume into the
      // regular buffer
      model.framebuffer.restorePreviousBindingsAndBuffers();

      if (model.copyShader === null) {
        model.copyShader = model.openGLRenderWindow.getShaderCache().readyShaderProgramArray(['//VTK::System::Dec', 'attribute vec4 vertexDC;', 'uniform vec2 tfactor;', 'varying vec2 tcoord;', 'void main() { tcoord = vec2(vertexDC.x*0.5 + 0.5, vertexDC.y*0.5 + 0.5) * tfactor; gl_Position = vertexDC; }'].join('\n'), ['//VTK::System::Dec', '//VTK::Output::Dec', 'uniform sampler2D texture1;', 'varying vec2 tcoord;', 'void main() { gl_FragData[0] = texture2D(texture1,tcoord); }'].join('\n'), '');
        var program = model.copyShader;
        model.copyVAO = _VertexArrayObject_js__WEBPACK_IMPORTED_MODULE_10__["default"].newInstance();
        model.copyVAO.setOpenGLRenderWindow(model.openGLRenderWindow);
        model.tris.getCABO().bind();

        if (!model.copyVAO.addAttributeArray(program, model.tris.getCABO(), 'vertexDC', model.tris.getCABO().getVertexOffset(), model.tris.getCABO().getStride(), model.context.FLOAT, 3, model.context.FALSE)) {
          vtkErrorMacro('Error setting vertexDC in copy shader VAO.');
        }
      } else {
        model.openGLRenderWindow.getShaderCache().readyShaderProgram(model.copyShader);
      }

      var size = model.openGLRenderWindow.getFramebufferSize();
      model.context.viewport(0, 0, size[0], size[1]); // activate texture

      var tex = model.framebuffer.getColorTexture();
      tex.activate();
      model.copyShader.setUniformi('texture', tex.getTextureUnit());
      model.copyShader.setUniform2f('tfactor', model.fvp[0], model.fvp[1]);
      var gl = model.context;
      gl.blendFuncSeparate(gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA); // render quad

      model.context.drawArrays(model.context.TRIANGLES, 0, model.tris.getCABO().getElementCount());
      tex.deactivate();
      gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);
    }
  };

  publicAPI.renderPiece = function (ren, actor) {
    publicAPI.invokeEvent({
      type: 'StartEvent'
    });
    model.renderable.update();
    model.currentInput = model.renderable.getInputData();
    publicAPI.invokeEvent({
      type: 'EndEvent'
    });

    if (!model.currentInput) {
      vtkErrorMacro('No input!');
      return;
    }

    publicAPI.renderPieceStart(ren, actor);
    publicAPI.renderPieceDraw(ren, actor);
    publicAPI.renderPieceFinish(ren, actor);
  };

  publicAPI.computeBounds = function (ren, actor) {
    if (!publicAPI.getInput()) {
      Object(_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_6__["u"])(model.Bounds);
      return;
    }

    model.bounds = publicAPI.getInput().getBounds();
  };

  publicAPI.updateBufferObjects = function (ren, actor) {
    // Rebuild buffers if needed
    if (publicAPI.getNeedToRebuildBufferObjects(ren, actor)) {
      publicAPI.buildBufferObjects(ren, actor);
    }
  };

  publicAPI.getNeedToRebuildBufferObjects = function (ren, actor) {
    // first do a coarse check
    if (model.VBOBuildTime.getMTime() < publicAPI.getMTime() || model.VBOBuildTime.getMTime() < actor.getMTime() || model.VBOBuildTime.getMTime() < model.renderable.getMTime() || model.VBOBuildTime.getMTime() < actor.getProperty().getMTime() || model.VBOBuildTime.getMTime() < model.currentInput.getMTime()) {
      return true;
    }

    return false;
  };

  publicAPI.buildBufferObjects = function (ren, actor) {
    var image = model.currentInput;

    if (!image) {
      return;
    }

    var scalars = image.getPointData() && image.getPointData().getScalars();

    if (!scalars) {
      return;
    }

    var vprop = actor.getProperty();

    if (!model.jitterTexture.getHandle()) {
      var oTable = new Uint8Array(32 * 32);

      for (var i = 0; i < 32 * 32; ++i) {
        oTable[i] = 255.0 * Math.random();
      }

      model.jitterTexture.setMinificationFilter(_Texture_Constants_js__WEBPACK_IMPORTED_MODULE_13__["Filter"].LINEAR);
      model.jitterTexture.setMagnificationFilter(_Texture_Constants_js__WEBPACK_IMPORTED_MODULE_13__["Filter"].LINEAR);
      model.jitterTexture.create2DFromRaw(32, 32, 1, _Common_Core_DataArray_Constants_js__WEBPACK_IMPORTED_MODULE_4__["VtkDataTypes"].UNSIGNED_CHAR, oTable);
    }

    var numComp = scalars.getNumberOfComponents();
    var iComps = vprop.getIndependentComponents();
    var numIComps = iComps ? numComp : 1; // rebuild opacity tfun?

    var toString = "".concat(vprop.getMTime());

    if (model.opacityTextureString !== toString) {
      var oWidth = 1024;
      var oSize = oWidth * 2 * numIComps;
      var ofTable = new Float32Array(oSize);
      var tmpTable = new Float32Array(oWidth);

      for (var c = 0; c < numIComps; ++c) {
        var ofun = vprop.getScalarOpacity(c);
        var opacityFactor = model.renderable.getSampleDistance() / vprop.getScalarOpacityUnitDistance(c);
        var oRange = ofun.getRange();
        ofun.getTable(oRange[0], oRange[1], oWidth, tmpTable, 1); // adjust for sample distance etc

        for (var _i3 = 0; _i3 < oWidth; ++_i3) {
          ofTable[c * oWidth * 2 + _i3] = 1.0 - Math.pow(1.0 - tmpTable[_i3], opacityFactor);
          ofTable[c * oWidth * 2 + _i3 + oWidth] = ofTable[c * oWidth * 2 + _i3];
        }
      }

      model.opacityTexture.releaseGraphicsResources(model.openGLRenderWindow);
      model.opacityTexture.setMinificationFilter(_Texture_Constants_js__WEBPACK_IMPORTED_MODULE_13__["Filter"].LINEAR);
      model.opacityTexture.setMagnificationFilter(_Texture_Constants_js__WEBPACK_IMPORTED_MODULE_13__["Filter"].LINEAR); // use float texture where possible because we really need the resolution
      // for this table. Errors in low values of opacity accumulate to
      // visible artifacts. High values of opacity quickly terminate without
      // artifacts.

      if (model.openGLRenderWindow.getWebgl2() || model.context.getExtension('OES_texture_float') && model.context.getExtension('OES_texture_float_linear')) {
        model.opacityTexture.create2DFromRaw(oWidth, 2 * numIComps, 1, _Common_Core_DataArray_Constants_js__WEBPACK_IMPORTED_MODULE_4__["VtkDataTypes"].FLOAT, ofTable);
      } else {
        var _oTable = new Uint8Array(oSize);

        for (var _i4 = 0; _i4 < oSize; ++_i4) {
          _oTable[_i4] = 255.0 * ofTable[_i4];
        }

        model.opacityTexture.create2DFromRaw(oWidth, 2 * numIComps, 1, _Common_Core_DataArray_Constants_js__WEBPACK_IMPORTED_MODULE_4__["VtkDataTypes"].UNSIGNED_CHAR, _oTable);
      }

      model.opacityTextureString = toString;
    } // rebuild color tfun?


    toString = "".concat(vprop.getMTime());

    if (model.colorTextureString !== toString) {
      var cWidth = 1024;
      var cSize = cWidth * 2 * numIComps * 3;
      var cTable = new Uint8Array(cSize);

      var _tmpTable = new Float32Array(cWidth * 3);

      for (var _c = 0; _c < numIComps; ++_c) {
        var cfun = vprop.getRGBTransferFunction(_c);
        var cRange = cfun.getRange();
        cfun.getTable(cRange[0], cRange[1], cWidth, _tmpTable, 1);

        for (var _i5 = 0; _i5 < cWidth * 3; ++_i5) {
          cTable[_c * cWidth * 6 + _i5] = 255.0 * _tmpTable[_i5];
          cTable[_c * cWidth * 6 + _i5 + cWidth * 3] = 255.0 * _tmpTable[_i5];
        }
      }

      model.colorTexture.releaseGraphicsResources(model.openGLRenderWindow);
      model.colorTexture.setMinificationFilter(_Texture_Constants_js__WEBPACK_IMPORTED_MODULE_13__["Filter"].LINEAR);
      model.colorTexture.setMagnificationFilter(_Texture_Constants_js__WEBPACK_IMPORTED_MODULE_13__["Filter"].LINEAR);
      model.colorTexture.create2DFromRaw(cWidth, 2 * numIComps, 3, _Common_Core_DataArray_Constants_js__WEBPACK_IMPORTED_MODULE_4__["VtkDataTypes"].UNSIGNED_CHAR, cTable);
      model.colorTextureString = toString;
    } // rebuild the scalarTexture if the data has changed


    toString = "".concat(image.getMTime());

    if (model.scalarTextureString !== toString) {
      // Build the textures
      var dims = image.getDimensions();
      model.scalarTexture.releaseGraphicsResources(model.openGLRenderWindow);
      model.scalarTexture.resetFormatAndType();
      model.scalarTexture.create3DFilterableFromRaw(dims[0], dims[1], dims[2], numComp, scalars.getDataType(), scalars.getData(), model.renderable.getPreferSizeOverAccuracy());
      model.scalarTextureString = toString;
    }

    if (!model.tris.getCABO().getElementCount()) {
      // build the CABO
      var ptsArray = new Float32Array(12);

      for (var _i6 = 0; _i6 < 4; _i6++) {
        ptsArray[_i6 * 3] = _i6 % 2 * 2 - 1.0;
        ptsArray[_i6 * 3 + 1] = _i6 > 1 ? 1.0 : -1.0;
        ptsArray[_i6 * 3 + 2] = -1.0;
      }

      var cellArray = new Uint16Array(8);
      cellArray[0] = 3;
      cellArray[1] = 0;
      cellArray[2] = 1;
      cellArray[3] = 3;
      cellArray[4] = 3;
      cellArray[5] = 0;
      cellArray[6] = 3;
      cellArray[7] = 2; // const dim = 12.0;
      // const ptsArray = new Float32Array(3 * dim * dim);
      // for (let i = 0; i < dim; i++) {
      //   for (let j = 0; j < dim; j++) {
      //     const offset = ((i * dim) + j) * 3;
      //     ptsArray[offset] = (2.0 * (i / (dim - 1.0))) - 1.0;
      //     ptsArray[offset + 1] = (2.0 * (j / (dim - 1.0))) - 1.0;
      //     ptsArray[offset + 2] = -1.0;
      //   }
      // }
      // const cellArray = new Uint16Array(8 * (dim - 1) * (dim - 1));
      // for (let i = 0; i < dim - 1; i++) {
      //   for (let j = 0; j < dim - 1; j++) {
      //     const offset = 8 * ((i * (dim - 1)) + j);
      //     cellArray[offset] = 3;
      //     cellArray[offset + 1] = (i * dim) + j;
      //     cellArray[offset + 2] = (i * dim) + 1 + j;
      //     cellArray[offset + 3] = ((i + 1) * dim) + 1 + j;
      //     cellArray[offset + 4] = 3;
      //     cellArray[offset + 5] = (i * dim) + j;
      //     cellArray[offset + 6] = ((i + 1) * dim) + 1 + j;
      //     cellArray[offset + 7] = ((i + 1) * dim) + j;
      //   }
      // }

      var points = _Common_Core_DataArray_js__WEBPACK_IMPORTED_MODULE_3__["default"].newInstance({
        numberOfComponents: 3,
        values: ptsArray
      });
      points.setName('points');
      var cells = _Common_Core_DataArray_js__WEBPACK_IMPORTED_MODULE_3__["default"].newInstance({
        numberOfComponents: 1,
        values: cellArray
      });
      model.tris.getCABO().createVBO(cells, 'polys', _Core_Property_Constants_js__WEBPACK_IMPORTED_MODULE_12__["Representation"].SURFACE, {
        points: points,
        cellOffset: 0
      });
    }

    model.VBOBuildTime.modified();
  };
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {
  context: null,
  VBOBuildTime: null,
  scalarTexture: null,
  scalarTextureString: null,
  opacityTexture: null,
  opacityTextureString: null,
  colorTexture: null,
  colorTextureString: null,
  jitterTexture: null,
  tris: null,
  framebuffer: null,
  copyShader: null,
  copyVAO: null,
  lastXYF: 1.0,
  targetXYF: 1.0,
  zBufferTexture: null,
  lastZBufferTexture: null,
  lastLightComplexity: 0,
  fullViewportTime: 1.0,
  idxToView: null,
  idxNormalMatrix: null,
  modelToView: null,
  projectionToView: null,
  avgWindowArea: 0.0,
  avgFrameTime: 0.0
}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance

  _SceneGraph_ViewNode_js__WEBPACK_IMPORTED_MODULE_11__["default"].extend(publicAPI, model, initialValues);
  model.VBOBuildTime = {};
  Object(_macros_js__WEBPACK_IMPORTED_MODULE_1__["obj"])(model.VBOBuildTime, {
    mtime: 0
  });
  model.tris = _Helper_js__WEBPACK_IMPORTED_MODULE_5__["default"].newInstance();
  model.scalarTexture = _Texture_js__WEBPACK_IMPORTED_MODULE_8__["default"].newInstance();
  model.opacityTexture = _Texture_js__WEBPACK_IMPORTED_MODULE_8__["default"].newInstance();
  model.colorTexture = _Texture_js__WEBPACK_IMPORTED_MODULE_8__["default"].newInstance();
  model.jitterTexture = _Texture_js__WEBPACK_IMPORTED_MODULE_8__["default"].newInstance();
  model.jitterTexture.setWrapS(_Texture_Constants_js__WEBPACK_IMPORTED_MODULE_13__["Wrap"].REPEAT);
  model.jitterTexture.setWrapT(_Texture_Constants_js__WEBPACK_IMPORTED_MODULE_13__["Wrap"].REPEAT);
  model.framebuffer = _Framebuffer_js__WEBPACK_IMPORTED_MODULE_7__["default"].newInstance();
  model.idxToView = gl_matrix__WEBPACK_IMPORTED_MODULE_2__["mat4"].identity(new Float64Array(16));
  model.idxNormalMatrix = gl_matrix__WEBPACK_IMPORTED_MODULE_2__["mat3"].identity(new Float64Array(9));
  model.modelToView = gl_matrix__WEBPACK_IMPORTED_MODULE_2__["mat4"].identity(new Float64Array(16));
  model.projectionToView = gl_matrix__WEBPACK_IMPORTED_MODULE_2__["mat4"].identity(new Float64Array(16));
  model.projectionToWorld = gl_matrix__WEBPACK_IMPORTED_MODULE_2__["mat4"].identity(new Float64Array(16));
  model._lastScale = 1.0; // Build VTK API

  Object(_macros_js__WEBPACK_IMPORTED_MODULE_1__["setGet"])(publicAPI, model, ['context']); // Object methods

  vtkOpenGLVolumeMapper(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = Object(_macros_js__WEBPACK_IMPORTED_MODULE_1__["newInstance"])(extend, 'vtkOpenGLVolumeMapper'); // ----------------------------------------------------------------------------

var vtkVolumeMapper = {
  newInstance: newInstance,
  extend: extend
}; // Register ourself to OpenGL backend if imported

Object(_ViewNodeFactory_js__WEBPACK_IMPORTED_MODULE_18__["registerOverride"])('vtkVolumeMapper', newInstance);




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/glsl/vtkPolyData2DFS.glsl.js":
/*!*************************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Rendering/OpenGL/glsl/vtkPolyData2DFS.glsl.js ***!
  \*************************************************************************************/
/*! exports provided: v */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "v", function() { return vtkPolyData2DFS; });
var vtkPolyData2DFS = "//VTK::System::Dec\n\n/*=========================================================================\n\n  Program:   Visualization Toolkit\n  Module:    vtkPolyData2DFS.glsl\n\n  Copyright (c) Ken Martin, Will Schroeder, Bill Lorensen\n  All rights reserved.\n  See Copyright.txt or http://www.kitware.com/Copyright.htm for details.\n\n     This software is distributed WITHOUT ANY WARRANTY; without even\n     the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\n     PURPOSE.  See the above copyright notice for more information.\n\n=========================================================================*/\n\nuniform int PrimitiveIDOffset;\n\n// Texture coordinates\n//VTK::TCoord::Dec\n\n// Scalar coloring\n//VTK::Color::Dec\n\n// Depth Peeling\n//VTK::DepthPeeling::Dec\n\n// picking support\n//VTK::Picking::Dec\n\n// the output of this shader\n//VTK::Output::Dec\n\n// Apple Bug\n//VTK::PrimID::Dec\n\nvoid main()\n{\n  // Apple Bug\n  //VTK::PrimID::Impl\n\n  //VTK::Color::Impl\n  //VTK::TCoord::Impl\n\n  //VTK::DepthPeeling::Impl\n  //VTK::Picking::Impl\n\n  if (gl_FragData[0].a <= 0.0)\n    {\n    discard;\n    }\n}\n";




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/glsl/vtkPolyData2DVS.glsl.js":
/*!*************************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Rendering/OpenGL/glsl/vtkPolyData2DVS.glsl.js ***!
  \*************************************************************************************/
/*! exports provided: v */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "v", function() { return vtkPolyData2DVS; });
var vtkPolyData2DVS = "//VTK::System::Dec\n\n/*=========================================================================\n\n  Program:   Visualization Toolkit\n  Module:    vtkPolyData2DVS.glsl\n\n  Copyright (c) Ken Martin, Will Schroeder, Bill Lorensen\n  All rights reserved.\n  See Copyright.txt or http://www.kitware.com/Copyright.htm for details.\n\n     This software is distributed WITHOUT ANY WARRANTY; without even\n     the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\n     PURPOSE.  See the above copyright notice for more information.\n\n=========================================================================*/\n\n// all variables that represent positions or directions have a suffix\n// indicating the coordinate system they are in. The possible values are\n// MC - Model Coordinates\n// WC - WC world coordinates\n// VC - View Coordinates\n// DC - Display Coordinates\n\nin vec4 vertexWC;\n\n// frag position in VC\n//VTK::PositionVC::Dec\n\n// material property values\n//VTK::Color::Dec\n\n// Texture coordinates\n//VTK::TCoord::Dec\n\n// Apple Bug\n//VTK::PrimID::Dec\n\nuniform mat4 WCVCMatrix;  // World to view matrix\n\nvoid main()\n{\n  // Apple Bug\n  //VTK::PrimID::Impl\n\n  gl_Position = WCVCMatrix*vertexWC;\n\n  //VTK::TCoord::Impl\n\n  //VTK::Color::Impl\n\n  //VTK::PositionVC::Impl\n}\n";




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/glsl/vtkPolyDataFS.glsl.js":
/*!***********************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Rendering/OpenGL/glsl/vtkPolyDataFS.glsl.js ***!
  \***********************************************************************************/
/*! exports provided: v */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "v", function() { return vtkPolyDataFS; });
var vtkPolyDataFS = "//VTK::System::Dec\n\n/*=========================================================================\n\n  Program:   Visualization Toolkit\n  Module:    vtkPolyDataFS.glsl\n\n  Copyright (c) Ken Martin, Will Schroeder, Bill Lorensen\n  All rights reserved.\n  See Copyright.txt or http://www.kitware.com/Copyright.htm for details.\n\n     This software is distributed WITHOUT ANY WARRANTY; without even\n     the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\n     PURPOSE.  See the above copyright notice for more information.\n\n=========================================================================*/\n// Template for the polydata mappers fragment shader\n\nuniform int PrimitiveIDOffset;\n\n// VC position of this fragment\n//VTK::PositionVC::Dec\n\n// optional color passed in from the vertex shader, vertexColor\n//VTK::Color::Dec\n\n// optional surface normal declaration\n//VTK::Normal::Dec\n\n// extra lighting parameters\n//VTK::Light::Dec\n\n// Texture coordinates\n//VTK::TCoord::Dec\n\n// picking support\n//VTK::Picking::Dec\n\n// Depth Peeling Support\n//VTK::DepthPeeling::Dec\n\n// clipping plane vars\n//VTK::Clip::Dec\n\n// the output of this shader\n//VTK::Output::Dec\n\n// Apple Bug\n//VTK::PrimID::Dec\n\n// handle coincident offsets\n//VTK::Coincident::Dec\n\n//VTK::ZBuffer::Dec\n\nvoid main()\n{\n  // VC position of this fragment. This should not branch/return/discard.\n  //VTK::PositionVC::Impl\n\n  // Place any calls that require uniform flow (e.g. dFdx) here.\n  //VTK::UniformFlow::Impl\n\n  // Set gl_FragDepth here (gl_FragCoord.z by default)\n  //VTK::Depth::Impl\n\n  // Early depth peeling abort:\n  //VTK::DepthPeeling::PreColor\n\n  // Apple Bug\n  //VTK::PrimID::Impl\n\n  //VTK::Clip::Impl\n\n  //VTK::Color::Impl\n\n  // Generate the normal if we are not passed in one\n  //VTK::Normal::Impl\n\n  //VTK::TCoord::Impl\n\n  //VTK::Light::Impl\n\n  if (gl_FragData[0].a <= 0.0)\n    {\n    discard;\n    }\n\n  //VTK::DepthPeeling::Impl\n\n  //VTK::Picking::Impl\n\n  // handle coincident offsets\n  //VTK::Coincident::Impl\n\n  //VTK::ZBuffer::Impl\n}\n";




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/glsl/vtkPolyDataVS.glsl.js":
/*!***********************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Rendering/OpenGL/glsl/vtkPolyDataVS.glsl.js ***!
  \***********************************************************************************/
/*! exports provided: v */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "v", function() { return vtkPolyDataVS; });
var vtkPolyDataVS = "//VTK::System::Dec\n\n/*=========================================================================\n\n  Program:   Visualization Toolkit\n  Module:    vtkPolyDataVS.glsl\n\n  Copyright (c) Ken Martin, Will Schroeder, Bill Lorensen\n  All rights reserved.\n  See Copyright.txt or http://www.kitware.com/Copyright.htm for details.\n\n     This software is distributed WITHOUT ANY WARRANTY; without even\n     the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\n     PURPOSE.  See the above copyright notice for more information.\n\n=========================================================================*/\n\nattribute vec4 vertexMC;\n\n// frag position in VC\n//VTK::PositionVC::Dec\n\n// optional normal declaration\n//VTK::Normal::Dec\n\n// extra lighting parameters\n//VTK::Light::Dec\n\n// Texture coordinates\n//VTK::TCoord::Dec\n\n// material property values\n//VTK::Color::Dec\n\n// clipping plane vars\n//VTK::Clip::Dec\n\n// camera and actor matrix values\n//VTK::Camera::Dec\n\n// Apple Bug\n//VTK::PrimID::Dec\n\n// picking support\n//VTK::Picking::Dec\n\nvoid main()\n{\n  //VTK::Color::Impl\n\n  //VTK::Normal::Impl\n\n  //VTK::TCoord::Impl\n\n  //VTK::Clip::Impl\n\n  //VTK::PrimID::Impl\n\n  //VTK::PositionVC::Impl\n\n  //VTK::Light::Impl\n\n  //VTK::Picking::Impl\n}\n";




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/glsl/vtkVolumeFS.glsl.js":
/*!*********************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Rendering/OpenGL/glsl/vtkVolumeFS.glsl.js ***!
  \*********************************************************************************/
/*! exports provided: v */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "v", function() { return vtkVolumeFS; });
var vtkVolumeFS = "//VTK::System::Dec\n\n/*=========================================================================\n\n  Program:   Visualization Toolkit\n  Module:    vtkVolumeFS.glsl\n\n  Copyright (c) Ken Martin, Will Schroeder, Bill Lorensen\n  All rights reserved.\n  See Copyright.txt or http://www.kitware.com/Copyright.htm for details.\n\n     This software is distributed WITHOUT ANY WARRANTY; without even\n     the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\n     PURPOSE.  See the above copyright notice for more information.\n\n=========================================================================*/\n// Template for the volume mappers fragment shader\n\n// the output of this shader\n//VTK::Output::Dec\n\nvarying vec3 vertexVCVSOutput;\n\n// first declare the settings from the mapper\n// that impact the code paths in here\n\n// always set vtkNumComponents 1,2,3,4\n//VTK::NumComponents\n\n// possibly define vtkTrilinearOn\n//VTK::TrilinearOn\n\n// possibly define vtkIndependentComponents\n//VTK::IndependentComponentsOn\n\n// possibly define any \"proportional\" components\n//VTK::vtkProportionalComponents\n\n// Define the blend mode to use\n#define vtkBlendMode //VTK::BlendMode\n\n// Possibly define vtkImageLabelOutlineOn\n//VTK::ImageLabelOutlineOn\n\n#ifdef vtkImageLabelOutlineOn\nuniform int outlineThickness;\nuniform float vpWidth;\nuniform float vpHeight;\nuniform float vpOffsetX;\nuniform float vpOffsetY;\nuniform mat4 PCWCMatrix;\nuniform mat4 vWCtoIDX;\n#endif\n\n// define vtkLightComplexity\n//VTK::LightComplexity\n#if vtkLightComplexity > 0\nuniform float vSpecularPower;\nuniform float vAmbient;\nuniform float vDiffuse;\nuniform float vSpecular;\n//VTK::Light::Dec\n#endif\n\n// possibly define vtkGradientOpacityOn\n//VTK::GradientOpacityOn\n#ifdef vtkGradientOpacityOn\nuniform float goscale0;\nuniform float goshift0;\nuniform float gomin0;\nuniform float gomax0;\n#if defined(vtkIndependentComponentsOn) && (vtkNumComponents > 1)\nuniform float goscale1;\nuniform float goshift1;\nuniform float gomin1;\nuniform float gomax1;\n#if vtkNumComponents >= 3\nuniform float goscale2;\nuniform float goshift2;\nuniform float gomin2;\nuniform float gomax2;\n#endif\n#if vtkNumComponents >= 4\nuniform float goscale3;\nuniform float goshift3;\nuniform float gomin3;\nuniform float gomax3;\n#endif\n#endif\n#endif\n\n// if you want to see the raw tiled\n// data in webgl1 uncomment the following line\n// #define debugtile\n\n// camera values\nuniform float camThick;\nuniform float camNear;\nuniform float camFar;\nuniform int cameraParallel;\n\n// values describing the volume geometry\nuniform vec3 vOriginVC;\nuniform vec3 vSpacing;\nuniform ivec3 volumeDimensions; // 3d texture dimensions\nuniform vec3 vPlaneNormal0;\nuniform float vPlaneDistance0;\nuniform vec3 vPlaneNormal1;\nuniform float vPlaneDistance1;\nuniform vec3 vPlaneNormal2;\nuniform float vPlaneDistance2;\nuniform vec3 vPlaneNormal3;\nuniform float vPlaneDistance3;\nuniform vec3 vPlaneNormal4;\nuniform float vPlaneDistance4;\nuniform vec3 vPlaneNormal5;\nuniform float vPlaneDistance5;\n\n//VTK::ClipPlane::Dec\n\n// opacity and color textures\nuniform sampler2D otexture;\nuniform float oshift0;\nuniform float oscale0;\nuniform sampler2D ctexture;\nuniform float cshift0;\nuniform float cscale0;\n\n// jitter texture\nuniform sampler2D jtexture;\n\n// some 3D texture values\nuniform float sampleDistance;\nuniform vec3 vVCToIJK;\n\n// the heights defined below are the locations\n// for the up to four components of the tfuns\n// the tfuns have a height of 2XnumComps pixels so the\n// values are computed to hit the middle of the two rows\n// for that component\n#ifdef vtkIndependentComponentsOn\n#if vtkNumComponents == 2\nuniform float mix0;\nuniform float mix1;\n#define height0 0.25\n#define height1 0.75\n#endif\n#if vtkNumComponents == 3\nuniform float mix0;\nuniform float mix1;\nuniform float mix2;\n#define height0 0.17\n#define height1 0.5\n#define height2 0.83\n#endif\n#if vtkNumComponents == 4\nuniform float mix0;\nuniform float mix1;\nuniform float mix2;\nuniform float mix3;\n#define height0 0.125\n#define height1 0.375\n#define height2 0.625\n#define height3 0.875\n#endif\n#endif\n\n#if vtkNumComponents >= 2\nuniform float oshift1;\nuniform float oscale1;\nuniform float cshift1;\nuniform float cscale1;\n#endif\n#if vtkNumComponents >= 3\nuniform float oshift2;\nuniform float oscale2;\nuniform float cshift2;\nuniform float cscale2;\n#endif\n#if vtkNumComponents >= 4\nuniform float oshift3;\nuniform float oscale3;\nuniform float cshift3;\nuniform float cscale3;\n#endif\n\nuniform vec4 ipScalarRangeMin;\nuniform vec4 ipScalarRangeMax;\n\n// declaration for intermixed geometry\n//VTK::ZBuffer::Dec\n\n// Lighting values\n//VTK::Light::Dec\n\n//=======================================================================\n// Webgl2 specific version of functions\n#if __VERSION__ == 300\n\nuniform highp sampler3D texture1;\n\nvec4 getTextureValue(vec3 pos)\n{\n  vec4 tmp = texture(texture1, pos);\n#if vtkNumComponents == 1\n  tmp.a = tmp.r;\n#endif\n#if vtkNumComponents == 2\n  tmp.a = tmp.g;\n#endif\n#if vtkNumComponents == 3\n  tmp.a = length(tmp.rgb);\n#endif\n  return tmp;\n}\n\n//=======================================================================\n// WebGL1 specific version of functions\n#else\n\nuniform sampler2D texture1;\n\nuniform float texWidth;\nuniform float texHeight;\nuniform int xreps;\nuniform int xstride;\nuniform int ystride;\n\n// if computing trilinear values from multiple z slices\n#ifdef vtkTrilinearOn\nvec4 getTextureValue(vec3 ijk)\n{\n  float zoff = 1.0/float(volumeDimensions.z);\n  vec4 val1 = getOneTextureValue(ijk);\n  vec4 val2 = getOneTextureValue(vec3(ijk.xy, ijk.z + zoff));\n\n  float indexZ = float(volumeDimensions)*ijk.z;\n  float zmix =  indexZ - floor(indexZ);\n\n  return mix(val1, val2, zmix);\n}\n\nvec4 getOneTextureValue(vec3 ijk)\n#else // nearest or fast linear\nvec4 getTextureValue(vec3 ijk)\n#endif\n{\n  vec3 tdims = vec3(volumeDimensions);\n\n#ifdef debugtile\n  vec2 tpos = vec2(ijk.x, ijk.y);\n  vec4 tmp = texture2D(texture1, tpos);\n  tmp.a = 1.0;\n\n#else\n  int z = int(ijk.z * tdims.z);\n  int yz = z / xreps;\n  int xz = z - yz*xreps;\n\n  int tileWidth = volumeDimensions.x/xstride;\n  int tileHeight = volumeDimensions.y/ystride;\n\n  xz *= tileWidth;\n  yz *= tileHeight;\n\n  float ni = float(xz) + (ijk.x*float(tileWidth));\n  float nj = float(yz) + (ijk.y*float(tileHeight));\n\n  vec2 tpos = vec2(ni/texWidth, nj/texHeight);\n\n  vec4 tmp = texture2D(texture1, tpos);\n\n#if vtkNumComponents == 1\n  tmp.a = tmp.r;\n#endif\n#if vtkNumComponents == 2\n  tmp.g = tmp.a;\n#endif\n#if vtkNumComponents == 3\n  tmp.a = length(tmp.rgb);\n#endif\n#endif\n\n  return tmp;\n}\n\n// End of Webgl1 specific code\n//=======================================================================\n#endif\n\n//=======================================================================\n// compute the normal and gradient magnitude for a position\nvec4 computeNormal(vec3 pos, float scalar, vec3 tstep)\n{\n  vec4 result;\n\n  result.x = getTextureValue(pos + vec3(tstep.x, 0.0, 0.0)).a - scalar;\n  result.y = getTextureValue(pos + vec3(0.0, tstep.y, 0.0)).a - scalar;\n  result.z = getTextureValue(pos + vec3(0.0, 0.0, tstep.z)).a - scalar;\n\n  // divide by spacing\n  result.xyz /= vSpacing;\n\n  result.w = length(result.xyz);\n\n  // rotate to View Coords\n  result.xyz =\n    result.x * vPlaneNormal0 +\n    result.y * vPlaneNormal2 +\n    result.z * vPlaneNormal4;\n\n  if (result.w > 0.0)\n  {\n    result.xyz /= result.w;\n  }\n  return result;\n}\n\n#ifdef vtkImageLabelOutlineOn\nvec3 fragCoordToIndexSpace(vec4 fragCoord) {\n  vec4 pcPos = vec4(\n    (fragCoord.x / vpWidth - vpOffsetX - 0.5) * 2.0,\n    (fragCoord.y / vpHeight - vpOffsetY - 0.5) * 2.0,\n    (fragCoord.z - 0.5) * 2.0,\n    1.0);\n\n  vec4 worldCoord = PCWCMatrix * pcPos;\n  vec4 vertex = (worldCoord/worldCoord.w);\n\n  return (vWCtoIDX * vertex).xyz / vec3(volumeDimensions);\n}\n#endif\n\n//=======================================================================\n// compute the normals and gradient magnitudes for a position\n// for independent components\nmat4 computeMat4Normal(vec3 pos, vec4 tValue, vec3 tstep)\n{\n  mat4 result;\n  vec4 distX = getTextureValue(pos + vec3(tstep.x, 0.0, 0.0)) - tValue;\n  vec4 distY = getTextureValue(pos + vec3(0.0, tstep.y, 0.0)) - tValue;\n  vec4 distZ = getTextureValue(pos + vec3(0.0, 0.0, tstep.z)) - tValue;\n\n  // divide by spacing\n  distX /= vSpacing.x;\n  distY /= vSpacing.y;\n  distZ /= vSpacing.z;\n\n  mat3 rot;\n  rot[0] = vPlaneNormal0;\n  rot[1] = vPlaneNormal2;\n  rot[2] = vPlaneNormal4;\n\n#if !defined(vtkComponent0Proportional)\n  result[0].xyz = vec3(distX.r, distY.r, distZ.r);\n  result[0].a = length(result[0].xyz);\n  result[0].xyz *= rot;\n  if (result[0].w > 0.0)\n  {\n    result[0].xyz /= result[0].w;\n  }\n#endif\n\n// optionally compute the 2nd component\n#if vtkNumComponents >= 2 && !defined(vtkComponent1Proportional)\n  result[1].xyz = vec3(distX.g, distY.g, distZ.g);\n  result[1].a = length(result[1].xyz);\n  result[1].xyz *= rot;\n  if (result[1].w > 0.0)\n  {\n    result[1].xyz /= result[1].w;\n  }\n#endif\n\n// optionally compute the 3rd component\n#if vtkNumComponents >= 3 && !defined(vtkComponent2Proportional)\n  result[2].xyz = vec3(distX.b, distY.b, distZ.b);\n  result[2].a = length(result[2].xyz);\n  result[2].xyz *= rot;\n  if (result[2].w > 0.0)\n  {\n    result[2].xyz /= result[2].w;\n  }\n#endif\n\n// optionally compute the 4th component\n#if vtkNumComponents >= 4 && !defined(vtkComponent3Proportional)\n  result[3].xyz = vec3(distX.a, distY.a, distZ.a);\n  result[3].a = length(result[3].xyz);\n  result[3].xyz *= rot;\n  if (result[3].w > 0.0)\n  {\n    result[3].xyz /= result[3].w;\n  }\n#endif\n\n  return result;\n}\n\n//=======================================================================\n// Given a normal compute the gradient opacity factors\n//\nfloat computeGradientOpacityFactor(\n  vec4 normal, float goscale, float goshift, float gomin, float gomax)\n{\n#if defined(vtkGradientOpacityOn)\n  return clamp(normal.a*goscale + goshift, gomin, gomax);\n#else\n  return 1.0;\n#endif\n}\n\n#if vtkLightComplexity > 0\nvoid applyLighting(inout vec3 tColor, vec4 normal)\n{\n  vec3 diffuse = vec3(0.0, 0.0, 0.0);\n  vec3 specular = vec3(0.0, 0.0, 0.0);\n  //VTK::Light::Impl\n  tColor.rgb = tColor.rgb*(diffuse*vDiffuse + vAmbient) + specular*vSpecular;\n}\n#endif\n\n//=======================================================================\n// Given a texture value compute the color and opacity\n//\nvec4 getColorForValue(vec4 tValue, vec3 posIS, vec3 tstep)\n{\n#ifdef vtkImageLabelOutlineOn\n  vec3 centerPosIS = fragCoordToIndexSpace(gl_FragCoord); // pos in texture space\n  vec4 centerValue = getTextureValue(centerPosIS);\n  bool pixelOnBorder = false;\n  vec4 tColor = texture2D(ctexture, vec2(centerValue.r * cscale0 + cshift0, 0.5));\n\n  // Get alpha of segment from opacity function.\n  tColor.a = texture2D(otexture, vec2(centerValue.r * oscale0 + oshift0, 0.5)).r;\n\n  // Only perform outline check on fragments rendering voxels that aren't invisible.\n  // Saves a bunch of needless checks on the background.\n  // TODO define epsilon when building shader?\n  if (float(tColor.a) > 0.01) {\n    for (int i = -outlineThickness; i <= outlineThickness; i++) {\n      for (int j = -outlineThickness; j <= outlineThickness; j++) {\n        if (i == 0 || j == 0) {\n          continue;\n        }\n\n        vec4 neighborPixelCoord = vec4(gl_FragCoord.x + float(i),\n          gl_FragCoord.y + float(j),\n          gl_FragCoord.z, gl_FragCoord.w);\n\n        vec3 neighborPosIS = fragCoordToIndexSpace(neighborPixelCoord);\n        vec4 value = getTextureValue(neighborPosIS);\n\n        // If any of my neighbours are not the same value as I\n        // am, this means I am on the border of the segment.\n        // We can break the loops\n        if (any(notEqual(value, centerValue))) {\n          pixelOnBorder = true;\n          break;\n        }\n      }\n\n      if (pixelOnBorder == true) {\n        break;\n      }\n    }\n\n    // If I am on the border, I am displayed at full opacity\n    if (pixelOnBorder == true) {\n      tColor.a = 1.0;\n    }\n  }\n\n#else\n  // compute the normal and gradient magnitude if needed\n  // We compute it as a vec4 if possible otherwise a mat4\n  //\n  vec4 goFactor = vec4(1.0,1.0,1.0,1.0);\n\n  // compute the normal vectors as needed\n  #if (vtkLightComplexity > 0) || defined(vtkGradientOpacityOn)\n    #if defined(vtkIndependentComponentsOn) && (vtkNumComponents > 1)\n      mat4 normalMat = computeMat4Normal(posIS, tValue, tstep);\n      #if !defined(vtkComponent0Proportional)\n        vec4 normal0 = normalMat[0];\n      #endif\n      #if !defined(vtkComponent1Proportional)\n        vec4 normal1 = normalMat[1];\n      #endif\n      #if vtkNumComponents > 2\n        #if !defined(vtkComponent2Proportional)\n          vec4 normal2 = normalMat[2];\n        #endif\n        #if vtkNumComponents > 3\n          #if !defined(vtkComponent3Proportional)\n            vec4 normal3 = normalMat[3];\n          #endif\n        #endif\n      #endif\n    #else\n      vec4 normal0 = computeNormal(posIS, tValue.a, tstep);\n    #endif\n  #endif\n\n  // compute gradient opacity factors as needed\n  #if defined(vtkGradientOpacityOn)\n    #if !defined(vtkComponent0Proportional)\n      goFactor.x =\n        computeGradientOpacityFactor(normal0, goscale0, goshift0, gomin0, gomax0);\n    #endif\n    #if defined(vtkIndependentComponentsOn) && (vtkNumComponents > 1)\n      #if !defined(vtkComponent1Proportional)\n        goFactor.y =\n          computeGradientOpacityFactor(normal1, goscale1, goshift1, gomin1, gomax1);\n      #endif\n      #if vtkNumComponents > 2\n        #if !defined(vtkComponent2Proportional)\n          goFactor.z =\n            computeGradientOpacityFactor(normal2, goscale2, goshift2, gomin2, gomax2);\n        #endif\n        #if vtkNumComponents > 3\n          #if !defined(vtkComponent3Proportional)\n            goFactor.w =\n              computeGradientOpacityFactor(normal3, goscale3, goshift3, gomin3, gomax3);\n          #endif\n        #endif\n      #endif\n    #endif\n  #endif\n\n  // single component is always independent\n  #if vtkNumComponents == 1\n    vec4 tColor = texture2D(ctexture, vec2(tValue.r * cscale0 + cshift0, 0.5));\n    tColor.a = goFactor.x*texture2D(otexture, vec2(tValue.r * oscale0 + oshift0, 0.5)).r;\n  #endif\n\n  #if defined(vtkIndependentComponentsOn) && vtkNumComponents >= 2\n    vec4 tColor = mix0*texture2D(ctexture, vec2(tValue.r * cscale0 + cshift0, height0));\n    #if !defined(vtkComponent0Proportional)\n      tColor.a = goFactor.x*mix0*texture2D(otexture, vec2(tValue.r * oscale0 + oshift0, height0)).r;\n    #else\n      float pwfValue = texture2D(otexture, vec2(tValue.r * oscale0 + oshift0, height0)).r;\n      tColor *= pwfValue;\n      tColor.a *= mix(pwfValue, 1.0, (1.0 - mix0));\n    #endif\n\n    vec3 tColor1 = mix1*texture2D(ctexture, vec2(tValue.g * cscale1 + cshift1, height1)).rgb;\n    #if !defined(vtkComponent1Proportional)\n      tColor.a += goFactor.y*mix1*texture2D(otexture, vec2(tValue.g * oscale1 + oshift1, height1)).r;\n    #else\n      float pwfValue = texture2D(otexture, vec2(tValue.g * oscale1 + oshift1, height1)).r;\n      tColor1 *= pwfValue;\n      tColor.a *= mix(pwfValue, 1.0, (1.0 - mix1));\n    #endif\n\n    #if vtkNumComponents >= 3\n      vec3 tColor2 = mix2*texture2D(ctexture, vec2(tValue.b * cscale2 + cshift2, height2)).rgb;\n      #if !defined(vtkComponent2Proportional)\n        tColor.a += goFactor.z*mix2*texture2D(otexture, vec2(tValue.b * oscale2 + oshift2, height2)).r;\n      #else\n        float pwfValue = texture2D(otexture, vec2(tValue.b * oscale2 + oshift2, height2)).r;\n        tColor2 *= pwfValue;\n        tColor.a *= mix(pwfValue, 1.0, (1.0 - mix2));\n      #endif\n\n      #if vtkNumComponents >= 4\n        vec3 tColor3 = mix3*texture2D(ctexture, vec2(tValue.a * cscale3 + cshift3, height3)).rgb;\n        #if !defined(vtkComponent3Proportional)\n          tColor.a += goFactor.w*mix3*texture2D(otexture, vec2(tValue.a * oscale3 + oshift3, height3)).r;\n        #else\n          float pwfValue = texture2D(otexture, vec2(tValue.a * oscale3 + oshift3, height3)).r;\n          tColor3 *= pwfValue;\n          tColor.a *= mix(pwfValue, 1.0, (1.0 - mix3));\n        #endif\n      #endif\n    #endif\n  #else // then not independent\n\n  #if vtkNumComponents == 2\n    float lum = tValue.r * cscale0 + cshift0;\n    float alpha = goFactor.x*texture2D(otexture, vec2(tValue.a * oscale1 + oshift1, 0.5)).r;\n    vec4 tColor = vec4(lum, lum, lum, alpha);\n  #endif\n  #if vtkNumComponents == 3\n    vec4 tColor;\n    tColor.r = tValue.r * cscale0 + cshift0;\n    tColor.g = tValue.g * cscale1 + cshift1;\n    tColor.b = tValue.b * cscale2 + cshift2;\n    tColor.a = goFactor.x*texture2D(otexture, vec2(tValue.a * oscale0 + oshift0, 0.5)).r;\n  #endif\n  #if vtkNumComponents == 4\n    vec4 tColor;\n    tColor.r = tValue.r * cscale0 + cshift0;\n    tColor.g = tValue.g * cscale1 + cshift1;\n    tColor.b = tValue.b * cscale2 + cshift2;\n    tColor.a = goFactor.x*texture2D(otexture, vec2(tValue.a * oscale3 + oshift3, 0.5)).r;\n  #endif\n  #endif // dependent\n\n  // apply lighting if requested as appropriate\n  #if vtkLightComplexity > 0\n    #if !defined(vtkComponent0Proportional)\n      applyLighting(tColor.rgb, normal0);\n    #endif\n  #if defined(vtkIndependentComponentsOn) && vtkNumComponents >= 2\n    #if !defined(vtkComponent1Proportional)\n      applyLighting(tColor1, normal1);\n    #endif\n  #if vtkNumComponents >= 3\n    #if !defined(vtkComponent2Proportional)\n      applyLighting(tColor2, normal2);\n    #endif\n  #if vtkNumComponents >= 4\n    #if !defined(vtkComponent3Proportional)\n      applyLighting(tColor3, normal3);\n    #endif\n  #endif\n  #endif\n  #endif\n#endif\n\n// perform final independent blend as needed\n#if defined(vtkIndependentComponentsOn) && vtkNumComponents >= 2\n  tColor.rgb += tColor1;\n#if vtkNumComponents >= 3\n  tColor.rgb += tColor2;\n#if vtkNumComponents >= 4\n  tColor.rgb += tColor3;\n#endif\n#endif\n#endif\n\n#endif\n\n\n\n\n\n\n\nreturn tColor;\n}\n\nbool valueWithinScalarRange(vec4 val, vec4 min, vec4 max) {\n  bool withinRange = false;\n  #if vtkNumComponents == 1\n    if (val.r >= min.r && val.r <= max.r) {\n      withinRange = true;\n    }\n  #endif\n  #if defined(vtkIndependentComponentsOn) && vtkNumComponents == 2\n     if (val.r >= min.r && val.r <= max.r &&\n        val.g >= min.g && val.g <= max.g) {\n      withinRange = true;\n    }\n  #endif\n  #if defined(vtkIndependentComponentsOn) && vtkNumComponents >= 3\n    if (all(greaterThanEqual(val, ipScalarRangeMin)) &&\n        all(lessThanEqual(val, ipScalarRangeMax))) {\n      withinRange = true;\n    }\n  #endif\n  return withinRange;\n}\n\n//=======================================================================\n// Apply the specified blend mode operation along the ray's path.\n//\nvoid applyBlend(vec3 posIS, vec3 endIS, float sampleDistanceIS, vec3 tdims)\n{\n  vec3 tstep = 1.0/tdims;\n\n  // start slightly inside and apply some jitter\n  vec3 delta = endIS - posIS;\n  vec3 stepIS = normalize(delta)*sampleDistanceIS;\n  float raySteps = length(delta)/sampleDistanceIS;\n\n  // avoid 0.0 jitter\n  float jitter = 0.01 + 0.99*texture2D(jtexture, gl_FragCoord.xy/32.0).r;\n  float stepsTraveled = jitter;\n\n  // local vars for the loop\n  vec4 color = vec4(0.0, 0.0, 0.0, 0.0);\n  vec4 tValue;\n  vec4 tColor;\n\n  // if we have less than one step then pick the middle point\n  // as our value\n  // if (raySteps <= 1.0)\n  // {\n  //   posIS = (posIS + endIS)*0.5;\n  // }\n\n  // Perform initial step at the volume boundary\n  // compute the scalar\n  tValue = getTextureValue(posIS);\n\n  #if vtkBlendMode == 0 // COMPOSITE_BLEND\n    // now map through opacity and color\n    tColor = getColorForValue(tValue, posIS, tstep);\n\n    // handle very thin volumes\n    if (raySteps <= 1.0)\n    {\n      tColor.a = 1.0 - pow(1.0 - tColor.a, raySteps);\n      gl_FragData[0] = tColor;\n      return;\n    }\n\n    tColor.a = 1.0 - pow(1.0 - tColor.a, jitter);\n    color = vec4(tColor.rgb*tColor.a, tColor.a);\n    posIS += (jitter*stepIS);\n\n    for (int i = 0; i < //VTK::MaximumSamplesValue ; ++i)\n    {\n      if (stepsTraveled + 1.0 >= raySteps) { break; }\n\n      // compute the scalar\n      tValue = getTextureValue(posIS);\n\n      // now map through opacity and color\n      tColor = getColorForValue(tValue, posIS, tstep);\n\n      float mix = (1.0 - color.a);\n\n      // this line should not be needed but nvidia seems to not handle\n      // the break correctly on windows/chrome 58 angle\n      //mix = mix * sign(max(raySteps - stepsTraveled - 1.0, 0.0));\n\n      color = color + vec4(tColor.rgb*tColor.a, tColor.a)*mix;\n      stepsTraveled++;\n      posIS += stepIS;\n      if (color.a > 0.99) { color.a = 1.0; break; }\n    }\n\n    if (color.a < 0.99 && (raySteps - stepsTraveled) > 0.0)\n    {\n      posIS = endIS;\n\n      // compute the scalar\n      tValue = getTextureValue(posIS);\n\n      // now map through opacity and color\n      tColor = getColorForValue(tValue, posIS, tstep);\n      tColor.a = 1.0 - pow(1.0 - tColor.a, raySteps - stepsTraveled);\n\n      float mix = (1.0 - color.a);\n      color = color + vec4(tColor.rgb*tColor.a, tColor.a)*mix;\n    }\n\n    gl_FragData[0] = vec4(color.rgb/color.a, color.a);\n  #endif\n  #if vtkBlendMode == 1 || vtkBlendMode == 2\n    // MAXIMUM_INTENSITY_BLEND || MINIMUM_INTENSITY_BLEND\n    // Find maximum/minimum intensity along the ray.\n\n    // Define the operation we will use (min or max)\n    #if vtkBlendMode == 1\n    #define OP max\n    #else\n    #define OP min\n    #endif\n\n    // If the clipping range is shorter than the sample distance\n    // we can skip the sampling loop along the ray.\n    if (raySteps <= 1.0)\n    {\n      gl_FragData[0] = getColorForValue(tValue, posIS, tstep);\n      return;\n    }\n\n    vec4 value = tValue;\n    posIS += (jitter*stepIS);\n\n    // Sample along the ray until MaximumSamplesValue,\n    // ending slightly inside the total distance\n    for (int i = 0; i < //VTK::MaximumSamplesValue ; ++i)\n    {\n      // If we have reached the last step, break\n      if (stepsTraveled + 1.0 >= raySteps) { break; }\n\n      // compute the scalar\n      tValue = getTextureValue(posIS);\n\n      // Update the maximum value if necessary\n      value = OP(tValue, value);\n\n      // Otherwise, continue along the ray\n      stepsTraveled++;\n      posIS += stepIS;\n    }\n\n    // Perform the last step along the ray using the\n    // residual distance\n    posIS = endIS;\n    tValue = getTextureValue(posIS);\n    value = OP(tValue, value);\n\n    // Now map through opacity and color\n    gl_FragData[0] = getColorForValue(value, posIS, tstep);\n  #endif\n  #if vtkBlendMode == 3 || vtkBlendMode == 4 //AVERAGE_INTENSITY_BLEND || ADDITIVE_BLEND\n    vec4 sum = vec4(0.);\n\n    if (valueWithinScalarRange(tValue, ipScalarRangeMin, ipScalarRangeMax)) {\n      sum += tValue;\n    }\n\n    if (raySteps <= 1.0) {\n      gl_FragData[0] = getColorForValue(sum, posIS, tstep);\n      return;\n    }\n\n    posIS += (jitter*stepIS);\n\n    // Sample along the ray until MaximumSamplesValue,\n    // ending slightly inside the total distance\n    for (int i = 0; i < //VTK::MaximumSamplesValue ; ++i)\n    {\n      // If we have reached the last step, break\n      if (stepsTraveled + 1.0 >= raySteps) { break; }\n\n      // compute the scalar\n      tValue = getTextureValue(posIS);\n\n      // One can control the scalar range by setting the AverageIPScalarRange to disregard scalar values, not in the range of interest, from the average computation.\n      // Notes:\n      // - We are comparing all values in the texture to see if any of them\n      //   are outside of the scalar range. In the future we might want to allow\n      //   scalar ranges for each component.\n      if (valueWithinScalarRange(tValue, ipScalarRangeMin, ipScalarRangeMax)) {\n        // Sum the values across each step in the path\n        sum += tValue;\n      }\n      stepsTraveled++;\n      posIS += stepIS;\n    }\n\n    // Perform the last step along the ray using the\n    // residual distance\n    posIS = endIS;\n\n    // compute the scalar\n    tValue = getTextureValue(posIS);\n\n    // One can control the scalar range by setting the IPScalarRange to disregard scalar values, not in the range of interest, from the average computation\n    if (valueWithinScalarRange(tValue, ipScalarRangeMin, ipScalarRangeMax)) {\n      sum += tValue;\n\n      stepsTraveled++;\n    }\n\n    #if vtkBlendMode == 3 // Average\n      sum /= vec4(stepsTraveled, stepsTraveled, stepsTraveled, 1.0);\n    #endif\n\n    gl_FragData[0] = getColorForValue(sum, posIS, tstep);\n  #endif\n}\n\n//=======================================================================\n// Compute a new start and end point for a given ray based\n// on the provided bounded clipping plane (aka a rectangle)\nvoid getRayPointIntersectionBounds(\n  vec3 rayPos, vec3 rayDir,\n  vec3 planeDir, float planeDist,\n  inout vec2 tbounds, vec3 vPlaneX, vec3 vPlaneY,\n  float vSize1, float vSize2)\n{\n  float result = dot(rayDir, planeDir);\n  if (abs(result) < 1e-6)\n  {\n    return;\n  }\n  result = -1.0 * (dot(rayPos, planeDir) + planeDist) / result;\n  vec3 xposVC = rayPos + rayDir*result;\n  vec3 vxpos = xposVC - vOriginVC;\n  vec2 vpos = vec2(\n    dot(vxpos, vPlaneX),\n    dot(vxpos, vPlaneY));\n\n  // on some apple nvidia systems this does not work\n  // if (vpos.x < 0.0 || vpos.x > vSize1 ||\n  //     vpos.y < 0.0 || vpos.y > vSize2)\n  // even just\n  // if (vpos.x < 0.0 || vpos.y < 0.0)\n  // fails\n  // so instead we compute a value that represents in and out\n  //and then compute the return using this value\n  float xcheck = max(0.0, vpos.x * (vpos.x - vSize1)); //  0 means in bounds\n  float check = sign(max(xcheck, vpos.y * (vpos.y - vSize2))); //  0 means in bounds, 1 = out\n\n  tbounds = mix(\n   vec2(min(tbounds.x, result), max(tbounds.y, result)), // in value\n   tbounds, // out value\n   check);  // 0 in 1 out\n}\n\n//=======================================================================\n// given a\n// - ray direction (rayDir)\n// - starting point (vertexVCVSOutput)\n// - bounding planes of the volume\n// - optionally depth buffer values\n// - far clipping plane\n// compute the start/end distances of the ray we need to cast\nvec2 computeRayDistances(vec3 rayDir, vec3 tdims)\n{\n  vec2 dists = vec2(100.0*camFar, -1.0);\n\n  vec3 vSize = vSpacing*(tdims - 1.0);\n\n  // all this is in View Coordinates\n  getRayPointIntersectionBounds(vertexVCVSOutput, rayDir,\n    vPlaneNormal0, vPlaneDistance0, dists, vPlaneNormal2, vPlaneNormal4,\n    vSize.y, vSize.z);\n  getRayPointIntersectionBounds(vertexVCVSOutput, rayDir,\n    vPlaneNormal1, vPlaneDistance1, dists, vPlaneNormal2, vPlaneNormal4,\n    vSize.y, vSize.z);\n  getRayPointIntersectionBounds(vertexVCVSOutput, rayDir,\n    vPlaneNormal2, vPlaneDistance2, dists, vPlaneNormal0, vPlaneNormal4,\n    vSize.x, vSize.z);\n  getRayPointIntersectionBounds(vertexVCVSOutput, rayDir,\n    vPlaneNormal3, vPlaneDistance3, dists, vPlaneNormal0, vPlaneNormal4,\n    vSize.x, vSize.z);\n  getRayPointIntersectionBounds(vertexVCVSOutput, rayDir,\n    vPlaneNormal4, vPlaneDistance4, dists, vPlaneNormal0, vPlaneNormal2,\n    vSize.x, vSize.y);\n  getRayPointIntersectionBounds(vertexVCVSOutput, rayDir,\n    vPlaneNormal5, vPlaneDistance5, dists, vPlaneNormal0, vPlaneNormal2,\n    vSize.x, vSize.y);\n\n  //VTK::ClipPlane::Impl\n\n  // do not go behind front clipping plane\n  dists.x = max(0.0,dists.x);\n\n  // do not go PAST far clipping plane\n  float farDist = -camThick/rayDir.z;\n  dists.y = min(farDist,dists.y);\n\n  // Do not go past the zbuffer value if set\n  // This is used for intermixing opaque geometry\n  //VTK::ZBuffer::Impl\n\n  return dists;\n}\n\n//=======================================================================\n// Compute the index space starting position (pos) and end\n// position\n//\nvoid computeIndexSpaceValues(out vec3 pos, out vec3 endPos, out float sampleDistanceIS, vec3 rayDir, vec2 dists)\n{\n  // compute starting and ending values in volume space\n  pos = vertexVCVSOutput + dists.x*rayDir;\n  pos = pos - vOriginVC;\n  // convert to volume basis and origin\n  pos = vec3(\n    dot(pos, vPlaneNormal0),\n    dot(pos, vPlaneNormal2),\n    dot(pos, vPlaneNormal4));\n\n  endPos = vertexVCVSOutput + dists.y*rayDir;\n  endPos = endPos - vOriginVC;\n  endPos = vec3(\n    dot(endPos, vPlaneNormal0),\n    dot(endPos, vPlaneNormal2),\n    dot(endPos, vPlaneNormal4));\n\n  float delta = length(endPos - pos);\n\n  pos *= vVCToIJK;\n  endPos *= vVCToIJK;\n\n  float delta2 = length(endPos - pos);\n  sampleDistanceIS = sampleDistance*delta2/delta;\n}\n\nvoid main()\n{\n\n  vec3 rayDirVC;\n\n  if (cameraParallel == 1)\n  {\n    // Camera is parallel, so the rayDir is just the direction of the camera.\n    rayDirVC = vec3(0.0, 0.0, -1.0);\n  } else {\n    // camera is at 0,0,0 so rayDir for perspective is just the vc coord\n    rayDirVC = normalize(vertexVCVSOutput);\n  }\n\n  vec3 tdims = vec3(volumeDimensions);\n\n  // compute the start and end points for the ray\n  vec2 rayStartEndDistancesVC = computeRayDistances(rayDirVC, tdims);\n\n  // do we need to composite? aka does the ray have any length\n  // If not, bail out early\n  if (rayStartEndDistancesVC.y <= rayStartEndDistancesVC.x)\n  {\n    discard;\n  }\n\n  // IS = Index Space\n  vec3 posIS;\n  vec3 endIS;\n  float sampleDistanceIS;\n  computeIndexSpaceValues(posIS, endIS, sampleDistanceIS, rayDirVC, rayStartEndDistancesVC);\n\n  // Perform the blending operation along the ray\n  applyBlend(posIS, endIS, sampleDistanceIS, tdims);\n}\n";




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Rendering/OpenGL/glsl/vtkVolumeVS.glsl.js":
/*!*********************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Rendering/OpenGL/glsl/vtkVolumeVS.glsl.js ***!
  \*********************************************************************************/
/*! exports provided: v */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "v", function() { return vtkVolumeVS; });
var vtkVolumeVS = "//VTK::System::Dec\n\n/*=========================================================================\n\n  Program:   Visualization Toolkit\n  Module:    vtkPolyDataVS.glsl\n\n  Copyright (c) Ken Martin, Will Schroeder, Bill Lorensen\n  All rights reserved.\n  See Copyright.txt or http://www.kitware.com/Copyright.htm for details.\n\n     This software is distributed WITHOUT ANY WARRANTY; without even\n     the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\n     PURPOSE.  See the above copyright notice for more information.\n\n=========================================================================*/\n\nattribute vec4 vertexDC;\n\nvarying vec3 vertexVCVSOutput;\nuniform mat4 PCVCMatrix;\n\nuniform float dcxmin;\nuniform float dcxmax;\nuniform float dcymin;\nuniform float dcymax;\n\nvoid main()\n{\n  // dcsmall is the device coords reduced to the\n  // x y area covered by the volume\n  vec4 dcsmall = vec4(\n    dcxmin + 0.5 * (vertexDC.x + 1.0) * (dcxmax - dcxmin),\n    dcymin + 0.5 * (vertexDC.y + 1.0) * (dcymax - dcymin),\n    vertexDC.z,\n    vertexDC.w);\n  vec4 vcpos = PCVCMatrix * dcsmall;\n  vertexVCVSOutput = vcpos.xyz/vcpos.w;\n  gl_Position = dcsmall;\n}\n";




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Rendering/SceneGraph/RenderPass.js":
/*!**************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Rendering/SceneGraph/RenderPass.js ***!
  \**************************************************************************/
/*! exports provided: default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkRenderPass$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");


function vtkRenderPass(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkRenderPass');

  publicAPI.getOperation = function () {
    return model.currentOperation;
  };

  publicAPI.setCurrentOperation = function (val) {
    model.currentOperation = val;
    model.currentTraverseOperation = "traverse".concat(_macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].capitalize(model.currentOperation));
  };

  publicAPI.getTraverseOperation = function () {
    return model.currentTraverseOperation;
  }; // by default this class will traverse all of its
  // preDelegateOperations, then call its delegate render passes
  // the traverse all of its postDelegateOperations
  // any of those three arrays can be empty


  publicAPI.traverse = function (viewNode) {
    var parent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

    if (model.deleted) {
      return;
    } // we just render our delegates in order


    model.currentParent = parent;
    model.preDelegateOperations.forEach(function (val) {
      publicAPI.setCurrentOperation(val);
      viewNode.traverse(publicAPI);
    });
    model.delegates.forEach(function (val) {
      val.traverse(viewNode, publicAPI);
    });
    model.postDelegateOperations.forEach(function (val) {
      publicAPI.setCurrentOperation(val);
      viewNode.traverse(publicAPI);
    });
  };
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {
  delegates: [],
  currentOperation: null,
  preDelegateOperations: [],
  postDelegateOperations: [],
  currentParent: null
}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API

  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].obj(publicAPI, model);
  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].get(publicAPI, model, ['currentOperation']);
  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].setGet(publicAPI, model, ['delegates', 'currentParent', 'preDelegateOperations', 'postDelegateOperations']); // Object methods

  vtkRenderPass(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].newInstance(extend, 'vtkRenderPass'); // ----------------------------------------------------------------------------

var vtkRenderPass$1 = {
  newInstance: newInstance,
  extend: extend
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Rendering/SceneGraph/RenderWindowViewNode.js":
/*!************************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Rendering/SceneGraph/RenderWindowViewNode.js ***!
  \************************************************************************************/
/*! exports provided: default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkRenderWindowViewNode$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");
/* harmony import */ var _ViewNode_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ViewNode.js */ "../node_modules/@kitware/vtk.js/Rendering/SceneGraph/ViewNode.js");



// vtkRenderWindowViewNode is intended to be a superclass for all api specific
// RenderWindows. It is intended to define a common API that can be invoked
// upon an api specific render window and provide some common method
// implementations. If your application requires communicating with an api specific
// view try to limit such interactions to methods defined in this class.
// ----------------------------------------------------------------------------
// ----------------------------------------------------------------------------
// vtkRenderWindowViewNode methods
// ----------------------------------------------------------------------------

function vtkRenderWindowViewNode(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkRenderWindowViewNode');

  publicAPI.getViewNodeFactory = function () {
    return null;
  };

  publicAPI.getAspectRatio = function () {
    return model.size[0] / model.size[1];
  };

  publicAPI.getAspectRatioForRenderer = function (renderer) {
    var viewport = renderer.getViewportByReference();
    return model.size[0] * (viewport[2] - viewport[0]) / ((viewport[3] - viewport[1]) * model.size[1]);
  };

  publicAPI.isInViewport = function (x, y, viewport) {
    var vCoords = viewport.getViewportByReference();
    var size = publicAPI.getFramebufferSize();

    if (vCoords[0] * size[0] <= x && vCoords[2] * size[0] >= x && vCoords[1] * size[1] <= y && vCoords[3] * size[1] >= y) {
      return true;
    }

    return false;
  };

  publicAPI.getViewportSize = function (viewport) {
    var vCoords = viewport.getViewportByReference();
    var size = publicAPI.getFramebufferSize();
    return [(vCoords[2] - vCoords[0]) * size[0], (vCoords[3] - vCoords[1]) * size[1]];
  };

  publicAPI.getViewportCenter = function (viewport) {
    var size = publicAPI.getViewportSize(viewport);
    return [size[0] * 0.5, size[1] * 0.5];
  };

  publicAPI.displayToNormalizedDisplay = function (x, y, z) {
    var size = publicAPI.getFramebufferSize();
    return [x / size[0], y / size[1], z];
  };

  publicAPI.normalizedDisplayToDisplay = function (x, y, z) {
    var size = publicAPI.getFramebufferSize();
    return [x * size[0], y * size[1], z];
  };

  publicAPI.worldToView = function (x, y, z, renderer) {
    return renderer.worldToView(x, y, z);
  };

  publicAPI.viewToWorld = function (x, y, z, renderer) {
    return renderer.viewToWorld(x, y, z);
  };

  publicAPI.worldToDisplay = function (x, y, z, renderer) {
    var val = renderer.worldToView(x, y, z);
    var dims = publicAPI.getViewportSize(renderer);
    var val2 = renderer.viewToProjection(val[0], val[1], val[2], dims[0] / dims[1]);
    var val3 = renderer.projectionToNormalizedDisplay(val2[0], val2[1], val2[2]);
    return publicAPI.normalizedDisplayToDisplay(val3[0], val3[1], val3[2]);
  };

  publicAPI.displayToWorld = function (x, y, z, renderer) {
    var val = publicAPI.displayToNormalizedDisplay(x, y, z);
    var val2 = renderer.normalizedDisplayToProjection(val[0], val[1], val[2]);
    var dims = publicAPI.getViewportSize(renderer);
    var val3 = renderer.projectionToView(val2[0], val2[1], val2[2], dims[0] / dims[1]);
    return renderer.viewToWorld(val3[0], val3[1], val3[2]);
  };

  publicAPI.normalizedDisplayToViewport = function (x, y, z, renderer) {
    var vCoords = renderer.getViewportByReference();
    vCoords = publicAPI.normalizedDisplayToDisplay(vCoords[0], vCoords[1], 0.0);
    var coords = publicAPI.normalizedDisplayToDisplay(x, y, z);
    return [coords[0] - vCoords[0] - 0.5, coords[1] - vCoords[1] - 0.5, z];
  };

  publicAPI.viewportToNormalizedViewport = function (x, y, z, renderer) {
    var size = publicAPI.getViewportSize(renderer);

    if (size && size[0] !== 0 && size[1] !== 0) {
      return [x / (size[0] - 1.0), y / (size[1] - 1.0), z];
    }

    return [x, y, z];
  };

  publicAPI.normalizedViewportToViewport = function (x, y, z, renderer) {
    var size = publicAPI.getViewportSize(renderer);
    return [x * (size[0] - 1.0), y * (size[1] - 1.0), z];
  };

  publicAPI.displayToLocalDisplay = function (x, y, z) {
    var size = publicAPI.getFramebufferSize();
    return [x, size[1] - y - 1, z];
  };

  publicAPI.viewportToNormalizedDisplay = function (x, y, z, renderer) {
    var vCoords = renderer.getViewportByReference();
    vCoords = publicAPI.normalizedDisplayToDisplay(vCoords[0], vCoords[1], 0.0);
    var x2 = x + vCoords[0] + 0.5;
    var y2 = y + vCoords[1] + 0.5;
    return publicAPI.displayToNormalizedDisplay(x2, y2, z);
  };

  publicAPI.getPixelData = function (x1, y1, x2, y2) {
    _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].vtkErrorMacro('not implemented');
    return undefined;
  };

  publicAPI.createSelector = function () {
    _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].vtkErrorMacro('not implemented');
    return undefined;
  };
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {
  size: undefined,
  selector: undefined
}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues);

  if (!model.size) {
    model.size = [300, 300];
  }

  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].getArray(publicAPI, model, ['size'], 2);
  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].get(publicAPI, model, ['selector']); // Inheritance

  _ViewNode_js__WEBPACK_IMPORTED_MODULE_1__["default"].extend(publicAPI, model, initialValues); // Object methods

  vtkRenderWindowViewNode(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].newInstance(extend, 'vtkRenderWindowViewNode'); // ----------------------------------------------------------------------------

var vtkRenderWindowViewNode$1 = {
  newInstance: newInstance,
  extend: extend
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Rendering/SceneGraph/ViewNode.js":
/*!************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Rendering/SceneGraph/ViewNode.js ***!
  \************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkViewNode$1; });
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");


var vtkErrorMacro = _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].vtkErrorMacro;
var PASS_TYPES = ['Build', 'Render']; // ----------------------------------------------------------------------------
// vtkViewNode methods
// ----------------------------------------------------------------------------

function vtkViewNode(publicAPI, model) {
  // Set our className
  model.classHierarchy.push('vtkViewNode'); // Builds myself.

  publicAPI.build = function (prepass) {}; // Renders myself


  publicAPI.render = function (prepass) {};

  publicAPI.traverse = function (renderPass) {
    // we can choose to do special
    // traversal here based on pass
    var passTraversal = renderPass.getTraverseOperation();
    var fn = publicAPI[passTraversal];

    if (fn) {
      fn(renderPass);
      return;
    } // default traversal


    publicAPI.apply(renderPass, true);

    for (var index = 0; index < model.children.length; index++) {
      model.children[index].traverse(renderPass);
    }

    publicAPI.apply(renderPass, false);
  };

  publicAPI.apply = function (renderPass, prepass) {
    var customRenderPass = publicAPI[renderPass.getOperation()];

    if (customRenderPass) {
      customRenderPass(prepass, renderPass);
    }
  };

  publicAPI.getViewNodeFor = function (dataObject) {
    if (model.renderable === dataObject) {
      return publicAPI;
    }

    for (var index = 0; index < model.children.length; ++index) {
      var child = model.children[index];
      var vn = child.getViewNodeFor(dataObject);

      if (vn) {
        return vn;
      }
    }

    return undefined;
  };

  publicAPI.getFirstAncestorOfType = function (type) {
    if (!model.parent) {
      return null;
    }

    if (model.parent.isA(type)) {
      return model.parent;
    }

    return model.parent.getFirstAncestorOfType(type);
  };

  publicAPI.addMissingNode = function (dobj) {
    if (!dobj) {
      return;
    }

    var result = model._renderableChildMap.get(dobj); // if found just mark as visited


    if (result !== undefined) {
      result.setVisited(true);
    } else {
      // otherwise create a node
      var newNode = publicAPI.createViewNode(dobj);

      if (newNode) {
        newNode.setParent(publicAPI);
        newNode.setVisited(true);

        model._renderableChildMap.set(dobj, newNode);

        model.children.push(newNode);
      }
    }
  };

  publicAPI.addMissingNodes = function (dataObjs) {
    if (!dataObjs || !dataObjs.length) {
      return;
    }

    for (var index = 0; index < dataObjs.length; ++index) {
      var dobj = dataObjs[index];

      var result = model._renderableChildMap.get(dobj); // if found just mark as visited


      if (result !== undefined) {
        result.setVisited(true);
      } else {
        // otherwise create a node
        var newNode = publicAPI.createViewNode(dobj);

        if (newNode) {
          newNode.setParent(publicAPI);
          newNode.setVisited(true);

          model._renderableChildMap.set(dobj, newNode);

          model.children.push(newNode);
        }
      }
    }
  };

  publicAPI.prepareNodes = function () {
    for (var index = 0; index < model.children.length; ++index) {
      model.children[index].setVisited(false);
    }
  };

  publicAPI.setVisited = function (val) {
    model.visited = val;
  };

  publicAPI.removeUnusedNodes = function () {
    var deleted = null;

    for (var index = 0; index < model.children.length; ++index) {
      var child = model.children[index];
      var visited = child.getVisited();

      if (!visited) {
        var renderable = child.getRenderable();

        if (renderable) {
          model._renderableChildMap.delete(renderable);
        }

        if (!deleted) {
          deleted = [];
        }

        deleted.push(child);
      } else {
        child.setVisited(false);
      }
    }

    if (deleted) {
      // slow does alloc but not as common
      model.children = model.children.filter(function (el) {
        return !deleted.includes(el);
      });
    }
  };

  publicAPI.createViewNode = function (dataObj) {
    if (!model.myFactory) {
      vtkErrorMacro('Cannot create view nodes without my own factory');
      return null;
    }

    var ret = model.myFactory.createNode(dataObj);

    if (ret) {
      ret.setRenderable(dataObj);
    }

    return ret;
  };
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {
  parent: null,
  renderable: null,
  myFactory: null,
  children: [],
  visited: false
}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API

  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].obj(publicAPI, model);
  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].event(publicAPI, model, 'event');
  model._renderableChildMap = new Map();
  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].get(publicAPI, model, ['visited']);
  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].setGet(publicAPI, model, ['parent', 'renderable', 'myFactory']);
  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].getArray(publicAPI, model, ['children']); // Object methods

  vtkViewNode(publicAPI, model);
} // ----------------------------------------------------------------------------


var newInstance = _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].newInstance(extend, 'vtkViewNode'); // ----------------------------------------------------------------------------

var vtkViewNode$1 = {
  newInstance: newInstance,
  extend: extend,
  PASS_TYPES: PASS_TYPES
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Rendering/SceneGraph/ViewNodeFactory.js":
/*!*******************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Rendering/SceneGraph/ViewNodeFactory.js ***!
  \*******************************************************************************/
/*! exports provided: default, extend, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtkViewNodeFactory$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony import */ var _macros_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros.js */ "../node_modules/@kitware/vtk.js/macros.js");


// vtkViewNodeFactory methods
// ----------------------------------------------------------------------------

function vtkViewNodeFactory(publicAPI, model) {
  // Make sure our overrides is just for our instance not shared with everyone...
  if (!model.overrides) {
    model.overrides = {};
  } // Set our className


  model.classHierarchy.push('vtkViewNodeFactory');

  publicAPI.createNode = function (dataObject) {
    if (dataObject.isDeleted()) {
      return null;
    }

    var cpt = 0;
    var className = dataObject.getClassName(cpt++);
    var isObject = false;
    var keys = Object.keys(model.overrides);

    while (className && !isObject) {
      if (keys.indexOf(className) !== -1) {
        isObject = true;
      } else {
        className = dataObject.getClassName(cpt++);
      }
    }

    if (!isObject) {
      return null;
    }

    var vn = model.overrides[className]();
    vn.setMyFactory(publicAPI);
    return vn;
  };

  publicAPI.registerOverride = function (className, func) {
    model.overrides[className] = func;
  };
} // ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------


var DEFAULT_VALUES = {// overrides: {},
}; // ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API

  _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].obj(publicAPI, model); // Object methods

  vtkViewNodeFactory(publicAPI, model);
} // ----------------------------------------------------------------------------

var newInstance = _macros_js__WEBPACK_IMPORTED_MODULE_0__["default"].newInstance(extend, 'vtkViewNodeFactory'); // ----------------------------------------------------------------------------

var vtkViewNodeFactory$1 = {
  newInstance: newInstance,
  extend: extend
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/Utilities/XMLConverter/chemistry-mapper/elements.json.js":
/*!************************************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/Utilities/XMLConverter/chemistry-mapper/elements.json.js ***!
  \************************************************************************************************/
/*! exports provided: A */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "A", function() { return ATOMS; });
var H = [
	1
];
var He = [
	2
];
var Li = [
	3
];
var Be = [
	4
];
var B = [
	5
];
var C = [
	6
];
var N = [
	7
];
var O = [
	8
];
var F = [
	9
];
var Ne = [
	10
];
var Na = [
	11
];
var Mg = [
	12
];
var Al = [
	13
];
var Si = [
	14
];
var P = [
	15
];
var S = [
	16
];
var Cl = [
	17
];
var Ar = [
	18
];
var K = [
	19
];
var Ca = [
	20
];
var Sc = [
	21
];
var Ti = [
	22
];
var V = [
	23
];
var Cr = [
	24
];
var Mn = [
	25
];
var Fe = [
	26
];
var Co = [
	27
];
var Ni = [
	28
];
var Cu = [
	29
];
var Zn = [
	30
];
var Ga = [
	31
];
var Ge = [
	32
];
var As = [
	33
];
var Se = [
	34
];
var Br = [
	35
];
var Kr = [
	36
];
var Rb = [
	37
];
var Sr = [
	38
];
var Y = [
	39
];
var Zr = [
	40
];
var Nb = [
	41
];
var Mo = [
	42
];
var Tc = [
	43
];
var Ru = [
	44
];
var Rh = [
	45
];
var Pd = [
	46
];
var Ag = [
	47
];
var Cd = [
	48
];
var In = [
	49
];
var Sn = [
	50
];
var Sb = [
	51
];
var Te = [
	52
];
var I = [
	53
];
var Xe = [
	54
];
var Cs = [
	55
];
var Ba = [
	56
];
var La = [
	57
];
var Ce = [
	58
];
var Pr = [
	59
];
var Nd = [
	60
];
var Pm = [
	61
];
var Sm = [
	62
];
var Eu = [
	63
];
var Gd = [
	64
];
var Tb = [
	65
];
var Dy = [
	66
];
var Ho = [
	67
];
var Er = [
	68
];
var Tm = [
	69
];
var Yb = [
	70
];
var Lu = [
	71
];
var Hf = [
	72
];
var Ta = [
	73
];
var W = [
	74
];
var Re = [
	75
];
var Os = [
	76
];
var Ir = [
	77
];
var Pt = [
	78
];
var Au = [
	79
];
var Hg = [
	80
];
var Tl = [
	81
];
var Pb = [
	82
];
var Bi = [
	83
];
var Po = [
	84
];
var At = [
	85
];
var Rn = [
	86
];
var Fr = [
	87
];
var Ra = [
	88
];
var Ac = [
	89
];
var Th = [
	90
];
var Pa = [
	91
];
var U = [
	92
];
var Np = [
	93
];
var Pu = [
	94
];
var Am = [
	95
];
var Cm = [
	96
];
var Bk = [
	97
];
var Cf = [
	98
];
var Es = [
	99
];
var Fm = [
	100
];
var Md = [
	101
];
var No = [
	102
];
var Lr = [
	103
];
var Rf = [
	104
];
var Db = [
	105
];
var Sg = [
	106
];
var Bh = [
	107
];
var Hs = [
	108
];
var Mt = [
	109
];
var Ds = [
	110
];
var Rg = [
	111
];
var Cn = [
	112
];
var Uut = [
	113
];
var Uuq = [
	114
];
var Uup = [
	115
];
var Uuh = [
	116
];
var Uus = [
	117
];
var Uuo = [
	118
];
var ATOMS = {
	H: H,
	He: He,
	Li: Li,
	Be: Be,
	B: B,
	C: C,
	N: N,
	O: O,
	F: F,
	Ne: Ne,
	Na: Na,
	Mg: Mg,
	Al: Al,
	Si: Si,
	P: P,
	S: S,
	Cl: Cl,
	Ar: Ar,
	K: K,
	Ca: Ca,
	Sc: Sc,
	Ti: Ti,
	V: V,
	Cr: Cr,
	Mn: Mn,
	Fe: Fe,
	Co: Co,
	Ni: Ni,
	Cu: Cu,
	Zn: Zn,
	Ga: Ga,
	Ge: Ge,
	As: As,
	Se: Se,
	Br: Br,
	Kr: Kr,
	Rb: Rb,
	Sr: Sr,
	Y: Y,
	Zr: Zr,
	Nb: Nb,
	Mo: Mo,
	Tc: Tc,
	Ru: Ru,
	Rh: Rh,
	Pd: Pd,
	Ag: Ag,
	Cd: Cd,
	In: In,
	Sn: Sn,
	Sb: Sb,
	Te: Te,
	I: I,
	Xe: Xe,
	Cs: Cs,
	Ba: Ba,
	La: La,
	Ce: Ce,
	Pr: Pr,
	Nd: Nd,
	Pm: Pm,
	Sm: Sm,
	Eu: Eu,
	Gd: Gd,
	Tb: Tb,
	Dy: Dy,
	Ho: Ho,
	Er: Er,
	Tm: Tm,
	Yb: Yb,
	Lu: Lu,
	Hf: Hf,
	Ta: Ta,
	W: W,
	Re: Re,
	Os: Os,
	Ir: Ir,
	Pt: Pt,
	Au: Au,
	Hg: Hg,
	Tl: Tl,
	Pb: Pb,
	Bi: Bi,
	Po: Po,
	At: At,
	Rn: Rn,
	Fr: Fr,
	Ra: Ra,
	Ac: Ac,
	Th: Th,
	Pa: Pa,
	U: U,
	Np: Np,
	Pu: Pu,
	Am: Am,
	Cm: Cm,
	Bk: Bk,
	Cf: Cf,
	Es: Es,
	Fm: Fm,
	Md: Md,
	No: No,
	Lr: Lr,
	Rf: Rf,
	Db: Db,
	Sg: Sg,
	Bh: Bh,
	Hs: Hs,
	Mt: Mt,
	Ds: Ds,
	Rg: Rg,
	Cn: Cn,
	Uut: Uut,
	Uuq: Uuq,
	Uup: Uup,
	Uuh: Uuh,
	Uus: Uus,
	Uuo: Uuo
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/_virtual/rollup-plugin-web-worker-loader__helper__browser__createInlineWorkerFactory.js":
/*!*******************************************************************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/_virtual/rollup-plugin-web-worker-loader__helper__browser__createInlineWorkerFactory.js ***!
  \*******************************************************************************************************************************/
/*! exports provided: c */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return createInlineWorkerFactory; });
/* harmony import */ var _rollup_plugin_web_worker_loader_helper_funcToSource_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./rollup-plugin-web-worker-loader__helper__funcToSource.js */ "../node_modules/@kitware/vtk.js/_virtual/rollup-plugin-web-worker-loader__helper__funcToSource.js");


function createURL(fn, sourcemapArg) {
    var lines = Object(_rollup_plugin_web_worker_loader_helper_funcToSource_js__WEBPACK_IMPORTED_MODULE_0__["f"])(fn, sourcemapArg);
    var blob = new Blob(lines, { type: 'application/javascript' });
    return URL.createObjectURL(blob);
}

function createInlineWorkerFactory(fn, sourcemapArg) {
    var url;
    return function WorkerFactory(options) {
        url = url || createURL(fn, sourcemapArg);
        return new Worker(url, options);
    };
}




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/_virtual/rollup-plugin-web-worker-loader__helper__funcToSource.js":
/*!*********************************************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/_virtual/rollup-plugin-web-worker-loader__helper__funcToSource.js ***!
  \*********************************************************************************************************/
/*! exports provided: f */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "f", function() { return funcToSource; });
function funcToSource(fn, sourcemapArg) {
    var sourcemap = sourcemapArg === undefined ? null : sourcemapArg;
    var source = fn.toString();
    var lines = source.split('\n');
    lines.pop();
    lines.shift();
    var blankPrefixLength = lines[0].search(/\S/);
    var regex = /(['"])__worker_loader_strict__(['"])/g;
    for (var i = 0, n = lines.length; i < n; ++i) {
        lines[i] = lines[i].substring(blankPrefixLength).replace(regex, '$1use strict$2') + '\n';
    }
    if (sourcemap) {
        lines.push('\/\/# sourceMappingURL=' + sourcemap + '\n');
    }
    return lines;
}




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/_virtual/rollup-plugin-worker-loader__module_Sources/Interaction/Widgets/PiecewiseGaussianWidget/ComputeHistogram.worker.js":
/*!*******************************************************************************************************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/_virtual/rollup-plugin-worker-loader__module_Sources/Interaction/Widgets/PiecewiseGaussianWidget/ComputeHistogram.worker.js ***!
  \*******************************************************************************************************************************************************************/
/*! exports provided: W */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "W", function() { return WorkerFactory; });
/* harmony import */ var _rollup_plugin_web_worker_loader_helper_browser_createInlineWorkerFactory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../rollup-plugin-web-worker-loader__helper__browser__createInlineWorkerFactory.js */ "../node_modules/@kitware/vtk.js/_virtual/rollup-plugin-web-worker-loader__helper__browser__createInlineWorkerFactory.js");


var WorkerFactory = Object(_rollup_plugin_web_worker_loader_helper_browser_createInlineWorkerFactory_js__WEBPACK_IMPORTED_MODULE_0__["c"])(/* rollup-plugin-web-worker-loader */function () {
(function () {
  '__worker_loader_strict__';

  var register = {exports: {}};

  var _createClass$1 = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

  function _classCallCheck$1(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  var TinyEmitter$1 = function () {
    function TinyEmitter() {
      _classCallCheck$1(this, TinyEmitter);

      Object.defineProperty(this, '__listeners', {
        value: {},
        enumerable: false,
        writable: false
      });
    }

    _createClass$1(TinyEmitter, [{
      key: 'emit',
      value: function emit(eventName) {
        if (!this.__listeners[eventName]) return this;

        for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
          args[_key - 1] = arguments[_key];
        }

        var _iteratorNormalCompletion = true;
        var _didIteratorError = false;
        var _iteratorError = undefined;

        try {
          for (var _iterator = this.__listeners[eventName][Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var handler = _step.value;

            handler.apply(undefined, args);
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }

        return this;
      }
    }, {
      key: 'once',
      value: function once(eventName, handler) {
        var _this = this;

        var once = function once() {
          _this.off(eventName, once);
          handler.apply(undefined, arguments);
        };

        return this.on(eventName, once);
      }
    }, {
      key: 'on',
      value: function on(eventName, handler) {
        if (!this.__listeners[eventName]) this.__listeners[eventName] = [];

        this.__listeners[eventName].push(handler);

        return this;
      }
    }, {
      key: 'off',
      value: function off(eventName, handler) {
        if (handler) this.__listeners[eventName] = this.__listeners[eventName].filter(function (h) {
          return h !== handler;
        });else this.__listeners[eventName] = [];

        return this;
      }
    }]);

    return TinyEmitter;
  }();

  var tinyEmitter = TinyEmitter$1;

  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

  var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

  var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

  function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  var TinyEmitter = tinyEmitter;

  var MESSAGE_RESULT = 0;
  var MESSAGE_EVENT = 1;

  var RESULT_ERROR = 0;
  var RESULT_SUCCESS = 1;

  var DEFAULT_HANDLER = 'main';

  var isPromise = function isPromise(o) {
    return (typeof o === 'undefined' ? 'undefined' : _typeof(o)) === 'object' && o !== null && typeof o.then === 'function' && typeof o.catch === 'function';
  };

  function RegisterPromise(fn) {
    var handlers = _defineProperty({}, DEFAULT_HANDLER, fn);
    var sendPostMessage = self.postMessage.bind(self);

    var server = new (function (_TinyEmitter) {
      _inherits(WorkerRegister, _TinyEmitter);

      function WorkerRegister() {
        _classCallCheck(this, WorkerRegister);

        return _possibleConstructorReturn(this, (WorkerRegister.__proto__ || Object.getPrototypeOf(WorkerRegister)).apply(this, arguments));
      }

      _createClass(WorkerRegister, [{
        key: 'emit',
        value: function emit(eventName) {
          for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
            args[_key - 1] = arguments[_key];
          }

          if (args.length == 1 && args[0] instanceof TransferableResponse) {
            sendPostMessage({ eventName: eventName, args: args }, args[0].transferable);
          } else {
            sendPostMessage({ eventName: eventName, args: args });
          }
          return this;
        }
      }, {
        key: 'emitLocally',
        value: function emitLocally(eventName) {
          var _get2;

          for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
            args[_key2 - 1] = arguments[_key2];
          }

          (_get2 = _get(WorkerRegister.prototype.__proto__ || Object.getPrototypeOf(WorkerRegister.prototype), 'emit', this)).call.apply(_get2, [this, eventName].concat(args));
        }
      }, {
        key: 'operation',
        value: function operation(name, handler) {
          handlers[name] = handler;
          return this;
        }
      }]);

      return WorkerRegister;
    }(TinyEmitter))();

    var run = function run(messageId, payload, handlerName) {

      var onSuccess = function onSuccess(result) {
        if (result && result instanceof TransferableResponse) {
          sendResult(messageId, RESULT_SUCCESS, result.payload, result.transferable);
        } else {
          sendResult(messageId, RESULT_SUCCESS, result);
        }
      };

      var onError = function onError(e) {
        sendResult(messageId, RESULT_ERROR, {
          message: e.message,
          stack: e.stack
        });
      };

      try {
        var result = runFn(messageId, payload, handlerName);
        if (isPromise(result)) {
          result.then(onSuccess).catch(onError);
        } else {
          onSuccess(result);
        }
      } catch (e) {
        onError(e);
      }
    };

    var runFn = function runFn(messageId, payload, handlerName) {
      var handler = handlers[handlerName || DEFAULT_HANDLER];
      if (!handler) throw new Error('Not found handler for this request');

      return handler(payload, sendEvent.bind(null, messageId));
    };

    var sendResult = function sendResult(messageId, success, payload) {
      var transferable = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];

      sendPostMessage([MESSAGE_RESULT, messageId, success, payload], transferable);
    };

    var sendEvent = function sendEvent(messageId, eventName, payload) {
      if (!eventName) throw new Error('eventName is required');

      if (typeof eventName !== 'string') throw new Error('eventName should be string');

      sendPostMessage([MESSAGE_EVENT, messageId, eventName, payload]);
    };

    self.addEventListener('message', function (_ref) {
      var data = _ref.data;

      if (Array.isArray(data)) {
        run.apply(undefined, _toConsumableArray(data));
      } else if (data && data.eventName) {
        server.emitLocally.apply(server, [data.eventName].concat(_toConsumableArray(data.args)));
      }
    });

    return server;
  }

  var TransferableResponse = function TransferableResponse(payload, transferable) {
    _classCallCheck(this, TransferableResponse);

    this.payload = payload;
    this.transferable = transferable;
  };

  register.exports = RegisterPromise;
  register.exports.TransferableResponse = TransferableResponse;

  var registerWebworker = register.exports;

  /* eslint-disable */
  // prettier-ignore

  registerWebworker(function (message, emit) {
    var array = message.array;
    var min = message.min;
    var max = message.max;
    var offset = message.component || 0;
    var step = message.numberOfComponents || 1;
    var numberOfBins = message.numberOfBins;
    var delta = max - min;
    var histogram = new Float32Array(numberOfBins);
    histogram.fill(0);
    var len = array.length;

    for (var i = offset; i < len; i += step) {
      var idx = Math.floor((numberOfBins - 1) * (Number(array[i]) - min) / delta);
      histogram[idx] += 1;
    }

    return Promise.resolve(new registerWebworker.TransferableResponse(histogram, [histogram.buffer]));
  });

})();
}, null);
/* eslint-enable */




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/macros.js":
/*!*************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/macros.js ***!
  \*************************************************/
/*! exports provided: EVENT_ABORT, TYPED_ARRAYS, VOID, algo, capitalize, chain, debounce, default, event, formatBytesToProperUnit, formatNumbersWithThousandSeparator, get, getArray, isVtkObject, keystore, newInstance, newTypedArray, newTypedArrayFrom, normalizeWheel, obj, proxy, proxyPropertyMapping, proxyPropertyState, set, setArray, setGet, setGetArray, setImmediateVTK, setLoggerFunction, throttle, traverseInstanceTree, uncapitalize, vtkDebugMacro, vtkErrorMacro, vtkInfoMacro, vtkLogMacro, vtkOnceErrorMacro, vtkWarningMacro */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EVENT_ABORT", function() { return EVENT_ABORT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TYPED_ARRAYS", function() { return TYPED_ARRAYS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VOID", function() { return VOID; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "algo", function() { return algo; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "capitalize", function() { return capitalize; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "chain", function() { return chain; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "debounce", function() { return debounce; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return macro; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "event", function() { return event; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "formatBytesToProperUnit", function() { return formatBytesToProperUnit; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "formatNumbersWithThousandSeparator", function() { return formatNumbersWithThousandSeparator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "get", function() { return get; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getArray", function() { return getArray; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isVtkObject", function() { return isVtkObject; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "keystore", function() { return keystore; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newInstance", function() { return newInstance; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newTypedArray", function() { return newTypedArray; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newTypedArrayFrom", function() { return newTypedArrayFrom; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "normalizeWheel", function() { return normalizeWheel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "obj", function() { return obj; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "proxy", function() { return proxy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "proxyPropertyMapping", function() { return proxyPropertyMapping; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "proxyPropertyState", function() { return proxyPropertyState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "set", function() { return set; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setArray", function() { return setArray; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setGet", function() { return setGet; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setGetArray", function() { return setGetArray; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setImmediateVTK", function() { return setImmediateVTK; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setLoggerFunction", function() { return setLoggerFunction; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "throttle", function() { return throttle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "traverseInstanceTree", function() { return traverseInstanceTree; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "uncapitalize", function() { return uncapitalize; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vtkDebugMacro", function() { return vtkDebugMacro; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vtkErrorMacro", function() { return vtkErrorMacro; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vtkInfoMacro", function() { return vtkInfoMacro; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vtkLogMacro", function() { return vtkLogMacro; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vtkOnceErrorMacro", function() { return vtkOnceErrorMacro; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vtkWarningMacro", function() { return vtkWarningMacro; });
/* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ "../node_modules/@babel/runtime/helpers/slicedToArray.js");
/* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "../node_modules/@babel/runtime/helpers/typeof.js");
/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "../node_modules/@babel/runtime/helpers/defineProperty.js");
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "../node_modules/@babel/runtime/helpers/toConsumableArray.js");
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _babel_runtime_helpers_construct__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/construct */ "../node_modules/@babel/runtime/helpers/construct.js");
/* harmony import */ var _babel_runtime_helpers_construct__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_construct__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _vtk_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./vtk.js */ "../node_modules/@kitware/vtk.js/vtk.js");
/* harmony import */ var _Common_Core_ClassHierarchy_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Common/Core/ClassHierarchy.js */ "../node_modules/@kitware/vtk.js/Common/Core/ClassHierarchy.js");








function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default()(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var globalMTime = 0;
var VOID = Symbol('void');

function getCurrentGlobalMTime() {
  return globalMTime;
} // ----------------------------------------------------------------------------
// Logging function calls
// ----------------------------------------------------------------------------

/* eslint-disable no-prototype-builtins                                      */


var fakeConsole = {};

function noOp() {}

var consoleMethods = ['log', 'debug', 'info', 'warn', 'error', 'time', 'timeEnd', 'group', 'groupEnd'];
consoleMethods.forEach(function (methodName) {
  fakeConsole[methodName] = noOp;
});
_vtk_js__WEBPACK_IMPORTED_MODULE_5__["vtkGlobal"].console = console.hasOwnProperty('log') ? console : fakeConsole;
var loggerFunctions = {
  debug: noOp,
  // Don't print debug by default
  error: _vtk_js__WEBPACK_IMPORTED_MODULE_5__["vtkGlobal"].console.error || noOp,
  info: _vtk_js__WEBPACK_IMPORTED_MODULE_5__["vtkGlobal"].console.info || noOp,
  log: _vtk_js__WEBPACK_IMPORTED_MODULE_5__["vtkGlobal"].console.log || noOp,
  warn: _vtk_js__WEBPACK_IMPORTED_MODULE_5__["vtkGlobal"].console.warn || noOp
};
function setLoggerFunction(name, fn) {
  if (loggerFunctions[name]) {
    loggerFunctions[name] = fn || noOp;
  }
}
function vtkLogMacro() {
  loggerFunctions.log.apply(loggerFunctions, arguments);
}
function vtkInfoMacro() {
  loggerFunctions.info.apply(loggerFunctions, arguments);
}
function vtkDebugMacro() {
  loggerFunctions.debug.apply(loggerFunctions, arguments);
}
function vtkErrorMacro() {
  loggerFunctions.error.apply(loggerFunctions, arguments);
}
function vtkWarningMacro() {
  loggerFunctions.warn.apply(loggerFunctions, arguments);
}
var ERROR_ONCE_MAP = {};
function vtkOnceErrorMacro(str) {
  if (!ERROR_ONCE_MAP[str]) {
    loggerFunctions.error(str);
    ERROR_ONCE_MAP[str] = true;
  }
} // ----------------------------------------------------------------------------
// TypedArray
// ----------------------------------------------------------------------------

var TYPED_ARRAYS = Object.create(null);
TYPED_ARRAYS.Float32Array = Float32Array;
TYPED_ARRAYS.Float64Array = Float64Array;
TYPED_ARRAYS.Uint8Array = Uint8Array;
TYPED_ARRAYS.Int8Array = Int8Array;
TYPED_ARRAYS.Uint16Array = Uint16Array;
TYPED_ARRAYS.Int16Array = Int16Array;
TYPED_ARRAYS.Uint32Array = Uint32Array;
TYPED_ARRAYS.Int32Array = Int32Array;
TYPED_ARRAYS.Uint8ClampedArray = Uint8ClampedArray; // TYPED_ARRAYS.BigInt64Array = BigInt64Array;
// TYPED_ARRAYS.BigUint64Array = BigUint64Array;

function newTypedArray(type) {
  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    args[_key - 1] = arguments[_key];
  }

  return _babel_runtime_helpers_construct__WEBPACK_IMPORTED_MODULE_4___default()(TYPED_ARRAYS[type] || Float64Array, args);
}
function newTypedArrayFrom(type) {
  var _ref;

  for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
    args[_key2 - 1] = arguments[_key2];
  }

  return (_ref = TYPED_ARRAYS[type] || Float64Array).from.apply(_ref, args);
} // ----------------------------------------------------------------------------
// capitilze provided string
// ----------------------------------------------------------------------------

function capitalize(str) {
  return str.charAt(0).toUpperCase() + str.slice(1);
}
function uncapitalize(str) {
  return str.charAt(0).toLowerCase() + str.slice(1);
} // ----------------------------------------------------------------------------
// Convert byte size into a well formatted string
// ----------------------------------------------------------------------------

function formatBytesToProperUnit(size) {
  var precision = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;
  var chunkSize = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1000;
  var units = ['TB', 'GB', 'MB', 'KB'];
  var value = Number(size);
  var currentUnit = 'B';

  while (value > chunkSize) {
    value /= chunkSize;
    currentUnit = units.pop();
  }

  return "".concat(value.toFixed(precision), " ").concat(currentUnit);
} // ----------------------------------------------------------------------------
// Convert thousand number with proper separator
// ----------------------------------------------------------------------------

function formatNumbersWithThousandSeparator(n) {
  var separator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ' ';
  var sections = [];
  var size = n;

  while (size > 1000) {
    sections.push("000".concat(size % 1000).slice(-3));
    size = Math.floor(size / 1000);
  }

  if (size > 0) {
    sections.push(size);
  }

  sections.reverse();
  return sections.join(separator);
} // ----------------------------------------------------------------------------
// Array helper
// ----------------------------------------------------------------------------

function safeArrays(model) {
  Object.keys(model).forEach(function (key) {
    if (Array.isArray(model[key])) {
      model[key] = [].concat(model[key]);
    }
  });
} // ----------------------------------------------------------------------------
// shallow equals
// ----------------------------------------------------------------------------


function shallowEquals(a, b) {
  if (a === b) {
    return true;
  }

  if (Array.isArray(a) && Array.isArray(b)) {
    if (a.length !== b.length) {
      return false;
    }

    for (var i = 0; i < a.length; i++) {
      if (a[i] !== b[i]) {
        return false;
      }
    }

    return true;
  }

  return false;
} // ----------------------------------------------------------------------------


function enumToString(e, value) {
  return Object.keys(e).find(function (key) {
    return e[key] === value;
  });
}

function getStateArrayMapFunc(item) {
  if (item.isA) {
    return item.getState();
  }

  return item;
} // ----------------------------------------------------------------------------
// setImmediate
// ----------------------------------------------------------------------------


function setImmediateVTK(fn) {
  setTimeout(fn, 0);
} // ----------------------------------------------------------------------------
// vtkObject: modified(), onModified(callback), delete()
// ----------------------------------------------------------------------------

function obj() {
  var publicAPI = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var model = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  // Ensure each instance as a unique ref of array
  safeArrays(model);
  var callbacks = [];

  if (!Number.isInteger(model.mtime)) {
    model.mtime = ++globalMTime;
  }

  if (!('classHierarchy' in model)) {
    model.classHierarchy = new _Common_Core_ClassHierarchy_js__WEBPACK_IMPORTED_MODULE_6__["default"]('vtkObject');
  } else if (!(model.classHierarchy instanceof _Common_Core_ClassHierarchy_js__WEBPACK_IMPORTED_MODULE_6__["default"])) {
    model.classHierarchy = _Common_Core_ClassHierarchy_js__WEBPACK_IMPORTED_MODULE_6__["default"].from(model.classHierarchy);
  }

  function off(index) {
    callbacks[index] = null;
  }

  function on(index) {
    function unsubscribe() {
      off(index);
    }

    return Object.freeze({
      unsubscribe: unsubscribe
    });
  }

  publicAPI.isDeleted = function () {
    return !!model.deleted;
  };

  publicAPI.modified = function (otherMTime) {
    if (model.deleted) {
      vtkErrorMacro('instance deleted - cannot call any method');
      return;
    }

    if (otherMTime && otherMTime < publicAPI.getMTime()) {
      return;
    }

    model.mtime = ++globalMTime;
    callbacks.forEach(function (callback) {
      return callback && callback(publicAPI);
    });
  };

  publicAPI.onModified = function (callback) {
    if (model.deleted) {
      vtkErrorMacro('instance deleted - cannot call any method');
      return null;
    }

    var index = callbacks.length;
    callbacks.push(callback);
    return on(index);
  };

  publicAPI.getMTime = function () {
    return model.mtime;
  };

  publicAPI.isA = function (className) {
    var count = model.classHierarchy.length; // we go backwards as that is more likely for
    // early termination

    while (count--) {
      if (model.classHierarchy[count] === className) {
        return true;
      }
    }

    return false;
  };

  publicAPI.getClassName = function () {
    var depth = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
    return model.classHierarchy[model.classHierarchy.length - 1 - depth];
  };

  publicAPI.set = function () {
    var map = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var noWarning = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
    var noFunction = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
    var ret = false;
    Object.keys(map).forEach(function (name) {
      var fn = noFunction ? null : publicAPI["set".concat(capitalize(name))];

      if (fn && Array.isArray(map[name]) && fn.length > 1) {
        ret = fn.apply(void 0, _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_3___default()(map[name])) || ret;
      } else if (fn) {
        ret = fn(map[name]) || ret;
      } else {
        // Set data on model directly
        if (['mtime'].indexOf(name) === -1 && !noWarning) {
          vtkWarningMacro("Warning: Set value to model directly ".concat(name, ", ").concat(map[name]));
        }

        ret = model[name] !== map[name] || ret;
        model[name] = map[name];
      }
    });
    return ret;
  };

  publicAPI.get = function () {
    for (var _len3 = arguments.length, list = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
      list[_key3] = arguments[_key3];
    }

    if (!list.length) {
      return model;
    }

    var subset = {};
    list.forEach(function (name) {
      subset[name] = model[name];
    });
    return subset;
  };

  publicAPI.getReferenceByName = function (val) {
    return model[val];
  };

  publicAPI.delete = function () {
    Object.keys(model).forEach(function (field) {
      return delete model[field];
    });
    callbacks.forEach(function (el, index) {
      return off(index);
    }); // Flag the instance being deleted

    model.deleted = true;
  }; // Add serialization support


  publicAPI.getState = function () {
    var jsonArchive = _objectSpread(_objectSpread({}, model), {}, {
      vtkClass: publicAPI.getClassName()
    }); // Convert every vtkObject to its serializable form


    Object.keys(jsonArchive).forEach(function (keyName) {
      if (jsonArchive[keyName] === null || jsonArchive[keyName] === undefined || keyName[0] === '_' // protected members start with _
      ) {
        delete jsonArchive[keyName];
      } else if (jsonArchive[keyName].isA) {
        jsonArchive[keyName] = jsonArchive[keyName].getState();
      } else if (Array.isArray(jsonArchive[keyName])) {
        jsonArchive[keyName] = jsonArchive[keyName].map(getStateArrayMapFunc);
      }
    }); // Sort resulting object by key name

    var sortedObj = {};
    Object.keys(jsonArchive).sort().forEach(function (name) {
      sortedObj[name] = jsonArchive[name];
    }); // Remove mtime

    if (sortedObj.mtime) {
      delete sortedObj.mtime;
    }

    return sortedObj;
  }; // Add shallowCopy(otherInstance) support


  publicAPI.shallowCopy = function (other) {
    var debug = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

    if (other.getClassName() !== publicAPI.getClassName()) {
      throw new Error("Cannot ShallowCopy ".concat(other.getClassName(), " into ").concat(publicAPI.getClassName()));
    }

    var otherModel = other.get();
    var keyList = Object.keys(model).sort();
    var otherKeyList = Object.keys(otherModel).sort();
    otherKeyList.forEach(function (key) {
      var keyIdx = keyList.indexOf(key);

      if (keyIdx === -1) {
        if (debug) {
          vtkDebugMacro("add ".concat(key, " in shallowCopy"));
        }
      } else {
        keyList.splice(keyIdx, 1);
      }

      model[key] = otherModel[key];
    });

    if (keyList.length && debug) {
      vtkDebugMacro("Untouched keys: ".concat(keyList.join(', ')));
    }

    publicAPI.modified();
  }; // Allow usage as decorator


  return publicAPI;
} // ----------------------------------------------------------------------------
// getXXX: add getters
// ----------------------------------------------------------------------------

function get(publicAPI, model, fieldNames) {
  fieldNames.forEach(function (field) {
    if (_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_1___default()(field) === 'object') {
      publicAPI["get".concat(capitalize(field.name))] = function () {
        return model[field.name];
      };
    } else {
      publicAPI["get".concat(capitalize(field))] = function () {
        return model[field];
      };
    }
  });
} // ----------------------------------------------------------------------------
// setXXX: add setters
// ----------------------------------------------------------------------------

var objectSetterMap = {
  enum: function _enum(publicAPI, model, field) {
    return function (value) {
      if (typeof value === 'string') {
        if (field.enum[value] !== undefined) {
          if (model[field.name] !== field.enum[value]) {
            model[field.name] = field.enum[value];
            publicAPI.modified();
            return true;
          }

          return false;
        }

        vtkErrorMacro("Set Enum with invalid argument ".concat(field, ", ").concat(value));
        throw new RangeError('Set Enum with invalid string argument');
      }

      if (typeof value === 'number') {
        if (model[field.name] !== value) {
          if (Object.keys(field.enum).map(function (key) {
            return field.enum[key];
          }).indexOf(value) !== -1) {
            model[field.name] = value;
            publicAPI.modified();
            return true;
          }

          vtkErrorMacro("Set Enum outside numeric range ".concat(field, ", ").concat(value));
          throw new RangeError('Set Enum outside numeric range');
        }

        return false;
      }

      vtkErrorMacro("Set Enum with invalid argument (String/Number) ".concat(field, ", ").concat(value));
      throw new TypeError('Set Enum with invalid argument (String/Number)');
    };
  }
};

function findSetter(field) {
  if (_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_1___default()(field) === 'object') {
    var fn = objectSetterMap[field.type];

    if (fn) {
      return function (publicAPI, model) {
        return fn(publicAPI, model, field);
      };
    }

    vtkErrorMacro("No setter for field ".concat(field));
    throw new TypeError('No setter for field');
  }

  return function getSetter(publicAPI, model) {
    return function setter(value) {
      if (model.deleted) {
        vtkErrorMacro('instance deleted - cannot call any method');
        return false;
      }

      if (model[field] !== value) {
        model[field] = value;
        publicAPI.modified();
        return true;
      }

      return false;
    };
  };
}

function set(publicAPI, model, fields) {
  fields.forEach(function (field) {
    if (_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_1___default()(field) === 'object') {
      publicAPI["set".concat(capitalize(field.name))] = findSetter(field)(publicAPI, model);
    } else {
      publicAPI["set".concat(capitalize(field))] = findSetter(field)(publicAPI, model);
    }
  });
} // ----------------------------------------------------------------------------
// set/get XXX: add both setters and getters
// ----------------------------------------------------------------------------

function setGet(publicAPI, model, fieldNames) {
  get(publicAPI, model, fieldNames);
  set(publicAPI, model, fieldNames);
} // ----------------------------------------------------------------------------
// getXXX: add getters for object of type array with copy to be safe
// getXXXByReference: add getters for object of type array without copy
// ----------------------------------------------------------------------------

function getArray(publicAPI, model, fieldNames) {
  fieldNames.forEach(function (field) {
    publicAPI["get".concat(capitalize(field))] = function () {
      return model[field] ? [].concat(model[field]) : model[field];
    };

    publicAPI["get".concat(capitalize(field), "ByReference")] = function () {
      return model[field];
    };
  });
} // ----------------------------------------------------------------------------
// setXXX: add setter for object of type array
// if 'defaultVal' is supplied, shorter arrays will be padded to 'size' with 'defaultVal'
// set...From: fast path to copy the content of an array to the current one without call to modified.
// ----------------------------------------------------------------------------

function setArray(publicAPI, model, fieldNames, size) {
  var defaultVal = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : undefined;
  fieldNames.forEach(function (field) {
    if (model[field] && size && model[field].length !== size) {
      throw new RangeError("Invalid initial number of values for array (".concat(field, ")"));
    }

    publicAPI["set".concat(capitalize(field))] = function () {
      if (model.deleted) {
        vtkErrorMacro('instance deleted - cannot call any method');
        return false;
      }

      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
        args[_key4] = arguments[_key4];
      }

      var array = args;
      var changeDetected;
      var needCopy = false; // allow null or an array to be passed as a single arg.

      if (array.length === 1 && (array[0] == null || array[0].length >= 0)) {
        /* eslint-disable prefer-destructuring */
        array = array[0];
        /* eslint-enable prefer-destructuring */

        needCopy = true;
      }

      if (array == null) {
        changeDetected = model[field] !== array;
      } else {
        if (size && array.length !== size) {
          if (array.length < size && defaultVal !== undefined) {
            array = Array.from(array);
            needCopy = false;

            while (array.length < size) {
              array.push(defaultVal);
            }
          } else {
            throw new RangeError("Invalid number of values for array setter (".concat(field, ")"));
          }
        }

        changeDetected = model[field] == null || model[field].some(function (item, index) {
          return item !== array[index];
        }) || model[field].length !== array.length;

        if (changeDetected && needCopy) {
          array = Array.from(array);
        }
      }

      if (changeDetected) {
        model[field] = array;
        publicAPI.modified();
      }

      return changeDetected;
    };

    publicAPI["set".concat(capitalize(field), "From")] = function (otherArray) {
      var target = model[field];
      otherArray.forEach(function (v, i) {
        target[i] = v;
      });
    };
  });
} // ----------------------------------------------------------------------------
// set/get XXX: add setter and getter for object of type array
// ----------------------------------------------------------------------------

function setGetArray(publicAPI, model, fieldNames, size) {
  var defaultVal = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : undefined;
  getArray(publicAPI, model, fieldNames);
  setArray(publicAPI, model, fieldNames, size, defaultVal);
} // ----------------------------------------------------------------------------
// vtkAlgorithm: setInputData(), setInputConnection(), getOutputData(), getOutputPort()
// ----------------------------------------------------------------------------

function algo(publicAPI, model, numberOfInputs, numberOfOutputs) {
  if (model.inputData) {
    model.inputData = model.inputData.map(_vtk_js__WEBPACK_IMPORTED_MODULE_5__["default"]);
  } else {
    model.inputData = [];
  }

  if (model.inputConnection) {
    model.inputConnection = model.inputConnection.map(_vtk_js__WEBPACK_IMPORTED_MODULE_5__["default"]);
  } else {
    model.inputConnection = [];
  }

  if (model.output) {
    model.output = model.output.map(_vtk_js__WEBPACK_IMPORTED_MODULE_5__["default"]);
  } else {
    model.output = [];
  }

  if (model.inputArrayToProcess) {
    model.inputArrayToProcess = model.inputArrayToProcess.map(_vtk_js__WEBPACK_IMPORTED_MODULE_5__["default"]);
  } else {
    model.inputArrayToProcess = [];
  } // Cache the argument for later manipulation


  model.numberOfInputs = numberOfInputs; // Methods

  function setInputData(dataset) {
    var port = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;

    if (model.deleted) {
      vtkErrorMacro('instance deleted - cannot call any method');
      return;
    }

    if (port >= model.numberOfInputs) {
      vtkErrorMacro("algorithm ".concat(publicAPI.getClassName(), " only has ").concat(model.numberOfInputs, " input ports. To add more input ports, use addInputData()"));
      return;
    }

    if (model.inputData[port] !== dataset || model.inputConnection[port]) {
      model.inputData[port] = dataset;
      model.inputConnection[port] = null;

      if (publicAPI.modified) {
        publicAPI.modified();
      }
    }
  }

  function getInputData() {
    var port = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;

    if (model.inputConnection[port]) {
      model.inputData[port] = model.inputConnection[port]();
    }

    return model.inputData[port];
  }

  function setInputConnection(outputPort) {
    var port = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;

    if (model.deleted) {
      vtkErrorMacro('instance deleted - cannot call any method');
      return;
    }

    if (port >= model.numberOfInputs) {
      var msg = "algorithm ".concat(publicAPI.getClassName(), " only has ");
      msg += "".concat(model.numberOfInputs);
      msg += ' input ports. To add more input ports, use addInputConnection()';
      vtkErrorMacro(msg);
      return;
    }

    model.inputData[port] = null;
    model.inputConnection[port] = outputPort;
  }

  function getInputConnection() {
    var port = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
    return model.inputConnection[port];
  }

  function getPortToFill() {
    var portToFill = model.numberOfInputs;

    while (portToFill && !model.inputData[portToFill - 1] && !model.inputConnection[portToFill - 1]) {
      portToFill--;
    }

    if (portToFill === model.numberOfInputs) {
      model.numberOfInputs++;
    }

    return portToFill;
  }

  function addInputConnection(outputPort) {
    if (model.deleted) {
      vtkErrorMacro('instance deleted - cannot call any method');
      return;
    }

    setInputConnection(outputPort, getPortToFill());
  }

  function addInputData(dataset) {
    if (model.deleted) {
      vtkErrorMacro('instance deleted - cannot call any method');
      return;
    }

    setInputData(dataset, getPortToFill());
  }

  function getOutputData() {
    var port = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;

    if (model.deleted) {
      vtkErrorMacro('instance deleted - cannot call any method');
      return null;
    }

    if (publicAPI.shouldUpdate()) {
      publicAPI.update();
    }

    return model.output[port];
  }

  publicAPI.shouldUpdate = function () {
    var localMTime = publicAPI.getMTime();
    var minOutputMTime = Infinity;
    var count = numberOfOutputs;

    while (count--) {
      if (!model.output[count] || model.output[count].isDeleted()) {
        return true;
      }

      var mt = model.output[count].getMTime();

      if (mt < localMTime) {
        return true;
      }

      if (mt < minOutputMTime) {
        minOutputMTime = mt;
      }
    }

    count = model.numberOfInputs;

    while (count--) {
      var _model$inputConnectio, _publicAPI$getInputDa;

      if ((_model$inputConnectio = model.inputConnection[count]) !== null && _model$inputConnectio !== void 0 && _model$inputConnectio.filter.shouldUpdate() || ((_publicAPI$getInputDa = publicAPI.getInputData(count)) === null || _publicAPI$getInputDa === void 0 ? void 0 : _publicAPI$getInputDa.getMTime()) > minOutputMTime) {
        return true;
      }
    }

    return false;
  };

  function getOutputPort() {
    var port = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;

    var outputPortAccess = function outputPortAccess() {
      return getOutputData(port);
    }; // Add reference to filter


    outputPortAccess.filter = publicAPI;
    return outputPortAccess;
  } // Handle input if needed


  if (model.numberOfInputs) {
    // Reserve inputs
    var count = model.numberOfInputs;

    while (count--) {
      model.inputData.push(null);
      model.inputConnection.push(null);
    } // Expose public methods


    publicAPI.setInputData = setInputData;
    publicAPI.setInputConnection = setInputConnection;
    publicAPI.addInputData = addInputData;
    publicAPI.addInputConnection = addInputConnection;
    publicAPI.getInputData = getInputData;
    publicAPI.getInputConnection = getInputConnection;
  }

  if (numberOfOutputs) {
    publicAPI.getOutputData = getOutputData;
    publicAPI.getOutputPort = getOutputPort;
  }

  publicAPI.update = function () {
    var ins = [];

    if (model.numberOfInputs) {
      var _count = 0;

      while (_count < model.numberOfInputs) {
        ins[_count] = publicAPI.getInputData(_count);
        _count++;
      }
    }

    if (publicAPI.shouldUpdate() && publicAPI.requestData) {
      publicAPI.requestData(ins, model.output);
    }
  };

  publicAPI.getNumberOfInputPorts = function () {
    return model.numberOfInputs;
  };

  publicAPI.getNumberOfOutputPorts = function () {
    return numberOfOutputs || model.output.length;
  };

  publicAPI.getInputArrayToProcess = function (inputPort) {
    var arrayDesc = model.inputArrayToProcess[inputPort];
    var ds = model.inputData[inputPort];

    if (arrayDesc && ds) {
      return ds["get".concat(arrayDesc.fieldAssociation)]().getArray(arrayDesc.arrayName);
    }

    return null;
  };

  publicAPI.setInputArrayToProcess = function (inputPort, arrayName, fieldAssociation) {
    var attributeType = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'Scalars';

    while (model.inputArrayToProcess.length < inputPort) {
      model.inputArrayToProcess.push(null);
    }

    model.inputArrayToProcess[inputPort] = {
      arrayName: arrayName,
      fieldAssociation: fieldAssociation,
      attributeType: attributeType
    };
  };
} // ----------------------------------------------------------------------------
// Event handling: onXXX(callback), invokeXXX(args...)
// ----------------------------------------------------------------------------

var EVENT_ABORT = Symbol('Event abort');
function event(publicAPI, model, eventName) {
  var callbacks = [];
  var previousDelete = publicAPI.delete;
  var curCallbackID = 1;

  function off(callbackID) {
    for (var i = 0; i < callbacks.length; ++i) {
      var _callbacks$i = _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0___default()(callbacks[i], 1),
          cbID = _callbacks$i[0];

      if (cbID === callbackID) {
        callbacks.splice(i, 1);
        return;
      }
    }
  }

  function on(callbackID) {
    function unsubscribe() {
      off(callbackID);
    }

    return Object.freeze({
      unsubscribe: unsubscribe
    });
  }

  function invoke() {
    var _arguments = arguments;

    if (model.deleted) {
      vtkErrorMacro('instance deleted - cannot call any method');
      return;
    }
    /* eslint-disable prefer-rest-params */
    // Go through a copy of the callbacks array in case new callbacks
    // get prepended within previous callbacks


    var currentCallbacks = callbacks.slice();

    var _loop = function _loop(index) {
      var _currentCallbacks$ind = _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0___default()(currentCallbacks[index], 3),
          cb = _currentCallbacks$ind[1],
          priority = _currentCallbacks$ind[2];

      if (!cb) {
        return "continue"; // eslint-disable-line
      }

      if (priority < 0) {
        setTimeout(function () {
          return cb.apply(publicAPI, _arguments);
        }, 1 - priority);
      } else {
        // Abort only if the callback explicitly returns false
        var continueNext = cb.apply(publicAPI, _arguments);

        if (continueNext === EVENT_ABORT) {
          return "break";
        }
      }
    };

    for (var index = 0; index < currentCallbacks.length; ++index) {
      var _ret = _loop(index);

      if (_ret === "continue") continue;
      if (_ret === "break") break;
    }
    /* eslint-enable prefer-rest-params */

  }

  publicAPI["invoke".concat(capitalize(eventName))] = invoke;

  publicAPI["on".concat(capitalize(eventName))] = function (callback) {
    var priority = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.0;

    if (!callback.apply) {
      console.error("Invalid callback for event ".concat(eventName));
      return null;
    }

    if (model.deleted) {
      vtkErrorMacro('instance deleted - cannot call any method');
      return null;
    }

    var callbackID = curCallbackID++;
    callbacks.push([callbackID, callback, priority]);
    callbacks.sort(function (cb1, cb2) {
      return cb2[2] - cb1[2];
    });
    return on(callbackID);
  };

  publicAPI.delete = function () {
    previousDelete();
    callbacks.forEach(function (_ref2) {
      var _ref3 = _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0___default()(_ref2, 1),
          cbID = _ref3[0];

      return off(cbID);
    });
  };
} // ----------------------------------------------------------------------------
// newInstance
// ----------------------------------------------------------------------------

function newInstance(extend, className) {
  var constructor = function constructor() {
    var initialValues = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var model = {};
    var publicAPI = {};
    extend(publicAPI, model, initialValues);
    return Object.freeze(publicAPI);
  }; // Register constructor to factory


  if (className) {
    _vtk_js__WEBPACK_IMPORTED_MODULE_5__["default"].register(className, constructor);
  }

  return constructor;
} // ----------------------------------------------------------------------------
// Chain function calls
// ----------------------------------------------------------------------------

function chain() {
  for (var _len5 = arguments.length, fn = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
    fn[_key5] = arguments[_key5];
  }

  return function () {
    for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {
      args[_key6] = arguments[_key6];
    }

    return fn.filter(function (i) {
      return !!i;
    }).map(function (i) {
      return i.apply(void 0, args);
    });
  };
} // ----------------------------------------------------------------------------
// Some utility methods for vtk objects
// ----------------------------------------------------------------------------

function isVtkObject(instance) {
  return instance && instance.isA && instance.isA('vtkObject');
}
function traverseInstanceTree(instance, extractFunction) {
  var accumulator = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];
  var visitedInstances = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];

  if (isVtkObject(instance)) {
    if (visitedInstances.indexOf(instance) >= 0) {
      // avoid cycles
      return accumulator;
    }

    visitedInstances.push(instance);
    var result = extractFunction(instance);

    if (result !== undefined) {
      accumulator.push(result);
    } // Now go through this instance's model


    var model = instance.get();
    Object.keys(model).forEach(function (key) {
      var modelObj = model[key];

      if (Array.isArray(modelObj)) {
        modelObj.forEach(function (subObj) {
          traverseInstanceTree(subObj, extractFunction, accumulator, visitedInstances);
        });
      } else {
        traverseInstanceTree(modelObj, extractFunction, accumulator, visitedInstances);
      }
    });
  }

  return accumulator;
} // ----------------------------------------------------------------------------
// Returns a function, that, as long as it continues to be invoked, will not
// be triggered. The function will be called after it stops being called for
// N milliseconds. If `immediate` is passed, trigger the function on the
// leading edge, instead of the trailing.

function debounce(func, wait, immediate) {
  var _this = this;

  var timeout;

  var debounced = function debounced() {
    for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {
      args[_key7] = arguments[_key7];
    }

    var context = _this;

    var later = function later() {
      timeout = null;

      if (!immediate) {
        func.apply(context, args);
      }
    };

    var callNow = immediate && !timeout;
    clearTimeout(timeout);
    timeout = setTimeout(later, wait);

    if (callNow) {
      func.apply(context, args);
    }
  };

  debounced.cancel = function () {
    return clearTimeout(timeout);
  };

  return debounced;
} // ----------------------------------------------------------------------------
// Creates a throttled function that only invokes `func` at most once per
// every `wait` milliseconds.

function throttle(callback, delay) {
  var isThrottled = false;
  var argsToUse = null;

  function next() {
    isThrottled = false;

    if (argsToUse !== null) {
      wrapper.apply(void 0, _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_3___default()(argsToUse)); // eslint-disable-line

      argsToUse = null;
    }
  }

  function wrapper() {
    for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {
      args[_key8] = arguments[_key8];
    }

    if (isThrottled) {
      argsToUse = args;
      return;
    }

    isThrottled = true;
    callback.apply(void 0, args);
    setTimeout(next, delay);
  }

  return wrapper;
} // ----------------------------------------------------------------------------
// keystore(publicAPI, model, initialKeystore)
//
//    - initialKeystore: Initial keystore. This can be either a Map or an
//      object.
//
// Generated API
//  setKey(key, value) : mixed (returns value)
//  getKey(key) : mixed
//  getAllKeys() : [mixed]
//  deleteKey(key) : Boolean
// ----------------------------------------------------------------------------

function keystore(publicAPI, model) {
  var initialKeystore = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  model.keystore = Object.assign(model.keystore || {}, initialKeystore);

  publicAPI.setKey = function (key, value) {
    model.keystore[key] = value;
  };

  publicAPI.getKey = function (key) {
    return model.keystore[key];
  };

  publicAPI.getAllKeys = function () {
    return Object.keys(model.keystore);
  };

  publicAPI.deleteKey = function (key) {
    return delete model.keystore[key];
  };

  publicAPI.clearKeystore = function () {
    return publicAPI.getAllKeys().forEach(function (key) {
      return delete model.keystore[key];
    });
  };
} // ----------------------------------------------------------------------------
// proxy(publicAPI, model, sectionName, propertyUI)
//
//    - sectionName: Name of the section for UI
//    - propertyUI: List of props with their UI description
//
// Generated API
//  getProxyId() : String
//  listProxyProperties() : [string]
//  updateProxyProperty(name, prop)
//  getProxySection() => List of properties for UI generation
// ----------------------------------------------------------------------------

var nextProxyId = 1;
var ROOT_GROUP_NAME = '__root__';
function proxy(publicAPI, model) {
  // Proxies are keystores
  keystore(publicAPI, model);
  var parentDelete = publicAPI.delete; // getProxyId

  model.proxyId = "".concat(nextProxyId++); // ui handling

  model.ui = JSON.parse(JSON.stringify(model.ui || [])); // deep copy

  get(publicAPI, model, ['proxyId', 'proxyGroup', 'proxyName']);
  setGet(publicAPI, model, ['proxyManager']); // group properties

  var propertyMap = {};
  var groupChildrenNames = {};

  function registerProperties(descriptionList, currentGroupName) {
    if (!groupChildrenNames[currentGroupName]) {
      groupChildrenNames[currentGroupName] = [];
    }

    var childrenNames = groupChildrenNames[currentGroupName];

    for (var i = 0; i < descriptionList.length; i++) {
      childrenNames.push(descriptionList[i].name);
      propertyMap[descriptionList[i].name] = descriptionList[i];

      if (descriptionList[i].children && descriptionList[i].children.length) {
        registerProperties(descriptionList[i].children, descriptionList[i].name);
      }
    }
  }

  registerProperties(model.ui, ROOT_GROUP_NAME);

  publicAPI.updateUI = function (ui) {
    model.ui = JSON.parse(JSON.stringify(ui || [])); // deep copy

    Object.keys(propertyMap).forEach(function (k) {
      return delete propertyMap[k];
    });
    Object.keys(groupChildrenNames).forEach(function (k) {
      return delete groupChildrenNames[k];
    });
    registerProperties(model.ui, ROOT_GROUP_NAME);
    publicAPI.modified();
  };

  function listProxyProperties() {
    var gName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ROOT_GROUP_NAME;
    return groupChildrenNames[gName];
  }

  publicAPI.updateProxyProperty = function (propertyName, propUI) {
    var prop = propertyMap[propertyName];

    if (prop) {
      Object.assign(prop, propUI);
    } else {
      propertyMap[propertyName] = _objectSpread({}, propUI);
    }
  };

  publicAPI.activate = function () {
    if (model.proxyManager) {
      var setActiveMethod = "setActive".concat(capitalize(publicAPI.getProxyGroup().slice(0, -1)));

      if (model.proxyManager[setActiveMethod]) {
        model.proxyManager[setActiveMethod](publicAPI);
      }
    }
  }; // property link


  model.propertyLinkSubscribers = {};

  publicAPI.registerPropertyLinkForGC = function (otherLink, type) {
    if (!(type in model.propertyLinkSubscribers)) {
      model.propertyLinkSubscribers[type] = [];
    }

    model.propertyLinkSubscribers[type].push(otherLink);
  };

  publicAPI.gcPropertyLinks = function (type) {
    var subscribers = model.propertyLinkSubscribers[type] || [];

    while (subscribers.length) {
      subscribers.pop().unbind(publicAPI);
    }
  };

  model.propertyLinkMap = {};

  publicAPI.getPropertyLink = function (id) {
    var persistent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

    if (model.propertyLinkMap[id]) {
      return model.propertyLinkMap[id];
    }

    var value = null;
    var links = [];
    var count = 0;
    var updateInProgress = false;

    function update(source) {
      var force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

      if (updateInProgress) {
        return null;
      }

      var needUpdate = [];
      var sourceLink = null;
      count = links.length;

      while (count--) {
        var link = links[count];

        if (link.instance === source) {
          sourceLink = link;
        } else {
          needUpdate.push(link);
        }
      }

      if (!sourceLink) {
        return null;
      }

      var newValue = sourceLink.instance["get".concat(capitalize(sourceLink.propertyName))]();

      if (!shallowEquals(newValue, value) || force) {
        value = newValue;
        updateInProgress = true;

        while (needUpdate.length) {
          var linkToUpdate = needUpdate.pop();
          linkToUpdate.instance.set(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default()({}, linkToUpdate.propertyName, value));
        }

        updateInProgress = false;
      }

      if (model.propertyLinkMap[id].persistent) {
        model.propertyLinkMap[id].value = newValue;
      }

      return newValue;
    }

    function unbind(instance, propertyName) {
      var indexToDelete = [];
      count = links.length;

      while (count--) {
        var link = links[count];

        if (link.instance === instance && (link.propertyName === propertyName || propertyName === undefined)) {
          link.subscription.unsubscribe();
          indexToDelete.push(count);
        }
      }

      while (indexToDelete.length) {
        links.splice(indexToDelete.pop(), 1);
      }
    }

    function bind(instance, propertyName) {
      var updateMe = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
      var subscription = instance.onModified(update);
      var other = links[0];
      links.push({
        instance: instance,
        propertyName: propertyName,
        subscription: subscription
      });

      if (updateMe) {
        if (model.propertyLinkMap[id].persistent && model.propertyLinkMap[id].value !== undefined) {
          instance.set(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default()({}, propertyName, model.propertyLinkMap[id].value));
        } else if (other) {
          update(other.instance, true);
        }
      }

      return {
        unsubscribe: function unsubscribe() {
          return unbind(instance, propertyName);
        }
      };
    }

    function unsubscribe() {
      while (links.length) {
        links.pop().subscription.unsubscribe();
      }
    }

    var linkHandler = {
      bind: bind,
      unbind: unbind,
      unsubscribe: unsubscribe,
      persistent: persistent
    };
    model.propertyLinkMap[id] = linkHandler;
    return linkHandler;
  }; // extract values


  function getProperties() {
    var groupName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ROOT_GROUP_NAME;
    var values = [];
    var id = model.proxyId;
    var propertyNames = listProxyProperties(groupName) || [];

    for (var i = 0; i < propertyNames.length; i++) {
      var name = propertyNames[i];
      var method = publicAPI["get".concat(capitalize(name))];
      var value = method ? method() : undefined;
      var prop = {
        id: id,
        name: name,
        value: value
      };
      var children = getProperties(name);

      if (children.length) {
        prop.children = children;
      }

      values.push(prop);
    }

    return values;
  }

  publicAPI.listPropertyNames = function () {
    return getProperties().map(function (p) {
      return p.name;
    });
  };

  publicAPI.getPropertyByName = function (name) {
    return getProperties().find(function (p) {
      return p.name === name;
    });
  };

  publicAPI.getPropertyDomainByName = function (name) {
    return (propertyMap[name] || {}).domain;
  }; // ui section


  publicAPI.getProxySection = function () {
    return {
      id: model.proxyId,
      name: model.proxyGroup,
      ui: model.ui,
      properties: getProperties()
    };
  }; // free resources


  publicAPI.delete = function () {
    var list = Object.keys(model.propertyLinkMap);
    var count = list.length;

    while (count--) {
      model.propertyLinkMap[list[count]].unsubscribe();
    }

    Object.keys(model.propertyLinkSubscribers).forEach(publicAPI.gcPropertyLinks);
    parentDelete();
  };

  function registerLinks() {
    // Allow dynamic registration of links at the application level
    if (model.links) {
      for (var i = 0; i < model.links.length; i++) {
        var _model$links$i = model.links[i],
            link = _model$links$i.link,
            property = _model$links$i.property,
            persistent = _model$links$i.persistent,
            updateOnBind = _model$links$i.updateOnBind,
            type = _model$links$i.type;

        if (type === 'application') {
          var sLink = model.proxyManager.getPropertyLink(link, persistent);
          publicAPI.registerPropertyLinkForGC(sLink, 'application');
          sLink.bind(publicAPI, property, updateOnBind);
        }
      }
    }
  }

  setImmediateVTK(registerLinks);
} // ----------------------------------------------------------------------------
// proxyPropertyMapping(publicAPI, model, map)
//
//   map = {
//      opacity: { modelKey: 'property', property: 'opacity' },
//   }
//
// Generated API:
//  Elevate set/get methods from internal object stored in the model to current one
// ----------------------------------------------------------------------------

function proxyPropertyMapping(publicAPI, model, map) {
  var parentDelete = publicAPI.delete;
  var subscriptions = [];
  var propertyNames = Object.keys(map);
  var count = propertyNames.length;

  while (count--) {
    var propertyName = propertyNames[count];
    var _map$propertyName = map[propertyName],
        modelKey = _map$propertyName.modelKey,
        property = _map$propertyName.property,
        _map$propertyName$mod = _map$propertyName.modified,
        modified = _map$propertyName$mod === void 0 ? true : _map$propertyName$mod;
    var methodSrc = capitalize(property);
    var methodDst = capitalize(propertyName);
    publicAPI["get".concat(methodDst)] = model[modelKey]["get".concat(methodSrc)];
    publicAPI["set".concat(methodDst)] = model[modelKey]["set".concat(methodSrc)];

    if (modified) {
      subscriptions.push(model[modelKey].onModified(publicAPI.modified));
    }
  }

  publicAPI.delete = function () {
    while (subscriptions.length) {
      subscriptions.pop().unsubscribe();
    }

    parentDelete();
  };
} // ----------------------------------------------------------------------------
// proxyPropertyState(publicAPI, model, state, defaults)
//
//   state = {
//     representation: {
//       'Surface with edges': { property: { edgeVisibility: true, representation: 2 } },
//       Surface: { property: { edgeVisibility: false, representation: 2 } },
//       Wireframe: { property: { edgeVisibility: false, representation: 1 } },
//       Points: { property: { edgeVisibility: false, representation: 0 } },
//     },
//   }
//
//   defaults = {
//      representation: 'Surface',
//   }
//
// Generated API
//   get / set Representation ( string ) => push state to various internal objects
// ----------------------------------------------------------------------------

function proxyPropertyState(publicAPI, model) {
  var state = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  var defaults = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};
  model.this = publicAPI;

  function applyState(map) {
    var modelKeys = Object.keys(map);
    var count = modelKeys.length;

    while (count--) {
      var modelKey = modelKeys[count];
      model[modelKey].set(map[modelKey]);
    }
  }

  var modelKeys = Object.keys(defaults);
  var count = modelKeys.length;

  var _loop2 = function _loop2() {
    // Add default
    var key = modelKeys[count];
    model[key] = defaults[key]; // Add set method

    var mapping = state[key];

    publicAPI["set".concat(capitalize(key))] = function (value) {
      if (value !== model[key]) {
        model[key] = value;
        var propValues = mapping[value];
        applyState(propValues);
        publicAPI.modified();
      }
    };
  };

  while (count--) {
    _loop2();
  } // Add getter


  if (modelKeys.length) {
    get(publicAPI, model, modelKeys);
  }
} // ----------------------------------------------------------------------------
// From : https://github.com/facebookarchive/fixed-data-table/blob/master/src/vendor_upstream/dom/normalizeWheel.js
//
//
// Copyright (c) 2015, Facebook, Inc.
// All rights reserved.
//
// This source code is licensed under the BSD-style license found in the
// LICENSE file in the root directory of this source tree. An additional grant
// of patent rights can be found in the PATENTS file in the same directory.
//
//
// Mouse wheel (and 2-finger trackpad) support on the web sucks.  It is
// complicated, thus this doc is long and (hopefully) detailed enough to answer
// your questions.
//
// If you need to react to the mouse wheel in a predictable way, this code is
// like your bestest friend.// hugs//
//
// As of today, there are 4 DOM event types you can listen to:
//
//   'wheel'                -- Chrome(31+), FF(17+), IE(9+)
//   'mousewheel'           -- Chrome, IE(6+), Opera, Safari
//   'MozMousePixelScroll'  -- FF(3.5 only!) (2010-2013) -- don't bother!
//   'DOMMouseScroll'       -- FF(0.9.7+) since 2003
//
// So what to do?  The is the best:
//
//   normalizeWheel.getEventType();
//
// In your event callback, use this code to get sane interpretation of the
// deltas.  This code will return an object with properties:
//
//   spinX   -- normalized spin speed (use for zoom) - x plane
//   spinY   -- " - y plane
//   pixelX  -- normalized distance (to pixels) - x plane
//   pixelY  -- " - y plane
//
// Wheel values are provided by the browser assuming you are using the wheel to
// scroll a web page by a number of lines or pixels (or pages).  Values can vary
// significantly on different platforms and browsers, forgetting that you can
// scroll at different speeds.  Some devices (like trackpads) emit more events
// at smaller increments with fine granularity, and some emit massive jumps with
// linear speed or acceleration.
//
// This code does its best to normalize the deltas for you:
//
//   - spin is trying to normalize how far the wheel was spun (or trackpad
//     dragged).  This is super useful for zoom support where you want to
//     throw away the chunky scroll steps on the PC and make those equal to
//     the slow and smooth tiny steps on the Mac. Key data: This code tries to
//     resolve a single slow step on a wheel to 1.
//
//   - pixel is normalizing the desired scroll delta in pixel units.  You'll
//     get the crazy differences between browsers, but at least it'll be in
//     pixels!
//
//   - positive value indicates scrolling DOWN/RIGHT, negative UP/LEFT.  This
//     should translate to positive value zooming IN, negative zooming OUT.
//     This matches the newer 'wheel' event.
//
// Why are there spinX, spinY (or pixels)?
//
//   - spinX is a 2-finger side drag on the trackpad, and a shift + wheel turn
//     with a mouse.  It results in side-scrolling in the browser by default.
//
//   - spinY is what you expect -- it's the classic axis of a mouse wheel.
//
//   - I dropped spinZ/pixelZ.  It is supported by the DOM 3 'wheel' event and
//     probably is by browsers in conjunction with fancy 3D controllers .. but
//     you know.
//
// Implementation info:
//
// Examples of 'wheel' event if you scroll slowly (down) by one step with an
// average mouse:
//
//   OS X + Chrome  (mouse)     -    4   pixel delta  (wheelDelta -120)
//   OS X + Safari  (mouse)     -  N/A   pixel delta  (wheelDelta  -12)
//   OS X + Firefox (mouse)     -    0.1 line  delta  (wheelDelta  N/A)
//   Win8 + Chrome  (mouse)     -  100   pixel delta  (wheelDelta -120)
//   Win8 + Firefox (mouse)     -    3   line  delta  (wheelDelta -120)
//
// On the trackpad:
//
//   OS X + Chrome  (trackpad)  -    2   pixel delta  (wheelDelta   -6)
//   OS X + Firefox (trackpad)  -    1   pixel delta  (wheelDelta  N/A)
//
// On other/older browsers.. it's more complicated as there can be multiple and
// also missing delta values.
//
// The 'wheel' event is more standard:
//
// http://www.w3.org/TR/DOM-Level-3-Events/#events-wheelevents
//
// The basics is that it includes a unit, deltaMode (pixels, lines, pages), and
// deltaX, deltaY and deltaZ.  Some browsers provide other values to maintain
// backward compatibility with older events.  Those other values help us
// better normalize spin speed.  Example of what the browsers provide:
//
//                          | event.wheelDelta | event.detail
//        ------------------+------------------+--------------
//          Safari v5/OS X  |       -120       |       0
//          Safari v5/Win7  |       -120       |       0
//         Chrome v17/OS X  |       -120       |       0
//         Chrome v17/Win7  |       -120       |       0
//                IE9/Win7  |       -120       |   undefined
//         Firefox v4/OS X  |     undefined    |       1
//         Firefox v4/Win7  |     undefined    |       3
//
// ----------------------------------------------------------------------------
// Reasonable defaults

var PIXEL_STEP = 10;
var LINE_HEIGHT = 40;
var PAGE_HEIGHT = 800;
function normalizeWheel(wheelEvent) {
  var sX = 0; // spinX

  var sY = 0; // spinY

  var pX = 0; // pixelX

  var pY = 0; // pixelY
  // Legacy

  if ('detail' in wheelEvent) {
    sY = wheelEvent.detail;
  }

  if ('wheelDelta' in wheelEvent) {
    sY = -wheelEvent.wheelDelta / 120;
  }

  if ('wheelDeltaY' in wheelEvent) {
    sY = -wheelEvent.wheelDeltaY / 120;
  }

  if ('wheelDeltaX' in wheelEvent) {
    sX = -wheelEvent.wheelDeltaX / 120;
  } // side scrolling on FF with DOMMouseScroll


  if ('axis' in wheelEvent && wheelEvent.axis === wheelEvent.HORIZONTAL_AXIS) {
    sX = sY;
    sY = 0;
  }

  pX = sX * PIXEL_STEP;
  pY = sY * PIXEL_STEP;

  if ('deltaY' in wheelEvent) {
    pY = wheelEvent.deltaY;
  }

  if ('deltaX' in wheelEvent) {
    pX = wheelEvent.deltaX;
  }

  if ((pX || pY) && wheelEvent.deltaMode) {
    if (wheelEvent.deltaMode === 1) {
      // delta in LINE units
      pX *= LINE_HEIGHT;
      pY *= LINE_HEIGHT;
    } else {
      // delta in PAGE units
      pX *= PAGE_HEIGHT;
      pY *= PAGE_HEIGHT;
    }
  } // Fall-back if spin cannot be determined


  if (pX && !sX) {
    sX = pX < 1 ? -1 : 1;
  }

  if (pY && !sY) {
    sY = pY < 1 ? -1 : 1;
  }

  return {
    spinX: sX,
    spinY: sY,
    pixelX: pX,
    pixelY: pY
  };
} // ----------------------------------------------------------------------------
// Default export
// ----------------------------------------------------------------------------

var macro = {
  algo: algo,
  capitalize: capitalize,
  chain: chain,
  debounce: debounce,
  enumToString: enumToString,
  event: event,
  EVENT_ABORT: EVENT_ABORT,
  formatBytesToProperUnit: formatBytesToProperUnit,
  formatNumbersWithThousandSeparator: formatNumbersWithThousandSeparator,
  get: get,
  getArray: getArray,
  getCurrentGlobalMTime: getCurrentGlobalMTime,
  getStateArrayMapFunc: getStateArrayMapFunc,
  isVtkObject: isVtkObject,
  keystore: keystore,
  newInstance: newInstance,
  newTypedArray: newTypedArray,
  newTypedArrayFrom: newTypedArrayFrom,
  normalizeWheel: normalizeWheel,
  obj: obj,
  proxy: proxy,
  proxyPropertyMapping: proxyPropertyMapping,
  proxyPropertyState: proxyPropertyState,
  safeArrays: safeArrays,
  set: set,
  setArray: setArray,
  setGet: setGet,
  setGetArray: setGetArray,
  setImmediate: setImmediateVTK,
  setLoggerFunction: setLoggerFunction,
  throttle: throttle,
  traverseInstanceTree: traverseInstanceTree,
  TYPED_ARRAYS: TYPED_ARRAYS,
  // deprecated todo remove on breaking API revision
  uncapitalize: uncapitalize,
  VOID: VOID,
  vtkDebugMacro: vtkDebugMacro,
  vtkErrorMacro: vtkErrorMacro,
  vtkInfoMacro: vtkInfoMacro,
  vtkLogMacro: vtkLogMacro,
  vtkOnceErrorMacro: vtkOnceErrorMacro,
  vtkWarningMacro: vtkWarningMacro
};




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/vendor/style-inject/dist/style-inject.es.js":
/*!***********************************************************************************!*\
  !*** ../node_modules/@kitware/vtk.js/vendor/style-inject/dist/style-inject.es.js ***!
  \***********************************************************************************/
/*! exports provided: s */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "s", function() { return styleInject; });
function styleInject(css, ref) {
  if ( ref === void 0 ) ref = {};
  var insertAt = ref.insertAt;

  if (!css || typeof document === 'undefined') { return; }

  var head = document.head || document.getElementsByTagName('head')[0];
  var style = document.createElement('style');
  style.type = 'text/css';

  if (insertAt === 'top') {
    if (head.firstChild) {
      head.insertBefore(style, head.firstChild);
    } else {
      head.appendChild(style);
    }
  } else {
    head.appendChild(style);
  }

  if (style.styleSheet) {
    style.styleSheet.cssText = css;
  } else {
    style.appendChild(document.createTextNode(css));
  }
}




/***/ }),

/***/ "../node_modules/@kitware/vtk.js/vtk.js":
/*!**********************************************!*\
  !*** ../node_modules/@kitware/vtk.js/vtk.js ***!
  \**********************************************/
/*! exports provided: default, vtkGlobal */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return vtk; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vtkGlobal", function() { return vtkGlobal; });
/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "../node_modules/@babel/runtime/helpers/typeof.js");
/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "../node_modules/@babel/runtime/helpers/defineProperty.js");
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var globalthis__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! globalthis */ "../node_modules/globalthis/index.js");
/* harmony import */ var globalthis__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(globalthis__WEBPACK_IMPORTED_MODULE_2__);




function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1___default()(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var vtkGlobal = globalthis__WEBPACK_IMPORTED_MODULE_2___default()(); // returns native globalThis if compliant

var factoryMapping = {
  vtkObject: function vtkObject() {
    return null;
  }
};
function vtk(obj) {
  if (obj === null || obj === undefined) {
    return obj;
  }

  if (obj.isA) {
    return obj;
  }

  if (!obj.vtkClass) {
    if (vtkGlobal.console && vtkGlobal.console.error) {
      vtkGlobal.console.error('Invalid VTK object');
    }

    return null;
  }

  var constructor = factoryMapping[obj.vtkClass];

  if (!constructor) {
    if (vtkGlobal.console && vtkGlobal.console.error) {
      vtkGlobal.console.error("No vtk class found for Object of type ".concat(obj.vtkClass));
    }

    return null;
  } // Shallow copy object


  var model = _objectSpread({}, obj); // Convert into vtkObject any nested key


  Object.keys(model).forEach(function (keyName) {
    if (model[keyName] && _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(model[keyName]) === 'object' && model[keyName].vtkClass) {
      model[keyName] = vtk(model[keyName]);
    }
  }); // Return the root

  var newInst = constructor(model);

  if (newInst && newInst.modified) {
    newInst.modified();
  }

  return newInst;
}

function register(vtkClassName, constructor) {
  factoryMapping[vtkClassName] = constructor;
} // Nest register method under the vtk function


vtk.register = register;




/***/ }),

/***/ "../node_modules/d3-array/src/array.js":
/*!*********************************************!*\
  !*** ../node_modules/d3-array/src/array.js ***!
  \*********************************************/
/*! exports provided: slice, map */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "slice", function() { return slice; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "map", function() { return map; });
var array = Array.prototype;

var slice = array.slice;
var map = array.map;


/***/ }),

/***/ "../node_modules/d3-array/src/ascending.js":
/*!*************************************************!*\
  !*** ../node_modules/d3-array/src/ascending.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return ascending; });
function ascending(a, b) {
  return a == null || b == null ? NaN : a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;
}


/***/ }),

/***/ "../node_modules/d3-array/src/bin.js":
/*!*******************************************!*\
  !*** ../node_modules/d3-array/src/bin.js ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return bin; });
/* harmony import */ var _array_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./array.js */ "../node_modules/d3-array/src/array.js");
/* harmony import */ var _bisect_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./bisect.js */ "../node_modules/d3-array/src/bisect.js");
/* harmony import */ var _constant_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./constant.js */ "../node_modules/d3-array/src/constant.js");
/* harmony import */ var _extent_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./extent.js */ "../node_modules/d3-array/src/extent.js");
/* harmony import */ var _identity_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./identity.js */ "../node_modules/d3-array/src/identity.js");
/* harmony import */ var _nice_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./nice.js */ "../node_modules/d3-array/src/nice.js");
/* harmony import */ var _ticks_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./ticks.js */ "../node_modules/d3-array/src/ticks.js");
/* harmony import */ var _threshold_sturges_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./threshold/sturges.js */ "../node_modules/d3-array/src/threshold/sturges.js");









function bin() {
  var value = _identity_js__WEBPACK_IMPORTED_MODULE_4__["default"],
      domain = _extent_js__WEBPACK_IMPORTED_MODULE_3__["default"],
      threshold = _threshold_sturges_js__WEBPACK_IMPORTED_MODULE_7__["default"];

  function histogram(data) {
    if (!Array.isArray(data)) data = Array.from(data);

    var i,
        n = data.length,
        x,
        values = new Array(n);

    for (i = 0; i < n; ++i) {
      values[i] = value(data[i], i, data);
    }

    var xz = domain(values),
        x0 = xz[0],
        x1 = xz[1],
        tz = threshold(values, x0, x1);

    // Convert number of thresholds into uniform thresholds, and nice the
    // default domain accordingly.
    if (!Array.isArray(tz)) {
      const max = x1, tn = +tz;
      if (domain === _extent_js__WEBPACK_IMPORTED_MODULE_3__["default"]) [x0, x1] = Object(_nice_js__WEBPACK_IMPORTED_MODULE_5__["default"])(x0, x1, tn);
      tz = Object(_ticks_js__WEBPACK_IMPORTED_MODULE_6__["default"])(x0, x1, tn);

      // If the last threshold is coincident with the domain’s upper bound, the
      // last bin will be zero-width. If the default domain is used, and this
      // last threshold is coincident with the maximum input value, we can
      // extend the niced upper bound by one tick to ensure uniform bin widths;
      // otherwise, we simply remove the last threshold. Note that we don’t
      // coerce values or the domain to numbers, and thus must be careful to
      // compare order (>=) rather than strict equality (===)!
      if (tz[tz.length - 1] >= x1) {
        if (max >= x1 && domain === _extent_js__WEBPACK_IMPORTED_MODULE_3__["default"]) {
          const step = Object(_ticks_js__WEBPACK_IMPORTED_MODULE_6__["tickIncrement"])(x0, x1, tn);
          if (isFinite(step)) {
            if (step > 0) {
              x1 = (Math.floor(x1 / step) + 1) * step;
            } else if (step < 0) {
              x1 = (Math.ceil(x1 * -step) + 1) / -step;
            }
          }
        } else {
          tz.pop();
        }
      }
    }

    // Remove any thresholds outside the domain.
    var m = tz.length;
    while (tz[0] <= x0) tz.shift(), --m;
    while (tz[m - 1] > x1) tz.pop(), --m;

    var bins = new Array(m + 1),
        bin;

    // Initialize bins.
    for (i = 0; i <= m; ++i) {
      bin = bins[i] = [];
      bin.x0 = i > 0 ? tz[i - 1] : x0;
      bin.x1 = i < m ? tz[i] : x1;
    }

    // Assign data to bins by value, ignoring any outside the domain.
    for (i = 0; i < n; ++i) {
      x = values[i];
      if (x != null && x0 <= x && x <= x1) {
        bins[Object(_bisect_js__WEBPACK_IMPORTED_MODULE_1__["default"])(tz, x, 0, m)].push(data[i]);
      }
    }

    return bins;
  }

  histogram.value = function(_) {
    return arguments.length ? (value = typeof _ === "function" ? _ : Object(_constant_js__WEBPACK_IMPORTED_MODULE_2__["default"])(_), histogram) : value;
  };

  histogram.domain = function(_) {
    return arguments.length ? (domain = typeof _ === "function" ? _ : Object(_constant_js__WEBPACK_IMPORTED_MODULE_2__["default"])([_[0], _[1]]), histogram) : domain;
  };

  histogram.thresholds = function(_) {
    return arguments.length ? (threshold = typeof _ === "function" ? _ : Array.isArray(_) ? Object(_constant_js__WEBPACK_IMPORTED_MODULE_2__["default"])(_array_js__WEBPACK_IMPORTED_MODULE_0__["slice"].call(_)) : Object(_constant_js__WEBPACK_IMPORTED_MODULE_2__["default"])(_), histogram) : threshold;
  };

  return histogram;
}


/***/ }),

/***/ "../node_modules/d3-array/src/bisect.js":
/*!**********************************************!*\
  !*** ../node_modules/d3-array/src/bisect.js ***!
  \**********************************************/
/*! exports provided: bisectRight, bisectLeft, bisectCenter, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bisectRight", function() { return bisectRight; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bisectLeft", function() { return bisectLeft; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bisectCenter", function() { return bisectCenter; });
/* harmony import */ var _ascending_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ascending.js */ "../node_modules/d3-array/src/ascending.js");
/* harmony import */ var _bisector_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./bisector.js */ "../node_modules/d3-array/src/bisector.js");
/* harmony import */ var _number_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./number.js */ "../node_modules/d3-array/src/number.js");




const ascendingBisect = Object(_bisector_js__WEBPACK_IMPORTED_MODULE_1__["default"])(_ascending_js__WEBPACK_IMPORTED_MODULE_0__["default"]);
const bisectRight = ascendingBisect.right;
const bisectLeft = ascendingBisect.left;
const bisectCenter = Object(_bisector_js__WEBPACK_IMPORTED_MODULE_1__["default"])(_number_js__WEBPACK_IMPORTED_MODULE_2__["default"]).center;
/* harmony default export */ __webpack_exports__["default"] = (bisectRight);


/***/ }),

/***/ "../node_modules/d3-array/src/bisector.js":
/*!************************************************!*\
  !*** ../node_modules/d3-array/src/bisector.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return bisector; });
/* harmony import */ var _ascending_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ascending.js */ "../node_modules/d3-array/src/ascending.js");


function bisector(f) {
  let delta = f;
  let compare1 = f;
  let compare2 = f;

  if (f.length !== 2) {
    delta = (d, x) => f(d) - x;
    compare1 = _ascending_js__WEBPACK_IMPORTED_MODULE_0__["default"];
    compare2 = (d, x) => Object(_ascending_js__WEBPACK_IMPORTED_MODULE_0__["default"])(f(d), x);
  }

  function left(a, x, lo = 0, hi = a.length) {
    if (lo < hi) {
      if (compare1(x, x) !== 0) return hi;
      do {
        const mid = (lo + hi) >>> 1;
        if (compare2(a[mid], x) < 0) lo = mid + 1;
        else hi = mid;
      } while (lo < hi);
    }
    return lo;
  }

  function right(a, x, lo = 0, hi = a.length) {
    if (lo < hi) {
      if (compare1(x, x) !== 0) return hi;
      do {
        const mid = (lo + hi) >>> 1;
        if (compare2(a[mid], x) <= 0) lo = mid + 1;
        else hi = mid;
      } while (lo < hi);
    }
    return lo;
  }

  function center(a, x, lo = 0, hi = a.length) {
    const i = left(a, x, lo, hi - 1);
    return i > lo && delta(a[i - 1], x) > -delta(a[i], x) ? i - 1 : i;
  }

  return {left, center, right};
}


/***/ }),

/***/ "../node_modules/d3-array/src/constant.js":
/*!************************************************!*\
  !*** ../node_modules/d3-array/src/constant.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return constant; });
function constant(x) {
  return () => x;
}


/***/ }),

/***/ "../node_modules/d3-array/src/count.js":
/*!*********************************************!*\
  !*** ../node_modules/d3-array/src/count.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return count; });
function count(values, valueof) {
  let count = 0;
  if (valueof === undefined) {
    for (let value of values) {
      if (value != null && (value = +value) >= value) {
        ++count;
      }
    }
  } else {
    let index = -1;
    for (let value of values) {
      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {
        ++count;
      }
    }
  }
  return count;
}


/***/ }),

/***/ "../node_modules/d3-array/src/cross.js":
/*!*********************************************!*\
  !*** ../node_modules/d3-array/src/cross.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return cross; });
function length(array) {
  return array.length | 0;
}

function empty(length) {
  return !(length > 0);
}

function arrayify(values) {
  return typeof values !== "object" || "length" in values ? values : Array.from(values);
}

function reducer(reduce) {
  return values => reduce(...values);
}

function cross(...values) {
  const reduce = typeof values[values.length - 1] === "function" && reducer(values.pop());
  values = values.map(arrayify);
  const lengths = values.map(length);
  const j = values.length - 1;
  const index = new Array(j + 1).fill(0);
  const product = [];
  if (j < 0 || lengths.some(empty)) return product;
  while (true) {
    product.push(index.map((j, i) => values[i][j]));
    let i = j;
    while (++index[i] === lengths[i]) {
      if (i === 0) return reduce ? product.map(reduce) : product;
      index[i--] = 0;
    }
  }
}


/***/ }),

/***/ "../node_modules/d3-array/src/cumsum.js":
/*!**********************************************!*\
  !*** ../node_modules/d3-array/src/cumsum.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return cumsum; });
function cumsum(values, valueof) {
  var sum = 0, index = 0;
  return Float64Array.from(values, valueof === undefined
    ? v => (sum += +v || 0)
    : v => (sum += +valueof(v, index++, values) || 0));
}

/***/ }),

/***/ "../node_modules/d3-array/src/descending.js":
/*!**************************************************!*\
  !*** ../node_modules/d3-array/src/descending.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return descending; });
function descending(a, b) {
  return a == null || b == null ? NaN
    : b < a ? -1
    : b > a ? 1
    : b >= a ? 0
    : NaN;
}


/***/ }),

/***/ "../node_modules/d3-array/src/deviation.js":
/*!*************************************************!*\
  !*** ../node_modules/d3-array/src/deviation.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return deviation; });
/* harmony import */ var _variance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./variance.js */ "../node_modules/d3-array/src/variance.js");


function deviation(values, valueof) {
  const v = Object(_variance_js__WEBPACK_IMPORTED_MODULE_0__["default"])(values, valueof);
  return v ? Math.sqrt(v) : v;
}


/***/ }),

/***/ "../node_modules/d3-array/src/difference.js":
/*!**************************************************!*\
  !*** ../node_modules/d3-array/src/difference.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return difference; });
/* harmony import */ var internmap__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! internmap */ "../node_modules/internmap/src/index.js");


function difference(values, ...others) {
  values = new internmap__WEBPACK_IMPORTED_MODULE_0__["InternSet"](values);
  for (const other of others) {
    for (const value of other) {
      values.delete(value);
    }
  }
  return values;
}


/***/ }),

/***/ "../node_modules/d3-array/src/disjoint.js":
/*!************************************************!*\
  !*** ../node_modules/d3-array/src/disjoint.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return disjoint; });
/* harmony import */ var internmap__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! internmap */ "../node_modules/internmap/src/index.js");


function disjoint(values, other) {
  const iterator = other[Symbol.iterator](), set = new internmap__WEBPACK_IMPORTED_MODULE_0__["InternSet"]();
  for (const v of values) {
    if (set.has(v)) return false;
    let value, done;
    while (({value, done} = iterator.next())) {
      if (done) break;
      if (Object.is(v, value)) return false;
      set.add(value);
    }
  }
  return true;
}


/***/ }),

/***/ "../node_modules/d3-array/src/every.js":
/*!*********************************************!*\
  !*** ../node_modules/d3-array/src/every.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return every; });
function every(values, test) {
  if (typeof test !== "function") throw new TypeError("test is not a function");
  let index = -1;
  for (const value of values) {
    if (!test(value, ++index, values)) {
      return false;
    }
  }
  return true;
}


/***/ }),

/***/ "../node_modules/d3-array/src/extent.js":
/*!**********************************************!*\
  !*** ../node_modules/d3-array/src/extent.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return extent; });
function extent(values, valueof) {
  let min;
  let max;
  if (valueof === undefined) {
    for (const value of values) {
      if (value != null) {
        if (min === undefined) {
          if (value >= value) min = max = value;
        } else {
          if (min > value) min = value;
          if (max < value) max = value;
        }
      }
    }
  } else {
    let index = -1;
    for (let value of values) {
      if ((value = valueof(value, ++index, values)) != null) {
        if (min === undefined) {
          if (value >= value) min = max = value;
        } else {
          if (min > value) min = value;
          if (max < value) max = value;
        }
      }
    }
  }
  return [min, max];
}


/***/ }),

/***/ "../node_modules/d3-array/src/filter.js":
/*!**********************************************!*\
  !*** ../node_modules/d3-array/src/filter.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return filter; });
function filter(values, test) {
  if (typeof test !== "function") throw new TypeError("test is not a function");
  const array = [];
  let index = -1;
  for (const value of values) {
    if (test(value, ++index, values)) {
      array.push(value);
    }
  }
  return array;
}


/***/ }),

/***/ "../node_modules/d3-array/src/fsum.js":
/*!********************************************!*\
  !*** ../node_modules/d3-array/src/fsum.js ***!
  \********************************************/
/*! exports provided: Adder, fsum, fcumsum */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Adder", function() { return Adder; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fsum", function() { return fsum; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fcumsum", function() { return fcumsum; });
// https://github.com/python/cpython/blob/a74eea238f5baba15797e2e8b570d153bc8690a7/Modules/mathmodule.c#L1423
class Adder {
  constructor() {
    this._partials = new Float64Array(32);
    this._n = 0;
  }
  add(x) {
    const p = this._partials;
    let i = 0;
    for (let j = 0; j < this._n && j < 32; j++) {
      const y = p[j],
        hi = x + y,
        lo = Math.abs(x) < Math.abs(y) ? x - (hi - y) : y - (hi - x);
      if (lo) p[i++] = lo;
      x = hi;
    }
    p[i] = x;
    this._n = i + 1;
    return this;
  }
  valueOf() {
    const p = this._partials;
    let n = this._n, x, y, lo, hi = 0;
    if (n > 0) {
      hi = p[--n];
      while (n > 0) {
        x = hi;
        y = p[--n];
        hi = x + y;
        lo = y - (hi - x);
        if (lo) break;
      }
      if (n > 0 && ((lo < 0 && p[n - 1] < 0) || (lo > 0 && p[n - 1] > 0))) {
        y = lo * 2;
        x = hi + y;
        if (y == x - hi) hi = x;
      }
    }
    return hi;
  }
}

function fsum(values, valueof) {
  const adder = new Adder();
  if (valueof === undefined) {
    for (let value of values) {
      if (value = +value) {
        adder.add(value);
      }
    }
  } else {
    let index = -1;
    for (let value of values) {
      if (value = +valueof(value, ++index, values)) {
        adder.add(value);
      }
    }
  }
  return +adder;
}

function fcumsum(values, valueof) {
  const adder = new Adder();
  let index = -1;
  return Float64Array.from(values, valueof === undefined
      ? v => adder.add(+v || 0)
      : v => adder.add(+valueof(v, ++index, values) || 0)
  );
}


/***/ }),

/***/ "../node_modules/d3-array/src/greatest.js":
/*!************************************************!*\
  !*** ../node_modules/d3-array/src/greatest.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return greatest; });
/* harmony import */ var _ascending_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ascending.js */ "../node_modules/d3-array/src/ascending.js");


function greatest(values, compare = _ascending_js__WEBPACK_IMPORTED_MODULE_0__["default"]) {
  let max;
  let defined = false;
  if (compare.length === 1) {
    let maxValue;
    for (const element of values) {
      const value = compare(element);
      if (defined
          ? Object(_ascending_js__WEBPACK_IMPORTED_MODULE_0__["default"])(value, maxValue) > 0
          : Object(_ascending_js__WEBPACK_IMPORTED_MODULE_0__["default"])(value, value) === 0) {
        max = element;
        maxValue = value;
        defined = true;
      }
    }
  } else {
    for (const value of values) {
      if (defined
          ? compare(value, max) > 0
          : compare(value, value) === 0) {
        max = value;
        defined = true;
      }
    }
  }
  return max;
}


/***/ }),

/***/ "../node_modules/d3-array/src/greatestIndex.js":
/*!*****************************************************!*\
  !*** ../node_modules/d3-array/src/greatestIndex.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return greatestIndex; });
/* harmony import */ var _ascending_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ascending.js */ "../node_modules/d3-array/src/ascending.js");
/* harmony import */ var _maxIndex_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./maxIndex.js */ "../node_modules/d3-array/src/maxIndex.js");



function greatestIndex(values, compare = _ascending_js__WEBPACK_IMPORTED_MODULE_0__["default"]) {
  if (compare.length === 1) return Object(_maxIndex_js__WEBPACK_IMPORTED_MODULE_1__["default"])(values, compare);
  let maxValue;
  let max = -1;
  let index = -1;
  for (const value of values) {
    ++index;
    if (max < 0
        ? compare(value, value) === 0
        : compare(value, maxValue) > 0) {
      maxValue = value;
      max = index;
    }
  }
  return max;
}


/***/ }),

/***/ "../node_modules/d3-array/src/group.js":
/*!*********************************************!*\
  !*** ../node_modules/d3-array/src/group.js ***!
  \*********************************************/
/*! exports provided: default, groups, flatGroup, flatRollup, rollup, rollups, index, indexes */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return group; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "groups", function() { return groups; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "flatGroup", function() { return flatGroup; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "flatRollup", function() { return flatRollup; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rollup", function() { return rollup; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rollups", function() { return rollups; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "index", function() { return index; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "indexes", function() { return indexes; });
/* harmony import */ var internmap__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! internmap */ "../node_modules/internmap/src/index.js");
/* harmony import */ var _identity_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./identity.js */ "../node_modules/d3-array/src/identity.js");



function group(values, ...keys) {
  return nest(values, _identity_js__WEBPACK_IMPORTED_MODULE_1__["default"], _identity_js__WEBPACK_IMPORTED_MODULE_1__["default"], keys);
}

function groups(values, ...keys) {
  return nest(values, Array.from, _identity_js__WEBPACK_IMPORTED_MODULE_1__["default"], keys);
}

function flatten(groups, keys) {
  for (let i = 1, n = keys.length; i < n; ++i) {
    groups = groups.flatMap(g => g.pop().map(([key, value]) => [...g, key, value]));
  }
  return groups;
}

function flatGroup(values, ...keys) {
  return flatten(groups(values, ...keys), keys);
}

function flatRollup(values, reduce, ...keys) {
  return flatten(rollups(values, reduce, ...keys), keys);
}

function rollup(values, reduce, ...keys) {
  return nest(values, _identity_js__WEBPACK_IMPORTED_MODULE_1__["default"], reduce, keys);
}

function rollups(values, reduce, ...keys) {
  return nest(values, Array.from, reduce, keys);
}

function index(values, ...keys) {
  return nest(values, _identity_js__WEBPACK_IMPORTED_MODULE_1__["default"], unique, keys);
}

function indexes(values, ...keys) {
  return nest(values, Array.from, unique, keys);
}

function unique(values) {
  if (values.length !== 1) throw new Error("duplicate key");
  return values[0];
}

function nest(values, map, reduce, keys) {
  return (function regroup(values, i) {
    if (i >= keys.length) return reduce(values);
    const groups = new internmap__WEBPACK_IMPORTED_MODULE_0__["InternMap"]();
    const keyof = keys[i++];
    let index = -1;
    for (const value of values) {
      const key = keyof(value, ++index, values);
      const group = groups.get(key);
      if (group) group.push(value);
      else groups.set(key, [value]);
    }
    for (const [key, values] of groups) {
      groups.set(key, regroup(values, i));
    }
    return map(groups);
  })(values, 0);
}


/***/ }),

/***/ "../node_modules/d3-array/src/groupSort.js":
/*!*************************************************!*\
  !*** ../node_modules/d3-array/src/groupSort.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return groupSort; });
/* harmony import */ var _ascending_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ascending.js */ "../node_modules/d3-array/src/ascending.js");
/* harmony import */ var _group_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./group.js */ "../node_modules/d3-array/src/group.js");
/* harmony import */ var _sort_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./sort.js */ "../node_modules/d3-array/src/sort.js");




function groupSort(values, reduce, key) {
  return (reduce.length !== 2
    ? Object(_sort_js__WEBPACK_IMPORTED_MODULE_2__["default"])(Object(_group_js__WEBPACK_IMPORTED_MODULE_1__["rollup"])(values, reduce, key), (([ak, av], [bk, bv]) => Object(_ascending_js__WEBPACK_IMPORTED_MODULE_0__["default"])(av, bv) || Object(_ascending_js__WEBPACK_IMPORTED_MODULE_0__["default"])(ak, bk)))
    : Object(_sort_js__WEBPACK_IMPORTED_MODULE_2__["default"])(Object(_group_js__WEBPACK_IMPORTED_MODULE_1__["default"])(values, key), (([ak, av], [bk, bv]) => reduce(av, bv) || Object(_ascending_js__WEBPACK_IMPORTED_MODULE_0__["default"])(ak, bk))))
    .map(([key]) => key);
}


/***/ }),

/***/ "../node_modules/d3-array/src/identity.js":
/*!************************************************!*\
  !*** ../node_modules/d3-array/src/identity.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return identity; });
function identity(x) {
  return x;
}


/***/ }),

/***/ "../node_modules/d3-array/src/index.js":
/*!*********************************************!*\
  !*** ../node_modules/d3-array/src/index.js ***!
  \*********************************************/
/*! exports provided: bisect, bisectRight, bisectLeft, bisectCenter, ascending, bisector, count, cross, cumsum, descending, deviation, extent, Adder, fsum, fcumsum, group, flatGroup, flatRollup, groups, index, indexes, rollup, rollups, groupSort, bin, histogram, thresholdFreedmanDiaconis, thresholdScott, thresholdSturges, max, maxIndex, mean, median, merge, min, minIndex, mode, nice, pairs, permute, quantile, quantileSorted, quickselect, range, rank, least, leastIndex, greatest, greatestIndex, scan, shuffle, shuffler, sum, ticks, tickIncrement, tickStep, transpose, variance, zip, every, some, filter, map, reduce, reverse, sort, difference, disjoint, intersection, subset, superset, union, InternMap, InternSet */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _bisect_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bisect.js */ "../node_modules/d3-array/src/bisect.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bisect", function() { return _bisect_js__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bisectRight", function() { return _bisect_js__WEBPACK_IMPORTED_MODULE_0__["bisectRight"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bisectLeft", function() { return _bisect_js__WEBPACK_IMPORTED_MODULE_0__["bisectLeft"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bisectCenter", function() { return _bisect_js__WEBPACK_IMPORTED_MODULE_0__["bisectCenter"]; });

/* harmony import */ var _ascending_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ascending.js */ "../node_modules/d3-array/src/ascending.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ascending", function() { return _ascending_js__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _bisector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./bisector.js */ "../node_modules/d3-array/src/bisector.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bisector", function() { return _bisector_js__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony import */ var _count_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./count.js */ "../node_modules/d3-array/src/count.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "count", function() { return _count_js__WEBPACK_IMPORTED_MODULE_3__["default"]; });

/* harmony import */ var _cross_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./cross.js */ "../node_modules/d3-array/src/cross.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "cross", function() { return _cross_js__WEBPACK_IMPORTED_MODULE_4__["default"]; });

/* harmony import */ var _cumsum_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./cumsum.js */ "../node_modules/d3-array/src/cumsum.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "cumsum", function() { return _cumsum_js__WEBPACK_IMPORTED_MODULE_5__["default"]; });

/* harmony import */ var _descending_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./descending.js */ "../node_modules/d3-array/src/descending.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "descending", function() { return _descending_js__WEBPACK_IMPORTED_MODULE_6__["default"]; });

/* harmony import */ var _deviation_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./deviation.js */ "../node_modules/d3-array/src/deviation.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "deviation", function() { return _deviation_js__WEBPACK_IMPORTED_MODULE_7__["default"]; });

/* harmony import */ var _extent_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./extent.js */ "../node_modules/d3-array/src/extent.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "extent", function() { return _extent_js__WEBPACK_IMPORTED_MODULE_8__["default"]; });

/* harmony import */ var _fsum_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./fsum.js */ "../node_modules/d3-array/src/fsum.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Adder", function() { return _fsum_js__WEBPACK_IMPORTED_MODULE_9__["Adder"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "fsum", function() { return _fsum_js__WEBPACK_IMPORTED_MODULE_9__["fsum"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "fcumsum", function() { return _fsum_js__WEBPACK_IMPORTED_MODULE_9__["fcumsum"]; });

/* harmony import */ var _group_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./group.js */ "../node_modules/d3-array/src/group.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "group", function() { return _group_js__WEBPACK_IMPORTED_MODULE_10__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "flatGroup", function() { return _group_js__WEBPACK_IMPORTED_MODULE_10__["flatGroup"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "flatRollup", function() { return _group_js__WEBPACK_IMPORTED_MODULE_10__["flatRollup"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "groups", function() { return _group_js__WEBPACK_IMPORTED_MODULE_10__["groups"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "index", function() { return _group_js__WEBPACK_IMPORTED_MODULE_10__["index"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "indexes", function() { return _group_js__WEBPACK_IMPORTED_MODULE_10__["indexes"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "rollup", function() { return _group_js__WEBPACK_IMPORTED_MODULE_10__["rollup"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "rollups", function() { return _group_js__WEBPACK_IMPORTED_MODULE_10__["rollups"]; });

/* harmony import */ var _groupSort_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./groupSort.js */ "../node_modules/d3-array/src/groupSort.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "groupSort", function() { return _groupSort_js__WEBPACK_IMPORTED_MODULE_11__["default"]; });

/* harmony import */ var _bin_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./bin.js */ "../node_modules/d3-array/src/bin.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bin", function() { return _bin_js__WEBPACK_IMPORTED_MODULE_12__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "histogram", function() { return _bin_js__WEBPACK_IMPORTED_MODULE_12__["default"]; });

/* harmony import */ var _threshold_freedmanDiaconis_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./threshold/freedmanDiaconis.js */ "../node_modules/d3-array/src/threshold/freedmanDiaconis.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "thresholdFreedmanDiaconis", function() { return _threshold_freedmanDiaconis_js__WEBPACK_IMPORTED_MODULE_13__["default"]; });

/* harmony import */ var _threshold_scott_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./threshold/scott.js */ "../node_modules/d3-array/src/threshold/scott.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "thresholdScott", function() { return _threshold_scott_js__WEBPACK_IMPORTED_MODULE_14__["default"]; });

/* harmony import */ var _threshold_sturges_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./threshold/sturges.js */ "../node_modules/d3-array/src/threshold/sturges.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "thresholdSturges", function() { return _threshold_sturges_js__WEBPACK_IMPORTED_MODULE_15__["default"]; });

/* harmony import */ var _max_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./max.js */ "../node_modules/d3-array/src/max.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "max", function() { return _max_js__WEBPACK_IMPORTED_MODULE_16__["default"]; });

/* harmony import */ var _maxIndex_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./maxIndex.js */ "../node_modules/d3-array/src/maxIndex.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "maxIndex", function() { return _maxIndex_js__WEBPACK_IMPORTED_MODULE_17__["default"]; });

/* harmony import */ var _mean_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./mean.js */ "../node_modules/d3-array/src/mean.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "mean", function() { return _mean_js__WEBPACK_IMPORTED_MODULE_18__["default"]; });

/* harmony import */ var _median_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./median.js */ "../node_modules/d3-array/src/median.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "median", function() { return _median_js__WEBPACK_IMPORTED_MODULE_19__["default"]; });

/* harmony import */ var _merge_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./merge.js */ "../node_modules/d3-array/src/merge.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "merge", function() { return _merge_js__WEBPACK_IMPORTED_MODULE_20__["default"]; });

/* harmony import */ var _min_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./min.js */ "../node_modules/d3-array/src/min.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "min", function() { return _min_js__WEBPACK_IMPORTED_MODULE_21__["default"]; });

/* harmony import */ var _minIndex_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./minIndex.js */ "../node_modules/d3-array/src/minIndex.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "minIndex", function() { return _minIndex_js__WEBPACK_IMPORTED_MODULE_22__["default"]; });

/* harmony import */ var _mode_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./mode.js */ "../node_modules/d3-array/src/mode.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "mode", function() { return _mode_js__WEBPACK_IMPORTED_MODULE_23__["default"]; });

/* harmony import */ var _nice_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./nice.js */ "../node_modules/d3-array/src/nice.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "nice", function() { return _nice_js__WEBPACK_IMPORTED_MODULE_24__["default"]; });

/* harmony import */ var _pairs_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./pairs.js */ "../node_modules/d3-array/src/pairs.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pairs", function() { return _pairs_js__WEBPACK_IMPORTED_MODULE_25__["default"]; });

/* harmony import */ var _permute_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./permute.js */ "../node_modules/d3-array/src/permute.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "permute", function() { return _permute_js__WEBPACK_IMPORTED_MODULE_26__["default"]; });

/* harmony import */ var _quantile_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./quantile.js */ "../node_modules/d3-array/src/quantile.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "quantile", function() { return _quantile_js__WEBPACK_IMPORTED_MODULE_27__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "quantileSorted", function() { return _quantile_js__WEBPACK_IMPORTED_MODULE_27__["quantileSorted"]; });

/* harmony import */ var _quickselect_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./quickselect.js */ "../node_modules/d3-array/src/quickselect.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "quickselect", function() { return _quickselect_js__WEBPACK_IMPORTED_MODULE_28__["default"]; });

/* harmony import */ var _range_js__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./range.js */ "../node_modules/d3-array/src/range.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "range", function() { return _range_js__WEBPACK_IMPORTED_MODULE_29__["default"]; });

/* harmony import */ var _rank_js__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./rank.js */ "../node_modules/d3-array/src/rank.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "rank", function() { return _rank_js__WEBPACK_IMPORTED_MODULE_30__["default"]; });

/* harmony import */ var _least_js__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./least.js */ "../node_modules/d3-array/src/least.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "least", function() { return _least_js__WEBPACK_IMPORTED_MODULE_31__["default"]; });

/* harmony import */ var _leastIndex_js__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./leastIndex.js */ "../node_modules/d3-array/src/leastIndex.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "leastIndex", function() { return _leastIndex_js__WEBPACK_IMPORTED_MODULE_32__["default"]; });

/* harmony import */ var _greatest_js__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./greatest.js */ "../node_modules/d3-array/src/greatest.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "greatest", function() { return _greatest_js__WEBPACK_IMPORTED_MODULE_33__["default"]; });

/* harmony import */ var _greatestIndex_js__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./greatestIndex.js */ "../node_modules/d3-array/src/greatestIndex.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "greatestIndex", function() { return _greatestIndex_js__WEBPACK_IMPORTED_MODULE_34__["default"]; });

/* harmony import */ var _scan_js__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./scan.js */ "../node_modules/d3-array/src/scan.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scan", function() { return _scan_js__WEBPACK_IMPORTED_MODULE_35__["default"]; });

/* harmony import */ var _shuffle_js__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./shuffle.js */ "../node_modules/d3-array/src/shuffle.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "shuffle", function() { return _shuffle_js__WEBPACK_IMPORTED_MODULE_36__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "shuffler", function() { return _shuffle_js__WEBPACK_IMPORTED_MODULE_36__["shuffler"]; });

/* harmony import */ var _sum_js__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./sum.js */ "../node_modules/d3-array/src/sum.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sum", function() { return _sum_js__WEBPACK_IMPORTED_MODULE_37__["default"]; });

/* harmony import */ var _ticks_js__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ./ticks.js */ "../node_modules/d3-array/src/ticks.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ticks", function() { return _ticks_js__WEBPACK_IMPORTED_MODULE_38__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tickIncrement", function() { return _ticks_js__WEBPACK_IMPORTED_MODULE_38__["tickIncrement"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tickStep", function() { return _ticks_js__WEBPACK_IMPORTED_MODULE_38__["tickStep"]; });

/* harmony import */ var _transpose_js__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ./transpose.js */ "../node_modules/d3-array/src/transpose.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "transpose", function() { return _transpose_js__WEBPACK_IMPORTED_MODULE_39__["default"]; });

/* harmony import */ var _variance_js__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ./variance.js */ "../node_modules/d3-array/src/variance.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "variance", function() { return _variance_js__WEBPACK_IMPORTED_MODULE_40__["default"]; });

/* harmony import */ var _zip_js__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ./zip.js */ "../node_modules/d3-array/src/zip.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "zip", function() { return _zip_js__WEBPACK_IMPORTED_MODULE_41__["default"]; });

/* harmony import */ var _every_js__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ./every.js */ "../node_modules/d3-array/src/every.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "every", function() { return _every_js__WEBPACK_IMPORTED_MODULE_42__["default"]; });

/* harmony import */ var _some_js__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ./some.js */ "../node_modules/d3-array/src/some.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "some", function() { return _some_js__WEBPACK_IMPORTED_MODULE_43__["default"]; });

/* harmony import */ var _filter_js__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ./filter.js */ "../node_modules/d3-array/src/filter.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "filter", function() { return _filter_js__WEBPACK_IMPORTED_MODULE_44__["default"]; });

/* harmony import */ var _map_js__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! ./map.js */ "../node_modules/d3-array/src/map.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "map", function() { return _map_js__WEBPACK_IMPORTED_MODULE_45__["default"]; });

/* harmony import */ var _reduce_js__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! ./reduce.js */ "../node_modules/d3-array/src/reduce.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "reduce", function() { return _reduce_js__WEBPACK_IMPORTED_MODULE_46__["default"]; });

/* harmony import */ var _reverse_js__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! ./reverse.js */ "../node_modules/d3-array/src/reverse.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "reverse", function() { return _reverse_js__WEBPACK_IMPORTED_MODULE_47__["default"]; });

/* harmony import */ var _sort_js__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! ./sort.js */ "../node_modules/d3-array/src/sort.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sort", function() { return _sort_js__WEBPACK_IMPORTED_MODULE_48__["default"]; });

/* harmony import */ var _difference_js__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! ./difference.js */ "../node_modules/d3-array/src/difference.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "difference", function() { return _difference_js__WEBPACK_IMPORTED_MODULE_49__["default"]; });

/* harmony import */ var _disjoint_js__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(/*! ./disjoint.js */ "../node_modules/d3-array/src/disjoint.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "disjoint", function() { return _disjoint_js__WEBPACK_IMPORTED_MODULE_50__["default"]; });

/* harmony import */ var _intersection_js__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(/*! ./intersection.js */ "../node_modules/d3-array/src/intersection.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "intersection", function() { return _intersection_js__WEBPACK_IMPORTED_MODULE_51__["default"]; });

/* harmony import */ var _subset_js__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(/*! ./subset.js */ "../node_modules/d3-array/src/subset.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "subset", function() { return _subset_js__WEBPACK_IMPORTED_MODULE_52__["default"]; });

/* harmony import */ var _superset_js__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(/*! ./superset.js */ "../node_modules/d3-array/src/superset.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "superset", function() { return _superset_js__WEBPACK_IMPORTED_MODULE_53__["default"]; });

/* harmony import */ var _union_js__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(/*! ./union.js */ "../node_modules/d3-array/src/union.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "union", function() { return _union_js__WEBPACK_IMPORTED_MODULE_54__["default"]; });

/* harmony import */ var internmap__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(/*! internmap */ "../node_modules/internmap/src/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "InternMap", function() { return internmap__WEBPACK_IMPORTED_MODULE_55__["InternMap"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "InternSet", function() { return internmap__WEBPACK_IMPORTED_MODULE_55__["InternSet"]; });













 // Deprecated; use bin.






















 // Deprecated; use leastIndex.






















/***/ }),

/***/ "../node_modules/d3-array/src/intersection.js":
/*!****************************************************!*\
  !*** ../node_modules/d3-array/src/intersection.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return intersection; });
/* harmony import */ var internmap__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! internmap */ "../node_modules/internmap/src/index.js");


function intersection(values, ...others) {
  values = new internmap__WEBPACK_IMPORTED_MODULE_0__["InternSet"](values);
  others = others.map(set);
  out: for (const value of values) {
    for (const other of others) {
      if (!other.has(value)) {
        values.delete(value);
        continue out;
      }
    }
  }
  return values;
}

function set(values) {
  return values instanceof internmap__WEBPACK_IMPORTED_MODULE_0__["InternSet"] ? values : new internmap__WEBPACK_IMPORTED_MODULE_0__["InternSet"](values);
}


/***/ }),

/***/ "../node_modules/d3-array/src/least.js":
/*!*********************************************!*\
  !*** ../node_modules/d3-array/src/least.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return least; });
/* harmony import */ var _ascending_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ascending.js */ "../node_modules/d3-array/src/ascending.js");


function least(values, compare = _ascending_js__WEBPACK_IMPORTED_MODULE_0__["default"]) {
  let min;
  let defined = false;
  if (compare.length === 1) {
    let minValue;
    for (const element of values) {
      const value = compare(element);
      if (defined
          ? Object(_ascending_js__WEBPACK_IMPORTED_MODULE_0__["default"])(value, minValue) < 0
          : Object(_ascending_js__WEBPACK_IMPORTED_MODULE_0__["default"])(value, value) === 0) {
        min = element;
        minValue = value;
        defined = true;
      }
    }
  } else {
    for (const value of values) {
      if (defined
          ? compare(value, min) < 0
          : compare(value, value) === 0) {
        min = value;
        defined = true;
      }
    }
  }
  return min;
}


/***/ }),

/***/ "../node_modules/d3-array/src/leastIndex.js":
/*!**************************************************!*\
  !*** ../node_modules/d3-array/src/leastIndex.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return leastIndex; });
/* harmony import */ var _ascending_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ascending.js */ "../node_modules/d3-array/src/ascending.js");
/* harmony import */ var _minIndex_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./minIndex.js */ "../node_modules/d3-array/src/minIndex.js");



function leastIndex(values, compare = _ascending_js__WEBPACK_IMPORTED_MODULE_0__["default"]) {
  if (compare.length === 1) return Object(_minIndex_js__WEBPACK_IMPORTED_MODULE_1__["default"])(values, compare);
  let minValue;
  let min = -1;
  let index = -1;
  for (const value of values) {
    ++index;
    if (min < 0
        ? compare(value, value) === 0
        : compare(value, minValue) < 0) {
      minValue = value;
      min = index;
    }
  }
  return min;
}


/***/ }),

/***/ "../node_modules/d3-array/src/map.js":
/*!*******************************************!*\
  !*** ../node_modules/d3-array/src/map.js ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return map; });
function map(values, mapper) {
  if (typeof values[Symbol.iterator] !== "function") throw new TypeError("values is not iterable");
  if (typeof mapper !== "function") throw new TypeError("mapper is not a function");
  return Array.from(values, (value, index) => mapper(value, index, values));
}


/***/ }),

/***/ "../node_modules/d3-array/src/max.js":
/*!*******************************************!*\
  !*** ../node_modules/d3-array/src/max.js ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return max; });
function max(values, valueof) {
  let max;
  if (valueof === undefined) {
    for (const value of values) {
      if (value != null
          && (max < value || (max === undefined && value >= value))) {
        max = value;
      }
    }
  } else {
    let index = -1;
    for (let value of values) {
      if ((value = valueof(value, ++index, values)) != null
          && (max < value || (max === undefined && value >= value))) {
        max = value;
      }
    }
  }
  return max;
}


/***/ }),

/***/ "../node_modules/d3-array/src/maxIndex.js":
/*!************************************************!*\
  !*** ../node_modules/d3-array/src/maxIndex.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return maxIndex; });
function maxIndex(values, valueof) {
  let max;
  let maxIndex = -1;
  let index = -1;
  if (valueof === undefined) {
    for (const value of values) {
      ++index;
      if (value != null
          && (max < value || (max === undefined && value >= value))) {
        max = value, maxIndex = index;
      }
    }
  } else {
    for (let value of values) {
      if ((value = valueof(value, ++index, values)) != null
          && (max < value || (max === undefined && value >= value))) {
        max = value, maxIndex = index;
      }
    }
  }
  return maxIndex;
}


/***/ }),

/***/ "../node_modules/d3-array/src/mean.js":
/*!********************************************!*\
  !*** ../node_modules/d3-array/src/mean.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return mean; });
function mean(values, valueof) {
  let count = 0;
  let sum = 0;
  if (valueof === undefined) {
    for (let value of values) {
      if (value != null && (value = +value) >= value) {
        ++count, sum += value;
      }
    }
  } else {
    let index = -1;
    for (let value of values) {
      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {
        ++count, sum += value;
      }
    }
  }
  if (count) return sum / count;
}


/***/ }),

/***/ "../node_modules/d3-array/src/median.js":
/*!**********************************************!*\
  !*** ../node_modules/d3-array/src/median.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return median; });
/* harmony import */ var _quantile_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./quantile.js */ "../node_modules/d3-array/src/quantile.js");


function median(values, valueof) {
  return Object(_quantile_js__WEBPACK_IMPORTED_MODULE_0__["default"])(values, 0.5, valueof);
}


/***/ }),

/***/ "../node_modules/d3-array/src/merge.js":
/*!*********************************************!*\
  !*** ../node_modules/d3-array/src/merge.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return merge; });
function* flatten(arrays) {
  for (const array of arrays) {
    yield* array;
  }
}

function merge(arrays) {
  return Array.from(flatten(arrays));
}


/***/ }),

/***/ "../node_modules/d3-array/src/min.js":
/*!*******************************************!*\
  !*** ../node_modules/d3-array/src/min.js ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return min; });
function min(values, valueof) {
  let min;
  if (valueof === undefined) {
    for (const value of values) {
      if (value != null
          && (min > value || (min === undefined && value >= value))) {
        min = value;
      }
    }
  } else {
    let index = -1;
    for (let value of values) {
      if ((value = valueof(value, ++index, values)) != null
          && (min > value || (min === undefined && value >= value))) {
        min = value;
      }
    }
  }
  return min;
}


/***/ }),

/***/ "../node_modules/d3-array/src/minIndex.js":
/*!************************************************!*\
  !*** ../node_modules/d3-array/src/minIndex.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return minIndex; });
function minIndex(values, valueof) {
  let min;
  let minIndex = -1;
  let index = -1;
  if (valueof === undefined) {
    for (const value of values) {
      ++index;
      if (value != null
          && (min > value || (min === undefined && value >= value))) {
        min = value, minIndex = index;
      }
    }
  } else {
    for (let value of values) {
      if ((value = valueof(value, ++index, values)) != null
          && (min > value || (min === undefined && value >= value))) {
        min = value, minIndex = index;
      }
    }
  }
  return minIndex;
}


/***/ }),

/***/ "../node_modules/d3-array/src/mode.js":
/*!********************************************!*\
  !*** ../node_modules/d3-array/src/mode.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return mode; });
/* harmony import */ var internmap__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! internmap */ "../node_modules/internmap/src/index.js");


function mode(values, valueof) {
  const counts = new internmap__WEBPACK_IMPORTED_MODULE_0__["InternMap"]();
  if (valueof === undefined) {
    for (let value of values) {
      if (value != null && value >= value) {
        counts.set(value, (counts.get(value) || 0) + 1);
      }
    }
  } else {
    let index = -1;
    for (let value of values) {
      if ((value = valueof(value, ++index, values)) != null && value >= value) {
        counts.set(value, (counts.get(value) || 0) + 1);
      }
    }
  }
  let modeValue;
  let modeCount = 0;
  for (const [value, count] of counts) {
    if (count > modeCount) {
      modeCount = count;
      modeValue = value;
    }
  }
  return modeValue;
}


/***/ }),

/***/ "../node_modules/d3-array/src/nice.js":
/*!********************************************!*\
  !*** ../node_modules/d3-array/src/nice.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return nice; });
/* harmony import */ var _ticks_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ticks.js */ "../node_modules/d3-array/src/ticks.js");


function nice(start, stop, count) {
  let prestep;
  while (true) {
    const step = Object(_ticks_js__WEBPACK_IMPORTED_MODULE_0__["tickIncrement"])(start, stop, count);
    if (step === prestep || step === 0 || !isFinite(step)) {
      return [start, stop];
    } else if (step > 0) {
      start = Math.floor(start / step) * step;
      stop = Math.ceil(stop / step) * step;
    } else if (step < 0) {
      start = Math.ceil(start * step) / step;
      stop = Math.floor(stop * step) / step;
    }
    prestep = step;
  }
}


/***/ }),

/***/ "../node_modules/d3-array/src/number.js":
/*!**********************************************!*\
  !*** ../node_modules/d3-array/src/number.js ***!
  \**********************************************/
/*! exports provided: default, numbers */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return number; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "numbers", function() { return numbers; });
function number(x) {
  return x === null ? NaN : +x;
}

function* numbers(values, valueof) {
  if (valueof === undefined) {
    for (let value of values) {
      if (value != null && (value = +value) >= value) {
        yield value;
      }
    }
  } else {
    let index = -1;
    for (let value of values) {
      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {
        yield value;
      }
    }
  }
}


/***/ }),

/***/ "../node_modules/d3-array/src/pairs.js":
/*!*********************************************!*\
  !*** ../node_modules/d3-array/src/pairs.js ***!
  \*********************************************/
/*! exports provided: default, pair */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return pairs; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pair", function() { return pair; });
function pairs(values, pairof = pair) {
  const pairs = [];
  let previous;
  let first = false;
  for (const value of values) {
    if (first) pairs.push(pairof(previous, value));
    previous = value;
    first = true;
  }
  return pairs;
}

function pair(a, b) {
  return [a, b];
}


/***/ }),

/***/ "../node_modules/d3-array/src/permute.js":
/*!***********************************************!*\
  !*** ../node_modules/d3-array/src/permute.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return permute; });
function permute(source, keys) {
  return Array.from(keys, key => source[key]);
}


/***/ }),

/***/ "../node_modules/d3-array/src/quantile.js":
/*!************************************************!*\
  !*** ../node_modules/d3-array/src/quantile.js ***!
  \************************************************/
/*! exports provided: default, quantileSorted */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return quantile; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "quantileSorted", function() { return quantileSorted; });
/* harmony import */ var _max_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./max.js */ "../node_modules/d3-array/src/max.js");
/* harmony import */ var _min_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./min.js */ "../node_modules/d3-array/src/min.js");
/* harmony import */ var _quickselect_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./quickselect.js */ "../node_modules/d3-array/src/quickselect.js");
/* harmony import */ var _number_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./number.js */ "../node_modules/d3-array/src/number.js");





function quantile(values, p, valueof) {
  values = Float64Array.from(Object(_number_js__WEBPACK_IMPORTED_MODULE_3__["numbers"])(values, valueof));
  if (!(n = values.length)) return;
  if ((p = +p) <= 0 || n < 2) return Object(_min_js__WEBPACK_IMPORTED_MODULE_1__["default"])(values);
  if (p >= 1) return Object(_max_js__WEBPACK_IMPORTED_MODULE_0__["default"])(values);
  var n,
      i = (n - 1) * p,
      i0 = Math.floor(i),
      value0 = Object(_max_js__WEBPACK_IMPORTED_MODULE_0__["default"])(Object(_quickselect_js__WEBPACK_IMPORTED_MODULE_2__["default"])(values, i0).subarray(0, i0 + 1)),
      value1 = Object(_min_js__WEBPACK_IMPORTED_MODULE_1__["default"])(values.subarray(i0 + 1));
  return value0 + (value1 - value0) * (i - i0);
}

function quantileSorted(values, p, valueof = _number_js__WEBPACK_IMPORTED_MODULE_3__["default"]) {
  if (!(n = values.length)) return;
  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);
  if (p >= 1) return +valueof(values[n - 1], n - 1, values);
  var n,
      i = (n - 1) * p,
      i0 = Math.floor(i),
      value0 = +valueof(values[i0], i0, values),
      value1 = +valueof(values[i0 + 1], i0 + 1, values);
  return value0 + (value1 - value0) * (i - i0);
}


/***/ }),

/***/ "../node_modules/d3-array/src/quickselect.js":
/*!***************************************************!*\
  !*** ../node_modules/d3-array/src/quickselect.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return quickselect; });
/* harmony import */ var _sort_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./sort.js */ "../node_modules/d3-array/src/sort.js");


// Based on https://github.com/mourner/quickselect
// ISC license, Copyright 2018 Vladimir Agafonkin.
function quickselect(array, k, left = 0, right = array.length - 1, compare) {
  compare = compare === undefined ? _sort_js__WEBPACK_IMPORTED_MODULE_0__["ascendingDefined"] : Object(_sort_js__WEBPACK_IMPORTED_MODULE_0__["compareDefined"])(compare);

  while (right > left) {
    if (right - left > 600) {
      const n = right - left + 1;
      const m = k - left + 1;
      const z = Math.log(n);
      const s = 0.5 * Math.exp(2 * z / 3);
      const sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);
      const newLeft = Math.max(left, Math.floor(k - m * s / n + sd));
      const newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));
      quickselect(array, k, newLeft, newRight, compare);
    }

    const t = array[k];
    let i = left;
    let j = right;

    swap(array, left, k);
    if (compare(array[right], t) > 0) swap(array, left, right);

    while (i < j) {
      swap(array, i, j), ++i, --j;
      while (compare(array[i], t) < 0) ++i;
      while (compare(array[j], t) > 0) --j;
    }

    if (compare(array[left], t) === 0) swap(array, left, j);
    else ++j, swap(array, j, right);

    if (j <= k) left = j + 1;
    if (k <= j) right = j - 1;
  }
  return array;
}

function swap(array, i, j) {
  const t = array[i];
  array[i] = array[j];
  array[j] = t;
}


/***/ }),

/***/ "../node_modules/d3-array/src/range.js":
/*!*********************************************!*\
  !*** ../node_modules/d3-array/src/range.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return range; });
function range(start, stop, step) {
  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;

  var i = -1,
      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,
      range = new Array(n);

  while (++i < n) {
    range[i] = start + i * step;
  }

  return range;
}


/***/ }),

/***/ "../node_modules/d3-array/src/rank.js":
/*!********************************************!*\
  !*** ../node_modules/d3-array/src/rank.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return rank; });
/* harmony import */ var _ascending_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ascending.js */ "../node_modules/d3-array/src/ascending.js");
/* harmony import */ var _sort_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./sort.js */ "../node_modules/d3-array/src/sort.js");



function rank(values, valueof = _ascending_js__WEBPACK_IMPORTED_MODULE_0__["default"]) {
  if (typeof values[Symbol.iterator] !== "function") throw new TypeError("values is not iterable");
  let V = Array.from(values);
  const R = new Float64Array(V.length);
  if (valueof.length !== 2) V = V.map(valueof), valueof = _ascending_js__WEBPACK_IMPORTED_MODULE_0__["default"];
  const compareIndex = (i, j) => valueof(V[i], V[j]);
  let k, r;
  Uint32Array
    .from(V, (_, i) => i)
    .sort(valueof === _ascending_js__WEBPACK_IMPORTED_MODULE_0__["default"] ? (i, j) => Object(_sort_js__WEBPACK_IMPORTED_MODULE_1__["ascendingDefined"])(V[i], V[j]) : Object(_sort_js__WEBPACK_IMPORTED_MODULE_1__["compareDefined"])(compareIndex))
    .forEach((j, i) => {
      const c = compareIndex(j, k === undefined ? j : k);
      if (c >= 0) {
        if (k === undefined || c > 0) k = j, r = i;
        R[j] = r;
      } else {
        R[j] = NaN;
      }
    });
  return R;
}


/***/ }),

/***/ "../node_modules/d3-array/src/reduce.js":
/*!**********************************************!*\
  !*** ../node_modules/d3-array/src/reduce.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return reduce; });
function reduce(values, reducer, value) {
  if (typeof reducer !== "function") throw new TypeError("reducer is not a function");
  const iterator = values[Symbol.iterator]();
  let done, next, index = -1;
  if (arguments.length < 3) {
    ({done, value} = iterator.next());
    if (done) return;
    ++index;
  }
  while (({done, value: next} = iterator.next()), !done) {
    value = reducer(value, next, ++index, values);
  }
  return value;
}


/***/ }),

/***/ "../node_modules/d3-array/src/reverse.js":
/*!***********************************************!*\
  !*** ../node_modules/d3-array/src/reverse.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return reverse; });
function reverse(values) {
  if (typeof values[Symbol.iterator] !== "function") throw new TypeError("values is not iterable");
  return Array.from(values).reverse();
}


/***/ }),

/***/ "../node_modules/d3-array/src/scan.js":
/*!********************************************!*\
  !*** ../node_modules/d3-array/src/scan.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return scan; });
/* harmony import */ var _leastIndex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./leastIndex.js */ "../node_modules/d3-array/src/leastIndex.js");


function scan(values, compare) {
  const index = Object(_leastIndex_js__WEBPACK_IMPORTED_MODULE_0__["default"])(values, compare);
  return index < 0 ? undefined : index;
}


/***/ }),

/***/ "../node_modules/d3-array/src/shuffle.js":
/*!***********************************************!*\
  !*** ../node_modules/d3-array/src/shuffle.js ***!
  \***********************************************/
/*! exports provided: default, shuffler */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "shuffler", function() { return shuffler; });
/* harmony default export */ __webpack_exports__["default"] = (shuffler(Math.random));

function shuffler(random) {
  return function shuffle(array, i0 = 0, i1 = array.length) {
    let m = i1 - (i0 = +i0);
    while (m) {
      const i = random() * m-- | 0, t = array[m + i0];
      array[m + i0] = array[i + i0];
      array[i + i0] = t;
    }
    return array;
  };
}


/***/ }),

/***/ "../node_modules/d3-array/src/some.js":
/*!********************************************!*\
  !*** ../node_modules/d3-array/src/some.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return some; });
function some(values, test) {
  if (typeof test !== "function") throw new TypeError("test is not a function");
  let index = -1;
  for (const value of values) {
    if (test(value, ++index, values)) {
      return true;
    }
  }
  return false;
}


/***/ }),

/***/ "../node_modules/d3-array/src/sort.js":
/*!********************************************!*\
  !*** ../node_modules/d3-array/src/sort.js ***!
  \********************************************/
/*! exports provided: default, compareDefined, ascendingDefined */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return sort; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "compareDefined", function() { return compareDefined; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ascendingDefined", function() { return ascendingDefined; });
/* harmony import */ var _ascending_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ascending.js */ "../node_modules/d3-array/src/ascending.js");
/* harmony import */ var _permute_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./permute.js */ "../node_modules/d3-array/src/permute.js");



function sort(values, ...F) {
  if (typeof values[Symbol.iterator] !== "function") throw new TypeError("values is not iterable");
  values = Array.from(values);
  let [f] = F;
  if ((f && f.length !== 2) || F.length > 1) {
    const index = Uint32Array.from(values, (d, i) => i);
    if (F.length > 1) {
      F = F.map(f => values.map(f));
      index.sort((i, j) => {
        for (const f of F) {
          const c = ascendingDefined(f[i], f[j]);
          if (c) return c;
        }
      });
    } else {
      f = values.map(f);
      index.sort((i, j) => ascendingDefined(f[i], f[j]));
    }
    return Object(_permute_js__WEBPACK_IMPORTED_MODULE_1__["default"])(values, index);
  }
  return values.sort(compareDefined(f));
}

function compareDefined(compare = _ascending_js__WEBPACK_IMPORTED_MODULE_0__["default"]) {
  if (compare === _ascending_js__WEBPACK_IMPORTED_MODULE_0__["default"]) return ascendingDefined;
  if (typeof compare !== "function") throw new TypeError("compare is not a function");
  return (a, b) => {
    const x = compare(a, b);
    if (x || x === 0) return x;
    return (compare(b, b) === 0) - (compare(a, a) === 0);
  };
}

function ascendingDefined(a, b) {
  return (a == null || !(a >= a)) - (b == null || !(b >= b)) || (a < b ? -1 : a > b ? 1 : 0);
}


/***/ }),

/***/ "../node_modules/d3-array/src/subset.js":
/*!**********************************************!*\
  !*** ../node_modules/d3-array/src/subset.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return subset; });
/* harmony import */ var _superset_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./superset.js */ "../node_modules/d3-array/src/superset.js");


function subset(values, other) {
  return Object(_superset_js__WEBPACK_IMPORTED_MODULE_0__["default"])(other, values);
}


/***/ }),

/***/ "../node_modules/d3-array/src/sum.js":
/*!*******************************************!*\
  !*** ../node_modules/d3-array/src/sum.js ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return sum; });
function sum(values, valueof) {
  let sum = 0;
  if (valueof === undefined) {
    for (let value of values) {
      if (value = +value) {
        sum += value;
      }
    }
  } else {
    let index = -1;
    for (let value of values) {
      if (value = +valueof(value, ++index, values)) {
        sum += value;
      }
    }
  }
  return sum;
}


/***/ }),

/***/ "../node_modules/d3-array/src/superset.js":
/*!************************************************!*\
  !*** ../node_modules/d3-array/src/superset.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return superset; });
function superset(values, other) {
  const iterator = values[Symbol.iterator](), set = new Set();
  for (const o of other) {
    const io = intern(o);
    if (set.has(io)) continue;
    let value, done;
    while (({value, done} = iterator.next())) {
      if (done) return false;
      const ivalue = intern(value);
      set.add(ivalue);
      if (Object.is(io, ivalue)) break;
    }
  }
  return true;
}

function intern(value) {
  return value !== null && typeof value === "object" ? value.valueOf() : value;
}


/***/ }),

/***/ "../node_modules/d3-array/src/threshold/freedmanDiaconis.js":
/*!******************************************************************!*\
  !*** ../node_modules/d3-array/src/threshold/freedmanDiaconis.js ***!
  \******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return thresholdFreedmanDiaconis; });
/* harmony import */ var _count_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../count.js */ "../node_modules/d3-array/src/count.js");
/* harmony import */ var _quantile_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../quantile.js */ "../node_modules/d3-array/src/quantile.js");



function thresholdFreedmanDiaconis(values, min, max) {
  return Math.ceil((max - min) / (2 * (Object(_quantile_js__WEBPACK_IMPORTED_MODULE_1__["default"])(values, 0.75) - Object(_quantile_js__WEBPACK_IMPORTED_MODULE_1__["default"])(values, 0.25)) * Math.pow(Object(_count_js__WEBPACK_IMPORTED_MODULE_0__["default"])(values), -1 / 3)));
}


/***/ }),

/***/ "../node_modules/d3-array/src/threshold/scott.js":
/*!*******************************************************!*\
  !*** ../node_modules/d3-array/src/threshold/scott.js ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return thresholdScott; });
/* harmony import */ var _count_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../count.js */ "../node_modules/d3-array/src/count.js");
/* harmony import */ var _deviation_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../deviation.js */ "../node_modules/d3-array/src/deviation.js");



function thresholdScott(values, min, max) {
  return Math.ceil((max - min) / (3.5 * Object(_deviation_js__WEBPACK_IMPORTED_MODULE_1__["default"])(values) * Math.pow(Object(_count_js__WEBPACK_IMPORTED_MODULE_0__["default"])(values), -1 / 3)));
}


/***/ }),

/***/ "../node_modules/d3-array/src/threshold/sturges.js":
/*!*********************************************************!*\
  !*** ../node_modules/d3-array/src/threshold/sturges.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return thresholdSturges; });
/* harmony import */ var _count_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../count.js */ "../node_modules/d3-array/src/count.js");


function thresholdSturges(values) {
  return Math.ceil(Math.log(Object(_count_js__WEBPACK_IMPORTED_MODULE_0__["default"])(values)) / Math.LN2) + 1;
}


/***/ }),

/***/ "../node_modules/d3-array/src/ticks.js":
/*!*********************************************!*\
  !*** ../node_modules/d3-array/src/ticks.js ***!
  \*********************************************/
/*! exports provided: default, tickIncrement, tickStep */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return ticks; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tickIncrement", function() { return tickIncrement; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tickStep", function() { return tickStep; });
var e10 = Math.sqrt(50),
    e5 = Math.sqrt(10),
    e2 = Math.sqrt(2);

function ticks(start, stop, count) {
  var reverse,
      i = -1,
      n,
      ticks,
      step;

  stop = +stop, start = +start, count = +count;
  if (start === stop && count > 0) return [start];
  if (reverse = stop < start) n = start, start = stop, stop = n;
  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];

  if (step > 0) {
    let r0 = Math.round(start / step), r1 = Math.round(stop / step);
    if (r0 * step < start) ++r0;
    if (r1 * step > stop) --r1;
    ticks = new Array(n = r1 - r0 + 1);
    while (++i < n) ticks[i] = (r0 + i) * step;
  } else {
    step = -step;
    let r0 = Math.round(start * step), r1 = Math.round(stop * step);
    if (r0 / step < start) ++r0;
    if (r1 / step > stop) --r1;
    ticks = new Array(n = r1 - r0 + 1);
    while (++i < n) ticks[i] = (r0 + i) / step;
  }

  if (reverse) ticks.reverse();

  return ticks;
}

function tickIncrement(start, stop, count) {
  var step = (stop - start) / Math.max(0, count),
      power = Math.floor(Math.log(step) / Math.LN10),
      error = step / Math.pow(10, power);
  return power >= 0
      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)
      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);
}

function tickStep(start, stop, count) {
  var step0 = Math.abs(stop - start) / Math.max(0, count),
      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),
      error = step0 / step1;
  if (error >= e10) step1 *= 10;
  else if (error >= e5) step1 *= 5;
  else if (error >= e2) step1 *= 2;
  return stop < start ? -step1 : step1;
}


/***/ }),

/***/ "../node_modules/d3-array/src/transpose.js":
/*!*************************************************!*\
  !*** ../node_modules/d3-array/src/transpose.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return transpose; });
/* harmony import */ var _min_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./min.js */ "../node_modules/d3-array/src/min.js");


function transpose(matrix) {
  if (!(n = matrix.length)) return [];
  for (var i = -1, m = Object(_min_js__WEBPACK_IMPORTED_MODULE_0__["default"])(matrix, length), transpose = new Array(m); ++i < m;) {
    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {
      row[j] = matrix[j][i];
    }
  }
  return transpose;
}

function length(d) {
  return d.length;
}


/***/ }),

/***/ "../node_modules/d3-array/src/union.js":
/*!*********************************************!*\
  !*** ../node_modules/d3-array/src/union.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return union; });
/* harmony import */ var internmap__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! internmap */ "../node_modules/internmap/src/index.js");


function union(...others) {
  const set = new internmap__WEBPACK_IMPORTED_MODULE_0__["InternSet"]();
  for (const other of others) {
    for (const o of other) {
      set.add(o);
    }
  }
  return set;
}


/***/ }),

/***/ "../node_modules/d3-array/src/variance.js":
/*!************************************************!*\
  !*** ../node_modules/d3-array/src/variance.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return variance; });
function variance(values, valueof) {
  let count = 0;
  let delta;
  let mean = 0;
  let sum = 0;
  if (valueof === undefined) {
    for (let value of values) {
      if (value != null && (value = +value) >= value) {
        delta = value - mean;
        mean += delta / ++count;
        sum += delta * (value - mean);
      }
    }
  } else {
    let index = -1;
    for (let value of values) {
      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {
        delta = value - mean;
        mean += delta / ++count;
        sum += delta * (value - mean);
      }
    }
  }
  if (count > 1) return sum / (count - 1);
}


/***/ }),

/***/ "../node_modules/d3-array/src/zip.js":
/*!*******************************************!*\
  !*** ../node_modules/d3-array/src/zip.js ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return zip; });
/* harmony import */ var _transpose_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./transpose.js */ "../node_modules/d3-array/src/transpose.js");


function zip() {
  return Object(_transpose_js__WEBPACK_IMPORTED_MODULE_0__["default"])(arguments);
}


/***/ }),

/***/ "../node_modules/d3-color/src/color.js":
/*!*********************************************!*\
  !*** ../node_modules/d3-color/src/color.js ***!
  \*********************************************/
/*! exports provided: Color, darker, brighter, default, rgbConvert, rgb, Rgb, hslConvert, hsl */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Color", function() { return Color; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "darker", function() { return darker; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "brighter", function() { return brighter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return color; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rgbConvert", function() { return rgbConvert; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rgb", function() { return rgb; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Rgb", function() { return Rgb; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hslConvert", function() { return hslConvert; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hsl", function() { return hsl; });
/* harmony import */ var _define_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./define.js */ "../node_modules/d3-color/src/define.js");


function Color() {}

var darker = 0.7;
var brighter = 1 / darker;

var reI = "\\s*([+-]?\\d+)\\s*",
    reN = "\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)\\s*",
    reP = "\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)%\\s*",
    reHex = /^#([0-9a-f]{3,8})$/,
    reRgbInteger = new RegExp("^rgb\\(" + [reI, reI, reI] + "\\)$"),
    reRgbPercent = new RegExp("^rgb\\(" + [reP, reP, reP] + "\\)$"),
    reRgbaInteger = new RegExp("^rgba\\(" + [reI, reI, reI, reN] + "\\)$"),
    reRgbaPercent = new RegExp("^rgba\\(" + [reP, reP, reP, reN] + "\\)$"),
    reHslPercent = new RegExp("^hsl\\(" + [reN, reP, reP] + "\\)$"),
    reHslaPercent = new RegExp("^hsla\\(" + [reN, reP, reP, reN] + "\\)$");

var named = {
  aliceblue: 0xf0f8ff,
  antiquewhite: 0xfaebd7,
  aqua: 0x00ffff,
  aquamarine: 0x7fffd4,
  azure: 0xf0ffff,
  beige: 0xf5f5dc,
  bisque: 0xffe4c4,
  black: 0x000000,
  blanchedalmond: 0xffebcd,
  blue: 0x0000ff,
  blueviolet: 0x8a2be2,
  brown: 0xa52a2a,
  burlywood: 0xdeb887,
  cadetblue: 0x5f9ea0,
  chartreuse: 0x7fff00,
  chocolate: 0xd2691e,
  coral: 0xff7f50,
  cornflowerblue: 0x6495ed,
  cornsilk: 0xfff8dc,
  crimson: 0xdc143c,
  cyan: 0x00ffff,
  darkblue: 0x00008b,
  darkcyan: 0x008b8b,
  darkgoldenrod: 0xb8860b,
  darkgray: 0xa9a9a9,
  darkgreen: 0x006400,
  darkgrey: 0xa9a9a9,
  darkkhaki: 0xbdb76b,
  darkmagenta: 0x8b008b,
  darkolivegreen: 0x556b2f,
  darkorange: 0xff8c00,
  darkorchid: 0x9932cc,
  darkred: 0x8b0000,
  darksalmon: 0xe9967a,
  darkseagreen: 0x8fbc8f,
  darkslateblue: 0x483d8b,
  darkslategray: 0x2f4f4f,
  darkslategrey: 0x2f4f4f,
  darkturquoise: 0x00ced1,
  darkviolet: 0x9400d3,
  deeppink: 0xff1493,
  deepskyblue: 0x00bfff,
  dimgray: 0x696969,
  dimgrey: 0x696969,
  dodgerblue: 0x1e90ff,
  firebrick: 0xb22222,
  floralwhite: 0xfffaf0,
  forestgreen: 0x228b22,
  fuchsia: 0xff00ff,
  gainsboro: 0xdcdcdc,
  ghostwhite: 0xf8f8ff,
  gold: 0xffd700,
  goldenrod: 0xdaa520,
  gray: 0x808080,
  green: 0x008000,
  greenyellow: 0xadff2f,
  grey: 0x808080,
  honeydew: 0xf0fff0,
  hotpink: 0xff69b4,
  indianred: 0xcd5c5c,
  indigo: 0x4b0082,
  ivory: 0xfffff0,
  khaki: 0xf0e68c,
  lavender: 0xe6e6fa,
  lavenderblush: 0xfff0f5,
  lawngreen: 0x7cfc00,
  lemonchiffon: 0xfffacd,
  lightblue: 0xadd8e6,
  lightcoral: 0xf08080,
  lightcyan: 0xe0ffff,
  lightgoldenrodyellow: 0xfafad2,
  lightgray: 0xd3d3d3,
  lightgreen: 0x90ee90,
  lightgrey: 0xd3d3d3,
  lightpink: 0xffb6c1,
  lightsalmon: 0xffa07a,
  lightseagreen: 0x20b2aa,
  lightskyblue: 0x87cefa,
  lightslategray: 0x778899,
  lightslategrey: 0x778899,
  lightsteelblue: 0xb0c4de,
  lightyellow: 0xffffe0,
  lime: 0x00ff00,
  limegreen: 0x32cd32,
  linen: 0xfaf0e6,
  magenta: 0xff00ff,
  maroon: 0x800000,
  mediumaquamarine: 0x66cdaa,
  mediumblue: 0x0000cd,
  mediumorchid: 0xba55d3,
  mediumpurple: 0x9370db,
  mediumseagreen: 0x3cb371,
  mediumslateblue: 0x7b68ee,
  mediumspringgreen: 0x00fa9a,
  mediumturquoise: 0x48d1cc,
  mediumvioletred: 0xc71585,
  midnightblue: 0x191970,
  mintcream: 0xf5fffa,
  mistyrose: 0xffe4e1,
  moccasin: 0xffe4b5,
  navajowhite: 0xffdead,
  navy: 0x000080,
  oldlace: 0xfdf5e6,
  olive: 0x808000,
  olivedrab: 0x6b8e23,
  orange: 0xffa500,
  orangered: 0xff4500,
  orchid: 0xda70d6,
  palegoldenrod: 0xeee8aa,
  palegreen: 0x98fb98,
  paleturquoise: 0xafeeee,
  palevioletred: 0xdb7093,
  papayawhip: 0xffefd5,
  peachpuff: 0xffdab9,
  peru: 0xcd853f,
  pink: 0xffc0cb,
  plum: 0xdda0dd,
  powderblue: 0xb0e0e6,
  purple: 0x800080,
  rebeccapurple: 0x663399,
  red: 0xff0000,
  rosybrown: 0xbc8f8f,
  royalblue: 0x4169e1,
  saddlebrown: 0x8b4513,
  salmon: 0xfa8072,
  sandybrown: 0xf4a460,
  seagreen: 0x2e8b57,
  seashell: 0xfff5ee,
  sienna: 0xa0522d,
  silver: 0xc0c0c0,
  skyblue: 0x87ceeb,
  slateblue: 0x6a5acd,
  slategray: 0x708090,
  slategrey: 0x708090,
  snow: 0xfffafa,
  springgreen: 0x00ff7f,
  steelblue: 0x4682b4,
  tan: 0xd2b48c,
  teal: 0x008080,
  thistle: 0xd8bfd8,
  tomato: 0xff6347,
  turquoise: 0x40e0d0,
  violet: 0xee82ee,
  wheat: 0xf5deb3,
  white: 0xffffff,
  whitesmoke: 0xf5f5f5,
  yellow: 0xffff00,
  yellowgreen: 0x9acd32
};

Object(_define_js__WEBPACK_IMPORTED_MODULE_0__["default"])(Color, color, {
  copy: function(channels) {
    return Object.assign(new this.constructor, this, channels);
  },
  displayable: function() {
    return this.rgb().displayable();
  },
  hex: color_formatHex, // Deprecated! Use color.formatHex.
  formatHex: color_formatHex,
  formatHsl: color_formatHsl,
  formatRgb: color_formatRgb,
  toString: color_formatRgb
});

function color_formatHex() {
  return this.rgb().formatHex();
}

function color_formatHsl() {
  return hslConvert(this).formatHsl();
}

function color_formatRgb() {
  return this.rgb().formatRgb();
}

function color(format) {
  var m, l;
  format = (format + "").trim().toLowerCase();
  return (m = reHex.exec(format)) ? (l = m[1].length, m = parseInt(m[1], 16), l === 6 ? rgbn(m) // #ff0000
      : l === 3 ? new Rgb((m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1) // #f00
      : l === 8 ? rgba(m >> 24 & 0xff, m >> 16 & 0xff, m >> 8 & 0xff, (m & 0xff) / 0xff) // #ff000000
      : l === 4 ? rgba((m >> 12 & 0xf) | (m >> 8 & 0xf0), (m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), (((m & 0xf) << 4) | (m & 0xf)) / 0xff) // #f000
      : null) // invalid hex
      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)
      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)
      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)
      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)
      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)
      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)
      : named.hasOwnProperty(format) ? rgbn(named[format]) // eslint-disable-line no-prototype-builtins
      : format === "transparent" ? new Rgb(NaN, NaN, NaN, 0)
      : null;
}

function rgbn(n) {
  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);
}

function rgba(r, g, b, a) {
  if (a <= 0) r = g = b = NaN;
  return new Rgb(r, g, b, a);
}

function rgbConvert(o) {
  if (!(o instanceof Color)) o = color(o);
  if (!o) return new Rgb;
  o = o.rgb();
  return new Rgb(o.r, o.g, o.b, o.opacity);
}

function rgb(r, g, b, opacity) {
  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);
}

function Rgb(r, g, b, opacity) {
  this.r = +r;
  this.g = +g;
  this.b = +b;
  this.opacity = +opacity;
}

Object(_define_js__WEBPACK_IMPORTED_MODULE_0__["default"])(Rgb, rgb, Object(_define_js__WEBPACK_IMPORTED_MODULE_0__["extend"])(Color, {
  brighter: function(k) {
    k = k == null ? brighter : Math.pow(brighter, k);
    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);
  },
  darker: function(k) {
    k = k == null ? darker : Math.pow(darker, k);
    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);
  },
  rgb: function() {
    return this;
  },
  displayable: function() {
    return (-0.5 <= this.r && this.r < 255.5)
        && (-0.5 <= this.g && this.g < 255.5)
        && (-0.5 <= this.b && this.b < 255.5)
        && (0 <= this.opacity && this.opacity <= 1);
  },
  hex: rgb_formatHex, // Deprecated! Use color.formatHex.
  formatHex: rgb_formatHex,
  formatRgb: rgb_formatRgb,
  toString: rgb_formatRgb
}));

function rgb_formatHex() {
  return "#" + hex(this.r) + hex(this.g) + hex(this.b);
}

function rgb_formatRgb() {
  var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));
  return (a === 1 ? "rgb(" : "rgba(")
      + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + ", "
      + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + ", "
      + Math.max(0, Math.min(255, Math.round(this.b) || 0))
      + (a === 1 ? ")" : ", " + a + ")");
}

function hex(value) {
  value = Math.max(0, Math.min(255, Math.round(value) || 0));
  return (value < 16 ? "0" : "") + value.toString(16);
}

function hsla(h, s, l, a) {
  if (a <= 0) h = s = l = NaN;
  else if (l <= 0 || l >= 1) h = s = NaN;
  else if (s <= 0) h = NaN;
  return new Hsl(h, s, l, a);
}

function hslConvert(o) {
  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);
  if (!(o instanceof Color)) o = color(o);
  if (!o) return new Hsl;
  if (o instanceof Hsl) return o;
  o = o.rgb();
  var r = o.r / 255,
      g = o.g / 255,
      b = o.b / 255,
      min = Math.min(r, g, b),
      max = Math.max(r, g, b),
      h = NaN,
      s = max - min,
      l = (max + min) / 2;
  if (s) {
    if (r === max) h = (g - b) / s + (g < b) * 6;
    else if (g === max) h = (b - r) / s + 2;
    else h = (r - g) / s + 4;
    s /= l < 0.5 ? max + min : 2 - max - min;
    h *= 60;
  } else {
    s = l > 0 && l < 1 ? 0 : h;
  }
  return new Hsl(h, s, l, o.opacity);
}

function hsl(h, s, l, opacity) {
  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);
}

function Hsl(h, s, l, opacity) {
  this.h = +h;
  this.s = +s;
  this.l = +l;
  this.opacity = +opacity;
}

Object(_define_js__WEBPACK_IMPORTED_MODULE_0__["default"])(Hsl, hsl, Object(_define_js__WEBPACK_IMPORTED_MODULE_0__["extend"])(Color, {
  brighter: function(k) {
    k = k == null ? brighter : Math.pow(brighter, k);
    return new Hsl(this.h, this.s, this.l * k, this.opacity);
  },
  darker: function(k) {
    k = k == null ? darker : Math.pow(darker, k);
    return new Hsl(this.h, this.s, this.l * k, this.opacity);
  },
  rgb: function() {
    var h = this.h % 360 + (this.h < 0) * 360,
        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,
        l = this.l,
        m2 = l + (l < 0.5 ? l : 1 - l) * s,
        m1 = 2 * l - m2;
    return new Rgb(
      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),
      hsl2rgb(h, m1, m2),
      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),
      this.opacity
    );
  },
  displayable: function() {
    return (0 <= this.s && this.s <= 1 || isNaN(this.s))
        && (0 <= this.l && this.l <= 1)
        && (0 <= this.opacity && this.opacity <= 1);
  },
  formatHsl: function() {
    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));
    return (a === 1 ? "hsl(" : "hsla(")
        + (this.h || 0) + ", "
        + (this.s || 0) * 100 + "%, "
        + (this.l || 0) * 100 + "%"
        + (a === 1 ? ")" : ", " + a + ")");
  }
}));

/* From FvD 13.37, CSS Color Module Level 3 */
function hsl2rgb(h, m1, m2) {
  return (h < 60 ? m1 + (m2 - m1) * h / 60
      : h < 180 ? m2
      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60
      : m1) * 255;
}


/***/ }),

/***/ "../node_modules/d3-color/src/cubehelix.js":
/*!*************************************************!*\
  !*** ../node_modules/d3-color/src/cubehelix.js ***!
  \*************************************************/
/*! exports provided: default, Cubehelix */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return cubehelix; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Cubehelix", function() { return Cubehelix; });
/* harmony import */ var _define_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./define.js */ "../node_modules/d3-color/src/define.js");
/* harmony import */ var _color_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./color.js */ "../node_modules/d3-color/src/color.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./math.js */ "../node_modules/d3-color/src/math.js");




var A = -0.14861,
    B = +1.78277,
    C = -0.29227,
    D = -0.90649,
    E = +1.97294,
    ED = E * D,
    EB = E * B,
    BC_DA = B * C - D * A;

function cubehelixConvert(o) {
  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);
  if (!(o instanceof _color_js__WEBPACK_IMPORTED_MODULE_1__["Rgb"])) o = Object(_color_js__WEBPACK_IMPORTED_MODULE_1__["rgbConvert"])(o);
  var r = o.r / 255,
      g = o.g / 255,
      b = o.b / 255,
      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),
      bl = b - l,
      k = (E * (g - l) - C * bl) / D,
      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1
      h = s ? Math.atan2(k, bl) * _math_js__WEBPACK_IMPORTED_MODULE_2__["degrees"] - 120 : NaN;
  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);
}

function cubehelix(h, s, l, opacity) {
  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);
}

function Cubehelix(h, s, l, opacity) {
  this.h = +h;
  this.s = +s;
  this.l = +l;
  this.opacity = +opacity;
}

Object(_define_js__WEBPACK_IMPORTED_MODULE_0__["default"])(Cubehelix, cubehelix, Object(_define_js__WEBPACK_IMPORTED_MODULE_0__["extend"])(_color_js__WEBPACK_IMPORTED_MODULE_1__["Color"], {
  brighter: function(k) {
    k = k == null ? _color_js__WEBPACK_IMPORTED_MODULE_1__["brighter"] : Math.pow(_color_js__WEBPACK_IMPORTED_MODULE_1__["brighter"], k);
    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);
  },
  darker: function(k) {
    k = k == null ? _color_js__WEBPACK_IMPORTED_MODULE_1__["darker"] : Math.pow(_color_js__WEBPACK_IMPORTED_MODULE_1__["darker"], k);
    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);
  },
  rgb: function() {
    var h = isNaN(this.h) ? 0 : (this.h + 120) * _math_js__WEBPACK_IMPORTED_MODULE_2__["radians"],
        l = +this.l,
        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),
        cosh = Math.cos(h),
        sinh = Math.sin(h);
    return new _color_js__WEBPACK_IMPORTED_MODULE_1__["Rgb"](
      255 * (l + a * (A * cosh + B * sinh)),
      255 * (l + a * (C * cosh + D * sinh)),
      255 * (l + a * (E * cosh)),
      this.opacity
    );
  }
}));


/***/ }),

/***/ "../node_modules/d3-color/src/define.js":
/*!**********************************************!*\
  !*** ../node_modules/d3-color/src/define.js ***!
  \**********************************************/
/*! exports provided: default, extend */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony default export */ __webpack_exports__["default"] = (function(constructor, factory, prototype) {
  constructor.prototype = factory.prototype = prototype;
  prototype.constructor = constructor;
});

function extend(parent, definition) {
  var prototype = Object.create(parent.prototype);
  for (var key in definition) prototype[key] = definition[key];
  return prototype;
}


/***/ }),

/***/ "../node_modules/d3-color/src/index.js":
/*!*********************************************!*\
  !*** ../node_modules/d3-color/src/index.js ***!
  \*********************************************/
/*! exports provided: color, rgb, hsl, lab, hcl, lch, gray, cubehelix */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _color_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./color.js */ "../node_modules/d3-color/src/color.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "color", function() { return _color_js__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "rgb", function() { return _color_js__WEBPACK_IMPORTED_MODULE_0__["rgb"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "hsl", function() { return _color_js__WEBPACK_IMPORTED_MODULE_0__["hsl"]; });

/* harmony import */ var _lab_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lab.js */ "../node_modules/d3-color/src/lab.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "lab", function() { return _lab_js__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "hcl", function() { return _lab_js__WEBPACK_IMPORTED_MODULE_1__["hcl"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "lch", function() { return _lab_js__WEBPACK_IMPORTED_MODULE_1__["lch"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "gray", function() { return _lab_js__WEBPACK_IMPORTED_MODULE_1__["gray"]; });

/* harmony import */ var _cubehelix_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./cubehelix.js */ "../node_modules/d3-color/src/cubehelix.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "cubehelix", function() { return _cubehelix_js__WEBPACK_IMPORTED_MODULE_2__["default"]; });






/***/ }),

/***/ "../node_modules/d3-color/src/lab.js":
/*!*******************************************!*\
  !*** ../node_modules/d3-color/src/lab.js ***!
  \*******************************************/
/*! exports provided: gray, default, Lab, lch, hcl, Hcl */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "gray", function() { return gray; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return lab; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Lab", function() { return Lab; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "lch", function() { return lch; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hcl", function() { return hcl; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Hcl", function() { return Hcl; });
/* harmony import */ var _define_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./define.js */ "../node_modules/d3-color/src/define.js");
/* harmony import */ var _color_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./color.js */ "../node_modules/d3-color/src/color.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./math.js */ "../node_modules/d3-color/src/math.js");




// https://observablehq.com/@mbostock/lab-and-rgb
const K = 18,
    Xn = 0.96422,
    Yn = 1,
    Zn = 0.82521,
    t0 = 4 / 29,
    t1 = 6 / 29,
    t2 = 3 * t1 * t1,
    t3 = t1 * t1 * t1;

function labConvert(o) {
  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);
  if (o instanceof Hcl) return hcl2lab(o);
  if (!(o instanceof _color_js__WEBPACK_IMPORTED_MODULE_1__["Rgb"])) o = Object(_color_js__WEBPACK_IMPORTED_MODULE_1__["rgbConvert"])(o);
  var r = rgb2lrgb(o.r),
      g = rgb2lrgb(o.g),
      b = rgb2lrgb(o.b),
      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn), x, z;
  if (r === g && g === b) x = z = y; else {
    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);
    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);
  }
  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);
}

function gray(l, opacity) {
  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);
}

function lab(l, a, b, opacity) {
  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);
}

function Lab(l, a, b, opacity) {
  this.l = +l;
  this.a = +a;
  this.b = +b;
  this.opacity = +opacity;
}

Object(_define_js__WEBPACK_IMPORTED_MODULE_0__["default"])(Lab, lab, Object(_define_js__WEBPACK_IMPORTED_MODULE_0__["extend"])(_color_js__WEBPACK_IMPORTED_MODULE_1__["Color"], {
  brighter: function(k) {
    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);
  },
  darker: function(k) {
    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);
  },
  rgb: function() {
    var y = (this.l + 16) / 116,
        x = isNaN(this.a) ? y : y + this.a / 500,
        z = isNaN(this.b) ? y : y - this.b / 200;
    x = Xn * lab2xyz(x);
    y = Yn * lab2xyz(y);
    z = Zn * lab2xyz(z);
    return new _color_js__WEBPACK_IMPORTED_MODULE_1__["Rgb"](
      lrgb2rgb( 3.1338561 * x - 1.6168667 * y - 0.4906146 * z),
      lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z),
      lrgb2rgb( 0.0719453 * x - 0.2289914 * y + 1.4052427 * z),
      this.opacity
    );
  }
}));

function xyz2lab(t) {
  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;
}

function lab2xyz(t) {
  return t > t1 ? t * t * t : t2 * (t - t0);
}

function lrgb2rgb(x) {
  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);
}

function rgb2lrgb(x) {
  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);
}

function hclConvert(o) {
  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);
  if (!(o instanceof Lab)) o = labConvert(o);
  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0 < o.l && o.l < 100 ? 0 : NaN, o.l, o.opacity);
  var h = Math.atan2(o.b, o.a) * _math_js__WEBPACK_IMPORTED_MODULE_2__["degrees"];
  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);
}

function lch(l, c, h, opacity) {
  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);
}

function hcl(h, c, l, opacity) {
  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);
}

function Hcl(h, c, l, opacity) {
  this.h = +h;
  this.c = +c;
  this.l = +l;
  this.opacity = +opacity;
}

function hcl2lab(o) {
  if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);
  var h = o.h * _math_js__WEBPACK_IMPORTED_MODULE_2__["radians"];
  return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);
}

Object(_define_js__WEBPACK_IMPORTED_MODULE_0__["default"])(Hcl, hcl, Object(_define_js__WEBPACK_IMPORTED_MODULE_0__["extend"])(_color_js__WEBPACK_IMPORTED_MODULE_1__["Color"], {
  brighter: function(k) {
    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);
  },
  darker: function(k) {
    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);
  },
  rgb: function() {
    return hcl2lab(this).rgb();
  }
}));


/***/ }),

/***/ "../node_modules/d3-color/src/math.js":
/*!********************************************!*\
  !*** ../node_modules/d3-color/src/math.js ***!
  \********************************************/
/*! exports provided: radians, degrees */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "radians", function() { return radians; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "degrees", function() { return degrees; });
const radians = Math.PI / 180;
const degrees = 180 / Math.PI;


/***/ }),

/***/ "../node_modules/d3-format/src/defaultLocale.js":
/*!******************************************************!*\
  !*** ../node_modules/d3-format/src/defaultLocale.js ***!
  \******************************************************/
/*! exports provided: format, formatPrefix, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "format", function() { return format; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "formatPrefix", function() { return formatPrefix; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return defaultLocale; });
/* harmony import */ var _locale_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./locale.js */ "../node_modules/d3-format/src/locale.js");


var locale;
var format;
var formatPrefix;

defaultLocale({
  thousands: ",",
  grouping: [3],
  currency: ["$", ""]
});

function defaultLocale(definition) {
  locale = Object(_locale_js__WEBPACK_IMPORTED_MODULE_0__["default"])(definition);
  format = locale.format;
  formatPrefix = locale.formatPrefix;
  return locale;
}


/***/ }),

/***/ "../node_modules/d3-format/src/exponent.js":
/*!*************************************************!*\
  !*** ../node_modules/d3-format/src/exponent.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _formatDecimal_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./formatDecimal.js */ "../node_modules/d3-format/src/formatDecimal.js");


/* harmony default export */ __webpack_exports__["default"] = (function(x) {
  return x = Object(_formatDecimal_js__WEBPACK_IMPORTED_MODULE_0__["formatDecimalParts"])(Math.abs(x)), x ? x[1] : NaN;
});


/***/ }),

/***/ "../node_modules/d3-format/src/formatDecimal.js":
/*!******************************************************!*\
  !*** ../node_modules/d3-format/src/formatDecimal.js ***!
  \******************************************************/
/*! exports provided: default, formatDecimalParts */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "formatDecimalParts", function() { return formatDecimalParts; });
/* harmony default export */ __webpack_exports__["default"] = (function(x) {
  return Math.abs(x = Math.round(x)) >= 1e21
      ? x.toLocaleString("en").replace(/,/g, "")
      : x.toString(10);
});

// Computes the decimal coefficient and exponent of the specified number x with
// significant digits p, where x is positive and p is in [1, 21] or undefined.
// For example, formatDecimalParts(1.23) returns ["123", 0].
function formatDecimalParts(x, p) {
  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf("e")) < 0) return null; // NaN, ±Infinity
  var i, coefficient = x.slice(0, i);

  // The string returned by toExponential either has the form \d\.\d+e[-+]\d+
  // (e.g., 1.2e+3) or the form \de[-+]\d+ (e.g., 1e+3).
  return [
    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,
    +x.slice(i + 1)
  ];
}


/***/ }),

/***/ "../node_modules/d3-format/src/formatGroup.js":
/*!****************************************************!*\
  !*** ../node_modules/d3-format/src/formatGroup.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(grouping, thousands) {
  return function(value, width) {
    var i = value.length,
        t = [],
        j = 0,
        g = grouping[0],
        length = 0;

    while (i > 0 && g > 0) {
      if (length + g + 1 > width) g = Math.max(1, width - length);
      t.push(value.substring(i -= g, i + g));
      if ((length += g + 1) > width) break;
      g = grouping[j = (j + 1) % grouping.length];
    }

    return t.reverse().join(thousands);
  };
});


/***/ }),

/***/ "../node_modules/d3-format/src/formatNumerals.js":
/*!*******************************************************!*\
  !*** ../node_modules/d3-format/src/formatNumerals.js ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(numerals) {
  return function(value) {
    return value.replace(/[0-9]/g, function(i) {
      return numerals[+i];
    });
  };
});


/***/ }),

/***/ "../node_modules/d3-format/src/formatPrefixAuto.js":
/*!*********************************************************!*\
  !*** ../node_modules/d3-format/src/formatPrefixAuto.js ***!
  \*********************************************************/
/*! exports provided: prefixExponent, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "prefixExponent", function() { return prefixExponent; });
/* harmony import */ var _formatDecimal_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./formatDecimal.js */ "../node_modules/d3-format/src/formatDecimal.js");


var prefixExponent;

/* harmony default export */ __webpack_exports__["default"] = (function(x, p) {
  var d = Object(_formatDecimal_js__WEBPACK_IMPORTED_MODULE_0__["formatDecimalParts"])(x, p);
  if (!d) return x + "";
  var coefficient = d[0],
      exponent = d[1],
      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,
      n = coefficient.length;
  return i === n ? coefficient
      : i > n ? coefficient + new Array(i - n + 1).join("0")
      : i > 0 ? coefficient.slice(0, i) + "." + coefficient.slice(i)
      : "0." + new Array(1 - i).join("0") + Object(_formatDecimal_js__WEBPACK_IMPORTED_MODULE_0__["formatDecimalParts"])(x, Math.max(0, p + i - 1))[0]; // less than 1y!
});


/***/ }),

/***/ "../node_modules/d3-format/src/formatRounded.js":
/*!******************************************************!*\
  !*** ../node_modules/d3-format/src/formatRounded.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _formatDecimal_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./formatDecimal.js */ "../node_modules/d3-format/src/formatDecimal.js");


/* harmony default export */ __webpack_exports__["default"] = (function(x, p) {
  var d = Object(_formatDecimal_js__WEBPACK_IMPORTED_MODULE_0__["formatDecimalParts"])(x, p);
  if (!d) return x + "";
  var coefficient = d[0],
      exponent = d[1];
  return exponent < 0 ? "0." + new Array(-exponent).join("0") + coefficient
      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + "." + coefficient.slice(exponent + 1)
      : coefficient + new Array(exponent - coefficient.length + 2).join("0");
});


/***/ }),

/***/ "../node_modules/d3-format/src/formatSpecifier.js":
/*!********************************************************!*\
  !*** ../node_modules/d3-format/src/formatSpecifier.js ***!
  \********************************************************/
/*! exports provided: default, FormatSpecifier */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return formatSpecifier; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FormatSpecifier", function() { return FormatSpecifier; });
// [[fill]align][sign][symbol][0][width][,][.precision][~][type]
var re = /^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;

function formatSpecifier(specifier) {
  if (!(match = re.exec(specifier))) throw new Error("invalid format: " + specifier);
  var match;
  return new FormatSpecifier({
    fill: match[1],
    align: match[2],
    sign: match[3],
    symbol: match[4],
    zero: match[5],
    width: match[6],
    comma: match[7],
    precision: match[8] && match[8].slice(1),
    trim: match[9],
    type: match[10]
  });
}

formatSpecifier.prototype = FormatSpecifier.prototype; // instanceof

function FormatSpecifier(specifier) {
  this.fill = specifier.fill === undefined ? " " : specifier.fill + "";
  this.align = specifier.align === undefined ? ">" : specifier.align + "";
  this.sign = specifier.sign === undefined ? "-" : specifier.sign + "";
  this.symbol = specifier.symbol === undefined ? "" : specifier.symbol + "";
  this.zero = !!specifier.zero;
  this.width = specifier.width === undefined ? undefined : +specifier.width;
  this.comma = !!specifier.comma;
  this.precision = specifier.precision === undefined ? undefined : +specifier.precision;
  this.trim = !!specifier.trim;
  this.type = specifier.type === undefined ? "" : specifier.type + "";
}

FormatSpecifier.prototype.toString = function() {
  return this.fill
      + this.align
      + this.sign
      + this.symbol
      + (this.zero ? "0" : "")
      + (this.width === undefined ? "" : Math.max(1, this.width | 0))
      + (this.comma ? "," : "")
      + (this.precision === undefined ? "" : "." + Math.max(0, this.precision | 0))
      + (this.trim ? "~" : "")
      + this.type;
};


/***/ }),

/***/ "../node_modules/d3-format/src/formatTrim.js":
/*!***************************************************!*\
  !*** ../node_modules/d3-format/src/formatTrim.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.
/* harmony default export */ __webpack_exports__["default"] = (function(s) {
  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {
    switch (s[i]) {
      case ".": i0 = i1 = i; break;
      case "0": if (i0 === 0) i0 = i; i1 = i; break;
      default: if (!+s[i]) break out; if (i0 > 0) i0 = 0; break;
    }
  }
  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;
});


/***/ }),

/***/ "../node_modules/d3-format/src/formatTypes.js":
/*!****************************************************!*\
  !*** ../node_modules/d3-format/src/formatTypes.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _formatDecimal_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./formatDecimal.js */ "../node_modules/d3-format/src/formatDecimal.js");
/* harmony import */ var _formatPrefixAuto_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./formatPrefixAuto.js */ "../node_modules/d3-format/src/formatPrefixAuto.js");
/* harmony import */ var _formatRounded_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./formatRounded.js */ "../node_modules/d3-format/src/formatRounded.js");




/* harmony default export */ __webpack_exports__["default"] = ({
  "%": (x, p) => (x * 100).toFixed(p),
  "b": (x) => Math.round(x).toString(2),
  "c": (x) => x + "",
  "d": _formatDecimal_js__WEBPACK_IMPORTED_MODULE_0__["default"],
  "e": (x, p) => x.toExponential(p),
  "f": (x, p) => x.toFixed(p),
  "g": (x, p) => x.toPrecision(p),
  "o": (x) => Math.round(x).toString(8),
  "p": (x, p) => Object(_formatRounded_js__WEBPACK_IMPORTED_MODULE_2__["default"])(x * 100, p),
  "r": _formatRounded_js__WEBPACK_IMPORTED_MODULE_2__["default"],
  "s": _formatPrefixAuto_js__WEBPACK_IMPORTED_MODULE_1__["default"],
  "X": (x) => Math.round(x).toString(16).toUpperCase(),
  "x": (x) => Math.round(x).toString(16)
});


/***/ }),

/***/ "../node_modules/d3-format/src/identity.js":
/*!*************************************************!*\
  !*** ../node_modules/d3-format/src/identity.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(x) {
  return x;
});


/***/ }),

/***/ "../node_modules/d3-format/src/index.js":
/*!**********************************************!*\
  !*** ../node_modules/d3-format/src/index.js ***!
  \**********************************************/
/*! exports provided: formatDefaultLocale, format, formatPrefix, formatLocale, formatSpecifier, FormatSpecifier, precisionFixed, precisionPrefix, precisionRound */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _defaultLocale_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./defaultLocale.js */ "../node_modules/d3-format/src/defaultLocale.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "formatDefaultLocale", function() { return _defaultLocale_js__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "format", function() { return _defaultLocale_js__WEBPACK_IMPORTED_MODULE_0__["format"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "formatPrefix", function() { return _defaultLocale_js__WEBPACK_IMPORTED_MODULE_0__["formatPrefix"]; });

/* harmony import */ var _locale_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./locale.js */ "../node_modules/d3-format/src/locale.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "formatLocale", function() { return _locale_js__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _formatSpecifier_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./formatSpecifier.js */ "../node_modules/d3-format/src/formatSpecifier.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "formatSpecifier", function() { return _formatSpecifier_js__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FormatSpecifier", function() { return _formatSpecifier_js__WEBPACK_IMPORTED_MODULE_2__["FormatSpecifier"]; });

/* harmony import */ var _precisionFixed_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./precisionFixed.js */ "../node_modules/d3-format/src/precisionFixed.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "precisionFixed", function() { return _precisionFixed_js__WEBPACK_IMPORTED_MODULE_3__["default"]; });

/* harmony import */ var _precisionPrefix_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./precisionPrefix.js */ "../node_modules/d3-format/src/precisionPrefix.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "precisionPrefix", function() { return _precisionPrefix_js__WEBPACK_IMPORTED_MODULE_4__["default"]; });

/* harmony import */ var _precisionRound_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./precisionRound.js */ "../node_modules/d3-format/src/precisionRound.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "precisionRound", function() { return _precisionRound_js__WEBPACK_IMPORTED_MODULE_5__["default"]; });









/***/ }),

/***/ "../node_modules/d3-format/src/locale.js":
/*!***********************************************!*\
  !*** ../node_modules/d3-format/src/locale.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _exponent_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./exponent.js */ "../node_modules/d3-format/src/exponent.js");
/* harmony import */ var _formatGroup_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./formatGroup.js */ "../node_modules/d3-format/src/formatGroup.js");
/* harmony import */ var _formatNumerals_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./formatNumerals.js */ "../node_modules/d3-format/src/formatNumerals.js");
/* harmony import */ var _formatSpecifier_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./formatSpecifier.js */ "../node_modules/d3-format/src/formatSpecifier.js");
/* harmony import */ var _formatTrim_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./formatTrim.js */ "../node_modules/d3-format/src/formatTrim.js");
/* harmony import */ var _formatTypes_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./formatTypes.js */ "../node_modules/d3-format/src/formatTypes.js");
/* harmony import */ var _formatPrefixAuto_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./formatPrefixAuto.js */ "../node_modules/d3-format/src/formatPrefixAuto.js");
/* harmony import */ var _identity_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./identity.js */ "../node_modules/d3-format/src/identity.js");









var map = Array.prototype.map,
    prefixes = ["y","z","a","f","p","n","µ","m","","k","M","G","T","P","E","Z","Y"];

/* harmony default export */ __webpack_exports__["default"] = (function(locale) {
  var group = locale.grouping === undefined || locale.thousands === undefined ? _identity_js__WEBPACK_IMPORTED_MODULE_7__["default"] : Object(_formatGroup_js__WEBPACK_IMPORTED_MODULE_1__["default"])(map.call(locale.grouping, Number), locale.thousands + ""),
      currencyPrefix = locale.currency === undefined ? "" : locale.currency[0] + "",
      currencySuffix = locale.currency === undefined ? "" : locale.currency[1] + "",
      decimal = locale.decimal === undefined ? "." : locale.decimal + "",
      numerals = locale.numerals === undefined ? _identity_js__WEBPACK_IMPORTED_MODULE_7__["default"] : Object(_formatNumerals_js__WEBPACK_IMPORTED_MODULE_2__["default"])(map.call(locale.numerals, String)),
      percent = locale.percent === undefined ? "%" : locale.percent + "",
      minus = locale.minus === undefined ? "−" : locale.minus + "",
      nan = locale.nan === undefined ? "NaN" : locale.nan + "";

  function newFormat(specifier) {
    specifier = Object(_formatSpecifier_js__WEBPACK_IMPORTED_MODULE_3__["default"])(specifier);

    var fill = specifier.fill,
        align = specifier.align,
        sign = specifier.sign,
        symbol = specifier.symbol,
        zero = specifier.zero,
        width = specifier.width,
        comma = specifier.comma,
        precision = specifier.precision,
        trim = specifier.trim,
        type = specifier.type;

    // The "n" type is an alias for ",g".
    if (type === "n") comma = true, type = "g";

    // The "" type, and any invalid type, is an alias for ".12~g".
    else if (!_formatTypes_js__WEBPACK_IMPORTED_MODULE_5__["default"][type]) precision === undefined && (precision = 12), trim = true, type = "g";

    // If zero fill is specified, padding goes after sign and before digits.
    if (zero || (fill === "0" && align === "=")) zero = true, fill = "0", align = "=";

    // Compute the prefix and suffix.
    // For SI-prefix, the suffix is lazily computed.
    var prefix = symbol === "$" ? currencyPrefix : symbol === "#" && /[boxX]/.test(type) ? "0" + type.toLowerCase() : "",
        suffix = symbol === "$" ? currencySuffix : /[%p]/.test(type) ? percent : "";

    // What format function should we use?
    // Is this an integer type?
    // Can this type generate exponential notation?
    var formatType = _formatTypes_js__WEBPACK_IMPORTED_MODULE_5__["default"][type],
        maybeSuffix = /[defgprs%]/.test(type);

    // Set the default precision if not specified,
    // or clamp the specified precision to the supported range.
    // For significant precision, it must be in [1, 21].
    // For fixed precision, it must be in [0, 20].
    precision = precision === undefined ? 6
        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))
        : Math.max(0, Math.min(20, precision));

    function format(value) {
      var valuePrefix = prefix,
          valueSuffix = suffix,
          i, n, c;

      if (type === "c") {
        valueSuffix = formatType(value) + valueSuffix;
        value = "";
      } else {
        value = +value;

        // Determine the sign. -0 is not less than 0, but 1 / -0 is!
        var valueNegative = value < 0 || 1 / value < 0;

        // Perform the initial formatting.
        value = isNaN(value) ? nan : formatType(Math.abs(value), precision);

        // Trim insignificant zeros.
        if (trim) value = Object(_formatTrim_js__WEBPACK_IMPORTED_MODULE_4__["default"])(value);

        // If a negative value rounds to zero after formatting, and no explicit positive sign is requested, hide the sign.
        if (valueNegative && +value === 0 && sign !== "+") valueNegative = false;

        // Compute the prefix and suffix.
        valuePrefix = (valueNegative ? (sign === "(" ? sign : minus) : sign === "-" || sign === "(" ? "" : sign) + valuePrefix;
        valueSuffix = (type === "s" ? prefixes[8 + _formatPrefixAuto_js__WEBPACK_IMPORTED_MODULE_6__["prefixExponent"] / 3] : "") + valueSuffix + (valueNegative && sign === "(" ? ")" : "");

        // Break the formatted value into the integer “value” part that can be
        // grouped, and fractional or exponential “suffix” part that is not.
        if (maybeSuffix) {
          i = -1, n = value.length;
          while (++i < n) {
            if (c = value.charCodeAt(i), 48 > c || c > 57) {
              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;
              value = value.slice(0, i);
              break;
            }
          }
        }
      }

      // If the fill character is not "0", grouping is applied before padding.
      if (comma && !zero) value = group(value, Infinity);

      // Compute the padding.
      var length = valuePrefix.length + value.length + valueSuffix.length,
          padding = length < width ? new Array(width - length + 1).join(fill) : "";

      // If the fill character is "0", grouping is applied after padding.
      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = "";

      // Reconstruct the final output based on the desired alignment.
      switch (align) {
        case "<": value = valuePrefix + value + valueSuffix + padding; break;
        case "=": value = valuePrefix + padding + value + valueSuffix; break;
        case "^": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;
        default: value = padding + valuePrefix + value + valueSuffix; break;
      }

      return numerals(value);
    }

    format.toString = function() {
      return specifier + "";
    };

    return format;
  }

  function formatPrefix(specifier, value) {
    var f = newFormat((specifier = Object(_formatSpecifier_js__WEBPACK_IMPORTED_MODULE_3__["default"])(specifier), specifier.type = "f", specifier)),
        e = Math.max(-8, Math.min(8, Math.floor(Object(_exponent_js__WEBPACK_IMPORTED_MODULE_0__["default"])(value) / 3))) * 3,
        k = Math.pow(10, -e),
        prefix = prefixes[8 + e / 3];
    return function(value) {
      return f(k * value) + prefix;
    };
  }

  return {
    format: newFormat,
    formatPrefix: formatPrefix
  };
});


/***/ }),

/***/ "../node_modules/d3-format/src/precisionFixed.js":
/*!*******************************************************!*\
  !*** ../node_modules/d3-format/src/precisionFixed.js ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _exponent_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./exponent.js */ "../node_modules/d3-format/src/exponent.js");


/* harmony default export */ __webpack_exports__["default"] = (function(step) {
  return Math.max(0, -Object(_exponent_js__WEBPACK_IMPORTED_MODULE_0__["default"])(Math.abs(step)));
});


/***/ }),

/***/ "../node_modules/d3-format/src/precisionPrefix.js":
/*!********************************************************!*\
  !*** ../node_modules/d3-format/src/precisionPrefix.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _exponent_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./exponent.js */ "../node_modules/d3-format/src/exponent.js");


/* harmony default export */ __webpack_exports__["default"] = (function(step, value) {
  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(Object(_exponent_js__WEBPACK_IMPORTED_MODULE_0__["default"])(value) / 3))) * 3 - Object(_exponent_js__WEBPACK_IMPORTED_MODULE_0__["default"])(Math.abs(step)));
});


/***/ }),

/***/ "../node_modules/d3-format/src/precisionRound.js":
/*!*******************************************************!*\
  !*** ../node_modules/d3-format/src/precisionRound.js ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _exponent_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./exponent.js */ "../node_modules/d3-format/src/exponent.js");


/* harmony default export */ __webpack_exports__["default"] = (function(step, max) {
  step = Math.abs(step), max = Math.abs(max) - step;
  return Math.max(0, Object(_exponent_js__WEBPACK_IMPORTED_MODULE_0__["default"])(max) - Object(_exponent_js__WEBPACK_IMPORTED_MODULE_0__["default"])(step)) + 1;
});


/***/ }),

/***/ "../node_modules/d3-interpolate/src/array.js":
/*!***************************************************!*\
  !*** ../node_modules/d3-interpolate/src/array.js ***!
  \***************************************************/
/*! exports provided: default, genericArray */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "genericArray", function() { return genericArray; });
/* harmony import */ var _value_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./value.js */ "../node_modules/d3-interpolate/src/value.js");
/* harmony import */ var _numberArray_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./numberArray.js */ "../node_modules/d3-interpolate/src/numberArray.js");



/* harmony default export */ __webpack_exports__["default"] = (function(a, b) {
  return (Object(_numberArray_js__WEBPACK_IMPORTED_MODULE_1__["isNumberArray"])(b) ? _numberArray_js__WEBPACK_IMPORTED_MODULE_1__["default"] : genericArray)(a, b);
});

function genericArray(a, b) {
  var nb = b ? b.length : 0,
      na = a ? Math.min(nb, a.length) : 0,
      x = new Array(na),
      c = new Array(nb),
      i;

  for (i = 0; i < na; ++i) x[i] = Object(_value_js__WEBPACK_IMPORTED_MODULE_0__["default"])(a[i], b[i]);
  for (; i < nb; ++i) c[i] = b[i];

  return function(t) {
    for (i = 0; i < na; ++i) c[i] = x[i](t);
    return c;
  };
}


/***/ }),

/***/ "../node_modules/d3-interpolate/src/basis.js":
/*!***************************************************!*\
  !*** ../node_modules/d3-interpolate/src/basis.js ***!
  \***************************************************/
/*! exports provided: basis, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "basis", function() { return basis; });
function basis(t1, v0, v1, v2, v3) {
  var t2 = t1 * t1, t3 = t2 * t1;
  return ((1 - 3 * t1 + 3 * t2 - t3) * v0
      + (4 - 6 * t2 + 3 * t3) * v1
      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2
      + t3 * v3) / 6;
}

/* harmony default export */ __webpack_exports__["default"] = (function(values) {
  var n = values.length - 1;
  return function(t) {
    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),
        v1 = values[i],
        v2 = values[i + 1],
        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,
        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;
    return basis((t - i / n) * n, v0, v1, v2, v3);
  };
});


/***/ }),

/***/ "../node_modules/d3-interpolate/src/basisClosed.js":
/*!*********************************************************!*\
  !*** ../node_modules/d3-interpolate/src/basisClosed.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _basis_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./basis.js */ "../node_modules/d3-interpolate/src/basis.js");


/* harmony default export */ __webpack_exports__["default"] = (function(values) {
  var n = values.length;
  return function(t) {
    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),
        v0 = values[(i + n - 1) % n],
        v1 = values[i % n],
        v2 = values[(i + 1) % n],
        v3 = values[(i + 2) % n];
    return Object(_basis_js__WEBPACK_IMPORTED_MODULE_0__["basis"])((t - i / n) * n, v0, v1, v2, v3);
  };
});


/***/ }),

/***/ "../node_modules/d3-interpolate/src/color.js":
/*!***************************************************!*\
  !*** ../node_modules/d3-interpolate/src/color.js ***!
  \***************************************************/
/*! exports provided: hue, gamma, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hue", function() { return hue; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "gamma", function() { return gamma; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return nogamma; });
/* harmony import */ var _constant_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constant.js */ "../node_modules/d3-interpolate/src/constant.js");


function linear(a, d) {
  return function(t) {
    return a + t * d;
  };
}

function exponential(a, b, y) {
  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {
    return Math.pow(a + t * b, y);
  };
}

function hue(a, b) {
  var d = b - a;
  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : Object(_constant_js__WEBPACK_IMPORTED_MODULE_0__["default"])(isNaN(a) ? b : a);
}

function gamma(y) {
  return (y = +y) === 1 ? nogamma : function(a, b) {
    return b - a ? exponential(a, b, y) : Object(_constant_js__WEBPACK_IMPORTED_MODULE_0__["default"])(isNaN(a) ? b : a);
  };
}

function nogamma(a, b) {
  var d = b - a;
  return d ? linear(a, d) : Object(_constant_js__WEBPACK_IMPORTED_MODULE_0__["default"])(isNaN(a) ? b : a);
}


/***/ }),

/***/ "../node_modules/d3-interpolate/src/constant.js":
/*!******************************************************!*\
  !*** ../node_modules/d3-interpolate/src/constant.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (x => () => x);


/***/ }),

/***/ "../node_modules/d3-interpolate/src/cubehelix.js":
/*!*******************************************************!*\
  !*** ../node_modules/d3-interpolate/src/cubehelix.js ***!
  \*******************************************************/
/*! exports provided: default, cubehelixLong */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cubehelixLong", function() { return cubehelixLong; });
/* harmony import */ var d3_color__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-color */ "../node_modules/d3-color/src/index.js");
/* harmony import */ var _color_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./color.js */ "../node_modules/d3-interpolate/src/color.js");



function cubehelix(hue) {
  return (function cubehelixGamma(y) {
    y = +y;

    function cubehelix(start, end) {
      var h = hue((start = Object(d3_color__WEBPACK_IMPORTED_MODULE_0__["cubehelix"])(start)).h, (end = Object(d3_color__WEBPACK_IMPORTED_MODULE_0__["cubehelix"])(end)).h),
          s = Object(_color_js__WEBPACK_IMPORTED_MODULE_1__["default"])(start.s, end.s),
          l = Object(_color_js__WEBPACK_IMPORTED_MODULE_1__["default"])(start.l, end.l),
          opacity = Object(_color_js__WEBPACK_IMPORTED_MODULE_1__["default"])(start.opacity, end.opacity);
      return function(t) {
        start.h = h(t);
        start.s = s(t);
        start.l = l(Math.pow(t, y));
        start.opacity = opacity(t);
        return start + "";
      };
    }

    cubehelix.gamma = cubehelixGamma;

    return cubehelix;
  })(1);
}

/* harmony default export */ __webpack_exports__["default"] = (cubehelix(_color_js__WEBPACK_IMPORTED_MODULE_1__["hue"]));
var cubehelixLong = cubehelix(_color_js__WEBPACK_IMPORTED_MODULE_1__["default"]);


/***/ }),

/***/ "../node_modules/d3-interpolate/src/date.js":
/*!**************************************************!*\
  !*** ../node_modules/d3-interpolate/src/date.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(a, b) {
  var d = new Date;
  return a = +a, b = +b, function(t) {
    return d.setTime(a * (1 - t) + b * t), d;
  };
});


/***/ }),

/***/ "../node_modules/d3-interpolate/src/discrete.js":
/*!******************************************************!*\
  !*** ../node_modules/d3-interpolate/src/discrete.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(range) {
  var n = range.length;
  return function(t) {
    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];
  };
});


/***/ }),

/***/ "../node_modules/d3-interpolate/src/hcl.js":
/*!*************************************************!*\
  !*** ../node_modules/d3-interpolate/src/hcl.js ***!
  \*************************************************/
/*! exports provided: default, hclLong */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hclLong", function() { return hclLong; });
/* harmony import */ var d3_color__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-color */ "../node_modules/d3-color/src/index.js");
/* harmony import */ var _color_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./color.js */ "../node_modules/d3-interpolate/src/color.js");



function hcl(hue) {
  return function(start, end) {
    var h = hue((start = Object(d3_color__WEBPACK_IMPORTED_MODULE_0__["hcl"])(start)).h, (end = Object(d3_color__WEBPACK_IMPORTED_MODULE_0__["hcl"])(end)).h),
        c = Object(_color_js__WEBPACK_IMPORTED_MODULE_1__["default"])(start.c, end.c),
        l = Object(_color_js__WEBPACK_IMPORTED_MODULE_1__["default"])(start.l, end.l),
        opacity = Object(_color_js__WEBPACK_IMPORTED_MODULE_1__["default"])(start.opacity, end.opacity);
    return function(t) {
      start.h = h(t);
      start.c = c(t);
      start.l = l(t);
      start.opacity = opacity(t);
      return start + "";
    };
  }
}

/* harmony default export */ __webpack_exports__["default"] = (hcl(_color_js__WEBPACK_IMPORTED_MODULE_1__["hue"]));
var hclLong = hcl(_color_js__WEBPACK_IMPORTED_MODULE_1__["default"]);


/***/ }),

/***/ "../node_modules/d3-interpolate/src/hsl.js":
/*!*************************************************!*\
  !*** ../node_modules/d3-interpolate/src/hsl.js ***!
  \*************************************************/
/*! exports provided: default, hslLong */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hslLong", function() { return hslLong; });
/* harmony import */ var d3_color__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-color */ "../node_modules/d3-color/src/index.js");
/* harmony import */ var _color_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./color.js */ "../node_modules/d3-interpolate/src/color.js");



function hsl(hue) {
  return function(start, end) {
    var h = hue((start = Object(d3_color__WEBPACK_IMPORTED_MODULE_0__["hsl"])(start)).h, (end = Object(d3_color__WEBPACK_IMPORTED_MODULE_0__["hsl"])(end)).h),
        s = Object(_color_js__WEBPACK_IMPORTED_MODULE_1__["default"])(start.s, end.s),
        l = Object(_color_js__WEBPACK_IMPORTED_MODULE_1__["default"])(start.l, end.l),
        opacity = Object(_color_js__WEBPACK_IMPORTED_MODULE_1__["default"])(start.opacity, end.opacity);
    return function(t) {
      start.h = h(t);
      start.s = s(t);
      start.l = l(t);
      start.opacity = opacity(t);
      return start + "";
    };
  }
}

/* harmony default export */ __webpack_exports__["default"] = (hsl(_color_js__WEBPACK_IMPORTED_MODULE_1__["hue"]));
var hslLong = hsl(_color_js__WEBPACK_IMPORTED_MODULE_1__["default"]);


/***/ }),

/***/ "../node_modules/d3-interpolate/src/hue.js":
/*!*************************************************!*\
  !*** ../node_modules/d3-interpolate/src/hue.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _color_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./color.js */ "../node_modules/d3-interpolate/src/color.js");


/* harmony default export */ __webpack_exports__["default"] = (function(a, b) {
  var i = Object(_color_js__WEBPACK_IMPORTED_MODULE_0__["hue"])(+a, +b);
  return function(t) {
    var x = i(t);
    return x - 360 * Math.floor(x / 360);
  };
});


/***/ }),

/***/ "../node_modules/d3-interpolate/src/index.js":
/*!***************************************************!*\
  !*** ../node_modules/d3-interpolate/src/index.js ***!
  \***************************************************/
/*! exports provided: interpolate, interpolateArray, interpolateBasis, interpolateBasisClosed, interpolateDate, interpolateDiscrete, interpolateHue, interpolateNumber, interpolateNumberArray, interpolateObject, interpolateRound, interpolateString, interpolateTransformCss, interpolateTransformSvg, interpolateZoom, interpolateRgb, interpolateRgbBasis, interpolateRgbBasisClosed, interpolateHsl, interpolateHslLong, interpolateLab, interpolateHcl, interpolateHclLong, interpolateCubehelix, interpolateCubehelixLong, piecewise, quantize */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _value_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./value.js */ "../node_modules/d3-interpolate/src/value.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolate", function() { return _value_js__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _array_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./array.js */ "../node_modules/d3-interpolate/src/array.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateArray", function() { return _array_js__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _basis_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./basis.js */ "../node_modules/d3-interpolate/src/basis.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateBasis", function() { return _basis_js__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony import */ var _basisClosed_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./basisClosed.js */ "../node_modules/d3-interpolate/src/basisClosed.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateBasisClosed", function() { return _basisClosed_js__WEBPACK_IMPORTED_MODULE_3__["default"]; });

/* harmony import */ var _date_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./date.js */ "../node_modules/d3-interpolate/src/date.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateDate", function() { return _date_js__WEBPACK_IMPORTED_MODULE_4__["default"]; });

/* harmony import */ var _discrete_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./discrete.js */ "../node_modules/d3-interpolate/src/discrete.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateDiscrete", function() { return _discrete_js__WEBPACK_IMPORTED_MODULE_5__["default"]; });

/* harmony import */ var _hue_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./hue.js */ "../node_modules/d3-interpolate/src/hue.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateHue", function() { return _hue_js__WEBPACK_IMPORTED_MODULE_6__["default"]; });

/* harmony import */ var _number_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./number.js */ "../node_modules/d3-interpolate/src/number.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateNumber", function() { return _number_js__WEBPACK_IMPORTED_MODULE_7__["default"]; });

/* harmony import */ var _numberArray_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./numberArray.js */ "../node_modules/d3-interpolate/src/numberArray.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateNumberArray", function() { return _numberArray_js__WEBPACK_IMPORTED_MODULE_8__["default"]; });

/* harmony import */ var _object_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./object.js */ "../node_modules/d3-interpolate/src/object.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateObject", function() { return _object_js__WEBPACK_IMPORTED_MODULE_9__["default"]; });

/* harmony import */ var _round_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./round.js */ "../node_modules/d3-interpolate/src/round.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateRound", function() { return _round_js__WEBPACK_IMPORTED_MODULE_10__["default"]; });

/* harmony import */ var _string_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./string.js */ "../node_modules/d3-interpolate/src/string.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateString", function() { return _string_js__WEBPACK_IMPORTED_MODULE_11__["default"]; });

/* harmony import */ var _transform_index_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./transform/index.js */ "../node_modules/d3-interpolate/src/transform/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateTransformCss", function() { return _transform_index_js__WEBPACK_IMPORTED_MODULE_12__["interpolateTransformCss"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateTransformSvg", function() { return _transform_index_js__WEBPACK_IMPORTED_MODULE_12__["interpolateTransformSvg"]; });

/* harmony import */ var _zoom_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./zoom.js */ "../node_modules/d3-interpolate/src/zoom.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateZoom", function() { return _zoom_js__WEBPACK_IMPORTED_MODULE_13__["default"]; });

/* harmony import */ var _rgb_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./rgb.js */ "../node_modules/d3-interpolate/src/rgb.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateRgb", function() { return _rgb_js__WEBPACK_IMPORTED_MODULE_14__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateRgbBasis", function() { return _rgb_js__WEBPACK_IMPORTED_MODULE_14__["rgbBasis"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateRgbBasisClosed", function() { return _rgb_js__WEBPACK_IMPORTED_MODULE_14__["rgbBasisClosed"]; });

/* harmony import */ var _hsl_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./hsl.js */ "../node_modules/d3-interpolate/src/hsl.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateHsl", function() { return _hsl_js__WEBPACK_IMPORTED_MODULE_15__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateHslLong", function() { return _hsl_js__WEBPACK_IMPORTED_MODULE_15__["hslLong"]; });

/* harmony import */ var _lab_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./lab.js */ "../node_modules/d3-interpolate/src/lab.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateLab", function() { return _lab_js__WEBPACK_IMPORTED_MODULE_16__["default"]; });

/* harmony import */ var _hcl_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./hcl.js */ "../node_modules/d3-interpolate/src/hcl.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateHcl", function() { return _hcl_js__WEBPACK_IMPORTED_MODULE_17__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateHclLong", function() { return _hcl_js__WEBPACK_IMPORTED_MODULE_17__["hclLong"]; });

/* harmony import */ var _cubehelix_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./cubehelix.js */ "../node_modules/d3-interpolate/src/cubehelix.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateCubehelix", function() { return _cubehelix_js__WEBPACK_IMPORTED_MODULE_18__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateCubehelixLong", function() { return _cubehelix_js__WEBPACK_IMPORTED_MODULE_18__["cubehelixLong"]; });

/* harmony import */ var _piecewise_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./piecewise.js */ "../node_modules/d3-interpolate/src/piecewise.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "piecewise", function() { return _piecewise_js__WEBPACK_IMPORTED_MODULE_19__["default"]; });

/* harmony import */ var _quantize_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./quantize.js */ "../node_modules/d3-interpolate/src/quantize.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "quantize", function() { return _quantize_js__WEBPACK_IMPORTED_MODULE_20__["default"]; });
























/***/ }),

/***/ "../node_modules/d3-interpolate/src/lab.js":
/*!*************************************************!*\
  !*** ../node_modules/d3-interpolate/src/lab.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return lab; });
/* harmony import */ var d3_color__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-color */ "../node_modules/d3-color/src/index.js");
/* harmony import */ var _color_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./color.js */ "../node_modules/d3-interpolate/src/color.js");



function lab(start, end) {
  var l = Object(_color_js__WEBPACK_IMPORTED_MODULE_1__["default"])((start = Object(d3_color__WEBPACK_IMPORTED_MODULE_0__["lab"])(start)).l, (end = Object(d3_color__WEBPACK_IMPORTED_MODULE_0__["lab"])(end)).l),
      a = Object(_color_js__WEBPACK_IMPORTED_MODULE_1__["default"])(start.a, end.a),
      b = Object(_color_js__WEBPACK_IMPORTED_MODULE_1__["default"])(start.b, end.b),
      opacity = Object(_color_js__WEBPACK_IMPORTED_MODULE_1__["default"])(start.opacity, end.opacity);
  return function(t) {
    start.l = l(t);
    start.a = a(t);
    start.b = b(t);
    start.opacity = opacity(t);
    return start + "";
  };
}


/***/ }),

/***/ "../node_modules/d3-interpolate/src/number.js":
/*!****************************************************!*\
  !*** ../node_modules/d3-interpolate/src/number.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(a, b) {
  return a = +a, b = +b, function(t) {
    return a * (1 - t) + b * t;
  };
});


/***/ }),

/***/ "../node_modules/d3-interpolate/src/numberArray.js":
/*!*********************************************************!*\
  !*** ../node_modules/d3-interpolate/src/numberArray.js ***!
  \*********************************************************/
/*! exports provided: default, isNumberArray */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isNumberArray", function() { return isNumberArray; });
/* harmony default export */ __webpack_exports__["default"] = (function(a, b) {
  if (!b) b = [];
  var n = a ? Math.min(b.length, a.length) : 0,
      c = b.slice(),
      i;
  return function(t) {
    for (i = 0; i < n; ++i) c[i] = a[i] * (1 - t) + b[i] * t;
    return c;
  };
});

function isNumberArray(x) {
  return ArrayBuffer.isView(x) && !(x instanceof DataView);
}


/***/ }),

/***/ "../node_modules/d3-interpolate/src/object.js":
/*!****************************************************!*\
  !*** ../node_modules/d3-interpolate/src/object.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _value_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./value.js */ "../node_modules/d3-interpolate/src/value.js");


/* harmony default export */ __webpack_exports__["default"] = (function(a, b) {
  var i = {},
      c = {},
      k;

  if (a === null || typeof a !== "object") a = {};
  if (b === null || typeof b !== "object") b = {};

  for (k in b) {
    if (k in a) {
      i[k] = Object(_value_js__WEBPACK_IMPORTED_MODULE_0__["default"])(a[k], b[k]);
    } else {
      c[k] = b[k];
    }
  }

  return function(t) {
    for (k in i) c[k] = i[k](t);
    return c;
  };
});


/***/ }),

/***/ "../node_modules/d3-interpolate/src/piecewise.js":
/*!*******************************************************!*\
  !*** ../node_modules/d3-interpolate/src/piecewise.js ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return piecewise; });
/* harmony import */ var _value_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./value.js */ "../node_modules/d3-interpolate/src/value.js");


function piecewise(interpolate, values) {
  if (values === undefined) values = interpolate, interpolate = _value_js__WEBPACK_IMPORTED_MODULE_0__["default"];
  var i = 0, n = values.length - 1, v = values[0], I = new Array(n < 0 ? 0 : n);
  while (i < n) I[i] = interpolate(v, v = values[++i]);
  return function(t) {
    var i = Math.max(0, Math.min(n - 1, Math.floor(t *= n)));
    return I[i](t - i);
  };
}


/***/ }),

/***/ "../node_modules/d3-interpolate/src/quantize.js":
/*!******************************************************!*\
  !*** ../node_modules/d3-interpolate/src/quantize.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(interpolator, n) {
  var samples = new Array(n);
  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));
  return samples;
});


/***/ }),

/***/ "../node_modules/d3-interpolate/src/rgb.js":
/*!*************************************************!*\
  !*** ../node_modules/d3-interpolate/src/rgb.js ***!
  \*************************************************/
/*! exports provided: default, rgbBasis, rgbBasisClosed */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rgbBasis", function() { return rgbBasis; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rgbBasisClosed", function() { return rgbBasisClosed; });
/* harmony import */ var d3_color__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-color */ "../node_modules/d3-color/src/index.js");
/* harmony import */ var _basis_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./basis.js */ "../node_modules/d3-interpolate/src/basis.js");
/* harmony import */ var _basisClosed_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./basisClosed.js */ "../node_modules/d3-interpolate/src/basisClosed.js");
/* harmony import */ var _color_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./color.js */ "../node_modules/d3-interpolate/src/color.js");





/* harmony default export */ __webpack_exports__["default"] = ((function rgbGamma(y) {
  var color = Object(_color_js__WEBPACK_IMPORTED_MODULE_3__["gamma"])(y);

  function rgb(start, end) {
    var r = color((start = Object(d3_color__WEBPACK_IMPORTED_MODULE_0__["rgb"])(start)).r, (end = Object(d3_color__WEBPACK_IMPORTED_MODULE_0__["rgb"])(end)).r),
        g = color(start.g, end.g),
        b = color(start.b, end.b),
        opacity = Object(_color_js__WEBPACK_IMPORTED_MODULE_3__["default"])(start.opacity, end.opacity);
    return function(t) {
      start.r = r(t);
      start.g = g(t);
      start.b = b(t);
      start.opacity = opacity(t);
      return start + "";
    };
  }

  rgb.gamma = rgbGamma;

  return rgb;
})(1));

function rgbSpline(spline) {
  return function(colors) {
    var n = colors.length,
        r = new Array(n),
        g = new Array(n),
        b = new Array(n),
        i, color;
    for (i = 0; i < n; ++i) {
      color = Object(d3_color__WEBPACK_IMPORTED_MODULE_0__["rgb"])(colors[i]);
      r[i] = color.r || 0;
      g[i] = color.g || 0;
      b[i] = color.b || 0;
    }
    r = spline(r);
    g = spline(g);
    b = spline(b);
    color.opacity = 1;
    return function(t) {
      color.r = r(t);
      color.g = g(t);
      color.b = b(t);
      return color + "";
    };
  };
}

var rgbBasis = rgbSpline(_basis_js__WEBPACK_IMPORTED_MODULE_1__["default"]);
var rgbBasisClosed = rgbSpline(_basisClosed_js__WEBPACK_IMPORTED_MODULE_2__["default"]);


/***/ }),

/***/ "../node_modules/d3-interpolate/src/round.js":
/*!***************************************************!*\
  !*** ../node_modules/d3-interpolate/src/round.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(a, b) {
  return a = +a, b = +b, function(t) {
    return Math.round(a * (1 - t) + b * t);
  };
});


/***/ }),

/***/ "../node_modules/d3-interpolate/src/string.js":
/*!****************************************************!*\
  !*** ../node_modules/d3-interpolate/src/string.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _number_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./number.js */ "../node_modules/d3-interpolate/src/number.js");


var reA = /[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,
    reB = new RegExp(reA.source, "g");

function zero(b) {
  return function() {
    return b;
  };
}

function one(b) {
  return function(t) {
    return b(t) + "";
  };
}

/* harmony default export */ __webpack_exports__["default"] = (function(a, b) {
  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b
      am, // current match in a
      bm, // current match in b
      bs, // string preceding current number in b, if any
      i = -1, // index in s
      s = [], // string constants and placeholders
      q = []; // number interpolators

  // Coerce inputs to strings.
  a = a + "", b = b + "";

  // Interpolate pairs of numbers in a & b.
  while ((am = reA.exec(a))
      && (bm = reB.exec(b))) {
    if ((bs = bm.index) > bi) { // a string precedes the next number in b
      bs = b.slice(bi, bs);
      if (s[i]) s[i] += bs; // coalesce with previous string
      else s[++i] = bs;
    }
    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match
      if (s[i]) s[i] += bm; // coalesce with previous string
      else s[++i] = bm;
    } else { // interpolate non-matching numbers
      s[++i] = null;
      q.push({i: i, x: Object(_number_js__WEBPACK_IMPORTED_MODULE_0__["default"])(am, bm)});
    }
    bi = reB.lastIndex;
  }

  // Add remains of b.
  if (bi < b.length) {
    bs = b.slice(bi);
    if (s[i]) s[i] += bs; // coalesce with previous string
    else s[++i] = bs;
  }

  // Special optimization for only a single match.
  // Otherwise, interpolate each of the numbers and rejoin the string.
  return s.length < 2 ? (q[0]
      ? one(q[0].x)
      : zero(b))
      : (b = q.length, function(t) {
          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);
          return s.join("");
        });
});


/***/ }),

/***/ "../node_modules/d3-interpolate/src/transform/decompose.js":
/*!*****************************************************************!*\
  !*** ../node_modules/d3-interpolate/src/transform/decompose.js ***!
  \*****************************************************************/
/*! exports provided: identity, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "identity", function() { return identity; });
var degrees = 180 / Math.PI;

var identity = {
  translateX: 0,
  translateY: 0,
  rotate: 0,
  skewX: 0,
  scaleX: 1,
  scaleY: 1
};

/* harmony default export */ __webpack_exports__["default"] = (function(a, b, c, d, e, f) {
  var scaleX, scaleY, skewX;
  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;
  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;
  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;
  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;
  return {
    translateX: e,
    translateY: f,
    rotate: Math.atan2(b, a) * degrees,
    skewX: Math.atan(skewX) * degrees,
    scaleX: scaleX,
    scaleY: scaleY
  };
});


/***/ }),

/***/ "../node_modules/d3-interpolate/src/transform/index.js":
/*!*************************************************************!*\
  !*** ../node_modules/d3-interpolate/src/transform/index.js ***!
  \*************************************************************/
/*! exports provided: interpolateTransformCss, interpolateTransformSvg */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "interpolateTransformCss", function() { return interpolateTransformCss; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "interpolateTransformSvg", function() { return interpolateTransformSvg; });
/* harmony import */ var _number_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../number.js */ "../node_modules/d3-interpolate/src/number.js");
/* harmony import */ var _parse_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./parse.js */ "../node_modules/d3-interpolate/src/transform/parse.js");



function interpolateTransform(parse, pxComma, pxParen, degParen) {

  function pop(s) {
    return s.length ? s.pop() + " " : "";
  }

  function translate(xa, ya, xb, yb, s, q) {
    if (xa !== xb || ya !== yb) {
      var i = s.push("translate(", null, pxComma, null, pxParen);
      q.push({i: i - 4, x: Object(_number_js__WEBPACK_IMPORTED_MODULE_0__["default"])(xa, xb)}, {i: i - 2, x: Object(_number_js__WEBPACK_IMPORTED_MODULE_0__["default"])(ya, yb)});
    } else if (xb || yb) {
      s.push("translate(" + xb + pxComma + yb + pxParen);
    }
  }

  function rotate(a, b, s, q) {
    if (a !== b) {
      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path
      q.push({i: s.push(pop(s) + "rotate(", null, degParen) - 2, x: Object(_number_js__WEBPACK_IMPORTED_MODULE_0__["default"])(a, b)});
    } else if (b) {
      s.push(pop(s) + "rotate(" + b + degParen);
    }
  }

  function skewX(a, b, s, q) {
    if (a !== b) {
      q.push({i: s.push(pop(s) + "skewX(", null, degParen) - 2, x: Object(_number_js__WEBPACK_IMPORTED_MODULE_0__["default"])(a, b)});
    } else if (b) {
      s.push(pop(s) + "skewX(" + b + degParen);
    }
  }

  function scale(xa, ya, xb, yb, s, q) {
    if (xa !== xb || ya !== yb) {
      var i = s.push(pop(s) + "scale(", null, ",", null, ")");
      q.push({i: i - 4, x: Object(_number_js__WEBPACK_IMPORTED_MODULE_0__["default"])(xa, xb)}, {i: i - 2, x: Object(_number_js__WEBPACK_IMPORTED_MODULE_0__["default"])(ya, yb)});
    } else if (xb !== 1 || yb !== 1) {
      s.push(pop(s) + "scale(" + xb + "," + yb + ")");
    }
  }

  return function(a, b) {
    var s = [], // string constants and placeholders
        q = []; // number interpolators
    a = parse(a), b = parse(b);
    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);
    rotate(a.rotate, b.rotate, s, q);
    skewX(a.skewX, b.skewX, s, q);
    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);
    a = b = null; // gc
    return function(t) {
      var i = -1, n = q.length, o;
      while (++i < n) s[(o = q[i]).i] = o.x(t);
      return s.join("");
    };
  };
}

var interpolateTransformCss = interpolateTransform(_parse_js__WEBPACK_IMPORTED_MODULE_1__["parseCss"], "px, ", "px)", "deg)");
var interpolateTransformSvg = interpolateTransform(_parse_js__WEBPACK_IMPORTED_MODULE_1__["parseSvg"], ", ", ")", ")");


/***/ }),

/***/ "../node_modules/d3-interpolate/src/transform/parse.js":
/*!*************************************************************!*\
  !*** ../node_modules/d3-interpolate/src/transform/parse.js ***!
  \*************************************************************/
/*! exports provided: parseCss, parseSvg */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "parseCss", function() { return parseCss; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "parseSvg", function() { return parseSvg; });
/* harmony import */ var _decompose_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./decompose.js */ "../node_modules/d3-interpolate/src/transform/decompose.js");


var svgNode;

/* eslint-disable no-undef */
function parseCss(value) {
  const m = new (typeof DOMMatrix === "function" ? DOMMatrix : WebKitCSSMatrix)(value + "");
  return m.isIdentity ? _decompose_js__WEBPACK_IMPORTED_MODULE_0__["identity"] : Object(_decompose_js__WEBPACK_IMPORTED_MODULE_0__["default"])(m.a, m.b, m.c, m.d, m.e, m.f);
}

function parseSvg(value) {
  if (value == null) return _decompose_js__WEBPACK_IMPORTED_MODULE_0__["identity"];
  if (!svgNode) svgNode = document.createElementNS("http://www.w3.org/2000/svg", "g");
  svgNode.setAttribute("transform", value);
  if (!(value = svgNode.transform.baseVal.consolidate())) return _decompose_js__WEBPACK_IMPORTED_MODULE_0__["identity"];
  value = value.matrix;
  return Object(_decompose_js__WEBPACK_IMPORTED_MODULE_0__["default"])(value.a, value.b, value.c, value.d, value.e, value.f);
}


/***/ }),

/***/ "../node_modules/d3-interpolate/src/value.js":
/*!***************************************************!*\
  !*** ../node_modules/d3-interpolate/src/value.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var d3_color__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-color */ "../node_modules/d3-color/src/index.js");
/* harmony import */ var _rgb_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./rgb.js */ "../node_modules/d3-interpolate/src/rgb.js");
/* harmony import */ var _array_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./array.js */ "../node_modules/d3-interpolate/src/array.js");
/* harmony import */ var _date_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./date.js */ "../node_modules/d3-interpolate/src/date.js");
/* harmony import */ var _number_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./number.js */ "../node_modules/d3-interpolate/src/number.js");
/* harmony import */ var _object_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./object.js */ "../node_modules/d3-interpolate/src/object.js");
/* harmony import */ var _string_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./string.js */ "../node_modules/d3-interpolate/src/string.js");
/* harmony import */ var _constant_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./constant.js */ "../node_modules/d3-interpolate/src/constant.js");
/* harmony import */ var _numberArray_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./numberArray.js */ "../node_modules/d3-interpolate/src/numberArray.js");










/* harmony default export */ __webpack_exports__["default"] = (function(a, b) {
  var t = typeof b, c;
  return b == null || t === "boolean" ? Object(_constant_js__WEBPACK_IMPORTED_MODULE_7__["default"])(b)
      : (t === "number" ? _number_js__WEBPACK_IMPORTED_MODULE_4__["default"]
      : t === "string" ? ((c = Object(d3_color__WEBPACK_IMPORTED_MODULE_0__["color"])(b)) ? (b = c, _rgb_js__WEBPACK_IMPORTED_MODULE_1__["default"]) : _string_js__WEBPACK_IMPORTED_MODULE_6__["default"])
      : b instanceof d3_color__WEBPACK_IMPORTED_MODULE_0__["color"] ? _rgb_js__WEBPACK_IMPORTED_MODULE_1__["default"]
      : b instanceof Date ? _date_js__WEBPACK_IMPORTED_MODULE_3__["default"]
      : Object(_numberArray_js__WEBPACK_IMPORTED_MODULE_8__["isNumberArray"])(b) ? _numberArray_js__WEBPACK_IMPORTED_MODULE_8__["default"]
      : Array.isArray(b) ? _array_js__WEBPACK_IMPORTED_MODULE_2__["genericArray"]
      : typeof b.valueOf !== "function" && typeof b.toString !== "function" || isNaN(b) ? _object_js__WEBPACK_IMPORTED_MODULE_5__["default"]
      : _number_js__WEBPACK_IMPORTED_MODULE_4__["default"])(a, b);
});


/***/ }),

/***/ "../node_modules/d3-interpolate/src/zoom.js":
/*!**************************************************!*\
  !*** ../node_modules/d3-interpolate/src/zoom.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
var epsilon2 = 1e-12;

function cosh(x) {
  return ((x = Math.exp(x)) + 1 / x) / 2;
}

function sinh(x) {
  return ((x = Math.exp(x)) - 1 / x) / 2;
}

function tanh(x) {
  return ((x = Math.exp(2 * x)) - 1) / (x + 1);
}

/* harmony default export */ __webpack_exports__["default"] = ((function zoomRho(rho, rho2, rho4) {

  // p0 = [ux0, uy0, w0]
  // p1 = [ux1, uy1, w1]
  function zoom(p0, p1) {
    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],
        ux1 = p1[0], uy1 = p1[1], w1 = p1[2],
        dx = ux1 - ux0,
        dy = uy1 - uy0,
        d2 = dx * dx + dy * dy,
        i,
        S;

    // Special case for u0 ≅ u1.
    if (d2 < epsilon2) {
      S = Math.log(w1 / w0) / rho;
      i = function(t) {
        return [
          ux0 + t * dx,
          uy0 + t * dy,
          w0 * Math.exp(rho * t * S)
        ];
      }
    }

    // General case.
    else {
      var d1 = Math.sqrt(d2),
          b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),
          b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),
          r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),
          r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);
      S = (r1 - r0) / rho;
      i = function(t) {
        var s = t * S,
            coshr0 = cosh(r0),
            u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));
        return [
          ux0 + u * dx,
          uy0 + u * dy,
          w0 * coshr0 / cosh(rho * s + r0)
        ];
      }
    }

    i.duration = S * 1000 * rho / Math.SQRT2;

    return i;
  }

  zoom.rho = function(_) {
    var _1 = Math.max(1e-3, +_), _2 = _1 * _1, _4 = _2 * _2;
    return zoomRho(_1, _2, _4);
  };

  return zoom;
})(Math.SQRT2, 2, 4));


/***/ }),

/***/ "../node_modules/d3-scale/src/band.js":
/*!********************************************!*\
  !*** ../node_modules/d3-scale/src/band.js ***!
  \********************************************/
/*! exports provided: default, point */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return band; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "point", function() { return point; });
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-array */ "../node_modules/d3-array/src/index.js");
/* harmony import */ var _init_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./init.js */ "../node_modules/d3-scale/src/init.js");
/* harmony import */ var _ordinal_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ordinal.js */ "../node_modules/d3-scale/src/ordinal.js");




function band() {
  var scale = Object(_ordinal_js__WEBPACK_IMPORTED_MODULE_2__["default"])().unknown(undefined),
      domain = scale.domain,
      ordinalRange = scale.range,
      r0 = 0,
      r1 = 1,
      step,
      bandwidth,
      round = false,
      paddingInner = 0,
      paddingOuter = 0,
      align = 0.5;

  delete scale.unknown;

  function rescale() {
    var n = domain().length,
        reverse = r1 < r0,
        start = reverse ? r1 : r0,
        stop = reverse ? r0 : r1;
    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);
    if (round) step = Math.floor(step);
    start += (stop - start - step * (n - paddingInner)) * align;
    bandwidth = step * (1 - paddingInner);
    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);
    var values = Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["range"])(n).map(function(i) { return start + step * i; });
    return ordinalRange(reverse ? values.reverse() : values);
  }

  scale.domain = function(_) {
    return arguments.length ? (domain(_), rescale()) : domain();
  };

  scale.range = function(_) {
    return arguments.length ? ([r0, r1] = _, r0 = +r0, r1 = +r1, rescale()) : [r0, r1];
  };

  scale.rangeRound = function(_) {
    return [r0, r1] = _, r0 = +r0, r1 = +r1, round = true, rescale();
  };

  scale.bandwidth = function() {
    return bandwidth;
  };

  scale.step = function() {
    return step;
  };

  scale.round = function(_) {
    return arguments.length ? (round = !!_, rescale()) : round;
  };

  scale.padding = function(_) {
    return arguments.length ? (paddingInner = Math.min(1, paddingOuter = +_), rescale()) : paddingInner;
  };

  scale.paddingInner = function(_) {
    return arguments.length ? (paddingInner = Math.min(1, _), rescale()) : paddingInner;
  };

  scale.paddingOuter = function(_) {
    return arguments.length ? (paddingOuter = +_, rescale()) : paddingOuter;
  };

  scale.align = function(_) {
    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;
  };

  scale.copy = function() {
    return band(domain(), [r0, r1])
        .round(round)
        .paddingInner(paddingInner)
        .paddingOuter(paddingOuter)
        .align(align);
  };

  return _init_js__WEBPACK_IMPORTED_MODULE_1__["initRange"].apply(rescale(), arguments);
}

function pointish(scale) {
  var copy = scale.copy;

  scale.padding = scale.paddingOuter;
  delete scale.paddingInner;
  delete scale.paddingOuter;

  scale.copy = function() {
    return pointish(copy());
  };

  return scale;
}

function point() {
  return pointish(band.apply(null, arguments).paddingInner(1));
}


/***/ }),

/***/ "../node_modules/d3-scale/src/constant.js":
/*!************************************************!*\
  !*** ../node_modules/d3-scale/src/constant.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return constants; });
function constants(x) {
  return function() {
    return x;
  };
}


/***/ }),

/***/ "../node_modules/d3-scale/src/continuous.js":
/*!**************************************************!*\
  !*** ../node_modules/d3-scale/src/continuous.js ***!
  \**************************************************/
/*! exports provided: identity, copy, transformer, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "identity", function() { return identity; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "copy", function() { return copy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "transformer", function() { return transformer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return continuous; });
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-array */ "../node_modules/d3-array/src/index.js");
/* harmony import */ var d3_interpolate__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-interpolate */ "../node_modules/d3-interpolate/src/index.js");
/* harmony import */ var _constant_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./constant.js */ "../node_modules/d3-scale/src/constant.js");
/* harmony import */ var _number_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./number.js */ "../node_modules/d3-scale/src/number.js");





var unit = [0, 1];

function identity(x) {
  return x;
}

function normalize(a, b) {
  return (b -= (a = +a))
      ? function(x) { return (x - a) / b; }
      : Object(_constant_js__WEBPACK_IMPORTED_MODULE_2__["default"])(isNaN(b) ? NaN : 0.5);
}

function clamper(a, b) {
  var t;
  if (a > b) t = a, a = b, b = t;
  return function(x) { return Math.max(a, Math.min(b, x)); };
}

// normalize(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].
// interpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding range value x in [a,b].
function bimap(domain, range, interpolate) {
  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];
  if (d1 < d0) d0 = normalize(d1, d0), r0 = interpolate(r1, r0);
  else d0 = normalize(d0, d1), r0 = interpolate(r0, r1);
  return function(x) { return r0(d0(x)); };
}

function polymap(domain, range, interpolate) {
  var j = Math.min(domain.length, range.length) - 1,
      d = new Array(j),
      r = new Array(j),
      i = -1;

  // Reverse descending domains.
  if (domain[j] < domain[0]) {
    domain = domain.slice().reverse();
    range = range.slice().reverse();
  }

  while (++i < j) {
    d[i] = normalize(domain[i], domain[i + 1]);
    r[i] = interpolate(range[i], range[i + 1]);
  }

  return function(x) {
    var i = Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["bisect"])(domain, x, 1, j) - 1;
    return r[i](d[i](x));
  };
}

function copy(source, target) {
  return target
      .domain(source.domain())
      .range(source.range())
      .interpolate(source.interpolate())
      .clamp(source.clamp())
      .unknown(source.unknown());
}

function transformer() {
  var domain = unit,
      range = unit,
      interpolate = d3_interpolate__WEBPACK_IMPORTED_MODULE_1__["interpolate"],
      transform,
      untransform,
      unknown,
      clamp = identity,
      piecewise,
      output,
      input;

  function rescale() {
    var n = Math.min(domain.length, range.length);
    if (clamp !== identity) clamp = clamper(domain[0], domain[n - 1]);
    piecewise = n > 2 ? polymap : bimap;
    output = input = null;
    return scale;
  }

  function scale(x) {
    return x == null || isNaN(x = +x) ? unknown : (output || (output = piecewise(domain.map(transform), range, interpolate)))(transform(clamp(x)));
  }

  scale.invert = function(y) {
    return clamp(untransform((input || (input = piecewise(range, domain.map(transform), d3_interpolate__WEBPACK_IMPORTED_MODULE_1__["interpolateNumber"])))(y)));
  };

  scale.domain = function(_) {
    return arguments.length ? (domain = Array.from(_, _number_js__WEBPACK_IMPORTED_MODULE_3__["default"]), rescale()) : domain.slice();
  };

  scale.range = function(_) {
    return arguments.length ? (range = Array.from(_), rescale()) : range.slice();
  };

  scale.rangeRound = function(_) {
    return range = Array.from(_), interpolate = d3_interpolate__WEBPACK_IMPORTED_MODULE_1__["interpolateRound"], rescale();
  };

  scale.clamp = function(_) {
    return arguments.length ? (clamp = _ ? true : identity, rescale()) : clamp !== identity;
  };

  scale.interpolate = function(_) {
    return arguments.length ? (interpolate = _, rescale()) : interpolate;
  };

  scale.unknown = function(_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };

  return function(t, u) {
    transform = t, untransform = u;
    return rescale();
  };
}

function continuous() {
  return transformer()(identity, identity);
}


/***/ }),

/***/ "../node_modules/d3-scale/src/diverging.js":
/*!*************************************************!*\
  !*** ../node_modules/d3-scale/src/diverging.js ***!
  \*************************************************/
/*! exports provided: default, divergingLog, divergingSymlog, divergingPow, divergingSqrt */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return diverging; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "divergingLog", function() { return divergingLog; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "divergingSymlog", function() { return divergingSymlog; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "divergingPow", function() { return divergingPow; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "divergingSqrt", function() { return divergingSqrt; });
/* harmony import */ var d3_interpolate__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-interpolate */ "../node_modules/d3-interpolate/src/index.js");
/* harmony import */ var _continuous_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./continuous.js */ "../node_modules/d3-scale/src/continuous.js");
/* harmony import */ var _init_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./init.js */ "../node_modules/d3-scale/src/init.js");
/* harmony import */ var _linear_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./linear.js */ "../node_modules/d3-scale/src/linear.js");
/* harmony import */ var _log_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./log.js */ "../node_modules/d3-scale/src/log.js");
/* harmony import */ var _sequential_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./sequential.js */ "../node_modules/d3-scale/src/sequential.js");
/* harmony import */ var _symlog_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./symlog.js */ "../node_modules/d3-scale/src/symlog.js");
/* harmony import */ var _pow_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./pow.js */ "../node_modules/d3-scale/src/pow.js");









function transformer() {
  var x0 = 0,
      x1 = 0.5,
      x2 = 1,
      s = 1,
      t0,
      t1,
      t2,
      k10,
      k21,
      interpolator = _continuous_js__WEBPACK_IMPORTED_MODULE_1__["identity"],
      transform,
      clamp = false,
      unknown;

  function scale(x) {
    return isNaN(x = +x) ? unknown : (x = 0.5 + ((x = +transform(x)) - t1) * (s * x < s * t1 ? k10 : k21), interpolator(clamp ? Math.max(0, Math.min(1, x)) : x));
  }

  scale.domain = function(_) {
    return arguments.length ? ([x0, x1, x2] = _, t0 = transform(x0 = +x0), t1 = transform(x1 = +x1), t2 = transform(x2 = +x2), k10 = t0 === t1 ? 0 : 0.5 / (t1 - t0), k21 = t1 === t2 ? 0 : 0.5 / (t2 - t1), s = t1 < t0 ? -1 : 1, scale) : [x0, x1, x2];
  };

  scale.clamp = function(_) {
    return arguments.length ? (clamp = !!_, scale) : clamp;
  };

  scale.interpolator = function(_) {
    return arguments.length ? (interpolator = _, scale) : interpolator;
  };

  function range(interpolate) {
    return function(_) {
      var r0, r1, r2;
      return arguments.length ? ([r0, r1, r2] = _, interpolator = Object(d3_interpolate__WEBPACK_IMPORTED_MODULE_0__["piecewise"])(interpolate, [r0, r1, r2]), scale) : [interpolator(0), interpolator(0.5), interpolator(1)];
    };
  }

  scale.range = range(d3_interpolate__WEBPACK_IMPORTED_MODULE_0__["interpolate"]);

  scale.rangeRound = range(d3_interpolate__WEBPACK_IMPORTED_MODULE_0__["interpolateRound"]);

  scale.unknown = function(_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };

  return function(t) {
    transform = t, t0 = t(x0), t1 = t(x1), t2 = t(x2), k10 = t0 === t1 ? 0 : 0.5 / (t1 - t0), k21 = t1 === t2 ? 0 : 0.5 / (t2 - t1), s = t1 < t0 ? -1 : 1;
    return scale;
  };
}

function diverging() {
  var scale = Object(_linear_js__WEBPACK_IMPORTED_MODULE_3__["linearish"])(transformer()(_continuous_js__WEBPACK_IMPORTED_MODULE_1__["identity"]));

  scale.copy = function() {
    return Object(_sequential_js__WEBPACK_IMPORTED_MODULE_5__["copy"])(scale, diverging());
  };

  return _init_js__WEBPACK_IMPORTED_MODULE_2__["initInterpolator"].apply(scale, arguments);
}

function divergingLog() {
  var scale = Object(_log_js__WEBPACK_IMPORTED_MODULE_4__["loggish"])(transformer()).domain([0.1, 1, 10]);

  scale.copy = function() {
    return Object(_sequential_js__WEBPACK_IMPORTED_MODULE_5__["copy"])(scale, divergingLog()).base(scale.base());
  };

  return _init_js__WEBPACK_IMPORTED_MODULE_2__["initInterpolator"].apply(scale, arguments);
}

function divergingSymlog() {
  var scale = Object(_symlog_js__WEBPACK_IMPORTED_MODULE_6__["symlogish"])(transformer());

  scale.copy = function() {
    return Object(_sequential_js__WEBPACK_IMPORTED_MODULE_5__["copy"])(scale, divergingSymlog()).constant(scale.constant());
  };

  return _init_js__WEBPACK_IMPORTED_MODULE_2__["initInterpolator"].apply(scale, arguments);
}

function divergingPow() {
  var scale = Object(_pow_js__WEBPACK_IMPORTED_MODULE_7__["powish"])(transformer());

  scale.copy = function() {
    return Object(_sequential_js__WEBPACK_IMPORTED_MODULE_5__["copy"])(scale, divergingPow()).exponent(scale.exponent());
  };

  return _init_js__WEBPACK_IMPORTED_MODULE_2__["initInterpolator"].apply(scale, arguments);
}

function divergingSqrt() {
  return divergingPow.apply(null, arguments).exponent(0.5);
}


/***/ }),

/***/ "../node_modules/d3-scale/src/identity.js":
/*!************************************************!*\
  !*** ../node_modules/d3-scale/src/identity.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return identity; });
/* harmony import */ var _linear_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./linear.js */ "../node_modules/d3-scale/src/linear.js");
/* harmony import */ var _number_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./number.js */ "../node_modules/d3-scale/src/number.js");



function identity(domain) {
  var unknown;

  function scale(x) {
    return x == null || isNaN(x = +x) ? unknown : x;
  }

  scale.invert = scale;

  scale.domain = scale.range = function(_) {
    return arguments.length ? (domain = Array.from(_, _number_js__WEBPACK_IMPORTED_MODULE_1__["default"]), scale) : domain.slice();
  };

  scale.unknown = function(_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };

  scale.copy = function() {
    return identity(domain).unknown(unknown);
  };

  domain = arguments.length ? Array.from(domain, _number_js__WEBPACK_IMPORTED_MODULE_1__["default"]) : [0, 1];

  return Object(_linear_js__WEBPACK_IMPORTED_MODULE_0__["linearish"])(scale);
}


/***/ }),

/***/ "../node_modules/d3-scale/src/index.js":
/*!*********************************************!*\
  !*** ../node_modules/d3-scale/src/index.js ***!
  \*********************************************/
/*! exports provided: scaleBand, scalePoint, scaleIdentity, scaleLinear, scaleLog, scaleSymlog, scaleOrdinal, scaleImplicit, scalePow, scaleSqrt, scaleRadial, scaleQuantile, scaleQuantize, scaleThreshold, scaleTime, scaleUtc, scaleSequential, scaleSequentialLog, scaleSequentialPow, scaleSequentialSqrt, scaleSequentialSymlog, scaleSequentialQuantile, scaleDiverging, scaleDivergingLog, scaleDivergingPow, scaleDivergingSqrt, scaleDivergingSymlog, tickFormat */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _band_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./band.js */ "../node_modules/d3-scale/src/band.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleBand", function() { return _band_js__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scalePoint", function() { return _band_js__WEBPACK_IMPORTED_MODULE_0__["point"]; });

/* harmony import */ var _identity_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./identity.js */ "../node_modules/d3-scale/src/identity.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleIdentity", function() { return _identity_js__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _linear_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./linear.js */ "../node_modules/d3-scale/src/linear.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleLinear", function() { return _linear_js__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony import */ var _log_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./log.js */ "../node_modules/d3-scale/src/log.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleLog", function() { return _log_js__WEBPACK_IMPORTED_MODULE_3__["default"]; });

/* harmony import */ var _symlog_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./symlog.js */ "../node_modules/d3-scale/src/symlog.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleSymlog", function() { return _symlog_js__WEBPACK_IMPORTED_MODULE_4__["default"]; });

/* harmony import */ var _ordinal_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./ordinal.js */ "../node_modules/d3-scale/src/ordinal.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleOrdinal", function() { return _ordinal_js__WEBPACK_IMPORTED_MODULE_5__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleImplicit", function() { return _ordinal_js__WEBPACK_IMPORTED_MODULE_5__["implicit"]; });

/* harmony import */ var _pow_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./pow.js */ "../node_modules/d3-scale/src/pow.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scalePow", function() { return _pow_js__WEBPACK_IMPORTED_MODULE_6__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleSqrt", function() { return _pow_js__WEBPACK_IMPORTED_MODULE_6__["sqrt"]; });

/* harmony import */ var _radial_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./radial.js */ "../node_modules/d3-scale/src/radial.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleRadial", function() { return _radial_js__WEBPACK_IMPORTED_MODULE_7__["default"]; });

/* harmony import */ var _quantile_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./quantile.js */ "../node_modules/d3-scale/src/quantile.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleQuantile", function() { return _quantile_js__WEBPACK_IMPORTED_MODULE_8__["default"]; });

/* harmony import */ var _quantize_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./quantize.js */ "../node_modules/d3-scale/src/quantize.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleQuantize", function() { return _quantize_js__WEBPACK_IMPORTED_MODULE_9__["default"]; });

/* harmony import */ var _threshold_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./threshold.js */ "../node_modules/d3-scale/src/threshold.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleThreshold", function() { return _threshold_js__WEBPACK_IMPORTED_MODULE_10__["default"]; });

/* harmony import */ var _time_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./time.js */ "../node_modules/d3-scale/src/time.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleTime", function() { return _time_js__WEBPACK_IMPORTED_MODULE_11__["default"]; });

/* harmony import */ var _utcTime_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./utcTime.js */ "../node_modules/d3-scale/src/utcTime.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleUtc", function() { return _utcTime_js__WEBPACK_IMPORTED_MODULE_12__["default"]; });

/* harmony import */ var _sequential_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./sequential.js */ "../node_modules/d3-scale/src/sequential.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleSequential", function() { return _sequential_js__WEBPACK_IMPORTED_MODULE_13__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleSequentialLog", function() { return _sequential_js__WEBPACK_IMPORTED_MODULE_13__["sequentialLog"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleSequentialPow", function() { return _sequential_js__WEBPACK_IMPORTED_MODULE_13__["sequentialPow"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleSequentialSqrt", function() { return _sequential_js__WEBPACK_IMPORTED_MODULE_13__["sequentialSqrt"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleSequentialSymlog", function() { return _sequential_js__WEBPACK_IMPORTED_MODULE_13__["sequentialSymlog"]; });

/* harmony import */ var _sequentialQuantile_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./sequentialQuantile.js */ "../node_modules/d3-scale/src/sequentialQuantile.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleSequentialQuantile", function() { return _sequentialQuantile_js__WEBPACK_IMPORTED_MODULE_14__["default"]; });

/* harmony import */ var _diverging_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./diverging.js */ "../node_modules/d3-scale/src/diverging.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleDiverging", function() { return _diverging_js__WEBPACK_IMPORTED_MODULE_15__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleDivergingLog", function() { return _diverging_js__WEBPACK_IMPORTED_MODULE_15__["divergingLog"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleDivergingPow", function() { return _diverging_js__WEBPACK_IMPORTED_MODULE_15__["divergingPow"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleDivergingSqrt", function() { return _diverging_js__WEBPACK_IMPORTED_MODULE_15__["divergingSqrt"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleDivergingSymlog", function() { return _diverging_js__WEBPACK_IMPORTED_MODULE_15__["divergingSymlog"]; });

/* harmony import */ var _tickFormat_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./tickFormat.js */ "../node_modules/d3-scale/src/tickFormat.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tickFormat", function() { return _tickFormat_js__WEBPACK_IMPORTED_MODULE_16__["default"]; });




































/***/ }),

/***/ "../node_modules/d3-scale/src/init.js":
/*!********************************************!*\
  !*** ../node_modules/d3-scale/src/init.js ***!
  \********************************************/
/*! exports provided: initRange, initInterpolator */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initRange", function() { return initRange; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initInterpolator", function() { return initInterpolator; });
function initRange(domain, range) {
  switch (arguments.length) {
    case 0: break;
    case 1: this.range(domain); break;
    default: this.range(range).domain(domain); break;
  }
  return this;
}

function initInterpolator(domain, interpolator) {
  switch (arguments.length) {
    case 0: break;
    case 1: {
      if (typeof domain === "function") this.interpolator(domain);
      else this.range(domain);
      break;
    }
    default: {
      this.domain(domain);
      if (typeof interpolator === "function") this.interpolator(interpolator);
      else this.range(interpolator);
      break;
    }
  }
  return this;
}


/***/ }),

/***/ "../node_modules/d3-scale/src/linear.js":
/*!**********************************************!*\
  !*** ../node_modules/d3-scale/src/linear.js ***!
  \**********************************************/
/*! exports provided: linearish, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "linearish", function() { return linearish; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return linear; });
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-array */ "../node_modules/d3-array/src/index.js");
/* harmony import */ var _continuous_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./continuous.js */ "../node_modules/d3-scale/src/continuous.js");
/* harmony import */ var _init_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./init.js */ "../node_modules/d3-scale/src/init.js");
/* harmony import */ var _tickFormat_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./tickFormat.js */ "../node_modules/d3-scale/src/tickFormat.js");





function linearish(scale) {
  var domain = scale.domain;

  scale.ticks = function(count) {
    var d = domain();
    return Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["ticks"])(d[0], d[d.length - 1], count == null ? 10 : count);
  };

  scale.tickFormat = function(count, specifier) {
    var d = domain();
    return Object(_tickFormat_js__WEBPACK_IMPORTED_MODULE_3__["default"])(d[0], d[d.length - 1], count == null ? 10 : count, specifier);
  };

  scale.nice = function(count) {
    if (count == null) count = 10;

    var d = domain();
    var i0 = 0;
    var i1 = d.length - 1;
    var start = d[i0];
    var stop = d[i1];
    var prestep;
    var step;
    var maxIter = 10;

    if (stop < start) {
      step = start, start = stop, stop = step;
      step = i0, i0 = i1, i1 = step;
    }
    
    while (maxIter-- > 0) {
      step = Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["tickIncrement"])(start, stop, count);
      if (step === prestep) {
        d[i0] = start
        d[i1] = stop
        return domain(d);
      } else if (step > 0) {
        start = Math.floor(start / step) * step;
        stop = Math.ceil(stop / step) * step;
      } else if (step < 0) {
        start = Math.ceil(start * step) / step;
        stop = Math.floor(stop * step) / step;
      } else {
        break;
      }
      prestep = step;
    }

    return scale;
  };

  return scale;
}

function linear() {
  var scale = Object(_continuous_js__WEBPACK_IMPORTED_MODULE_1__["default"])();

  scale.copy = function() {
    return Object(_continuous_js__WEBPACK_IMPORTED_MODULE_1__["copy"])(scale, linear());
  };

  _init_js__WEBPACK_IMPORTED_MODULE_2__["initRange"].apply(scale, arguments);

  return linearish(scale);
}


/***/ }),

/***/ "../node_modules/d3-scale/src/log.js":
/*!*******************************************!*\
  !*** ../node_modules/d3-scale/src/log.js ***!
  \*******************************************/
/*! exports provided: loggish, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "loggish", function() { return loggish; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return log; });
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-array */ "../node_modules/d3-array/src/index.js");
/* harmony import */ var d3_format__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-format */ "../node_modules/d3-format/src/index.js");
/* harmony import */ var _nice_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./nice.js */ "../node_modules/d3-scale/src/nice.js");
/* harmony import */ var _continuous_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./continuous.js */ "../node_modules/d3-scale/src/continuous.js");
/* harmony import */ var _init_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./init.js */ "../node_modules/d3-scale/src/init.js");






function transformLog(x) {
  return Math.log(x);
}

function transformExp(x) {
  return Math.exp(x);
}

function transformLogn(x) {
  return -Math.log(-x);
}

function transformExpn(x) {
  return -Math.exp(-x);
}

function pow10(x) {
  return isFinite(x) ? +("1e" + x) : x < 0 ? 0 : x;
}

function powp(base) {
  return base === 10 ? pow10
      : base === Math.E ? Math.exp
      : x => Math.pow(base, x);
}

function logp(base) {
  return base === Math.E ? Math.log
      : base === 10 && Math.log10
      || base === 2 && Math.log2
      || (base = Math.log(base), x => Math.log(x) / base);
}

function reflect(f) {
  return (x, k) => -f(-x, k);
}

function loggish(transform) {
  const scale = transform(transformLog, transformExp);
  const domain = scale.domain;
  let base = 10;
  let logs;
  let pows;

  function rescale() {
    logs = logp(base), pows = powp(base);
    if (domain()[0] < 0) {
      logs = reflect(logs), pows = reflect(pows);
      transform(transformLogn, transformExpn);
    } else {
      transform(transformLog, transformExp);
    }
    return scale;
  }

  scale.base = function(_) {
    return arguments.length ? (base = +_, rescale()) : base;
  };

  scale.domain = function(_) {
    return arguments.length ? (domain(_), rescale()) : domain();
  };

  scale.ticks = count => {
    const d = domain();
    let u = d[0];
    let v = d[d.length - 1];
    const r = v < u;

    if (r) ([u, v] = [v, u]);

    let i = logs(u);
    let j = logs(v);
    let k;
    let t;
    const n = count == null ? 10 : +count;
    let z = [];

    if (!(base % 1) && j - i < n) {
      i = Math.floor(i), j = Math.ceil(j);
      if (u > 0) for (; i <= j; ++i) {
        for (k = 1; k < base; ++k) {
          t = i < 0 ? k / pows(-i) : k * pows(i);
          if (t < u) continue;
          if (t > v) break;
          z.push(t);
        }
      } else for (; i <= j; ++i) {
        for (k = base - 1; k >= 1; --k) {
          t = i > 0 ? k / pows(-i) : k * pows(i);
          if (t < u) continue;
          if (t > v) break;
          z.push(t);
        }
      }
      if (z.length * 2 < n) z = Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["ticks"])(u, v, n);
    } else {
      z = Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["ticks"])(i, j, Math.min(j - i, n)).map(pows);
    }
    return r ? z.reverse() : z;
  };

  scale.tickFormat = (count, specifier) => {
    if (count == null) count = 10;
    if (specifier == null) specifier = base === 10 ? "s" : ",";
    if (typeof specifier !== "function") {
      if (!(base % 1) && (specifier = Object(d3_format__WEBPACK_IMPORTED_MODULE_1__["formatSpecifier"])(specifier)).precision == null) specifier.trim = true;
      specifier = Object(d3_format__WEBPACK_IMPORTED_MODULE_1__["format"])(specifier);
    }
    if (count === Infinity) return specifier;
    const k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?
    return d => {
      let i = d / pows(Math.round(logs(d)));
      if (i * base < base - 0.5) i *= base;
      return i <= k ? specifier(d) : "";
    };
  };

  scale.nice = () => {
    return domain(Object(_nice_js__WEBPACK_IMPORTED_MODULE_2__["default"])(domain(), {
      floor: x => pows(Math.floor(logs(x))),
      ceil: x => pows(Math.ceil(logs(x)))
    }));
  };

  return scale;
}

function log() {
  const scale = loggish(Object(_continuous_js__WEBPACK_IMPORTED_MODULE_3__["transformer"])()).domain([1, 10]);
  scale.copy = () => Object(_continuous_js__WEBPACK_IMPORTED_MODULE_3__["copy"])(scale, log()).base(scale.base());
  _init_js__WEBPACK_IMPORTED_MODULE_4__["initRange"].apply(scale, arguments);
  return scale;
}


/***/ }),

/***/ "../node_modules/d3-scale/src/nice.js":
/*!********************************************!*\
  !*** ../node_modules/d3-scale/src/nice.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return nice; });
function nice(domain, interval) {
  domain = domain.slice();

  var i0 = 0,
      i1 = domain.length - 1,
      x0 = domain[i0],
      x1 = domain[i1],
      t;

  if (x1 < x0) {
    t = i0, i0 = i1, i1 = t;
    t = x0, x0 = x1, x1 = t;
  }

  domain[i0] = interval.floor(x0);
  domain[i1] = interval.ceil(x1);
  return domain;
}


/***/ }),

/***/ "../node_modules/d3-scale/src/number.js":
/*!**********************************************!*\
  !*** ../node_modules/d3-scale/src/number.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return number; });
function number(x) {
  return +x;
}


/***/ }),

/***/ "../node_modules/d3-scale/src/ordinal.js":
/*!***********************************************!*\
  !*** ../node_modules/d3-scale/src/ordinal.js ***!
  \***********************************************/
/*! exports provided: implicit, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "implicit", function() { return implicit; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return ordinal; });
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-array */ "../node_modules/d3-array/src/index.js");
/* harmony import */ var _init_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./init.js */ "../node_modules/d3-scale/src/init.js");



const implicit = Symbol("implicit");

function ordinal() {
  var index = new d3_array__WEBPACK_IMPORTED_MODULE_0__["InternMap"](),
      domain = [],
      range = [],
      unknown = implicit;

  function scale(d) {
    let i = index.get(d);
    if (i === undefined) {
      if (unknown !== implicit) return unknown;
      index.set(d, i = domain.push(d) - 1);
    }
    return range[i % range.length];
  }

  scale.domain = function(_) {
    if (!arguments.length) return domain.slice();
    domain = [], index = new d3_array__WEBPACK_IMPORTED_MODULE_0__["InternMap"]();
    for (const value of _) {
      if (index.has(value)) continue;
      index.set(value, domain.push(value) - 1);
    }
    return scale;
  };

  scale.range = function(_) {
    return arguments.length ? (range = Array.from(_), scale) : range.slice();
  };

  scale.unknown = function(_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };

  scale.copy = function() {
    return ordinal(domain, range).unknown(unknown);
  };

  _init_js__WEBPACK_IMPORTED_MODULE_1__["initRange"].apply(scale, arguments);

  return scale;
}


/***/ }),

/***/ "../node_modules/d3-scale/src/pow.js":
/*!*******************************************!*\
  !*** ../node_modules/d3-scale/src/pow.js ***!
  \*******************************************/
/*! exports provided: powish, default, sqrt */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "powish", function() { return powish; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return pow; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sqrt", function() { return sqrt; });
/* harmony import */ var _linear_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./linear.js */ "../node_modules/d3-scale/src/linear.js");
/* harmony import */ var _continuous_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./continuous.js */ "../node_modules/d3-scale/src/continuous.js");
/* harmony import */ var _init_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./init.js */ "../node_modules/d3-scale/src/init.js");




function transformPow(exponent) {
  return function(x) {
    return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);
  };
}

function transformSqrt(x) {
  return x < 0 ? -Math.sqrt(-x) : Math.sqrt(x);
}

function transformSquare(x) {
  return x < 0 ? -x * x : x * x;
}

function powish(transform) {
  var scale = transform(_continuous_js__WEBPACK_IMPORTED_MODULE_1__["identity"], _continuous_js__WEBPACK_IMPORTED_MODULE_1__["identity"]),
      exponent = 1;

  function rescale() {
    return exponent === 1 ? transform(_continuous_js__WEBPACK_IMPORTED_MODULE_1__["identity"], _continuous_js__WEBPACK_IMPORTED_MODULE_1__["identity"])
        : exponent === 0.5 ? transform(transformSqrt, transformSquare)
        : transform(transformPow(exponent), transformPow(1 / exponent));
  }

  scale.exponent = function(_) {
    return arguments.length ? (exponent = +_, rescale()) : exponent;
  };

  return Object(_linear_js__WEBPACK_IMPORTED_MODULE_0__["linearish"])(scale);
}

function pow() {
  var scale = powish(Object(_continuous_js__WEBPACK_IMPORTED_MODULE_1__["transformer"])());

  scale.copy = function() {
    return Object(_continuous_js__WEBPACK_IMPORTED_MODULE_1__["copy"])(scale, pow()).exponent(scale.exponent());
  };

  _init_js__WEBPACK_IMPORTED_MODULE_2__["initRange"].apply(scale, arguments);

  return scale;
}

function sqrt() {
  return pow.apply(null, arguments).exponent(0.5);
}


/***/ }),

/***/ "../node_modules/d3-scale/src/quantile.js":
/*!************************************************!*\
  !*** ../node_modules/d3-scale/src/quantile.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return quantile; });
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-array */ "../node_modules/d3-array/src/index.js");
/* harmony import */ var _init_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./init.js */ "../node_modules/d3-scale/src/init.js");



function quantile() {
  var domain = [],
      range = [],
      thresholds = [],
      unknown;

  function rescale() {
    var i = 0, n = Math.max(1, range.length);
    thresholds = new Array(n - 1);
    while (++i < n) thresholds[i - 1] = Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["quantileSorted"])(domain, i / n);
    return scale;
  }

  function scale(x) {
    return x == null || isNaN(x = +x) ? unknown : range[Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["bisect"])(thresholds, x)];
  }

  scale.invertExtent = function(y) {
    var i = range.indexOf(y);
    return i < 0 ? [NaN, NaN] : [
      i > 0 ? thresholds[i - 1] : domain[0],
      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]
    ];
  };

  scale.domain = function(_) {
    if (!arguments.length) return domain.slice();
    domain = [];
    for (let d of _) if (d != null && !isNaN(d = +d)) domain.push(d);
    domain.sort(d3_array__WEBPACK_IMPORTED_MODULE_0__["ascending"]);
    return rescale();
  };

  scale.range = function(_) {
    return arguments.length ? (range = Array.from(_), rescale()) : range.slice();
  };

  scale.unknown = function(_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };

  scale.quantiles = function() {
    return thresholds.slice();
  };

  scale.copy = function() {
    return quantile()
        .domain(domain)
        .range(range)
        .unknown(unknown);
  };

  return _init_js__WEBPACK_IMPORTED_MODULE_1__["initRange"].apply(scale, arguments);
}


/***/ }),

/***/ "../node_modules/d3-scale/src/quantize.js":
/*!************************************************!*\
  !*** ../node_modules/d3-scale/src/quantize.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return quantize; });
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-array */ "../node_modules/d3-array/src/index.js");
/* harmony import */ var _linear_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./linear.js */ "../node_modules/d3-scale/src/linear.js");
/* harmony import */ var _init_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./init.js */ "../node_modules/d3-scale/src/init.js");




function quantize() {
  var x0 = 0,
      x1 = 1,
      n = 1,
      domain = [0.5],
      range = [0, 1],
      unknown;

  function scale(x) {
    return x != null && x <= x ? range[Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["bisect"])(domain, x, 0, n)] : unknown;
  }

  function rescale() {
    var i = -1;
    domain = new Array(n);
    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);
    return scale;
  }

  scale.domain = function(_) {
    return arguments.length ? ([x0, x1] = _, x0 = +x0, x1 = +x1, rescale()) : [x0, x1];
  };

  scale.range = function(_) {
    return arguments.length ? (n = (range = Array.from(_)).length - 1, rescale()) : range.slice();
  };

  scale.invertExtent = function(y) {
    var i = range.indexOf(y);
    return i < 0 ? [NaN, NaN]
        : i < 1 ? [x0, domain[0]]
        : i >= n ? [domain[n - 1], x1]
        : [domain[i - 1], domain[i]];
  };

  scale.unknown = function(_) {
    return arguments.length ? (unknown = _, scale) : scale;
  };

  scale.thresholds = function() {
    return domain.slice();
  };

  scale.copy = function() {
    return quantize()
        .domain([x0, x1])
        .range(range)
        .unknown(unknown);
  };

  return _init_js__WEBPACK_IMPORTED_MODULE_2__["initRange"].apply(Object(_linear_js__WEBPACK_IMPORTED_MODULE_1__["linearish"])(scale), arguments);
}


/***/ }),

/***/ "../node_modules/d3-scale/src/radial.js":
/*!**********************************************!*\
  !*** ../node_modules/d3-scale/src/radial.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return radial; });
/* harmony import */ var _continuous_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./continuous.js */ "../node_modules/d3-scale/src/continuous.js");
/* harmony import */ var _init_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./init.js */ "../node_modules/d3-scale/src/init.js");
/* harmony import */ var _linear_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./linear.js */ "../node_modules/d3-scale/src/linear.js");
/* harmony import */ var _number_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./number.js */ "../node_modules/d3-scale/src/number.js");





function square(x) {
  return Math.sign(x) * x * x;
}

function unsquare(x) {
  return Math.sign(x) * Math.sqrt(Math.abs(x));
}

function radial() {
  var squared = Object(_continuous_js__WEBPACK_IMPORTED_MODULE_0__["default"])(),
      range = [0, 1],
      round = false,
      unknown;

  function scale(x) {
    var y = unsquare(squared(x));
    return isNaN(y) ? unknown : round ? Math.round(y) : y;
  }

  scale.invert = function(y) {
    return squared.invert(square(y));
  };

  scale.domain = function(_) {
    return arguments.length ? (squared.domain(_), scale) : squared.domain();
  };

  scale.range = function(_) {
    return arguments.length ? (squared.range((range = Array.from(_, _number_js__WEBPACK_IMPORTED_MODULE_3__["default"])).map(square)), scale) : range.slice();
  };

  scale.rangeRound = function(_) {
    return scale.range(_).round(true);
  };

  scale.round = function(_) {
    return arguments.length ? (round = !!_, scale) : round;
  };

  scale.clamp = function(_) {
    return arguments.length ? (squared.clamp(_), scale) : squared.clamp();
  };

  scale.unknown = function(_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };

  scale.copy = function() {
    return radial(squared.domain(), range)
        .round(round)
        .clamp(squared.clamp())
        .unknown(unknown);
  };

  _init_js__WEBPACK_IMPORTED_MODULE_1__["initRange"].apply(scale, arguments);

  return Object(_linear_js__WEBPACK_IMPORTED_MODULE_2__["linearish"])(scale);
}


/***/ }),

/***/ "../node_modules/d3-scale/src/sequential.js":
/*!**************************************************!*\
  !*** ../node_modules/d3-scale/src/sequential.js ***!
  \**************************************************/
/*! exports provided: copy, default, sequentialLog, sequentialSymlog, sequentialPow, sequentialSqrt */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "copy", function() { return copy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return sequential; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sequentialLog", function() { return sequentialLog; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sequentialSymlog", function() { return sequentialSymlog; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sequentialPow", function() { return sequentialPow; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sequentialSqrt", function() { return sequentialSqrt; });
/* harmony import */ var d3_interpolate__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-interpolate */ "../node_modules/d3-interpolate/src/index.js");
/* harmony import */ var _continuous_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./continuous.js */ "../node_modules/d3-scale/src/continuous.js");
/* harmony import */ var _init_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./init.js */ "../node_modules/d3-scale/src/init.js");
/* harmony import */ var _linear_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./linear.js */ "../node_modules/d3-scale/src/linear.js");
/* harmony import */ var _log_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./log.js */ "../node_modules/d3-scale/src/log.js");
/* harmony import */ var _symlog_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./symlog.js */ "../node_modules/d3-scale/src/symlog.js");
/* harmony import */ var _pow_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./pow.js */ "../node_modules/d3-scale/src/pow.js");








function transformer() {
  var x0 = 0,
      x1 = 1,
      t0,
      t1,
      k10,
      transform,
      interpolator = _continuous_js__WEBPACK_IMPORTED_MODULE_1__["identity"],
      clamp = false,
      unknown;

  function scale(x) {
    return x == null || isNaN(x = +x) ? unknown : interpolator(k10 === 0 ? 0.5 : (x = (transform(x) - t0) * k10, clamp ? Math.max(0, Math.min(1, x)) : x));
  }

  scale.domain = function(_) {
    return arguments.length ? ([x0, x1] = _, t0 = transform(x0 = +x0), t1 = transform(x1 = +x1), k10 = t0 === t1 ? 0 : 1 / (t1 - t0), scale) : [x0, x1];
  };

  scale.clamp = function(_) {
    return arguments.length ? (clamp = !!_, scale) : clamp;
  };

  scale.interpolator = function(_) {
    return arguments.length ? (interpolator = _, scale) : interpolator;
  };

  function range(interpolate) {
    return function(_) {
      var r0, r1;
      return arguments.length ? ([r0, r1] = _, interpolator = interpolate(r0, r1), scale) : [interpolator(0), interpolator(1)];
    };
  }

  scale.range = range(d3_interpolate__WEBPACK_IMPORTED_MODULE_0__["interpolate"]);

  scale.rangeRound = range(d3_interpolate__WEBPACK_IMPORTED_MODULE_0__["interpolateRound"]);

  scale.unknown = function(_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };

  return function(t) {
    transform = t, t0 = t(x0), t1 = t(x1), k10 = t0 === t1 ? 0 : 1 / (t1 - t0);
    return scale;
  };
}

function copy(source, target) {
  return target
      .domain(source.domain())
      .interpolator(source.interpolator())
      .clamp(source.clamp())
      .unknown(source.unknown());
}

function sequential() {
  var scale = Object(_linear_js__WEBPACK_IMPORTED_MODULE_3__["linearish"])(transformer()(_continuous_js__WEBPACK_IMPORTED_MODULE_1__["identity"]));

  scale.copy = function() {
    return copy(scale, sequential());
  };

  return _init_js__WEBPACK_IMPORTED_MODULE_2__["initInterpolator"].apply(scale, arguments);
}

function sequentialLog() {
  var scale = Object(_log_js__WEBPACK_IMPORTED_MODULE_4__["loggish"])(transformer()).domain([1, 10]);

  scale.copy = function() {
    return copy(scale, sequentialLog()).base(scale.base());
  };

  return _init_js__WEBPACK_IMPORTED_MODULE_2__["initInterpolator"].apply(scale, arguments);
}

function sequentialSymlog() {
  var scale = Object(_symlog_js__WEBPACK_IMPORTED_MODULE_5__["symlogish"])(transformer());

  scale.copy = function() {
    return copy(scale, sequentialSymlog()).constant(scale.constant());
  };

  return _init_js__WEBPACK_IMPORTED_MODULE_2__["initInterpolator"].apply(scale, arguments);
}

function sequentialPow() {
  var scale = Object(_pow_js__WEBPACK_IMPORTED_MODULE_6__["powish"])(transformer());

  scale.copy = function() {
    return copy(scale, sequentialPow()).exponent(scale.exponent());
  };

  return _init_js__WEBPACK_IMPORTED_MODULE_2__["initInterpolator"].apply(scale, arguments);
}

function sequentialSqrt() {
  return sequentialPow.apply(null, arguments).exponent(0.5);
}


/***/ }),

/***/ "../node_modules/d3-scale/src/sequentialQuantile.js":
/*!**********************************************************!*\
  !*** ../node_modules/d3-scale/src/sequentialQuantile.js ***!
  \**********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return sequentialQuantile; });
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-array */ "../node_modules/d3-array/src/index.js");
/* harmony import */ var _continuous_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./continuous.js */ "../node_modules/d3-scale/src/continuous.js");
/* harmony import */ var _init_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./init.js */ "../node_modules/d3-scale/src/init.js");




function sequentialQuantile() {
  var domain = [],
      interpolator = _continuous_js__WEBPACK_IMPORTED_MODULE_1__["identity"];

  function scale(x) {
    if (x != null && !isNaN(x = +x)) return interpolator((Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["bisect"])(domain, x, 1) - 1) / (domain.length - 1));
  }

  scale.domain = function(_) {
    if (!arguments.length) return domain.slice();
    domain = [];
    for (let d of _) if (d != null && !isNaN(d = +d)) domain.push(d);
    domain.sort(d3_array__WEBPACK_IMPORTED_MODULE_0__["ascending"]);
    return scale;
  };

  scale.interpolator = function(_) {
    return arguments.length ? (interpolator = _, scale) : interpolator;
  };

  scale.range = function() {
    return domain.map((d, i) => interpolator(i / (domain.length - 1)));
  };

  scale.quantiles = function(n) {
    return Array.from({length: n + 1}, (_, i) => Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["quantile"])(domain, i / n));
  };

  scale.copy = function() {
    return sequentialQuantile(interpolator).domain(domain);
  };

  return _init_js__WEBPACK_IMPORTED_MODULE_2__["initInterpolator"].apply(scale, arguments);
}


/***/ }),

/***/ "../node_modules/d3-scale/src/symlog.js":
/*!**********************************************!*\
  !*** ../node_modules/d3-scale/src/symlog.js ***!
  \**********************************************/
/*! exports provided: symlogish, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "symlogish", function() { return symlogish; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return symlog; });
/* harmony import */ var _linear_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./linear.js */ "../node_modules/d3-scale/src/linear.js");
/* harmony import */ var _continuous_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./continuous.js */ "../node_modules/d3-scale/src/continuous.js");
/* harmony import */ var _init_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./init.js */ "../node_modules/d3-scale/src/init.js");




function transformSymlog(c) {
  return function(x) {
    return Math.sign(x) * Math.log1p(Math.abs(x / c));
  };
}

function transformSymexp(c) {
  return function(x) {
    return Math.sign(x) * Math.expm1(Math.abs(x)) * c;
  };
}

function symlogish(transform) {
  var c = 1, scale = transform(transformSymlog(c), transformSymexp(c));

  scale.constant = function(_) {
    return arguments.length ? transform(transformSymlog(c = +_), transformSymexp(c)) : c;
  };

  return Object(_linear_js__WEBPACK_IMPORTED_MODULE_0__["linearish"])(scale);
}

function symlog() {
  var scale = symlogish(Object(_continuous_js__WEBPACK_IMPORTED_MODULE_1__["transformer"])());

  scale.copy = function() {
    return Object(_continuous_js__WEBPACK_IMPORTED_MODULE_1__["copy"])(scale, symlog()).constant(scale.constant());
  };

  return _init_js__WEBPACK_IMPORTED_MODULE_2__["initRange"].apply(scale, arguments);
}


/***/ }),

/***/ "../node_modules/d3-scale/src/threshold.js":
/*!*************************************************!*\
  !*** ../node_modules/d3-scale/src/threshold.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return threshold; });
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-array */ "../node_modules/d3-array/src/index.js");
/* harmony import */ var _init_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./init.js */ "../node_modules/d3-scale/src/init.js");



function threshold() {
  var domain = [0.5],
      range = [0, 1],
      unknown,
      n = 1;

  function scale(x) {
    return x != null && x <= x ? range[Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["bisect"])(domain, x, 0, n)] : unknown;
  }

  scale.domain = function(_) {
    return arguments.length ? (domain = Array.from(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();
  };

  scale.range = function(_) {
    return arguments.length ? (range = Array.from(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();
  };

  scale.invertExtent = function(y) {
    var i = range.indexOf(y);
    return [domain[i - 1], domain[i]];
  };

  scale.unknown = function(_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };

  scale.copy = function() {
    return threshold()
        .domain(domain)
        .range(range)
        .unknown(unknown);
  };

  return _init_js__WEBPACK_IMPORTED_MODULE_1__["initRange"].apply(scale, arguments);
}


/***/ }),

/***/ "../node_modules/d3-scale/src/tickFormat.js":
/*!**************************************************!*\
  !*** ../node_modules/d3-scale/src/tickFormat.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return tickFormat; });
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-array */ "../node_modules/d3-array/src/index.js");
/* harmony import */ var d3_format__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-format */ "../node_modules/d3-format/src/index.js");



function tickFormat(start, stop, count, specifier) {
  var step = Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["tickStep"])(start, stop, count),
      precision;
  specifier = Object(d3_format__WEBPACK_IMPORTED_MODULE_1__["formatSpecifier"])(specifier == null ? ",f" : specifier);
  switch (specifier.type) {
    case "s": {
      var value = Math.max(Math.abs(start), Math.abs(stop));
      if (specifier.precision == null && !isNaN(precision = Object(d3_format__WEBPACK_IMPORTED_MODULE_1__["precisionPrefix"])(step, value))) specifier.precision = precision;
      return Object(d3_format__WEBPACK_IMPORTED_MODULE_1__["formatPrefix"])(specifier, value);
    }
    case "":
    case "e":
    case "g":
    case "p":
    case "r": {
      if (specifier.precision == null && !isNaN(precision = Object(d3_format__WEBPACK_IMPORTED_MODULE_1__["precisionRound"])(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === "e");
      break;
    }
    case "f":
    case "%": {
      if (specifier.precision == null && !isNaN(precision = Object(d3_format__WEBPACK_IMPORTED_MODULE_1__["precisionFixed"])(step))) specifier.precision = precision - (specifier.type === "%") * 2;
      break;
    }
  }
  return Object(d3_format__WEBPACK_IMPORTED_MODULE_1__["format"])(specifier);
}


/***/ }),

/***/ "../node_modules/d3-scale/src/time.js":
/*!********************************************!*\
  !*** ../node_modules/d3-scale/src/time.js ***!
  \********************************************/
/*! exports provided: calendar, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "calendar", function() { return calendar; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return time; });
/* harmony import */ var d3_time__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-time */ "../node_modules/d3-time/src/index.js");
/* harmony import */ var d3_time_format__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-time-format */ "../node_modules/d3-time-format/src/index.js");
/* harmony import */ var _continuous_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./continuous.js */ "../node_modules/d3-scale/src/continuous.js");
/* harmony import */ var _init_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./init.js */ "../node_modules/d3-scale/src/init.js");
/* harmony import */ var _nice_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./nice.js */ "../node_modules/d3-scale/src/nice.js");






function date(t) {
  return new Date(t);
}

function number(t) {
  return t instanceof Date ? +t : +new Date(+t);
}

function calendar(ticks, tickInterval, year, month, week, day, hour, minute, second, format) {
  var scale = Object(_continuous_js__WEBPACK_IMPORTED_MODULE_2__["default"])(),
      invert = scale.invert,
      domain = scale.domain;

  var formatMillisecond = format(".%L"),
      formatSecond = format(":%S"),
      formatMinute = format("%I:%M"),
      formatHour = format("%I %p"),
      formatDay = format("%a %d"),
      formatWeek = format("%b %d"),
      formatMonth = format("%B"),
      formatYear = format("%Y");

  function tickFormat(date) {
    return (second(date) < date ? formatMillisecond
        : minute(date) < date ? formatSecond
        : hour(date) < date ? formatMinute
        : day(date) < date ? formatHour
        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)
        : year(date) < date ? formatMonth
        : formatYear)(date);
  }

  scale.invert = function(y) {
    return new Date(invert(y));
  };

  scale.domain = function(_) {
    return arguments.length ? domain(Array.from(_, number)) : domain().map(date);
  };

  scale.ticks = function(interval) {
    var d = domain();
    return ticks(d[0], d[d.length - 1], interval == null ? 10 : interval);
  };

  scale.tickFormat = function(count, specifier) {
    return specifier == null ? tickFormat : format(specifier);
  };

  scale.nice = function(interval) {
    var d = domain();
    if (!interval || typeof interval.range !== "function") interval = tickInterval(d[0], d[d.length - 1], interval == null ? 10 : interval);
    return interval ? domain(Object(_nice_js__WEBPACK_IMPORTED_MODULE_4__["default"])(d, interval)) : scale;
  };

  scale.copy = function() {
    return Object(_continuous_js__WEBPACK_IMPORTED_MODULE_2__["copy"])(scale, calendar(ticks, tickInterval, year, month, week, day, hour, minute, second, format));
  };

  return scale;
}

function time() {
  return _init_js__WEBPACK_IMPORTED_MODULE_3__["initRange"].apply(calendar(d3_time__WEBPACK_IMPORTED_MODULE_0__["timeTicks"], d3_time__WEBPACK_IMPORTED_MODULE_0__["timeTickInterval"], d3_time__WEBPACK_IMPORTED_MODULE_0__["timeYear"], d3_time__WEBPACK_IMPORTED_MODULE_0__["timeMonth"], d3_time__WEBPACK_IMPORTED_MODULE_0__["timeWeek"], d3_time__WEBPACK_IMPORTED_MODULE_0__["timeDay"], d3_time__WEBPACK_IMPORTED_MODULE_0__["timeHour"], d3_time__WEBPACK_IMPORTED_MODULE_0__["timeMinute"], d3_time__WEBPACK_IMPORTED_MODULE_0__["timeSecond"], d3_time_format__WEBPACK_IMPORTED_MODULE_1__["timeFormat"]).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]), arguments);
}


/***/ }),

/***/ "../node_modules/d3-scale/src/utcTime.js":
/*!***********************************************!*\
  !*** ../node_modules/d3-scale/src/utcTime.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return utcTime; });
/* harmony import */ var d3_time__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-time */ "../node_modules/d3-time/src/index.js");
/* harmony import */ var d3_time_format__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-time-format */ "../node_modules/d3-time-format/src/index.js");
/* harmony import */ var _time_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./time.js */ "../node_modules/d3-scale/src/time.js");
/* harmony import */ var _init_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./init.js */ "../node_modules/d3-scale/src/init.js");





function utcTime() {
  return _init_js__WEBPACK_IMPORTED_MODULE_3__["initRange"].apply(Object(_time_js__WEBPACK_IMPORTED_MODULE_2__["calendar"])(d3_time__WEBPACK_IMPORTED_MODULE_0__["utcTicks"], d3_time__WEBPACK_IMPORTED_MODULE_0__["utcTickInterval"], d3_time__WEBPACK_IMPORTED_MODULE_0__["utcYear"], d3_time__WEBPACK_IMPORTED_MODULE_0__["utcMonth"], d3_time__WEBPACK_IMPORTED_MODULE_0__["utcWeek"], d3_time__WEBPACK_IMPORTED_MODULE_0__["utcDay"], d3_time__WEBPACK_IMPORTED_MODULE_0__["utcHour"], d3_time__WEBPACK_IMPORTED_MODULE_0__["utcMinute"], d3_time__WEBPACK_IMPORTED_MODULE_0__["utcSecond"], d3_time_format__WEBPACK_IMPORTED_MODULE_1__["utcFormat"]).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]), arguments);
}


/***/ }),

/***/ "../node_modules/d3-time-format/src/defaultLocale.js":
/*!***********************************************************!*\
  !*** ../node_modules/d3-time-format/src/defaultLocale.js ***!
  \***********************************************************/
/*! exports provided: timeFormat, timeParse, utcFormat, utcParse, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "timeFormat", function() { return timeFormat; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "timeParse", function() { return timeParse; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "utcFormat", function() { return utcFormat; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "utcParse", function() { return utcParse; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return defaultLocale; });
/* harmony import */ var _locale_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./locale.js */ "../node_modules/d3-time-format/src/locale.js");


var locale;
var timeFormat;
var timeParse;
var utcFormat;
var utcParse;

defaultLocale({
  dateTime: "%x, %X",
  date: "%-m/%-d/%Y",
  time: "%-I:%M:%S %p",
  periods: ["AM", "PM"],
  days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
  shortDays: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
  months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
  shortMonths: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]
});

function defaultLocale(definition) {
  locale = Object(_locale_js__WEBPACK_IMPORTED_MODULE_0__["default"])(definition);
  timeFormat = locale.format;
  timeParse = locale.parse;
  utcFormat = locale.utcFormat;
  utcParse = locale.utcParse;
  return locale;
}


/***/ }),

/***/ "../node_modules/d3-time-format/src/index.js":
/*!***************************************************!*\
  !*** ../node_modules/d3-time-format/src/index.js ***!
  \***************************************************/
/*! exports provided: timeFormatDefaultLocale, timeFormat, timeParse, utcFormat, utcParse, timeFormatLocale, isoFormat, isoParse */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _defaultLocale_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./defaultLocale.js */ "../node_modules/d3-time-format/src/defaultLocale.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeFormatDefaultLocale", function() { return _defaultLocale_js__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeFormat", function() { return _defaultLocale_js__WEBPACK_IMPORTED_MODULE_0__["timeFormat"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeParse", function() { return _defaultLocale_js__WEBPACK_IMPORTED_MODULE_0__["timeParse"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcFormat", function() { return _defaultLocale_js__WEBPACK_IMPORTED_MODULE_0__["utcFormat"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcParse", function() { return _defaultLocale_js__WEBPACK_IMPORTED_MODULE_0__["utcParse"]; });

/* harmony import */ var _locale_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./locale.js */ "../node_modules/d3-time-format/src/locale.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeFormatLocale", function() { return _locale_js__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _isoFormat_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./isoFormat.js */ "../node_modules/d3-time-format/src/isoFormat.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isoFormat", function() { return _isoFormat_js__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony import */ var _isoParse_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./isoParse.js */ "../node_modules/d3-time-format/src/isoParse.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isoParse", function() { return _isoParse_js__WEBPACK_IMPORTED_MODULE_3__["default"]; });







/***/ }),

/***/ "../node_modules/d3-time-format/src/isoFormat.js":
/*!*******************************************************!*\
  !*** ../node_modules/d3-time-format/src/isoFormat.js ***!
  \*******************************************************/
/*! exports provided: isoSpecifier, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isoSpecifier", function() { return isoSpecifier; });
/* harmony import */ var _defaultLocale_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./defaultLocale.js */ "../node_modules/d3-time-format/src/defaultLocale.js");


var isoSpecifier = "%Y-%m-%dT%H:%M:%S.%LZ";

function formatIsoNative(date) {
  return date.toISOString();
}

var formatIso = Date.prototype.toISOString
    ? formatIsoNative
    : Object(_defaultLocale_js__WEBPACK_IMPORTED_MODULE_0__["utcFormat"])(isoSpecifier);

/* harmony default export */ __webpack_exports__["default"] = (formatIso);


/***/ }),

/***/ "../node_modules/d3-time-format/src/isoParse.js":
/*!******************************************************!*\
  !*** ../node_modules/d3-time-format/src/isoParse.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _isoFormat_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./isoFormat.js */ "../node_modules/d3-time-format/src/isoFormat.js");
/* harmony import */ var _defaultLocale_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./defaultLocale.js */ "../node_modules/d3-time-format/src/defaultLocale.js");



function parseIsoNative(string) {
  var date = new Date(string);
  return isNaN(date) ? null : date;
}

var parseIso = +new Date("2000-01-01T00:00:00.000Z")
    ? parseIsoNative
    : Object(_defaultLocale_js__WEBPACK_IMPORTED_MODULE_1__["utcParse"])(_isoFormat_js__WEBPACK_IMPORTED_MODULE_0__["isoSpecifier"]);

/* harmony default export */ __webpack_exports__["default"] = (parseIso);


/***/ }),

/***/ "../node_modules/d3-time-format/src/locale.js":
/*!****************************************************!*\
  !*** ../node_modules/d3-time-format/src/locale.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return formatLocale; });
/* harmony import */ var d3_time__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-time */ "../node_modules/d3-time/src/index.js");


function localDate(d) {
  if (0 <= d.y && d.y < 100) {
    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);
    date.setFullYear(d.y);
    return date;
  }
  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);
}

function utcDate(d) {
  if (0 <= d.y && d.y < 100) {
    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));
    date.setUTCFullYear(d.y);
    return date;
  }
  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));
}

function newDate(y, m, d) {
  return {y: y, m: m, d: d, H: 0, M: 0, S: 0, L: 0};
}

function formatLocale(locale) {
  var locale_dateTime = locale.dateTime,
      locale_date = locale.date,
      locale_time = locale.time,
      locale_periods = locale.periods,
      locale_weekdays = locale.days,
      locale_shortWeekdays = locale.shortDays,
      locale_months = locale.months,
      locale_shortMonths = locale.shortMonths;

  var periodRe = formatRe(locale_periods),
      periodLookup = formatLookup(locale_periods),
      weekdayRe = formatRe(locale_weekdays),
      weekdayLookup = formatLookup(locale_weekdays),
      shortWeekdayRe = formatRe(locale_shortWeekdays),
      shortWeekdayLookup = formatLookup(locale_shortWeekdays),
      monthRe = formatRe(locale_months),
      monthLookup = formatLookup(locale_months),
      shortMonthRe = formatRe(locale_shortMonths),
      shortMonthLookup = formatLookup(locale_shortMonths);

  var formats = {
    "a": formatShortWeekday,
    "A": formatWeekday,
    "b": formatShortMonth,
    "B": formatMonth,
    "c": null,
    "d": formatDayOfMonth,
    "e": formatDayOfMonth,
    "f": formatMicroseconds,
    "g": formatYearISO,
    "G": formatFullYearISO,
    "H": formatHour24,
    "I": formatHour12,
    "j": formatDayOfYear,
    "L": formatMilliseconds,
    "m": formatMonthNumber,
    "M": formatMinutes,
    "p": formatPeriod,
    "q": formatQuarter,
    "Q": formatUnixTimestamp,
    "s": formatUnixTimestampSeconds,
    "S": formatSeconds,
    "u": formatWeekdayNumberMonday,
    "U": formatWeekNumberSunday,
    "V": formatWeekNumberISO,
    "w": formatWeekdayNumberSunday,
    "W": formatWeekNumberMonday,
    "x": null,
    "X": null,
    "y": formatYear,
    "Y": formatFullYear,
    "Z": formatZone,
    "%": formatLiteralPercent
  };

  var utcFormats = {
    "a": formatUTCShortWeekday,
    "A": formatUTCWeekday,
    "b": formatUTCShortMonth,
    "B": formatUTCMonth,
    "c": null,
    "d": formatUTCDayOfMonth,
    "e": formatUTCDayOfMonth,
    "f": formatUTCMicroseconds,
    "g": formatUTCYearISO,
    "G": formatUTCFullYearISO,
    "H": formatUTCHour24,
    "I": formatUTCHour12,
    "j": formatUTCDayOfYear,
    "L": formatUTCMilliseconds,
    "m": formatUTCMonthNumber,
    "M": formatUTCMinutes,
    "p": formatUTCPeriod,
    "q": formatUTCQuarter,
    "Q": formatUnixTimestamp,
    "s": formatUnixTimestampSeconds,
    "S": formatUTCSeconds,
    "u": formatUTCWeekdayNumberMonday,
    "U": formatUTCWeekNumberSunday,
    "V": formatUTCWeekNumberISO,
    "w": formatUTCWeekdayNumberSunday,
    "W": formatUTCWeekNumberMonday,
    "x": null,
    "X": null,
    "y": formatUTCYear,
    "Y": formatUTCFullYear,
    "Z": formatUTCZone,
    "%": formatLiteralPercent
  };

  var parses = {
    "a": parseShortWeekday,
    "A": parseWeekday,
    "b": parseShortMonth,
    "B": parseMonth,
    "c": parseLocaleDateTime,
    "d": parseDayOfMonth,
    "e": parseDayOfMonth,
    "f": parseMicroseconds,
    "g": parseYear,
    "G": parseFullYear,
    "H": parseHour24,
    "I": parseHour24,
    "j": parseDayOfYear,
    "L": parseMilliseconds,
    "m": parseMonthNumber,
    "M": parseMinutes,
    "p": parsePeriod,
    "q": parseQuarter,
    "Q": parseUnixTimestamp,
    "s": parseUnixTimestampSeconds,
    "S": parseSeconds,
    "u": parseWeekdayNumberMonday,
    "U": parseWeekNumberSunday,
    "V": parseWeekNumberISO,
    "w": parseWeekdayNumberSunday,
    "W": parseWeekNumberMonday,
    "x": parseLocaleDate,
    "X": parseLocaleTime,
    "y": parseYear,
    "Y": parseFullYear,
    "Z": parseZone,
    "%": parseLiteralPercent
  };

  // These recursive directive definitions must be deferred.
  formats.x = newFormat(locale_date, formats);
  formats.X = newFormat(locale_time, formats);
  formats.c = newFormat(locale_dateTime, formats);
  utcFormats.x = newFormat(locale_date, utcFormats);
  utcFormats.X = newFormat(locale_time, utcFormats);
  utcFormats.c = newFormat(locale_dateTime, utcFormats);

  function newFormat(specifier, formats) {
    return function(date) {
      var string = [],
          i = -1,
          j = 0,
          n = specifier.length,
          c,
          pad,
          format;

      if (!(date instanceof Date)) date = new Date(+date);

      while (++i < n) {
        if (specifier.charCodeAt(i) === 37) {
          string.push(specifier.slice(j, i));
          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);
          else pad = c === "e" ? " " : "0";
          if (format = formats[c]) c = format(date, pad);
          string.push(c);
          j = i + 1;
        }
      }

      string.push(specifier.slice(j, i));
      return string.join("");
    };
  }

  function newParse(specifier, Z) {
    return function(string) {
      var d = newDate(1900, undefined, 1),
          i = parseSpecifier(d, specifier, string += "", 0),
          week, day;
      if (i != string.length) return null;

      // If a UNIX timestamp is specified, return it.
      if ("Q" in d) return new Date(d.Q);
      if ("s" in d) return new Date(d.s * 1000 + ("L" in d ? d.L : 0));

      // If this is utcParse, never use the local timezone.
      if (Z && !("Z" in d)) d.Z = 0;

      // The am-pm flag is 0 for AM, and 1 for PM.
      if ("p" in d) d.H = d.H % 12 + d.p * 12;

      // If the month was not specified, inherit from the quarter.
      if (d.m === undefined) d.m = "q" in d ? d.q : 0;

      // Convert day-of-week and week-of-year to day-of-year.
      if ("V" in d) {
        if (d.V < 1 || d.V > 53) return null;
        if (!("w" in d)) d.w = 1;
        if ("Z" in d) {
          week = utcDate(newDate(d.y, 0, 1)), day = week.getUTCDay();
          week = day > 4 || day === 0 ? d3_time__WEBPACK_IMPORTED_MODULE_0__["utcMonday"].ceil(week) : Object(d3_time__WEBPACK_IMPORTED_MODULE_0__["utcMonday"])(week);
          week = d3_time__WEBPACK_IMPORTED_MODULE_0__["utcDay"].offset(week, (d.V - 1) * 7);
          d.y = week.getUTCFullYear();
          d.m = week.getUTCMonth();
          d.d = week.getUTCDate() + (d.w + 6) % 7;
        } else {
          week = localDate(newDate(d.y, 0, 1)), day = week.getDay();
          week = day > 4 || day === 0 ? d3_time__WEBPACK_IMPORTED_MODULE_0__["timeMonday"].ceil(week) : Object(d3_time__WEBPACK_IMPORTED_MODULE_0__["timeMonday"])(week);
          week = d3_time__WEBPACK_IMPORTED_MODULE_0__["timeDay"].offset(week, (d.V - 1) * 7);
          d.y = week.getFullYear();
          d.m = week.getMonth();
          d.d = week.getDate() + (d.w + 6) % 7;
        }
      } else if ("W" in d || "U" in d) {
        if (!("w" in d)) d.w = "u" in d ? d.u % 7 : "W" in d ? 1 : 0;
        day = "Z" in d ? utcDate(newDate(d.y, 0, 1)).getUTCDay() : localDate(newDate(d.y, 0, 1)).getDay();
        d.m = 0;
        d.d = "W" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;
      }

      // If a time zone is specified, all fields are interpreted as UTC and then
      // offset according to the specified time zone.
      if ("Z" in d) {
        d.H += d.Z / 100 | 0;
        d.M += d.Z % 100;
        return utcDate(d);
      }

      // Otherwise, all fields are in local time.
      return localDate(d);
    };
  }

  function parseSpecifier(d, specifier, string, j) {
    var i = 0,
        n = specifier.length,
        m = string.length,
        c,
        parse;

    while (i < n) {
      if (j >= m) return -1;
      c = specifier.charCodeAt(i++);
      if (c === 37) {
        c = specifier.charAt(i++);
        parse = parses[c in pads ? specifier.charAt(i++) : c];
        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;
      } else if (c != string.charCodeAt(j++)) {
        return -1;
      }
    }

    return j;
  }

  function parsePeriod(d, string, i) {
    var n = periodRe.exec(string.slice(i));
    return n ? (d.p = periodLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
  }

  function parseShortWeekday(d, string, i) {
    var n = shortWeekdayRe.exec(string.slice(i));
    return n ? (d.w = shortWeekdayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
  }

  function parseWeekday(d, string, i) {
    var n = weekdayRe.exec(string.slice(i));
    return n ? (d.w = weekdayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
  }

  function parseShortMonth(d, string, i) {
    var n = shortMonthRe.exec(string.slice(i));
    return n ? (d.m = shortMonthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
  }

  function parseMonth(d, string, i) {
    var n = monthRe.exec(string.slice(i));
    return n ? (d.m = monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
  }

  function parseLocaleDateTime(d, string, i) {
    return parseSpecifier(d, locale_dateTime, string, i);
  }

  function parseLocaleDate(d, string, i) {
    return parseSpecifier(d, locale_date, string, i);
  }

  function parseLocaleTime(d, string, i) {
    return parseSpecifier(d, locale_time, string, i);
  }

  function formatShortWeekday(d) {
    return locale_shortWeekdays[d.getDay()];
  }

  function formatWeekday(d) {
    return locale_weekdays[d.getDay()];
  }

  function formatShortMonth(d) {
    return locale_shortMonths[d.getMonth()];
  }

  function formatMonth(d) {
    return locale_months[d.getMonth()];
  }

  function formatPeriod(d) {
    return locale_periods[+(d.getHours() >= 12)];
  }

  function formatQuarter(d) {
    return 1 + ~~(d.getMonth() / 3);
  }

  function formatUTCShortWeekday(d) {
    return locale_shortWeekdays[d.getUTCDay()];
  }

  function formatUTCWeekday(d) {
    return locale_weekdays[d.getUTCDay()];
  }

  function formatUTCShortMonth(d) {
    return locale_shortMonths[d.getUTCMonth()];
  }

  function formatUTCMonth(d) {
    return locale_months[d.getUTCMonth()];
  }

  function formatUTCPeriod(d) {
    return locale_periods[+(d.getUTCHours() >= 12)];
  }

  function formatUTCQuarter(d) {
    return 1 + ~~(d.getUTCMonth() / 3);
  }

  return {
    format: function(specifier) {
      var f = newFormat(specifier += "", formats);
      f.toString = function() { return specifier; };
      return f;
    },
    parse: function(specifier) {
      var p = newParse(specifier += "", false);
      p.toString = function() { return specifier; };
      return p;
    },
    utcFormat: function(specifier) {
      var f = newFormat(specifier += "", utcFormats);
      f.toString = function() { return specifier; };
      return f;
    },
    utcParse: function(specifier) {
      var p = newParse(specifier += "", true);
      p.toString = function() { return specifier; };
      return p;
    }
  };
}

var pads = {"-": "", "_": " ", "0": "0"},
    numberRe = /^\s*\d+/, // note: ignores next directive
    percentRe = /^%/,
    requoteRe = /[\\^$*+?|[\]().{}]/g;

function pad(value, fill, width) {
  var sign = value < 0 ? "-" : "",
      string = (sign ? -value : value) + "",
      length = string.length;
  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);
}

function requote(s) {
  return s.replace(requoteRe, "\\$&");
}

function formatRe(names) {
  return new RegExp("^(?:" + names.map(requote).join("|") + ")", "i");
}

function formatLookup(names) {
  return new Map(names.map((name, i) => [name.toLowerCase(), i]));
}

function parseWeekdayNumberSunday(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 1));
  return n ? (d.w = +n[0], i + n[0].length) : -1;
}

function parseWeekdayNumberMonday(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 1));
  return n ? (d.u = +n[0], i + n[0].length) : -1;
}

function parseWeekNumberSunday(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.U = +n[0], i + n[0].length) : -1;
}

function parseWeekNumberISO(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.V = +n[0], i + n[0].length) : -1;
}

function parseWeekNumberMonday(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.W = +n[0], i + n[0].length) : -1;
}

function parseFullYear(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 4));
  return n ? (d.y = +n[0], i + n[0].length) : -1;
}

function parseYear(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;
}

function parseZone(d, string, i) {
  var n = /^(Z)|([+-]\d\d)(?::?(\d\d))?/.exec(string.slice(i, i + 6));
  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || "00")), i + n[0].length) : -1;
}

function parseQuarter(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 1));
  return n ? (d.q = n[0] * 3 - 3, i + n[0].length) : -1;
}

function parseMonthNumber(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;
}

function parseDayOfMonth(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.d = +n[0], i + n[0].length) : -1;
}

function parseDayOfYear(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 3));
  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;
}

function parseHour24(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.H = +n[0], i + n[0].length) : -1;
}

function parseMinutes(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.M = +n[0], i + n[0].length) : -1;
}

function parseSeconds(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.S = +n[0], i + n[0].length) : -1;
}

function parseMilliseconds(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 3));
  return n ? (d.L = +n[0], i + n[0].length) : -1;
}

function parseMicroseconds(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 6));
  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;
}

function parseLiteralPercent(d, string, i) {
  var n = percentRe.exec(string.slice(i, i + 1));
  return n ? i + n[0].length : -1;
}

function parseUnixTimestamp(d, string, i) {
  var n = numberRe.exec(string.slice(i));
  return n ? (d.Q = +n[0], i + n[0].length) : -1;
}

function parseUnixTimestampSeconds(d, string, i) {
  var n = numberRe.exec(string.slice(i));
  return n ? (d.s = +n[0], i + n[0].length) : -1;
}

function formatDayOfMonth(d, p) {
  return pad(d.getDate(), p, 2);
}

function formatHour24(d, p) {
  return pad(d.getHours(), p, 2);
}

function formatHour12(d, p) {
  return pad(d.getHours() % 12 || 12, p, 2);
}

function formatDayOfYear(d, p) {
  return pad(1 + d3_time__WEBPACK_IMPORTED_MODULE_0__["timeDay"].count(Object(d3_time__WEBPACK_IMPORTED_MODULE_0__["timeYear"])(d), d), p, 3);
}

function formatMilliseconds(d, p) {
  return pad(d.getMilliseconds(), p, 3);
}

function formatMicroseconds(d, p) {
  return formatMilliseconds(d, p) + "000";
}

function formatMonthNumber(d, p) {
  return pad(d.getMonth() + 1, p, 2);
}

function formatMinutes(d, p) {
  return pad(d.getMinutes(), p, 2);
}

function formatSeconds(d, p) {
  return pad(d.getSeconds(), p, 2);
}

function formatWeekdayNumberMonday(d) {
  var day = d.getDay();
  return day === 0 ? 7 : day;
}

function formatWeekNumberSunday(d, p) {
  return pad(d3_time__WEBPACK_IMPORTED_MODULE_0__["timeSunday"].count(Object(d3_time__WEBPACK_IMPORTED_MODULE_0__["timeYear"])(d) - 1, d), p, 2);
}

function dISO(d) {
  var day = d.getDay();
  return (day >= 4 || day === 0) ? Object(d3_time__WEBPACK_IMPORTED_MODULE_0__["timeThursday"])(d) : d3_time__WEBPACK_IMPORTED_MODULE_0__["timeThursday"].ceil(d);
}

function formatWeekNumberISO(d, p) {
  d = dISO(d);
  return pad(d3_time__WEBPACK_IMPORTED_MODULE_0__["timeThursday"].count(Object(d3_time__WEBPACK_IMPORTED_MODULE_0__["timeYear"])(d), d) + (Object(d3_time__WEBPACK_IMPORTED_MODULE_0__["timeYear"])(d).getDay() === 4), p, 2);
}

function formatWeekdayNumberSunday(d) {
  return d.getDay();
}

function formatWeekNumberMonday(d, p) {
  return pad(d3_time__WEBPACK_IMPORTED_MODULE_0__["timeMonday"].count(Object(d3_time__WEBPACK_IMPORTED_MODULE_0__["timeYear"])(d) - 1, d), p, 2);
}

function formatYear(d, p) {
  return pad(d.getFullYear() % 100, p, 2);
}

function formatYearISO(d, p) {
  d = dISO(d);
  return pad(d.getFullYear() % 100, p, 2);
}

function formatFullYear(d, p) {
  return pad(d.getFullYear() % 10000, p, 4);
}

function formatFullYearISO(d, p) {
  var day = d.getDay();
  d = (day >= 4 || day === 0) ? Object(d3_time__WEBPACK_IMPORTED_MODULE_0__["timeThursday"])(d) : d3_time__WEBPACK_IMPORTED_MODULE_0__["timeThursday"].ceil(d);
  return pad(d.getFullYear() % 10000, p, 4);
}

function formatZone(d) {
  var z = d.getTimezoneOffset();
  return (z > 0 ? "-" : (z *= -1, "+"))
      + pad(z / 60 | 0, "0", 2)
      + pad(z % 60, "0", 2);
}

function formatUTCDayOfMonth(d, p) {
  return pad(d.getUTCDate(), p, 2);
}

function formatUTCHour24(d, p) {
  return pad(d.getUTCHours(), p, 2);
}

function formatUTCHour12(d, p) {
  return pad(d.getUTCHours() % 12 || 12, p, 2);
}

function formatUTCDayOfYear(d, p) {
  return pad(1 + d3_time__WEBPACK_IMPORTED_MODULE_0__["utcDay"].count(Object(d3_time__WEBPACK_IMPORTED_MODULE_0__["utcYear"])(d), d), p, 3);
}

function formatUTCMilliseconds(d, p) {
  return pad(d.getUTCMilliseconds(), p, 3);
}

function formatUTCMicroseconds(d, p) {
  return formatUTCMilliseconds(d, p) + "000";
}

function formatUTCMonthNumber(d, p) {
  return pad(d.getUTCMonth() + 1, p, 2);
}

function formatUTCMinutes(d, p) {
  return pad(d.getUTCMinutes(), p, 2);
}

function formatUTCSeconds(d, p) {
  return pad(d.getUTCSeconds(), p, 2);
}

function formatUTCWeekdayNumberMonday(d) {
  var dow = d.getUTCDay();
  return dow === 0 ? 7 : dow;
}

function formatUTCWeekNumberSunday(d, p) {
  return pad(d3_time__WEBPACK_IMPORTED_MODULE_0__["utcSunday"].count(Object(d3_time__WEBPACK_IMPORTED_MODULE_0__["utcYear"])(d) - 1, d), p, 2);
}

function UTCdISO(d) {
  var day = d.getUTCDay();
  return (day >= 4 || day === 0) ? Object(d3_time__WEBPACK_IMPORTED_MODULE_0__["utcThursday"])(d) : d3_time__WEBPACK_IMPORTED_MODULE_0__["utcThursday"].ceil(d);
}

function formatUTCWeekNumberISO(d, p) {
  d = UTCdISO(d);
  return pad(d3_time__WEBPACK_IMPORTED_MODULE_0__["utcThursday"].count(Object(d3_time__WEBPACK_IMPORTED_MODULE_0__["utcYear"])(d), d) + (Object(d3_time__WEBPACK_IMPORTED_MODULE_0__["utcYear"])(d).getUTCDay() === 4), p, 2);
}

function formatUTCWeekdayNumberSunday(d) {
  return d.getUTCDay();
}

function formatUTCWeekNumberMonday(d, p) {
  return pad(d3_time__WEBPACK_IMPORTED_MODULE_0__["utcMonday"].count(Object(d3_time__WEBPACK_IMPORTED_MODULE_0__["utcYear"])(d) - 1, d), p, 2);
}

function formatUTCYear(d, p) {
  return pad(d.getUTCFullYear() % 100, p, 2);
}

function formatUTCYearISO(d, p) {
  d = UTCdISO(d);
  return pad(d.getUTCFullYear() % 100, p, 2);
}

function formatUTCFullYear(d, p) {
  return pad(d.getUTCFullYear() % 10000, p, 4);
}

function formatUTCFullYearISO(d, p) {
  var day = d.getUTCDay();
  d = (day >= 4 || day === 0) ? Object(d3_time__WEBPACK_IMPORTED_MODULE_0__["utcThursday"])(d) : d3_time__WEBPACK_IMPORTED_MODULE_0__["utcThursday"].ceil(d);
  return pad(d.getUTCFullYear() % 10000, p, 4);
}

function formatUTCZone() {
  return "+0000";
}

function formatLiteralPercent() {
  return "%";
}

function formatUnixTimestamp(d) {
  return +d;
}

function formatUnixTimestampSeconds(d) {
  return Math.floor(+d / 1000);
}


/***/ }),

/***/ "../node_modules/d3-time/src/day.js":
/*!******************************************!*\
  !*** ../node_modules/d3-time/src/day.js ***!
  \******************************************/
/*! exports provided: default, days */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "days", function() { return days; });
/* harmony import */ var _interval_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./interval.js */ "../node_modules/d3-time/src/interval.js");
/* harmony import */ var _duration_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./duration.js */ "../node_modules/d3-time/src/duration.js");



var day = Object(_interval_js__WEBPACK_IMPORTED_MODULE_0__["default"])(
  date => date.setHours(0, 0, 0, 0),
  (date, step) => date.setDate(date.getDate() + step),
  (start, end) => (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * _duration_js__WEBPACK_IMPORTED_MODULE_1__["durationMinute"]) / _duration_js__WEBPACK_IMPORTED_MODULE_1__["durationDay"],
  date => date.getDate() - 1
);

/* harmony default export */ __webpack_exports__["default"] = (day);
var days = day.range;


/***/ }),

/***/ "../node_modules/d3-time/src/duration.js":
/*!***********************************************!*\
  !*** ../node_modules/d3-time/src/duration.js ***!
  \***********************************************/
/*! exports provided: durationSecond, durationMinute, durationHour, durationDay, durationWeek, durationMonth, durationYear */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "durationSecond", function() { return durationSecond; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "durationMinute", function() { return durationMinute; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "durationHour", function() { return durationHour; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "durationDay", function() { return durationDay; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "durationWeek", function() { return durationWeek; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "durationMonth", function() { return durationMonth; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "durationYear", function() { return durationYear; });
const durationSecond = 1000;
const durationMinute = durationSecond * 60;
const durationHour = durationMinute * 60;
const durationDay = durationHour * 24;
const durationWeek = durationDay * 7;
const durationMonth = durationDay * 30;
const durationYear = durationDay * 365;


/***/ }),

/***/ "../node_modules/d3-time/src/hour.js":
/*!*******************************************!*\
  !*** ../node_modules/d3-time/src/hour.js ***!
  \*******************************************/
/*! exports provided: default, hours */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hours", function() { return hours; });
/* harmony import */ var _interval_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./interval.js */ "../node_modules/d3-time/src/interval.js");
/* harmony import */ var _duration_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./duration.js */ "../node_modules/d3-time/src/duration.js");



var hour = Object(_interval_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function(date) {
  date.setTime(date - date.getMilliseconds() - date.getSeconds() * _duration_js__WEBPACK_IMPORTED_MODULE_1__["durationSecond"] - date.getMinutes() * _duration_js__WEBPACK_IMPORTED_MODULE_1__["durationMinute"]);
}, function(date, step) {
  date.setTime(+date + step * _duration_js__WEBPACK_IMPORTED_MODULE_1__["durationHour"]);
}, function(start, end) {
  return (end - start) / _duration_js__WEBPACK_IMPORTED_MODULE_1__["durationHour"];
}, function(date) {
  return date.getHours();
});

/* harmony default export */ __webpack_exports__["default"] = (hour);
var hours = hour.range;


/***/ }),

/***/ "../node_modules/d3-time/src/index.js":
/*!********************************************!*\
  !*** ../node_modules/d3-time/src/index.js ***!
  \********************************************/
/*! exports provided: timeInterval, timeMillisecond, timeMilliseconds, utcMillisecond, utcMilliseconds, timeSecond, timeSeconds, utcSecond, utcSeconds, timeMinute, timeMinutes, timeHour, timeHours, timeDay, timeDays, timeWeek, timeWeeks, timeSunday, timeSundays, timeMonday, timeMondays, timeTuesday, timeTuesdays, timeWednesday, timeWednesdays, timeThursday, timeThursdays, timeFriday, timeFridays, timeSaturday, timeSaturdays, timeMonth, timeMonths, timeYear, timeYears, utcMinute, utcMinutes, utcHour, utcHours, utcDay, utcDays, utcWeek, utcWeeks, utcSunday, utcSundays, utcMonday, utcMondays, utcTuesday, utcTuesdays, utcWednesday, utcWednesdays, utcThursday, utcThursdays, utcFriday, utcFridays, utcSaturday, utcSaturdays, utcMonth, utcMonths, utcYear, utcYears, utcTicks, utcTickInterval, timeTicks, timeTickInterval */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _interval_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./interval.js */ "../node_modules/d3-time/src/interval.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeInterval", function() { return _interval_js__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _millisecond_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./millisecond.js */ "../node_modules/d3-time/src/millisecond.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeMillisecond", function() { return _millisecond_js__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeMilliseconds", function() { return _millisecond_js__WEBPACK_IMPORTED_MODULE_1__["milliseconds"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcMillisecond", function() { return _millisecond_js__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcMilliseconds", function() { return _millisecond_js__WEBPACK_IMPORTED_MODULE_1__["milliseconds"]; });

/* harmony import */ var _second_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./second.js */ "../node_modules/d3-time/src/second.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeSecond", function() { return _second_js__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeSeconds", function() { return _second_js__WEBPACK_IMPORTED_MODULE_2__["seconds"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcSecond", function() { return _second_js__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcSeconds", function() { return _second_js__WEBPACK_IMPORTED_MODULE_2__["seconds"]; });

/* harmony import */ var _minute_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./minute.js */ "../node_modules/d3-time/src/minute.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeMinute", function() { return _minute_js__WEBPACK_IMPORTED_MODULE_3__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeMinutes", function() { return _minute_js__WEBPACK_IMPORTED_MODULE_3__["minutes"]; });

/* harmony import */ var _hour_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./hour.js */ "../node_modules/d3-time/src/hour.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeHour", function() { return _hour_js__WEBPACK_IMPORTED_MODULE_4__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeHours", function() { return _hour_js__WEBPACK_IMPORTED_MODULE_4__["hours"]; });

/* harmony import */ var _day_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./day.js */ "../node_modules/d3-time/src/day.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeDay", function() { return _day_js__WEBPACK_IMPORTED_MODULE_5__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeDays", function() { return _day_js__WEBPACK_IMPORTED_MODULE_5__["days"]; });

/* harmony import */ var _week_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./week.js */ "../node_modules/d3-time/src/week.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeWeek", function() { return _week_js__WEBPACK_IMPORTED_MODULE_6__["sunday"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeWeeks", function() { return _week_js__WEBPACK_IMPORTED_MODULE_6__["sundays"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeSunday", function() { return _week_js__WEBPACK_IMPORTED_MODULE_6__["sunday"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeSundays", function() { return _week_js__WEBPACK_IMPORTED_MODULE_6__["sundays"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeMonday", function() { return _week_js__WEBPACK_IMPORTED_MODULE_6__["monday"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeMondays", function() { return _week_js__WEBPACK_IMPORTED_MODULE_6__["mondays"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeTuesday", function() { return _week_js__WEBPACK_IMPORTED_MODULE_6__["tuesday"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeTuesdays", function() { return _week_js__WEBPACK_IMPORTED_MODULE_6__["tuesdays"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeWednesday", function() { return _week_js__WEBPACK_IMPORTED_MODULE_6__["wednesday"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeWednesdays", function() { return _week_js__WEBPACK_IMPORTED_MODULE_6__["wednesdays"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeThursday", function() { return _week_js__WEBPACK_IMPORTED_MODULE_6__["thursday"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeThursdays", function() { return _week_js__WEBPACK_IMPORTED_MODULE_6__["thursdays"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeFriday", function() { return _week_js__WEBPACK_IMPORTED_MODULE_6__["friday"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeFridays", function() { return _week_js__WEBPACK_IMPORTED_MODULE_6__["fridays"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeSaturday", function() { return _week_js__WEBPACK_IMPORTED_MODULE_6__["saturday"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeSaturdays", function() { return _week_js__WEBPACK_IMPORTED_MODULE_6__["saturdays"]; });

/* harmony import */ var _month_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./month.js */ "../node_modules/d3-time/src/month.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeMonth", function() { return _month_js__WEBPACK_IMPORTED_MODULE_7__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeMonths", function() { return _month_js__WEBPACK_IMPORTED_MODULE_7__["months"]; });

/* harmony import */ var _year_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./year.js */ "../node_modules/d3-time/src/year.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeYear", function() { return _year_js__WEBPACK_IMPORTED_MODULE_8__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeYears", function() { return _year_js__WEBPACK_IMPORTED_MODULE_8__["years"]; });

/* harmony import */ var _utcMinute_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./utcMinute.js */ "../node_modules/d3-time/src/utcMinute.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcMinute", function() { return _utcMinute_js__WEBPACK_IMPORTED_MODULE_9__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcMinutes", function() { return _utcMinute_js__WEBPACK_IMPORTED_MODULE_9__["utcMinutes"]; });

/* harmony import */ var _utcHour_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./utcHour.js */ "../node_modules/d3-time/src/utcHour.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcHour", function() { return _utcHour_js__WEBPACK_IMPORTED_MODULE_10__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcHours", function() { return _utcHour_js__WEBPACK_IMPORTED_MODULE_10__["utcHours"]; });

/* harmony import */ var _utcDay_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./utcDay.js */ "../node_modules/d3-time/src/utcDay.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcDay", function() { return _utcDay_js__WEBPACK_IMPORTED_MODULE_11__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcDays", function() { return _utcDay_js__WEBPACK_IMPORTED_MODULE_11__["utcDays"]; });

/* harmony import */ var _utcWeek_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./utcWeek.js */ "../node_modules/d3-time/src/utcWeek.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcWeek", function() { return _utcWeek_js__WEBPACK_IMPORTED_MODULE_12__["utcSunday"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcWeeks", function() { return _utcWeek_js__WEBPACK_IMPORTED_MODULE_12__["utcSundays"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcSunday", function() { return _utcWeek_js__WEBPACK_IMPORTED_MODULE_12__["utcSunday"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcSundays", function() { return _utcWeek_js__WEBPACK_IMPORTED_MODULE_12__["utcSundays"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcMonday", function() { return _utcWeek_js__WEBPACK_IMPORTED_MODULE_12__["utcMonday"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcMondays", function() { return _utcWeek_js__WEBPACK_IMPORTED_MODULE_12__["utcMondays"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcTuesday", function() { return _utcWeek_js__WEBPACK_IMPORTED_MODULE_12__["utcTuesday"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcTuesdays", function() { return _utcWeek_js__WEBPACK_IMPORTED_MODULE_12__["utcTuesdays"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcWednesday", function() { return _utcWeek_js__WEBPACK_IMPORTED_MODULE_12__["utcWednesday"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcWednesdays", function() { return _utcWeek_js__WEBPACK_IMPORTED_MODULE_12__["utcWednesdays"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcThursday", function() { return _utcWeek_js__WEBPACK_IMPORTED_MODULE_12__["utcThursday"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcThursdays", function() { return _utcWeek_js__WEBPACK_IMPORTED_MODULE_12__["utcThursdays"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcFriday", function() { return _utcWeek_js__WEBPACK_IMPORTED_MODULE_12__["utcFriday"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcFridays", function() { return _utcWeek_js__WEBPACK_IMPORTED_MODULE_12__["utcFridays"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcSaturday", function() { return _utcWeek_js__WEBPACK_IMPORTED_MODULE_12__["utcSaturday"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcSaturdays", function() { return _utcWeek_js__WEBPACK_IMPORTED_MODULE_12__["utcSaturdays"]; });

/* harmony import */ var _utcMonth_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./utcMonth.js */ "../node_modules/d3-time/src/utcMonth.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcMonth", function() { return _utcMonth_js__WEBPACK_IMPORTED_MODULE_13__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcMonths", function() { return _utcMonth_js__WEBPACK_IMPORTED_MODULE_13__["utcMonths"]; });

/* harmony import */ var _utcYear_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./utcYear.js */ "../node_modules/d3-time/src/utcYear.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcYear", function() { return _utcYear_js__WEBPACK_IMPORTED_MODULE_14__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcYears", function() { return _utcYear_js__WEBPACK_IMPORTED_MODULE_14__["utcYears"]; });

/* harmony import */ var _ticks_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./ticks.js */ "../node_modules/d3-time/src/ticks.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcTicks", function() { return _ticks_js__WEBPACK_IMPORTED_MODULE_15__["utcTicks"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcTickInterval", function() { return _ticks_js__WEBPACK_IMPORTED_MODULE_15__["utcTickInterval"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeTicks", function() { return _ticks_js__WEBPACK_IMPORTED_MODULE_15__["timeTicks"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeTickInterval", function() { return _ticks_js__WEBPACK_IMPORTED_MODULE_15__["timeTickInterval"]; });


































/***/ }),

/***/ "../node_modules/d3-time/src/interval.js":
/*!***********************************************!*\
  !*** ../node_modules/d3-time/src/interval.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return newInterval; });
var t0 = new Date,
    t1 = new Date;

function newInterval(floori, offseti, count, field) {

  function interval(date) {
    return floori(date = arguments.length === 0 ? new Date : new Date(+date)), date;
  }

  interval.floor = function(date) {
    return floori(date = new Date(+date)), date;
  };

  interval.ceil = function(date) {
    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;
  };

  interval.round = function(date) {
    var d0 = interval(date),
        d1 = interval.ceil(date);
    return date - d0 < d1 - date ? d0 : d1;
  };

  interval.offset = function(date, step) {
    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;
  };

  interval.range = function(start, stop, step) {
    var range = [], previous;
    start = interval.ceil(start);
    step = step == null ? 1 : Math.floor(step);
    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date
    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);
    while (previous < start && start < stop);
    return range;
  };

  interval.filter = function(test) {
    return newInterval(function(date) {
      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);
    }, function(date, step) {
      if (date >= date) {
        if (step < 0) while (++step <= 0) {
          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty
        } else while (--step >= 0) {
          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty
        }
      }
    });
  };

  if (count) {
    interval.count = function(start, end) {
      t0.setTime(+start), t1.setTime(+end);
      floori(t0), floori(t1);
      return Math.floor(count(t0, t1));
    };

    interval.every = function(step) {
      step = Math.floor(step);
      return !isFinite(step) || !(step > 0) ? null
          : !(step > 1) ? interval
          : interval.filter(field
              ? function(d) { return field(d) % step === 0; }
              : function(d) { return interval.count(0, d) % step === 0; });
    };
  }

  return interval;
}


/***/ }),

/***/ "../node_modules/d3-time/src/millisecond.js":
/*!**************************************************!*\
  !*** ../node_modules/d3-time/src/millisecond.js ***!
  \**************************************************/
/*! exports provided: default, milliseconds */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "milliseconds", function() { return milliseconds; });
/* harmony import */ var _interval_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./interval.js */ "../node_modules/d3-time/src/interval.js");


var millisecond = Object(_interval_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function() {
  // noop
}, function(date, step) {
  date.setTime(+date + step);
}, function(start, end) {
  return end - start;
});

// An optimized implementation for this simple case.
millisecond.every = function(k) {
  k = Math.floor(k);
  if (!isFinite(k) || !(k > 0)) return null;
  if (!(k > 1)) return millisecond;
  return Object(_interval_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function(date) {
    date.setTime(Math.floor(date / k) * k);
  }, function(date, step) {
    date.setTime(+date + step * k);
  }, function(start, end) {
    return (end - start) / k;
  });
};

/* harmony default export */ __webpack_exports__["default"] = (millisecond);
var milliseconds = millisecond.range;


/***/ }),

/***/ "../node_modules/d3-time/src/minute.js":
/*!*********************************************!*\
  !*** ../node_modules/d3-time/src/minute.js ***!
  \*********************************************/
/*! exports provided: default, minutes */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "minutes", function() { return minutes; });
/* harmony import */ var _interval_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./interval.js */ "../node_modules/d3-time/src/interval.js");
/* harmony import */ var _duration_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./duration.js */ "../node_modules/d3-time/src/duration.js");



var minute = Object(_interval_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function(date) {
  date.setTime(date - date.getMilliseconds() - date.getSeconds() * _duration_js__WEBPACK_IMPORTED_MODULE_1__["durationSecond"]);
}, function(date, step) {
  date.setTime(+date + step * _duration_js__WEBPACK_IMPORTED_MODULE_1__["durationMinute"]);
}, function(start, end) {
  return (end - start) / _duration_js__WEBPACK_IMPORTED_MODULE_1__["durationMinute"];
}, function(date) {
  return date.getMinutes();
});

/* harmony default export */ __webpack_exports__["default"] = (minute);
var minutes = minute.range;


/***/ }),

/***/ "../node_modules/d3-time/src/month.js":
/*!********************************************!*\
  !*** ../node_modules/d3-time/src/month.js ***!
  \********************************************/
/*! exports provided: default, months */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "months", function() { return months; });
/* harmony import */ var _interval_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./interval.js */ "../node_modules/d3-time/src/interval.js");


var month = Object(_interval_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function(date) {
  date.setDate(1);
  date.setHours(0, 0, 0, 0);
}, function(date, step) {
  date.setMonth(date.getMonth() + step);
}, function(start, end) {
  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;
}, function(date) {
  return date.getMonth();
});

/* harmony default export */ __webpack_exports__["default"] = (month);
var months = month.range;


/***/ }),

/***/ "../node_modules/d3-time/src/second.js":
/*!*********************************************!*\
  !*** ../node_modules/d3-time/src/second.js ***!
  \*********************************************/
/*! exports provided: default, seconds */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "seconds", function() { return seconds; });
/* harmony import */ var _interval_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./interval.js */ "../node_modules/d3-time/src/interval.js");
/* harmony import */ var _duration_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./duration.js */ "../node_modules/d3-time/src/duration.js");



var second = Object(_interval_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function(date) {
  date.setTime(date - date.getMilliseconds());
}, function(date, step) {
  date.setTime(+date + step * _duration_js__WEBPACK_IMPORTED_MODULE_1__["durationSecond"]);
}, function(start, end) {
  return (end - start) / _duration_js__WEBPACK_IMPORTED_MODULE_1__["durationSecond"];
}, function(date) {
  return date.getUTCSeconds();
});

/* harmony default export */ __webpack_exports__["default"] = (second);
var seconds = second.range;


/***/ }),

/***/ "../node_modules/d3-time/src/ticks.js":
/*!********************************************!*\
  !*** ../node_modules/d3-time/src/ticks.js ***!
  \********************************************/
/*! exports provided: utcTicks, utcTickInterval, timeTicks, timeTickInterval */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "utcTicks", function() { return utcTicks; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "utcTickInterval", function() { return utcTickInterval; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "timeTicks", function() { return timeTicks; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "timeTickInterval", function() { return timeTickInterval; });
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-array */ "../node_modules/d3-array/src/index.js");
/* harmony import */ var _duration_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./duration.js */ "../node_modules/d3-time/src/duration.js");
/* harmony import */ var _millisecond_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./millisecond.js */ "../node_modules/d3-time/src/millisecond.js");
/* harmony import */ var _second_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./second.js */ "../node_modules/d3-time/src/second.js");
/* harmony import */ var _minute_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./minute.js */ "../node_modules/d3-time/src/minute.js");
/* harmony import */ var _hour_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./hour.js */ "../node_modules/d3-time/src/hour.js");
/* harmony import */ var _day_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./day.js */ "../node_modules/d3-time/src/day.js");
/* harmony import */ var _week_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./week.js */ "../node_modules/d3-time/src/week.js");
/* harmony import */ var _month_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./month.js */ "../node_modules/d3-time/src/month.js");
/* harmony import */ var _year_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./year.js */ "../node_modules/d3-time/src/year.js");
/* harmony import */ var _utcMinute_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./utcMinute.js */ "../node_modules/d3-time/src/utcMinute.js");
/* harmony import */ var _utcHour_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./utcHour.js */ "../node_modules/d3-time/src/utcHour.js");
/* harmony import */ var _utcDay_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./utcDay.js */ "../node_modules/d3-time/src/utcDay.js");
/* harmony import */ var _utcWeek_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./utcWeek.js */ "../node_modules/d3-time/src/utcWeek.js");
/* harmony import */ var _utcMonth_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./utcMonth.js */ "../node_modules/d3-time/src/utcMonth.js");
/* harmony import */ var _utcYear_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./utcYear.js */ "../node_modules/d3-time/src/utcYear.js");

















function ticker(year, month, week, day, hour, minute) {

  const tickIntervals = [
    [_second_js__WEBPACK_IMPORTED_MODULE_3__["default"],  1,      _duration_js__WEBPACK_IMPORTED_MODULE_1__["durationSecond"]],
    [_second_js__WEBPACK_IMPORTED_MODULE_3__["default"],  5,  5 * _duration_js__WEBPACK_IMPORTED_MODULE_1__["durationSecond"]],
    [_second_js__WEBPACK_IMPORTED_MODULE_3__["default"], 15, 15 * _duration_js__WEBPACK_IMPORTED_MODULE_1__["durationSecond"]],
    [_second_js__WEBPACK_IMPORTED_MODULE_3__["default"], 30, 30 * _duration_js__WEBPACK_IMPORTED_MODULE_1__["durationSecond"]],
    [minute,  1,      _duration_js__WEBPACK_IMPORTED_MODULE_1__["durationMinute"]],
    [minute,  5,  5 * _duration_js__WEBPACK_IMPORTED_MODULE_1__["durationMinute"]],
    [minute, 15, 15 * _duration_js__WEBPACK_IMPORTED_MODULE_1__["durationMinute"]],
    [minute, 30, 30 * _duration_js__WEBPACK_IMPORTED_MODULE_1__["durationMinute"]],
    [  hour,  1,      _duration_js__WEBPACK_IMPORTED_MODULE_1__["durationHour"]  ],
    [  hour,  3,  3 * _duration_js__WEBPACK_IMPORTED_MODULE_1__["durationHour"]  ],
    [  hour,  6,  6 * _duration_js__WEBPACK_IMPORTED_MODULE_1__["durationHour"]  ],
    [  hour, 12, 12 * _duration_js__WEBPACK_IMPORTED_MODULE_1__["durationHour"]  ],
    [   day,  1,      _duration_js__WEBPACK_IMPORTED_MODULE_1__["durationDay"]   ],
    [   day,  2,  2 * _duration_js__WEBPACK_IMPORTED_MODULE_1__["durationDay"]   ],
    [  week,  1,      _duration_js__WEBPACK_IMPORTED_MODULE_1__["durationWeek"]  ],
    [ month,  1,      _duration_js__WEBPACK_IMPORTED_MODULE_1__["durationMonth"] ],
    [ month,  3,  3 * _duration_js__WEBPACK_IMPORTED_MODULE_1__["durationMonth"] ],
    [  year,  1,      _duration_js__WEBPACK_IMPORTED_MODULE_1__["durationYear"]  ]
  ];

  function ticks(start, stop, count) {
    const reverse = stop < start;
    if (reverse) [start, stop] = [stop, start];
    const interval = count && typeof count.range === "function" ? count : tickInterval(start, stop, count);
    const ticks = interval ? interval.range(start, +stop + 1) : []; // inclusive stop
    return reverse ? ticks.reverse() : ticks;
  }

  function tickInterval(start, stop, count) {
    const target = Math.abs(stop - start) / count;
    const i = Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["bisector"])(([,, step]) => step).right(tickIntervals, target);
    if (i === tickIntervals.length) return year.every(Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["tickStep"])(start / _duration_js__WEBPACK_IMPORTED_MODULE_1__["durationYear"], stop / _duration_js__WEBPACK_IMPORTED_MODULE_1__["durationYear"], count));
    if (i === 0) return _millisecond_js__WEBPACK_IMPORTED_MODULE_2__["default"].every(Math.max(Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["tickStep"])(start, stop, count), 1));
    const [t, step] = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];
    return t.every(step);
  }

  return [ticks, tickInterval];
}

const [utcTicks, utcTickInterval] = ticker(_utcYear_js__WEBPACK_IMPORTED_MODULE_15__["default"], _utcMonth_js__WEBPACK_IMPORTED_MODULE_14__["default"], _utcWeek_js__WEBPACK_IMPORTED_MODULE_13__["utcSunday"], _utcDay_js__WEBPACK_IMPORTED_MODULE_12__["default"], _utcHour_js__WEBPACK_IMPORTED_MODULE_11__["default"], _utcMinute_js__WEBPACK_IMPORTED_MODULE_10__["default"]);
const [timeTicks, timeTickInterval] = ticker(_year_js__WEBPACK_IMPORTED_MODULE_9__["default"], _month_js__WEBPACK_IMPORTED_MODULE_8__["default"], _week_js__WEBPACK_IMPORTED_MODULE_7__["sunday"], _day_js__WEBPACK_IMPORTED_MODULE_6__["default"], _hour_js__WEBPACK_IMPORTED_MODULE_5__["default"], _minute_js__WEBPACK_IMPORTED_MODULE_4__["default"]);




/***/ }),

/***/ "../node_modules/d3-time/src/utcDay.js":
/*!*********************************************!*\
  !*** ../node_modules/d3-time/src/utcDay.js ***!
  \*********************************************/
/*! exports provided: default, utcDays */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "utcDays", function() { return utcDays; });
/* harmony import */ var _interval_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./interval.js */ "../node_modules/d3-time/src/interval.js");
/* harmony import */ var _duration_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./duration.js */ "../node_modules/d3-time/src/duration.js");



var utcDay = Object(_interval_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function(date) {
  date.setUTCHours(0, 0, 0, 0);
}, function(date, step) {
  date.setUTCDate(date.getUTCDate() + step);
}, function(start, end) {
  return (end - start) / _duration_js__WEBPACK_IMPORTED_MODULE_1__["durationDay"];
}, function(date) {
  return date.getUTCDate() - 1;
});

/* harmony default export */ __webpack_exports__["default"] = (utcDay);
var utcDays = utcDay.range;


/***/ }),

/***/ "../node_modules/d3-time/src/utcHour.js":
/*!**********************************************!*\
  !*** ../node_modules/d3-time/src/utcHour.js ***!
  \**********************************************/
/*! exports provided: default, utcHours */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "utcHours", function() { return utcHours; });
/* harmony import */ var _interval_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./interval.js */ "../node_modules/d3-time/src/interval.js");
/* harmony import */ var _duration_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./duration.js */ "../node_modules/d3-time/src/duration.js");



var utcHour = Object(_interval_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function(date) {
  date.setUTCMinutes(0, 0, 0);
}, function(date, step) {
  date.setTime(+date + step * _duration_js__WEBPACK_IMPORTED_MODULE_1__["durationHour"]);
}, function(start, end) {
  return (end - start) / _duration_js__WEBPACK_IMPORTED_MODULE_1__["durationHour"];
}, function(date) {
  return date.getUTCHours();
});

/* harmony default export */ __webpack_exports__["default"] = (utcHour);
var utcHours = utcHour.range;


/***/ }),

/***/ "../node_modules/d3-time/src/utcMinute.js":
/*!************************************************!*\
  !*** ../node_modules/d3-time/src/utcMinute.js ***!
  \************************************************/
/*! exports provided: default, utcMinutes */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "utcMinutes", function() { return utcMinutes; });
/* harmony import */ var _interval_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./interval.js */ "../node_modules/d3-time/src/interval.js");
/* harmony import */ var _duration_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./duration.js */ "../node_modules/d3-time/src/duration.js");



var utcMinute = Object(_interval_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function(date) {
  date.setUTCSeconds(0, 0);
}, function(date, step) {
  date.setTime(+date + step * _duration_js__WEBPACK_IMPORTED_MODULE_1__["durationMinute"]);
}, function(start, end) {
  return (end - start) / _duration_js__WEBPACK_IMPORTED_MODULE_1__["durationMinute"];
}, function(date) {
  return date.getUTCMinutes();
});

/* harmony default export */ __webpack_exports__["default"] = (utcMinute);
var utcMinutes = utcMinute.range;


/***/ }),

/***/ "../node_modules/d3-time/src/utcMonth.js":
/*!***********************************************!*\
  !*** ../node_modules/d3-time/src/utcMonth.js ***!
  \***********************************************/
/*! exports provided: default, utcMonths */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "utcMonths", function() { return utcMonths; });
/* harmony import */ var _interval_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./interval.js */ "../node_modules/d3-time/src/interval.js");


var utcMonth = Object(_interval_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function(date) {
  date.setUTCDate(1);
  date.setUTCHours(0, 0, 0, 0);
}, function(date, step) {
  date.setUTCMonth(date.getUTCMonth() + step);
}, function(start, end) {
  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;
}, function(date) {
  return date.getUTCMonth();
});

/* harmony default export */ __webpack_exports__["default"] = (utcMonth);
var utcMonths = utcMonth.range;


/***/ }),

/***/ "../node_modules/d3-time/src/utcWeek.js":
/*!**********************************************!*\
  !*** ../node_modules/d3-time/src/utcWeek.js ***!
  \**********************************************/
/*! exports provided: utcSunday, utcMonday, utcTuesday, utcWednesday, utcThursday, utcFriday, utcSaturday, utcSundays, utcMondays, utcTuesdays, utcWednesdays, utcThursdays, utcFridays, utcSaturdays */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "utcSunday", function() { return utcSunday; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "utcMonday", function() { return utcMonday; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "utcTuesday", function() { return utcTuesday; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "utcWednesday", function() { return utcWednesday; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "utcThursday", function() { return utcThursday; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "utcFriday", function() { return utcFriday; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "utcSaturday", function() { return utcSaturday; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "utcSundays", function() { return utcSundays; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "utcMondays", function() { return utcMondays; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "utcTuesdays", function() { return utcTuesdays; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "utcWednesdays", function() { return utcWednesdays; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "utcThursdays", function() { return utcThursdays; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "utcFridays", function() { return utcFridays; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "utcSaturdays", function() { return utcSaturdays; });
/* harmony import */ var _interval_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./interval.js */ "../node_modules/d3-time/src/interval.js");
/* harmony import */ var _duration_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./duration.js */ "../node_modules/d3-time/src/duration.js");



function utcWeekday(i) {
  return Object(_interval_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function(date) {
    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);
    date.setUTCHours(0, 0, 0, 0);
  }, function(date, step) {
    date.setUTCDate(date.getUTCDate() + step * 7);
  }, function(start, end) {
    return (end - start) / _duration_js__WEBPACK_IMPORTED_MODULE_1__["durationWeek"];
  });
}

var utcSunday = utcWeekday(0);
var utcMonday = utcWeekday(1);
var utcTuesday = utcWeekday(2);
var utcWednesday = utcWeekday(3);
var utcThursday = utcWeekday(4);
var utcFriday = utcWeekday(5);
var utcSaturday = utcWeekday(6);

var utcSundays = utcSunday.range;
var utcMondays = utcMonday.range;
var utcTuesdays = utcTuesday.range;
var utcWednesdays = utcWednesday.range;
var utcThursdays = utcThursday.range;
var utcFridays = utcFriday.range;
var utcSaturdays = utcSaturday.range;


/***/ }),

/***/ "../node_modules/d3-time/src/utcYear.js":
/*!**********************************************!*\
  !*** ../node_modules/d3-time/src/utcYear.js ***!
  \**********************************************/
/*! exports provided: default, utcYears */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "utcYears", function() { return utcYears; });
/* harmony import */ var _interval_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./interval.js */ "../node_modules/d3-time/src/interval.js");


var utcYear = Object(_interval_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function(date) {
  date.setUTCMonth(0, 1);
  date.setUTCHours(0, 0, 0, 0);
}, function(date, step) {
  date.setUTCFullYear(date.getUTCFullYear() + step);
}, function(start, end) {
  return end.getUTCFullYear() - start.getUTCFullYear();
}, function(date) {
  return date.getUTCFullYear();
});

// An optimized implementation for this simple case.
utcYear.every = function(k) {
  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : Object(_interval_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function(date) {
    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);
    date.setUTCMonth(0, 1);
    date.setUTCHours(0, 0, 0, 0);
  }, function(date, step) {
    date.setUTCFullYear(date.getUTCFullYear() + step * k);
  });
};

/* harmony default export */ __webpack_exports__["default"] = (utcYear);
var utcYears = utcYear.range;


/***/ }),

/***/ "../node_modules/d3-time/src/week.js":
/*!*******************************************!*\
  !*** ../node_modules/d3-time/src/week.js ***!
  \*******************************************/
/*! exports provided: sunday, monday, tuesday, wednesday, thursday, friday, saturday, sundays, mondays, tuesdays, wednesdays, thursdays, fridays, saturdays */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sunday", function() { return sunday; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "monday", function() { return monday; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tuesday", function() { return tuesday; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "wednesday", function() { return wednesday; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "thursday", function() { return thursday; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "friday", function() { return friday; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "saturday", function() { return saturday; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sundays", function() { return sundays; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mondays", function() { return mondays; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tuesdays", function() { return tuesdays; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "wednesdays", function() { return wednesdays; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "thursdays", function() { return thursdays; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fridays", function() { return fridays; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "saturdays", function() { return saturdays; });
/* harmony import */ var _interval_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./interval.js */ "../node_modules/d3-time/src/interval.js");
/* harmony import */ var _duration_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./duration.js */ "../node_modules/d3-time/src/duration.js");



function weekday(i) {
  return Object(_interval_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function(date) {
    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);
    date.setHours(0, 0, 0, 0);
  }, function(date, step) {
    date.setDate(date.getDate() + step * 7);
  }, function(start, end) {
    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * _duration_js__WEBPACK_IMPORTED_MODULE_1__["durationMinute"]) / _duration_js__WEBPACK_IMPORTED_MODULE_1__["durationWeek"];
  });
}

var sunday = weekday(0);
var monday = weekday(1);
var tuesday = weekday(2);
var wednesday = weekday(3);
var thursday = weekday(4);
var friday = weekday(5);
var saturday = weekday(6);

var sundays = sunday.range;
var mondays = monday.range;
var tuesdays = tuesday.range;
var wednesdays = wednesday.range;
var thursdays = thursday.range;
var fridays = friday.range;
var saturdays = saturday.range;


/***/ }),

/***/ "../node_modules/d3-time/src/year.js":
/*!*******************************************!*\
  !*** ../node_modules/d3-time/src/year.js ***!
  \*******************************************/
/*! exports provided: default, years */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "years", function() { return years; });
/* harmony import */ var _interval_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./interval.js */ "../node_modules/d3-time/src/interval.js");


var year = Object(_interval_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function(date) {
  date.setMonth(0, 1);
  date.setHours(0, 0, 0, 0);
}, function(date, step) {
  date.setFullYear(date.getFullYear() + step);
}, function(start, end) {
  return end.getFullYear() - start.getFullYear();
}, function(date) {
  return date.getFullYear();
});

// An optimized implementation for this simple case.
year.every = function(k) {
  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : Object(_interval_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function(date) {
    date.setFullYear(Math.floor(date.getFullYear() / k) * k);
    date.setMonth(0, 1);
    date.setHours(0, 0, 0, 0);
  }, function(date, step) {
    date.setFullYear(date.getFullYear() + step * k);
  });
};

/* harmony default export */ __webpack_exports__["default"] = (year);
var years = year.range;


/***/ }),

/***/ "../node_modules/define-properties/index.js":
/*!**************************************************!*\
  !*** ../node_modules/define-properties/index.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var keys = __webpack_require__(/*! object-keys */ "../node_modules/object-keys/index.js");
var hasSymbols = typeof Symbol === 'function' && typeof Symbol('foo') === 'symbol';

var toStr = Object.prototype.toString;
var concat = Array.prototype.concat;
var origDefineProperty = Object.defineProperty;

var isFunction = function (fn) {
	return typeof fn === 'function' && toStr.call(fn) === '[object Function]';
};

var arePropertyDescriptorsSupported = function () {
	var obj = {};
	try {
		origDefineProperty(obj, 'x', { enumerable: false, value: obj });
		// eslint-disable-next-line no-unused-vars, no-restricted-syntax
		for (var _ in obj) { // jscs:ignore disallowUnusedVariables
			return false;
		}
		return obj.x === obj;
	} catch (e) { /* this is IE 8. */
		return false;
	}
};
var supportsDescriptors = origDefineProperty && arePropertyDescriptorsSupported();

var defineProperty = function (object, name, value, predicate) {
	if (name in object && (!isFunction(predicate) || !predicate())) {
		return;
	}
	if (supportsDescriptors) {
		origDefineProperty(object, name, {
			configurable: true,
			enumerable: false,
			value: value,
			writable: true
		});
	} else {
		object[name] = value;
	}
};

var defineProperties = function (object, map) {
	var predicates = arguments.length > 2 ? arguments[2] : {};
	var props = keys(map);
	if (hasSymbols) {
		props = concat.call(props, Object.getOwnPropertySymbols(map));
	}
	for (var i = 0; i < props.length; i += 1) {
		defineProperty(object, props[i], map[props[i]], predicates[props[i]]);
	}
};

defineProperties.supportsDescriptors = !!supportsDescriptors;

module.exports = defineProperties;


/***/ }),

/***/ "../node_modules/gl-matrix/esm/common.js":
/*!***********************************************!*\
  !*** ../node_modules/gl-matrix/esm/common.js ***!
  \***********************************************/
/*! exports provided: EPSILON, ARRAY_TYPE, RANDOM, setMatrixArrayType, toRadian, equals */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EPSILON", function() { return EPSILON; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ARRAY_TYPE", function() { return ARRAY_TYPE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RANDOM", function() { return RANDOM; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setMatrixArrayType", function() { return setMatrixArrayType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "toRadian", function() { return toRadian; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "equals", function() { return equals; });
/**
 * Common utilities
 * @module glMatrix
 */
// Configuration Constants
var EPSILON = 0.000001;
var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;
var RANDOM = Math.random;
/**
 * Sets the type of array used when creating new vectors and matrices
 *
 * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array
 */

function setMatrixArrayType(type) {
  ARRAY_TYPE = type;
}
var degree = Math.PI / 180;
/**
 * Convert Degree To Radian
 *
 * @param {Number} a Angle in Degrees
 */

function toRadian(a) {
  return a * degree;
}
/**
 * Tests whether or not the arguments have approximately the same value, within an absolute
 * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less
 * than or equal to 1.0, and a relative tolerance is used for larger values)
 *
 * @param {Number} a The first number to test.
 * @param {Number} b The second number to test.
 * @returns {Boolean} True if the numbers are approximately equal, false otherwise.
 */

function equals(a, b) {
  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));
}
if (!Math.hypot) Math.hypot = function () {
  var y = 0,
      i = arguments.length;

  while (i--) {
    y += arguments[i] * arguments[i];
  }

  return Math.sqrt(y);
};

/***/ }),

/***/ "../node_modules/gl-matrix/esm/index.js":
/*!**********************************************!*\
  !*** ../node_modules/gl-matrix/esm/index.js ***!
  \**********************************************/
/*! exports provided: glMatrix, mat2, mat2d, mat3, mat4, quat, quat2, vec2, vec3, vec4 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ "../node_modules/gl-matrix/esm/common.js");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "glMatrix", function() { return _common_js__WEBPACK_IMPORTED_MODULE_0__; });
/* harmony import */ var _mat2_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mat2.js */ "../node_modules/gl-matrix/esm/mat2.js");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "mat2", function() { return _mat2_js__WEBPACK_IMPORTED_MODULE_1__; });
/* harmony import */ var _mat2d_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./mat2d.js */ "../node_modules/gl-matrix/esm/mat2d.js");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "mat2d", function() { return _mat2d_js__WEBPACK_IMPORTED_MODULE_2__; });
/* harmony import */ var _mat3_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./mat3.js */ "../node_modules/gl-matrix/esm/mat3.js");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "mat3", function() { return _mat3_js__WEBPACK_IMPORTED_MODULE_3__; });
/* harmony import */ var _mat4_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./mat4.js */ "../node_modules/gl-matrix/esm/mat4.js");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "mat4", function() { return _mat4_js__WEBPACK_IMPORTED_MODULE_4__; });
/* harmony import */ var _quat_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./quat.js */ "../node_modules/gl-matrix/esm/quat.js");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "quat", function() { return _quat_js__WEBPACK_IMPORTED_MODULE_5__; });
/* harmony import */ var _quat2_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./quat2.js */ "../node_modules/gl-matrix/esm/quat2.js");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "quat2", function() { return _quat2_js__WEBPACK_IMPORTED_MODULE_6__; });
/* harmony import */ var _vec2_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./vec2.js */ "../node_modules/gl-matrix/esm/vec2.js");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "vec2", function() { return _vec2_js__WEBPACK_IMPORTED_MODULE_7__; });
/* harmony import */ var _vec3_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./vec3.js */ "../node_modules/gl-matrix/esm/vec3.js");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "vec3", function() { return _vec3_js__WEBPACK_IMPORTED_MODULE_8__; });
/* harmony import */ var _vec4_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./vec4.js */ "../node_modules/gl-matrix/esm/vec4.js");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "vec4", function() { return _vec4_js__WEBPACK_IMPORTED_MODULE_9__; });












/***/ }),

/***/ "../node_modules/gl-matrix/esm/mat2.js":
/*!*********************************************!*\
  !*** ../node_modules/gl-matrix/esm/mat2.js ***!
  \*********************************************/
/*! exports provided: create, clone, copy, identity, fromValues, set, transpose, invert, adjoint, determinant, multiply, rotate, scale, fromRotation, fromScaling, str, frob, LDU, add, subtract, exactEquals, equals, multiplyScalar, multiplyScalarAndAdd, mul, sub */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "create", function() { return create; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "clone", function() { return clone; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "copy", function() { return copy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "identity", function() { return identity; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromValues", function() { return fromValues; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "set", function() { return set; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "transpose", function() { return transpose; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "invert", function() { return invert; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "adjoint", function() { return adjoint; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "determinant", function() { return determinant; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "multiply", function() { return multiply; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rotate", function() { return rotate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scale", function() { return scale; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromRotation", function() { return fromRotation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromScaling", function() { return fromScaling; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "str", function() { return str; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "frob", function() { return frob; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LDU", function() { return LDU; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "add", function() { return add; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "subtract", function() { return subtract; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "exactEquals", function() { return exactEquals; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "equals", function() { return equals; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "multiplyScalar", function() { return multiplyScalar; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "multiplyScalarAndAdd", function() { return multiplyScalarAndAdd; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mul", function() { return mul; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sub", function() { return sub; });
/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ "../node_modules/gl-matrix/esm/common.js");

/**
 * 2x2 Matrix
 * @module mat2
 */

/**
 * Creates a new identity mat2
 *
 * @returns {mat2} a new 2x2 matrix
 */

function create() {
  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__["ARRAY_TYPE"](4);

  if (_common_js__WEBPACK_IMPORTED_MODULE_0__["ARRAY_TYPE"] != Float32Array) {
    out[1] = 0;
    out[2] = 0;
  }

  out[0] = 1;
  out[3] = 1;
  return out;
}
/**
 * Creates a new mat2 initialized with values from an existing matrix
 *
 * @param {ReadonlyMat2} a matrix to clone
 * @returns {mat2} a new 2x2 matrix
 */

function clone(a) {
  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__["ARRAY_TYPE"](4);
  out[0] = a[0];
  out[1] = a[1];
  out[2] = a[2];
  out[3] = a[3];
  return out;
}
/**
 * Copy the values from one mat2 to another
 *
 * @param {mat2} out the receiving matrix
 * @param {ReadonlyMat2} a the source matrix
 * @returns {mat2} out
 */

function copy(out, a) {
  out[0] = a[0];
  out[1] = a[1];
  out[2] = a[2];
  out[3] = a[3];
  return out;
}
/**
 * Set a mat2 to the identity matrix
 *
 * @param {mat2} out the receiving matrix
 * @returns {mat2} out
 */

function identity(out) {
  out[0] = 1;
  out[1] = 0;
  out[2] = 0;
  out[3] = 1;
  return out;
}
/**
 * Create a new mat2 with the given values
 *
 * @param {Number} m00 Component in column 0, row 0 position (index 0)
 * @param {Number} m01 Component in column 0, row 1 position (index 1)
 * @param {Number} m10 Component in column 1, row 0 position (index 2)
 * @param {Number} m11 Component in column 1, row 1 position (index 3)
 * @returns {mat2} out A new 2x2 matrix
 */

function fromValues(m00, m01, m10, m11) {
  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__["ARRAY_TYPE"](4);
  out[0] = m00;
  out[1] = m01;
  out[2] = m10;
  out[3] = m11;
  return out;
}
/**
 * Set the components of a mat2 to the given values
 *
 * @param {mat2} out the receiving matrix
 * @param {Number} m00 Component in column 0, row 0 position (index 0)
 * @param {Number} m01 Component in column 0, row 1 position (index 1)
 * @param {Number} m10 Component in column 1, row 0 position (index 2)
 * @param {Number} m11 Component in column 1, row 1 position (index 3)
 * @returns {mat2} out
 */

function set(out, m00, m01, m10, m11) {
  out[0] = m00;
  out[1] = m01;
  out[2] = m10;
  out[3] = m11;
  return out;
}
/**
 * Transpose the values of a mat2
 *
 * @param {mat2} out the receiving matrix
 * @param {ReadonlyMat2} a the source matrix
 * @returns {mat2} out
 */

function transpose(out, a) {
  // If we are transposing ourselves we can skip a few steps but have to cache
  // some values
  if (out === a) {
    var a1 = a[1];
    out[1] = a[2];
    out[2] = a1;
  } else {
    out[0] = a[0];
    out[1] = a[2];
    out[2] = a[1];
    out[3] = a[3];
  }

  return out;
}
/**
 * Inverts a mat2
 *
 * @param {mat2} out the receiving matrix
 * @param {ReadonlyMat2} a the source matrix
 * @returns {mat2} out
 */

function invert(out, a) {
  var a0 = a[0],
      a1 = a[1],
      a2 = a[2],
      a3 = a[3]; // Calculate the determinant

  var det = a0 * a3 - a2 * a1;

  if (!det) {
    return null;
  }

  det = 1.0 / det;
  out[0] = a3 * det;
  out[1] = -a1 * det;
  out[2] = -a2 * det;
  out[3] = a0 * det;
  return out;
}
/**
 * Calculates the adjugate of a mat2
 *
 * @param {mat2} out the receiving matrix
 * @param {ReadonlyMat2} a the source matrix
 * @returns {mat2} out
 */

function adjoint(out, a) {
  // Caching this value is nessecary if out == a
  var a0 = a[0];
  out[0] = a[3];
  out[1] = -a[1];
  out[2] = -a[2];
  out[3] = a0;
  return out;
}
/**
 * Calculates the determinant of a mat2
 *
 * @param {ReadonlyMat2} a the source matrix
 * @returns {Number} determinant of a
 */

function determinant(a) {
  return a[0] * a[3] - a[2] * a[1];
}
/**
 * Multiplies two mat2's
 *
 * @param {mat2} out the receiving matrix
 * @param {ReadonlyMat2} a the first operand
 * @param {ReadonlyMat2} b the second operand
 * @returns {mat2} out
 */

function multiply(out, a, b) {
  var a0 = a[0],
      a1 = a[1],
      a2 = a[2],
      a3 = a[3];
  var b0 = b[0],
      b1 = b[1],
      b2 = b[2],
      b3 = b[3];
  out[0] = a0 * b0 + a2 * b1;
  out[1] = a1 * b0 + a3 * b1;
  out[2] = a0 * b2 + a2 * b3;
  out[3] = a1 * b2 + a3 * b3;
  return out;
}
/**
 * Rotates a mat2 by the given angle
 *
 * @param {mat2} out the receiving matrix
 * @param {ReadonlyMat2} a the matrix to rotate
 * @param {Number} rad the angle to rotate the matrix by
 * @returns {mat2} out
 */

function rotate(out, a, rad) {
  var a0 = a[0],
      a1 = a[1],
      a2 = a[2],
      a3 = a[3];
  var s = Math.sin(rad);
  var c = Math.cos(rad);
  out[0] = a0 * c + a2 * s;
  out[1] = a1 * c + a3 * s;
  out[2] = a0 * -s + a2 * c;
  out[3] = a1 * -s + a3 * c;
  return out;
}
/**
 * Scales the mat2 by the dimensions in the given vec2
 *
 * @param {mat2} out the receiving matrix
 * @param {ReadonlyMat2} a the matrix to rotate
 * @param {ReadonlyVec2} v the vec2 to scale the matrix by
 * @returns {mat2} out
 **/

function scale(out, a, v) {
  var a0 = a[0],
      a1 = a[1],
      a2 = a[2],
      a3 = a[3];
  var v0 = v[0],
      v1 = v[1];
  out[0] = a0 * v0;
  out[1] = a1 * v0;
  out[2] = a2 * v1;
  out[3] = a3 * v1;
  return out;
}
/**
 * Creates a matrix from a given angle
 * This is equivalent to (but much faster than):
 *
 *     mat2.identity(dest);
 *     mat2.rotate(dest, dest, rad);
 *
 * @param {mat2} out mat2 receiving operation result
 * @param {Number} rad the angle to rotate the matrix by
 * @returns {mat2} out
 */

function fromRotation(out, rad) {
  var s = Math.sin(rad);
  var c = Math.cos(rad);
  out[0] = c;
  out[1] = s;
  out[2] = -s;
  out[3] = c;
  return out;
}
/**
 * Creates a matrix from a vector scaling
 * This is equivalent to (but much faster than):
 *
 *     mat2.identity(dest);
 *     mat2.scale(dest, dest, vec);
 *
 * @param {mat2} out mat2 receiving operation result
 * @param {ReadonlyVec2} v Scaling vector
 * @returns {mat2} out
 */

function fromScaling(out, v) {
  out[0] = v[0];
  out[1] = 0;
  out[2] = 0;
  out[3] = v[1];
  return out;
}
/**
 * Returns a string representation of a mat2
 *
 * @param {ReadonlyMat2} a matrix to represent as a string
 * @returns {String} string representation of the matrix
 */

function str(a) {
  return "mat2(" + a[0] + ", " + a[1] + ", " + a[2] + ", " + a[3] + ")";
}
/**
 * Returns Frobenius norm of a mat2
 *
 * @param {ReadonlyMat2} a the matrix to calculate Frobenius norm of
 * @returns {Number} Frobenius norm
 */

function frob(a) {
  return Math.hypot(a[0], a[1], a[2], a[3]);
}
/**
 * Returns L, D and U matrices (Lower triangular, Diagonal and Upper triangular) by factorizing the input matrix
 * @param {ReadonlyMat2} L the lower triangular matrix
 * @param {ReadonlyMat2} D the diagonal matrix
 * @param {ReadonlyMat2} U the upper triangular matrix
 * @param {ReadonlyMat2} a the input matrix to factorize
 */

function LDU(L, D, U, a) {
  L[2] = a[2] / a[0];
  U[0] = a[0];
  U[1] = a[1];
  U[3] = a[3] - L[2] * U[1];
  return [L, D, U];
}
/**
 * Adds two mat2's
 *
 * @param {mat2} out the receiving matrix
 * @param {ReadonlyMat2} a the first operand
 * @param {ReadonlyMat2} b the second operand
 * @returns {mat2} out
 */

function add(out, a, b) {
  out[0] = a[0] + b[0];
  out[1] = a[1] + b[1];
  out[2] = a[2] + b[2];
  out[3] = a[3] + b[3];
  return out;
}
/**
 * Subtracts matrix b from matrix a
 *
 * @param {mat2} out the receiving matrix
 * @param {ReadonlyMat2} a the first operand
 * @param {ReadonlyMat2} b the second operand
 * @returns {mat2} out
 */

function subtract(out, a, b) {
  out[0] = a[0] - b[0];
  out[1] = a[1] - b[1];
  out[2] = a[2] - b[2];
  out[3] = a[3] - b[3];
  return out;
}
/**
 * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)
 *
 * @param {ReadonlyMat2} a The first matrix.
 * @param {ReadonlyMat2} b The second matrix.
 * @returns {Boolean} True if the matrices are equal, false otherwise.
 */

function exactEquals(a, b) {
  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];
}
/**
 * Returns whether or not the matrices have approximately the same elements in the same position.
 *
 * @param {ReadonlyMat2} a The first matrix.
 * @param {ReadonlyMat2} b The second matrix.
 * @returns {Boolean} True if the matrices are equal, false otherwise.
 */

function equals(a, b) {
  var a0 = a[0],
      a1 = a[1],
      a2 = a[2],
      a3 = a[3];
  var b0 = b[0],
      b1 = b[1],
      b2 = b[2],
      b3 = b[3];
  return Math.abs(a0 - b0) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a3), Math.abs(b3));
}
/**
 * Multiply each element of the matrix by a scalar.
 *
 * @param {mat2} out the receiving matrix
 * @param {ReadonlyMat2} a the matrix to scale
 * @param {Number} b amount to scale the matrix's elements by
 * @returns {mat2} out
 */

function multiplyScalar(out, a, b) {
  out[0] = a[0] * b;
  out[1] = a[1] * b;
  out[2] = a[2] * b;
  out[3] = a[3] * b;
  return out;
}
/**
 * Adds two mat2's after multiplying each element of the second operand by a scalar value.
 *
 * @param {mat2} out the receiving vector
 * @param {ReadonlyMat2} a the first operand
 * @param {ReadonlyMat2} b the second operand
 * @param {Number} scale the amount to scale b's elements by before adding
 * @returns {mat2} out
 */

function multiplyScalarAndAdd(out, a, b, scale) {
  out[0] = a[0] + b[0] * scale;
  out[1] = a[1] + b[1] * scale;
  out[2] = a[2] + b[2] * scale;
  out[3] = a[3] + b[3] * scale;
  return out;
}
/**
 * Alias for {@link mat2.multiply}
 * @function
 */

var mul = multiply;
/**
 * Alias for {@link mat2.subtract}
 * @function
 */

var sub = subtract;

/***/ }),

/***/ "../node_modules/gl-matrix/esm/mat2d.js":
/*!**********************************************!*\
  !*** ../node_modules/gl-matrix/esm/mat2d.js ***!
  \**********************************************/
/*! exports provided: create, clone, copy, identity, fromValues, set, invert, determinant, multiply, rotate, scale, translate, fromRotation, fromScaling, fromTranslation, str, frob, add, subtract, multiplyScalar, multiplyScalarAndAdd, exactEquals, equals, mul, sub */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "create", function() { return create; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "clone", function() { return clone; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "copy", function() { return copy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "identity", function() { return identity; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromValues", function() { return fromValues; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "set", function() { return set; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "invert", function() { return invert; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "determinant", function() { return determinant; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "multiply", function() { return multiply; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rotate", function() { return rotate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scale", function() { return scale; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "translate", function() { return translate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromRotation", function() { return fromRotation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromScaling", function() { return fromScaling; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromTranslation", function() { return fromTranslation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "str", function() { return str; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "frob", function() { return frob; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "add", function() { return add; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "subtract", function() { return subtract; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "multiplyScalar", function() { return multiplyScalar; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "multiplyScalarAndAdd", function() { return multiplyScalarAndAdd; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "exactEquals", function() { return exactEquals; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "equals", function() { return equals; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mul", function() { return mul; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sub", function() { return sub; });
/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ "../node_modules/gl-matrix/esm/common.js");

/**
 * 2x3 Matrix
 * @module mat2d
 * @description
 * A mat2d contains six elements defined as:
 * <pre>
 * [a, b,
 *  c, d,
 *  tx, ty]
 * </pre>
 * This is a short form for the 3x3 matrix:
 * <pre>
 * [a, b, 0,
 *  c, d, 0,
 *  tx, ty, 1]
 * </pre>
 * The last column is ignored so the array is shorter and operations are faster.
 */

/**
 * Creates a new identity mat2d
 *
 * @returns {mat2d} a new 2x3 matrix
 */

function create() {
  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__["ARRAY_TYPE"](6);

  if (_common_js__WEBPACK_IMPORTED_MODULE_0__["ARRAY_TYPE"] != Float32Array) {
    out[1] = 0;
    out[2] = 0;
    out[4] = 0;
    out[5] = 0;
  }

  out[0] = 1;
  out[3] = 1;
  return out;
}
/**
 * Creates a new mat2d initialized with values from an existing matrix
 *
 * @param {ReadonlyMat2d} a matrix to clone
 * @returns {mat2d} a new 2x3 matrix
 */

function clone(a) {
  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__["ARRAY_TYPE"](6);
  out[0] = a[0];
  out[1] = a[1];
  out[2] = a[2];
  out[3] = a[3];
  out[4] = a[4];
  out[5] = a[5];
  return out;
}
/**
 * Copy the values from one mat2d to another
 *
 * @param {mat2d} out the receiving matrix
 * @param {ReadonlyMat2d} a the source matrix
 * @returns {mat2d} out
 */

function copy(out, a) {
  out[0] = a[0];
  out[1] = a[1];
  out[2] = a[2];
  out[3] = a[3];
  out[4] = a[4];
  out[5] = a[5];
  return out;
}
/**
 * Set a mat2d to the identity matrix
 *
 * @param {mat2d} out the receiving matrix
 * @returns {mat2d} out
 */

function identity(out) {
  out[0] = 1;
  out[1] = 0;
  out[2] = 0;
  out[3] = 1;
  out[4] = 0;
  out[5] = 0;
  return out;
}
/**
 * Create a new mat2d with the given values
 *
 * @param {Number} a Component A (index 0)
 * @param {Number} b Component B (index 1)
 * @param {Number} c Component C (index 2)
 * @param {Number} d Component D (index 3)
 * @param {Number} tx Component TX (index 4)
 * @param {Number} ty Component TY (index 5)
 * @returns {mat2d} A new mat2d
 */

function fromValues(a, b, c, d, tx, ty) {
  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__["ARRAY_TYPE"](6);
  out[0] = a;
  out[1] = b;
  out[2] = c;
  out[3] = d;
  out[4] = tx;
  out[5] = ty;
  return out;
}
/**
 * Set the components of a mat2d to the given values
 *
 * @param {mat2d} out the receiving matrix
 * @param {Number} a Component A (index 0)
 * @param {Number} b Component B (index 1)
 * @param {Number} c Component C (index 2)
 * @param {Number} d Component D (index 3)
 * @param {Number} tx Component TX (index 4)
 * @param {Number} ty Component TY (index 5)
 * @returns {mat2d} out
 */

function set(out, a, b, c, d, tx, ty) {
  out[0] = a;
  out[1] = b;
  out[2] = c;
  out[3] = d;
  out[4] = tx;
  out[5] = ty;
  return out;
}
/**
 * Inverts a mat2d
 *
 * @param {mat2d} out the receiving matrix
 * @param {ReadonlyMat2d} a the source matrix
 * @returns {mat2d} out
 */

function invert(out, a) {
  var aa = a[0],
      ab = a[1],
      ac = a[2],
      ad = a[3];
  var atx = a[4],
      aty = a[5];
  var det = aa * ad - ab * ac;

  if (!det) {
    return null;
  }

  det = 1.0 / det;
  out[0] = ad * det;
  out[1] = -ab * det;
  out[2] = -ac * det;
  out[3] = aa * det;
  out[4] = (ac * aty - ad * atx) * det;
  out[5] = (ab * atx - aa * aty) * det;
  return out;
}
/**
 * Calculates the determinant of a mat2d
 *
 * @param {ReadonlyMat2d} a the source matrix
 * @returns {Number} determinant of a
 */

function determinant(a) {
  return a[0] * a[3] - a[1] * a[2];
}
/**
 * Multiplies two mat2d's
 *
 * @param {mat2d} out the receiving matrix
 * @param {ReadonlyMat2d} a the first operand
 * @param {ReadonlyMat2d} b the second operand
 * @returns {mat2d} out
 */

function multiply(out, a, b) {
  var a0 = a[0],
      a1 = a[1],
      a2 = a[2],
      a3 = a[3],
      a4 = a[4],
      a5 = a[5];
  var b0 = b[0],
      b1 = b[1],
      b2 = b[2],
      b3 = b[3],
      b4 = b[4],
      b5 = b[5];
  out[0] = a0 * b0 + a2 * b1;
  out[1] = a1 * b0 + a3 * b1;
  out[2] = a0 * b2 + a2 * b3;
  out[3] = a1 * b2 + a3 * b3;
  out[4] = a0 * b4 + a2 * b5 + a4;
  out[5] = a1 * b4 + a3 * b5 + a5;
  return out;
}
/**
 * Rotates a mat2d by the given angle
 *
 * @param {mat2d} out the receiving matrix
 * @param {ReadonlyMat2d} a the matrix to rotate
 * @param {Number} rad the angle to rotate the matrix by
 * @returns {mat2d} out
 */

function rotate(out, a, rad) {
  var a0 = a[0],
      a1 = a[1],
      a2 = a[2],
      a3 = a[3],
      a4 = a[4],
      a5 = a[5];
  var s = Math.sin(rad);
  var c = Math.cos(rad);
  out[0] = a0 * c + a2 * s;
  out[1] = a1 * c + a3 * s;
  out[2] = a0 * -s + a2 * c;
  out[3] = a1 * -s + a3 * c;
  out[4] = a4;
  out[5] = a5;
  return out;
}
/**
 * Scales the mat2d by the dimensions in the given vec2
 *
 * @param {mat2d} out the receiving matrix
 * @param {ReadonlyMat2d} a the matrix to translate
 * @param {ReadonlyVec2} v the vec2 to scale the matrix by
 * @returns {mat2d} out
 **/

function scale(out, a, v) {
  var a0 = a[0],
      a1 = a[1],
      a2 = a[2],
      a3 = a[3],
      a4 = a[4],
      a5 = a[5];
  var v0 = v[0],
      v1 = v[1];
  out[0] = a0 * v0;
  out[1] = a1 * v0;
  out[2] = a2 * v1;
  out[3] = a3 * v1;
  out[4] = a4;
  out[5] = a5;
  return out;
}
/**
 * Translates the mat2d by the dimensions in the given vec2
 *
 * @param {mat2d} out the receiving matrix
 * @param {ReadonlyMat2d} a the matrix to translate
 * @param {ReadonlyVec2} v the vec2 to translate the matrix by
 * @returns {mat2d} out
 **/

function translate(out, a, v) {
  var a0 = a[0],
      a1 = a[1],
      a2 = a[2],
      a3 = a[3],
      a4 = a[4],
      a5 = a[5];
  var v0 = v[0],
      v1 = v[1];
  out[0] = a0;
  out[1] = a1;
  out[2] = a2;
  out[3] = a3;
  out[4] = a0 * v0 + a2 * v1 + a4;
  out[5] = a1 * v0 + a3 * v1 + a5;
  return out;
}
/**
 * Creates a matrix from a given angle
 * This is equivalent to (but much faster than):
 *
 *     mat2d.identity(dest);
 *     mat2d.rotate(dest, dest, rad);
 *
 * @param {mat2d} out mat2d receiving operation result
 * @param {Number} rad the angle to rotate the matrix by
 * @returns {mat2d} out
 */

function fromRotation(out, rad) {
  var s = Math.sin(rad),
      c = Math.cos(rad);
  out[0] = c;
  out[1] = s;
  out[2] = -s;
  out[3] = c;
  out[4] = 0;
  out[5] = 0;
  return out;
}
/**
 * Creates a matrix from a vector scaling
 * This is equivalent to (but much faster than):
 *
 *     mat2d.identity(dest);
 *     mat2d.scale(dest, dest, vec);
 *
 * @param {mat2d} out mat2d receiving operation result
 * @param {ReadonlyVec2} v Scaling vector
 * @returns {mat2d} out
 */

function fromScaling(out, v) {
  out[0] = v[0];
  out[1] = 0;
  out[2] = 0;
  out[3] = v[1];
  out[4] = 0;
  out[5] = 0;
  return out;
}
/**
 * Creates a matrix from a vector translation
 * This is equivalent to (but much faster than):
 *
 *     mat2d.identity(dest);
 *     mat2d.translate(dest, dest, vec);
 *
 * @param {mat2d} out mat2d receiving operation result
 * @param {ReadonlyVec2} v Translation vector
 * @returns {mat2d} out
 */

function fromTranslation(out, v) {
  out[0] = 1;
  out[1] = 0;
  out[2] = 0;
  out[3] = 1;
  out[4] = v[0];
  out[5] = v[1];
  return out;
}
/**
 * Returns a string representation of a mat2d
 *
 * @param {ReadonlyMat2d} a matrix to represent as a string
 * @returns {String} string representation of the matrix
 */

function str(a) {
  return "mat2d(" + a[0] + ", " + a[1] + ", " + a[2] + ", " + a[3] + ", " + a[4] + ", " + a[5] + ")";
}
/**
 * Returns Frobenius norm of a mat2d
 *
 * @param {ReadonlyMat2d} a the matrix to calculate Frobenius norm of
 * @returns {Number} Frobenius norm
 */

function frob(a) {
  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], 1);
}
/**
 * Adds two mat2d's
 *
 * @param {mat2d} out the receiving matrix
 * @param {ReadonlyMat2d} a the first operand
 * @param {ReadonlyMat2d} b the second operand
 * @returns {mat2d} out
 */

function add(out, a, b) {
  out[0] = a[0] + b[0];
  out[1] = a[1] + b[1];
  out[2] = a[2] + b[2];
  out[3] = a[3] + b[3];
  out[4] = a[4] + b[4];
  out[5] = a[5] + b[5];
  return out;
}
/**
 * Subtracts matrix b from matrix a
 *
 * @param {mat2d} out the receiving matrix
 * @param {ReadonlyMat2d} a the first operand
 * @param {ReadonlyMat2d} b the second operand
 * @returns {mat2d} out
 */

function subtract(out, a, b) {
  out[0] = a[0] - b[0];
  out[1] = a[1] - b[1];
  out[2] = a[2] - b[2];
  out[3] = a[3] - b[3];
  out[4] = a[4] - b[4];
  out[5] = a[5] - b[5];
  return out;
}
/**
 * Multiply each element of the matrix by a scalar.
 *
 * @param {mat2d} out the receiving matrix
 * @param {ReadonlyMat2d} a the matrix to scale
 * @param {Number} b amount to scale the matrix's elements by
 * @returns {mat2d} out
 */

function multiplyScalar(out, a, b) {
  out[0] = a[0] * b;
  out[1] = a[1] * b;
  out[2] = a[2] * b;
  out[3] = a[3] * b;
  out[4] = a[4] * b;
  out[5] = a[5] * b;
  return out;
}
/**
 * Adds two mat2d's after multiplying each element of the second operand by a scalar value.
 *
 * @param {mat2d} out the receiving vector
 * @param {ReadonlyMat2d} a the first operand
 * @param {ReadonlyMat2d} b the second operand
 * @param {Number} scale the amount to scale b's elements by before adding
 * @returns {mat2d} out
 */

function multiplyScalarAndAdd(out, a, b, scale) {
  out[0] = a[0] + b[0] * scale;
  out[1] = a[1] + b[1] * scale;
  out[2] = a[2] + b[2] * scale;
  out[3] = a[3] + b[3] * scale;
  out[4] = a[4] + b[4] * scale;
  out[5] = a[5] + b[5] * scale;
  return out;
}
/**
 * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)
 *
 * @param {ReadonlyMat2d} a The first matrix.
 * @param {ReadonlyMat2d} b The second matrix.
 * @returns {Boolean} True if the matrices are equal, false otherwise.
 */

function exactEquals(a, b) {
  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5];
}
/**
 * Returns whether or not the matrices have approximately the same elements in the same position.
 *
 * @param {ReadonlyMat2d} a The first matrix.
 * @param {ReadonlyMat2d} b The second matrix.
 * @returns {Boolean} True if the matrices are equal, false otherwise.
 */

function equals(a, b) {
  var a0 = a[0],
      a1 = a[1],
      a2 = a[2],
      a3 = a[3],
      a4 = a[4],
      a5 = a[5];
  var b0 = b[0],
      b1 = b[1],
      b2 = b[2],
      b3 = b[3],
      b4 = b[4],
      b5 = b[5];
  return Math.abs(a0 - b0) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a5), Math.abs(b5));
}
/**
 * Alias for {@link mat2d.multiply}
 * @function
 */

var mul = multiply;
/**
 * Alias for {@link mat2d.subtract}
 * @function
 */

var sub = subtract;

/***/ }),

/***/ "../node_modules/gl-matrix/esm/mat3.js":
/*!*********************************************!*\
  !*** ../node_modules/gl-matrix/esm/mat3.js ***!
  \*********************************************/
/*! exports provided: create, fromMat4, clone, copy, fromValues, set, identity, transpose, invert, adjoint, determinant, multiply, translate, rotate, scale, fromTranslation, fromRotation, fromScaling, fromMat2d, fromQuat, normalFromMat4, projection, str, frob, add, subtract, multiplyScalar, multiplyScalarAndAdd, exactEquals, equals, mul, sub */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "create", function() { return create; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromMat4", function() { return fromMat4; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "clone", function() { return clone; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "copy", function() { return copy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromValues", function() { return fromValues; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "set", function() { return set; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "identity", function() { return identity; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "transpose", function() { return transpose; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "invert", function() { return invert; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "adjoint", function() { return adjoint; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "determinant", function() { return determinant; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "multiply", function() { return multiply; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "translate", function() { return translate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rotate", function() { return rotate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scale", function() { return scale; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromTranslation", function() { return fromTranslation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromRotation", function() { return fromRotation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromScaling", function() { return fromScaling; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromMat2d", function() { return fromMat2d; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromQuat", function() { return fromQuat; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "normalFromMat4", function() { return normalFromMat4; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "projection", function() { return projection; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "str", function() { return str; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "frob", function() { return frob; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "add", function() { return add; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "subtract", function() { return subtract; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "multiplyScalar", function() { return multiplyScalar; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "multiplyScalarAndAdd", function() { return multiplyScalarAndAdd; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "exactEquals", function() { return exactEquals; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "equals", function() { return equals; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mul", function() { return mul; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sub", function() { return sub; });
/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ "../node_modules/gl-matrix/esm/common.js");

/**
 * 3x3 Matrix
 * @module mat3
 */

/**
 * Creates a new identity mat3
 *
 * @returns {mat3} a new 3x3 matrix
 */

function create() {
  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__["ARRAY_TYPE"](9);

  if (_common_js__WEBPACK_IMPORTED_MODULE_0__["ARRAY_TYPE"] != Float32Array) {
    out[1] = 0;
    out[2] = 0;
    out[3] = 0;
    out[5] = 0;
    out[6] = 0;
    out[7] = 0;
  }

  out[0] = 1;
  out[4] = 1;
  out[8] = 1;
  return out;
}
/**
 * Copies the upper-left 3x3 values into the given mat3.
 *
 * @param {mat3} out the receiving 3x3 matrix
 * @param {ReadonlyMat4} a   the source 4x4 matrix
 * @returns {mat3} out
 */

function fromMat4(out, a) {
  out[0] = a[0];
  out[1] = a[1];
  out[2] = a[2];
  out[3] = a[4];
  out[4] = a[5];
  out[5] = a[6];
  out[6] = a[8];
  out[7] = a[9];
  out[8] = a[10];
  return out;
}
/**
 * Creates a new mat3 initialized with values from an existing matrix
 *
 * @param {ReadonlyMat3} a matrix to clone
 * @returns {mat3} a new 3x3 matrix
 */

function clone(a) {
  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__["ARRAY_TYPE"](9);
  out[0] = a[0];
  out[1] = a[1];
  out[2] = a[2];
  out[3] = a[3];
  out[4] = a[4];
  out[5] = a[5];
  out[6] = a[6];
  out[7] = a[7];
  out[8] = a[8];
  return out;
}
/**
 * Copy the values from one mat3 to another
 *
 * @param {mat3} out the receiving matrix
 * @param {ReadonlyMat3} a the source matrix
 * @returns {mat3} out
 */

function copy(out, a) {
  out[0] = a[0];
  out[1] = a[1];
  out[2] = a[2];
  out[3] = a[3];
  out[4] = a[4];
  out[5] = a[5];
  out[6] = a[6];
  out[7] = a[7];
  out[8] = a[8];
  return out;
}
/**
 * Create a new mat3 with the given values
 *
 * @param {Number} m00 Component in column 0, row 0 position (index 0)
 * @param {Number} m01 Component in column 0, row 1 position (index 1)
 * @param {Number} m02 Component in column 0, row 2 position (index 2)
 * @param {Number} m10 Component in column 1, row 0 position (index 3)
 * @param {Number} m11 Component in column 1, row 1 position (index 4)
 * @param {Number} m12 Component in column 1, row 2 position (index 5)
 * @param {Number} m20 Component in column 2, row 0 position (index 6)
 * @param {Number} m21 Component in column 2, row 1 position (index 7)
 * @param {Number} m22 Component in column 2, row 2 position (index 8)
 * @returns {mat3} A new mat3
 */

function fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {
  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__["ARRAY_TYPE"](9);
  out[0] = m00;
  out[1] = m01;
  out[2] = m02;
  out[3] = m10;
  out[4] = m11;
  out[5] = m12;
  out[6] = m20;
  out[7] = m21;
  out[8] = m22;
  return out;
}
/**
 * Set the components of a mat3 to the given values
 *
 * @param {mat3} out the receiving matrix
 * @param {Number} m00 Component in column 0, row 0 position (index 0)
 * @param {Number} m01 Component in column 0, row 1 position (index 1)
 * @param {Number} m02 Component in column 0, row 2 position (index 2)
 * @param {Number} m10 Component in column 1, row 0 position (index 3)
 * @param {Number} m11 Component in column 1, row 1 position (index 4)
 * @param {Number} m12 Component in column 1, row 2 position (index 5)
 * @param {Number} m20 Component in column 2, row 0 position (index 6)
 * @param {Number} m21 Component in column 2, row 1 position (index 7)
 * @param {Number} m22 Component in column 2, row 2 position (index 8)
 * @returns {mat3} out
 */

function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {
  out[0] = m00;
  out[1] = m01;
  out[2] = m02;
  out[3] = m10;
  out[4] = m11;
  out[5] = m12;
  out[6] = m20;
  out[7] = m21;
  out[8] = m22;
  return out;
}
/**
 * Set a mat3 to the identity matrix
 *
 * @param {mat3} out the receiving matrix
 * @returns {mat3} out
 */

function identity(out) {
  out[0] = 1;
  out[1] = 0;
  out[2] = 0;
  out[3] = 0;
  out[4] = 1;
  out[5] = 0;
  out[6] = 0;
  out[7] = 0;
  out[8] = 1;
  return out;
}
/**
 * Transpose the values of a mat3
 *
 * @param {mat3} out the receiving matrix
 * @param {ReadonlyMat3} a the source matrix
 * @returns {mat3} out
 */

function transpose(out, a) {
  // If we are transposing ourselves we can skip a few steps but have to cache some values
  if (out === a) {
    var a01 = a[1],
        a02 = a[2],
        a12 = a[5];
    out[1] = a[3];
    out[2] = a[6];
    out[3] = a01;
    out[5] = a[7];
    out[6] = a02;
    out[7] = a12;
  } else {
    out[0] = a[0];
    out[1] = a[3];
    out[2] = a[6];
    out[3] = a[1];
    out[4] = a[4];
    out[5] = a[7];
    out[6] = a[2];
    out[7] = a[5];
    out[8] = a[8];
  }

  return out;
}
/**
 * Inverts a mat3
 *
 * @param {mat3} out the receiving matrix
 * @param {ReadonlyMat3} a the source matrix
 * @returns {mat3} out
 */

function invert(out, a) {
  var a00 = a[0],
      a01 = a[1],
      a02 = a[2];
  var a10 = a[3],
      a11 = a[4],
      a12 = a[5];
  var a20 = a[6],
      a21 = a[7],
      a22 = a[8];
  var b01 = a22 * a11 - a12 * a21;
  var b11 = -a22 * a10 + a12 * a20;
  var b21 = a21 * a10 - a11 * a20; // Calculate the determinant

  var det = a00 * b01 + a01 * b11 + a02 * b21;

  if (!det) {
    return null;
  }

  det = 1.0 / det;
  out[0] = b01 * det;
  out[1] = (-a22 * a01 + a02 * a21) * det;
  out[2] = (a12 * a01 - a02 * a11) * det;
  out[3] = b11 * det;
  out[4] = (a22 * a00 - a02 * a20) * det;
  out[5] = (-a12 * a00 + a02 * a10) * det;
  out[6] = b21 * det;
  out[7] = (-a21 * a00 + a01 * a20) * det;
  out[8] = (a11 * a00 - a01 * a10) * det;
  return out;
}
/**
 * Calculates the adjugate of a mat3
 *
 * @param {mat3} out the receiving matrix
 * @param {ReadonlyMat3} a the source matrix
 * @returns {mat3} out
 */

function adjoint(out, a) {
  var a00 = a[0],
      a01 = a[1],
      a02 = a[2];
  var a10 = a[3],
      a11 = a[4],
      a12 = a[5];
  var a20 = a[6],
      a21 = a[7],
      a22 = a[8];
  out[0] = a11 * a22 - a12 * a21;
  out[1] = a02 * a21 - a01 * a22;
  out[2] = a01 * a12 - a02 * a11;
  out[3] = a12 * a20 - a10 * a22;
  out[4] = a00 * a22 - a02 * a20;
  out[5] = a02 * a10 - a00 * a12;
  out[6] = a10 * a21 - a11 * a20;
  out[7] = a01 * a20 - a00 * a21;
  out[8] = a00 * a11 - a01 * a10;
  return out;
}
/**
 * Calculates the determinant of a mat3
 *
 * @param {ReadonlyMat3} a the source matrix
 * @returns {Number} determinant of a
 */

function determinant(a) {
  var a00 = a[0],
      a01 = a[1],
      a02 = a[2];
  var a10 = a[3],
      a11 = a[4],
      a12 = a[5];
  var a20 = a[6],
      a21 = a[7],
      a22 = a[8];
  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);
}
/**
 * Multiplies two mat3's
 *
 * @param {mat3} out the receiving matrix
 * @param {ReadonlyMat3} a the first operand
 * @param {ReadonlyMat3} b the second operand
 * @returns {mat3} out
 */

function multiply(out, a, b) {
  var a00 = a[0],
      a01 = a[1],
      a02 = a[2];
  var a10 = a[3],
      a11 = a[4],
      a12 = a[5];
  var a20 = a[6],
      a21 = a[7],
      a22 = a[8];
  var b00 = b[0],
      b01 = b[1],
      b02 = b[2];
  var b10 = b[3],
      b11 = b[4],
      b12 = b[5];
  var b20 = b[6],
      b21 = b[7],
      b22 = b[8];
  out[0] = b00 * a00 + b01 * a10 + b02 * a20;
  out[1] = b00 * a01 + b01 * a11 + b02 * a21;
  out[2] = b00 * a02 + b01 * a12 + b02 * a22;
  out[3] = b10 * a00 + b11 * a10 + b12 * a20;
  out[4] = b10 * a01 + b11 * a11 + b12 * a21;
  out[5] = b10 * a02 + b11 * a12 + b12 * a22;
  out[6] = b20 * a00 + b21 * a10 + b22 * a20;
  out[7] = b20 * a01 + b21 * a11 + b22 * a21;
  out[8] = b20 * a02 + b21 * a12 + b22 * a22;
  return out;
}
/**
 * Translate a mat3 by the given vector
 *
 * @param {mat3} out the receiving matrix
 * @param {ReadonlyMat3} a the matrix to translate
 * @param {ReadonlyVec2} v vector to translate by
 * @returns {mat3} out
 */

function translate(out, a, v) {
  var a00 = a[0],
      a01 = a[1],
      a02 = a[2],
      a10 = a[3],
      a11 = a[4],
      a12 = a[5],
      a20 = a[6],
      a21 = a[7],
      a22 = a[8],
      x = v[0],
      y = v[1];
  out[0] = a00;
  out[1] = a01;
  out[2] = a02;
  out[3] = a10;
  out[4] = a11;
  out[5] = a12;
  out[6] = x * a00 + y * a10 + a20;
  out[7] = x * a01 + y * a11 + a21;
  out[8] = x * a02 + y * a12 + a22;
  return out;
}
/**
 * Rotates a mat3 by the given angle
 *
 * @param {mat3} out the receiving matrix
 * @param {ReadonlyMat3} a the matrix to rotate
 * @param {Number} rad the angle to rotate the matrix by
 * @returns {mat3} out
 */

function rotate(out, a, rad) {
  var a00 = a[0],
      a01 = a[1],
      a02 = a[2],
      a10 = a[3],
      a11 = a[4],
      a12 = a[5],
      a20 = a[6],
      a21 = a[7],
      a22 = a[8],
      s = Math.sin(rad),
      c = Math.cos(rad);
  out[0] = c * a00 + s * a10;
  out[1] = c * a01 + s * a11;
  out[2] = c * a02 + s * a12;
  out[3] = c * a10 - s * a00;
  out[4] = c * a11 - s * a01;
  out[5] = c * a12 - s * a02;
  out[6] = a20;
  out[7] = a21;
  out[8] = a22;
  return out;
}
/**
 * Scales the mat3 by the dimensions in the given vec2
 *
 * @param {mat3} out the receiving matrix
 * @param {ReadonlyMat3} a the matrix to rotate
 * @param {ReadonlyVec2} v the vec2 to scale the matrix by
 * @returns {mat3} out
 **/

function scale(out, a, v) {
  var x = v[0],
      y = v[1];
  out[0] = x * a[0];
  out[1] = x * a[1];
  out[2] = x * a[2];
  out[3] = y * a[3];
  out[4] = y * a[4];
  out[5] = y * a[5];
  out[6] = a[6];
  out[7] = a[7];
  out[8] = a[8];
  return out;
}
/**
 * Creates a matrix from a vector translation
 * This is equivalent to (but much faster than):
 *
 *     mat3.identity(dest);
 *     mat3.translate(dest, dest, vec);
 *
 * @param {mat3} out mat3 receiving operation result
 * @param {ReadonlyVec2} v Translation vector
 * @returns {mat3} out
 */

function fromTranslation(out, v) {
  out[0] = 1;
  out[1] = 0;
  out[2] = 0;
  out[3] = 0;
  out[4] = 1;
  out[5] = 0;
  out[6] = v[0];
  out[7] = v[1];
  out[8] = 1;
  return out;
}
/**
 * Creates a matrix from a given angle
 * This is equivalent to (but much faster than):
 *
 *     mat3.identity(dest);
 *     mat3.rotate(dest, dest, rad);
 *
 * @param {mat3} out mat3 receiving operation result
 * @param {Number} rad the angle to rotate the matrix by
 * @returns {mat3} out
 */

function fromRotation(out, rad) {
  var s = Math.sin(rad),
      c = Math.cos(rad);
  out[0] = c;
  out[1] = s;
  out[2] = 0;
  out[3] = -s;
  out[4] = c;
  out[5] = 0;
  out[6] = 0;
  out[7] = 0;
  out[8] = 1;
  return out;
}
/**
 * Creates a matrix from a vector scaling
 * This is equivalent to (but much faster than):
 *
 *     mat3.identity(dest);
 *     mat3.scale(dest, dest, vec);
 *
 * @param {mat3} out mat3 receiving operation result
 * @param {ReadonlyVec2} v Scaling vector
 * @returns {mat3} out
 */

function fromScaling(out, v) {
  out[0] = v[0];
  out[1] = 0;
  out[2] = 0;
  out[3] = 0;
  out[4] = v[1];
  out[5] = 0;
  out[6] = 0;
  out[7] = 0;
  out[8] = 1;
  return out;
}
/**
 * Copies the values from a mat2d into a mat3
 *
 * @param {mat3} out the receiving matrix
 * @param {ReadonlyMat2d} a the matrix to copy
 * @returns {mat3} out
 **/

function fromMat2d(out, a) {
  out[0] = a[0];
  out[1] = a[1];
  out[2] = 0;
  out[3] = a[2];
  out[4] = a[3];
  out[5] = 0;
  out[6] = a[4];
  out[7] = a[5];
  out[8] = 1;
  return out;
}
/**
 * Calculates a 3x3 matrix from the given quaternion
 *
 * @param {mat3} out mat3 receiving operation result
 * @param {ReadonlyQuat} q Quaternion to create matrix from
 *
 * @returns {mat3} out
 */

function fromQuat(out, q) {
  var x = q[0],
      y = q[1],
      z = q[2],
      w = q[3];
  var x2 = x + x;
  var y2 = y + y;
  var z2 = z + z;
  var xx = x * x2;
  var yx = y * x2;
  var yy = y * y2;
  var zx = z * x2;
  var zy = z * y2;
  var zz = z * z2;
  var wx = w * x2;
  var wy = w * y2;
  var wz = w * z2;
  out[0] = 1 - yy - zz;
  out[3] = yx - wz;
  out[6] = zx + wy;
  out[1] = yx + wz;
  out[4] = 1 - xx - zz;
  out[7] = zy - wx;
  out[2] = zx - wy;
  out[5] = zy + wx;
  out[8] = 1 - xx - yy;
  return out;
}
/**
 * Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix
 *
 * @param {mat3} out mat3 receiving operation result
 * @param {ReadonlyMat4} a Mat4 to derive the normal matrix from
 *
 * @returns {mat3} out
 */

function normalFromMat4(out, a) {
  var a00 = a[0],
      a01 = a[1],
      a02 = a[2],
      a03 = a[3];
  var a10 = a[4],
      a11 = a[5],
      a12 = a[6],
      a13 = a[7];
  var a20 = a[8],
      a21 = a[9],
      a22 = a[10],
      a23 = a[11];
  var a30 = a[12],
      a31 = a[13],
      a32 = a[14],
      a33 = a[15];
  var b00 = a00 * a11 - a01 * a10;
  var b01 = a00 * a12 - a02 * a10;
  var b02 = a00 * a13 - a03 * a10;
  var b03 = a01 * a12 - a02 * a11;
  var b04 = a01 * a13 - a03 * a11;
  var b05 = a02 * a13 - a03 * a12;
  var b06 = a20 * a31 - a21 * a30;
  var b07 = a20 * a32 - a22 * a30;
  var b08 = a20 * a33 - a23 * a30;
  var b09 = a21 * a32 - a22 * a31;
  var b10 = a21 * a33 - a23 * a31;
  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant

  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;

  if (!det) {
    return null;
  }

  det = 1.0 / det;
  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;
  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;
  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;
  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;
  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;
  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;
  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;
  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;
  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;
  return out;
}
/**
 * Generates a 2D projection matrix with the given bounds
 *
 * @param {mat3} out mat3 frustum matrix will be written into
 * @param {number} width Width of your gl context
 * @param {number} height Height of gl context
 * @returns {mat3} out
 */

function projection(out, width, height) {
  out[0] = 2 / width;
  out[1] = 0;
  out[2] = 0;
  out[3] = 0;
  out[4] = -2 / height;
  out[5] = 0;
  out[6] = -1;
  out[7] = 1;
  out[8] = 1;
  return out;
}
/**
 * Returns a string representation of a mat3
 *
 * @param {ReadonlyMat3} a matrix to represent as a string
 * @returns {String} string representation of the matrix
 */

function str(a) {
  return "mat3(" + a[0] + ", " + a[1] + ", " + a[2] + ", " + a[3] + ", " + a[4] + ", " + a[5] + ", " + a[6] + ", " + a[7] + ", " + a[8] + ")";
}
/**
 * Returns Frobenius norm of a mat3
 *
 * @param {ReadonlyMat3} a the matrix to calculate Frobenius norm of
 * @returns {Number} Frobenius norm
 */

function frob(a) {
  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8]);
}
/**
 * Adds two mat3's
 *
 * @param {mat3} out the receiving matrix
 * @param {ReadonlyMat3} a the first operand
 * @param {ReadonlyMat3} b the second operand
 * @returns {mat3} out
 */

function add(out, a, b) {
  out[0] = a[0] + b[0];
  out[1] = a[1] + b[1];
  out[2] = a[2] + b[2];
  out[3] = a[3] + b[3];
  out[4] = a[4] + b[4];
  out[5] = a[5] + b[5];
  out[6] = a[6] + b[6];
  out[7] = a[7] + b[7];
  out[8] = a[8] + b[8];
  return out;
}
/**
 * Subtracts matrix b from matrix a
 *
 * @param {mat3} out the receiving matrix
 * @param {ReadonlyMat3} a the first operand
 * @param {ReadonlyMat3} b the second operand
 * @returns {mat3} out
 */

function subtract(out, a, b) {
  out[0] = a[0] - b[0];
  out[1] = a[1] - b[1];
  out[2] = a[2] - b[2];
  out[3] = a[3] - b[3];
  out[4] = a[4] - b[4];
  out[5] = a[5] - b[5];
  out[6] = a[6] - b[6];
  out[7] = a[7] - b[7];
  out[8] = a[8] - b[8];
  return out;
}
/**
 * Multiply each element of the matrix by a scalar.
 *
 * @param {mat3} out the receiving matrix
 * @param {ReadonlyMat3} a the matrix to scale
 * @param {Number} b amount to scale the matrix's elements by
 * @returns {mat3} out
 */

function multiplyScalar(out, a, b) {
  out[0] = a[0] * b;
  out[1] = a[1] * b;
  out[2] = a[2] * b;
  out[3] = a[3] * b;
  out[4] = a[4] * b;
  out[5] = a[5] * b;
  out[6] = a[6] * b;
  out[7] = a[7] * b;
  out[8] = a[8] * b;
  return out;
}
/**
 * Adds two mat3's after multiplying each element of the second operand by a scalar value.
 *
 * @param {mat3} out the receiving vector
 * @param {ReadonlyMat3} a the first operand
 * @param {ReadonlyMat3} b the second operand
 * @param {Number} scale the amount to scale b's elements by before adding
 * @returns {mat3} out
 */

function multiplyScalarAndAdd(out, a, b, scale) {
  out[0] = a[0] + b[0] * scale;
  out[1] = a[1] + b[1] * scale;
  out[2] = a[2] + b[2] * scale;
  out[3] = a[3] + b[3] * scale;
  out[4] = a[4] + b[4] * scale;
  out[5] = a[5] + b[5] * scale;
  out[6] = a[6] + b[6] * scale;
  out[7] = a[7] + b[7] * scale;
  out[8] = a[8] + b[8] * scale;
  return out;
}
/**
 * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)
 *
 * @param {ReadonlyMat3} a The first matrix.
 * @param {ReadonlyMat3} b The second matrix.
 * @returns {Boolean} True if the matrices are equal, false otherwise.
 */

function exactEquals(a, b) {
  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];
}
/**
 * Returns whether or not the matrices have approximately the same elements in the same position.
 *
 * @param {ReadonlyMat3} a The first matrix.
 * @param {ReadonlyMat3} b The second matrix.
 * @returns {Boolean} True if the matrices are equal, false otherwise.
 */

function equals(a, b) {
  var a0 = a[0],
      a1 = a[1],
      a2 = a[2],
      a3 = a[3],
      a4 = a[4],
      a5 = a[5],
      a6 = a[6],
      a7 = a[7],
      a8 = a[8];
  var b0 = b[0],
      b1 = b[1],
      b2 = b[2],
      b3 = b[3],
      b4 = b[4],
      b5 = b[5],
      b6 = b[6],
      b7 = b[7],
      b8 = b[8];
  return Math.abs(a0 - b0) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a8), Math.abs(b8));
}
/**
 * Alias for {@link mat3.multiply}
 * @function
 */

var mul = multiply;
/**
 * Alias for {@link mat3.subtract}
 * @function
 */

var sub = subtract;

/***/ }),

/***/ "../node_modules/gl-matrix/esm/mat4.js":
/*!*********************************************!*\
  !*** ../node_modules/gl-matrix/esm/mat4.js ***!
  \*********************************************/
/*! exports provided: create, clone, copy, fromValues, set, identity, transpose, invert, adjoint, determinant, multiply, translate, scale, rotate, rotateX, rotateY, rotateZ, fromTranslation, fromScaling, fromRotation, fromXRotation, fromYRotation, fromZRotation, fromRotationTranslation, fromQuat2, getTranslation, getScaling, getRotation, fromRotationTranslationScale, fromRotationTranslationScaleOrigin, fromQuat, frustum, perspectiveNO, perspective, perspectiveZO, perspectiveFromFieldOfView, orthoNO, ortho, orthoZO, lookAt, targetTo, str, frob, add, subtract, multiplyScalar, multiplyScalarAndAdd, exactEquals, equals, mul, sub */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "create", function() { return create; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "clone", function() { return clone; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "copy", function() { return copy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromValues", function() { return fromValues; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "set", function() { return set; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "identity", function() { return identity; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "transpose", function() { return transpose; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "invert", function() { return invert; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "adjoint", function() { return adjoint; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "determinant", function() { return determinant; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "multiply", function() { return multiply; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "translate", function() { return translate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scale", function() { return scale; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rotate", function() { return rotate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rotateX", function() { return rotateX; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rotateY", function() { return rotateY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rotateZ", function() { return rotateZ; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromTranslation", function() { return fromTranslation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromScaling", function() { return fromScaling; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromRotation", function() { return fromRotation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromXRotation", function() { return fromXRotation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromYRotation", function() { return fromYRotation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromZRotation", function() { return fromZRotation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromRotationTranslation", function() { return fromRotationTranslation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromQuat2", function() { return fromQuat2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getTranslation", function() { return getTranslation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getScaling", function() { return getScaling; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getRotation", function() { return getRotation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromRotationTranslationScale", function() { return fromRotationTranslationScale; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromRotationTranslationScaleOrigin", function() { return fromRotationTranslationScaleOrigin; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromQuat", function() { return fromQuat; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "frustum", function() { return frustum; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "perspectiveNO", function() { return perspectiveNO; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "perspective", function() { return perspective; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "perspectiveZO", function() { return perspectiveZO; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "perspectiveFromFieldOfView", function() { return perspectiveFromFieldOfView; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "orthoNO", function() { return orthoNO; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ortho", function() { return ortho; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "orthoZO", function() { return orthoZO; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "lookAt", function() { return lookAt; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "targetTo", function() { return targetTo; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "str", function() { return str; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "frob", function() { return frob; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "add", function() { return add; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "subtract", function() { return subtract; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "multiplyScalar", function() { return multiplyScalar; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "multiplyScalarAndAdd", function() { return multiplyScalarAndAdd; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "exactEquals", function() { return exactEquals; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "equals", function() { return equals; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mul", function() { return mul; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sub", function() { return sub; });
/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ "../node_modules/gl-matrix/esm/common.js");

/**
 * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.
 * @module mat4
 */

/**
 * Creates a new identity mat4
 *
 * @returns {mat4} a new 4x4 matrix
 */

function create() {
  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__["ARRAY_TYPE"](16);

  if (_common_js__WEBPACK_IMPORTED_MODULE_0__["ARRAY_TYPE"] != Float32Array) {
    out[1] = 0;
    out[2] = 0;
    out[3] = 0;
    out[4] = 0;
    out[6] = 0;
    out[7] = 0;
    out[8] = 0;
    out[9] = 0;
    out[11] = 0;
    out[12] = 0;
    out[13] = 0;
    out[14] = 0;
  }

  out[0] = 1;
  out[5] = 1;
  out[10] = 1;
  out[15] = 1;
  return out;
}
/**
 * Creates a new mat4 initialized with values from an existing matrix
 *
 * @param {ReadonlyMat4} a matrix to clone
 * @returns {mat4} a new 4x4 matrix
 */

function clone(a) {
  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__["ARRAY_TYPE"](16);
  out[0] = a[0];
  out[1] = a[1];
  out[2] = a[2];
  out[3] = a[3];
  out[4] = a[4];
  out[5] = a[5];
  out[6] = a[6];
  out[7] = a[7];
  out[8] = a[8];
  out[9] = a[9];
  out[10] = a[10];
  out[11] = a[11];
  out[12] = a[12];
  out[13] = a[13];
  out[14] = a[14];
  out[15] = a[15];
  return out;
}
/**
 * Copy the values from one mat4 to another
 *
 * @param {mat4} out the receiving matrix
 * @param {ReadonlyMat4} a the source matrix
 * @returns {mat4} out
 */

function copy(out, a) {
  out[0] = a[0];
  out[1] = a[1];
  out[2] = a[2];
  out[3] = a[3];
  out[4] = a[4];
  out[5] = a[5];
  out[6] = a[6];
  out[7] = a[7];
  out[8] = a[8];
  out[9] = a[9];
  out[10] = a[10];
  out[11] = a[11];
  out[12] = a[12];
  out[13] = a[13];
  out[14] = a[14];
  out[15] = a[15];
  return out;
}
/**
 * Create a new mat4 with the given values
 *
 * @param {Number} m00 Component in column 0, row 0 position (index 0)
 * @param {Number} m01 Component in column 0, row 1 position (index 1)
 * @param {Number} m02 Component in column 0, row 2 position (index 2)
 * @param {Number} m03 Component in column 0, row 3 position (index 3)
 * @param {Number} m10 Component in column 1, row 0 position (index 4)
 * @param {Number} m11 Component in column 1, row 1 position (index 5)
 * @param {Number} m12 Component in column 1, row 2 position (index 6)
 * @param {Number} m13 Component in column 1, row 3 position (index 7)
 * @param {Number} m20 Component in column 2, row 0 position (index 8)
 * @param {Number} m21 Component in column 2, row 1 position (index 9)
 * @param {Number} m22 Component in column 2, row 2 position (index 10)
 * @param {Number} m23 Component in column 2, row 3 position (index 11)
 * @param {Number} m30 Component in column 3, row 0 position (index 12)
 * @param {Number} m31 Component in column 3, row 1 position (index 13)
 * @param {Number} m32 Component in column 3, row 2 position (index 14)
 * @param {Number} m33 Component in column 3, row 3 position (index 15)
 * @returns {mat4} A new mat4
 */

function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {
  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__["ARRAY_TYPE"](16);
  out[0] = m00;
  out[1] = m01;
  out[2] = m02;
  out[3] = m03;
  out[4] = m10;
  out[5] = m11;
  out[6] = m12;
  out[7] = m13;
  out[8] = m20;
  out[9] = m21;
  out[10] = m22;
  out[11] = m23;
  out[12] = m30;
  out[13] = m31;
  out[14] = m32;
  out[15] = m33;
  return out;
}
/**
 * Set the components of a mat4 to the given values
 *
 * @param {mat4} out the receiving matrix
 * @param {Number} m00 Component in column 0, row 0 position (index 0)
 * @param {Number} m01 Component in column 0, row 1 position (index 1)
 * @param {Number} m02 Component in column 0, row 2 position (index 2)
 * @param {Number} m03 Component in column 0, row 3 position (index 3)
 * @param {Number} m10 Component in column 1, row 0 position (index 4)
 * @param {Number} m11 Component in column 1, row 1 position (index 5)
 * @param {Number} m12 Component in column 1, row 2 position (index 6)
 * @param {Number} m13 Component in column 1, row 3 position (index 7)
 * @param {Number} m20 Component in column 2, row 0 position (index 8)
 * @param {Number} m21 Component in column 2, row 1 position (index 9)
 * @param {Number} m22 Component in column 2, row 2 position (index 10)
 * @param {Number} m23 Component in column 2, row 3 position (index 11)
 * @param {Number} m30 Component in column 3, row 0 position (index 12)
 * @param {Number} m31 Component in column 3, row 1 position (index 13)
 * @param {Number} m32 Component in column 3, row 2 position (index 14)
 * @param {Number} m33 Component in column 3, row 3 position (index 15)
 * @returns {mat4} out
 */

function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {
  out[0] = m00;
  out[1] = m01;
  out[2] = m02;
  out[3] = m03;
  out[4] = m10;
  out[5] = m11;
  out[6] = m12;
  out[7] = m13;
  out[8] = m20;
  out[9] = m21;
  out[10] = m22;
  out[11] = m23;
  out[12] = m30;
  out[13] = m31;
  out[14] = m32;
  out[15] = m33;
  return out;
}
/**
 * Set a mat4 to the identity matrix
 *
 * @param {mat4} out the receiving matrix
 * @returns {mat4} out
 */

function identity(out) {
  out[0] = 1;
  out[1] = 0;
  out[2] = 0;
  out[3] = 0;
  out[4] = 0;
  out[5] = 1;
  out[6] = 0;
  out[7] = 0;
  out[8] = 0;
  out[9] = 0;
  out[10] = 1;
  out[11] = 0;
  out[12] = 0;
  out[13] = 0;
  out[14] = 0;
  out[15] = 1;
  return out;
}
/**
 * Transpose the values of a mat4
 *
 * @param {mat4} out the receiving matrix
 * @param {ReadonlyMat4} a the source matrix
 * @returns {mat4} out
 */

function transpose(out, a) {
  // If we are transposing ourselves we can skip a few steps but have to cache some values
  if (out === a) {
    var a01 = a[1],
        a02 = a[2],
        a03 = a[3];
    var a12 = a[6],
        a13 = a[7];
    var a23 = a[11];
    out[1] = a[4];
    out[2] = a[8];
    out[3] = a[12];
    out[4] = a01;
    out[6] = a[9];
    out[7] = a[13];
    out[8] = a02;
    out[9] = a12;
    out[11] = a[14];
    out[12] = a03;
    out[13] = a13;
    out[14] = a23;
  } else {
    out[0] = a[0];
    out[1] = a[4];
    out[2] = a[8];
    out[3] = a[12];
    out[4] = a[1];
    out[5] = a[5];
    out[6] = a[9];
    out[7] = a[13];
    out[8] = a[2];
    out[9] = a[6];
    out[10] = a[10];
    out[11] = a[14];
    out[12] = a[3];
    out[13] = a[7];
    out[14] = a[11];
    out[15] = a[15];
  }

  return out;
}
/**
 * Inverts a mat4
 *
 * @param {mat4} out the receiving matrix
 * @param {ReadonlyMat4} a the source matrix
 * @returns {mat4} out
 */

function invert(out, a) {
  var a00 = a[0],
      a01 = a[1],
      a02 = a[2],
      a03 = a[3];
  var a10 = a[4],
      a11 = a[5],
      a12 = a[6],
      a13 = a[7];
  var a20 = a[8],
      a21 = a[9],
      a22 = a[10],
      a23 = a[11];
  var a30 = a[12],
      a31 = a[13],
      a32 = a[14],
      a33 = a[15];
  var b00 = a00 * a11 - a01 * a10;
  var b01 = a00 * a12 - a02 * a10;
  var b02 = a00 * a13 - a03 * a10;
  var b03 = a01 * a12 - a02 * a11;
  var b04 = a01 * a13 - a03 * a11;
  var b05 = a02 * a13 - a03 * a12;
  var b06 = a20 * a31 - a21 * a30;
  var b07 = a20 * a32 - a22 * a30;
  var b08 = a20 * a33 - a23 * a30;
  var b09 = a21 * a32 - a22 * a31;
  var b10 = a21 * a33 - a23 * a31;
  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant

  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;

  if (!det) {
    return null;
  }

  det = 1.0 / det;
  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;
  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;
  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;
  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;
  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;
  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;
  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;
  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;
  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;
  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;
  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;
  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;
  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;
  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;
  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;
  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;
  return out;
}
/**
 * Calculates the adjugate of a mat4
 *
 * @param {mat4} out the receiving matrix
 * @param {ReadonlyMat4} a the source matrix
 * @returns {mat4} out
 */

function adjoint(out, a) {
  var a00 = a[0],
      a01 = a[1],
      a02 = a[2],
      a03 = a[3];
  var a10 = a[4],
      a11 = a[5],
      a12 = a[6],
      a13 = a[7];
  var a20 = a[8],
      a21 = a[9],
      a22 = a[10],
      a23 = a[11];
  var a30 = a[12],
      a31 = a[13],
      a32 = a[14],
      a33 = a[15];
  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);
  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));
  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);
  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));
  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));
  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);
  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));
  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);
  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);
  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));
  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);
  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));
  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));
  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);
  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));
  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);
  return out;
}
/**
 * Calculates the determinant of a mat4
 *
 * @param {ReadonlyMat4} a the source matrix
 * @returns {Number} determinant of a
 */

function determinant(a) {
  var a00 = a[0],
      a01 = a[1],
      a02 = a[2],
      a03 = a[3];
  var a10 = a[4],
      a11 = a[5],
      a12 = a[6],
      a13 = a[7];
  var a20 = a[8],
      a21 = a[9],
      a22 = a[10],
      a23 = a[11];
  var a30 = a[12],
      a31 = a[13],
      a32 = a[14],
      a33 = a[15];
  var b00 = a00 * a11 - a01 * a10;
  var b01 = a00 * a12 - a02 * a10;
  var b02 = a00 * a13 - a03 * a10;
  var b03 = a01 * a12 - a02 * a11;
  var b04 = a01 * a13 - a03 * a11;
  var b05 = a02 * a13 - a03 * a12;
  var b06 = a20 * a31 - a21 * a30;
  var b07 = a20 * a32 - a22 * a30;
  var b08 = a20 * a33 - a23 * a30;
  var b09 = a21 * a32 - a22 * a31;
  var b10 = a21 * a33 - a23 * a31;
  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant

  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;
}
/**
 * Multiplies two mat4s
 *
 * @param {mat4} out the receiving matrix
 * @param {ReadonlyMat4} a the first operand
 * @param {ReadonlyMat4} b the second operand
 * @returns {mat4} out
 */

function multiply(out, a, b) {
  var a00 = a[0],
      a01 = a[1],
      a02 = a[2],
      a03 = a[3];
  var a10 = a[4],
      a11 = a[5],
      a12 = a[6],
      a13 = a[7];
  var a20 = a[8],
      a21 = a[9],
      a22 = a[10],
      a23 = a[11];
  var a30 = a[12],
      a31 = a[13],
      a32 = a[14],
      a33 = a[15]; // Cache only the current line of the second matrix

  var b0 = b[0],
      b1 = b[1],
      b2 = b[2],
      b3 = b[3];
  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;
  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;
  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;
  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;
  b0 = b[4];
  b1 = b[5];
  b2 = b[6];
  b3 = b[7];
  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;
  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;
  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;
  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;
  b0 = b[8];
  b1 = b[9];
  b2 = b[10];
  b3 = b[11];
  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;
  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;
  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;
  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;
  b0 = b[12];
  b1 = b[13];
  b2 = b[14];
  b3 = b[15];
  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;
  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;
  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;
  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;
  return out;
}
/**
 * Translate a mat4 by the given vector
 *
 * @param {mat4} out the receiving matrix
 * @param {ReadonlyMat4} a the matrix to translate
 * @param {ReadonlyVec3} v vector to translate by
 * @returns {mat4} out
 */

function translate(out, a, v) {
  var x = v[0],
      y = v[1],
      z = v[2];
  var a00, a01, a02, a03;
  var a10, a11, a12, a13;
  var a20, a21, a22, a23;

  if (a === out) {
    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];
    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];
    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];
    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];
  } else {
    a00 = a[0];
    a01 = a[1];
    a02 = a[2];
    a03 = a[3];
    a10 = a[4];
    a11 = a[5];
    a12 = a[6];
    a13 = a[7];
    a20 = a[8];
    a21 = a[9];
    a22 = a[10];
    a23 = a[11];
    out[0] = a00;
    out[1] = a01;
    out[2] = a02;
    out[3] = a03;
    out[4] = a10;
    out[5] = a11;
    out[6] = a12;
    out[7] = a13;
    out[8] = a20;
    out[9] = a21;
    out[10] = a22;
    out[11] = a23;
    out[12] = a00 * x + a10 * y + a20 * z + a[12];
    out[13] = a01 * x + a11 * y + a21 * z + a[13];
    out[14] = a02 * x + a12 * y + a22 * z + a[14];
    out[15] = a03 * x + a13 * y + a23 * z + a[15];
  }

  return out;
}
/**
 * Scales the mat4 by the dimensions in the given vec3 not using vectorization
 *
 * @param {mat4} out the receiving matrix
 * @param {ReadonlyMat4} a the matrix to scale
 * @param {ReadonlyVec3} v the vec3 to scale the matrix by
 * @returns {mat4} out
 **/

function scale(out, a, v) {
  var x = v[0],
      y = v[1],
      z = v[2];
  out[0] = a[0] * x;
  out[1] = a[1] * x;
  out[2] = a[2] * x;
  out[3] = a[3] * x;
  out[4] = a[4] * y;
  out[5] = a[5] * y;
  out[6] = a[6] * y;
  out[7] = a[7] * y;
  out[8] = a[8] * z;
  out[9] = a[9] * z;
  out[10] = a[10] * z;
  out[11] = a[11] * z;
  out[12] = a[12];
  out[13] = a[13];
  out[14] = a[14];
  out[15] = a[15];
  return out;
}
/**
 * Rotates a mat4 by the given angle around the given axis
 *
 * @param {mat4} out the receiving matrix
 * @param {ReadonlyMat4} a the matrix to rotate
 * @param {Number} rad the angle to rotate the matrix by
 * @param {ReadonlyVec3} axis the axis to rotate around
 * @returns {mat4} out
 */

function rotate(out, a, rad, axis) {
  var x = axis[0],
      y = axis[1],
      z = axis[2];
  var len = Math.hypot(x, y, z);
  var s, c, t;
  var a00, a01, a02, a03;
  var a10, a11, a12, a13;
  var a20, a21, a22, a23;
  var b00, b01, b02;
  var b10, b11, b12;
  var b20, b21, b22;

  if (len < _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"]) {
    return null;
  }

  len = 1 / len;
  x *= len;
  y *= len;
  z *= len;
  s = Math.sin(rad);
  c = Math.cos(rad);
  t = 1 - c;
  a00 = a[0];
  a01 = a[1];
  a02 = a[2];
  a03 = a[3];
  a10 = a[4];
  a11 = a[5];
  a12 = a[6];
  a13 = a[7];
  a20 = a[8];
  a21 = a[9];
  a22 = a[10];
  a23 = a[11]; // Construct the elements of the rotation matrix

  b00 = x * x * t + c;
  b01 = y * x * t + z * s;
  b02 = z * x * t - y * s;
  b10 = x * y * t - z * s;
  b11 = y * y * t + c;
  b12 = z * y * t + x * s;
  b20 = x * z * t + y * s;
  b21 = y * z * t - x * s;
  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication

  out[0] = a00 * b00 + a10 * b01 + a20 * b02;
  out[1] = a01 * b00 + a11 * b01 + a21 * b02;
  out[2] = a02 * b00 + a12 * b01 + a22 * b02;
  out[3] = a03 * b00 + a13 * b01 + a23 * b02;
  out[4] = a00 * b10 + a10 * b11 + a20 * b12;
  out[5] = a01 * b10 + a11 * b11 + a21 * b12;
  out[6] = a02 * b10 + a12 * b11 + a22 * b12;
  out[7] = a03 * b10 + a13 * b11 + a23 * b12;
  out[8] = a00 * b20 + a10 * b21 + a20 * b22;
  out[9] = a01 * b20 + a11 * b21 + a21 * b22;
  out[10] = a02 * b20 + a12 * b21 + a22 * b22;
  out[11] = a03 * b20 + a13 * b21 + a23 * b22;

  if (a !== out) {
    // If the source and destination differ, copy the unchanged last row
    out[12] = a[12];
    out[13] = a[13];
    out[14] = a[14];
    out[15] = a[15];
  }

  return out;
}
/**
 * Rotates a matrix by the given angle around the X axis
 *
 * @param {mat4} out the receiving matrix
 * @param {ReadonlyMat4} a the matrix to rotate
 * @param {Number} rad the angle to rotate the matrix by
 * @returns {mat4} out
 */

function rotateX(out, a, rad) {
  var s = Math.sin(rad);
  var c = Math.cos(rad);
  var a10 = a[4];
  var a11 = a[5];
  var a12 = a[6];
  var a13 = a[7];
  var a20 = a[8];
  var a21 = a[9];
  var a22 = a[10];
  var a23 = a[11];

  if (a !== out) {
    // If the source and destination differ, copy the unchanged rows
    out[0] = a[0];
    out[1] = a[1];
    out[2] = a[2];
    out[3] = a[3];
    out[12] = a[12];
    out[13] = a[13];
    out[14] = a[14];
    out[15] = a[15];
  } // Perform axis-specific matrix multiplication


  out[4] = a10 * c + a20 * s;
  out[5] = a11 * c + a21 * s;
  out[6] = a12 * c + a22 * s;
  out[7] = a13 * c + a23 * s;
  out[8] = a20 * c - a10 * s;
  out[9] = a21 * c - a11 * s;
  out[10] = a22 * c - a12 * s;
  out[11] = a23 * c - a13 * s;
  return out;
}
/**
 * Rotates a matrix by the given angle around the Y axis
 *
 * @param {mat4} out the receiving matrix
 * @param {ReadonlyMat4} a the matrix to rotate
 * @param {Number} rad the angle to rotate the matrix by
 * @returns {mat4} out
 */

function rotateY(out, a, rad) {
  var s = Math.sin(rad);
  var c = Math.cos(rad);
  var a00 = a[0];
  var a01 = a[1];
  var a02 = a[2];
  var a03 = a[3];
  var a20 = a[8];
  var a21 = a[9];
  var a22 = a[10];
  var a23 = a[11];

  if (a !== out) {
    // If the source and destination differ, copy the unchanged rows
    out[4] = a[4];
    out[5] = a[5];
    out[6] = a[6];
    out[7] = a[7];
    out[12] = a[12];
    out[13] = a[13];
    out[14] = a[14];
    out[15] = a[15];
  } // Perform axis-specific matrix multiplication


  out[0] = a00 * c - a20 * s;
  out[1] = a01 * c - a21 * s;
  out[2] = a02 * c - a22 * s;
  out[3] = a03 * c - a23 * s;
  out[8] = a00 * s + a20 * c;
  out[9] = a01 * s + a21 * c;
  out[10] = a02 * s + a22 * c;
  out[11] = a03 * s + a23 * c;
  return out;
}
/**
 * Rotates a matrix by the given angle around the Z axis
 *
 * @param {mat4} out the receiving matrix
 * @param {ReadonlyMat4} a the matrix to rotate
 * @param {Number} rad the angle to rotate the matrix by
 * @returns {mat4} out
 */

function rotateZ(out, a, rad) {
  var s = Math.sin(rad);
  var c = Math.cos(rad);
  var a00 = a[0];
  var a01 = a[1];
  var a02 = a[2];
  var a03 = a[3];
  var a10 = a[4];
  var a11 = a[5];
  var a12 = a[6];
  var a13 = a[7];

  if (a !== out) {
    // If the source and destination differ, copy the unchanged last row
    out[8] = a[8];
    out[9] = a[9];
    out[10] = a[10];
    out[11] = a[11];
    out[12] = a[12];
    out[13] = a[13];
    out[14] = a[14];
    out[15] = a[15];
  } // Perform axis-specific matrix multiplication


  out[0] = a00 * c + a10 * s;
  out[1] = a01 * c + a11 * s;
  out[2] = a02 * c + a12 * s;
  out[3] = a03 * c + a13 * s;
  out[4] = a10 * c - a00 * s;
  out[5] = a11 * c - a01 * s;
  out[6] = a12 * c - a02 * s;
  out[7] = a13 * c - a03 * s;
  return out;
}
/**
 * Creates a matrix from a vector translation
 * This is equivalent to (but much faster than):
 *
 *     mat4.identity(dest);
 *     mat4.translate(dest, dest, vec);
 *
 * @param {mat4} out mat4 receiving operation result
 * @param {ReadonlyVec3} v Translation vector
 * @returns {mat4} out
 */

function fromTranslation(out, v) {
  out[0] = 1;
  out[1] = 0;
  out[2] = 0;
  out[3] = 0;
  out[4] = 0;
  out[5] = 1;
  out[6] = 0;
  out[7] = 0;
  out[8] = 0;
  out[9] = 0;
  out[10] = 1;
  out[11] = 0;
  out[12] = v[0];
  out[13] = v[1];
  out[14] = v[2];
  out[15] = 1;
  return out;
}
/**
 * Creates a matrix from a vector scaling
 * This is equivalent to (but much faster than):
 *
 *     mat4.identity(dest);
 *     mat4.scale(dest, dest, vec);
 *
 * @param {mat4} out mat4 receiving operation result
 * @param {ReadonlyVec3} v Scaling vector
 * @returns {mat4} out
 */

function fromScaling(out, v) {
  out[0] = v[0];
  out[1] = 0;
  out[2] = 0;
  out[3] = 0;
  out[4] = 0;
  out[5] = v[1];
  out[6] = 0;
  out[7] = 0;
  out[8] = 0;
  out[9] = 0;
  out[10] = v[2];
  out[11] = 0;
  out[12] = 0;
  out[13] = 0;
  out[14] = 0;
  out[15] = 1;
  return out;
}
/**
 * Creates a matrix from a given angle around a given axis
 * This is equivalent to (but much faster than):
 *
 *     mat4.identity(dest);
 *     mat4.rotate(dest, dest, rad, axis);
 *
 * @param {mat4} out mat4 receiving operation result
 * @param {Number} rad the angle to rotate the matrix by
 * @param {ReadonlyVec3} axis the axis to rotate around
 * @returns {mat4} out
 */

function fromRotation(out, rad, axis) {
  var x = axis[0],
      y = axis[1],
      z = axis[2];
  var len = Math.hypot(x, y, z);
  var s, c, t;

  if (len < _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"]) {
    return null;
  }

  len = 1 / len;
  x *= len;
  y *= len;
  z *= len;
  s = Math.sin(rad);
  c = Math.cos(rad);
  t = 1 - c; // Perform rotation-specific matrix multiplication

  out[0] = x * x * t + c;
  out[1] = y * x * t + z * s;
  out[2] = z * x * t - y * s;
  out[3] = 0;
  out[4] = x * y * t - z * s;
  out[5] = y * y * t + c;
  out[6] = z * y * t + x * s;
  out[7] = 0;
  out[8] = x * z * t + y * s;
  out[9] = y * z * t - x * s;
  out[10] = z * z * t + c;
  out[11] = 0;
  out[12] = 0;
  out[13] = 0;
  out[14] = 0;
  out[15] = 1;
  return out;
}
/**
 * Creates a matrix from the given angle around the X axis
 * This is equivalent to (but much faster than):
 *
 *     mat4.identity(dest);
 *     mat4.rotateX(dest, dest, rad);
 *
 * @param {mat4} out mat4 receiving operation result
 * @param {Number} rad the angle to rotate the matrix by
 * @returns {mat4} out
 */

function fromXRotation(out, rad) {
  var s = Math.sin(rad);
  var c = Math.cos(rad); // Perform axis-specific matrix multiplication

  out[0] = 1;
  out[1] = 0;
  out[2] = 0;
  out[3] = 0;
  out[4] = 0;
  out[5] = c;
  out[6] = s;
  out[7] = 0;
  out[8] = 0;
  out[9] = -s;
  out[10] = c;
  out[11] = 0;
  out[12] = 0;
  out[13] = 0;
  out[14] = 0;
  out[15] = 1;
  return out;
}
/**
 * Creates a matrix from the given angle around the Y axis
 * This is equivalent to (but much faster than):
 *
 *     mat4.identity(dest);
 *     mat4.rotateY(dest, dest, rad);
 *
 * @param {mat4} out mat4 receiving operation result
 * @param {Number} rad the angle to rotate the matrix by
 * @returns {mat4} out
 */

function fromYRotation(out, rad) {
  var s = Math.sin(rad);
  var c = Math.cos(rad); // Perform axis-specific matrix multiplication

  out[0] = c;
  out[1] = 0;
  out[2] = -s;
  out[3] = 0;
  out[4] = 0;
  out[5] = 1;
  out[6] = 0;
  out[7] = 0;
  out[8] = s;
  out[9] = 0;
  out[10] = c;
  out[11] = 0;
  out[12] = 0;
  out[13] = 0;
  out[14] = 0;
  out[15] = 1;
  return out;
}
/**
 * Creates a matrix from the given angle around the Z axis
 * This is equivalent to (but much faster than):
 *
 *     mat4.identity(dest);
 *     mat4.rotateZ(dest, dest, rad);
 *
 * @param {mat4} out mat4 receiving operation result
 * @param {Number} rad the angle to rotate the matrix by
 * @returns {mat4} out
 */

function fromZRotation(out, rad) {
  var s = Math.sin(rad);
  var c = Math.cos(rad); // Perform axis-specific matrix multiplication

  out[0] = c;
  out[1] = s;
  out[2] = 0;
  out[3] = 0;
  out[4] = -s;
  out[5] = c;
  out[6] = 0;
  out[7] = 0;
  out[8] = 0;
  out[9] = 0;
  out[10] = 1;
  out[11] = 0;
  out[12] = 0;
  out[13] = 0;
  out[14] = 0;
  out[15] = 1;
  return out;
}
/**
 * Creates a matrix from a quaternion rotation and vector translation
 * This is equivalent to (but much faster than):
 *
 *     mat4.identity(dest);
 *     mat4.translate(dest, vec);
 *     let quatMat = mat4.create();
 *     quat4.toMat4(quat, quatMat);
 *     mat4.multiply(dest, quatMat);
 *
 * @param {mat4} out mat4 receiving operation result
 * @param {quat4} q Rotation quaternion
 * @param {ReadonlyVec3} v Translation vector
 * @returns {mat4} out
 */

function fromRotationTranslation(out, q, v) {
  // Quaternion math
  var x = q[0],
      y = q[1],
      z = q[2],
      w = q[3];
  var x2 = x + x;
  var y2 = y + y;
  var z2 = z + z;
  var xx = x * x2;
  var xy = x * y2;
  var xz = x * z2;
  var yy = y * y2;
  var yz = y * z2;
  var zz = z * z2;
  var wx = w * x2;
  var wy = w * y2;
  var wz = w * z2;
  out[0] = 1 - (yy + zz);
  out[1] = xy + wz;
  out[2] = xz - wy;
  out[3] = 0;
  out[4] = xy - wz;
  out[5] = 1 - (xx + zz);
  out[6] = yz + wx;
  out[7] = 0;
  out[8] = xz + wy;
  out[9] = yz - wx;
  out[10] = 1 - (xx + yy);
  out[11] = 0;
  out[12] = v[0];
  out[13] = v[1];
  out[14] = v[2];
  out[15] = 1;
  return out;
}
/**
 * Creates a new mat4 from a dual quat.
 *
 * @param {mat4} out Matrix
 * @param {ReadonlyQuat2} a Dual Quaternion
 * @returns {mat4} mat4 receiving operation result
 */

function fromQuat2(out, a) {
  var translation = new _common_js__WEBPACK_IMPORTED_MODULE_0__["ARRAY_TYPE"](3);
  var bx = -a[0],
      by = -a[1],
      bz = -a[2],
      bw = a[3],
      ax = a[4],
      ay = a[5],
      az = a[6],
      aw = a[7];
  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense

  if (magnitude > 0) {
    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;
    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;
    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;
  } else {
    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;
    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;
    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;
  }

  fromRotationTranslation(out, a, translation);
  return out;
}
/**
 * Returns the translation vector component of a transformation
 *  matrix. If a matrix is built with fromRotationTranslation,
 *  the returned vector will be the same as the translation vector
 *  originally supplied.
 * @param  {vec3} out Vector to receive translation component
 * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)
 * @return {vec3} out
 */

function getTranslation(out, mat) {
  out[0] = mat[12];
  out[1] = mat[13];
  out[2] = mat[14];
  return out;
}
/**
 * Returns the scaling factor component of a transformation
 *  matrix. If a matrix is built with fromRotationTranslationScale
 *  with a normalized Quaternion paramter, the returned vector will be
 *  the same as the scaling vector
 *  originally supplied.
 * @param  {vec3} out Vector to receive scaling factor component
 * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)
 * @return {vec3} out
 */

function getScaling(out, mat) {
  var m11 = mat[0];
  var m12 = mat[1];
  var m13 = mat[2];
  var m21 = mat[4];
  var m22 = mat[5];
  var m23 = mat[6];
  var m31 = mat[8];
  var m32 = mat[9];
  var m33 = mat[10];
  out[0] = Math.hypot(m11, m12, m13);
  out[1] = Math.hypot(m21, m22, m23);
  out[2] = Math.hypot(m31, m32, m33);
  return out;
}
/**
 * Returns a quaternion representing the rotational component
 *  of a transformation matrix. If a matrix is built with
 *  fromRotationTranslation, the returned quaternion will be the
 *  same as the quaternion originally supplied.
 * @param {quat} out Quaternion to receive the rotation component
 * @param {ReadonlyMat4} mat Matrix to be decomposed (input)
 * @return {quat} out
 */

function getRotation(out, mat) {
  var scaling = new _common_js__WEBPACK_IMPORTED_MODULE_0__["ARRAY_TYPE"](3);
  getScaling(scaling, mat);
  var is1 = 1 / scaling[0];
  var is2 = 1 / scaling[1];
  var is3 = 1 / scaling[2];
  var sm11 = mat[0] * is1;
  var sm12 = mat[1] * is2;
  var sm13 = mat[2] * is3;
  var sm21 = mat[4] * is1;
  var sm22 = mat[5] * is2;
  var sm23 = mat[6] * is3;
  var sm31 = mat[8] * is1;
  var sm32 = mat[9] * is2;
  var sm33 = mat[10] * is3;
  var trace = sm11 + sm22 + sm33;
  var S = 0;

  if (trace > 0) {
    S = Math.sqrt(trace + 1.0) * 2;
    out[3] = 0.25 * S;
    out[0] = (sm23 - sm32) / S;
    out[1] = (sm31 - sm13) / S;
    out[2] = (sm12 - sm21) / S;
  } else if (sm11 > sm22 && sm11 > sm33) {
    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;
    out[3] = (sm23 - sm32) / S;
    out[0] = 0.25 * S;
    out[1] = (sm12 + sm21) / S;
    out[2] = (sm31 + sm13) / S;
  } else if (sm22 > sm33) {
    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;
    out[3] = (sm31 - sm13) / S;
    out[0] = (sm12 + sm21) / S;
    out[1] = 0.25 * S;
    out[2] = (sm23 + sm32) / S;
  } else {
    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;
    out[3] = (sm12 - sm21) / S;
    out[0] = (sm31 + sm13) / S;
    out[1] = (sm23 + sm32) / S;
    out[2] = 0.25 * S;
  }

  return out;
}
/**
 * Creates a matrix from a quaternion rotation, vector translation and vector scale
 * This is equivalent to (but much faster than):
 *
 *     mat4.identity(dest);
 *     mat4.translate(dest, vec);
 *     let quatMat = mat4.create();
 *     quat4.toMat4(quat, quatMat);
 *     mat4.multiply(dest, quatMat);
 *     mat4.scale(dest, scale)
 *
 * @param {mat4} out mat4 receiving operation result
 * @param {quat4} q Rotation quaternion
 * @param {ReadonlyVec3} v Translation vector
 * @param {ReadonlyVec3} s Scaling vector
 * @returns {mat4} out
 */

function fromRotationTranslationScale(out, q, v, s) {
  // Quaternion math
  var x = q[0],
      y = q[1],
      z = q[2],
      w = q[3];
  var x2 = x + x;
  var y2 = y + y;
  var z2 = z + z;
  var xx = x * x2;
  var xy = x * y2;
  var xz = x * z2;
  var yy = y * y2;
  var yz = y * z2;
  var zz = z * z2;
  var wx = w * x2;
  var wy = w * y2;
  var wz = w * z2;
  var sx = s[0];
  var sy = s[1];
  var sz = s[2];
  out[0] = (1 - (yy + zz)) * sx;
  out[1] = (xy + wz) * sx;
  out[2] = (xz - wy) * sx;
  out[3] = 0;
  out[4] = (xy - wz) * sy;
  out[5] = (1 - (xx + zz)) * sy;
  out[6] = (yz + wx) * sy;
  out[7] = 0;
  out[8] = (xz + wy) * sz;
  out[9] = (yz - wx) * sz;
  out[10] = (1 - (xx + yy)) * sz;
  out[11] = 0;
  out[12] = v[0];
  out[13] = v[1];
  out[14] = v[2];
  out[15] = 1;
  return out;
}
/**
 * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin
 * This is equivalent to (but much faster than):
 *
 *     mat4.identity(dest);
 *     mat4.translate(dest, vec);
 *     mat4.translate(dest, origin);
 *     let quatMat = mat4.create();
 *     quat4.toMat4(quat, quatMat);
 *     mat4.multiply(dest, quatMat);
 *     mat4.scale(dest, scale)
 *     mat4.translate(dest, negativeOrigin);
 *
 * @param {mat4} out mat4 receiving operation result
 * @param {quat4} q Rotation quaternion
 * @param {ReadonlyVec3} v Translation vector
 * @param {ReadonlyVec3} s Scaling vector
 * @param {ReadonlyVec3} o The origin vector around which to scale and rotate
 * @returns {mat4} out
 */

function fromRotationTranslationScaleOrigin(out, q, v, s, o) {
  // Quaternion math
  var x = q[0],
      y = q[1],
      z = q[2],
      w = q[3];
  var x2 = x + x;
  var y2 = y + y;
  var z2 = z + z;
  var xx = x * x2;
  var xy = x * y2;
  var xz = x * z2;
  var yy = y * y2;
  var yz = y * z2;
  var zz = z * z2;
  var wx = w * x2;
  var wy = w * y2;
  var wz = w * z2;
  var sx = s[0];
  var sy = s[1];
  var sz = s[2];
  var ox = o[0];
  var oy = o[1];
  var oz = o[2];
  var out0 = (1 - (yy + zz)) * sx;
  var out1 = (xy + wz) * sx;
  var out2 = (xz - wy) * sx;
  var out4 = (xy - wz) * sy;
  var out5 = (1 - (xx + zz)) * sy;
  var out6 = (yz + wx) * sy;
  var out8 = (xz + wy) * sz;
  var out9 = (yz - wx) * sz;
  var out10 = (1 - (xx + yy)) * sz;
  out[0] = out0;
  out[1] = out1;
  out[2] = out2;
  out[3] = 0;
  out[4] = out4;
  out[5] = out5;
  out[6] = out6;
  out[7] = 0;
  out[8] = out8;
  out[9] = out9;
  out[10] = out10;
  out[11] = 0;
  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);
  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);
  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);
  out[15] = 1;
  return out;
}
/**
 * Calculates a 4x4 matrix from the given quaternion
 *
 * @param {mat4} out mat4 receiving operation result
 * @param {ReadonlyQuat} q Quaternion to create matrix from
 *
 * @returns {mat4} out
 */

function fromQuat(out, q) {
  var x = q[0],
      y = q[1],
      z = q[2],
      w = q[3];
  var x2 = x + x;
  var y2 = y + y;
  var z2 = z + z;
  var xx = x * x2;
  var yx = y * x2;
  var yy = y * y2;
  var zx = z * x2;
  var zy = z * y2;
  var zz = z * z2;
  var wx = w * x2;
  var wy = w * y2;
  var wz = w * z2;
  out[0] = 1 - yy - zz;
  out[1] = yx + wz;
  out[2] = zx - wy;
  out[3] = 0;
  out[4] = yx - wz;
  out[5] = 1 - xx - zz;
  out[6] = zy + wx;
  out[7] = 0;
  out[8] = zx + wy;
  out[9] = zy - wx;
  out[10] = 1 - xx - yy;
  out[11] = 0;
  out[12] = 0;
  out[13] = 0;
  out[14] = 0;
  out[15] = 1;
  return out;
}
/**
 * Generates a frustum matrix with the given bounds
 *
 * @param {mat4} out mat4 frustum matrix will be written into
 * @param {Number} left Left bound of the frustum
 * @param {Number} right Right bound of the frustum
 * @param {Number} bottom Bottom bound of the frustum
 * @param {Number} top Top bound of the frustum
 * @param {Number} near Near bound of the frustum
 * @param {Number} far Far bound of the frustum
 * @returns {mat4} out
 */

function frustum(out, left, right, bottom, top, near, far) {
  var rl = 1 / (right - left);
  var tb = 1 / (top - bottom);
  var nf = 1 / (near - far);
  out[0] = near * 2 * rl;
  out[1] = 0;
  out[2] = 0;
  out[3] = 0;
  out[4] = 0;
  out[5] = near * 2 * tb;
  out[6] = 0;
  out[7] = 0;
  out[8] = (right + left) * rl;
  out[9] = (top + bottom) * tb;
  out[10] = (far + near) * nf;
  out[11] = -1;
  out[12] = 0;
  out[13] = 0;
  out[14] = far * near * 2 * nf;
  out[15] = 0;
  return out;
}
/**
 * Generates a perspective projection matrix with the given bounds.
 * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],
 * which matches WebGL/OpenGL's clip volume.
 * Passing null/undefined/no value for far will generate infinite projection matrix.
 *
 * @param {mat4} out mat4 frustum matrix will be written into
 * @param {number} fovy Vertical field of view in radians
 * @param {number} aspect Aspect ratio. typically viewport width/height
 * @param {number} near Near bound of the frustum
 * @param {number} far Far bound of the frustum, can be null or Infinity
 * @returns {mat4} out
 */

function perspectiveNO(out, fovy, aspect, near, far) {
  var f = 1.0 / Math.tan(fovy / 2),
      nf;
  out[0] = f / aspect;
  out[1] = 0;
  out[2] = 0;
  out[3] = 0;
  out[4] = 0;
  out[5] = f;
  out[6] = 0;
  out[7] = 0;
  out[8] = 0;
  out[9] = 0;
  out[11] = -1;
  out[12] = 0;
  out[13] = 0;
  out[15] = 0;

  if (far != null && far !== Infinity) {
    nf = 1 / (near - far);
    out[10] = (far + near) * nf;
    out[14] = 2 * far * near * nf;
  } else {
    out[10] = -1;
    out[14] = -2 * near;
  }

  return out;
}
/**
 * Alias for {@link mat4.perspectiveNO}
 * @function
 */

var perspective = perspectiveNO;
/**
 * Generates a perspective projection matrix suitable for WebGPU with the given bounds.
 * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],
 * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.
 * Passing null/undefined/no value for far will generate infinite projection matrix.
 *
 * @param {mat4} out mat4 frustum matrix will be written into
 * @param {number} fovy Vertical field of view in radians
 * @param {number} aspect Aspect ratio. typically viewport width/height
 * @param {number} near Near bound of the frustum
 * @param {number} far Far bound of the frustum, can be null or Infinity
 * @returns {mat4} out
 */

function perspectiveZO(out, fovy, aspect, near, far) {
  var f = 1.0 / Math.tan(fovy / 2),
      nf;
  out[0] = f / aspect;
  out[1] = 0;
  out[2] = 0;
  out[3] = 0;
  out[4] = 0;
  out[5] = f;
  out[6] = 0;
  out[7] = 0;
  out[8] = 0;
  out[9] = 0;
  out[11] = -1;
  out[12] = 0;
  out[13] = 0;
  out[15] = 0;

  if (far != null && far !== Infinity) {
    nf = 1 / (near - far);
    out[10] = far * nf;
    out[14] = far * near * nf;
  } else {
    out[10] = -1;
    out[14] = -near;
  }

  return out;
}
/**
 * Generates a perspective projection matrix with the given field of view.
 * This is primarily useful for generating projection matrices to be used
 * with the still experiemental WebVR API.
 *
 * @param {mat4} out mat4 frustum matrix will be written into
 * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees
 * @param {number} near Near bound of the frustum
 * @param {number} far Far bound of the frustum
 * @returns {mat4} out
 */

function perspectiveFromFieldOfView(out, fov, near, far) {
  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);
  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);
  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);
  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);
  var xScale = 2.0 / (leftTan + rightTan);
  var yScale = 2.0 / (upTan + downTan);
  out[0] = xScale;
  out[1] = 0.0;
  out[2] = 0.0;
  out[3] = 0.0;
  out[4] = 0.0;
  out[5] = yScale;
  out[6] = 0.0;
  out[7] = 0.0;
  out[8] = -((leftTan - rightTan) * xScale * 0.5);
  out[9] = (upTan - downTan) * yScale * 0.5;
  out[10] = far / (near - far);
  out[11] = -1.0;
  out[12] = 0.0;
  out[13] = 0.0;
  out[14] = far * near / (near - far);
  out[15] = 0.0;
  return out;
}
/**
 * Generates a orthogonal projection matrix with the given bounds.
 * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],
 * which matches WebGL/OpenGL's clip volume.
 *
 * @param {mat4} out mat4 frustum matrix will be written into
 * @param {number} left Left bound of the frustum
 * @param {number} right Right bound of the frustum
 * @param {number} bottom Bottom bound of the frustum
 * @param {number} top Top bound of the frustum
 * @param {number} near Near bound of the frustum
 * @param {number} far Far bound of the frustum
 * @returns {mat4} out
 */

function orthoNO(out, left, right, bottom, top, near, far) {
  var lr = 1 / (left - right);
  var bt = 1 / (bottom - top);
  var nf = 1 / (near - far);
  out[0] = -2 * lr;
  out[1] = 0;
  out[2] = 0;
  out[3] = 0;
  out[4] = 0;
  out[5] = -2 * bt;
  out[6] = 0;
  out[7] = 0;
  out[8] = 0;
  out[9] = 0;
  out[10] = 2 * nf;
  out[11] = 0;
  out[12] = (left + right) * lr;
  out[13] = (top + bottom) * bt;
  out[14] = (far + near) * nf;
  out[15] = 1;
  return out;
}
/**
 * Alias for {@link mat4.orthoNO}
 * @function
 */

var ortho = orthoNO;
/**
 * Generates a orthogonal projection matrix with the given bounds.
 * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],
 * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.
 *
 * @param {mat4} out mat4 frustum matrix will be written into
 * @param {number} left Left bound of the frustum
 * @param {number} right Right bound of the frustum
 * @param {number} bottom Bottom bound of the frustum
 * @param {number} top Top bound of the frustum
 * @param {number} near Near bound of the frustum
 * @param {number} far Far bound of the frustum
 * @returns {mat4} out
 */

function orthoZO(out, left, right, bottom, top, near, far) {
  var lr = 1 / (left - right);
  var bt = 1 / (bottom - top);
  var nf = 1 / (near - far);
  out[0] = -2 * lr;
  out[1] = 0;
  out[2] = 0;
  out[3] = 0;
  out[4] = 0;
  out[5] = -2 * bt;
  out[6] = 0;
  out[7] = 0;
  out[8] = 0;
  out[9] = 0;
  out[10] = nf;
  out[11] = 0;
  out[12] = (left + right) * lr;
  out[13] = (top + bottom) * bt;
  out[14] = near * nf;
  out[15] = 1;
  return out;
}
/**
 * Generates a look-at matrix with the given eye position, focal point, and up axis.
 * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.
 *
 * @param {mat4} out mat4 frustum matrix will be written into
 * @param {ReadonlyVec3} eye Position of the viewer
 * @param {ReadonlyVec3} center Point the viewer is looking at
 * @param {ReadonlyVec3} up vec3 pointing up
 * @returns {mat4} out
 */

function lookAt(out, eye, center, up) {
  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;
  var eyex = eye[0];
  var eyey = eye[1];
  var eyez = eye[2];
  var upx = up[0];
  var upy = up[1];
  var upz = up[2];
  var centerx = center[0];
  var centery = center[1];
  var centerz = center[2];

  if (Math.abs(eyex - centerx) < _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] && Math.abs(eyey - centery) < _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] && Math.abs(eyez - centerz) < _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"]) {
    return identity(out);
  }

  z0 = eyex - centerx;
  z1 = eyey - centery;
  z2 = eyez - centerz;
  len = 1 / Math.hypot(z0, z1, z2);
  z0 *= len;
  z1 *= len;
  z2 *= len;
  x0 = upy * z2 - upz * z1;
  x1 = upz * z0 - upx * z2;
  x2 = upx * z1 - upy * z0;
  len = Math.hypot(x0, x1, x2);

  if (!len) {
    x0 = 0;
    x1 = 0;
    x2 = 0;
  } else {
    len = 1 / len;
    x0 *= len;
    x1 *= len;
    x2 *= len;
  }

  y0 = z1 * x2 - z2 * x1;
  y1 = z2 * x0 - z0 * x2;
  y2 = z0 * x1 - z1 * x0;
  len = Math.hypot(y0, y1, y2);

  if (!len) {
    y0 = 0;
    y1 = 0;
    y2 = 0;
  } else {
    len = 1 / len;
    y0 *= len;
    y1 *= len;
    y2 *= len;
  }

  out[0] = x0;
  out[1] = y0;
  out[2] = z0;
  out[3] = 0;
  out[4] = x1;
  out[5] = y1;
  out[6] = z1;
  out[7] = 0;
  out[8] = x2;
  out[9] = y2;
  out[10] = z2;
  out[11] = 0;
  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);
  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);
  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);
  out[15] = 1;
  return out;
}
/**
 * Generates a matrix that makes something look at something else.
 *
 * @param {mat4} out mat4 frustum matrix will be written into
 * @param {ReadonlyVec3} eye Position of the viewer
 * @param {ReadonlyVec3} center Point the viewer is looking at
 * @param {ReadonlyVec3} up vec3 pointing up
 * @returns {mat4} out
 */

function targetTo(out, eye, target, up) {
  var eyex = eye[0],
      eyey = eye[1],
      eyez = eye[2],
      upx = up[0],
      upy = up[1],
      upz = up[2];
  var z0 = eyex - target[0],
      z1 = eyey - target[1],
      z2 = eyez - target[2];
  var len = z0 * z0 + z1 * z1 + z2 * z2;

  if (len > 0) {
    len = 1 / Math.sqrt(len);
    z0 *= len;
    z1 *= len;
    z2 *= len;
  }

  var x0 = upy * z2 - upz * z1,
      x1 = upz * z0 - upx * z2,
      x2 = upx * z1 - upy * z0;
  len = x0 * x0 + x1 * x1 + x2 * x2;

  if (len > 0) {
    len = 1 / Math.sqrt(len);
    x0 *= len;
    x1 *= len;
    x2 *= len;
  }

  out[0] = x0;
  out[1] = x1;
  out[2] = x2;
  out[3] = 0;
  out[4] = z1 * x2 - z2 * x1;
  out[5] = z2 * x0 - z0 * x2;
  out[6] = z0 * x1 - z1 * x0;
  out[7] = 0;
  out[8] = z0;
  out[9] = z1;
  out[10] = z2;
  out[11] = 0;
  out[12] = eyex;
  out[13] = eyey;
  out[14] = eyez;
  out[15] = 1;
  return out;
}
/**
 * Returns a string representation of a mat4
 *
 * @param {ReadonlyMat4} a matrix to represent as a string
 * @returns {String} string representation of the matrix
 */

function str(a) {
  return "mat4(" + a[0] + ", " + a[1] + ", " + a[2] + ", " + a[3] + ", " + a[4] + ", " + a[5] + ", " + a[6] + ", " + a[7] + ", " + a[8] + ", " + a[9] + ", " + a[10] + ", " + a[11] + ", " + a[12] + ", " + a[13] + ", " + a[14] + ", " + a[15] + ")";
}
/**
 * Returns Frobenius norm of a mat4
 *
 * @param {ReadonlyMat4} a the matrix to calculate Frobenius norm of
 * @returns {Number} Frobenius norm
 */

function frob(a) {
  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);
}
/**
 * Adds two mat4's
 *
 * @param {mat4} out the receiving matrix
 * @param {ReadonlyMat4} a the first operand
 * @param {ReadonlyMat4} b the second operand
 * @returns {mat4} out
 */

function add(out, a, b) {
  out[0] = a[0] + b[0];
  out[1] = a[1] + b[1];
  out[2] = a[2] + b[2];
  out[3] = a[3] + b[3];
  out[4] = a[4] + b[4];
  out[5] = a[5] + b[5];
  out[6] = a[6] + b[6];
  out[7] = a[7] + b[7];
  out[8] = a[8] + b[8];
  out[9] = a[9] + b[9];
  out[10] = a[10] + b[10];
  out[11] = a[11] + b[11];
  out[12] = a[12] + b[12];
  out[13] = a[13] + b[13];
  out[14] = a[14] + b[14];
  out[15] = a[15] + b[15];
  return out;
}
/**
 * Subtracts matrix b from matrix a
 *
 * @param {mat4} out the receiving matrix
 * @param {ReadonlyMat4} a the first operand
 * @param {ReadonlyMat4} b the second operand
 * @returns {mat4} out
 */

function subtract(out, a, b) {
  out[0] = a[0] - b[0];
  out[1] = a[1] - b[1];
  out[2] = a[2] - b[2];
  out[3] = a[3] - b[3];
  out[4] = a[4] - b[4];
  out[5] = a[5] - b[5];
  out[6] = a[6] - b[6];
  out[7] = a[7] - b[7];
  out[8] = a[8] - b[8];
  out[9] = a[9] - b[9];
  out[10] = a[10] - b[10];
  out[11] = a[11] - b[11];
  out[12] = a[12] - b[12];
  out[13] = a[13] - b[13];
  out[14] = a[14] - b[14];
  out[15] = a[15] - b[15];
  return out;
}
/**
 * Multiply each element of the matrix by a scalar.
 *
 * @param {mat4} out the receiving matrix
 * @param {ReadonlyMat4} a the matrix to scale
 * @param {Number} b amount to scale the matrix's elements by
 * @returns {mat4} out
 */

function multiplyScalar(out, a, b) {
  out[0] = a[0] * b;
  out[1] = a[1] * b;
  out[2] = a[2] * b;
  out[3] = a[3] * b;
  out[4] = a[4] * b;
  out[5] = a[5] * b;
  out[6] = a[6] * b;
  out[7] = a[7] * b;
  out[8] = a[8] * b;
  out[9] = a[9] * b;
  out[10] = a[10] * b;
  out[11] = a[11] * b;
  out[12] = a[12] * b;
  out[13] = a[13] * b;
  out[14] = a[14] * b;
  out[15] = a[15] * b;
  return out;
}
/**
 * Adds two mat4's after multiplying each element of the second operand by a scalar value.
 *
 * @param {mat4} out the receiving vector
 * @param {ReadonlyMat4} a the first operand
 * @param {ReadonlyMat4} b the second operand
 * @param {Number} scale the amount to scale b's elements by before adding
 * @returns {mat4} out
 */

function multiplyScalarAndAdd(out, a, b, scale) {
  out[0] = a[0] + b[0] * scale;
  out[1] = a[1] + b[1] * scale;
  out[2] = a[2] + b[2] * scale;
  out[3] = a[3] + b[3] * scale;
  out[4] = a[4] + b[4] * scale;
  out[5] = a[5] + b[5] * scale;
  out[6] = a[6] + b[6] * scale;
  out[7] = a[7] + b[7] * scale;
  out[8] = a[8] + b[8] * scale;
  out[9] = a[9] + b[9] * scale;
  out[10] = a[10] + b[10] * scale;
  out[11] = a[11] + b[11] * scale;
  out[12] = a[12] + b[12] * scale;
  out[13] = a[13] + b[13] * scale;
  out[14] = a[14] + b[14] * scale;
  out[15] = a[15] + b[15] * scale;
  return out;
}
/**
 * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)
 *
 * @param {ReadonlyMat4} a The first matrix.
 * @param {ReadonlyMat4} b The second matrix.
 * @returns {Boolean} True if the matrices are equal, false otherwise.
 */

function exactEquals(a, b) {
  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];
}
/**
 * Returns whether or not the matrices have approximately the same elements in the same position.
 *
 * @param {ReadonlyMat4} a The first matrix.
 * @param {ReadonlyMat4} b The second matrix.
 * @returns {Boolean} True if the matrices are equal, false otherwise.
 */

function equals(a, b) {
  var a0 = a[0],
      a1 = a[1],
      a2 = a[2],
      a3 = a[3];
  var a4 = a[4],
      a5 = a[5],
      a6 = a[6],
      a7 = a[7];
  var a8 = a[8],
      a9 = a[9],
      a10 = a[10],
      a11 = a[11];
  var a12 = a[12],
      a13 = a[13],
      a14 = a[14],
      a15 = a[15];
  var b0 = b[0],
      b1 = b[1],
      b2 = b[2],
      b3 = b[3];
  var b4 = b[4],
      b5 = b[5],
      b6 = b[6],
      b7 = b[7];
  var b8 = b[8],
      b9 = b[9],
      b10 = b[10],
      b11 = b[11];
  var b12 = b[12],
      b13 = b[13],
      b14 = b[14],
      b15 = b[15];
  return Math.abs(a0 - b0) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a15), Math.abs(b15));
}
/**
 * Alias for {@link mat4.multiply}
 * @function
 */

var mul = multiply;
/**
 * Alias for {@link mat4.subtract}
 * @function
 */

var sub = subtract;

/***/ }),

/***/ "../node_modules/gl-matrix/esm/quat.js":
/*!*********************************************!*\
  !*** ../node_modules/gl-matrix/esm/quat.js ***!
  \*********************************************/
/*! exports provided: create, identity, setAxisAngle, getAxisAngle, getAngle, multiply, rotateX, rotateY, rotateZ, calculateW, exp, ln, pow, slerp, random, invert, conjugate, fromMat3, fromEuler, str, clone, fromValues, copy, set, add, mul, scale, dot, lerp, length, len, squaredLength, sqrLen, normalize, exactEquals, equals, rotationTo, sqlerp, setAxes */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "create", function() { return create; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "identity", function() { return identity; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setAxisAngle", function() { return setAxisAngle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getAxisAngle", function() { return getAxisAngle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getAngle", function() { return getAngle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "multiply", function() { return multiply; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rotateX", function() { return rotateX; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rotateY", function() { return rotateY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rotateZ", function() { return rotateZ; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "calculateW", function() { return calculateW; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "exp", function() { return exp; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ln", function() { return ln; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pow", function() { return pow; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "slerp", function() { return slerp; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "random", function() { return random; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "invert", function() { return invert; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "conjugate", function() { return conjugate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromMat3", function() { return fromMat3; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromEuler", function() { return fromEuler; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "str", function() { return str; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "clone", function() { return clone; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromValues", function() { return fromValues; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "copy", function() { return copy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "set", function() { return set; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "add", function() { return add; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mul", function() { return mul; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scale", function() { return scale; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "dot", function() { return dot; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "lerp", function() { return lerp; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "length", function() { return length; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "len", function() { return len; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "squaredLength", function() { return squaredLength; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sqrLen", function() { return sqrLen; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "normalize", function() { return normalize; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "exactEquals", function() { return exactEquals; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "equals", function() { return equals; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rotationTo", function() { return rotationTo; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sqlerp", function() { return sqlerp; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setAxes", function() { return setAxes; });
/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ "../node_modules/gl-matrix/esm/common.js");
/* harmony import */ var _mat3_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mat3.js */ "../node_modules/gl-matrix/esm/mat3.js");
/* harmony import */ var _vec3_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./vec3.js */ "../node_modules/gl-matrix/esm/vec3.js");
/* harmony import */ var _vec4_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./vec4.js */ "../node_modules/gl-matrix/esm/vec4.js");




/**
 * Quaternion
 * @module quat
 */

/**
 * Creates a new identity quat
 *
 * @returns {quat} a new quaternion
 */

function create() {
  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__["ARRAY_TYPE"](4);

  if (_common_js__WEBPACK_IMPORTED_MODULE_0__["ARRAY_TYPE"] != Float32Array) {
    out[0] = 0;
    out[1] = 0;
    out[2] = 0;
  }

  out[3] = 1;
  return out;
}
/**
 * Set a quat to the identity quaternion
 *
 * @param {quat} out the receiving quaternion
 * @returns {quat} out
 */

function identity(out) {
  out[0] = 0;
  out[1] = 0;
  out[2] = 0;
  out[3] = 1;
  return out;
}
/**
 * Sets a quat from the given angle and rotation axis,
 * then returns it.
 *
 * @param {quat} out the receiving quaternion
 * @param {ReadonlyVec3} axis the axis around which to rotate
 * @param {Number} rad the angle in radians
 * @returns {quat} out
 **/

function setAxisAngle(out, axis, rad) {
  rad = rad * 0.5;
  var s = Math.sin(rad);
  out[0] = s * axis[0];
  out[1] = s * axis[1];
  out[2] = s * axis[2];
  out[3] = Math.cos(rad);
  return out;
}
/**
 * Gets the rotation axis and angle for a given
 *  quaternion. If a quaternion is created with
 *  setAxisAngle, this method will return the same
 *  values as providied in the original parameter list
 *  OR functionally equivalent values.
 * Example: The quaternion formed by axis [0, 0, 1] and
 *  angle -90 is the same as the quaternion formed by
 *  [0, 0, 1] and 270. This method favors the latter.
 * @param  {vec3} out_axis  Vector receiving the axis of rotation
 * @param  {ReadonlyQuat} q     Quaternion to be decomposed
 * @return {Number}     Angle, in radians, of the rotation
 */

function getAxisAngle(out_axis, q) {
  var rad = Math.acos(q[3]) * 2.0;
  var s = Math.sin(rad / 2.0);

  if (s > _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"]) {
    out_axis[0] = q[0] / s;
    out_axis[1] = q[1] / s;
    out_axis[2] = q[2] / s;
  } else {
    // If s is zero, return any axis (no rotation - axis does not matter)
    out_axis[0] = 1;
    out_axis[1] = 0;
    out_axis[2] = 0;
  }

  return rad;
}
/**
 * Gets the angular distance between two unit quaternions
 *
 * @param  {ReadonlyQuat} a     Origin unit quaternion
 * @param  {ReadonlyQuat} b     Destination unit quaternion
 * @return {Number}     Angle, in radians, between the two quaternions
 */

function getAngle(a, b) {
  var dotproduct = dot(a, b);
  return Math.acos(2 * dotproduct * dotproduct - 1);
}
/**
 * Multiplies two quat's
 *
 * @param {quat} out the receiving quaternion
 * @param {ReadonlyQuat} a the first operand
 * @param {ReadonlyQuat} b the second operand
 * @returns {quat} out
 */

function multiply(out, a, b) {
  var ax = a[0],
      ay = a[1],
      az = a[2],
      aw = a[3];
  var bx = b[0],
      by = b[1],
      bz = b[2],
      bw = b[3];
  out[0] = ax * bw + aw * bx + ay * bz - az * by;
  out[1] = ay * bw + aw * by + az * bx - ax * bz;
  out[2] = az * bw + aw * bz + ax * by - ay * bx;
  out[3] = aw * bw - ax * bx - ay * by - az * bz;
  return out;
}
/**
 * Rotates a quaternion by the given angle about the X axis
 *
 * @param {quat} out quat receiving operation result
 * @param {ReadonlyQuat} a quat to rotate
 * @param {number} rad angle (in radians) to rotate
 * @returns {quat} out
 */

function rotateX(out, a, rad) {
  rad *= 0.5;
  var ax = a[0],
      ay = a[1],
      az = a[2],
      aw = a[3];
  var bx = Math.sin(rad),
      bw = Math.cos(rad);
  out[0] = ax * bw + aw * bx;
  out[1] = ay * bw + az * bx;
  out[2] = az * bw - ay * bx;
  out[3] = aw * bw - ax * bx;
  return out;
}
/**
 * Rotates a quaternion by the given angle about the Y axis
 *
 * @param {quat} out quat receiving operation result
 * @param {ReadonlyQuat} a quat to rotate
 * @param {number} rad angle (in radians) to rotate
 * @returns {quat} out
 */

function rotateY(out, a, rad) {
  rad *= 0.5;
  var ax = a[0],
      ay = a[1],
      az = a[2],
      aw = a[3];
  var by = Math.sin(rad),
      bw = Math.cos(rad);
  out[0] = ax * bw - az * by;
  out[1] = ay * bw + aw * by;
  out[2] = az * bw + ax * by;
  out[3] = aw * bw - ay * by;
  return out;
}
/**
 * Rotates a quaternion by the given angle about the Z axis
 *
 * @param {quat} out quat receiving operation result
 * @param {ReadonlyQuat} a quat to rotate
 * @param {number} rad angle (in radians) to rotate
 * @returns {quat} out
 */

function rotateZ(out, a, rad) {
  rad *= 0.5;
  var ax = a[0],
      ay = a[1],
      az = a[2],
      aw = a[3];
  var bz = Math.sin(rad),
      bw = Math.cos(rad);
  out[0] = ax * bw + ay * bz;
  out[1] = ay * bw - ax * bz;
  out[2] = az * bw + aw * bz;
  out[3] = aw * bw - az * bz;
  return out;
}
/**
 * Calculates the W component of a quat from the X, Y, and Z components.
 * Assumes that quaternion is 1 unit in length.
 * Any existing W component will be ignored.
 *
 * @param {quat} out the receiving quaternion
 * @param {ReadonlyQuat} a quat to calculate W component of
 * @returns {quat} out
 */

function calculateW(out, a) {
  var x = a[0],
      y = a[1],
      z = a[2];
  out[0] = x;
  out[1] = y;
  out[2] = z;
  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));
  return out;
}
/**
 * Calculate the exponential of a unit quaternion.
 *
 * @param {quat} out the receiving quaternion
 * @param {ReadonlyQuat} a quat to calculate the exponential of
 * @returns {quat} out
 */

function exp(out, a) {
  var x = a[0],
      y = a[1],
      z = a[2],
      w = a[3];
  var r = Math.sqrt(x * x + y * y + z * z);
  var et = Math.exp(w);
  var s = r > 0 ? et * Math.sin(r) / r : 0;
  out[0] = x * s;
  out[1] = y * s;
  out[2] = z * s;
  out[3] = et * Math.cos(r);
  return out;
}
/**
 * Calculate the natural logarithm of a unit quaternion.
 *
 * @param {quat} out the receiving quaternion
 * @param {ReadonlyQuat} a quat to calculate the exponential of
 * @returns {quat} out
 */

function ln(out, a) {
  var x = a[0],
      y = a[1],
      z = a[2],
      w = a[3];
  var r = Math.sqrt(x * x + y * y + z * z);
  var t = r > 0 ? Math.atan2(r, w) / r : 0;
  out[0] = x * t;
  out[1] = y * t;
  out[2] = z * t;
  out[3] = 0.5 * Math.log(x * x + y * y + z * z + w * w);
  return out;
}
/**
 * Calculate the scalar power of a unit quaternion.
 *
 * @param {quat} out the receiving quaternion
 * @param {ReadonlyQuat} a quat to calculate the exponential of
 * @param {Number} b amount to scale the quaternion by
 * @returns {quat} out
 */

function pow(out, a, b) {
  ln(out, a);
  scale(out, out, b);
  exp(out, out);
  return out;
}
/**
 * Performs a spherical linear interpolation between two quat
 *
 * @param {quat} out the receiving quaternion
 * @param {ReadonlyQuat} a the first operand
 * @param {ReadonlyQuat} b the second operand
 * @param {Number} t interpolation amount, in the range [0-1], between the two inputs
 * @returns {quat} out
 */

function slerp(out, a, b, t) {
  // benchmarks:
  //    http://jsperf.com/quaternion-slerp-implementations
  var ax = a[0],
      ay = a[1],
      az = a[2],
      aw = a[3];
  var bx = b[0],
      by = b[1],
      bz = b[2],
      bw = b[3];
  var omega, cosom, sinom, scale0, scale1; // calc cosine

  cosom = ax * bx + ay * by + az * bz + aw * bw; // adjust signs (if necessary)

  if (cosom < 0.0) {
    cosom = -cosom;
    bx = -bx;
    by = -by;
    bz = -bz;
    bw = -bw;
  } // calculate coefficients


  if (1.0 - cosom > _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"]) {
    // standard case (slerp)
    omega = Math.acos(cosom);
    sinom = Math.sin(omega);
    scale0 = Math.sin((1.0 - t) * omega) / sinom;
    scale1 = Math.sin(t * omega) / sinom;
  } else {
    // "from" and "to" quaternions are very close
    //  ... so we can do a linear interpolation
    scale0 = 1.0 - t;
    scale1 = t;
  } // calculate final values


  out[0] = scale0 * ax + scale1 * bx;
  out[1] = scale0 * ay + scale1 * by;
  out[2] = scale0 * az + scale1 * bz;
  out[3] = scale0 * aw + scale1 * bw;
  return out;
}
/**
 * Generates a random unit quaternion
 *
 * @param {quat} out the receiving quaternion
 * @returns {quat} out
 */

function random(out) {
  // Implementation of http://planning.cs.uiuc.edu/node198.html
  // TODO: Calling random 3 times is probably not the fastest solution
  var u1 = _common_js__WEBPACK_IMPORTED_MODULE_0__["RANDOM"]();
  var u2 = _common_js__WEBPACK_IMPORTED_MODULE_0__["RANDOM"]();
  var u3 = _common_js__WEBPACK_IMPORTED_MODULE_0__["RANDOM"]();
  var sqrt1MinusU1 = Math.sqrt(1 - u1);
  var sqrtU1 = Math.sqrt(u1);
  out[0] = sqrt1MinusU1 * Math.sin(2.0 * Math.PI * u2);
  out[1] = sqrt1MinusU1 * Math.cos(2.0 * Math.PI * u2);
  out[2] = sqrtU1 * Math.sin(2.0 * Math.PI * u3);
  out[3] = sqrtU1 * Math.cos(2.0 * Math.PI * u3);
  return out;
}
/**
 * Calculates the inverse of a quat
 *
 * @param {quat} out the receiving quaternion
 * @param {ReadonlyQuat} a quat to calculate inverse of
 * @returns {quat} out
 */

function invert(out, a) {
  var a0 = a[0],
      a1 = a[1],
      a2 = a[2],
      a3 = a[3];
  var dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;
  var invDot = dot ? 1.0 / dot : 0; // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0

  out[0] = -a0 * invDot;
  out[1] = -a1 * invDot;
  out[2] = -a2 * invDot;
  out[3] = a3 * invDot;
  return out;
}
/**
 * Calculates the conjugate of a quat
 * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.
 *
 * @param {quat} out the receiving quaternion
 * @param {ReadonlyQuat} a quat to calculate conjugate of
 * @returns {quat} out
 */

function conjugate(out, a) {
  out[0] = -a[0];
  out[1] = -a[1];
  out[2] = -a[2];
  out[3] = a[3];
  return out;
}
/**
 * Creates a quaternion from the given 3x3 rotation matrix.
 *
 * NOTE: The resultant quaternion is not normalized, so you should be sure
 * to renormalize the quaternion yourself where necessary.
 *
 * @param {quat} out the receiving quaternion
 * @param {ReadonlyMat3} m rotation matrix
 * @returns {quat} out
 * @function
 */

function fromMat3(out, m) {
  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes
  // article "Quaternion Calculus and Fast Animation".
  var fTrace = m[0] + m[4] + m[8];
  var fRoot;

  if (fTrace > 0.0) {
    // |w| > 1/2, may as well choose w > 1/2
    fRoot = Math.sqrt(fTrace + 1.0); // 2w

    out[3] = 0.5 * fRoot;
    fRoot = 0.5 / fRoot; // 1/(4w)

    out[0] = (m[5] - m[7]) * fRoot;
    out[1] = (m[6] - m[2]) * fRoot;
    out[2] = (m[1] - m[3]) * fRoot;
  } else {
    // |w| <= 1/2
    var i = 0;
    if (m[4] > m[0]) i = 1;
    if (m[8] > m[i * 3 + i]) i = 2;
    var j = (i + 1) % 3;
    var k = (i + 2) % 3;
    fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);
    out[i] = 0.5 * fRoot;
    fRoot = 0.5 / fRoot;
    out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;
    out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;
    out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;
  }

  return out;
}
/**
 * Creates a quaternion from the given euler angle x, y, z.
 *
 * @param {quat} out the receiving quaternion
 * @param {x} Angle to rotate around X axis in degrees.
 * @param {y} Angle to rotate around Y axis in degrees.
 * @param {z} Angle to rotate around Z axis in degrees.
 * @returns {quat} out
 * @function
 */

function fromEuler(out, x, y, z) {
  var halfToRad = 0.5 * Math.PI / 180.0;
  x *= halfToRad;
  y *= halfToRad;
  z *= halfToRad;
  var sx = Math.sin(x);
  var cx = Math.cos(x);
  var sy = Math.sin(y);
  var cy = Math.cos(y);
  var sz = Math.sin(z);
  var cz = Math.cos(z);
  out[0] = sx * cy * cz - cx * sy * sz;
  out[1] = cx * sy * cz + sx * cy * sz;
  out[2] = cx * cy * sz - sx * sy * cz;
  out[3] = cx * cy * cz + sx * sy * sz;
  return out;
}
/**
 * Returns a string representation of a quatenion
 *
 * @param {ReadonlyQuat} a vector to represent as a string
 * @returns {String} string representation of the vector
 */

function str(a) {
  return "quat(" + a[0] + ", " + a[1] + ", " + a[2] + ", " + a[3] + ")";
}
/**
 * Creates a new quat initialized with values from an existing quaternion
 *
 * @param {ReadonlyQuat} a quaternion to clone
 * @returns {quat} a new quaternion
 * @function
 */

var clone = _vec4_js__WEBPACK_IMPORTED_MODULE_3__["clone"];
/**
 * Creates a new quat initialized with the given values
 *
 * @param {Number} x X component
 * @param {Number} y Y component
 * @param {Number} z Z component
 * @param {Number} w W component
 * @returns {quat} a new quaternion
 * @function
 */

var fromValues = _vec4_js__WEBPACK_IMPORTED_MODULE_3__["fromValues"];
/**
 * Copy the values from one quat to another
 *
 * @param {quat} out the receiving quaternion
 * @param {ReadonlyQuat} a the source quaternion
 * @returns {quat} out
 * @function
 */

var copy = _vec4_js__WEBPACK_IMPORTED_MODULE_3__["copy"];
/**
 * Set the components of a quat to the given values
 *
 * @param {quat} out the receiving quaternion
 * @param {Number} x X component
 * @param {Number} y Y component
 * @param {Number} z Z component
 * @param {Number} w W component
 * @returns {quat} out
 * @function
 */

var set = _vec4_js__WEBPACK_IMPORTED_MODULE_3__["set"];
/**
 * Adds two quat's
 *
 * @param {quat} out the receiving quaternion
 * @param {ReadonlyQuat} a the first operand
 * @param {ReadonlyQuat} b the second operand
 * @returns {quat} out
 * @function
 */

var add = _vec4_js__WEBPACK_IMPORTED_MODULE_3__["add"];
/**
 * Alias for {@link quat.multiply}
 * @function
 */

var mul = multiply;
/**
 * Scales a quat by a scalar number
 *
 * @param {quat} out the receiving vector
 * @param {ReadonlyQuat} a the vector to scale
 * @param {Number} b amount to scale the vector by
 * @returns {quat} out
 * @function
 */

var scale = _vec4_js__WEBPACK_IMPORTED_MODULE_3__["scale"];
/**
 * Calculates the dot product of two quat's
 *
 * @param {ReadonlyQuat} a the first operand
 * @param {ReadonlyQuat} b the second operand
 * @returns {Number} dot product of a and b
 * @function
 */

var dot = _vec4_js__WEBPACK_IMPORTED_MODULE_3__["dot"];
/**
 * Performs a linear interpolation between two quat's
 *
 * @param {quat} out the receiving quaternion
 * @param {ReadonlyQuat} a the first operand
 * @param {ReadonlyQuat} b the second operand
 * @param {Number} t interpolation amount, in the range [0-1], between the two inputs
 * @returns {quat} out
 * @function
 */

var lerp = _vec4_js__WEBPACK_IMPORTED_MODULE_3__["lerp"];
/**
 * Calculates the length of a quat
 *
 * @param {ReadonlyQuat} a vector to calculate length of
 * @returns {Number} length of a
 */

var length = _vec4_js__WEBPACK_IMPORTED_MODULE_3__["length"];
/**
 * Alias for {@link quat.length}
 * @function
 */

var len = length;
/**
 * Calculates the squared length of a quat
 *
 * @param {ReadonlyQuat} a vector to calculate squared length of
 * @returns {Number} squared length of a
 * @function
 */

var squaredLength = _vec4_js__WEBPACK_IMPORTED_MODULE_3__["squaredLength"];
/**
 * Alias for {@link quat.squaredLength}
 * @function
 */

var sqrLen = squaredLength;
/**
 * Normalize a quat
 *
 * @param {quat} out the receiving quaternion
 * @param {ReadonlyQuat} a quaternion to normalize
 * @returns {quat} out
 * @function
 */

var normalize = _vec4_js__WEBPACK_IMPORTED_MODULE_3__["normalize"];
/**
 * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)
 *
 * @param {ReadonlyQuat} a The first quaternion.
 * @param {ReadonlyQuat} b The second quaternion.
 * @returns {Boolean} True if the vectors are equal, false otherwise.
 */

var exactEquals = _vec4_js__WEBPACK_IMPORTED_MODULE_3__["exactEquals"];
/**
 * Returns whether or not the quaternions have approximately the same elements in the same position.
 *
 * @param {ReadonlyQuat} a The first vector.
 * @param {ReadonlyQuat} b The second vector.
 * @returns {Boolean} True if the vectors are equal, false otherwise.
 */

var equals = _vec4_js__WEBPACK_IMPORTED_MODULE_3__["equals"];
/**
 * Sets a quaternion to represent the shortest rotation from one
 * vector to another.
 *
 * Both vectors are assumed to be unit length.
 *
 * @param {quat} out the receiving quaternion.
 * @param {ReadonlyVec3} a the initial vector
 * @param {ReadonlyVec3} b the destination vector
 * @returns {quat} out
 */

var rotationTo = function () {
  var tmpvec3 = _vec3_js__WEBPACK_IMPORTED_MODULE_2__["create"]();
  var xUnitVec3 = _vec3_js__WEBPACK_IMPORTED_MODULE_2__["fromValues"](1, 0, 0);
  var yUnitVec3 = _vec3_js__WEBPACK_IMPORTED_MODULE_2__["fromValues"](0, 1, 0);
  return function (out, a, b) {
    var dot = _vec3_js__WEBPACK_IMPORTED_MODULE_2__["dot"](a, b);

    if (dot < -0.999999) {
      _vec3_js__WEBPACK_IMPORTED_MODULE_2__["cross"](tmpvec3, xUnitVec3, a);
      if (_vec3_js__WEBPACK_IMPORTED_MODULE_2__["len"](tmpvec3) < 0.000001) _vec3_js__WEBPACK_IMPORTED_MODULE_2__["cross"](tmpvec3, yUnitVec3, a);
      _vec3_js__WEBPACK_IMPORTED_MODULE_2__["normalize"](tmpvec3, tmpvec3);
      setAxisAngle(out, tmpvec3, Math.PI);
      return out;
    } else if (dot > 0.999999) {
      out[0] = 0;
      out[1] = 0;
      out[2] = 0;
      out[3] = 1;
      return out;
    } else {
      _vec3_js__WEBPACK_IMPORTED_MODULE_2__["cross"](tmpvec3, a, b);
      out[0] = tmpvec3[0];
      out[1] = tmpvec3[1];
      out[2] = tmpvec3[2];
      out[3] = 1 + dot;
      return normalize(out, out);
    }
  };
}();
/**
 * Performs a spherical linear interpolation with two control points
 *
 * @param {quat} out the receiving quaternion
 * @param {ReadonlyQuat} a the first operand
 * @param {ReadonlyQuat} b the second operand
 * @param {ReadonlyQuat} c the third operand
 * @param {ReadonlyQuat} d the fourth operand
 * @param {Number} t interpolation amount, in the range [0-1], between the two inputs
 * @returns {quat} out
 */

var sqlerp = function () {
  var temp1 = create();
  var temp2 = create();
  return function (out, a, b, c, d, t) {
    slerp(temp1, a, d, t);
    slerp(temp2, b, c, t);
    slerp(out, temp1, temp2, 2 * t * (1 - t));
    return out;
  };
}();
/**
 * Sets the specified quaternion with values corresponding to the given
 * axes. Each axis is a vec3 and is expected to be unit length and
 * perpendicular to all other specified axes.
 *
 * @param {ReadonlyVec3} view  the vector representing the viewing direction
 * @param {ReadonlyVec3} right the vector representing the local "right" direction
 * @param {ReadonlyVec3} up    the vector representing the local "up" direction
 * @returns {quat} out
 */

var setAxes = function () {
  var matr = _mat3_js__WEBPACK_IMPORTED_MODULE_1__["create"]();
  return function (out, view, right, up) {
    matr[0] = right[0];
    matr[3] = right[1];
    matr[6] = right[2];
    matr[1] = up[0];
    matr[4] = up[1];
    matr[7] = up[2];
    matr[2] = -view[0];
    matr[5] = -view[1];
    matr[8] = -view[2];
    return normalize(out, fromMat3(out, matr));
  };
}();

/***/ }),

/***/ "../node_modules/gl-matrix/esm/quat2.js":
/*!**********************************************!*\
  !*** ../node_modules/gl-matrix/esm/quat2.js ***!
  \**********************************************/
/*! exports provided: create, clone, fromValues, fromRotationTranslationValues, fromRotationTranslation, fromTranslation, fromRotation, fromMat4, copy, identity, set, getReal, getDual, setReal, setDual, getTranslation, translate, rotateX, rotateY, rotateZ, rotateByQuatAppend, rotateByQuatPrepend, rotateAroundAxis, add, multiply, mul, scale, dot, lerp, invert, conjugate, length, len, squaredLength, sqrLen, normalize, str, exactEquals, equals */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "create", function() { return create; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "clone", function() { return clone; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromValues", function() { return fromValues; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromRotationTranslationValues", function() { return fromRotationTranslationValues; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromRotationTranslation", function() { return fromRotationTranslation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromTranslation", function() { return fromTranslation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromRotation", function() { return fromRotation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromMat4", function() { return fromMat4; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "copy", function() { return copy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "identity", function() { return identity; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "set", function() { return set; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getReal", function() { return getReal; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getDual", function() { return getDual; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setReal", function() { return setReal; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setDual", function() { return setDual; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getTranslation", function() { return getTranslation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "translate", function() { return translate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rotateX", function() { return rotateX; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rotateY", function() { return rotateY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rotateZ", function() { return rotateZ; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rotateByQuatAppend", function() { return rotateByQuatAppend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rotateByQuatPrepend", function() { return rotateByQuatPrepend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rotateAroundAxis", function() { return rotateAroundAxis; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "add", function() { return add; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "multiply", function() { return multiply; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mul", function() { return mul; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scale", function() { return scale; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "dot", function() { return dot; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "lerp", function() { return lerp; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "invert", function() { return invert; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "conjugate", function() { return conjugate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "length", function() { return length; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "len", function() { return len; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "squaredLength", function() { return squaredLength; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sqrLen", function() { return sqrLen; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "normalize", function() { return normalize; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "str", function() { return str; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "exactEquals", function() { return exactEquals; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "equals", function() { return equals; });
/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ "../node_modules/gl-matrix/esm/common.js");
/* harmony import */ var _quat_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./quat.js */ "../node_modules/gl-matrix/esm/quat.js");
/* harmony import */ var _mat4_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./mat4.js */ "../node_modules/gl-matrix/esm/mat4.js");



/**
 * Dual Quaternion<br>
 * Format: [real, dual]<br>
 * Quaternion format: XYZW<br>
 * Make sure to have normalized dual quaternions, otherwise the functions may not work as intended.<br>
 * @module quat2
 */

/**
 * Creates a new identity dual quat
 *
 * @returns {quat2} a new dual quaternion [real -> rotation, dual -> translation]
 */

function create() {
  var dq = new _common_js__WEBPACK_IMPORTED_MODULE_0__["ARRAY_TYPE"](8);

  if (_common_js__WEBPACK_IMPORTED_MODULE_0__["ARRAY_TYPE"] != Float32Array) {
    dq[0] = 0;
    dq[1] = 0;
    dq[2] = 0;
    dq[4] = 0;
    dq[5] = 0;
    dq[6] = 0;
    dq[7] = 0;
  }

  dq[3] = 1;
  return dq;
}
/**
 * Creates a new quat initialized with values from an existing quaternion
 *
 * @param {ReadonlyQuat2} a dual quaternion to clone
 * @returns {quat2} new dual quaternion
 * @function
 */

function clone(a) {
  var dq = new _common_js__WEBPACK_IMPORTED_MODULE_0__["ARRAY_TYPE"](8);
  dq[0] = a[0];
  dq[1] = a[1];
  dq[2] = a[2];
  dq[3] = a[3];
  dq[4] = a[4];
  dq[5] = a[5];
  dq[6] = a[6];
  dq[7] = a[7];
  return dq;
}
/**
 * Creates a new dual quat initialized with the given values
 *
 * @param {Number} x1 X component
 * @param {Number} y1 Y component
 * @param {Number} z1 Z component
 * @param {Number} w1 W component
 * @param {Number} x2 X component
 * @param {Number} y2 Y component
 * @param {Number} z2 Z component
 * @param {Number} w2 W component
 * @returns {quat2} new dual quaternion
 * @function
 */

function fromValues(x1, y1, z1, w1, x2, y2, z2, w2) {
  var dq = new _common_js__WEBPACK_IMPORTED_MODULE_0__["ARRAY_TYPE"](8);
  dq[0] = x1;
  dq[1] = y1;
  dq[2] = z1;
  dq[3] = w1;
  dq[4] = x2;
  dq[5] = y2;
  dq[6] = z2;
  dq[7] = w2;
  return dq;
}
/**
 * Creates a new dual quat from the given values (quat and translation)
 *
 * @param {Number} x1 X component
 * @param {Number} y1 Y component
 * @param {Number} z1 Z component
 * @param {Number} w1 W component
 * @param {Number} x2 X component (translation)
 * @param {Number} y2 Y component (translation)
 * @param {Number} z2 Z component (translation)
 * @returns {quat2} new dual quaternion
 * @function
 */

function fromRotationTranslationValues(x1, y1, z1, w1, x2, y2, z2) {
  var dq = new _common_js__WEBPACK_IMPORTED_MODULE_0__["ARRAY_TYPE"](8);
  dq[0] = x1;
  dq[1] = y1;
  dq[2] = z1;
  dq[3] = w1;
  var ax = x2 * 0.5,
      ay = y2 * 0.5,
      az = z2 * 0.5;
  dq[4] = ax * w1 + ay * z1 - az * y1;
  dq[5] = ay * w1 + az * x1 - ax * z1;
  dq[6] = az * w1 + ax * y1 - ay * x1;
  dq[7] = -ax * x1 - ay * y1 - az * z1;
  return dq;
}
/**
 * Creates a dual quat from a quaternion and a translation
 *
 * @param {ReadonlyQuat2} dual quaternion receiving operation result
 * @param {ReadonlyQuat} q a normalized quaternion
 * @param {ReadonlyVec3} t tranlation vector
 * @returns {quat2} dual quaternion receiving operation result
 * @function
 */

function fromRotationTranslation(out, q, t) {
  var ax = t[0] * 0.5,
      ay = t[1] * 0.5,
      az = t[2] * 0.5,
      bx = q[0],
      by = q[1],
      bz = q[2],
      bw = q[3];
  out[0] = bx;
  out[1] = by;
  out[2] = bz;
  out[3] = bw;
  out[4] = ax * bw + ay * bz - az * by;
  out[5] = ay * bw + az * bx - ax * bz;
  out[6] = az * bw + ax * by - ay * bx;
  out[7] = -ax * bx - ay * by - az * bz;
  return out;
}
/**
 * Creates a dual quat from a translation
 *
 * @param {ReadonlyQuat2} dual quaternion receiving operation result
 * @param {ReadonlyVec3} t translation vector
 * @returns {quat2} dual quaternion receiving operation result
 * @function
 */

function fromTranslation(out, t) {
  out[0] = 0;
  out[1] = 0;
  out[2] = 0;
  out[3] = 1;
  out[4] = t[0] * 0.5;
  out[5] = t[1] * 0.5;
  out[6] = t[2] * 0.5;
  out[7] = 0;
  return out;
}
/**
 * Creates a dual quat from a quaternion
 *
 * @param {ReadonlyQuat2} dual quaternion receiving operation result
 * @param {ReadonlyQuat} q the quaternion
 * @returns {quat2} dual quaternion receiving operation result
 * @function
 */

function fromRotation(out, q) {
  out[0] = q[0];
  out[1] = q[1];
  out[2] = q[2];
  out[3] = q[3];
  out[4] = 0;
  out[5] = 0;
  out[6] = 0;
  out[7] = 0;
  return out;
}
/**
 * Creates a new dual quat from a matrix (4x4)
 *
 * @param {quat2} out the dual quaternion
 * @param {ReadonlyMat4} a the matrix
 * @returns {quat2} dual quat receiving operation result
 * @function
 */

function fromMat4(out, a) {
  //TODO Optimize this
  var outer = _quat_js__WEBPACK_IMPORTED_MODULE_1__["create"]();
  _mat4_js__WEBPACK_IMPORTED_MODULE_2__["getRotation"](outer, a);
  var t = new _common_js__WEBPACK_IMPORTED_MODULE_0__["ARRAY_TYPE"](3);
  _mat4_js__WEBPACK_IMPORTED_MODULE_2__["getTranslation"](t, a);
  fromRotationTranslation(out, outer, t);
  return out;
}
/**
 * Copy the values from one dual quat to another
 *
 * @param {quat2} out the receiving dual quaternion
 * @param {ReadonlyQuat2} a the source dual quaternion
 * @returns {quat2} out
 * @function
 */

function copy(out, a) {
  out[0] = a[0];
  out[1] = a[1];
  out[2] = a[2];
  out[3] = a[3];
  out[4] = a[4];
  out[5] = a[5];
  out[6] = a[6];
  out[7] = a[7];
  return out;
}
/**
 * Set a dual quat to the identity dual quaternion
 *
 * @param {quat2} out the receiving quaternion
 * @returns {quat2} out
 */

function identity(out) {
  out[0] = 0;
  out[1] = 0;
  out[2] = 0;
  out[3] = 1;
  out[4] = 0;
  out[5] = 0;
  out[6] = 0;
  out[7] = 0;
  return out;
}
/**
 * Set the components of a dual quat to the given values
 *
 * @param {quat2} out the receiving quaternion
 * @param {Number} x1 X component
 * @param {Number} y1 Y component
 * @param {Number} z1 Z component
 * @param {Number} w1 W component
 * @param {Number} x2 X component
 * @param {Number} y2 Y component
 * @param {Number} z2 Z component
 * @param {Number} w2 W component
 * @returns {quat2} out
 * @function
 */

function set(out, x1, y1, z1, w1, x2, y2, z2, w2) {
  out[0] = x1;
  out[1] = y1;
  out[2] = z1;
  out[3] = w1;
  out[4] = x2;
  out[5] = y2;
  out[6] = z2;
  out[7] = w2;
  return out;
}
/**
 * Gets the real part of a dual quat
 * @param  {quat} out real part
 * @param  {ReadonlyQuat2} a Dual Quaternion
 * @return {quat} real part
 */

var getReal = _quat_js__WEBPACK_IMPORTED_MODULE_1__["copy"];
/**
 * Gets the dual part of a dual quat
 * @param  {quat} out dual part
 * @param  {ReadonlyQuat2} a Dual Quaternion
 * @return {quat} dual part
 */

function getDual(out, a) {
  out[0] = a[4];
  out[1] = a[5];
  out[2] = a[6];
  out[3] = a[7];
  return out;
}
/**
 * Set the real component of a dual quat to the given quaternion
 *
 * @param {quat2} out the receiving quaternion
 * @param {ReadonlyQuat} q a quaternion representing the real part
 * @returns {quat2} out
 * @function
 */

var setReal = _quat_js__WEBPACK_IMPORTED_MODULE_1__["copy"];
/**
 * Set the dual component of a dual quat to the given quaternion
 *
 * @param {quat2} out the receiving quaternion
 * @param {ReadonlyQuat} q a quaternion representing the dual part
 * @returns {quat2} out
 * @function
 */

function setDual(out, q) {
  out[4] = q[0];
  out[5] = q[1];
  out[6] = q[2];
  out[7] = q[3];
  return out;
}
/**
 * Gets the translation of a normalized dual quat
 * @param  {vec3} out translation
 * @param  {ReadonlyQuat2} a Dual Quaternion to be decomposed
 * @return {vec3} translation
 */

function getTranslation(out, a) {
  var ax = a[4],
      ay = a[5],
      az = a[6],
      aw = a[7],
      bx = -a[0],
      by = -a[1],
      bz = -a[2],
      bw = a[3];
  out[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;
  out[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;
  out[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;
  return out;
}
/**
 * Translates a dual quat by the given vector
 *
 * @param {quat2} out the receiving dual quaternion
 * @param {ReadonlyQuat2} a the dual quaternion to translate
 * @param {ReadonlyVec3} v vector to translate by
 * @returns {quat2} out
 */

function translate(out, a, v) {
  var ax1 = a[0],
      ay1 = a[1],
      az1 = a[2],
      aw1 = a[3],
      bx1 = v[0] * 0.5,
      by1 = v[1] * 0.5,
      bz1 = v[2] * 0.5,
      ax2 = a[4],
      ay2 = a[5],
      az2 = a[6],
      aw2 = a[7];
  out[0] = ax1;
  out[1] = ay1;
  out[2] = az1;
  out[3] = aw1;
  out[4] = aw1 * bx1 + ay1 * bz1 - az1 * by1 + ax2;
  out[5] = aw1 * by1 + az1 * bx1 - ax1 * bz1 + ay2;
  out[6] = aw1 * bz1 + ax1 * by1 - ay1 * bx1 + az2;
  out[7] = -ax1 * bx1 - ay1 * by1 - az1 * bz1 + aw2;
  return out;
}
/**
 * Rotates a dual quat around the X axis
 *
 * @param {quat2} out the receiving dual quaternion
 * @param {ReadonlyQuat2} a the dual quaternion to rotate
 * @param {number} rad how far should the rotation be
 * @returns {quat2} out
 */

function rotateX(out, a, rad) {
  var bx = -a[0],
      by = -a[1],
      bz = -a[2],
      bw = a[3],
      ax = a[4],
      ay = a[5],
      az = a[6],
      aw = a[7],
      ax1 = ax * bw + aw * bx + ay * bz - az * by,
      ay1 = ay * bw + aw * by + az * bx - ax * bz,
      az1 = az * bw + aw * bz + ax * by - ay * bx,
      aw1 = aw * bw - ax * bx - ay * by - az * bz;
  _quat_js__WEBPACK_IMPORTED_MODULE_1__["rotateX"](out, a, rad);
  bx = out[0];
  by = out[1];
  bz = out[2];
  bw = out[3];
  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;
  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;
  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;
  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;
  return out;
}
/**
 * Rotates a dual quat around the Y axis
 *
 * @param {quat2} out the receiving dual quaternion
 * @param {ReadonlyQuat2} a the dual quaternion to rotate
 * @param {number} rad how far should the rotation be
 * @returns {quat2} out
 */

function rotateY(out, a, rad) {
  var bx = -a[0],
      by = -a[1],
      bz = -a[2],
      bw = a[3],
      ax = a[4],
      ay = a[5],
      az = a[6],
      aw = a[7],
      ax1 = ax * bw + aw * bx + ay * bz - az * by,
      ay1 = ay * bw + aw * by + az * bx - ax * bz,
      az1 = az * bw + aw * bz + ax * by - ay * bx,
      aw1 = aw * bw - ax * bx - ay * by - az * bz;
  _quat_js__WEBPACK_IMPORTED_MODULE_1__["rotateY"](out, a, rad);
  bx = out[0];
  by = out[1];
  bz = out[2];
  bw = out[3];
  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;
  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;
  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;
  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;
  return out;
}
/**
 * Rotates a dual quat around the Z axis
 *
 * @param {quat2} out the receiving dual quaternion
 * @param {ReadonlyQuat2} a the dual quaternion to rotate
 * @param {number} rad how far should the rotation be
 * @returns {quat2} out
 */

function rotateZ(out, a, rad) {
  var bx = -a[0],
      by = -a[1],
      bz = -a[2],
      bw = a[3],
      ax = a[4],
      ay = a[5],
      az = a[6],
      aw = a[7],
      ax1 = ax * bw + aw * bx + ay * bz - az * by,
      ay1 = ay * bw + aw * by + az * bx - ax * bz,
      az1 = az * bw + aw * bz + ax * by - ay * bx,
      aw1 = aw * bw - ax * bx - ay * by - az * bz;
  _quat_js__WEBPACK_IMPORTED_MODULE_1__["rotateZ"](out, a, rad);
  bx = out[0];
  by = out[1];
  bz = out[2];
  bw = out[3];
  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;
  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;
  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;
  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;
  return out;
}
/**
 * Rotates a dual quat by a given quaternion (a * q)
 *
 * @param {quat2} out the receiving dual quaternion
 * @param {ReadonlyQuat2} a the dual quaternion to rotate
 * @param {ReadonlyQuat} q quaternion to rotate by
 * @returns {quat2} out
 */

function rotateByQuatAppend(out, a, q) {
  var qx = q[0],
      qy = q[1],
      qz = q[2],
      qw = q[3],
      ax = a[0],
      ay = a[1],
      az = a[2],
      aw = a[3];
  out[0] = ax * qw + aw * qx + ay * qz - az * qy;
  out[1] = ay * qw + aw * qy + az * qx - ax * qz;
  out[2] = az * qw + aw * qz + ax * qy - ay * qx;
  out[3] = aw * qw - ax * qx - ay * qy - az * qz;
  ax = a[4];
  ay = a[5];
  az = a[6];
  aw = a[7];
  out[4] = ax * qw + aw * qx + ay * qz - az * qy;
  out[5] = ay * qw + aw * qy + az * qx - ax * qz;
  out[6] = az * qw + aw * qz + ax * qy - ay * qx;
  out[7] = aw * qw - ax * qx - ay * qy - az * qz;
  return out;
}
/**
 * Rotates a dual quat by a given quaternion (q * a)
 *
 * @param {quat2} out the receiving dual quaternion
 * @param {ReadonlyQuat} q quaternion to rotate by
 * @param {ReadonlyQuat2} a the dual quaternion to rotate
 * @returns {quat2} out
 */

function rotateByQuatPrepend(out, q, a) {
  var qx = q[0],
      qy = q[1],
      qz = q[2],
      qw = q[3],
      bx = a[0],
      by = a[1],
      bz = a[2],
      bw = a[3];
  out[0] = qx * bw + qw * bx + qy * bz - qz * by;
  out[1] = qy * bw + qw * by + qz * bx - qx * bz;
  out[2] = qz * bw + qw * bz + qx * by - qy * bx;
  out[3] = qw * bw - qx * bx - qy * by - qz * bz;
  bx = a[4];
  by = a[5];
  bz = a[6];
  bw = a[7];
  out[4] = qx * bw + qw * bx + qy * bz - qz * by;
  out[5] = qy * bw + qw * by + qz * bx - qx * bz;
  out[6] = qz * bw + qw * bz + qx * by - qy * bx;
  out[7] = qw * bw - qx * bx - qy * by - qz * bz;
  return out;
}
/**
 * Rotates a dual quat around a given axis. Does the normalisation automatically
 *
 * @param {quat2} out the receiving dual quaternion
 * @param {ReadonlyQuat2} a the dual quaternion to rotate
 * @param {ReadonlyVec3} axis the axis to rotate around
 * @param {Number} rad how far the rotation should be
 * @returns {quat2} out
 */

function rotateAroundAxis(out, a, axis, rad) {
  //Special case for rad = 0
  if (Math.abs(rad) < _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"]) {
    return copy(out, a);
  }

  var axisLength = Math.hypot(axis[0], axis[1], axis[2]);
  rad = rad * 0.5;
  var s = Math.sin(rad);
  var bx = s * axis[0] / axisLength;
  var by = s * axis[1] / axisLength;
  var bz = s * axis[2] / axisLength;
  var bw = Math.cos(rad);
  var ax1 = a[0],
      ay1 = a[1],
      az1 = a[2],
      aw1 = a[3];
  out[0] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;
  out[1] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;
  out[2] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;
  out[3] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;
  var ax = a[4],
      ay = a[5],
      az = a[6],
      aw = a[7];
  out[4] = ax * bw + aw * bx + ay * bz - az * by;
  out[5] = ay * bw + aw * by + az * bx - ax * bz;
  out[6] = az * bw + aw * bz + ax * by - ay * bx;
  out[7] = aw * bw - ax * bx - ay * by - az * bz;
  return out;
}
/**
 * Adds two dual quat's
 *
 * @param {quat2} out the receiving dual quaternion
 * @param {ReadonlyQuat2} a the first operand
 * @param {ReadonlyQuat2} b the second operand
 * @returns {quat2} out
 * @function
 */

function add(out, a, b) {
  out[0] = a[0] + b[0];
  out[1] = a[1] + b[1];
  out[2] = a[2] + b[2];
  out[3] = a[3] + b[3];
  out[4] = a[4] + b[4];
  out[5] = a[5] + b[5];
  out[6] = a[6] + b[6];
  out[7] = a[7] + b[7];
  return out;
}
/**
 * Multiplies two dual quat's
 *
 * @param {quat2} out the receiving dual quaternion
 * @param {ReadonlyQuat2} a the first operand
 * @param {ReadonlyQuat2} b the second operand
 * @returns {quat2} out
 */

function multiply(out, a, b) {
  var ax0 = a[0],
      ay0 = a[1],
      az0 = a[2],
      aw0 = a[3],
      bx1 = b[4],
      by1 = b[5],
      bz1 = b[6],
      bw1 = b[7],
      ax1 = a[4],
      ay1 = a[5],
      az1 = a[6],
      aw1 = a[7],
      bx0 = b[0],
      by0 = b[1],
      bz0 = b[2],
      bw0 = b[3];
  out[0] = ax0 * bw0 + aw0 * bx0 + ay0 * bz0 - az0 * by0;
  out[1] = ay0 * bw0 + aw0 * by0 + az0 * bx0 - ax0 * bz0;
  out[2] = az0 * bw0 + aw0 * bz0 + ax0 * by0 - ay0 * bx0;
  out[3] = aw0 * bw0 - ax0 * bx0 - ay0 * by0 - az0 * bz0;
  out[4] = ax0 * bw1 + aw0 * bx1 + ay0 * bz1 - az0 * by1 + ax1 * bw0 + aw1 * bx0 + ay1 * bz0 - az1 * by0;
  out[5] = ay0 * bw1 + aw0 * by1 + az0 * bx1 - ax0 * bz1 + ay1 * bw0 + aw1 * by0 + az1 * bx0 - ax1 * bz0;
  out[6] = az0 * bw1 + aw0 * bz1 + ax0 * by1 - ay0 * bx1 + az1 * bw0 + aw1 * bz0 + ax1 * by0 - ay1 * bx0;
  out[7] = aw0 * bw1 - ax0 * bx1 - ay0 * by1 - az0 * bz1 + aw1 * bw0 - ax1 * bx0 - ay1 * by0 - az1 * bz0;
  return out;
}
/**
 * Alias for {@link quat2.multiply}
 * @function
 */

var mul = multiply;
/**
 * Scales a dual quat by a scalar number
 *
 * @param {quat2} out the receiving dual quat
 * @param {ReadonlyQuat2} a the dual quat to scale
 * @param {Number} b amount to scale the dual quat by
 * @returns {quat2} out
 * @function
 */

function scale(out, a, b) {
  out[0] = a[0] * b;
  out[1] = a[1] * b;
  out[2] = a[2] * b;
  out[3] = a[3] * b;
  out[4] = a[4] * b;
  out[5] = a[5] * b;
  out[6] = a[6] * b;
  out[7] = a[7] * b;
  return out;
}
/**
 * Calculates the dot product of two dual quat's (The dot product of the real parts)
 *
 * @param {ReadonlyQuat2} a the first operand
 * @param {ReadonlyQuat2} b the second operand
 * @returns {Number} dot product of a and b
 * @function
 */

var dot = _quat_js__WEBPACK_IMPORTED_MODULE_1__["dot"];
/**
 * Performs a linear interpolation between two dual quats's
 * NOTE: The resulting dual quaternions won't always be normalized (The error is most noticeable when t = 0.5)
 *
 * @param {quat2} out the receiving dual quat
 * @param {ReadonlyQuat2} a the first operand
 * @param {ReadonlyQuat2} b the second operand
 * @param {Number} t interpolation amount, in the range [0-1], between the two inputs
 * @returns {quat2} out
 */

function lerp(out, a, b, t) {
  var mt = 1 - t;
  if (dot(a, b) < 0) t = -t;
  out[0] = a[0] * mt + b[0] * t;
  out[1] = a[1] * mt + b[1] * t;
  out[2] = a[2] * mt + b[2] * t;
  out[3] = a[3] * mt + b[3] * t;
  out[4] = a[4] * mt + b[4] * t;
  out[5] = a[5] * mt + b[5] * t;
  out[6] = a[6] * mt + b[6] * t;
  out[7] = a[7] * mt + b[7] * t;
  return out;
}
/**
 * Calculates the inverse of a dual quat. If they are normalized, conjugate is cheaper
 *
 * @param {quat2} out the receiving dual quaternion
 * @param {ReadonlyQuat2} a dual quat to calculate inverse of
 * @returns {quat2} out
 */

function invert(out, a) {
  var sqlen = squaredLength(a);
  out[0] = -a[0] / sqlen;
  out[1] = -a[1] / sqlen;
  out[2] = -a[2] / sqlen;
  out[3] = a[3] / sqlen;
  out[4] = -a[4] / sqlen;
  out[5] = -a[5] / sqlen;
  out[6] = -a[6] / sqlen;
  out[7] = a[7] / sqlen;
  return out;
}
/**
 * Calculates the conjugate of a dual quat
 * If the dual quaternion is normalized, this function is faster than quat2.inverse and produces the same result.
 *
 * @param {quat2} out the receiving quaternion
 * @param {ReadonlyQuat2} a quat to calculate conjugate of
 * @returns {quat2} out
 */

function conjugate(out, a) {
  out[0] = -a[0];
  out[1] = -a[1];
  out[2] = -a[2];
  out[3] = a[3];
  out[4] = -a[4];
  out[5] = -a[5];
  out[6] = -a[6];
  out[7] = a[7];
  return out;
}
/**
 * Calculates the length of a dual quat
 *
 * @param {ReadonlyQuat2} a dual quat to calculate length of
 * @returns {Number} length of a
 * @function
 */

var length = _quat_js__WEBPACK_IMPORTED_MODULE_1__["length"];
/**
 * Alias for {@link quat2.length}
 * @function
 */

var len = length;
/**
 * Calculates the squared length of a dual quat
 *
 * @param {ReadonlyQuat2} a dual quat to calculate squared length of
 * @returns {Number} squared length of a
 * @function
 */

var squaredLength = _quat_js__WEBPACK_IMPORTED_MODULE_1__["squaredLength"];
/**
 * Alias for {@link quat2.squaredLength}
 * @function
 */

var sqrLen = squaredLength;
/**
 * Normalize a dual quat
 *
 * @param {quat2} out the receiving dual quaternion
 * @param {ReadonlyQuat2} a dual quaternion to normalize
 * @returns {quat2} out
 * @function
 */

function normalize(out, a) {
  var magnitude = squaredLength(a);

  if (magnitude > 0) {
    magnitude = Math.sqrt(magnitude);
    var a0 = a[0] / magnitude;
    var a1 = a[1] / magnitude;
    var a2 = a[2] / magnitude;
    var a3 = a[3] / magnitude;
    var b0 = a[4];
    var b1 = a[5];
    var b2 = a[6];
    var b3 = a[7];
    var a_dot_b = a0 * b0 + a1 * b1 + a2 * b2 + a3 * b3;
    out[0] = a0;
    out[1] = a1;
    out[2] = a2;
    out[3] = a3;
    out[4] = (b0 - a0 * a_dot_b) / magnitude;
    out[5] = (b1 - a1 * a_dot_b) / magnitude;
    out[6] = (b2 - a2 * a_dot_b) / magnitude;
    out[7] = (b3 - a3 * a_dot_b) / magnitude;
  }

  return out;
}
/**
 * Returns a string representation of a dual quatenion
 *
 * @param {ReadonlyQuat2} a dual quaternion to represent as a string
 * @returns {String} string representation of the dual quat
 */

function str(a) {
  return "quat2(" + a[0] + ", " + a[1] + ", " + a[2] + ", " + a[3] + ", " + a[4] + ", " + a[5] + ", " + a[6] + ", " + a[7] + ")";
}
/**
 * Returns whether or not the dual quaternions have exactly the same elements in the same position (when compared with ===)
 *
 * @param {ReadonlyQuat2} a the first dual quaternion.
 * @param {ReadonlyQuat2} b the second dual quaternion.
 * @returns {Boolean} true if the dual quaternions are equal, false otherwise.
 */

function exactEquals(a, b) {
  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7];
}
/**
 * Returns whether or not the dual quaternions have approximately the same elements in the same position.
 *
 * @param {ReadonlyQuat2} a the first dual quat.
 * @param {ReadonlyQuat2} b the second dual quat.
 * @returns {Boolean} true if the dual quats are equal, false otherwise.
 */

function equals(a, b) {
  var a0 = a[0],
      a1 = a[1],
      a2 = a[2],
      a3 = a[3],
      a4 = a[4],
      a5 = a[5],
      a6 = a[6],
      a7 = a[7];
  var b0 = b[0],
      b1 = b[1],
      b2 = b[2],
      b3 = b[3],
      b4 = b[4],
      b5 = b[5],
      b6 = b[6],
      b7 = b[7];
  return Math.abs(a0 - b0) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a7), Math.abs(b7));
}

/***/ }),

/***/ "../node_modules/gl-matrix/esm/vec2.js":
/*!*********************************************!*\
  !*** ../node_modules/gl-matrix/esm/vec2.js ***!
  \*********************************************/
/*! exports provided: create, clone, fromValues, copy, set, add, subtract, multiply, divide, ceil, floor, min, max, round, scale, scaleAndAdd, distance, squaredDistance, length, squaredLength, negate, inverse, normalize, dot, cross, lerp, random, transformMat2, transformMat2d, transformMat3, transformMat4, rotate, angle, zero, str, exactEquals, equals, len, sub, mul, div, dist, sqrDist, sqrLen, forEach */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "create", function() { return create; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "clone", function() { return clone; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromValues", function() { return fromValues; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "copy", function() { return copy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "set", function() { return set; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "add", function() { return add; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "subtract", function() { return subtract; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "multiply", function() { return multiply; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "divide", function() { return divide; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ceil", function() { return ceil; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "floor", function() { return floor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "min", function() { return min; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "max", function() { return max; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "round", function() { return round; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scale", function() { return scale; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scaleAndAdd", function() { return scaleAndAdd; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "distance", function() { return distance; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "squaredDistance", function() { return squaredDistance; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "length", function() { return length; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "squaredLength", function() { return squaredLength; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "negate", function() { return negate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "inverse", function() { return inverse; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "normalize", function() { return normalize; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "dot", function() { return dot; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cross", function() { return cross; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "lerp", function() { return lerp; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "random", function() { return random; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "transformMat2", function() { return transformMat2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "transformMat2d", function() { return transformMat2d; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "transformMat3", function() { return transformMat3; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "transformMat4", function() { return transformMat4; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rotate", function() { return rotate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "angle", function() { return angle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "zero", function() { return zero; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "str", function() { return str; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "exactEquals", function() { return exactEquals; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "equals", function() { return equals; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "len", function() { return len; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sub", function() { return sub; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mul", function() { return mul; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "div", function() { return div; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "dist", function() { return dist; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sqrDist", function() { return sqrDist; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sqrLen", function() { return sqrLen; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "forEach", function() { return forEach; });
/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ "../node_modules/gl-matrix/esm/common.js");

/**
 * 2 Dimensional Vector
 * @module vec2
 */

/**
 * Creates a new, empty vec2
 *
 * @returns {vec2} a new 2D vector
 */

function create() {
  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__["ARRAY_TYPE"](2);

  if (_common_js__WEBPACK_IMPORTED_MODULE_0__["ARRAY_TYPE"] != Float32Array) {
    out[0] = 0;
    out[1] = 0;
  }

  return out;
}
/**
 * Creates a new vec2 initialized with values from an existing vector
 *
 * @param {ReadonlyVec2} a vector to clone
 * @returns {vec2} a new 2D vector
 */

function clone(a) {
  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__["ARRAY_TYPE"](2);
  out[0] = a[0];
  out[1] = a[1];
  return out;
}
/**
 * Creates a new vec2 initialized with the given values
 *
 * @param {Number} x X component
 * @param {Number} y Y component
 * @returns {vec2} a new 2D vector
 */

function fromValues(x, y) {
  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__["ARRAY_TYPE"](2);
  out[0] = x;
  out[1] = y;
  return out;
}
/**
 * Copy the values from one vec2 to another
 *
 * @param {vec2} out the receiving vector
 * @param {ReadonlyVec2} a the source vector
 * @returns {vec2} out
 */

function copy(out, a) {
  out[0] = a[0];
  out[1] = a[1];
  return out;
}
/**
 * Set the components of a vec2 to the given values
 *
 * @param {vec2} out the receiving vector
 * @param {Number} x X component
 * @param {Number} y Y component
 * @returns {vec2} out
 */

function set(out, x, y) {
  out[0] = x;
  out[1] = y;
  return out;
}
/**
 * Adds two vec2's
 *
 * @param {vec2} out the receiving vector
 * @param {ReadonlyVec2} a the first operand
 * @param {ReadonlyVec2} b the second operand
 * @returns {vec2} out
 */

function add(out, a, b) {
  out[0] = a[0] + b[0];
  out[1] = a[1] + b[1];
  return out;
}
/**
 * Subtracts vector b from vector a
 *
 * @param {vec2} out the receiving vector
 * @param {ReadonlyVec2} a the first operand
 * @param {ReadonlyVec2} b the second operand
 * @returns {vec2} out
 */

function subtract(out, a, b) {
  out[0] = a[0] - b[0];
  out[1] = a[1] - b[1];
  return out;
}
/**
 * Multiplies two vec2's
 *
 * @param {vec2} out the receiving vector
 * @param {ReadonlyVec2} a the first operand
 * @param {ReadonlyVec2} b the second operand
 * @returns {vec2} out
 */

function multiply(out, a, b) {
  out[0] = a[0] * b[0];
  out[1] = a[1] * b[1];
  return out;
}
/**
 * Divides two vec2's
 *
 * @param {vec2} out the receiving vector
 * @param {ReadonlyVec2} a the first operand
 * @param {ReadonlyVec2} b the second operand
 * @returns {vec2} out
 */

function divide(out, a, b) {
  out[0] = a[0] / b[0];
  out[1] = a[1] / b[1];
  return out;
}
/**
 * Math.ceil the components of a vec2
 *
 * @param {vec2} out the receiving vector
 * @param {ReadonlyVec2} a vector to ceil
 * @returns {vec2} out
 */

function ceil(out, a) {
  out[0] = Math.ceil(a[0]);
  out[1] = Math.ceil(a[1]);
  return out;
}
/**
 * Math.floor the components of a vec2
 *
 * @param {vec2} out the receiving vector
 * @param {ReadonlyVec2} a vector to floor
 * @returns {vec2} out
 */

function floor(out, a) {
  out[0] = Math.floor(a[0]);
  out[1] = Math.floor(a[1]);
  return out;
}
/**
 * Returns the minimum of two vec2's
 *
 * @param {vec2} out the receiving vector
 * @param {ReadonlyVec2} a the first operand
 * @param {ReadonlyVec2} b the second operand
 * @returns {vec2} out
 */

function min(out, a, b) {
  out[0] = Math.min(a[0], b[0]);
  out[1] = Math.min(a[1], b[1]);
  return out;
}
/**
 * Returns the maximum of two vec2's
 *
 * @param {vec2} out the receiving vector
 * @param {ReadonlyVec2} a the first operand
 * @param {ReadonlyVec2} b the second operand
 * @returns {vec2} out
 */

function max(out, a, b) {
  out[0] = Math.max(a[0], b[0]);
  out[1] = Math.max(a[1], b[1]);
  return out;
}
/**
 * Math.round the components of a vec2
 *
 * @param {vec2} out the receiving vector
 * @param {ReadonlyVec2} a vector to round
 * @returns {vec2} out
 */

function round(out, a) {
  out[0] = Math.round(a[0]);
  out[1] = Math.round(a[1]);
  return out;
}
/**
 * Scales a vec2 by a scalar number
 *
 * @param {vec2} out the receiving vector
 * @param {ReadonlyVec2} a the vector to scale
 * @param {Number} b amount to scale the vector by
 * @returns {vec2} out
 */

function scale(out, a, b) {
  out[0] = a[0] * b;
  out[1] = a[1] * b;
  return out;
}
/**
 * Adds two vec2's after scaling the second operand by a scalar value
 *
 * @param {vec2} out the receiving vector
 * @param {ReadonlyVec2} a the first operand
 * @param {ReadonlyVec2} b the second operand
 * @param {Number} scale the amount to scale b by before adding
 * @returns {vec2} out
 */

function scaleAndAdd(out, a, b, scale) {
  out[0] = a[0] + b[0] * scale;
  out[1] = a[1] + b[1] * scale;
  return out;
}
/**
 * Calculates the euclidian distance between two vec2's
 *
 * @param {ReadonlyVec2} a the first operand
 * @param {ReadonlyVec2} b the second operand
 * @returns {Number} distance between a and b
 */

function distance(a, b) {
  var x = b[0] - a[0],
      y = b[1] - a[1];
  return Math.hypot(x, y);
}
/**
 * Calculates the squared euclidian distance between two vec2's
 *
 * @param {ReadonlyVec2} a the first operand
 * @param {ReadonlyVec2} b the second operand
 * @returns {Number} squared distance between a and b
 */

function squaredDistance(a, b) {
  var x = b[0] - a[0],
      y = b[1] - a[1];
  return x * x + y * y;
}
/**
 * Calculates the length of a vec2
 *
 * @param {ReadonlyVec2} a vector to calculate length of
 * @returns {Number} length of a
 */

function length(a) {
  var x = a[0],
      y = a[1];
  return Math.hypot(x, y);
}
/**
 * Calculates the squared length of a vec2
 *
 * @param {ReadonlyVec2} a vector to calculate squared length of
 * @returns {Number} squared length of a
 */

function squaredLength(a) {
  var x = a[0],
      y = a[1];
  return x * x + y * y;
}
/**
 * Negates the components of a vec2
 *
 * @param {vec2} out the receiving vector
 * @param {ReadonlyVec2} a vector to negate
 * @returns {vec2} out
 */

function negate(out, a) {
  out[0] = -a[0];
  out[1] = -a[1];
  return out;
}
/**
 * Returns the inverse of the components of a vec2
 *
 * @param {vec2} out the receiving vector
 * @param {ReadonlyVec2} a vector to invert
 * @returns {vec2} out
 */

function inverse(out, a) {
  out[0] = 1.0 / a[0];
  out[1] = 1.0 / a[1];
  return out;
}
/**
 * Normalize a vec2
 *
 * @param {vec2} out the receiving vector
 * @param {ReadonlyVec2} a vector to normalize
 * @returns {vec2} out
 */

function normalize(out, a) {
  var x = a[0],
      y = a[1];
  var len = x * x + y * y;

  if (len > 0) {
    //TODO: evaluate use of glm_invsqrt here?
    len = 1 / Math.sqrt(len);
  }

  out[0] = a[0] * len;
  out[1] = a[1] * len;
  return out;
}
/**
 * Calculates the dot product of two vec2's
 *
 * @param {ReadonlyVec2} a the first operand
 * @param {ReadonlyVec2} b the second operand
 * @returns {Number} dot product of a and b
 */

function dot(a, b) {
  return a[0] * b[0] + a[1] * b[1];
}
/**
 * Computes the cross product of two vec2's
 * Note that the cross product must by definition produce a 3D vector
 *
 * @param {vec3} out the receiving vector
 * @param {ReadonlyVec2} a the first operand
 * @param {ReadonlyVec2} b the second operand
 * @returns {vec3} out
 */

function cross(out, a, b) {
  var z = a[0] * b[1] - a[1] * b[0];
  out[0] = out[1] = 0;
  out[2] = z;
  return out;
}
/**
 * Performs a linear interpolation between two vec2's
 *
 * @param {vec2} out the receiving vector
 * @param {ReadonlyVec2} a the first operand
 * @param {ReadonlyVec2} b the second operand
 * @param {Number} t interpolation amount, in the range [0-1], between the two inputs
 * @returns {vec2} out
 */

function lerp(out, a, b, t) {
  var ax = a[0],
      ay = a[1];
  out[0] = ax + t * (b[0] - ax);
  out[1] = ay + t * (b[1] - ay);
  return out;
}
/**
 * Generates a random vector with the given scale
 *
 * @param {vec2} out the receiving vector
 * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned
 * @returns {vec2} out
 */

function random(out, scale) {
  scale = scale || 1.0;
  var r = _common_js__WEBPACK_IMPORTED_MODULE_0__["RANDOM"]() * 2.0 * Math.PI;
  out[0] = Math.cos(r) * scale;
  out[1] = Math.sin(r) * scale;
  return out;
}
/**
 * Transforms the vec2 with a mat2
 *
 * @param {vec2} out the receiving vector
 * @param {ReadonlyVec2} a the vector to transform
 * @param {ReadonlyMat2} m matrix to transform with
 * @returns {vec2} out
 */

function transformMat2(out, a, m) {
  var x = a[0],
      y = a[1];
  out[0] = m[0] * x + m[2] * y;
  out[1] = m[1] * x + m[3] * y;
  return out;
}
/**
 * Transforms the vec2 with a mat2d
 *
 * @param {vec2} out the receiving vector
 * @param {ReadonlyVec2} a the vector to transform
 * @param {ReadonlyMat2d} m matrix to transform with
 * @returns {vec2} out
 */

function transformMat2d(out, a, m) {
  var x = a[0],
      y = a[1];
  out[0] = m[0] * x + m[2] * y + m[4];
  out[1] = m[1] * x + m[3] * y + m[5];
  return out;
}
/**
 * Transforms the vec2 with a mat3
 * 3rd vector component is implicitly '1'
 *
 * @param {vec2} out the receiving vector
 * @param {ReadonlyVec2} a the vector to transform
 * @param {ReadonlyMat3} m matrix to transform with
 * @returns {vec2} out
 */

function transformMat3(out, a, m) {
  var x = a[0],
      y = a[1];
  out[0] = m[0] * x + m[3] * y + m[6];
  out[1] = m[1] * x + m[4] * y + m[7];
  return out;
}
/**
 * Transforms the vec2 with a mat4
 * 3rd vector component is implicitly '0'
 * 4th vector component is implicitly '1'
 *
 * @param {vec2} out the receiving vector
 * @param {ReadonlyVec2} a the vector to transform
 * @param {ReadonlyMat4} m matrix to transform with
 * @returns {vec2} out
 */

function transformMat4(out, a, m) {
  var x = a[0];
  var y = a[1];
  out[0] = m[0] * x + m[4] * y + m[12];
  out[1] = m[1] * x + m[5] * y + m[13];
  return out;
}
/**
 * Rotate a 2D vector
 * @param {vec2} out The receiving vec2
 * @param {ReadonlyVec2} a The vec2 point to rotate
 * @param {ReadonlyVec2} b The origin of the rotation
 * @param {Number} rad The angle of rotation in radians
 * @returns {vec2} out
 */

function rotate(out, a, b, rad) {
  //Translate point to the origin
  var p0 = a[0] - b[0],
      p1 = a[1] - b[1],
      sinC = Math.sin(rad),
      cosC = Math.cos(rad); //perform rotation and translate to correct position

  out[0] = p0 * cosC - p1 * sinC + b[0];
  out[1] = p0 * sinC + p1 * cosC + b[1];
  return out;
}
/**
 * Get the angle between two 2D vectors
 * @param {ReadonlyVec2} a The first operand
 * @param {ReadonlyVec2} b The second operand
 * @returns {Number} The angle in radians
 */

function angle(a, b) {
  var x1 = a[0],
      y1 = a[1],
      x2 = b[0],
      y2 = b[1],
      // mag is the product of the magnitudes of a and b
  mag = Math.sqrt(x1 * x1 + y1 * y1) * Math.sqrt(x2 * x2 + y2 * y2),
      // mag &&.. short circuits if mag == 0
  cosine = mag && (x1 * x2 + y1 * y2) / mag; // Math.min(Math.max(cosine, -1), 1) clamps the cosine between -1 and 1

  return Math.acos(Math.min(Math.max(cosine, -1), 1));
}
/**
 * Set the components of a vec2 to zero
 *
 * @param {vec2} out the receiving vector
 * @returns {vec2} out
 */

function zero(out) {
  out[0] = 0.0;
  out[1] = 0.0;
  return out;
}
/**
 * Returns a string representation of a vector
 *
 * @param {ReadonlyVec2} a vector to represent as a string
 * @returns {String} string representation of the vector
 */

function str(a) {
  return "vec2(" + a[0] + ", " + a[1] + ")";
}
/**
 * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)
 *
 * @param {ReadonlyVec2} a The first vector.
 * @param {ReadonlyVec2} b The second vector.
 * @returns {Boolean} True if the vectors are equal, false otherwise.
 */

function exactEquals(a, b) {
  return a[0] === b[0] && a[1] === b[1];
}
/**
 * Returns whether or not the vectors have approximately the same elements in the same position.
 *
 * @param {ReadonlyVec2} a The first vector.
 * @param {ReadonlyVec2} b The second vector.
 * @returns {Boolean} True if the vectors are equal, false otherwise.
 */

function equals(a, b) {
  var a0 = a[0],
      a1 = a[1];
  var b0 = b[0],
      b1 = b[1];
  return Math.abs(a0 - b0) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a1), Math.abs(b1));
}
/**
 * Alias for {@link vec2.length}
 * @function
 */

var len = length;
/**
 * Alias for {@link vec2.subtract}
 * @function
 */

var sub = subtract;
/**
 * Alias for {@link vec2.multiply}
 * @function
 */

var mul = multiply;
/**
 * Alias for {@link vec2.divide}
 * @function
 */

var div = divide;
/**
 * Alias for {@link vec2.distance}
 * @function
 */

var dist = distance;
/**
 * Alias for {@link vec2.squaredDistance}
 * @function
 */

var sqrDist = squaredDistance;
/**
 * Alias for {@link vec2.squaredLength}
 * @function
 */

var sqrLen = squaredLength;
/**
 * Perform some operation over an array of vec2s.
 *
 * @param {Array} a the array of vectors to iterate over
 * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed
 * @param {Number} offset Number of elements to skip at the beginning of the array
 * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array
 * @param {Function} fn Function to call for each vector in the array
 * @param {Object} [arg] additional argument to pass to fn
 * @returns {Array} a
 * @function
 */

var forEach = function () {
  var vec = create();
  return function (a, stride, offset, count, fn, arg) {
    var i, l;

    if (!stride) {
      stride = 2;
    }

    if (!offset) {
      offset = 0;
    }

    if (count) {
      l = Math.min(count * stride + offset, a.length);
    } else {
      l = a.length;
    }

    for (i = offset; i < l; i += stride) {
      vec[0] = a[i];
      vec[1] = a[i + 1];
      fn(vec, vec, arg);
      a[i] = vec[0];
      a[i + 1] = vec[1];
    }

    return a;
  };
}();

/***/ }),

/***/ "../node_modules/gl-matrix/esm/vec3.js":
/*!*********************************************!*\
  !*** ../node_modules/gl-matrix/esm/vec3.js ***!
  \*********************************************/
/*! exports provided: create, clone, length, fromValues, copy, set, add, subtract, multiply, divide, ceil, floor, min, max, round, scale, scaleAndAdd, distance, squaredDistance, squaredLength, negate, inverse, normalize, dot, cross, lerp, hermite, bezier, random, transformMat4, transformMat3, transformQuat, rotateX, rotateY, rotateZ, angle, zero, str, exactEquals, equals, sub, mul, div, dist, sqrDist, len, sqrLen, forEach */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "create", function() { return create; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "clone", function() { return clone; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "length", function() { return length; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromValues", function() { return fromValues; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "copy", function() { return copy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "set", function() { return set; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "add", function() { return add; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "subtract", function() { return subtract; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "multiply", function() { return multiply; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "divide", function() { return divide; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ceil", function() { return ceil; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "floor", function() { return floor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "min", function() { return min; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "max", function() { return max; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "round", function() { return round; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scale", function() { return scale; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scaleAndAdd", function() { return scaleAndAdd; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "distance", function() { return distance; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "squaredDistance", function() { return squaredDistance; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "squaredLength", function() { return squaredLength; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "negate", function() { return negate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "inverse", function() { return inverse; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "normalize", function() { return normalize; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "dot", function() { return dot; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cross", function() { return cross; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "lerp", function() { return lerp; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hermite", function() { return hermite; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bezier", function() { return bezier; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "random", function() { return random; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "transformMat4", function() { return transformMat4; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "transformMat3", function() { return transformMat3; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "transformQuat", function() { return transformQuat; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rotateX", function() { return rotateX; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rotateY", function() { return rotateY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rotateZ", function() { return rotateZ; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "angle", function() { return angle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "zero", function() { return zero; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "str", function() { return str; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "exactEquals", function() { return exactEquals; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "equals", function() { return equals; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sub", function() { return sub; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mul", function() { return mul; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "div", function() { return div; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "dist", function() { return dist; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sqrDist", function() { return sqrDist; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "len", function() { return len; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sqrLen", function() { return sqrLen; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "forEach", function() { return forEach; });
/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ "../node_modules/gl-matrix/esm/common.js");

/**
 * 3 Dimensional Vector
 * @module vec3
 */

/**
 * Creates a new, empty vec3
 *
 * @returns {vec3} a new 3D vector
 */

function create() {
  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__["ARRAY_TYPE"](3);

  if (_common_js__WEBPACK_IMPORTED_MODULE_0__["ARRAY_TYPE"] != Float32Array) {
    out[0] = 0;
    out[1] = 0;
    out[2] = 0;
  }

  return out;
}
/**
 * Creates a new vec3 initialized with values from an existing vector
 *
 * @param {ReadonlyVec3} a vector to clone
 * @returns {vec3} a new 3D vector
 */

function clone(a) {
  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__["ARRAY_TYPE"](3);
  out[0] = a[0];
  out[1] = a[1];
  out[2] = a[2];
  return out;
}
/**
 * Calculates the length of a vec3
 *
 * @param {ReadonlyVec3} a vector to calculate length of
 * @returns {Number} length of a
 */

function length(a) {
  var x = a[0];
  var y = a[1];
  var z = a[2];
  return Math.hypot(x, y, z);
}
/**
 * Creates a new vec3 initialized with the given values
 *
 * @param {Number} x X component
 * @param {Number} y Y component
 * @param {Number} z Z component
 * @returns {vec3} a new 3D vector
 */

function fromValues(x, y, z) {
  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__["ARRAY_TYPE"](3);
  out[0] = x;
  out[1] = y;
  out[2] = z;
  return out;
}
/**
 * Copy the values from one vec3 to another
 *
 * @param {vec3} out the receiving vector
 * @param {ReadonlyVec3} a the source vector
 * @returns {vec3} out
 */

function copy(out, a) {
  out[0] = a[0];
  out[1] = a[1];
  out[2] = a[2];
  return out;
}
/**
 * Set the components of a vec3 to the given values
 *
 * @param {vec3} out the receiving vector
 * @param {Number} x X component
 * @param {Number} y Y component
 * @param {Number} z Z component
 * @returns {vec3} out
 */

function set(out, x, y, z) {
  out[0] = x;
  out[1] = y;
  out[2] = z;
  return out;
}
/**
 * Adds two vec3's
 *
 * @param {vec3} out the receiving vector
 * @param {ReadonlyVec3} a the first operand
 * @param {ReadonlyVec3} b the second operand
 * @returns {vec3} out
 */

function add(out, a, b) {
  out[0] = a[0] + b[0];
  out[1] = a[1] + b[1];
  out[2] = a[2] + b[2];
  return out;
}
/**
 * Subtracts vector b from vector a
 *
 * @param {vec3} out the receiving vector
 * @param {ReadonlyVec3} a the first operand
 * @param {ReadonlyVec3} b the second operand
 * @returns {vec3} out
 */

function subtract(out, a, b) {
  out[0] = a[0] - b[0];
  out[1] = a[1] - b[1];
  out[2] = a[2] - b[2];
  return out;
}
/**
 * Multiplies two vec3's
 *
 * @param {vec3} out the receiving vector
 * @param {ReadonlyVec3} a the first operand
 * @param {ReadonlyVec3} b the second operand
 * @returns {vec3} out
 */

function multiply(out, a, b) {
  out[0] = a[0] * b[0];
  out[1] = a[1] * b[1];
  out[2] = a[2] * b[2];
  return out;
}
/**
 * Divides two vec3's
 *
 * @param {vec3} out the receiving vector
 * @param {ReadonlyVec3} a the first operand
 * @param {ReadonlyVec3} b the second operand
 * @returns {vec3} out
 */

function divide(out, a, b) {
  out[0] = a[0] / b[0];
  out[1] = a[1] / b[1];
  out[2] = a[2] / b[2];
  return out;
}
/**
 * Math.ceil the components of a vec3
 *
 * @param {vec3} out the receiving vector
 * @param {ReadonlyVec3} a vector to ceil
 * @returns {vec3} out
 */

function ceil(out, a) {
  out[0] = Math.ceil(a[0]);
  out[1] = Math.ceil(a[1]);
  out[2] = Math.ceil(a[2]);
  return out;
}
/**
 * Math.floor the components of a vec3
 *
 * @param {vec3} out the receiving vector
 * @param {ReadonlyVec3} a vector to floor
 * @returns {vec3} out
 */

function floor(out, a) {
  out[0] = Math.floor(a[0]);
  out[1] = Math.floor(a[1]);
  out[2] = Math.floor(a[2]);
  return out;
}
/**
 * Returns the minimum of two vec3's
 *
 * @param {vec3} out the receiving vector
 * @param {ReadonlyVec3} a the first operand
 * @param {ReadonlyVec3} b the second operand
 * @returns {vec3} out
 */

function min(out, a, b) {
  out[0] = Math.min(a[0], b[0]);
  out[1] = Math.min(a[1], b[1]);
  out[2] = Math.min(a[2], b[2]);
  return out;
}
/**
 * Returns the maximum of two vec3's
 *
 * @param {vec3} out the receiving vector
 * @param {ReadonlyVec3} a the first operand
 * @param {ReadonlyVec3} b the second operand
 * @returns {vec3} out
 */

function max(out, a, b) {
  out[0] = Math.max(a[0], b[0]);
  out[1] = Math.max(a[1], b[1]);
  out[2] = Math.max(a[2], b[2]);
  return out;
}
/**
 * Math.round the components of a vec3
 *
 * @param {vec3} out the receiving vector
 * @param {ReadonlyVec3} a vector to round
 * @returns {vec3} out
 */

function round(out, a) {
  out[0] = Math.round(a[0]);
  out[1] = Math.round(a[1]);
  out[2] = Math.round(a[2]);
  return out;
}
/**
 * Scales a vec3 by a scalar number
 *
 * @param {vec3} out the receiving vector
 * @param {ReadonlyVec3} a the vector to scale
 * @param {Number} b amount to scale the vector by
 * @returns {vec3} out
 */

function scale(out, a, b) {
  out[0] = a[0] * b;
  out[1] = a[1] * b;
  out[2] = a[2] * b;
  return out;
}
/**
 * Adds two vec3's after scaling the second operand by a scalar value
 *
 * @param {vec3} out the receiving vector
 * @param {ReadonlyVec3} a the first operand
 * @param {ReadonlyVec3} b the second operand
 * @param {Number} scale the amount to scale b by before adding
 * @returns {vec3} out
 */

function scaleAndAdd(out, a, b, scale) {
  out[0] = a[0] + b[0] * scale;
  out[1] = a[1] + b[1] * scale;
  out[2] = a[2] + b[2] * scale;
  return out;
}
/**
 * Calculates the euclidian distance between two vec3's
 *
 * @param {ReadonlyVec3} a the first operand
 * @param {ReadonlyVec3} b the second operand
 * @returns {Number} distance between a and b
 */

function distance(a, b) {
  var x = b[0] - a[0];
  var y = b[1] - a[1];
  var z = b[2] - a[2];
  return Math.hypot(x, y, z);
}
/**
 * Calculates the squared euclidian distance between two vec3's
 *
 * @param {ReadonlyVec3} a the first operand
 * @param {ReadonlyVec3} b the second operand
 * @returns {Number} squared distance between a and b
 */

function squaredDistance(a, b) {
  var x = b[0] - a[0];
  var y = b[1] - a[1];
  var z = b[2] - a[2];
  return x * x + y * y + z * z;
}
/**
 * Calculates the squared length of a vec3
 *
 * @param {ReadonlyVec3} a vector to calculate squared length of
 * @returns {Number} squared length of a
 */

function squaredLength(a) {
  var x = a[0];
  var y = a[1];
  var z = a[2];
  return x * x + y * y + z * z;
}
/**
 * Negates the components of a vec3
 *
 * @param {vec3} out the receiving vector
 * @param {ReadonlyVec3} a vector to negate
 * @returns {vec3} out
 */

function negate(out, a) {
  out[0] = -a[0];
  out[1] = -a[1];
  out[2] = -a[2];
  return out;
}
/**
 * Returns the inverse of the components of a vec3
 *
 * @param {vec3} out the receiving vector
 * @param {ReadonlyVec3} a vector to invert
 * @returns {vec3} out
 */

function inverse(out, a) {
  out[0] = 1.0 / a[0];
  out[1] = 1.0 / a[1];
  out[2] = 1.0 / a[2];
  return out;
}
/**
 * Normalize a vec3
 *
 * @param {vec3} out the receiving vector
 * @param {ReadonlyVec3} a vector to normalize
 * @returns {vec3} out
 */

function normalize(out, a) {
  var x = a[0];
  var y = a[1];
  var z = a[2];
  var len = x * x + y * y + z * z;

  if (len > 0) {
    //TODO: evaluate use of glm_invsqrt here?
    len = 1 / Math.sqrt(len);
  }

  out[0] = a[0] * len;
  out[1] = a[1] * len;
  out[2] = a[2] * len;
  return out;
}
/**
 * Calculates the dot product of two vec3's
 *
 * @param {ReadonlyVec3} a the first operand
 * @param {ReadonlyVec3} b the second operand
 * @returns {Number} dot product of a and b
 */

function dot(a, b) {
  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];
}
/**
 * Computes the cross product of two vec3's
 *
 * @param {vec3} out the receiving vector
 * @param {ReadonlyVec3} a the first operand
 * @param {ReadonlyVec3} b the second operand
 * @returns {vec3} out
 */

function cross(out, a, b) {
  var ax = a[0],
      ay = a[1],
      az = a[2];
  var bx = b[0],
      by = b[1],
      bz = b[2];
  out[0] = ay * bz - az * by;
  out[1] = az * bx - ax * bz;
  out[2] = ax * by - ay * bx;
  return out;
}
/**
 * Performs a linear interpolation between two vec3's
 *
 * @param {vec3} out the receiving vector
 * @param {ReadonlyVec3} a the first operand
 * @param {ReadonlyVec3} b the second operand
 * @param {Number} t interpolation amount, in the range [0-1], between the two inputs
 * @returns {vec3} out
 */

function lerp(out, a, b, t) {
  var ax = a[0];
  var ay = a[1];
  var az = a[2];
  out[0] = ax + t * (b[0] - ax);
  out[1] = ay + t * (b[1] - ay);
  out[2] = az + t * (b[2] - az);
  return out;
}
/**
 * Performs a hermite interpolation with two control points
 *
 * @param {vec3} out the receiving vector
 * @param {ReadonlyVec3} a the first operand
 * @param {ReadonlyVec3} b the second operand
 * @param {ReadonlyVec3} c the third operand
 * @param {ReadonlyVec3} d the fourth operand
 * @param {Number} t interpolation amount, in the range [0-1], between the two inputs
 * @returns {vec3} out
 */

function hermite(out, a, b, c, d, t) {
  var factorTimes2 = t * t;
  var factor1 = factorTimes2 * (2 * t - 3) + 1;
  var factor2 = factorTimes2 * (t - 2) + t;
  var factor3 = factorTimes2 * (t - 1);
  var factor4 = factorTimes2 * (3 - 2 * t);
  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;
  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;
  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;
  return out;
}
/**
 * Performs a bezier interpolation with two control points
 *
 * @param {vec3} out the receiving vector
 * @param {ReadonlyVec3} a the first operand
 * @param {ReadonlyVec3} b the second operand
 * @param {ReadonlyVec3} c the third operand
 * @param {ReadonlyVec3} d the fourth operand
 * @param {Number} t interpolation amount, in the range [0-1], between the two inputs
 * @returns {vec3} out
 */

function bezier(out, a, b, c, d, t) {
  var inverseFactor = 1 - t;
  var inverseFactorTimesTwo = inverseFactor * inverseFactor;
  var factorTimes2 = t * t;
  var factor1 = inverseFactorTimesTwo * inverseFactor;
  var factor2 = 3 * t * inverseFactorTimesTwo;
  var factor3 = 3 * factorTimes2 * inverseFactor;
  var factor4 = factorTimes2 * t;
  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;
  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;
  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;
  return out;
}
/**
 * Generates a random vector with the given scale
 *
 * @param {vec3} out the receiving vector
 * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned
 * @returns {vec3} out
 */

function random(out, scale) {
  scale = scale || 1.0;
  var r = _common_js__WEBPACK_IMPORTED_MODULE_0__["RANDOM"]() * 2.0 * Math.PI;
  var z = _common_js__WEBPACK_IMPORTED_MODULE_0__["RANDOM"]() * 2.0 - 1.0;
  var zScale = Math.sqrt(1.0 - z * z) * scale;
  out[0] = Math.cos(r) * zScale;
  out[1] = Math.sin(r) * zScale;
  out[2] = z * scale;
  return out;
}
/**
 * Transforms the vec3 with a mat4.
 * 4th vector component is implicitly '1'
 *
 * @param {vec3} out the receiving vector
 * @param {ReadonlyVec3} a the vector to transform
 * @param {ReadonlyMat4} m matrix to transform with
 * @returns {vec3} out
 */

function transformMat4(out, a, m) {
  var x = a[0],
      y = a[1],
      z = a[2];
  var w = m[3] * x + m[7] * y + m[11] * z + m[15];
  w = w || 1.0;
  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;
  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;
  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;
  return out;
}
/**
 * Transforms the vec3 with a mat3.
 *
 * @param {vec3} out the receiving vector
 * @param {ReadonlyVec3} a the vector to transform
 * @param {ReadonlyMat3} m the 3x3 matrix to transform with
 * @returns {vec3} out
 */

function transformMat3(out, a, m) {
  var x = a[0],
      y = a[1],
      z = a[2];
  out[0] = x * m[0] + y * m[3] + z * m[6];
  out[1] = x * m[1] + y * m[4] + z * m[7];
  out[2] = x * m[2] + y * m[5] + z * m[8];
  return out;
}
/**
 * Transforms the vec3 with a quat
 * Can also be used for dual quaternions. (Multiply it with the real part)
 *
 * @param {vec3} out the receiving vector
 * @param {ReadonlyVec3} a the vector to transform
 * @param {ReadonlyQuat} q quaternion to transform with
 * @returns {vec3} out
 */

function transformQuat(out, a, q) {
  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed
  var qx = q[0],
      qy = q[1],
      qz = q[2],
      qw = q[3];
  var x = a[0],
      y = a[1],
      z = a[2]; // var qvec = [qx, qy, qz];
  // var uv = vec3.cross([], qvec, a);

  var uvx = qy * z - qz * y,
      uvy = qz * x - qx * z,
      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);

  var uuvx = qy * uvz - qz * uvy,
      uuvy = qz * uvx - qx * uvz,
      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);

  var w2 = qw * 2;
  uvx *= w2;
  uvy *= w2;
  uvz *= w2; // vec3.scale(uuv, uuv, 2);

  uuvx *= 2;
  uuvy *= 2;
  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));

  out[0] = x + uvx + uuvx;
  out[1] = y + uvy + uuvy;
  out[2] = z + uvz + uuvz;
  return out;
}
/**
 * Rotate a 3D vector around the x-axis
 * @param {vec3} out The receiving vec3
 * @param {ReadonlyVec3} a The vec3 point to rotate
 * @param {ReadonlyVec3} b The origin of the rotation
 * @param {Number} rad The angle of rotation in radians
 * @returns {vec3} out
 */

function rotateX(out, a, b, rad) {
  var p = [],
      r = []; //Translate point to the origin

  p[0] = a[0] - b[0];
  p[1] = a[1] - b[1];
  p[2] = a[2] - b[2]; //perform rotation

  r[0] = p[0];
  r[1] = p[1] * Math.cos(rad) - p[2] * Math.sin(rad);
  r[2] = p[1] * Math.sin(rad) + p[2] * Math.cos(rad); //translate to correct position

  out[0] = r[0] + b[0];
  out[1] = r[1] + b[1];
  out[2] = r[2] + b[2];
  return out;
}
/**
 * Rotate a 3D vector around the y-axis
 * @param {vec3} out The receiving vec3
 * @param {ReadonlyVec3} a The vec3 point to rotate
 * @param {ReadonlyVec3} b The origin of the rotation
 * @param {Number} rad The angle of rotation in radians
 * @returns {vec3} out
 */

function rotateY(out, a, b, rad) {
  var p = [],
      r = []; //Translate point to the origin

  p[0] = a[0] - b[0];
  p[1] = a[1] - b[1];
  p[2] = a[2] - b[2]; //perform rotation

  r[0] = p[2] * Math.sin(rad) + p[0] * Math.cos(rad);
  r[1] = p[1];
  r[2] = p[2] * Math.cos(rad) - p[0] * Math.sin(rad); //translate to correct position

  out[0] = r[0] + b[0];
  out[1] = r[1] + b[1];
  out[2] = r[2] + b[2];
  return out;
}
/**
 * Rotate a 3D vector around the z-axis
 * @param {vec3} out The receiving vec3
 * @param {ReadonlyVec3} a The vec3 point to rotate
 * @param {ReadonlyVec3} b The origin of the rotation
 * @param {Number} rad The angle of rotation in radians
 * @returns {vec3} out
 */

function rotateZ(out, a, b, rad) {
  var p = [],
      r = []; //Translate point to the origin

  p[0] = a[0] - b[0];
  p[1] = a[1] - b[1];
  p[2] = a[2] - b[2]; //perform rotation

  r[0] = p[0] * Math.cos(rad) - p[1] * Math.sin(rad);
  r[1] = p[0] * Math.sin(rad) + p[1] * Math.cos(rad);
  r[2] = p[2]; //translate to correct position

  out[0] = r[0] + b[0];
  out[1] = r[1] + b[1];
  out[2] = r[2] + b[2];
  return out;
}
/**
 * Get the angle between two 3D vectors
 * @param {ReadonlyVec3} a The first operand
 * @param {ReadonlyVec3} b The second operand
 * @returns {Number} The angle in radians
 */

function angle(a, b) {
  var ax = a[0],
      ay = a[1],
      az = a[2],
      bx = b[0],
      by = b[1],
      bz = b[2],
      mag1 = Math.sqrt(ax * ax + ay * ay + az * az),
      mag2 = Math.sqrt(bx * bx + by * by + bz * bz),
      mag = mag1 * mag2,
      cosine = mag && dot(a, b) / mag;
  return Math.acos(Math.min(Math.max(cosine, -1), 1));
}
/**
 * Set the components of a vec3 to zero
 *
 * @param {vec3} out the receiving vector
 * @returns {vec3} out
 */

function zero(out) {
  out[0] = 0.0;
  out[1] = 0.0;
  out[2] = 0.0;
  return out;
}
/**
 * Returns a string representation of a vector
 *
 * @param {ReadonlyVec3} a vector to represent as a string
 * @returns {String} string representation of the vector
 */

function str(a) {
  return "vec3(" + a[0] + ", " + a[1] + ", " + a[2] + ")";
}
/**
 * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)
 *
 * @param {ReadonlyVec3} a The first vector.
 * @param {ReadonlyVec3} b The second vector.
 * @returns {Boolean} True if the vectors are equal, false otherwise.
 */

function exactEquals(a, b) {
  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];
}
/**
 * Returns whether or not the vectors have approximately the same elements in the same position.
 *
 * @param {ReadonlyVec3} a The first vector.
 * @param {ReadonlyVec3} b The second vector.
 * @returns {Boolean} True if the vectors are equal, false otherwise.
 */

function equals(a, b) {
  var a0 = a[0],
      a1 = a[1],
      a2 = a[2];
  var b0 = b[0],
      b1 = b[1],
      b2 = b[2];
  return Math.abs(a0 - b0) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a2), Math.abs(b2));
}
/**
 * Alias for {@link vec3.subtract}
 * @function
 */

var sub = subtract;
/**
 * Alias for {@link vec3.multiply}
 * @function
 */

var mul = multiply;
/**
 * Alias for {@link vec3.divide}
 * @function
 */

var div = divide;
/**
 * Alias for {@link vec3.distance}
 * @function
 */

var dist = distance;
/**
 * Alias for {@link vec3.squaredDistance}
 * @function
 */

var sqrDist = squaredDistance;
/**
 * Alias for {@link vec3.length}
 * @function
 */

var len = length;
/**
 * Alias for {@link vec3.squaredLength}
 * @function
 */

var sqrLen = squaredLength;
/**
 * Perform some operation over an array of vec3s.
 *
 * @param {Array} a the array of vectors to iterate over
 * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed
 * @param {Number} offset Number of elements to skip at the beginning of the array
 * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array
 * @param {Function} fn Function to call for each vector in the array
 * @param {Object} [arg] additional argument to pass to fn
 * @returns {Array} a
 * @function
 */

var forEach = function () {
  var vec = create();
  return function (a, stride, offset, count, fn, arg) {
    var i, l;

    if (!stride) {
      stride = 3;
    }

    if (!offset) {
      offset = 0;
    }

    if (count) {
      l = Math.min(count * stride + offset, a.length);
    } else {
      l = a.length;
    }

    for (i = offset; i < l; i += stride) {
      vec[0] = a[i];
      vec[1] = a[i + 1];
      vec[2] = a[i + 2];
      fn(vec, vec, arg);
      a[i] = vec[0];
      a[i + 1] = vec[1];
      a[i + 2] = vec[2];
    }

    return a;
  };
}();

/***/ }),

/***/ "../node_modules/gl-matrix/esm/vec4.js":
/*!*********************************************!*\
  !*** ../node_modules/gl-matrix/esm/vec4.js ***!
  \*********************************************/
/*! exports provided: create, clone, fromValues, copy, set, add, subtract, multiply, divide, ceil, floor, min, max, round, scale, scaleAndAdd, distance, squaredDistance, length, squaredLength, negate, inverse, normalize, dot, cross, lerp, random, transformMat4, transformQuat, zero, str, exactEquals, equals, sub, mul, div, dist, sqrDist, len, sqrLen, forEach */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "create", function() { return create; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "clone", function() { return clone; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromValues", function() { return fromValues; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "copy", function() { return copy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "set", function() { return set; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "add", function() { return add; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "subtract", function() { return subtract; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "multiply", function() { return multiply; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "divide", function() { return divide; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ceil", function() { return ceil; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "floor", function() { return floor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "min", function() { return min; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "max", function() { return max; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "round", function() { return round; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scale", function() { return scale; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scaleAndAdd", function() { return scaleAndAdd; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "distance", function() { return distance; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "squaredDistance", function() { return squaredDistance; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "length", function() { return length; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "squaredLength", function() { return squaredLength; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "negate", function() { return negate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "inverse", function() { return inverse; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "normalize", function() { return normalize; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "dot", function() { return dot; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cross", function() { return cross; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "lerp", function() { return lerp; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "random", function() { return random; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "transformMat4", function() { return transformMat4; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "transformQuat", function() { return transformQuat; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "zero", function() { return zero; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "str", function() { return str; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "exactEquals", function() { return exactEquals; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "equals", function() { return equals; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sub", function() { return sub; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mul", function() { return mul; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "div", function() { return div; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "dist", function() { return dist; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sqrDist", function() { return sqrDist; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "len", function() { return len; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sqrLen", function() { return sqrLen; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "forEach", function() { return forEach; });
/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ "../node_modules/gl-matrix/esm/common.js");

/**
 * 4 Dimensional Vector
 * @module vec4
 */

/**
 * Creates a new, empty vec4
 *
 * @returns {vec4} a new 4D vector
 */

function create() {
  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__["ARRAY_TYPE"](4);

  if (_common_js__WEBPACK_IMPORTED_MODULE_0__["ARRAY_TYPE"] != Float32Array) {
    out[0] = 0;
    out[1] = 0;
    out[2] = 0;
    out[3] = 0;
  }

  return out;
}
/**
 * Creates a new vec4 initialized with values from an existing vector
 *
 * @param {ReadonlyVec4} a vector to clone
 * @returns {vec4} a new 4D vector
 */

function clone(a) {
  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__["ARRAY_TYPE"](4);
  out[0] = a[0];
  out[1] = a[1];
  out[2] = a[2];
  out[3] = a[3];
  return out;
}
/**
 * Creates a new vec4 initialized with the given values
 *
 * @param {Number} x X component
 * @param {Number} y Y component
 * @param {Number} z Z component
 * @param {Number} w W component
 * @returns {vec4} a new 4D vector
 */

function fromValues(x, y, z, w) {
  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__["ARRAY_TYPE"](4);
  out[0] = x;
  out[1] = y;
  out[2] = z;
  out[3] = w;
  return out;
}
/**
 * Copy the values from one vec4 to another
 *
 * @param {vec4} out the receiving vector
 * @param {ReadonlyVec4} a the source vector
 * @returns {vec4} out
 */

function copy(out, a) {
  out[0] = a[0];
  out[1] = a[1];
  out[2] = a[2];
  out[3] = a[3];
  return out;
}
/**
 * Set the components of a vec4 to the given values
 *
 * @param {vec4} out the receiving vector
 * @param {Number} x X component
 * @param {Number} y Y component
 * @param {Number} z Z component
 * @param {Number} w W component
 * @returns {vec4} out
 */

function set(out, x, y, z, w) {
  out[0] = x;
  out[1] = y;
  out[2] = z;
  out[3] = w;
  return out;
}
/**
 * Adds two vec4's
 *
 * @param {vec4} out the receiving vector
 * @param {ReadonlyVec4} a the first operand
 * @param {ReadonlyVec4} b the second operand
 * @returns {vec4} out
 */

function add(out, a, b) {
  out[0] = a[0] + b[0];
  out[1] = a[1] + b[1];
  out[2] = a[2] + b[2];
  out[3] = a[3] + b[3];
  return out;
}
/**
 * Subtracts vector b from vector a
 *
 * @param {vec4} out the receiving vector
 * @param {ReadonlyVec4} a the first operand
 * @param {ReadonlyVec4} b the second operand
 * @returns {vec4} out
 */

function subtract(out, a, b) {
  out[0] = a[0] - b[0];
  out[1] = a[1] - b[1];
  out[2] = a[2] - b[2];
  out[3] = a[3] - b[3];
  return out;
}
/**
 * Multiplies two vec4's
 *
 * @param {vec4} out the receiving vector
 * @param {ReadonlyVec4} a the first operand
 * @param {ReadonlyVec4} b the second operand
 * @returns {vec4} out
 */

function multiply(out, a, b) {
  out[0] = a[0] * b[0];
  out[1] = a[1] * b[1];
  out[2] = a[2] * b[2];
  out[3] = a[3] * b[3];
  return out;
}
/**
 * Divides two vec4's
 *
 * @param {vec4} out the receiving vector
 * @param {ReadonlyVec4} a the first operand
 * @param {ReadonlyVec4} b the second operand
 * @returns {vec4} out
 */

function divide(out, a, b) {
  out[0] = a[0] / b[0];
  out[1] = a[1] / b[1];
  out[2] = a[2] / b[2];
  out[3] = a[3] / b[3];
  return out;
}
/**
 * Math.ceil the components of a vec4
 *
 * @param {vec4} out the receiving vector
 * @param {ReadonlyVec4} a vector to ceil
 * @returns {vec4} out
 */

function ceil(out, a) {
  out[0] = Math.ceil(a[0]);
  out[1] = Math.ceil(a[1]);
  out[2] = Math.ceil(a[2]);
  out[3] = Math.ceil(a[3]);
  return out;
}
/**
 * Math.floor the components of a vec4
 *
 * @param {vec4} out the receiving vector
 * @param {ReadonlyVec4} a vector to floor
 * @returns {vec4} out
 */

function floor(out, a) {
  out[0] = Math.floor(a[0]);
  out[1] = Math.floor(a[1]);
  out[2] = Math.floor(a[2]);
  out[3] = Math.floor(a[3]);
  return out;
}
/**
 * Returns the minimum of two vec4's
 *
 * @param {vec4} out the receiving vector
 * @param {ReadonlyVec4} a the first operand
 * @param {ReadonlyVec4} b the second operand
 * @returns {vec4} out
 */

function min(out, a, b) {
  out[0] = Math.min(a[0], b[0]);
  out[1] = Math.min(a[1], b[1]);
  out[2] = Math.min(a[2], b[2]);
  out[3] = Math.min(a[3], b[3]);
  return out;
}
/**
 * Returns the maximum of two vec4's
 *
 * @param {vec4} out the receiving vector
 * @param {ReadonlyVec4} a the first operand
 * @param {ReadonlyVec4} b the second operand
 * @returns {vec4} out
 */

function max(out, a, b) {
  out[0] = Math.max(a[0], b[0]);
  out[1] = Math.max(a[1], b[1]);
  out[2] = Math.max(a[2], b[2]);
  out[3] = Math.max(a[3], b[3]);
  return out;
}
/**
 * Math.round the components of a vec4
 *
 * @param {vec4} out the receiving vector
 * @param {ReadonlyVec4} a vector to round
 * @returns {vec4} out
 */

function round(out, a) {
  out[0] = Math.round(a[0]);
  out[1] = Math.round(a[1]);
  out[2] = Math.round(a[2]);
  out[3] = Math.round(a[3]);
  return out;
}
/**
 * Scales a vec4 by a scalar number
 *
 * @param {vec4} out the receiving vector
 * @param {ReadonlyVec4} a the vector to scale
 * @param {Number} b amount to scale the vector by
 * @returns {vec4} out
 */

function scale(out, a, b) {
  out[0] = a[0] * b;
  out[1] = a[1] * b;
  out[2] = a[2] * b;
  out[3] = a[3] * b;
  return out;
}
/**
 * Adds two vec4's after scaling the second operand by a scalar value
 *
 * @param {vec4} out the receiving vector
 * @param {ReadonlyVec4} a the first operand
 * @param {ReadonlyVec4} b the second operand
 * @param {Number} scale the amount to scale b by before adding
 * @returns {vec4} out
 */

function scaleAndAdd(out, a, b, scale) {
  out[0] = a[0] + b[0] * scale;
  out[1] = a[1] + b[1] * scale;
  out[2] = a[2] + b[2] * scale;
  out[3] = a[3] + b[3] * scale;
  return out;
}
/**
 * Calculates the euclidian distance between two vec4's
 *
 * @param {ReadonlyVec4} a the first operand
 * @param {ReadonlyVec4} b the second operand
 * @returns {Number} distance between a and b
 */

function distance(a, b) {
  var x = b[0] - a[0];
  var y = b[1] - a[1];
  var z = b[2] - a[2];
  var w = b[3] - a[3];
  return Math.hypot(x, y, z, w);
}
/**
 * Calculates the squared euclidian distance between two vec4's
 *
 * @param {ReadonlyVec4} a the first operand
 * @param {ReadonlyVec4} b the second operand
 * @returns {Number} squared distance between a and b
 */

function squaredDistance(a, b) {
  var x = b[0] - a[0];
  var y = b[1] - a[1];
  var z = b[2] - a[2];
  var w = b[3] - a[3];
  return x * x + y * y + z * z + w * w;
}
/**
 * Calculates the length of a vec4
 *
 * @param {ReadonlyVec4} a vector to calculate length of
 * @returns {Number} length of a
 */

function length(a) {
  var x = a[0];
  var y = a[1];
  var z = a[2];
  var w = a[3];
  return Math.hypot(x, y, z, w);
}
/**
 * Calculates the squared length of a vec4
 *
 * @param {ReadonlyVec4} a vector to calculate squared length of
 * @returns {Number} squared length of a
 */

function squaredLength(a) {
  var x = a[0];
  var y = a[1];
  var z = a[2];
  var w = a[3];
  return x * x + y * y + z * z + w * w;
}
/**
 * Negates the components of a vec4
 *
 * @param {vec4} out the receiving vector
 * @param {ReadonlyVec4} a vector to negate
 * @returns {vec4} out
 */

function negate(out, a) {
  out[0] = -a[0];
  out[1] = -a[1];
  out[2] = -a[2];
  out[3] = -a[3];
  return out;
}
/**
 * Returns the inverse of the components of a vec4
 *
 * @param {vec4} out the receiving vector
 * @param {ReadonlyVec4} a vector to invert
 * @returns {vec4} out
 */

function inverse(out, a) {
  out[0] = 1.0 / a[0];
  out[1] = 1.0 / a[1];
  out[2] = 1.0 / a[2];
  out[3] = 1.0 / a[3];
  return out;
}
/**
 * Normalize a vec4
 *
 * @param {vec4} out the receiving vector
 * @param {ReadonlyVec4} a vector to normalize
 * @returns {vec4} out
 */

function normalize(out, a) {
  var x = a[0];
  var y = a[1];
  var z = a[2];
  var w = a[3];
  var len = x * x + y * y + z * z + w * w;

  if (len > 0) {
    len = 1 / Math.sqrt(len);
  }

  out[0] = x * len;
  out[1] = y * len;
  out[2] = z * len;
  out[3] = w * len;
  return out;
}
/**
 * Calculates the dot product of two vec4's
 *
 * @param {ReadonlyVec4} a the first operand
 * @param {ReadonlyVec4} b the second operand
 * @returns {Number} dot product of a and b
 */

function dot(a, b) {
  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];
}
/**
 * Returns the cross-product of three vectors in a 4-dimensional space
 *
 * @param {ReadonlyVec4} result the receiving vector
 * @param {ReadonlyVec4} U the first vector
 * @param {ReadonlyVec4} V the second vector
 * @param {ReadonlyVec4} W the third vector
 * @returns {vec4} result
 */

function cross(out, u, v, w) {
  var A = v[0] * w[1] - v[1] * w[0],
      B = v[0] * w[2] - v[2] * w[0],
      C = v[0] * w[3] - v[3] * w[0],
      D = v[1] * w[2] - v[2] * w[1],
      E = v[1] * w[3] - v[3] * w[1],
      F = v[2] * w[3] - v[3] * w[2];
  var G = u[0];
  var H = u[1];
  var I = u[2];
  var J = u[3];
  out[0] = H * F - I * E + J * D;
  out[1] = -(G * F) + I * C - J * B;
  out[2] = G * E - H * C + J * A;
  out[3] = -(G * D) + H * B - I * A;
  return out;
}
/**
 * Performs a linear interpolation between two vec4's
 *
 * @param {vec4} out the receiving vector
 * @param {ReadonlyVec4} a the first operand
 * @param {ReadonlyVec4} b the second operand
 * @param {Number} t interpolation amount, in the range [0-1], between the two inputs
 * @returns {vec4} out
 */

function lerp(out, a, b, t) {
  var ax = a[0];
  var ay = a[1];
  var az = a[2];
  var aw = a[3];
  out[0] = ax + t * (b[0] - ax);
  out[1] = ay + t * (b[1] - ay);
  out[2] = az + t * (b[2] - az);
  out[3] = aw + t * (b[3] - aw);
  return out;
}
/**
 * Generates a random vector with the given scale
 *
 * @param {vec4} out the receiving vector
 * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned
 * @returns {vec4} out
 */

function random(out, scale) {
  scale = scale || 1.0; // Marsaglia, George. Choosing a Point from the Surface of a
  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.
  // http://projecteuclid.org/euclid.aoms/1177692644;

  var v1, v2, v3, v4;
  var s1, s2;

  do {
    v1 = _common_js__WEBPACK_IMPORTED_MODULE_0__["RANDOM"]() * 2 - 1;
    v2 = _common_js__WEBPACK_IMPORTED_MODULE_0__["RANDOM"]() * 2 - 1;
    s1 = v1 * v1 + v2 * v2;
  } while (s1 >= 1);

  do {
    v3 = _common_js__WEBPACK_IMPORTED_MODULE_0__["RANDOM"]() * 2 - 1;
    v4 = _common_js__WEBPACK_IMPORTED_MODULE_0__["RANDOM"]() * 2 - 1;
    s2 = v3 * v3 + v4 * v4;
  } while (s2 >= 1);

  var d = Math.sqrt((1 - s1) / s2);
  out[0] = scale * v1;
  out[1] = scale * v2;
  out[2] = scale * v3 * d;
  out[3] = scale * v4 * d;
  return out;
}
/**
 * Transforms the vec4 with a mat4.
 *
 * @param {vec4} out the receiving vector
 * @param {ReadonlyVec4} a the vector to transform
 * @param {ReadonlyMat4} m matrix to transform with
 * @returns {vec4} out
 */

function transformMat4(out, a, m) {
  var x = a[0],
      y = a[1],
      z = a[2],
      w = a[3];
  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;
  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;
  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;
  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;
  return out;
}
/**
 * Transforms the vec4 with a quat
 *
 * @param {vec4} out the receiving vector
 * @param {ReadonlyVec4} a the vector to transform
 * @param {ReadonlyQuat} q quaternion to transform with
 * @returns {vec4} out
 */

function transformQuat(out, a, q) {
  var x = a[0],
      y = a[1],
      z = a[2];
  var qx = q[0],
      qy = q[1],
      qz = q[2],
      qw = q[3]; // calculate quat * vec

  var ix = qw * x + qy * z - qz * y;
  var iy = qw * y + qz * x - qx * z;
  var iz = qw * z + qx * y - qy * x;
  var iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat

  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;
  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;
  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;
  out[3] = a[3];
  return out;
}
/**
 * Set the components of a vec4 to zero
 *
 * @param {vec4} out the receiving vector
 * @returns {vec4} out
 */

function zero(out) {
  out[0] = 0.0;
  out[1] = 0.0;
  out[2] = 0.0;
  out[3] = 0.0;
  return out;
}
/**
 * Returns a string representation of a vector
 *
 * @param {ReadonlyVec4} a vector to represent as a string
 * @returns {String} string representation of the vector
 */

function str(a) {
  return "vec4(" + a[0] + ", " + a[1] + ", " + a[2] + ", " + a[3] + ")";
}
/**
 * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)
 *
 * @param {ReadonlyVec4} a The first vector.
 * @param {ReadonlyVec4} b The second vector.
 * @returns {Boolean} True if the vectors are equal, false otherwise.
 */

function exactEquals(a, b) {
  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];
}
/**
 * Returns whether or not the vectors have approximately the same elements in the same position.
 *
 * @param {ReadonlyVec4} a The first vector.
 * @param {ReadonlyVec4} b The second vector.
 * @returns {Boolean} True if the vectors are equal, false otherwise.
 */

function equals(a, b) {
  var a0 = a[0],
      a1 = a[1],
      a2 = a[2],
      a3 = a[3];
  var b0 = b[0],
      b1 = b[1],
      b2 = b[2],
      b3 = b[3];
  return Math.abs(a0 - b0) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a3), Math.abs(b3));
}
/**
 * Alias for {@link vec4.subtract}
 * @function
 */

var sub = subtract;
/**
 * Alias for {@link vec4.multiply}
 * @function
 */

var mul = multiply;
/**
 * Alias for {@link vec4.divide}
 * @function
 */

var div = divide;
/**
 * Alias for {@link vec4.distance}
 * @function
 */

var dist = distance;
/**
 * Alias for {@link vec4.squaredDistance}
 * @function
 */

var sqrDist = squaredDistance;
/**
 * Alias for {@link vec4.length}
 * @function
 */

var len = length;
/**
 * Alias for {@link vec4.squaredLength}
 * @function
 */

var sqrLen = squaredLength;
/**
 * Perform some operation over an array of vec4s.
 *
 * @param {Array} a the array of vectors to iterate over
 * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed
 * @param {Number} offset Number of elements to skip at the beginning of the array
 * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array
 * @param {Function} fn Function to call for each vector in the array
 * @param {Object} [arg] additional argument to pass to fn
 * @returns {Array} a
 * @function
 */

var forEach = function () {
  var vec = create();
  return function (a, stride, offset, count, fn, arg) {
    var i, l;

    if (!stride) {
      stride = 4;
    }

    if (!offset) {
      offset = 0;
    }

    if (count) {
      l = Math.min(count * stride + offset, a.length);
    } else {
      l = a.length;
    }

    for (i = offset; i < l; i += stride) {
      vec[0] = a[i];
      vec[1] = a[i + 1];
      vec[2] = a[i + 2];
      vec[3] = a[i + 3];
      fn(vec, vec, arg);
      a[i] = vec[0];
      a[i + 1] = vec[1];
      a[i + 2] = vec[2];
      a[i + 3] = vec[3];
    }

    return a;
  };
}();

/***/ }),

/***/ "../node_modules/globalthis/implementation.browser.js":
/*!************************************************************!*\
  !*** ../node_modules/globalthis/implementation.browser.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* eslint no-negated-condition: 0, no-new-func: 0 */



if (typeof self !== 'undefined') {
	module.exports = self;
} else if (typeof window !== 'undefined') {
	module.exports = window;
} else {
	module.exports = Function('return this')();
}


/***/ }),

/***/ "../node_modules/globalthis/index.js":
/*!*******************************************!*\
  !*** ../node_modules/globalthis/index.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var defineProperties = __webpack_require__(/*! define-properties */ "../node_modules/define-properties/index.js");

var implementation = __webpack_require__(/*! ./implementation */ "../node_modules/globalthis/implementation.browser.js");
var getPolyfill = __webpack_require__(/*! ./polyfill */ "../node_modules/globalthis/polyfill.js");
var shim = __webpack_require__(/*! ./shim */ "../node_modules/globalthis/shim.js");

var polyfill = getPolyfill();

var getGlobal = function () { return polyfill; };

defineProperties(getGlobal, {
	getPolyfill: getPolyfill,
	implementation: implementation,
	shim: shim
});

module.exports = getGlobal;


/***/ }),

/***/ "../node_modules/globalthis/polyfill.js":
/*!**********************************************!*\
  !*** ../node_modules/globalthis/polyfill.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {

var implementation = __webpack_require__(/*! ./implementation */ "../node_modules/globalthis/implementation.browser.js");

module.exports = function getPolyfill() {
	if (typeof global !== 'object' || !global || global.Math !== Math || global.Array !== Array) {
		return implementation;
	}
	return global;
};

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../dash-vtk/node_modules/webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "../node_modules/globalthis/shim.js":
/*!******************************************!*\
  !*** ../node_modules/globalthis/shim.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var define = __webpack_require__(/*! define-properties */ "../node_modules/define-properties/index.js");
var getPolyfill = __webpack_require__(/*! ./polyfill */ "../node_modules/globalthis/polyfill.js");

module.exports = function shimGlobal() {
	var polyfill = getPolyfill();
	if (define.supportsDescriptors) {
		var descriptor = Object.getOwnPropertyDescriptor(polyfill, 'globalThis');
		if (!descriptor || (descriptor.configurable && (descriptor.enumerable || descriptor.writable || globalThis !== polyfill))) { // eslint-disable-line max-len
			Object.defineProperty(polyfill, 'globalThis', {
				configurable: true,
				enumerable: false,
				value: polyfill,
				writable: false
			});
		}
	} else if (typeof globalThis !== 'object' || globalThis !== polyfill) {
		polyfill.globalThis = polyfill;
	}
	return polyfill;
};


/***/ }),

/***/ "../node_modules/internmap/src/index.js":
/*!**********************************************!*\
  !*** ../node_modules/internmap/src/index.js ***!
  \**********************************************/
/*! exports provided: InternMap, InternSet */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InternMap", function() { return InternMap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InternSet", function() { return InternSet; });
class InternMap extends Map {
  constructor(entries, key = keyof) {
    super();
    Object.defineProperties(this, {_intern: {value: new Map()}, _key: {value: key}});
    if (entries != null) for (const [key, value] of entries) this.set(key, value);
  }
  get(key) {
    return super.get(intern_get(this, key));
  }
  has(key) {
    return super.has(intern_get(this, key));
  }
  set(key, value) {
    return super.set(intern_set(this, key), value);
  }
  delete(key) {
    return super.delete(intern_delete(this, key));
  }
}

class InternSet extends Set {
  constructor(values, key = keyof) {
    super();
    Object.defineProperties(this, {_intern: {value: new Map()}, _key: {value: key}});
    if (values != null) for (const value of values) this.add(value);
  }
  has(value) {
    return super.has(intern_get(this, value));
  }
  add(value) {
    return super.add(intern_set(this, value));
  }
  delete(value) {
    return super.delete(intern_delete(this, value));
  }
}

function intern_get({_intern, _key}, value) {
  const key = _key(value);
  return _intern.has(key) ? _intern.get(key) : value;
}

function intern_set({_intern, _key}, value) {
  const key = _key(value);
  if (_intern.has(key)) return _intern.get(key);
  _intern.set(key, value);
  return value;
}

function intern_delete({_intern, _key}, value) {
  const key = _key(value);
  if (_intern.has(key)) {
    value = _intern.get(key);
    _intern.delete(key);
  }
  return value;
}

function keyof(value) {
  return value !== null && typeof value === "object" ? value.valueOf() : value;
}


/***/ }),

/***/ "../node_modules/jszip/dist/jszip.min.js":
/*!***********************************************!*\
  !*** ../node_modules/jszip/dist/jszip.min.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(Buffer, global, setImmediate) {var require;var require;/*!

JSZip v3.7.1 - A JavaScript class for generating and reading zip files
<http://stuartk.com/jszip>

(c) 2009-2016 Stuart Knightley <stuart [at] stuartk.com>
Dual licenced under the MIT license or GPLv3. See https://raw.github.com/Stuk/jszip/master/LICENSE.markdown.

JSZip uses the library pako released under the MIT license :
https://github.com/nodeca/pako/blob/master/LICENSE
*/

!function(t){if(true)module.exports=t();else {}}(function(){return function s(a,o,h){function u(r,t){if(!o[r]){if(!a[r]){var e="function"==typeof require&&require;if(!t&&e)return require(r,!0);if(l)return l(r,!0);var i=new Error("Cannot find module '"+r+"'");throw i.code="MODULE_NOT_FOUND",i}var n=o[r]={exports:{}};a[r][0].call(n.exports,function(t){var e=a[r][1][t];return u(e||t)},n,n.exports,s,a,o,h)}return o[r].exports}for(var l="function"==typeof require&&require,t=0;t<h.length;t++)u(h[t]);return u}({1:[function(t,e,r){"use strict";var c=t("./utils"),d=t("./support"),p="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";r.encode=function(t){for(var e,r,i,n,s,a,o,h=[],u=0,l=t.length,f=l,d="string"!==c.getTypeOf(t);u<t.length;)f=l-u,i=d?(e=t[u++],r=u<l?t[u++]:0,u<l?t[u++]:0):(e=t.charCodeAt(u++),r=u<l?t.charCodeAt(u++):0,u<l?t.charCodeAt(u++):0),n=e>>2,s=(3&e)<<4|r>>4,a=1<f?(15&r)<<2|i>>6:64,o=2<f?63&i:64,h.push(p.charAt(n)+p.charAt(s)+p.charAt(a)+p.charAt(o));return h.join("")},r.decode=function(t){var e,r,i,n,s,a,o=0,h=0,u="data:";if(t.substr(0,u.length)===u)throw new Error("Invalid base64 input, it looks like a data url.");var l,f=3*(t=t.replace(/[^A-Za-z0-9\+\/\=]/g,"")).length/4;if(t.charAt(t.length-1)===p.charAt(64)&&f--,t.charAt(t.length-2)===p.charAt(64)&&f--,f%1!=0)throw new Error("Invalid base64 input, bad content length.");for(l=d.uint8array?new Uint8Array(0|f):new Array(0|f);o<t.length;)e=p.indexOf(t.charAt(o++))<<2|(n=p.indexOf(t.charAt(o++)))>>4,r=(15&n)<<4|(s=p.indexOf(t.charAt(o++)))>>2,i=(3&s)<<6|(a=p.indexOf(t.charAt(o++))),l[h++]=e,64!==s&&(l[h++]=r),64!==a&&(l[h++]=i);return l}},{"./support":30,"./utils":32}],2:[function(t,e,r){"use strict";var i=t("./external"),n=t("./stream/DataWorker"),s=t("./stream/Crc32Probe"),a=t("./stream/DataLengthProbe");function o(t,e,r,i,n){this.compressedSize=t,this.uncompressedSize=e,this.crc32=r,this.compression=i,this.compressedContent=n}o.prototype={getContentWorker:function(){var t=new n(i.Promise.resolve(this.compressedContent)).pipe(this.compression.uncompressWorker()).pipe(new a("data_length")),e=this;return t.on("end",function(){if(this.streamInfo.data_length!==e.uncompressedSize)throw new Error("Bug : uncompressed data size mismatch")}),t},getCompressedWorker:function(){return new n(i.Promise.resolve(this.compressedContent)).withStreamInfo("compressedSize",this.compressedSize).withStreamInfo("uncompressedSize",this.uncompressedSize).withStreamInfo("crc32",this.crc32).withStreamInfo("compression",this.compression)}},o.createWorkerFrom=function(t,e,r){return t.pipe(new s).pipe(new a("uncompressedSize")).pipe(e.compressWorker(r)).pipe(new a("compressedSize")).withStreamInfo("compression",e)},e.exports=o},{"./external":6,"./stream/Crc32Probe":25,"./stream/DataLengthProbe":26,"./stream/DataWorker":27}],3:[function(t,e,r){"use strict";var i=t("./stream/GenericWorker");r.STORE={magic:"\0\0",compressWorker:function(t){return new i("STORE compression")},uncompressWorker:function(){return new i("STORE decompression")}},r.DEFLATE=t("./flate")},{"./flate":7,"./stream/GenericWorker":28}],4:[function(t,e,r){"use strict";var i=t("./utils");var o=function(){for(var t,e=[],r=0;r<256;r++){t=r;for(var i=0;i<8;i++)t=1&t?3988292384^t>>>1:t>>>1;e[r]=t}return e}();e.exports=function(t,e){return void 0!==t&&t.length?"string"!==i.getTypeOf(t)?function(t,e,r,i){var n=o,s=i+r;t^=-1;for(var a=i;a<s;a++)t=t>>>8^n[255&(t^e[a])];return-1^t}(0|e,t,t.length,0):function(t,e,r,i){var n=o,s=i+r;t^=-1;for(var a=i;a<s;a++)t=t>>>8^n[255&(t^e.charCodeAt(a))];return-1^t}(0|e,t,t.length,0):0}},{"./utils":32}],5:[function(t,e,r){"use strict";r.base64=!1,r.binary=!1,r.dir=!1,r.createFolders=!0,r.date=null,r.compression=null,r.compressionOptions=null,r.comment=null,r.unixPermissions=null,r.dosPermissions=null},{}],6:[function(t,e,r){"use strict";var i=null;i="undefined"!=typeof Promise?Promise:t("lie"),e.exports={Promise:i}},{lie:37}],7:[function(t,e,r){"use strict";var i="undefined"!=typeof Uint8Array&&"undefined"!=typeof Uint16Array&&"undefined"!=typeof Uint32Array,n=t("pako"),s=t("./utils"),a=t("./stream/GenericWorker"),o=i?"uint8array":"array";function h(t,e){a.call(this,"FlateWorker/"+t),this._pako=null,this._pakoAction=t,this._pakoOptions=e,this.meta={}}r.magic="\b\0",s.inherits(h,a),h.prototype.processChunk=function(t){this.meta=t.meta,null===this._pako&&this._createPako(),this._pako.push(s.transformTo(o,t.data),!1)},h.prototype.flush=function(){a.prototype.flush.call(this),null===this._pako&&this._createPako(),this._pako.push([],!0)},h.prototype.cleanUp=function(){a.prototype.cleanUp.call(this),this._pako=null},h.prototype._createPako=function(){this._pako=new n[this._pakoAction]({raw:!0,level:this._pakoOptions.level||-1});var e=this;this._pako.onData=function(t){e.push({data:t,meta:e.meta})}},r.compressWorker=function(t){return new h("Deflate",t)},r.uncompressWorker=function(){return new h("Inflate",{})}},{"./stream/GenericWorker":28,"./utils":32,pako:38}],8:[function(t,e,r){"use strict";function A(t,e){var r,i="";for(r=0;r<e;r++)i+=String.fromCharCode(255&t),t>>>=8;return i}function i(t,e,r,i,n,s){var a,o,h=t.file,u=t.compression,l=s!==O.utf8encode,f=I.transformTo("string",s(h.name)),d=I.transformTo("string",O.utf8encode(h.name)),c=h.comment,p=I.transformTo("string",s(c)),m=I.transformTo("string",O.utf8encode(c)),_=d.length!==h.name.length,g=m.length!==c.length,b="",v="",y="",w=h.dir,k=h.date,x={crc32:0,compressedSize:0,uncompressedSize:0};e&&!r||(x.crc32=t.crc32,x.compressedSize=t.compressedSize,x.uncompressedSize=t.uncompressedSize);var S=0;e&&(S|=8),l||!_&&!g||(S|=2048);var z=0,C=0;w&&(z|=16),"UNIX"===n?(C=798,z|=function(t,e){var r=t;return t||(r=e?16893:33204),(65535&r)<<16}(h.unixPermissions,w)):(C=20,z|=function(t){return 63&(t||0)}(h.dosPermissions)),a=k.getUTCHours(),a<<=6,a|=k.getUTCMinutes(),a<<=5,a|=k.getUTCSeconds()/2,o=k.getUTCFullYear()-1980,o<<=4,o|=k.getUTCMonth()+1,o<<=5,o|=k.getUTCDate(),_&&(v=A(1,1)+A(B(f),4)+d,b+="up"+A(v.length,2)+v),g&&(y=A(1,1)+A(B(p),4)+m,b+="uc"+A(y.length,2)+y);var E="";return E+="\n\0",E+=A(S,2),E+=u.magic,E+=A(a,2),E+=A(o,2),E+=A(x.crc32,4),E+=A(x.compressedSize,4),E+=A(x.uncompressedSize,4),E+=A(f.length,2),E+=A(b.length,2),{fileRecord:R.LOCAL_FILE_HEADER+E+f+b,dirRecord:R.CENTRAL_FILE_HEADER+A(C,2)+E+A(p.length,2)+"\0\0\0\0"+A(z,4)+A(i,4)+f+b+p}}var I=t("../utils"),n=t("../stream/GenericWorker"),O=t("../utf8"),B=t("../crc32"),R=t("../signature");function s(t,e,r,i){n.call(this,"ZipFileWorker"),this.bytesWritten=0,this.zipComment=e,this.zipPlatform=r,this.encodeFileName=i,this.streamFiles=t,this.accumulate=!1,this.contentBuffer=[],this.dirRecords=[],this.currentSourceOffset=0,this.entriesCount=0,this.currentFile=null,this._sources=[]}I.inherits(s,n),s.prototype.push=function(t){var e=t.meta.percent||0,r=this.entriesCount,i=this._sources.length;this.accumulate?this.contentBuffer.push(t):(this.bytesWritten+=t.data.length,n.prototype.push.call(this,{data:t.data,meta:{currentFile:this.currentFile,percent:r?(e+100*(r-i-1))/r:100}}))},s.prototype.openedSource=function(t){this.currentSourceOffset=this.bytesWritten,this.currentFile=t.file.name;var e=this.streamFiles&&!t.file.dir;if(e){var r=i(t,e,!1,this.currentSourceOffset,this.zipPlatform,this.encodeFileName);this.push({data:r.fileRecord,meta:{percent:0}})}else this.accumulate=!0},s.prototype.closedSource=function(t){this.accumulate=!1;var e=this.streamFiles&&!t.file.dir,r=i(t,e,!0,this.currentSourceOffset,this.zipPlatform,this.encodeFileName);if(this.dirRecords.push(r.dirRecord),e)this.push({data:function(t){return R.DATA_DESCRIPTOR+A(t.crc32,4)+A(t.compressedSize,4)+A(t.uncompressedSize,4)}(t),meta:{percent:100}});else for(this.push({data:r.fileRecord,meta:{percent:0}});this.contentBuffer.length;)this.push(this.contentBuffer.shift());this.currentFile=null},s.prototype.flush=function(){for(var t=this.bytesWritten,e=0;e<this.dirRecords.length;e++)this.push({data:this.dirRecords[e],meta:{percent:100}});var r=this.bytesWritten-t,i=function(t,e,r,i,n){var s=I.transformTo("string",n(i));return R.CENTRAL_DIRECTORY_END+"\0\0\0\0"+A(t,2)+A(t,2)+A(e,4)+A(r,4)+A(s.length,2)+s}(this.dirRecords.length,r,t,this.zipComment,this.encodeFileName);this.push({data:i,meta:{percent:100}})},s.prototype.prepareNextSource=function(){this.previous=this._sources.shift(),this.openedSource(this.previous.streamInfo),this.isPaused?this.previous.pause():this.previous.resume()},s.prototype.registerPrevious=function(t){this._sources.push(t);var e=this;return t.on("data",function(t){e.processChunk(t)}),t.on("end",function(){e.closedSource(e.previous.streamInfo),e._sources.length?e.prepareNextSource():e.end()}),t.on("error",function(t){e.error(t)}),this},s.prototype.resume=function(){return!!n.prototype.resume.call(this)&&(!this.previous&&this._sources.length?(this.prepareNextSource(),!0):this.previous||this._sources.length||this.generatedError?void 0:(this.end(),!0))},s.prototype.error=function(t){var e=this._sources;if(!n.prototype.error.call(this,t))return!1;for(var r=0;r<e.length;r++)try{e[r].error(t)}catch(t){}return!0},s.prototype.lock=function(){n.prototype.lock.call(this);for(var t=this._sources,e=0;e<t.length;e++)t[e].lock()},e.exports=s},{"../crc32":4,"../signature":23,"../stream/GenericWorker":28,"../utf8":31,"../utils":32}],9:[function(t,e,r){"use strict";var u=t("../compressions"),i=t("./ZipFileWorker");r.generateWorker=function(t,a,e){var o=new i(a.streamFiles,e,a.platform,a.encodeFileName),h=0;try{t.forEach(function(t,e){h++;var r=function(t,e){var r=t||e,i=u[r];if(!i)throw new Error(r+" is not a valid compression method !");return i}(e.options.compression,a.compression),i=e.options.compressionOptions||a.compressionOptions||{},n=e.dir,s=e.date;e._compressWorker(r,i).withStreamInfo("file",{name:t,dir:n,date:s,comment:e.comment||"",unixPermissions:e.unixPermissions,dosPermissions:e.dosPermissions}).pipe(o)}),o.entriesCount=h}catch(t){o.error(t)}return o}},{"../compressions":3,"./ZipFileWorker":8}],10:[function(t,e,r){"use strict";function i(){if(!(this instanceof i))return new i;if(arguments.length)throw new Error("The constructor with parameters has been removed in JSZip 3.0, please check the upgrade guide.");this.files=Object.create(null),this.comment=null,this.root="",this.clone=function(){var t=new i;for(var e in this)"function"!=typeof this[e]&&(t[e]=this[e]);return t}}(i.prototype=t("./object")).loadAsync=t("./load"),i.support=t("./support"),i.defaults=t("./defaults"),i.version="3.7.1",i.loadAsync=function(t,e){return(new i).loadAsync(t,e)},i.external=t("./external"),e.exports=i},{"./defaults":5,"./external":6,"./load":11,"./object":15,"./support":30}],11:[function(t,e,r){"use strict";var i=t("./utils"),n=t("./external"),o=t("./utf8"),h=t("./zipEntries"),s=t("./stream/Crc32Probe"),u=t("./nodejsUtils");function l(i){return new n.Promise(function(t,e){var r=i.decompressed.getContentWorker().pipe(new s);r.on("error",function(t){e(t)}).on("end",function(){r.streamInfo.crc32!==i.decompressed.crc32?e(new Error("Corrupted zip : CRC32 mismatch")):t()}).resume()})}e.exports=function(t,s){var a=this;return s=i.extend(s||{},{base64:!1,checkCRC32:!1,optimizedBinaryString:!1,createFolders:!1,decodeFileName:o.utf8decode}),u.isNode&&u.isStream(t)?n.Promise.reject(new Error("JSZip can't accept a stream when loading a zip file.")):i.prepareContent("the loaded zip file",t,!0,s.optimizedBinaryString,s.base64).then(function(t){var e=new h(s);return e.load(t),e}).then(function(t){var e=[n.Promise.resolve(t)],r=t.files;if(s.checkCRC32)for(var i=0;i<r.length;i++)e.push(l(r[i]));return n.Promise.all(e)}).then(function(t){for(var e=t.shift(),r=e.files,i=0;i<r.length;i++){var n=r[i];a.file(n.fileNameStr,n.decompressed,{binary:!0,optimizedBinaryString:!0,date:n.date,dir:n.dir,comment:n.fileCommentStr.length?n.fileCommentStr:null,unixPermissions:n.unixPermissions,dosPermissions:n.dosPermissions,createFolders:s.createFolders})}return e.zipComment.length&&(a.comment=e.zipComment),a})}},{"./external":6,"./nodejsUtils":14,"./stream/Crc32Probe":25,"./utf8":31,"./utils":32,"./zipEntries":33}],12:[function(t,e,r){"use strict";var i=t("../utils"),n=t("../stream/GenericWorker");function s(t,e){n.call(this,"Nodejs stream input adapter for "+t),this._upstreamEnded=!1,this._bindStream(e)}i.inherits(s,n),s.prototype._bindStream=function(t){var e=this;(this._stream=t).pause(),t.on("data",function(t){e.push({data:t,meta:{percent:0}})}).on("error",function(t){e.isPaused?this.generatedError=t:e.error(t)}).on("end",function(){e.isPaused?e._upstreamEnded=!0:e.end()})},s.prototype.pause=function(){return!!n.prototype.pause.call(this)&&(this._stream.pause(),!0)},s.prototype.resume=function(){return!!n.prototype.resume.call(this)&&(this._upstreamEnded?this.end():this._stream.resume(),!0)},e.exports=s},{"../stream/GenericWorker":28,"../utils":32}],13:[function(t,e,r){"use strict";var n=t("readable-stream").Readable;function i(t,e,r){n.call(this,e),this._helper=t;var i=this;t.on("data",function(t,e){i.push(t)||i._helper.pause(),r&&r(e)}).on("error",function(t){i.emit("error",t)}).on("end",function(){i.push(null)})}t("../utils").inherits(i,n),i.prototype._read=function(){this._helper.resume()},e.exports=i},{"../utils":32,"readable-stream":16}],14:[function(t,e,r){"use strict";e.exports={isNode:"undefined"!=typeof Buffer,newBufferFrom:function(t,e){if(Buffer.from&&Buffer.from!==Uint8Array.from)return Buffer.from(t,e);if("number"==typeof t)throw new Error('The "data" argument must not be a number');return new Buffer(t,e)},allocBuffer:function(t){if(Buffer.alloc)return Buffer.alloc(t);var e=new Buffer(t);return e.fill(0),e},isBuffer:function(t){return Buffer.isBuffer(t)},isStream:function(t){return t&&"function"==typeof t.on&&"function"==typeof t.pause&&"function"==typeof t.resume}}},{}],15:[function(t,e,r){"use strict";function s(t,e,r){var i,n=u.getTypeOf(e),s=u.extend(r||{},f);s.date=s.date||new Date,null!==s.compression&&(s.compression=s.compression.toUpperCase()),"string"==typeof s.unixPermissions&&(s.unixPermissions=parseInt(s.unixPermissions,8)),s.unixPermissions&&16384&s.unixPermissions&&(s.dir=!0),s.dosPermissions&&16&s.dosPermissions&&(s.dir=!0),s.dir&&(t=g(t)),s.createFolders&&(i=_(t))&&b.call(this,i,!0);var a="string"===n&&!1===s.binary&&!1===s.base64;r&&void 0!==r.binary||(s.binary=!a),(e instanceof d&&0===e.uncompressedSize||s.dir||!e||0===e.length)&&(s.base64=!1,s.binary=!0,e="",s.compression="STORE",n="string");var o=null;o=e instanceof d||e instanceof l?e:p.isNode&&p.isStream(e)?new m(t,e):u.prepareContent(t,e,s.binary,s.optimizedBinaryString,s.base64);var h=new c(t,o,s);this.files[t]=h}var n=t("./utf8"),u=t("./utils"),l=t("./stream/GenericWorker"),a=t("./stream/StreamHelper"),f=t("./defaults"),d=t("./compressedObject"),c=t("./zipObject"),o=t("./generate"),p=t("./nodejsUtils"),m=t("./nodejs/NodejsStreamInputAdapter"),_=function(t){"/"===t.slice(-1)&&(t=t.substring(0,t.length-1));var e=t.lastIndexOf("/");return 0<e?t.substring(0,e):""},g=function(t){return"/"!==t.slice(-1)&&(t+="/"),t},b=function(t,e){return e=void 0!==e?e:f.createFolders,t=g(t),this.files[t]||s.call(this,t,null,{dir:!0,createFolders:e}),this.files[t]};function h(t){return"[object RegExp]"===Object.prototype.toString.call(t)}var i={load:function(){throw new Error("This method has been removed in JSZip 3.0, please check the upgrade guide.")},forEach:function(t){var e,r,i;for(e in this.files)i=this.files[e],(r=e.slice(this.root.length,e.length))&&e.slice(0,this.root.length)===this.root&&t(r,i)},filter:function(r){var i=[];return this.forEach(function(t,e){r(t,e)&&i.push(e)}),i},file:function(t,e,r){if(1!==arguments.length)return t=this.root+t,s.call(this,t,e,r),this;if(h(t)){var i=t;return this.filter(function(t,e){return!e.dir&&i.test(t)})}var n=this.files[this.root+t];return n&&!n.dir?n:null},folder:function(r){if(!r)return this;if(h(r))return this.filter(function(t,e){return e.dir&&r.test(t)});var t=this.root+r,e=b.call(this,t),i=this.clone();return i.root=e.name,i},remove:function(r){r=this.root+r;var t=this.files[r];if(t||("/"!==r.slice(-1)&&(r+="/"),t=this.files[r]),t&&!t.dir)delete this.files[r];else for(var e=this.filter(function(t,e){return e.name.slice(0,r.length)===r}),i=0;i<e.length;i++)delete this.files[e[i].name];return this},generate:function(t){throw new Error("This method has been removed in JSZip 3.0, please check the upgrade guide.")},generateInternalStream:function(t){var e,r={};try{if((r=u.extend(t||{},{streamFiles:!1,compression:"STORE",compressionOptions:null,type:"",platform:"DOS",comment:null,mimeType:"application/zip",encodeFileName:n.utf8encode})).type=r.type.toLowerCase(),r.compression=r.compression.toUpperCase(),"binarystring"===r.type&&(r.type="string"),!r.type)throw new Error("No output type specified.");u.checkSupport(r.type),"darwin"!==r.platform&&"freebsd"!==r.platform&&"linux"!==r.platform&&"sunos"!==r.platform||(r.platform="UNIX"),"win32"===r.platform&&(r.platform="DOS");var i=r.comment||this.comment||"";e=o.generateWorker(this,r,i)}catch(t){(e=new l("error")).error(t)}return new a(e,r.type||"string",r.mimeType)},generateAsync:function(t,e){return this.generateInternalStream(t).accumulate(e)},generateNodeStream:function(t,e){return(t=t||{}).type||(t.type="nodebuffer"),this.generateInternalStream(t).toNodejsStream(e)}};e.exports=i},{"./compressedObject":2,"./defaults":5,"./generate":9,"./nodejs/NodejsStreamInputAdapter":12,"./nodejsUtils":14,"./stream/GenericWorker":28,"./stream/StreamHelper":29,"./utf8":31,"./utils":32,"./zipObject":35}],16:[function(t,e,r){e.exports=t("stream")},{stream:void 0}],17:[function(t,e,r){"use strict";var i=t("./DataReader");function n(t){i.call(this,t);for(var e=0;e<this.data.length;e++)t[e]=255&t[e]}t("../utils").inherits(n,i),n.prototype.byteAt=function(t){return this.data[this.zero+t]},n.prototype.lastIndexOfSignature=function(t){for(var e=t.charCodeAt(0),r=t.charCodeAt(1),i=t.charCodeAt(2),n=t.charCodeAt(3),s=this.length-4;0<=s;--s)if(this.data[s]===e&&this.data[s+1]===r&&this.data[s+2]===i&&this.data[s+3]===n)return s-this.zero;return-1},n.prototype.readAndCheckSignature=function(t){var e=t.charCodeAt(0),r=t.charCodeAt(1),i=t.charCodeAt(2),n=t.charCodeAt(3),s=this.readData(4);return e===s[0]&&r===s[1]&&i===s[2]&&n===s[3]},n.prototype.readData=function(t){if(this.checkOffset(t),0===t)return[];var e=this.data.slice(this.zero+this.index,this.zero+this.index+t);return this.index+=t,e},e.exports=n},{"../utils":32,"./DataReader":18}],18:[function(t,e,r){"use strict";var i=t("../utils");function n(t){this.data=t,this.length=t.length,this.index=0,this.zero=0}n.prototype={checkOffset:function(t){this.checkIndex(this.index+t)},checkIndex:function(t){if(this.length<this.zero+t||t<0)throw new Error("End of data reached (data length = "+this.length+", asked index = "+t+"). Corrupted zip ?")},setIndex:function(t){this.checkIndex(t),this.index=t},skip:function(t){this.setIndex(this.index+t)},byteAt:function(t){},readInt:function(t){var e,r=0;for(this.checkOffset(t),e=this.index+t-1;e>=this.index;e--)r=(r<<8)+this.byteAt(e);return this.index+=t,r},readString:function(t){return i.transformTo("string",this.readData(t))},readData:function(t){},lastIndexOfSignature:function(t){},readAndCheckSignature:function(t){},readDate:function(){var t=this.readInt(4);return new Date(Date.UTC(1980+(t>>25&127),(t>>21&15)-1,t>>16&31,t>>11&31,t>>5&63,(31&t)<<1))}},e.exports=n},{"../utils":32}],19:[function(t,e,r){"use strict";var i=t("./Uint8ArrayReader");function n(t){i.call(this,t)}t("../utils").inherits(n,i),n.prototype.readData=function(t){this.checkOffset(t);var e=this.data.slice(this.zero+this.index,this.zero+this.index+t);return this.index+=t,e},e.exports=n},{"../utils":32,"./Uint8ArrayReader":21}],20:[function(t,e,r){"use strict";var i=t("./DataReader");function n(t){i.call(this,t)}t("../utils").inherits(n,i),n.prototype.byteAt=function(t){return this.data.charCodeAt(this.zero+t)},n.prototype.lastIndexOfSignature=function(t){return this.data.lastIndexOf(t)-this.zero},n.prototype.readAndCheckSignature=function(t){return t===this.readData(4)},n.prototype.readData=function(t){this.checkOffset(t);var e=this.data.slice(this.zero+this.index,this.zero+this.index+t);return this.index+=t,e},e.exports=n},{"../utils":32,"./DataReader":18}],21:[function(t,e,r){"use strict";var i=t("./ArrayReader");function n(t){i.call(this,t)}t("../utils").inherits(n,i),n.prototype.readData=function(t){if(this.checkOffset(t),0===t)return new Uint8Array(0);var e=this.data.subarray(this.zero+this.index,this.zero+this.index+t);return this.index+=t,e},e.exports=n},{"../utils":32,"./ArrayReader":17}],22:[function(t,e,r){"use strict";var i=t("../utils"),n=t("../support"),s=t("./ArrayReader"),a=t("./StringReader"),o=t("./NodeBufferReader"),h=t("./Uint8ArrayReader");e.exports=function(t){var e=i.getTypeOf(t);return i.checkSupport(e),"string"!==e||n.uint8array?"nodebuffer"===e?new o(t):n.uint8array?new h(i.transformTo("uint8array",t)):new s(i.transformTo("array",t)):new a(t)}},{"../support":30,"../utils":32,"./ArrayReader":17,"./NodeBufferReader":19,"./StringReader":20,"./Uint8ArrayReader":21}],23:[function(t,e,r){"use strict";r.LOCAL_FILE_HEADER="PK",r.CENTRAL_FILE_HEADER="PK",r.CENTRAL_DIRECTORY_END="PK",r.ZIP64_CENTRAL_DIRECTORY_LOCATOR="PK",r.ZIP64_CENTRAL_DIRECTORY_END="PK",r.DATA_DESCRIPTOR="PK\b"},{}],24:[function(t,e,r){"use strict";var i=t("./GenericWorker"),n=t("../utils");function s(t){i.call(this,"ConvertWorker to "+t),this.destType=t}n.inherits(s,i),s.prototype.processChunk=function(t){this.push({data:n.transformTo(this.destType,t.data),meta:t.meta})},e.exports=s},{"../utils":32,"./GenericWorker":28}],25:[function(t,e,r){"use strict";var i=t("./GenericWorker"),n=t("../crc32");function s(){i.call(this,"Crc32Probe"),this.withStreamInfo("crc32",0)}t("../utils").inherits(s,i),s.prototype.processChunk=function(t){this.streamInfo.crc32=n(t.data,this.streamInfo.crc32||0),this.push(t)},e.exports=s},{"../crc32":4,"../utils":32,"./GenericWorker":28}],26:[function(t,e,r){"use strict";var i=t("../utils"),n=t("./GenericWorker");function s(t){n.call(this,"DataLengthProbe for "+t),this.propName=t,this.withStreamInfo(t,0)}i.inherits(s,n),s.prototype.processChunk=function(t){if(t){var e=this.streamInfo[this.propName]||0;this.streamInfo[this.propName]=e+t.data.length}n.prototype.processChunk.call(this,t)},e.exports=s},{"../utils":32,"./GenericWorker":28}],27:[function(t,e,r){"use strict";var i=t("../utils"),n=t("./GenericWorker");function s(t){n.call(this,"DataWorker");var e=this;this.dataIsReady=!1,this.index=0,this.max=0,this.data=null,this.type="",this._tickScheduled=!1,t.then(function(t){e.dataIsReady=!0,e.data=t,e.max=t&&t.length||0,e.type=i.getTypeOf(t),e.isPaused||e._tickAndRepeat()},function(t){e.error(t)})}i.inherits(s,n),s.prototype.cleanUp=function(){n.prototype.cleanUp.call(this),this.data=null},s.prototype.resume=function(){return!!n.prototype.resume.call(this)&&(!this._tickScheduled&&this.dataIsReady&&(this._tickScheduled=!0,i.delay(this._tickAndRepeat,[],this)),!0)},s.prototype._tickAndRepeat=function(){this._tickScheduled=!1,this.isPaused||this.isFinished||(this._tick(),this.isFinished||(i.delay(this._tickAndRepeat,[],this),this._tickScheduled=!0))},s.prototype._tick=function(){if(this.isPaused||this.isFinished)return!1;var t=null,e=Math.min(this.max,this.index+16384);if(this.index>=this.max)return this.end();switch(this.type){case"string":t=this.data.substring(this.index,e);break;case"uint8array":t=this.data.subarray(this.index,e);break;case"array":case"nodebuffer":t=this.data.slice(this.index,e)}return this.index=e,this.push({data:t,meta:{percent:this.max?this.index/this.max*100:0}})},e.exports=s},{"../utils":32,"./GenericWorker":28}],28:[function(t,e,r){"use strict";function i(t){this.name=t||"default",this.streamInfo={},this.generatedError=null,this.extraStreamInfo={},this.isPaused=!0,this.isFinished=!1,this.isLocked=!1,this._listeners={data:[],end:[],error:[]},this.previous=null}i.prototype={push:function(t){this.emit("data",t)},end:function(){if(this.isFinished)return!1;this.flush();try{this.emit("end"),this.cleanUp(),this.isFinished=!0}catch(t){this.emit("error",t)}return!0},error:function(t){return!this.isFinished&&(this.isPaused?this.generatedError=t:(this.isFinished=!0,this.emit("error",t),this.previous&&this.previous.error(t),this.cleanUp()),!0)},on:function(t,e){return this._listeners[t].push(e),this},cleanUp:function(){this.streamInfo=this.generatedError=this.extraStreamInfo=null,this._listeners=[]},emit:function(t,e){if(this._listeners[t])for(var r=0;r<this._listeners[t].length;r++)this._listeners[t][r].call(this,e)},pipe:function(t){return t.registerPrevious(this)},registerPrevious:function(t){if(this.isLocked)throw new Error("The stream '"+this+"' has already been used.");this.streamInfo=t.streamInfo,this.mergeStreamInfo(),this.previous=t;var e=this;return t.on("data",function(t){e.processChunk(t)}),t.on("end",function(){e.end()}),t.on("error",function(t){e.error(t)}),this},pause:function(){return!this.isPaused&&!this.isFinished&&(this.isPaused=!0,this.previous&&this.previous.pause(),!0)},resume:function(){if(!this.isPaused||this.isFinished)return!1;var t=this.isPaused=!1;return this.generatedError&&(this.error(this.generatedError),t=!0),this.previous&&this.previous.resume(),!t},flush:function(){},processChunk:function(t){this.push(t)},withStreamInfo:function(t,e){return this.extraStreamInfo[t]=e,this.mergeStreamInfo(),this},mergeStreamInfo:function(){for(var t in this.extraStreamInfo)this.extraStreamInfo.hasOwnProperty(t)&&(this.streamInfo[t]=this.extraStreamInfo[t])},lock:function(){if(this.isLocked)throw new Error("The stream '"+this+"' has already been used.");this.isLocked=!0,this.previous&&this.previous.lock()},toString:function(){var t="Worker "+this.name;return this.previous?this.previous+" -> "+t:t}},e.exports=i},{}],29:[function(t,e,r){"use strict";var h=t("../utils"),n=t("./ConvertWorker"),s=t("./GenericWorker"),u=t("../base64"),i=t("../support"),a=t("../external"),o=null;if(i.nodestream)try{o=t("../nodejs/NodejsStreamOutputAdapter")}catch(t){}function l(t,o){return new a.Promise(function(e,r){var i=[],n=t._internalType,s=t._outputType,a=t._mimeType;t.on("data",function(t,e){i.push(t),o&&o(e)}).on("error",function(t){i=[],r(t)}).on("end",function(){try{var t=function(t,e,r){switch(t){case"blob":return h.newBlob(h.transformTo("arraybuffer",e),r);case"base64":return u.encode(e);default:return h.transformTo(t,e)}}(s,function(t,e){var r,i=0,n=null,s=0;for(r=0;r<e.length;r++)s+=e[r].length;switch(t){case"string":return e.join("");case"array":return Array.prototype.concat.apply([],e);case"uint8array":for(n=new Uint8Array(s),r=0;r<e.length;r++)n.set(e[r],i),i+=e[r].length;return n;case"nodebuffer":return Buffer.concat(e);default:throw new Error("concat : unsupported type '"+t+"'")}}(n,i),a);e(t)}catch(t){r(t)}i=[]}).resume()})}function f(t,e,r){var i=e;switch(e){case"blob":case"arraybuffer":i="uint8array";break;case"base64":i="string"}try{this._internalType=i,this._outputType=e,this._mimeType=r,h.checkSupport(i),this._worker=t.pipe(new n(i)),t.lock()}catch(t){this._worker=new s("error"),this._worker.error(t)}}f.prototype={accumulate:function(t){return l(this,t)},on:function(t,e){var r=this;return"data"===t?this._worker.on(t,function(t){e.call(r,t.data,t.meta)}):this._worker.on(t,function(){h.delay(e,arguments,r)}),this},resume:function(){return h.delay(this._worker.resume,[],this._worker),this},pause:function(){return this._worker.pause(),this},toNodejsStream:function(t){if(h.checkSupport("nodestream"),"nodebuffer"!==this._outputType)throw new Error(this._outputType+" is not supported by this method");return new o(this,{objectMode:"nodebuffer"!==this._outputType},t)}},e.exports=f},{"../base64":1,"../external":6,"../nodejs/NodejsStreamOutputAdapter":13,"../support":30,"../utils":32,"./ConvertWorker":24,"./GenericWorker":28}],30:[function(t,e,r){"use strict";if(r.base64=!0,r.array=!0,r.string=!0,r.arraybuffer="undefined"!=typeof ArrayBuffer&&"undefined"!=typeof Uint8Array,r.nodebuffer="undefined"!=typeof Buffer,r.uint8array="undefined"!=typeof Uint8Array,"undefined"==typeof ArrayBuffer)r.blob=!1;else{var i=new ArrayBuffer(0);try{r.blob=0===new Blob([i],{type:"application/zip"}).size}catch(t){try{var n=new(self.BlobBuilder||self.WebKitBlobBuilder||self.MozBlobBuilder||self.MSBlobBuilder);n.append(i),r.blob=0===n.getBlob("application/zip").size}catch(t){r.blob=!1}}}try{r.nodestream=!!t("readable-stream").Readable}catch(t){r.nodestream=!1}},{"readable-stream":16}],31:[function(t,e,s){"use strict";for(var o=t("./utils"),h=t("./support"),r=t("./nodejsUtils"),i=t("./stream/GenericWorker"),u=new Array(256),n=0;n<256;n++)u[n]=252<=n?6:248<=n?5:240<=n?4:224<=n?3:192<=n?2:1;u[254]=u[254]=1;function a(){i.call(this,"utf-8 decode"),this.leftOver=null}function l(){i.call(this,"utf-8 encode")}s.utf8encode=function(t){return h.nodebuffer?r.newBufferFrom(t,"utf-8"):function(t){var e,r,i,n,s,a=t.length,o=0;for(n=0;n<a;n++)55296==(64512&(r=t.charCodeAt(n)))&&n+1<a&&56320==(64512&(i=t.charCodeAt(n+1)))&&(r=65536+(r-55296<<10)+(i-56320),n++),o+=r<128?1:r<2048?2:r<65536?3:4;for(e=h.uint8array?new Uint8Array(o):new Array(o),n=s=0;s<o;n++)55296==(64512&(r=t.charCodeAt(n)))&&n+1<a&&56320==(64512&(i=t.charCodeAt(n+1)))&&(r=65536+(r-55296<<10)+(i-56320),n++),r<128?e[s++]=r:(r<2048?e[s++]=192|r>>>6:(r<65536?e[s++]=224|r>>>12:(e[s++]=240|r>>>18,e[s++]=128|r>>>12&63),e[s++]=128|r>>>6&63),e[s++]=128|63&r);return e}(t)},s.utf8decode=function(t){return h.nodebuffer?o.transformTo("nodebuffer",t).toString("utf-8"):function(t){var e,r,i,n,s=t.length,a=new Array(2*s);for(e=r=0;e<s;)if((i=t[e++])<128)a[r++]=i;else if(4<(n=u[i]))a[r++]=65533,e+=n-1;else{for(i&=2===n?31:3===n?15:7;1<n&&e<s;)i=i<<6|63&t[e++],n--;1<n?a[r++]=65533:i<65536?a[r++]=i:(i-=65536,a[r++]=55296|i>>10&1023,a[r++]=56320|1023&i)}return a.length!==r&&(a.subarray?a=a.subarray(0,r):a.length=r),o.applyFromCharCode(a)}(t=o.transformTo(h.uint8array?"uint8array":"array",t))},o.inherits(a,i),a.prototype.processChunk=function(t){var e=o.transformTo(h.uint8array?"uint8array":"array",t.data);if(this.leftOver&&this.leftOver.length){if(h.uint8array){var r=e;(e=new Uint8Array(r.length+this.leftOver.length)).set(this.leftOver,0),e.set(r,this.leftOver.length)}else e=this.leftOver.concat(e);this.leftOver=null}var i=function(t,e){var r;for((e=e||t.length)>t.length&&(e=t.length),r=e-1;0<=r&&128==(192&t[r]);)r--;return r<0?e:0===r?e:r+u[t[r]]>e?r:e}(e),n=e;i!==e.length&&(h.uint8array?(n=e.subarray(0,i),this.leftOver=e.subarray(i,e.length)):(n=e.slice(0,i),this.leftOver=e.slice(i,e.length))),this.push({data:s.utf8decode(n),meta:t.meta})},a.prototype.flush=function(){this.leftOver&&this.leftOver.length&&(this.push({data:s.utf8decode(this.leftOver),meta:{}}),this.leftOver=null)},s.Utf8DecodeWorker=a,o.inherits(l,i),l.prototype.processChunk=function(t){this.push({data:s.utf8encode(t.data),meta:t.meta})},s.Utf8EncodeWorker=l},{"./nodejsUtils":14,"./stream/GenericWorker":28,"./support":30,"./utils":32}],32:[function(t,e,a){"use strict";var o=t("./support"),h=t("./base64"),r=t("./nodejsUtils"),i=t("set-immediate-shim"),u=t("./external");function n(t){return t}function l(t,e){for(var r=0;r<t.length;++r)e[r]=255&t.charCodeAt(r);return e}a.newBlob=function(e,r){a.checkSupport("blob");try{return new Blob([e],{type:r})}catch(t){try{var i=new(self.BlobBuilder||self.WebKitBlobBuilder||self.MozBlobBuilder||self.MSBlobBuilder);return i.append(e),i.getBlob(r)}catch(t){throw new Error("Bug : can't construct the Blob.")}}};var s={stringifyByChunk:function(t,e,r){var i=[],n=0,s=t.length;if(s<=r)return String.fromCharCode.apply(null,t);for(;n<s;)"array"===e||"nodebuffer"===e?i.push(String.fromCharCode.apply(null,t.slice(n,Math.min(n+r,s)))):i.push(String.fromCharCode.apply(null,t.subarray(n,Math.min(n+r,s)))),n+=r;return i.join("")},stringifyByChar:function(t){for(var e="",r=0;r<t.length;r++)e+=String.fromCharCode(t[r]);return e},applyCanBeUsed:{uint8array:function(){try{return o.uint8array&&1===String.fromCharCode.apply(null,new Uint8Array(1)).length}catch(t){return!1}}(),nodebuffer:function(){try{return o.nodebuffer&&1===String.fromCharCode.apply(null,r.allocBuffer(1)).length}catch(t){return!1}}()}};function f(t){var e=65536,r=a.getTypeOf(t),i=!0;if("uint8array"===r?i=s.applyCanBeUsed.uint8array:"nodebuffer"===r&&(i=s.applyCanBeUsed.nodebuffer),i)for(;1<e;)try{return s.stringifyByChunk(t,r,e)}catch(t){e=Math.floor(e/2)}return s.stringifyByChar(t)}function d(t,e){for(var r=0;r<t.length;r++)e[r]=t[r];return e}a.applyFromCharCode=f;var c={};c.string={string:n,array:function(t){return l(t,new Array(t.length))},arraybuffer:function(t){return c.string.uint8array(t).buffer},uint8array:function(t){return l(t,new Uint8Array(t.length))},nodebuffer:function(t){return l(t,r.allocBuffer(t.length))}},c.array={string:f,array:n,arraybuffer:function(t){return new Uint8Array(t).buffer},uint8array:function(t){return new Uint8Array(t)},nodebuffer:function(t){return r.newBufferFrom(t)}},c.arraybuffer={string:function(t){return f(new Uint8Array(t))},array:function(t){return d(new Uint8Array(t),new Array(t.byteLength))},arraybuffer:n,uint8array:function(t){return new Uint8Array(t)},nodebuffer:function(t){return r.newBufferFrom(new Uint8Array(t))}},c.uint8array={string:f,array:function(t){return d(t,new Array(t.length))},arraybuffer:function(t){return t.buffer},uint8array:n,nodebuffer:function(t){return r.newBufferFrom(t)}},c.nodebuffer={string:f,array:function(t){return d(t,new Array(t.length))},arraybuffer:function(t){return c.nodebuffer.uint8array(t).buffer},uint8array:function(t){return d(t,new Uint8Array(t.length))},nodebuffer:n},a.transformTo=function(t,e){if(e=e||"",!t)return e;a.checkSupport(t);var r=a.getTypeOf(e);return c[r][t](e)},a.getTypeOf=function(t){return"string"==typeof t?"string":"[object Array]"===Object.prototype.toString.call(t)?"array":o.nodebuffer&&r.isBuffer(t)?"nodebuffer":o.uint8array&&t instanceof Uint8Array?"uint8array":o.arraybuffer&&t instanceof ArrayBuffer?"arraybuffer":void 0},a.checkSupport=function(t){if(!o[t.toLowerCase()])throw new Error(t+" is not supported by this platform")},a.MAX_VALUE_16BITS=65535,a.MAX_VALUE_32BITS=-1,a.pretty=function(t){var e,r,i="";for(r=0;r<(t||"").length;r++)i+="\\x"+((e=t.charCodeAt(r))<16?"0":"")+e.toString(16).toUpperCase();return i},a.delay=function(t,e,r){i(function(){t.apply(r||null,e||[])})},a.inherits=function(t,e){function r(){}r.prototype=e.prototype,t.prototype=new r},a.extend=function(){var t,e,r={};for(t=0;t<arguments.length;t++)for(e in arguments[t])arguments[t].hasOwnProperty(e)&&void 0===r[e]&&(r[e]=arguments[t][e]);return r},a.prepareContent=function(r,t,i,n,s){return u.Promise.resolve(t).then(function(i){return o.blob&&(i instanceof Blob||-1!==["[object File]","[object Blob]"].indexOf(Object.prototype.toString.call(i)))&&"undefined"!=typeof FileReader?new u.Promise(function(e,r){var t=new FileReader;t.onload=function(t){e(t.target.result)},t.onerror=function(t){r(t.target.error)},t.readAsArrayBuffer(i)}):i}).then(function(t){var e=a.getTypeOf(t);return e?("arraybuffer"===e?t=a.transformTo("uint8array",t):"string"===e&&(s?t=h.decode(t):i&&!0!==n&&(t=function(t){return l(t,o.uint8array?new Uint8Array(t.length):new Array(t.length))}(t))),t):u.Promise.reject(new Error("Can't read the data of '"+r+"'. Is it in a supported JavaScript type (String, Blob, ArrayBuffer, etc) ?"))})}},{"./base64":1,"./external":6,"./nodejsUtils":14,"./support":30,"set-immediate-shim":54}],33:[function(t,e,r){"use strict";var i=t("./reader/readerFor"),n=t("./utils"),s=t("./signature"),a=t("./zipEntry"),o=(t("./utf8"),t("./support"));function h(t){this.files=[],this.loadOptions=t}h.prototype={checkSignature:function(t){if(!this.reader.readAndCheckSignature(t)){this.reader.index-=4;var e=this.reader.readString(4);throw new Error("Corrupted zip or bug: unexpected signature ("+n.pretty(e)+", expected "+n.pretty(t)+")")}},isSignature:function(t,e){var r=this.reader.index;this.reader.setIndex(t);var i=this.reader.readString(4)===e;return this.reader.setIndex(r),i},readBlockEndOfCentral:function(){this.diskNumber=this.reader.readInt(2),this.diskWithCentralDirStart=this.reader.readInt(2),this.centralDirRecordsOnThisDisk=this.reader.readInt(2),this.centralDirRecords=this.reader.readInt(2),this.centralDirSize=this.reader.readInt(4),this.centralDirOffset=this.reader.readInt(4),this.zipCommentLength=this.reader.readInt(2);var t=this.reader.readData(this.zipCommentLength),e=o.uint8array?"uint8array":"array",r=n.transformTo(e,t);this.zipComment=this.loadOptions.decodeFileName(r)},readBlockZip64EndOfCentral:function(){this.zip64EndOfCentralSize=this.reader.readInt(8),this.reader.skip(4),this.diskNumber=this.reader.readInt(4),this.diskWithCentralDirStart=this.reader.readInt(4),this.centralDirRecordsOnThisDisk=this.reader.readInt(8),this.centralDirRecords=this.reader.readInt(8),this.centralDirSize=this.reader.readInt(8),this.centralDirOffset=this.reader.readInt(8),this.zip64ExtensibleData={};for(var t,e,r,i=this.zip64EndOfCentralSize-44;0<i;)t=this.reader.readInt(2),e=this.reader.readInt(4),r=this.reader.readData(e),this.zip64ExtensibleData[t]={id:t,length:e,value:r}},readBlockZip64EndOfCentralLocator:function(){if(this.diskWithZip64CentralDirStart=this.reader.readInt(4),this.relativeOffsetEndOfZip64CentralDir=this.reader.readInt(8),this.disksCount=this.reader.readInt(4),1<this.disksCount)throw new Error("Multi-volumes zip are not supported")},readLocalFiles:function(){var t,e;for(t=0;t<this.files.length;t++)e=this.files[t],this.reader.setIndex(e.localHeaderOffset),this.checkSignature(s.LOCAL_FILE_HEADER),e.readLocalPart(this.reader),e.handleUTF8(),e.processAttributes()},readCentralDir:function(){var t;for(this.reader.setIndex(this.centralDirOffset);this.reader.readAndCheckSignature(s.CENTRAL_FILE_HEADER);)(t=new a({zip64:this.zip64},this.loadOptions)).readCentralPart(this.reader),this.files.push(t);if(this.centralDirRecords!==this.files.length&&0!==this.centralDirRecords&&0===this.files.length)throw new Error("Corrupted zip or bug: expected "+this.centralDirRecords+" records in central dir, got "+this.files.length)},readEndOfCentral:function(){var t=this.reader.lastIndexOfSignature(s.CENTRAL_DIRECTORY_END);if(t<0)throw!this.isSignature(0,s.LOCAL_FILE_HEADER)?new Error("Can't find end of central directory : is this a zip file ? If it is, see https://stuk.github.io/jszip/documentation/howto/read_zip.html"):new Error("Corrupted zip: can't find end of central directory");this.reader.setIndex(t);var e=t;if(this.checkSignature(s.CENTRAL_DIRECTORY_END),this.readBlockEndOfCentral(),this.diskNumber===n.MAX_VALUE_16BITS||this.diskWithCentralDirStart===n.MAX_VALUE_16BITS||this.centralDirRecordsOnThisDisk===n.MAX_VALUE_16BITS||this.centralDirRecords===n.MAX_VALUE_16BITS||this.centralDirSize===n.MAX_VALUE_32BITS||this.centralDirOffset===n.MAX_VALUE_32BITS){if(this.zip64=!0,(t=this.reader.lastIndexOfSignature(s.ZIP64_CENTRAL_DIRECTORY_LOCATOR))<0)throw new Error("Corrupted zip: can't find the ZIP64 end of central directory locator");if(this.reader.setIndex(t),this.checkSignature(s.ZIP64_CENTRAL_DIRECTORY_LOCATOR),this.readBlockZip64EndOfCentralLocator(),!this.isSignature(this.relativeOffsetEndOfZip64CentralDir,s.ZIP64_CENTRAL_DIRECTORY_END)&&(this.relativeOffsetEndOfZip64CentralDir=this.reader.lastIndexOfSignature(s.ZIP64_CENTRAL_DIRECTORY_END),this.relativeOffsetEndOfZip64CentralDir<0))throw new Error("Corrupted zip: can't find the ZIP64 end of central directory");this.reader.setIndex(this.relativeOffsetEndOfZip64CentralDir),this.checkSignature(s.ZIP64_CENTRAL_DIRECTORY_END),this.readBlockZip64EndOfCentral()}var r=this.centralDirOffset+this.centralDirSize;this.zip64&&(r+=20,r+=12+this.zip64EndOfCentralSize);var i=e-r;if(0<i)this.isSignature(e,s.CENTRAL_FILE_HEADER)||(this.reader.zero=i);else if(i<0)throw new Error("Corrupted zip: missing "+Math.abs(i)+" bytes.")},prepareReader:function(t){this.reader=i(t)},load:function(t){this.prepareReader(t),this.readEndOfCentral(),this.readCentralDir(),this.readLocalFiles()}},e.exports=h},{"./reader/readerFor":22,"./signature":23,"./support":30,"./utf8":31,"./utils":32,"./zipEntry":34}],34:[function(t,e,r){"use strict";var i=t("./reader/readerFor"),s=t("./utils"),n=t("./compressedObject"),a=t("./crc32"),o=t("./utf8"),h=t("./compressions"),u=t("./support");function l(t,e){this.options=t,this.loadOptions=e}l.prototype={isEncrypted:function(){return 1==(1&this.bitFlag)},useUTF8:function(){return 2048==(2048&this.bitFlag)},readLocalPart:function(t){var e,r;if(t.skip(22),this.fileNameLength=t.readInt(2),r=t.readInt(2),this.fileName=t.readData(this.fileNameLength),t.skip(r),-1===this.compressedSize||-1===this.uncompressedSize)throw new Error("Bug or corrupted zip : didn't get enough information from the central directory (compressedSize === -1 || uncompressedSize === -1)");if(null===(e=function(t){for(var e in h)if(h.hasOwnProperty(e)&&h[e].magic===t)return h[e];return null}(this.compressionMethod)))throw new Error("Corrupted zip : compression "+s.pretty(this.compressionMethod)+" unknown (inner file : "+s.transformTo("string",this.fileName)+")");this.decompressed=new n(this.compressedSize,this.uncompressedSize,this.crc32,e,t.readData(this.compressedSize))},readCentralPart:function(t){this.versionMadeBy=t.readInt(2),t.skip(2),this.bitFlag=t.readInt(2),this.compressionMethod=t.readString(2),this.date=t.readDate(),this.crc32=t.readInt(4),this.compressedSize=t.readInt(4),this.uncompressedSize=t.readInt(4);var e=t.readInt(2);if(this.extraFieldsLength=t.readInt(2),this.fileCommentLength=t.readInt(2),this.diskNumberStart=t.readInt(2),this.internalFileAttributes=t.readInt(2),this.externalFileAttributes=t.readInt(4),this.localHeaderOffset=t.readInt(4),this.isEncrypted())throw new Error("Encrypted zip are not supported");t.skip(e),this.readExtraFields(t),this.parseZIP64ExtraField(t),this.fileComment=t.readData(this.fileCommentLength)},processAttributes:function(){this.unixPermissions=null,this.dosPermissions=null;var t=this.versionMadeBy>>8;this.dir=!!(16&this.externalFileAttributes),0==t&&(this.dosPermissions=63&this.externalFileAttributes),3==t&&(this.unixPermissions=this.externalFileAttributes>>16&65535),this.dir||"/"!==this.fileNameStr.slice(-1)||(this.dir=!0)},parseZIP64ExtraField:function(t){if(this.extraFields[1]){var e=i(this.extraFields[1].value);this.uncompressedSize===s.MAX_VALUE_32BITS&&(this.uncompressedSize=e.readInt(8)),this.compressedSize===s.MAX_VALUE_32BITS&&(this.compressedSize=e.readInt(8)),this.localHeaderOffset===s.MAX_VALUE_32BITS&&(this.localHeaderOffset=e.readInt(8)),this.diskNumberStart===s.MAX_VALUE_32BITS&&(this.diskNumberStart=e.readInt(4))}},readExtraFields:function(t){var e,r,i,n=t.index+this.extraFieldsLength;for(this.extraFields||(this.extraFields={});t.index+4<n;)e=t.readInt(2),r=t.readInt(2),i=t.readData(r),this.extraFields[e]={id:e,length:r,value:i};t.setIndex(n)},handleUTF8:function(){var t=u.uint8array?"uint8array":"array";if(this.useUTF8())this.fileNameStr=o.utf8decode(this.fileName),this.fileCommentStr=o.utf8decode(this.fileComment);else{var e=this.findExtraFieldUnicodePath();if(null!==e)this.fileNameStr=e;else{var r=s.transformTo(t,this.fileName);this.fileNameStr=this.loadOptions.decodeFileName(r)}var i=this.findExtraFieldUnicodeComment();if(null!==i)this.fileCommentStr=i;else{var n=s.transformTo(t,this.fileComment);this.fileCommentStr=this.loadOptions.decodeFileName(n)}}},findExtraFieldUnicodePath:function(){var t=this.extraFields[28789];if(t){var e=i(t.value);return 1!==e.readInt(1)?null:a(this.fileName)!==e.readInt(4)?null:o.utf8decode(e.readData(t.length-5))}return null},findExtraFieldUnicodeComment:function(){var t=this.extraFields[25461];if(t){var e=i(t.value);return 1!==e.readInt(1)?null:a(this.fileComment)!==e.readInt(4)?null:o.utf8decode(e.readData(t.length-5))}return null}},e.exports=l},{"./compressedObject":2,"./compressions":3,"./crc32":4,"./reader/readerFor":22,"./support":30,"./utf8":31,"./utils":32}],35:[function(t,e,r){"use strict";function i(t,e,r){this.name=t,this.dir=r.dir,this.date=r.date,this.comment=r.comment,this.unixPermissions=r.unixPermissions,this.dosPermissions=r.dosPermissions,this._data=e,this._dataBinary=r.binary,this.options={compression:r.compression,compressionOptions:r.compressionOptions}}var s=t("./stream/StreamHelper"),n=t("./stream/DataWorker"),a=t("./utf8"),o=t("./compressedObject"),h=t("./stream/GenericWorker");i.prototype={internalStream:function(t){var e=null,r="string";try{if(!t)throw new Error("No output type specified.");var i="string"===(r=t.toLowerCase())||"text"===r;"binarystring"!==r&&"text"!==r||(r="string"),e=this._decompressWorker();var n=!this._dataBinary;n&&!i&&(e=e.pipe(new a.Utf8EncodeWorker)),!n&&i&&(e=e.pipe(new a.Utf8DecodeWorker))}catch(t){(e=new h("error")).error(t)}return new s(e,r,"")},async:function(t,e){return this.internalStream(t).accumulate(e)},nodeStream:function(t,e){return this.internalStream(t||"nodebuffer").toNodejsStream(e)},_compressWorker:function(t,e){if(this._data instanceof o&&this._data.compression.magic===t.magic)return this._data.getCompressedWorker();var r=this._decompressWorker();return this._dataBinary||(r=r.pipe(new a.Utf8EncodeWorker)),o.createWorkerFrom(r,t,e)},_decompressWorker:function(){return this._data instanceof o?this._data.getContentWorker():this._data instanceof h?this._data:new n(this._data)}};for(var u=["asText","asBinary","asNodeBuffer","asUint8Array","asArrayBuffer"],l=function(){throw new Error("This method has been removed in JSZip 3.0, please check the upgrade guide.")},f=0;f<u.length;f++)i.prototype[u[f]]=l;e.exports=i},{"./compressedObject":2,"./stream/DataWorker":27,"./stream/GenericWorker":28,"./stream/StreamHelper":29,"./utf8":31}],36:[function(t,l,e){(function(e){"use strict";var r,i,t=e.MutationObserver||e.WebKitMutationObserver;if(t){var n=0,s=new t(u),a=e.document.createTextNode("");s.observe(a,{characterData:!0}),r=function(){a.data=n=++n%2}}else if(e.setImmediate||void 0===e.MessageChannel)r="document"in e&&"onreadystatechange"in e.document.createElement("script")?function(){var t=e.document.createElement("script");t.onreadystatechange=function(){u(),t.onreadystatechange=null,t.parentNode.removeChild(t),t=null},e.document.documentElement.appendChild(t)}:function(){setTimeout(u,0)};else{var o=new e.MessageChannel;o.port1.onmessage=u,r=function(){o.port2.postMessage(0)}}var h=[];function u(){var t,e;i=!0;for(var r=h.length;r;){for(e=h,h=[],t=-1;++t<r;)e[t]();r=h.length}i=!1}l.exports=function(t){1!==h.push(t)||i||r()}}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],37:[function(t,e,r){"use strict";var n=t("immediate");function u(){}var l={},s=["REJECTED"],a=["FULFILLED"],i=["PENDING"];function o(t){if("function"!=typeof t)throw new TypeError("resolver must be a function");this.state=i,this.queue=[],this.outcome=void 0,t!==u&&c(this,t)}function h(t,e,r){this.promise=t,"function"==typeof e&&(this.onFulfilled=e,this.callFulfilled=this.otherCallFulfilled),"function"==typeof r&&(this.onRejected=r,this.callRejected=this.otherCallRejected)}function f(e,r,i){n(function(){var t;try{t=r(i)}catch(t){return l.reject(e,t)}t===e?l.reject(e,new TypeError("Cannot resolve promise with itself")):l.resolve(e,t)})}function d(t){var e=t&&t.then;if(t&&("object"==typeof t||"function"==typeof t)&&"function"==typeof e)return function(){e.apply(t,arguments)}}function c(e,t){var r=!1;function i(t){r||(r=!0,l.reject(e,t))}function n(t){r||(r=!0,l.resolve(e,t))}var s=p(function(){t(n,i)});"error"===s.status&&i(s.value)}function p(t,e){var r={};try{r.value=t(e),r.status="success"}catch(t){r.status="error",r.value=t}return r}(e.exports=o).prototype.finally=function(e){if("function"!=typeof e)return this;var r=this.constructor;return this.then(function(t){return r.resolve(e()).then(function(){return t})},function(t){return r.resolve(e()).then(function(){throw t})})},o.prototype.catch=function(t){return this.then(null,t)},o.prototype.then=function(t,e){if("function"!=typeof t&&this.state===a||"function"!=typeof e&&this.state===s)return this;var r=new this.constructor(u);this.state!==i?f(r,this.state===a?t:e,this.outcome):this.queue.push(new h(r,t,e));return r},h.prototype.callFulfilled=function(t){l.resolve(this.promise,t)},h.prototype.otherCallFulfilled=function(t){f(this.promise,this.onFulfilled,t)},h.prototype.callRejected=function(t){l.reject(this.promise,t)},h.prototype.otherCallRejected=function(t){f(this.promise,this.onRejected,t)},l.resolve=function(t,e){var r=p(d,e);if("error"===r.status)return l.reject(t,r.value);var i=r.value;if(i)c(t,i);else{t.state=a,t.outcome=e;for(var n=-1,s=t.queue.length;++n<s;)t.queue[n].callFulfilled(e)}return t},l.reject=function(t,e){t.state=s,t.outcome=e;for(var r=-1,i=t.queue.length;++r<i;)t.queue[r].callRejected(e);return t},o.resolve=function(t){if(t instanceof this)return t;return l.resolve(new this(u),t)},o.reject=function(t){var e=new this(u);return l.reject(e,t)},o.all=function(t){var r=this;if("[object Array]"!==Object.prototype.toString.call(t))return this.reject(new TypeError("must be an array"));var i=t.length,n=!1;if(!i)return this.resolve([]);var s=new Array(i),a=0,e=-1,o=new this(u);for(;++e<i;)h(t[e],e);return o;function h(t,e){r.resolve(t).then(function(t){s[e]=t,++a!==i||n||(n=!0,l.resolve(o,s))},function(t){n||(n=!0,l.reject(o,t))})}},o.race=function(t){var e=this;if("[object Array]"!==Object.prototype.toString.call(t))return this.reject(new TypeError("must be an array"));var r=t.length,i=!1;if(!r)return this.resolve([]);var n=-1,s=new this(u);for(;++n<r;)a=t[n],e.resolve(a).then(function(t){i||(i=!0,l.resolve(s,t))},function(t){i||(i=!0,l.reject(s,t))});var a;return s}},{immediate:36}],38:[function(t,e,r){"use strict";var i={};(0,t("./lib/utils/common").assign)(i,t("./lib/deflate"),t("./lib/inflate"),t("./lib/zlib/constants")),e.exports=i},{"./lib/deflate":39,"./lib/inflate":40,"./lib/utils/common":41,"./lib/zlib/constants":44}],39:[function(t,e,r){"use strict";var a=t("./zlib/deflate"),o=t("./utils/common"),h=t("./utils/strings"),n=t("./zlib/messages"),s=t("./zlib/zstream"),u=Object.prototype.toString,l=0,f=-1,d=0,c=8;function p(t){if(!(this instanceof p))return new p(t);this.options=o.assign({level:f,method:c,chunkSize:16384,windowBits:15,memLevel:8,strategy:d,to:""},t||{});var e=this.options;e.raw&&0<e.windowBits?e.windowBits=-e.windowBits:e.gzip&&0<e.windowBits&&e.windowBits<16&&(e.windowBits+=16),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new s,this.strm.avail_out=0;var r=a.deflateInit2(this.strm,e.level,e.method,e.windowBits,e.memLevel,e.strategy);if(r!==l)throw new Error(n[r]);if(e.header&&a.deflateSetHeader(this.strm,e.header),e.dictionary){var i;if(i="string"==typeof e.dictionary?h.string2buf(e.dictionary):"[object ArrayBuffer]"===u.call(e.dictionary)?new Uint8Array(e.dictionary):e.dictionary,(r=a.deflateSetDictionary(this.strm,i))!==l)throw new Error(n[r]);this._dict_set=!0}}function i(t,e){var r=new p(e);if(r.push(t,!0),r.err)throw r.msg||n[r.err];return r.result}p.prototype.push=function(t,e){var r,i,n=this.strm,s=this.options.chunkSize;if(this.ended)return!1;i=e===~~e?e:!0===e?4:0,"string"==typeof t?n.input=h.string2buf(t):"[object ArrayBuffer]"===u.call(t)?n.input=new Uint8Array(t):n.input=t,n.next_in=0,n.avail_in=n.input.length;do{if(0===n.avail_out&&(n.output=new o.Buf8(s),n.next_out=0,n.avail_out=s),1!==(r=a.deflate(n,i))&&r!==l)return this.onEnd(r),!(this.ended=!0);0!==n.avail_out&&(0!==n.avail_in||4!==i&&2!==i)||("string"===this.options.to?this.onData(h.buf2binstring(o.shrinkBuf(n.output,n.next_out))):this.onData(o.shrinkBuf(n.output,n.next_out)))}while((0<n.avail_in||0===n.avail_out)&&1!==r);return 4===i?(r=a.deflateEnd(this.strm),this.onEnd(r),this.ended=!0,r===l):2!==i||(this.onEnd(l),!(n.avail_out=0))},p.prototype.onData=function(t){this.chunks.push(t)},p.prototype.onEnd=function(t){t===l&&("string"===this.options.to?this.result=this.chunks.join(""):this.result=o.flattenChunks(this.chunks)),this.chunks=[],this.err=t,this.msg=this.strm.msg},r.Deflate=p,r.deflate=i,r.deflateRaw=function(t,e){return(e=e||{}).raw=!0,i(t,e)},r.gzip=function(t,e){return(e=e||{}).gzip=!0,i(t,e)}},{"./utils/common":41,"./utils/strings":42,"./zlib/deflate":46,"./zlib/messages":51,"./zlib/zstream":53}],40:[function(t,e,r){"use strict";var d=t("./zlib/inflate"),c=t("./utils/common"),p=t("./utils/strings"),m=t("./zlib/constants"),i=t("./zlib/messages"),n=t("./zlib/zstream"),s=t("./zlib/gzheader"),_=Object.prototype.toString;function a(t){if(!(this instanceof a))return new a(t);this.options=c.assign({chunkSize:16384,windowBits:0,to:""},t||{});var e=this.options;e.raw&&0<=e.windowBits&&e.windowBits<16&&(e.windowBits=-e.windowBits,0===e.windowBits&&(e.windowBits=-15)),!(0<=e.windowBits&&e.windowBits<16)||t&&t.windowBits||(e.windowBits+=32),15<e.windowBits&&e.windowBits<48&&0==(15&e.windowBits)&&(e.windowBits|=15),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new n,this.strm.avail_out=0;var r=d.inflateInit2(this.strm,e.windowBits);if(r!==m.Z_OK)throw new Error(i[r]);this.header=new s,d.inflateGetHeader(this.strm,this.header)}function o(t,e){var r=new a(e);if(r.push(t,!0),r.err)throw r.msg||i[r.err];return r.result}a.prototype.push=function(t,e){var r,i,n,s,a,o,h=this.strm,u=this.options.chunkSize,l=this.options.dictionary,f=!1;if(this.ended)return!1;i=e===~~e?e:!0===e?m.Z_FINISH:m.Z_NO_FLUSH,"string"==typeof t?h.input=p.binstring2buf(t):"[object ArrayBuffer]"===_.call(t)?h.input=new Uint8Array(t):h.input=t,h.next_in=0,h.avail_in=h.input.length;do{if(0===h.avail_out&&(h.output=new c.Buf8(u),h.next_out=0,h.avail_out=u),(r=d.inflate(h,m.Z_NO_FLUSH))===m.Z_NEED_DICT&&l&&(o="string"==typeof l?p.string2buf(l):"[object ArrayBuffer]"===_.call(l)?new Uint8Array(l):l,r=d.inflateSetDictionary(this.strm,o)),r===m.Z_BUF_ERROR&&!0===f&&(r=m.Z_OK,f=!1),r!==m.Z_STREAM_END&&r!==m.Z_OK)return this.onEnd(r),!(this.ended=!0);h.next_out&&(0!==h.avail_out&&r!==m.Z_STREAM_END&&(0!==h.avail_in||i!==m.Z_FINISH&&i!==m.Z_SYNC_FLUSH)||("string"===this.options.to?(n=p.utf8border(h.output,h.next_out),s=h.next_out-n,a=p.buf2string(h.output,n),h.next_out=s,h.avail_out=u-s,s&&c.arraySet(h.output,h.output,n,s,0),this.onData(a)):this.onData(c.shrinkBuf(h.output,h.next_out)))),0===h.avail_in&&0===h.avail_out&&(f=!0)}while((0<h.avail_in||0===h.avail_out)&&r!==m.Z_STREAM_END);return r===m.Z_STREAM_END&&(i=m.Z_FINISH),i===m.Z_FINISH?(r=d.inflateEnd(this.strm),this.onEnd(r),this.ended=!0,r===m.Z_OK):i!==m.Z_SYNC_FLUSH||(this.onEnd(m.Z_OK),!(h.avail_out=0))},a.prototype.onData=function(t){this.chunks.push(t)},a.prototype.onEnd=function(t){t===m.Z_OK&&("string"===this.options.to?this.result=this.chunks.join(""):this.result=c.flattenChunks(this.chunks)),this.chunks=[],this.err=t,this.msg=this.strm.msg},r.Inflate=a,r.inflate=o,r.inflateRaw=function(t,e){return(e=e||{}).raw=!0,o(t,e)},r.ungzip=o},{"./utils/common":41,"./utils/strings":42,"./zlib/constants":44,"./zlib/gzheader":47,"./zlib/inflate":49,"./zlib/messages":51,"./zlib/zstream":53}],41:[function(t,e,r){"use strict";var i="undefined"!=typeof Uint8Array&&"undefined"!=typeof Uint16Array&&"undefined"!=typeof Int32Array;r.assign=function(t){for(var e=Array.prototype.slice.call(arguments,1);e.length;){var r=e.shift();if(r){if("object"!=typeof r)throw new TypeError(r+"must be non-object");for(var i in r)r.hasOwnProperty(i)&&(t[i]=r[i])}}return t},r.shrinkBuf=function(t,e){return t.length===e?t:t.subarray?t.subarray(0,e):(t.length=e,t)};var n={arraySet:function(t,e,r,i,n){if(e.subarray&&t.subarray)t.set(e.subarray(r,r+i),n);else for(var s=0;s<i;s++)t[n+s]=e[r+s]},flattenChunks:function(t){var e,r,i,n,s,a;for(e=i=0,r=t.length;e<r;e++)i+=t[e].length;for(a=new Uint8Array(i),e=n=0,r=t.length;e<r;e++)s=t[e],a.set(s,n),n+=s.length;return a}},s={arraySet:function(t,e,r,i,n){for(var s=0;s<i;s++)t[n+s]=e[r+s]},flattenChunks:function(t){return[].concat.apply([],t)}};r.setTyped=function(t){t?(r.Buf8=Uint8Array,r.Buf16=Uint16Array,r.Buf32=Int32Array,r.assign(r,n)):(r.Buf8=Array,r.Buf16=Array,r.Buf32=Array,r.assign(r,s))},r.setTyped(i)},{}],42:[function(t,e,r){"use strict";var h=t("./common"),n=!0,s=!0;try{String.fromCharCode.apply(null,[0])}catch(t){n=!1}try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(t){s=!1}for(var u=new h.Buf8(256),i=0;i<256;i++)u[i]=252<=i?6:248<=i?5:240<=i?4:224<=i?3:192<=i?2:1;function l(t,e){if(e<65537&&(t.subarray&&s||!t.subarray&&n))return String.fromCharCode.apply(null,h.shrinkBuf(t,e));for(var r="",i=0;i<e;i++)r+=String.fromCharCode(t[i]);return r}u[254]=u[254]=1,r.string2buf=function(t){var e,r,i,n,s,a=t.length,o=0;for(n=0;n<a;n++)55296==(64512&(r=t.charCodeAt(n)))&&n+1<a&&56320==(64512&(i=t.charCodeAt(n+1)))&&(r=65536+(r-55296<<10)+(i-56320),n++),o+=r<128?1:r<2048?2:r<65536?3:4;for(e=new h.Buf8(o),n=s=0;s<o;n++)55296==(64512&(r=t.charCodeAt(n)))&&n+1<a&&56320==(64512&(i=t.charCodeAt(n+1)))&&(r=65536+(r-55296<<10)+(i-56320),n++),r<128?e[s++]=r:(r<2048?e[s++]=192|r>>>6:(r<65536?e[s++]=224|r>>>12:(e[s++]=240|r>>>18,e[s++]=128|r>>>12&63),e[s++]=128|r>>>6&63),e[s++]=128|63&r);return e},r.buf2binstring=function(t){return l(t,t.length)},r.binstring2buf=function(t){for(var e=new h.Buf8(t.length),r=0,i=e.length;r<i;r++)e[r]=t.charCodeAt(r);return e},r.buf2string=function(t,e){var r,i,n,s,a=e||t.length,o=new Array(2*a);for(r=i=0;r<a;)if((n=t[r++])<128)o[i++]=n;else if(4<(s=u[n]))o[i++]=65533,r+=s-1;else{for(n&=2===s?31:3===s?15:7;1<s&&r<a;)n=n<<6|63&t[r++],s--;1<s?o[i++]=65533:n<65536?o[i++]=n:(n-=65536,o[i++]=55296|n>>10&1023,o[i++]=56320|1023&n)}return l(o,i)},r.utf8border=function(t,e){var r;for((e=e||t.length)>t.length&&(e=t.length),r=e-1;0<=r&&128==(192&t[r]);)r--;return r<0?e:0===r?e:r+u[t[r]]>e?r:e}},{"./common":41}],43:[function(t,e,r){"use strict";e.exports=function(t,e,r,i){for(var n=65535&t|0,s=t>>>16&65535|0,a=0;0!==r;){for(r-=a=2e3<r?2e3:r;s=s+(n=n+e[i++]|0)|0,--a;);n%=65521,s%=65521}return n|s<<16|0}},{}],44:[function(t,e,r){"use strict";e.exports={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8}},{}],45:[function(t,e,r){"use strict";var o=function(){for(var t,e=[],r=0;r<256;r++){t=r;for(var i=0;i<8;i++)t=1&t?3988292384^t>>>1:t>>>1;e[r]=t}return e}();e.exports=function(t,e,r,i){var n=o,s=i+r;t^=-1;for(var a=i;a<s;a++)t=t>>>8^n[255&(t^e[a])];return-1^t}},{}],46:[function(t,e,r){"use strict";var h,d=t("../utils/common"),u=t("./trees"),c=t("./adler32"),p=t("./crc32"),i=t("./messages"),l=0,f=4,m=0,_=-2,g=-1,b=4,n=2,v=8,y=9,s=286,a=30,o=19,w=2*s+1,k=15,x=3,S=258,z=S+x+1,C=42,E=113,A=1,I=2,O=3,B=4;function R(t,e){return t.msg=i[e],e}function T(t){return(t<<1)-(4<t?9:0)}function D(t){for(var e=t.length;0<=--e;)t[e]=0}function F(t){var e=t.state,r=e.pending;r>t.avail_out&&(r=t.avail_out),0!==r&&(d.arraySet(t.output,e.pending_buf,e.pending_out,r,t.next_out),t.next_out+=r,e.pending_out+=r,t.total_out+=r,t.avail_out-=r,e.pending-=r,0===e.pending&&(e.pending_out=0))}function N(t,e){u._tr_flush_block(t,0<=t.block_start?t.block_start:-1,t.strstart-t.block_start,e),t.block_start=t.strstart,F(t.strm)}function U(t,e){t.pending_buf[t.pending++]=e}function P(t,e){t.pending_buf[t.pending++]=e>>>8&255,t.pending_buf[t.pending++]=255&e}function L(t,e){var r,i,n=t.max_chain_length,s=t.strstart,a=t.prev_length,o=t.nice_match,h=t.strstart>t.w_size-z?t.strstart-(t.w_size-z):0,u=t.window,l=t.w_mask,f=t.prev,d=t.strstart+S,c=u[s+a-1],p=u[s+a];t.prev_length>=t.good_match&&(n>>=2),o>t.lookahead&&(o=t.lookahead);do{if(u[(r=e)+a]===p&&u[r+a-1]===c&&u[r]===u[s]&&u[++r]===u[s+1]){s+=2,r++;do{}while(u[++s]===u[++r]&&u[++s]===u[++r]&&u[++s]===u[++r]&&u[++s]===u[++r]&&u[++s]===u[++r]&&u[++s]===u[++r]&&u[++s]===u[++r]&&u[++s]===u[++r]&&s<d);if(i=S-(d-s),s=d-S,a<i){if(t.match_start=e,o<=(a=i))break;c=u[s+a-1],p=u[s+a]}}}while((e=f[e&l])>h&&0!=--n);return a<=t.lookahead?a:t.lookahead}function j(t){var e,r,i,n,s,a,o,h,u,l,f=t.w_size;do{if(n=t.window_size-t.lookahead-t.strstart,t.strstart>=f+(f-z)){for(d.arraySet(t.window,t.window,f,f,0),t.match_start-=f,t.strstart-=f,t.block_start-=f,e=r=t.hash_size;i=t.head[--e],t.head[e]=f<=i?i-f:0,--r;);for(e=r=f;i=t.prev[--e],t.prev[e]=f<=i?i-f:0,--r;);n+=f}if(0===t.strm.avail_in)break;if(a=t.strm,o=t.window,h=t.strstart+t.lookahead,u=n,l=void 0,l=a.avail_in,u<l&&(l=u),r=0===l?0:(a.avail_in-=l,d.arraySet(o,a.input,a.next_in,l,h),1===a.state.wrap?a.adler=c(a.adler,o,l,h):2===a.state.wrap&&(a.adler=p(a.adler,o,l,h)),a.next_in+=l,a.total_in+=l,l),t.lookahead+=r,t.lookahead+t.insert>=x)for(s=t.strstart-t.insert,t.ins_h=t.window[s],t.ins_h=(t.ins_h<<t.hash_shift^t.window[s+1])&t.hash_mask;t.insert&&(t.ins_h=(t.ins_h<<t.hash_shift^t.window[s+x-1])&t.hash_mask,t.prev[s&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=s,s++,t.insert--,!(t.lookahead+t.insert<x)););}while(t.lookahead<z&&0!==t.strm.avail_in)}function Z(t,e){for(var r,i;;){if(t.lookahead<z){if(j(t),t.lookahead<z&&e===l)return A;if(0===t.lookahead)break}if(r=0,t.lookahead>=x&&(t.ins_h=(t.ins_h<<t.hash_shift^t.window[t.strstart+x-1])&t.hash_mask,r=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart),0!==r&&t.strstart-r<=t.w_size-z&&(t.match_length=L(t,r)),t.match_length>=x)if(i=u._tr_tally(t,t.strstart-t.match_start,t.match_length-x),t.lookahead-=t.match_length,t.match_length<=t.max_lazy_match&&t.lookahead>=x){for(t.match_length--;t.strstart++,t.ins_h=(t.ins_h<<t.hash_shift^t.window[t.strstart+x-1])&t.hash_mask,r=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart,0!=--t.match_length;);t.strstart++}else t.strstart+=t.match_length,t.match_length=0,t.ins_h=t.window[t.strstart],t.ins_h=(t.ins_h<<t.hash_shift^t.window[t.strstart+1])&t.hash_mask;else i=u._tr_tally(t,0,t.window[t.strstart]),t.lookahead--,t.strstart++;if(i&&(N(t,!1),0===t.strm.avail_out))return A}return t.insert=t.strstart<x-1?t.strstart:x-1,e===f?(N(t,!0),0===t.strm.avail_out?O:B):t.last_lit&&(N(t,!1),0===t.strm.avail_out)?A:I}function W(t,e){for(var r,i,n;;){if(t.lookahead<z){if(j(t),t.lookahead<z&&e===l)return A;if(0===t.lookahead)break}if(r=0,t.lookahead>=x&&(t.ins_h=(t.ins_h<<t.hash_shift^t.window[t.strstart+x-1])&t.hash_mask,r=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart),t.prev_length=t.match_length,t.prev_match=t.match_start,t.match_length=x-1,0!==r&&t.prev_length<t.max_lazy_match&&t.strstart-r<=t.w_size-z&&(t.match_length=L(t,r),t.match_length<=5&&(1===t.strategy||t.match_length===x&&4096<t.strstart-t.match_start)&&(t.match_length=x-1)),t.prev_length>=x&&t.match_length<=t.prev_length){for(n=t.strstart+t.lookahead-x,i=u._tr_tally(t,t.strstart-1-t.prev_match,t.prev_length-x),t.lookahead-=t.prev_length-1,t.prev_length-=2;++t.strstart<=n&&(t.ins_h=(t.ins_h<<t.hash_shift^t.window[t.strstart+x-1])&t.hash_mask,r=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart),0!=--t.prev_length;);if(t.match_available=0,t.match_length=x-1,t.strstart++,i&&(N(t,!1),0===t.strm.avail_out))return A}else if(t.match_available){if((i=u._tr_tally(t,0,t.window[t.strstart-1]))&&N(t,!1),t.strstart++,t.lookahead--,0===t.strm.avail_out)return A}else t.match_available=1,t.strstart++,t.lookahead--}return t.match_available&&(i=u._tr_tally(t,0,t.window[t.strstart-1]),t.match_available=0),t.insert=t.strstart<x-1?t.strstart:x-1,e===f?(N(t,!0),0===t.strm.avail_out?O:B):t.last_lit&&(N(t,!1),0===t.strm.avail_out)?A:I}function M(t,e,r,i,n){this.good_length=t,this.max_lazy=e,this.nice_length=r,this.max_chain=i,this.func=n}function H(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=v,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new d.Buf16(2*w),this.dyn_dtree=new d.Buf16(2*(2*a+1)),this.bl_tree=new d.Buf16(2*(2*o+1)),D(this.dyn_ltree),D(this.dyn_dtree),D(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new d.Buf16(k+1),this.heap=new d.Buf16(2*s+1),D(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new d.Buf16(2*s+1),D(this.depth),this.l_buf=0,this.lit_bufsize=0,this.last_lit=0,this.d_buf=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}function G(t){var e;return t&&t.state?(t.total_in=t.total_out=0,t.data_type=n,(e=t.state).pending=0,e.pending_out=0,e.wrap<0&&(e.wrap=-e.wrap),e.status=e.wrap?C:E,t.adler=2===e.wrap?0:1,e.last_flush=l,u._tr_init(e),m):R(t,_)}function K(t){var e=G(t);return e===m&&function(t){t.window_size=2*t.w_size,D(t.head),t.max_lazy_match=h[t.level].max_lazy,t.good_match=h[t.level].good_length,t.nice_match=h[t.level].nice_length,t.max_chain_length=h[t.level].max_chain,t.strstart=0,t.block_start=0,t.lookahead=0,t.insert=0,t.match_length=t.prev_length=x-1,t.match_available=0,t.ins_h=0}(t.state),e}function Y(t,e,r,i,n,s){if(!t)return _;var a=1;if(e===g&&(e=6),i<0?(a=0,i=-i):15<i&&(a=2,i-=16),n<1||y<n||r!==v||i<8||15<i||e<0||9<e||s<0||b<s)return R(t,_);8===i&&(i=9);var o=new H;return(t.state=o).strm=t,o.wrap=a,o.gzhead=null,o.w_bits=i,o.w_size=1<<o.w_bits,o.w_mask=o.w_size-1,o.hash_bits=n+7,o.hash_size=1<<o.hash_bits,o.hash_mask=o.hash_size-1,o.hash_shift=~~((o.hash_bits+x-1)/x),o.window=new d.Buf8(2*o.w_size),o.head=new d.Buf16(o.hash_size),o.prev=new d.Buf16(o.w_size),o.lit_bufsize=1<<n+6,o.pending_buf_size=4*o.lit_bufsize,o.pending_buf=new d.Buf8(o.pending_buf_size),o.d_buf=1*o.lit_bufsize,o.l_buf=3*o.lit_bufsize,o.level=e,o.strategy=s,o.method=r,K(t)}h=[new M(0,0,0,0,function(t,e){var r=65535;for(r>t.pending_buf_size-5&&(r=t.pending_buf_size-5);;){if(t.lookahead<=1){if(j(t),0===t.lookahead&&e===l)return A;if(0===t.lookahead)break}t.strstart+=t.lookahead,t.lookahead=0;var i=t.block_start+r;if((0===t.strstart||t.strstart>=i)&&(t.lookahead=t.strstart-i,t.strstart=i,N(t,!1),0===t.strm.avail_out))return A;if(t.strstart-t.block_start>=t.w_size-z&&(N(t,!1),0===t.strm.avail_out))return A}return t.insert=0,e===f?(N(t,!0),0===t.strm.avail_out?O:B):(t.strstart>t.block_start&&(N(t,!1),t.strm.avail_out),A)}),new M(4,4,8,4,Z),new M(4,5,16,8,Z),new M(4,6,32,32,Z),new M(4,4,16,16,W),new M(8,16,32,32,W),new M(8,16,128,128,W),new M(8,32,128,256,W),new M(32,128,258,1024,W),new M(32,258,258,4096,W)],r.deflateInit=function(t,e){return Y(t,e,v,15,8,0)},r.deflateInit2=Y,r.deflateReset=K,r.deflateResetKeep=G,r.deflateSetHeader=function(t,e){return t&&t.state?2!==t.state.wrap?_:(t.state.gzhead=e,m):_},r.deflate=function(t,e){var r,i,n,s;if(!t||!t.state||5<e||e<0)return t?R(t,_):_;if(i=t.state,!t.output||!t.input&&0!==t.avail_in||666===i.status&&e!==f)return R(t,0===t.avail_out?-5:_);if(i.strm=t,r=i.last_flush,i.last_flush=e,i.status===C)if(2===i.wrap)t.adler=0,U(i,31),U(i,139),U(i,8),i.gzhead?(U(i,(i.gzhead.text?1:0)+(i.gzhead.hcrc?2:0)+(i.gzhead.extra?4:0)+(i.gzhead.name?8:0)+(i.gzhead.comment?16:0)),U(i,255&i.gzhead.time),U(i,i.gzhead.time>>8&255),U(i,i.gzhead.time>>16&255),U(i,i.gzhead.time>>24&255),U(i,9===i.level?2:2<=i.strategy||i.level<2?4:0),U(i,255&i.gzhead.os),i.gzhead.extra&&i.gzhead.extra.length&&(U(i,255&i.gzhead.extra.length),U(i,i.gzhead.extra.length>>8&255)),i.gzhead.hcrc&&(t.adler=p(t.adler,i.pending_buf,i.pending,0)),i.gzindex=0,i.status=69):(U(i,0),U(i,0),U(i,0),U(i,0),U(i,0),U(i,9===i.level?2:2<=i.strategy||i.level<2?4:0),U(i,3),i.status=E);else{var a=v+(i.w_bits-8<<4)<<8;a|=(2<=i.strategy||i.level<2?0:i.level<6?1:6===i.level?2:3)<<6,0!==i.strstart&&(a|=32),a+=31-a%31,i.status=E,P(i,a),0!==i.strstart&&(P(i,t.adler>>>16),P(i,65535&t.adler)),t.adler=1}if(69===i.status)if(i.gzhead.extra){for(n=i.pending;i.gzindex<(65535&i.gzhead.extra.length)&&(i.pending!==i.pending_buf_size||(i.gzhead.hcrc&&i.pending>n&&(t.adler=p(t.adler,i.pending_buf,i.pending-n,n)),F(t),n=i.pending,i.pending!==i.pending_buf_size));)U(i,255&i.gzhead.extra[i.gzindex]),i.gzindex++;i.gzhead.hcrc&&i.pending>n&&(t.adler=p(t.adler,i.pending_buf,i.pending-n,n)),i.gzindex===i.gzhead.extra.length&&(i.gzindex=0,i.status=73)}else i.status=73;if(73===i.status)if(i.gzhead.name){n=i.pending;do{if(i.pending===i.pending_buf_size&&(i.gzhead.hcrc&&i.pending>n&&(t.adler=p(t.adler,i.pending_buf,i.pending-n,n)),F(t),n=i.pending,i.pending===i.pending_buf_size)){s=1;break}s=i.gzindex<i.gzhead.name.length?255&i.gzhead.name.charCodeAt(i.gzindex++):0,U(i,s)}while(0!==s);i.gzhead.hcrc&&i.pending>n&&(t.adler=p(t.adler,i.pending_buf,i.pending-n,n)),0===s&&(i.gzindex=0,i.status=91)}else i.status=91;if(91===i.status)if(i.gzhead.comment){n=i.pending;do{if(i.pending===i.pending_buf_size&&(i.gzhead.hcrc&&i.pending>n&&(t.adler=p(t.adler,i.pending_buf,i.pending-n,n)),F(t),n=i.pending,i.pending===i.pending_buf_size)){s=1;break}s=i.gzindex<i.gzhead.comment.length?255&i.gzhead.comment.charCodeAt(i.gzindex++):0,U(i,s)}while(0!==s);i.gzhead.hcrc&&i.pending>n&&(t.adler=p(t.adler,i.pending_buf,i.pending-n,n)),0===s&&(i.status=103)}else i.status=103;if(103===i.status&&(i.gzhead.hcrc?(i.pending+2>i.pending_buf_size&&F(t),i.pending+2<=i.pending_buf_size&&(U(i,255&t.adler),U(i,t.adler>>8&255),t.adler=0,i.status=E)):i.status=E),0!==i.pending){if(F(t),0===t.avail_out)return i.last_flush=-1,m}else if(0===t.avail_in&&T(e)<=T(r)&&e!==f)return R(t,-5);if(666===i.status&&0!==t.avail_in)return R(t,-5);if(0!==t.avail_in||0!==i.lookahead||e!==l&&666!==i.status){var o=2===i.strategy?function(t,e){for(var r;;){if(0===t.lookahead&&(j(t),0===t.lookahead)){if(e===l)return A;break}if(t.match_length=0,r=u._tr_tally(t,0,t.window[t.strstart]),t.lookahead--,t.strstart++,r&&(N(t,!1),0===t.strm.avail_out))return A}return t.insert=0,e===f?(N(t,!0),0===t.strm.avail_out?O:B):t.last_lit&&(N(t,!1),0===t.strm.avail_out)?A:I}(i,e):3===i.strategy?function(t,e){for(var r,i,n,s,a=t.window;;){if(t.lookahead<=S){if(j(t),t.lookahead<=S&&e===l)return A;if(0===t.lookahead)break}if(t.match_length=0,t.lookahead>=x&&0<t.strstart&&(i=a[n=t.strstart-1])===a[++n]&&i===a[++n]&&i===a[++n]){s=t.strstart+S;do{}while(i===a[++n]&&i===a[++n]&&i===a[++n]&&i===a[++n]&&i===a[++n]&&i===a[++n]&&i===a[++n]&&i===a[++n]&&n<s);t.match_length=S-(s-n),t.match_length>t.lookahead&&(t.match_length=t.lookahead)}if(t.match_length>=x?(r=u._tr_tally(t,1,t.match_length-x),t.lookahead-=t.match_length,t.strstart+=t.match_length,t.match_length=0):(r=u._tr_tally(t,0,t.window[t.strstart]),t.lookahead--,t.strstart++),r&&(N(t,!1),0===t.strm.avail_out))return A}return t.insert=0,e===f?(N(t,!0),0===t.strm.avail_out?O:B):t.last_lit&&(N(t,!1),0===t.strm.avail_out)?A:I}(i,e):h[i.level].func(i,e);if(o!==O&&o!==B||(i.status=666),o===A||o===O)return 0===t.avail_out&&(i.last_flush=-1),m;if(o===I&&(1===e?u._tr_align(i):5!==e&&(u._tr_stored_block(i,0,0,!1),3===e&&(D(i.head),0===i.lookahead&&(i.strstart=0,i.block_start=0,i.insert=0))),F(t),0===t.avail_out))return i.last_flush=-1,m}return e!==f?m:i.wrap<=0?1:(2===i.wrap?(U(i,255&t.adler),U(i,t.adler>>8&255),U(i,t.adler>>16&255),U(i,t.adler>>24&255),U(i,255&t.total_in),U(i,t.total_in>>8&255),U(i,t.total_in>>16&255),U(i,t.total_in>>24&255)):(P(i,t.adler>>>16),P(i,65535&t.adler)),F(t),0<i.wrap&&(i.wrap=-i.wrap),0!==i.pending?m:1)},r.deflateEnd=function(t){var e;return t&&t.state?(e=t.state.status)!==C&&69!==e&&73!==e&&91!==e&&103!==e&&e!==E&&666!==e?R(t,_):(t.state=null,e===E?R(t,-3):m):_},r.deflateSetDictionary=function(t,e){var r,i,n,s,a,o,h,u,l=e.length;if(!t||!t.state)return _;if(2===(s=(r=t.state).wrap)||1===s&&r.status!==C||r.lookahead)return _;for(1===s&&(t.adler=c(t.adler,e,l,0)),r.wrap=0,l>=r.w_size&&(0===s&&(D(r.head),r.strstart=0,r.block_start=0,r.insert=0),u=new d.Buf8(r.w_size),d.arraySet(u,e,l-r.w_size,r.w_size,0),e=u,l=r.w_size),a=t.avail_in,o=t.next_in,h=t.input,t.avail_in=l,t.next_in=0,t.input=e,j(r);r.lookahead>=x;){for(i=r.strstart,n=r.lookahead-(x-1);r.ins_h=(r.ins_h<<r.hash_shift^r.window[i+x-1])&r.hash_mask,r.prev[i&r.w_mask]=r.head[r.ins_h],r.head[r.ins_h]=i,i++,--n;);r.strstart=i,r.lookahead=x-1,j(r)}return r.strstart+=r.lookahead,r.block_start=r.strstart,r.insert=r.lookahead,r.lookahead=0,r.match_length=r.prev_length=x-1,r.match_available=0,t.next_in=o,t.input=h,t.avail_in=a,r.wrap=s,m},r.deflateInfo="pako deflate (from Nodeca project)"},{"../utils/common":41,"./adler32":43,"./crc32":45,"./messages":51,"./trees":52}],47:[function(t,e,r){"use strict";e.exports=function(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name="",this.comment="",this.hcrc=0,this.done=!1}},{}],48:[function(t,e,r){"use strict";e.exports=function(t,e){var r,i,n,s,a,o,h,u,l,f,d,c,p,m,_,g,b,v,y,w,k,x,S,z,C;r=t.state,i=t.next_in,z=t.input,n=i+(t.avail_in-5),s=t.next_out,C=t.output,a=s-(e-t.avail_out),o=s+(t.avail_out-257),h=r.dmax,u=r.wsize,l=r.whave,f=r.wnext,d=r.window,c=r.hold,p=r.bits,m=r.lencode,_=r.distcode,g=(1<<r.lenbits)-1,b=(1<<r.distbits)-1;t:do{p<15&&(c+=z[i++]<<p,p+=8,c+=z[i++]<<p,p+=8),v=m[c&g];e:for(;;){if(c>>>=y=v>>>24,p-=y,0===(y=v>>>16&255))C[s++]=65535&v;else{if(!(16&y)){if(0==(64&y)){v=m[(65535&v)+(c&(1<<y)-1)];continue e}if(32&y){r.mode=12;break t}t.msg="invalid literal/length code",r.mode=30;break t}w=65535&v,(y&=15)&&(p<y&&(c+=z[i++]<<p,p+=8),w+=c&(1<<y)-1,c>>>=y,p-=y),p<15&&(c+=z[i++]<<p,p+=8,c+=z[i++]<<p,p+=8),v=_[c&b];r:for(;;){if(c>>>=y=v>>>24,p-=y,!(16&(y=v>>>16&255))){if(0==(64&y)){v=_[(65535&v)+(c&(1<<y)-1)];continue r}t.msg="invalid distance code",r.mode=30;break t}if(k=65535&v,p<(y&=15)&&(c+=z[i++]<<p,(p+=8)<y&&(c+=z[i++]<<p,p+=8)),h<(k+=c&(1<<y)-1)){t.msg="invalid distance too far back",r.mode=30;break t}if(c>>>=y,p-=y,(y=s-a)<k){if(l<(y=k-y)&&r.sane){t.msg="invalid distance too far back",r.mode=30;break t}if(S=d,(x=0)===f){if(x+=u-y,y<w){for(w-=y;C[s++]=d[x++],--y;);x=s-k,S=C}}else if(f<y){if(x+=u+f-y,(y-=f)<w){for(w-=y;C[s++]=d[x++],--y;);if(x=0,f<w){for(w-=y=f;C[s++]=d[x++],--y;);x=s-k,S=C}}}else if(x+=f-y,y<w){for(w-=y;C[s++]=d[x++],--y;);x=s-k,S=C}for(;2<w;)C[s++]=S[x++],C[s++]=S[x++],C[s++]=S[x++],w-=3;w&&(C[s++]=S[x++],1<w&&(C[s++]=S[x++]))}else{for(x=s-k;C[s++]=C[x++],C[s++]=C[x++],C[s++]=C[x++],2<(w-=3););w&&(C[s++]=C[x++],1<w&&(C[s++]=C[x++]))}break}}break}}while(i<n&&s<o);i-=w=p>>3,c&=(1<<(p-=w<<3))-1,t.next_in=i,t.next_out=s,t.avail_in=i<n?n-i+5:5-(i-n),t.avail_out=s<o?o-s+257:257-(s-o),r.hold=c,r.bits=p}},{}],49:[function(t,e,r){"use strict";var I=t("../utils/common"),O=t("./adler32"),B=t("./crc32"),R=t("./inffast"),T=t("./inftrees"),D=1,F=2,N=0,U=-2,P=1,i=852,n=592;function L(t){return(t>>>24&255)+(t>>>8&65280)+((65280&t)<<8)+((255&t)<<24)}function s(){this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new I.Buf16(320),this.work=new I.Buf16(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}function a(t){var e;return t&&t.state?(e=t.state,t.total_in=t.total_out=e.total=0,t.msg="",e.wrap&&(t.adler=1&e.wrap),e.mode=P,e.last=0,e.havedict=0,e.dmax=32768,e.head=null,e.hold=0,e.bits=0,e.lencode=e.lendyn=new I.Buf32(i),e.distcode=e.distdyn=new I.Buf32(n),e.sane=1,e.back=-1,N):U}function o(t){var e;return t&&t.state?((e=t.state).wsize=0,e.whave=0,e.wnext=0,a(t)):U}function h(t,e){var r,i;return t&&t.state?(i=t.state,e<0?(r=0,e=-e):(r=1+(e>>4),e<48&&(e&=15)),e&&(e<8||15<e)?U:(null!==i.window&&i.wbits!==e&&(i.window=null),i.wrap=r,i.wbits=e,o(t))):U}function u(t,e){var r,i;return t?(i=new s,(t.state=i).window=null,(r=h(t,e))!==N&&(t.state=null),r):U}var l,f,d=!0;function j(t){if(d){var e;for(l=new I.Buf32(512),f=new I.Buf32(32),e=0;e<144;)t.lens[e++]=8;for(;e<256;)t.lens[e++]=9;for(;e<280;)t.lens[e++]=7;for(;e<288;)t.lens[e++]=8;for(T(D,t.lens,0,288,l,0,t.work,{bits:9}),e=0;e<32;)t.lens[e++]=5;T(F,t.lens,0,32,f,0,t.work,{bits:5}),d=!1}t.lencode=l,t.lenbits=9,t.distcode=f,t.distbits=5}function Z(t,e,r,i){var n,s=t.state;return null===s.window&&(s.wsize=1<<s.wbits,s.wnext=0,s.whave=0,s.window=new I.Buf8(s.wsize)),i>=s.wsize?(I.arraySet(s.window,e,r-s.wsize,s.wsize,0),s.wnext=0,s.whave=s.wsize):(i<(n=s.wsize-s.wnext)&&(n=i),I.arraySet(s.window,e,r-i,n,s.wnext),(i-=n)?(I.arraySet(s.window,e,r-i,i,0),s.wnext=i,s.whave=s.wsize):(s.wnext+=n,s.wnext===s.wsize&&(s.wnext=0),s.whave<s.wsize&&(s.whave+=n))),0}r.inflateReset=o,r.inflateReset2=h,r.inflateResetKeep=a,r.inflateInit=function(t){return u(t,15)},r.inflateInit2=u,r.inflate=function(t,e){var r,i,n,s,a,o,h,u,l,f,d,c,p,m,_,g,b,v,y,w,k,x,S,z,C=0,E=new I.Buf8(4),A=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];if(!t||!t.state||!t.output||!t.input&&0!==t.avail_in)return U;12===(r=t.state).mode&&(r.mode=13),a=t.next_out,n=t.output,h=t.avail_out,s=t.next_in,i=t.input,o=t.avail_in,u=r.hold,l=r.bits,f=o,d=h,x=N;t:for(;;)switch(r.mode){case P:if(0===r.wrap){r.mode=13;break}for(;l<16;){if(0===o)break t;o--,u+=i[s++]<<l,l+=8}if(2&r.wrap&&35615===u){E[r.check=0]=255&u,E[1]=u>>>8&255,r.check=B(r.check,E,2,0),l=u=0,r.mode=2;break}if(r.flags=0,r.head&&(r.head.done=!1),!(1&r.wrap)||(((255&u)<<8)+(u>>8))%31){t.msg="incorrect header check",r.mode=30;break}if(8!=(15&u)){t.msg="unknown compression method",r.mode=30;break}if(l-=4,k=8+(15&(u>>>=4)),0===r.wbits)r.wbits=k;else if(k>r.wbits){t.msg="invalid window size",r.mode=30;break}r.dmax=1<<k,t.adler=r.check=1,r.mode=512&u?10:12,l=u=0;break;case 2:for(;l<16;){if(0===o)break t;o--,u+=i[s++]<<l,l+=8}if(r.flags=u,8!=(255&r.flags)){t.msg="unknown compression method",r.mode=30;break}if(57344&r.flags){t.msg="unknown header flags set",r.mode=30;break}r.head&&(r.head.text=u>>8&1),512&r.flags&&(E[0]=255&u,E[1]=u>>>8&255,r.check=B(r.check,E,2,0)),l=u=0,r.mode=3;case 3:for(;l<32;){if(0===o)break t;o--,u+=i[s++]<<l,l+=8}r.head&&(r.head.time=u),512&r.flags&&(E[0]=255&u,E[1]=u>>>8&255,E[2]=u>>>16&255,E[3]=u>>>24&255,r.check=B(r.check,E,4,0)),l=u=0,r.mode=4;case 4:for(;l<16;){if(0===o)break t;o--,u+=i[s++]<<l,l+=8}r.head&&(r.head.xflags=255&u,r.head.os=u>>8),512&r.flags&&(E[0]=255&u,E[1]=u>>>8&255,r.check=B(r.check,E,2,0)),l=u=0,r.mode=5;case 5:if(1024&r.flags){for(;l<16;){if(0===o)break t;o--,u+=i[s++]<<l,l+=8}r.length=u,r.head&&(r.head.extra_len=u),512&r.flags&&(E[0]=255&u,E[1]=u>>>8&255,r.check=B(r.check,E,2,0)),l=u=0}else r.head&&(r.head.extra=null);r.mode=6;case 6:if(1024&r.flags&&(o<(c=r.length)&&(c=o),c&&(r.head&&(k=r.head.extra_len-r.length,r.head.extra||(r.head.extra=new Array(r.head.extra_len)),I.arraySet(r.head.extra,i,s,c,k)),512&r.flags&&(r.check=B(r.check,i,c,s)),o-=c,s+=c,r.length-=c),r.length))break t;r.length=0,r.mode=7;case 7:if(2048&r.flags){if(0===o)break t;for(c=0;k=i[s+c++],r.head&&k&&r.length<65536&&(r.head.name+=String.fromCharCode(k)),k&&c<o;);if(512&r.flags&&(r.check=B(r.check,i,c,s)),o-=c,s+=c,k)break t}else r.head&&(r.head.name=null);r.length=0,r.mode=8;case 8:if(4096&r.flags){if(0===o)break t;for(c=0;k=i[s+c++],r.head&&k&&r.length<65536&&(r.head.comment+=String.fromCharCode(k)),k&&c<o;);if(512&r.flags&&(r.check=B(r.check,i,c,s)),o-=c,s+=c,k)break t}else r.head&&(r.head.comment=null);r.mode=9;case 9:if(512&r.flags){for(;l<16;){if(0===o)break t;o--,u+=i[s++]<<l,l+=8}if(u!==(65535&r.check)){t.msg="header crc mismatch",r.mode=30;break}l=u=0}r.head&&(r.head.hcrc=r.flags>>9&1,r.head.done=!0),t.adler=r.check=0,r.mode=12;break;case 10:for(;l<32;){if(0===o)break t;o--,u+=i[s++]<<l,l+=8}t.adler=r.check=L(u),l=u=0,r.mode=11;case 11:if(0===r.havedict)return t.next_out=a,t.avail_out=h,t.next_in=s,t.avail_in=o,r.hold=u,r.bits=l,2;t.adler=r.check=1,r.mode=12;case 12:if(5===e||6===e)break t;case 13:if(r.last){u>>>=7&l,l-=7&l,r.mode=27;break}for(;l<3;){if(0===o)break t;o--,u+=i[s++]<<l,l+=8}switch(r.last=1&u,l-=1,3&(u>>>=1)){case 0:r.mode=14;break;case 1:if(j(r),r.mode=20,6!==e)break;u>>>=2,l-=2;break t;case 2:r.mode=17;break;case 3:t.msg="invalid block type",r.mode=30}u>>>=2,l-=2;break;case 14:for(u>>>=7&l,l-=7&l;l<32;){if(0===o)break t;o--,u+=i[s++]<<l,l+=8}if((65535&u)!=(u>>>16^65535)){t.msg="invalid stored block lengths",r.mode=30;break}if(r.length=65535&u,l=u=0,r.mode=15,6===e)break t;case 15:r.mode=16;case 16:if(c=r.length){if(o<c&&(c=o),h<c&&(c=h),0===c)break t;I.arraySet(n,i,s,c,a),o-=c,s+=c,h-=c,a+=c,r.length-=c;break}r.mode=12;break;case 17:for(;l<14;){if(0===o)break t;o--,u+=i[s++]<<l,l+=8}if(r.nlen=257+(31&u),u>>>=5,l-=5,r.ndist=1+(31&u),u>>>=5,l-=5,r.ncode=4+(15&u),u>>>=4,l-=4,286<r.nlen||30<r.ndist){t.msg="too many length or distance symbols",r.mode=30;break}r.have=0,r.mode=18;case 18:for(;r.have<r.ncode;){for(;l<3;){if(0===o)break t;o--,u+=i[s++]<<l,l+=8}r.lens[A[r.have++]]=7&u,u>>>=3,l-=3}for(;r.have<19;)r.lens[A[r.have++]]=0;if(r.lencode=r.lendyn,r.lenbits=7,S={bits:r.lenbits},x=T(0,r.lens,0,19,r.lencode,0,r.work,S),r.lenbits=S.bits,x){t.msg="invalid code lengths set",r.mode=30;break}r.have=0,r.mode=19;case 19:for(;r.have<r.nlen+r.ndist;){for(;g=(C=r.lencode[u&(1<<r.lenbits)-1])>>>16&255,b=65535&C,!((_=C>>>24)<=l);){if(0===o)break t;o--,u+=i[s++]<<l,l+=8}if(b<16)u>>>=_,l-=_,r.lens[r.have++]=b;else{if(16===b){for(z=_+2;l<z;){if(0===o)break t;o--,u+=i[s++]<<l,l+=8}if(u>>>=_,l-=_,0===r.have){t.msg="invalid bit length repeat",r.mode=30;break}k=r.lens[r.have-1],c=3+(3&u),u>>>=2,l-=2}else if(17===b){for(z=_+3;l<z;){if(0===o)break t;o--,u+=i[s++]<<l,l+=8}l-=_,k=0,c=3+(7&(u>>>=_)),u>>>=3,l-=3}else{for(z=_+7;l<z;){if(0===o)break t;o--,u+=i[s++]<<l,l+=8}l-=_,k=0,c=11+(127&(u>>>=_)),u>>>=7,l-=7}if(r.have+c>r.nlen+r.ndist){t.msg="invalid bit length repeat",r.mode=30;break}for(;c--;)r.lens[r.have++]=k}}if(30===r.mode)break;if(0===r.lens[256]){t.msg="invalid code -- missing end-of-block",r.mode=30;break}if(r.lenbits=9,S={bits:r.lenbits},x=T(D,r.lens,0,r.nlen,r.lencode,0,r.work,S),r.lenbits=S.bits,x){t.msg="invalid literal/lengths set",r.mode=30;break}if(r.distbits=6,r.distcode=r.distdyn,S={bits:r.distbits},x=T(F,r.lens,r.nlen,r.ndist,r.distcode,0,r.work,S),r.distbits=S.bits,x){t.msg="invalid distances set",r.mode=30;break}if(r.mode=20,6===e)break t;case 20:r.mode=21;case 21:if(6<=o&&258<=h){t.next_out=a,t.avail_out=h,t.next_in=s,t.avail_in=o,r.hold=u,r.bits=l,R(t,d),a=t.next_out,n=t.output,h=t.avail_out,s=t.next_in,i=t.input,o=t.avail_in,u=r.hold,l=r.bits,12===r.mode&&(r.back=-1);break}for(r.back=0;g=(C=r.lencode[u&(1<<r.lenbits)-1])>>>16&255,b=65535&C,!((_=C>>>24)<=l);){if(0===o)break t;o--,u+=i[s++]<<l,l+=8}if(g&&0==(240&g)){for(v=_,y=g,w=b;g=(C=r.lencode[w+((u&(1<<v+y)-1)>>v)])>>>16&255,b=65535&C,!(v+(_=C>>>24)<=l);){if(0===o)break t;o--,u+=i[s++]<<l,l+=8}u>>>=v,l-=v,r.back+=v}if(u>>>=_,l-=_,r.back+=_,r.length=b,0===g){r.mode=26;break}if(32&g){r.back=-1,r.mode=12;break}if(64&g){t.msg="invalid literal/length code",r.mode=30;break}r.extra=15&g,r.mode=22;case 22:if(r.extra){for(z=r.extra;l<z;){if(0===o)break t;o--,u+=i[s++]<<l,l+=8}r.length+=u&(1<<r.extra)-1,u>>>=r.extra,l-=r.extra,r.back+=r.extra}r.was=r.length,r.mode=23;case 23:for(;g=(C=r.distcode[u&(1<<r.distbits)-1])>>>16&255,b=65535&C,!((_=C>>>24)<=l);){if(0===o)break t;o--,u+=i[s++]<<l,l+=8}if(0==(240&g)){for(v=_,y=g,w=b;g=(C=r.distcode[w+((u&(1<<v+y)-1)>>v)])>>>16&255,b=65535&C,!(v+(_=C>>>24)<=l);){if(0===o)break t;o--,u+=i[s++]<<l,l+=8}u>>>=v,l-=v,r.back+=v}if(u>>>=_,l-=_,r.back+=_,64&g){t.msg="invalid distance code",r.mode=30;break}r.offset=b,r.extra=15&g,r.mode=24;case 24:if(r.extra){for(z=r.extra;l<z;){if(0===o)break t;o--,u+=i[s++]<<l,l+=8}r.offset+=u&(1<<r.extra)-1,u>>>=r.extra,l-=r.extra,r.back+=r.extra}if(r.offset>r.dmax){t.msg="invalid distance too far back",r.mode=30;break}r.mode=25;case 25:if(0===h)break t;if(c=d-h,r.offset>c){if((c=r.offset-c)>r.whave&&r.sane){t.msg="invalid distance too far back",r.mode=30;break}p=c>r.wnext?(c-=r.wnext,r.wsize-c):r.wnext-c,c>r.length&&(c=r.length),m=r.window}else m=n,p=a-r.offset,c=r.length;for(h<c&&(c=h),h-=c,r.length-=c;n[a++]=m[p++],--c;);0===r.length&&(r.mode=21);break;case 26:if(0===h)break t;n[a++]=r.length,h--,r.mode=21;break;case 27:if(r.wrap){for(;l<32;){if(0===o)break t;o--,u|=i[s++]<<l,l+=8}if(d-=h,t.total_out+=d,r.total+=d,d&&(t.adler=r.check=r.flags?B(r.check,n,d,a-d):O(r.check,n,d,a-d)),d=h,(r.flags?u:L(u))!==r.check){t.msg="incorrect data check",r.mode=30;break}l=u=0}r.mode=28;case 28:if(r.wrap&&r.flags){for(;l<32;){if(0===o)break t;o--,u+=i[s++]<<l,l+=8}if(u!==(4294967295&r.total)){t.msg="incorrect length check",r.mode=30;break}l=u=0}r.mode=29;case 29:x=1;break t;case 30:x=-3;break t;case 31:return-4;case 32:default:return U}return t.next_out=a,t.avail_out=h,t.next_in=s,t.avail_in=o,r.hold=u,r.bits=l,(r.wsize||d!==t.avail_out&&r.mode<30&&(r.mode<27||4!==e))&&Z(t,t.output,t.next_out,d-t.avail_out)?(r.mode=31,-4):(f-=t.avail_in,d-=t.avail_out,t.total_in+=f,t.total_out+=d,r.total+=d,r.wrap&&d&&(t.adler=r.check=r.flags?B(r.check,n,d,t.next_out-d):O(r.check,n,d,t.next_out-d)),t.data_type=r.bits+(r.last?64:0)+(12===r.mode?128:0)+(20===r.mode||15===r.mode?256:0),(0==f&&0===d||4===e)&&x===N&&(x=-5),x)},r.inflateEnd=function(t){if(!t||!t.state)return U;var e=t.state;return e.window&&(e.window=null),t.state=null,N},r.inflateGetHeader=function(t,e){var r;return t&&t.state?0==(2&(r=t.state).wrap)?U:((r.head=e).done=!1,N):U},r.inflateSetDictionary=function(t,e){var r,i=e.length;return t&&t.state?0!==(r=t.state).wrap&&11!==r.mode?U:11===r.mode&&O(1,e,i,0)!==r.check?-3:Z(t,e,i,i)?(r.mode=31,-4):(r.havedict=1,N):U},r.inflateInfo="pako inflate (from Nodeca project)"},{"../utils/common":41,"./adler32":43,"./crc32":45,"./inffast":48,"./inftrees":50}],50:[function(t,e,r){"use strict";var D=t("../utils/common"),F=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],N=[16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78],U=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0],P=[16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64];e.exports=function(t,e,r,i,n,s,a,o){var h,u,l,f,d,c,p,m,_,g=o.bits,b=0,v=0,y=0,w=0,k=0,x=0,S=0,z=0,C=0,E=0,A=null,I=0,O=new D.Buf16(16),B=new D.Buf16(16),R=null,T=0;for(b=0;b<=15;b++)O[b]=0;for(v=0;v<i;v++)O[e[r+v]]++;for(k=g,w=15;1<=w&&0===O[w];w--);if(w<k&&(k=w),0===w)return n[s++]=20971520,n[s++]=20971520,o.bits=1,0;for(y=1;y<w&&0===O[y];y++);for(k<y&&(k=y),b=z=1;b<=15;b++)if(z<<=1,(z-=O[b])<0)return-1;if(0<z&&(0===t||1!==w))return-1;for(B[1]=0,b=1;b<15;b++)B[b+1]=B[b]+O[b];for(v=0;v<i;v++)0!==e[r+v]&&(a[B[e[r+v]]++]=v);if(c=0===t?(A=R=a,19):1===t?(A=F,I-=257,R=N,T-=257,256):(A=U,R=P,-1),b=y,d=s,S=v=E=0,l=-1,f=(C=1<<(x=k))-1,1===t&&852<C||2===t&&592<C)return 1;for(;;){for(p=b-S,_=a[v]<c?(m=0,a[v]):a[v]>c?(m=R[T+a[v]],A[I+a[v]]):(m=96,0),h=1<<b-S,y=u=1<<x;n[d+(E>>S)+(u-=h)]=p<<24|m<<16|_|0,0!==u;);for(h=1<<b-1;E&h;)h>>=1;if(0!==h?(E&=h-1,E+=h):E=0,v++,0==--O[b]){if(b===w)break;b=e[r+a[v]]}if(k<b&&(E&f)!==l){for(0===S&&(S=k),d+=y,z=1<<(x=b-S);x+S<w&&!((z-=O[x+S])<=0);)x++,z<<=1;if(C+=1<<x,1===t&&852<C||2===t&&592<C)return 1;n[l=E&f]=k<<24|x<<16|d-s|0}}return 0!==E&&(n[d+E]=b-S<<24|64<<16|0),o.bits=k,0}},{"../utils/common":41}],51:[function(t,e,r){"use strict";e.exports={2:"need dictionary",1:"stream end",0:"","-1":"file error","-2":"stream error","-3":"data error","-4":"insufficient memory","-5":"buffer error","-6":"incompatible version"}},{}],52:[function(t,e,r){"use strict";var n=t("../utils/common"),o=0,h=1;function i(t){for(var e=t.length;0<=--e;)t[e]=0}var s=0,a=29,u=256,l=u+1+a,f=30,d=19,_=2*l+1,g=15,c=16,p=7,m=256,b=16,v=17,y=18,w=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0],k=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],x=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7],S=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],z=new Array(2*(l+2));i(z);var C=new Array(2*f);i(C);var E=new Array(512);i(E);var A=new Array(256);i(A);var I=new Array(a);i(I);var O,B,R,T=new Array(f);function D(t,e,r,i,n){this.static_tree=t,this.extra_bits=e,this.extra_base=r,this.elems=i,this.max_length=n,this.has_stree=t&&t.length}function F(t,e){this.dyn_tree=t,this.max_code=0,this.stat_desc=e}function N(t){return t<256?E[t]:E[256+(t>>>7)]}function U(t,e){t.pending_buf[t.pending++]=255&e,t.pending_buf[t.pending++]=e>>>8&255}function P(t,e,r){t.bi_valid>c-r?(t.bi_buf|=e<<t.bi_valid&65535,U(t,t.bi_buf),t.bi_buf=e>>c-t.bi_valid,t.bi_valid+=r-c):(t.bi_buf|=e<<t.bi_valid&65535,t.bi_valid+=r)}function L(t,e,r){P(t,r[2*e],r[2*e+1])}function j(t,e){for(var r=0;r|=1&t,t>>>=1,r<<=1,0<--e;);return r>>>1}function Z(t,e,r){var i,n,s=new Array(g+1),a=0;for(i=1;i<=g;i++)s[i]=a=a+r[i-1]<<1;for(n=0;n<=e;n++){var o=t[2*n+1];0!==o&&(t[2*n]=j(s[o]++,o))}}function W(t){var e;for(e=0;e<l;e++)t.dyn_ltree[2*e]=0;for(e=0;e<f;e++)t.dyn_dtree[2*e]=0;for(e=0;e<d;e++)t.bl_tree[2*e]=0;t.dyn_ltree[2*m]=1,t.opt_len=t.static_len=0,t.last_lit=t.matches=0}function M(t){8<t.bi_valid?U(t,t.bi_buf):0<t.bi_valid&&(t.pending_buf[t.pending++]=t.bi_buf),t.bi_buf=0,t.bi_valid=0}function H(t,e,r,i){var n=2*e,s=2*r;return t[n]<t[s]||t[n]===t[s]&&i[e]<=i[r]}function G(t,e,r){for(var i=t.heap[r],n=r<<1;n<=t.heap_len&&(n<t.heap_len&&H(e,t.heap[n+1],t.heap[n],t.depth)&&n++,!H(e,i,t.heap[n],t.depth));)t.heap[r]=t.heap[n],r=n,n<<=1;t.heap[r]=i}function K(t,e,r){var i,n,s,a,o=0;if(0!==t.last_lit)for(;i=t.pending_buf[t.d_buf+2*o]<<8|t.pending_buf[t.d_buf+2*o+1],n=t.pending_buf[t.l_buf+o],o++,0===i?L(t,n,e):(L(t,(s=A[n])+u+1,e),0!==(a=w[s])&&P(t,n-=I[s],a),L(t,s=N(--i),r),0!==(a=k[s])&&P(t,i-=T[s],a)),o<t.last_lit;);L(t,m,e)}function Y(t,e){var r,i,n,s=e.dyn_tree,a=e.stat_desc.static_tree,o=e.stat_desc.has_stree,h=e.stat_desc.elems,u=-1;for(t.heap_len=0,t.heap_max=_,r=0;r<h;r++)0!==s[2*r]?(t.heap[++t.heap_len]=u=r,t.depth[r]=0):s[2*r+1]=0;for(;t.heap_len<2;)s[2*(n=t.heap[++t.heap_len]=u<2?++u:0)]=1,t.depth[n]=0,t.opt_len--,o&&(t.static_len-=a[2*n+1]);for(e.max_code=u,r=t.heap_len>>1;1<=r;r--)G(t,s,r);for(n=h;r=t.heap[1],t.heap[1]=t.heap[t.heap_len--],G(t,s,1),i=t.heap[1],t.heap[--t.heap_max]=r,t.heap[--t.heap_max]=i,s[2*n]=s[2*r]+s[2*i],t.depth[n]=(t.depth[r]>=t.depth[i]?t.depth[r]:t.depth[i])+1,s[2*r+1]=s[2*i+1]=n,t.heap[1]=n++,G(t,s,1),2<=t.heap_len;);t.heap[--t.heap_max]=t.heap[1],function(t,e){var r,i,n,s,a,o,h=e.dyn_tree,u=e.max_code,l=e.stat_desc.static_tree,f=e.stat_desc.has_stree,d=e.stat_desc.extra_bits,c=e.stat_desc.extra_base,p=e.stat_desc.max_length,m=0;for(s=0;s<=g;s++)t.bl_count[s]=0;for(h[2*t.heap[t.heap_max]+1]=0,r=t.heap_max+1;r<_;r++)p<(s=h[2*h[2*(i=t.heap[r])+1]+1]+1)&&(s=p,m++),h[2*i+1]=s,u<i||(t.bl_count[s]++,a=0,c<=i&&(a=d[i-c]),o=h[2*i],t.opt_len+=o*(s+a),f&&(t.static_len+=o*(l[2*i+1]+a)));if(0!==m){do{for(s=p-1;0===t.bl_count[s];)s--;t.bl_count[s]--,t.bl_count[s+1]+=2,t.bl_count[p]--,m-=2}while(0<m);for(s=p;0!==s;s--)for(i=t.bl_count[s];0!==i;)u<(n=t.heap[--r])||(h[2*n+1]!==s&&(t.opt_len+=(s-h[2*n+1])*h[2*n],h[2*n+1]=s),i--)}}(t,e),Z(s,u,t.bl_count)}function X(t,e,r){var i,n,s=-1,a=e[1],o=0,h=7,u=4;for(0===a&&(h=138,u=3),e[2*(r+1)+1]=65535,i=0;i<=r;i++)n=a,a=e[2*(i+1)+1],++o<h&&n===a||(o<u?t.bl_tree[2*n]+=o:0!==n?(n!==s&&t.bl_tree[2*n]++,t.bl_tree[2*b]++):o<=10?t.bl_tree[2*v]++:t.bl_tree[2*y]++,s=n,u=(o=0)===a?(h=138,3):n===a?(h=6,3):(h=7,4))}function V(t,e,r){var i,n,s=-1,a=e[1],o=0,h=7,u=4;for(0===a&&(h=138,u=3),i=0;i<=r;i++)if(n=a,a=e[2*(i+1)+1],!(++o<h&&n===a)){if(o<u)for(;L(t,n,t.bl_tree),0!=--o;);else 0!==n?(n!==s&&(L(t,n,t.bl_tree),o--),L(t,b,t.bl_tree),P(t,o-3,2)):o<=10?(L(t,v,t.bl_tree),P(t,o-3,3)):(L(t,y,t.bl_tree),P(t,o-11,7));s=n,u=(o=0)===a?(h=138,3):n===a?(h=6,3):(h=7,4)}}i(T);var q=!1;function J(t,e,r,i){P(t,(s<<1)+(i?1:0),3),function(t,e,r,i){M(t),i&&(U(t,r),U(t,~r)),n.arraySet(t.pending_buf,t.window,e,r,t.pending),t.pending+=r}(t,e,r,!0)}r._tr_init=function(t){q||(function(){var t,e,r,i,n,s=new Array(g+1);for(i=r=0;i<a-1;i++)for(I[i]=r,t=0;t<1<<w[i];t++)A[r++]=i;for(A[r-1]=i,i=n=0;i<16;i++)for(T[i]=n,t=0;t<1<<k[i];t++)E[n++]=i;for(n>>=7;i<f;i++)for(T[i]=n<<7,t=0;t<1<<k[i]-7;t++)E[256+n++]=i;for(e=0;e<=g;e++)s[e]=0;for(t=0;t<=143;)z[2*t+1]=8,t++,s[8]++;for(;t<=255;)z[2*t+1]=9,t++,s[9]++;for(;t<=279;)z[2*t+1]=7,t++,s[7]++;for(;t<=287;)z[2*t+1]=8,t++,s[8]++;for(Z(z,l+1,s),t=0;t<f;t++)C[2*t+1]=5,C[2*t]=j(t,5);O=new D(z,w,u+1,l,g),B=new D(C,k,0,f,g),R=new D(new Array(0),x,0,d,p)}(),q=!0),t.l_desc=new F(t.dyn_ltree,O),t.d_desc=new F(t.dyn_dtree,B),t.bl_desc=new F(t.bl_tree,R),t.bi_buf=0,t.bi_valid=0,W(t)},r._tr_stored_block=J,r._tr_flush_block=function(t,e,r,i){var n,s,a=0;0<t.level?(2===t.strm.data_type&&(t.strm.data_type=function(t){var e,r=4093624447;for(e=0;e<=31;e++,r>>>=1)if(1&r&&0!==t.dyn_ltree[2*e])return o;if(0!==t.dyn_ltree[18]||0!==t.dyn_ltree[20]||0!==t.dyn_ltree[26])return h;for(e=32;e<u;e++)if(0!==t.dyn_ltree[2*e])return h;return o}(t)),Y(t,t.l_desc),Y(t,t.d_desc),a=function(t){var e;for(X(t,t.dyn_ltree,t.l_desc.max_code),X(t,t.dyn_dtree,t.d_desc.max_code),Y(t,t.bl_desc),e=d-1;3<=e&&0===t.bl_tree[2*S[e]+1];e--);return t.opt_len+=3*(e+1)+5+5+4,e}(t),n=t.opt_len+3+7>>>3,(s=t.static_len+3+7>>>3)<=n&&(n=s)):n=s=r+5,r+4<=n&&-1!==e?J(t,e,r,i):4===t.strategy||s===n?(P(t,2+(i?1:0),3),K(t,z,C)):(P(t,4+(i?1:0),3),function(t,e,r,i){var n;for(P(t,e-257,5),P(t,r-1,5),P(t,i-4,4),n=0;n<i;n++)P(t,t.bl_tree[2*S[n]+1],3);V(t,t.dyn_ltree,e-1),V(t,t.dyn_dtree,r-1)}(t,t.l_desc.max_code+1,t.d_desc.max_code+1,a+1),K(t,t.dyn_ltree,t.dyn_dtree)),W(t),i&&M(t)},r._tr_tally=function(t,e,r){return t.pending_buf[t.d_buf+2*t.last_lit]=e>>>8&255,t.pending_buf[t.d_buf+2*t.last_lit+1]=255&e,t.pending_buf[t.l_buf+t.last_lit]=255&r,t.last_lit++,0===e?t.dyn_ltree[2*r]++:(t.matches++,e--,t.dyn_ltree[2*(A[r]+u+1)]++,t.dyn_dtree[2*N(e)]++),t.last_lit===t.lit_bufsize-1},r._tr_align=function(t){P(t,2,3),L(t,m,z),function(t){16===t.bi_valid?(U(t,t.bi_buf),t.bi_buf=0,t.bi_valid=0):8<=t.bi_valid&&(t.pending_buf[t.pending++]=255&t.bi_buf,t.bi_buf>>=8,t.bi_valid-=8)}(t)}},{"../utils/common":41}],53:[function(t,e,r){"use strict";e.exports=function(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg="",this.state=null,this.data_type=2,this.adler=0}},{}],54:[function(t,e,r){"use strict";e.exports="function"==typeof setImmediate?setImmediate:function(){var t=[].slice.apply(arguments);t.splice(1,0,0),setTimeout.apply(null,t)}},{}]},{},[10])(10)});
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../dash-vtk/node_modules/buffer/index.js */ "./node_modules/buffer/index.js").Buffer, __webpack_require__(/*! ./../../../dash-vtk/node_modules/webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js"), __webpack_require__(/*! ./../../../dash-vtk/node_modules/timers-browserify/main.js */ "./node_modules/timers-browserify/main.js").setImmediate))

/***/ }),

/***/ "../node_modules/object-keys/implementation.js":
/*!*****************************************************!*\
  !*** ../node_modules/object-keys/implementation.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var keysShim;
if (!Object.keys) {
	// modified from https://github.com/es-shims/es5-shim
	var has = Object.prototype.hasOwnProperty;
	var toStr = Object.prototype.toString;
	var isArgs = __webpack_require__(/*! ./isArguments */ "../node_modules/object-keys/isArguments.js"); // eslint-disable-line global-require
	var isEnumerable = Object.prototype.propertyIsEnumerable;
	var hasDontEnumBug = !isEnumerable.call({ toString: null }, 'toString');
	var hasProtoEnumBug = isEnumerable.call(function () {}, 'prototype');
	var dontEnums = [
		'toString',
		'toLocaleString',
		'valueOf',
		'hasOwnProperty',
		'isPrototypeOf',
		'propertyIsEnumerable',
		'constructor'
	];
	var equalsConstructorPrototype = function (o) {
		var ctor = o.constructor;
		return ctor && ctor.prototype === o;
	};
	var excludedKeys = {
		$applicationCache: true,
		$console: true,
		$external: true,
		$frame: true,
		$frameElement: true,
		$frames: true,
		$innerHeight: true,
		$innerWidth: true,
		$onmozfullscreenchange: true,
		$onmozfullscreenerror: true,
		$outerHeight: true,
		$outerWidth: true,
		$pageXOffset: true,
		$pageYOffset: true,
		$parent: true,
		$scrollLeft: true,
		$scrollTop: true,
		$scrollX: true,
		$scrollY: true,
		$self: true,
		$webkitIndexedDB: true,
		$webkitStorageInfo: true,
		$window: true
	};
	var hasAutomationEqualityBug = (function () {
		/* global window */
		if (typeof window === 'undefined') { return false; }
		for (var k in window) {
			try {
				if (!excludedKeys['$' + k] && has.call(window, k) && window[k] !== null && typeof window[k] === 'object') {
					try {
						equalsConstructorPrototype(window[k]);
					} catch (e) {
						return true;
					}
				}
			} catch (e) {
				return true;
			}
		}
		return false;
	}());
	var equalsConstructorPrototypeIfNotBuggy = function (o) {
		/* global window */
		if (typeof window === 'undefined' || !hasAutomationEqualityBug) {
			return equalsConstructorPrototype(o);
		}
		try {
			return equalsConstructorPrototype(o);
		} catch (e) {
			return false;
		}
	};

	keysShim = function keys(object) {
		var isObject = object !== null && typeof object === 'object';
		var isFunction = toStr.call(object) === '[object Function]';
		var isArguments = isArgs(object);
		var isString = isObject && toStr.call(object) === '[object String]';
		var theKeys = [];

		if (!isObject && !isFunction && !isArguments) {
			throw new TypeError('Object.keys called on a non-object');
		}

		var skipProto = hasProtoEnumBug && isFunction;
		if (isString && object.length > 0 && !has.call(object, 0)) {
			for (var i = 0; i < object.length; ++i) {
				theKeys.push(String(i));
			}
		}

		if (isArguments && object.length > 0) {
			for (var j = 0; j < object.length; ++j) {
				theKeys.push(String(j));
			}
		} else {
			for (var name in object) {
				if (!(skipProto && name === 'prototype') && has.call(object, name)) {
					theKeys.push(String(name));
				}
			}
		}

		if (hasDontEnumBug) {
			var skipConstructor = equalsConstructorPrototypeIfNotBuggy(object);

			for (var k = 0; k < dontEnums.length; ++k) {
				if (!(skipConstructor && dontEnums[k] === 'constructor') && has.call(object, dontEnums[k])) {
					theKeys.push(dontEnums[k]);
				}
			}
		}
		return theKeys;
	};
}
module.exports = keysShim;


/***/ }),

/***/ "../node_modules/object-keys/index.js":
/*!********************************************!*\
  !*** ../node_modules/object-keys/index.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var slice = Array.prototype.slice;
var isArgs = __webpack_require__(/*! ./isArguments */ "../node_modules/object-keys/isArguments.js");

var origKeys = Object.keys;
var keysShim = origKeys ? function keys(o) { return origKeys(o); } : __webpack_require__(/*! ./implementation */ "../node_modules/object-keys/implementation.js");

var originalKeys = Object.keys;

keysShim.shim = function shimObjectKeys() {
	if (Object.keys) {
		var keysWorksWithArguments = (function () {
			// Safari 5.0 bug
			var args = Object.keys(arguments);
			return args && args.length === arguments.length;
		}(1, 2));
		if (!keysWorksWithArguments) {
			Object.keys = function keys(object) { // eslint-disable-line func-name-matching
				if (isArgs(object)) {
					return originalKeys(slice.call(object));
				}
				return originalKeys(object);
			};
		}
	} else {
		Object.keys = keysShim;
	}
	return Object.keys || keysShim;
};

module.exports = keysShim;


/***/ }),

/***/ "../node_modules/object-keys/isArguments.js":
/*!**************************************************!*\
  !*** ../node_modules/object-keys/isArguments.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var toStr = Object.prototype.toString;

module.exports = function isArguments(value) {
	var str = toStr.call(value);
	var isArgs = str === '[object Arguments]';
	if (!isArgs) {
		isArgs = str !== '[object Array]' &&
			value !== null &&
			typeof value === 'object' &&
			typeof value.length === 'number' &&
			value.length >= 0 &&
			toStr.call(value.callee) === '[object Function]';
	}
	return isArgs;
};


/***/ }),

/***/ "../node_modules/pako/dist/pako.esm.mjs":
/*!**********************************************!*\
  !*** ../node_modules/pako/dist/pako.esm.mjs ***!
  \**********************************************/
/*! exports provided: Deflate, Inflate, constants, default, deflate, deflateRaw, gzip, inflate, inflateRaw, ungzip */
/***/ (function(__webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Deflate", function() { return Deflate_1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Inflate", function() { return Inflate_1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "constants", function() { return constants_1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return pako; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "deflate", function() { return deflate_1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "deflateRaw", function() { return deflateRaw_1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "gzip", function() { return gzip_1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "inflate", function() { return inflate_1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "inflateRaw", function() { return inflateRaw_1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ungzip", function() { return ungzip_1; });

/*! pako 2.0.4 https://github.com/nodeca/pako @license (MIT AND Zlib) */
// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

/* eslint-disable space-unary-ops */

/* Public constants ==========================================================*/
/* ===========================================================================*/


//const Z_FILTERED          = 1;
//const Z_HUFFMAN_ONLY      = 2;
//const Z_RLE               = 3;
const Z_FIXED$1               = 4;
//const Z_DEFAULT_STRATEGY  = 0;

/* Possible values of the data_type field (though see inflate()) */
const Z_BINARY              = 0;
const Z_TEXT                = 1;
//const Z_ASCII             = 1; // = Z_TEXT
const Z_UNKNOWN$1             = 2;

/*============================================================================*/


function zero$1(buf) { let len = buf.length; while (--len >= 0) { buf[len] = 0; } }

// From zutil.h

const STORED_BLOCK = 0;
const STATIC_TREES = 1;
const DYN_TREES    = 2;
/* The three kinds of block type */

const MIN_MATCH$1    = 3;
const MAX_MATCH$1    = 258;
/* The minimum and maximum match lengths */

// From deflate.h
/* ===========================================================================
 * Internal compression state.
 */

const LENGTH_CODES$1  = 29;
/* number of length codes, not counting the special END_BLOCK code */

const LITERALS$1      = 256;
/* number of literal bytes 0..255 */

const L_CODES$1       = LITERALS$1 + 1 + LENGTH_CODES$1;
/* number of Literal or Length codes, including the END_BLOCK code */

const D_CODES$1       = 30;
/* number of distance codes */

const BL_CODES$1      = 19;
/* number of codes used to transfer the bit lengths */

const HEAP_SIZE$1     = 2 * L_CODES$1 + 1;
/* maximum heap size */

const MAX_BITS$1      = 15;
/* All codes must not exceed MAX_BITS bits */

const Buf_size      = 16;
/* size of bit buffer in bi_buf */


/* ===========================================================================
 * Constants
 */

const MAX_BL_BITS = 7;
/* Bit length codes must not exceed MAX_BL_BITS bits */

const END_BLOCK   = 256;
/* end of block literal code */

const REP_3_6     = 16;
/* repeat previous bit length 3-6 times (2 bits of repeat count) */

const REPZ_3_10   = 17;
/* repeat a zero length 3-10 times  (3 bits of repeat count) */

const REPZ_11_138 = 18;
/* repeat a zero length 11-138 times  (7 bits of repeat count) */

/* eslint-disable comma-spacing,array-bracket-spacing */
const extra_lbits =   /* extra bits for each length code */
  new Uint8Array([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0]);

const extra_dbits =   /* extra bits for each distance code */
  new Uint8Array([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13]);

const extra_blbits =  /* extra bits for each bit length code */
  new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7]);

const bl_order =
  new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]);
/* eslint-enable comma-spacing,array-bracket-spacing */

/* The lengths of the bit length codes are sent in order of decreasing
 * probability, to avoid transmitting the lengths for unused bit length codes.
 */

/* ===========================================================================
 * Local data. These are initialized only once.
 */

// We pre-fill arrays with 0 to avoid uninitialized gaps

const DIST_CODE_LEN = 512; /* see definition of array dist_code below */

// !!!! Use flat array instead of structure, Freq = i*2, Len = i*2+1
const static_ltree  = new Array((L_CODES$1 + 2) * 2);
zero$1(static_ltree);
/* The static literal tree. Since the bit lengths are imposed, there is no
 * need for the L_CODES extra codes used during heap construction. However
 * The codes 286 and 287 are needed to build a canonical tree (see _tr_init
 * below).
 */

const static_dtree  = new Array(D_CODES$1 * 2);
zero$1(static_dtree);
/* The static distance tree. (Actually a trivial tree since all codes use
 * 5 bits.)
 */

const _dist_code    = new Array(DIST_CODE_LEN);
zero$1(_dist_code);
/* Distance codes. The first 256 values correspond to the distances
 * 3 .. 258, the last 256 values correspond to the top 8 bits of
 * the 15 bit distances.
 */

const _length_code  = new Array(MAX_MATCH$1 - MIN_MATCH$1 + 1);
zero$1(_length_code);
/* length code for each normalized match length (0 == MIN_MATCH) */

const base_length   = new Array(LENGTH_CODES$1);
zero$1(base_length);
/* First normalized length for each code (0 = MIN_MATCH) */

const base_dist     = new Array(D_CODES$1);
zero$1(base_dist);
/* First normalized distance for each code (0 = distance of 1) */


function StaticTreeDesc(static_tree, extra_bits, extra_base, elems, max_length) {

  this.static_tree  = static_tree;  /* static tree or NULL */
  this.extra_bits   = extra_bits;   /* extra bits for each code or NULL */
  this.extra_base   = extra_base;   /* base index for extra_bits */
  this.elems        = elems;        /* max number of elements in the tree */
  this.max_length   = max_length;   /* max bit length for the codes */

  // show if `static_tree` has data or dummy - needed for monomorphic objects
  this.has_stree    = static_tree && static_tree.length;
}


let static_l_desc;
let static_d_desc;
let static_bl_desc;


function TreeDesc(dyn_tree, stat_desc) {
  this.dyn_tree = dyn_tree;     /* the dynamic tree */
  this.max_code = 0;            /* largest code with non zero frequency */
  this.stat_desc = stat_desc;   /* the corresponding static tree */
}



const d_code = (dist) => {

  return dist < 256 ? _dist_code[dist] : _dist_code[256 + (dist >>> 7)];
};


/* ===========================================================================
 * Output a short LSB first on the stream.
 * IN assertion: there is enough room in pendingBuf.
 */
const put_short = (s, w) => {
//    put_byte(s, (uch)((w) & 0xff));
//    put_byte(s, (uch)((ush)(w) >> 8));
  s.pending_buf[s.pending++] = (w) & 0xff;
  s.pending_buf[s.pending++] = (w >>> 8) & 0xff;
};


/* ===========================================================================
 * Send a value on a given number of bits.
 * IN assertion: length <= 16 and value fits in length bits.
 */
const send_bits = (s, value, length) => {

  if (s.bi_valid > (Buf_size - length)) {
    s.bi_buf |= (value << s.bi_valid) & 0xffff;
    put_short(s, s.bi_buf);
    s.bi_buf = value >> (Buf_size - s.bi_valid);
    s.bi_valid += length - Buf_size;
  } else {
    s.bi_buf |= (value << s.bi_valid) & 0xffff;
    s.bi_valid += length;
  }
};


const send_code = (s, c, tree) => {

  send_bits(s, tree[c * 2]/*.Code*/, tree[c * 2 + 1]/*.Len*/);
};


/* ===========================================================================
 * Reverse the first len bits of a code, using straightforward code (a faster
 * method would use a table)
 * IN assertion: 1 <= len <= 15
 */
const bi_reverse = (code, len) => {

  let res = 0;
  do {
    res |= code & 1;
    code >>>= 1;
    res <<= 1;
  } while (--len > 0);
  return res >>> 1;
};


/* ===========================================================================
 * Flush the bit buffer, keeping at most 7 bits in it.
 */
const bi_flush = (s) => {

  if (s.bi_valid === 16) {
    put_short(s, s.bi_buf);
    s.bi_buf = 0;
    s.bi_valid = 0;

  } else if (s.bi_valid >= 8) {
    s.pending_buf[s.pending++] = s.bi_buf & 0xff;
    s.bi_buf >>= 8;
    s.bi_valid -= 8;
  }
};


/* ===========================================================================
 * Compute the optimal bit lengths for a tree and update the total bit length
 * for the current block.
 * IN assertion: the fields freq and dad are set, heap[heap_max] and
 *    above are the tree nodes sorted by increasing frequency.
 * OUT assertions: the field len is set to the optimal bit length, the
 *     array bl_count contains the frequencies for each bit length.
 *     The length opt_len is updated; static_len is also updated if stree is
 *     not null.
 */
const gen_bitlen = (s, desc) =>
//    deflate_state *s;
//    tree_desc *desc;    /* the tree descriptor */
{
  const tree            = desc.dyn_tree;
  const max_code        = desc.max_code;
  const stree           = desc.stat_desc.static_tree;
  const has_stree       = desc.stat_desc.has_stree;
  const extra           = desc.stat_desc.extra_bits;
  const base            = desc.stat_desc.extra_base;
  const max_length      = desc.stat_desc.max_length;
  let h;              /* heap index */
  let n, m;           /* iterate over the tree elements */
  let bits;           /* bit length */
  let xbits;          /* extra bits */
  let f;              /* frequency */
  let overflow = 0;   /* number of elements with bit length too large */

  for (bits = 0; bits <= MAX_BITS$1; bits++) {
    s.bl_count[bits] = 0;
  }

  /* In a first pass, compute the optimal bit lengths (which may
   * overflow in the case of the bit length tree).
   */
  tree[s.heap[s.heap_max] * 2 + 1]/*.Len*/ = 0; /* root of the heap */

  for (h = s.heap_max + 1; h < HEAP_SIZE$1; h++) {
    n = s.heap[h];
    bits = tree[tree[n * 2 + 1]/*.Dad*/ * 2 + 1]/*.Len*/ + 1;
    if (bits > max_length) {
      bits = max_length;
      overflow++;
    }
    tree[n * 2 + 1]/*.Len*/ = bits;
    /* We overwrite tree[n].Dad which is no longer needed */

    if (n > max_code) { continue; } /* not a leaf node */

    s.bl_count[bits]++;
    xbits = 0;
    if (n >= base) {
      xbits = extra[n - base];
    }
    f = tree[n * 2]/*.Freq*/;
    s.opt_len += f * (bits + xbits);
    if (has_stree) {
      s.static_len += f * (stree[n * 2 + 1]/*.Len*/ + xbits);
    }
  }
  if (overflow === 0) { return; }

  // Trace((stderr,"\nbit length overflow\n"));
  /* This happens for example on obj2 and pic of the Calgary corpus */

  /* Find the first bit length which could increase: */
  do {
    bits = max_length - 1;
    while (s.bl_count[bits] === 0) { bits--; }
    s.bl_count[bits]--;      /* move one leaf down the tree */
    s.bl_count[bits + 1] += 2; /* move one overflow item as its brother */
    s.bl_count[max_length]--;
    /* The brother of the overflow item also moves one step up,
     * but this does not affect bl_count[max_length]
     */
    overflow -= 2;
  } while (overflow > 0);

  /* Now recompute all bit lengths, scanning in increasing frequency.
   * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all
   * lengths instead of fixing only the wrong ones. This idea is taken
   * from 'ar' written by Haruhiko Okumura.)
   */
  for (bits = max_length; bits !== 0; bits--) {
    n = s.bl_count[bits];
    while (n !== 0) {
      m = s.heap[--h];
      if (m > max_code) { continue; }
      if (tree[m * 2 + 1]/*.Len*/ !== bits) {
        // Trace((stderr,"code %d bits %d->%d\n", m, tree[m].Len, bits));
        s.opt_len += (bits - tree[m * 2 + 1]/*.Len*/) * tree[m * 2]/*.Freq*/;
        tree[m * 2 + 1]/*.Len*/ = bits;
      }
      n--;
    }
  }
};


/* ===========================================================================
 * Generate the codes for a given tree and bit counts (which need not be
 * optimal).
 * IN assertion: the array bl_count contains the bit length statistics for
 * the given tree and the field len is set for all tree elements.
 * OUT assertion: the field code is set for all tree elements of non
 *     zero code length.
 */
const gen_codes = (tree, max_code, bl_count) =>
//    ct_data *tree;             /* the tree to decorate */
//    int max_code;              /* largest code with non zero frequency */
//    ushf *bl_count;            /* number of codes at each bit length */
{
  const next_code = new Array(MAX_BITS$1 + 1); /* next code value for each bit length */
  let code = 0;              /* running code value */
  let bits;                  /* bit index */
  let n;                     /* code index */

  /* The distribution counts are first used to generate the code values
   * without bit reversal.
   */
  for (bits = 1; bits <= MAX_BITS$1; bits++) {
    next_code[bits] = code = (code + bl_count[bits - 1]) << 1;
  }
  /* Check that the bit counts in bl_count are consistent. The last code
   * must be all ones.
   */
  //Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,
  //        "inconsistent bit counts");
  //Tracev((stderr,"\ngen_codes: max_code %d ", max_code));

  for (n = 0;  n <= max_code; n++) {
    let len = tree[n * 2 + 1]/*.Len*/;
    if (len === 0) { continue; }
    /* Now reverse the bits */
    tree[n * 2]/*.Code*/ = bi_reverse(next_code[len]++, len);

    //Tracecv(tree != static_ltree, (stderr,"\nn %3d %c l %2d c %4x (%x) ",
    //     n, (isgraph(n) ? n : ' '), len, tree[n].Code, next_code[len]-1));
  }
};


/* ===========================================================================
 * Initialize the various 'constant' tables.
 */
const tr_static_init = () => {

  let n;        /* iterates over tree elements */
  let bits;     /* bit counter */
  let length;   /* length value */
  let code;     /* code value */
  let dist;     /* distance index */
  const bl_count = new Array(MAX_BITS$1 + 1);
  /* number of codes at each bit length for an optimal tree */

  // do check in _tr_init()
  //if (static_init_done) return;

  /* For some embedded targets, global variables are not initialized: */
/*#ifdef NO_INIT_GLOBAL_POINTERS
  static_l_desc.static_tree = static_ltree;
  static_l_desc.extra_bits = extra_lbits;
  static_d_desc.static_tree = static_dtree;
  static_d_desc.extra_bits = extra_dbits;
  static_bl_desc.extra_bits = extra_blbits;
#endif*/

  /* Initialize the mapping length (0..255) -> length code (0..28) */
  length = 0;
  for (code = 0; code < LENGTH_CODES$1 - 1; code++) {
    base_length[code] = length;
    for (n = 0; n < (1 << extra_lbits[code]); n++) {
      _length_code[length++] = code;
    }
  }
  //Assert (length == 256, "tr_static_init: length != 256");
  /* Note that the length 255 (match length 258) can be represented
   * in two different ways: code 284 + 5 bits or code 285, so we
   * overwrite length_code[255] to use the best encoding:
   */
  _length_code[length - 1] = code;

  /* Initialize the mapping dist (0..32K) -> dist code (0..29) */
  dist = 0;
  for (code = 0; code < 16; code++) {
    base_dist[code] = dist;
    for (n = 0; n < (1 << extra_dbits[code]); n++) {
      _dist_code[dist++] = code;
    }
  }
  //Assert (dist == 256, "tr_static_init: dist != 256");
  dist >>= 7; /* from now on, all distances are divided by 128 */
  for (; code < D_CODES$1; code++) {
    base_dist[code] = dist << 7;
    for (n = 0; n < (1 << (extra_dbits[code] - 7)); n++) {
      _dist_code[256 + dist++] = code;
    }
  }
  //Assert (dist == 256, "tr_static_init: 256+dist != 512");

  /* Construct the codes of the static literal tree */
  for (bits = 0; bits <= MAX_BITS$1; bits++) {
    bl_count[bits] = 0;
  }

  n = 0;
  while (n <= 143) {
    static_ltree[n * 2 + 1]/*.Len*/ = 8;
    n++;
    bl_count[8]++;
  }
  while (n <= 255) {
    static_ltree[n * 2 + 1]/*.Len*/ = 9;
    n++;
    bl_count[9]++;
  }
  while (n <= 279) {
    static_ltree[n * 2 + 1]/*.Len*/ = 7;
    n++;
    bl_count[7]++;
  }
  while (n <= 287) {
    static_ltree[n * 2 + 1]/*.Len*/ = 8;
    n++;
    bl_count[8]++;
  }
  /* Codes 286 and 287 do not exist, but we must include them in the
   * tree construction to get a canonical Huffman tree (longest code
   * all ones)
   */
  gen_codes(static_ltree, L_CODES$1 + 1, bl_count);

  /* The static distance tree is trivial: */
  for (n = 0; n < D_CODES$1; n++) {
    static_dtree[n * 2 + 1]/*.Len*/ = 5;
    static_dtree[n * 2]/*.Code*/ = bi_reverse(n, 5);
  }

  // Now data ready and we can init static trees
  static_l_desc = new StaticTreeDesc(static_ltree, extra_lbits, LITERALS$1 + 1, L_CODES$1, MAX_BITS$1);
  static_d_desc = new StaticTreeDesc(static_dtree, extra_dbits, 0,          D_CODES$1, MAX_BITS$1);
  static_bl_desc = new StaticTreeDesc(new Array(0), extra_blbits, 0,         BL_CODES$1, MAX_BL_BITS);

  //static_init_done = true;
};


/* ===========================================================================
 * Initialize a new block.
 */
const init_block = (s) => {

  let n; /* iterates over tree elements */

  /* Initialize the trees. */
  for (n = 0; n < L_CODES$1;  n++) { s.dyn_ltree[n * 2]/*.Freq*/ = 0; }
  for (n = 0; n < D_CODES$1;  n++) { s.dyn_dtree[n * 2]/*.Freq*/ = 0; }
  for (n = 0; n < BL_CODES$1; n++) { s.bl_tree[n * 2]/*.Freq*/ = 0; }

  s.dyn_ltree[END_BLOCK * 2]/*.Freq*/ = 1;
  s.opt_len = s.static_len = 0;
  s.last_lit = s.matches = 0;
};


/* ===========================================================================
 * Flush the bit buffer and align the output on a byte boundary
 */
const bi_windup = (s) =>
{
  if (s.bi_valid > 8) {
    put_short(s, s.bi_buf);
  } else if (s.bi_valid > 0) {
    //put_byte(s, (Byte)s->bi_buf);
    s.pending_buf[s.pending++] = s.bi_buf;
  }
  s.bi_buf = 0;
  s.bi_valid = 0;
};

/* ===========================================================================
 * Copy a stored block, storing first the length and its
 * one's complement if requested.
 */
const copy_block = (s, buf, len, header) =>
//DeflateState *s;
//charf    *buf;    /* the input data */
//unsigned len;     /* its length */
//int      header;  /* true if block header must be written */
{
  bi_windup(s);        /* align on byte boundary */

  if (header) {
    put_short(s, len);
    put_short(s, ~len);
  }
//  while (len--) {
//    put_byte(s, *buf++);
//  }
  s.pending_buf.set(s.window.subarray(buf, buf + len), s.pending);
  s.pending += len;
};

/* ===========================================================================
 * Compares to subtrees, using the tree depth as tie breaker when
 * the subtrees have equal frequency. This minimizes the worst case length.
 */
const smaller = (tree, n, m, depth) => {

  const _n2 = n * 2;
  const _m2 = m * 2;
  return (tree[_n2]/*.Freq*/ < tree[_m2]/*.Freq*/ ||
         (tree[_n2]/*.Freq*/ === tree[_m2]/*.Freq*/ && depth[n] <= depth[m]));
};

/* ===========================================================================
 * Restore the heap property by moving down the tree starting at node k,
 * exchanging a node with the smallest of its two sons if necessary, stopping
 * when the heap property is re-established (each father smaller than its
 * two sons).
 */
const pqdownheap = (s, tree, k) =>
//    deflate_state *s;
//    ct_data *tree;  /* the tree to restore */
//    int k;               /* node to move down */
{
  const v = s.heap[k];
  let j = k << 1;  /* left son of k */
  while (j <= s.heap_len) {
    /* Set j to the smallest of the two sons: */
    if (j < s.heap_len &&
      smaller(tree, s.heap[j + 1], s.heap[j], s.depth)) {
      j++;
    }
    /* Exit if v is smaller than both sons */
    if (smaller(tree, v, s.heap[j], s.depth)) { break; }

    /* Exchange v with the smallest son */
    s.heap[k] = s.heap[j];
    k = j;

    /* And continue down the tree, setting j to the left son of k */
    j <<= 1;
  }
  s.heap[k] = v;
};


// inlined manually
// const SMALLEST = 1;

/* ===========================================================================
 * Send the block data compressed using the given Huffman trees
 */
const compress_block = (s, ltree, dtree) =>
//    deflate_state *s;
//    const ct_data *ltree; /* literal tree */
//    const ct_data *dtree; /* distance tree */
{
  let dist;           /* distance of matched string */
  let lc;             /* match length or unmatched char (if dist == 0) */
  let lx = 0;         /* running index in l_buf */
  let code;           /* the code to send */
  let extra;          /* number of extra bits to send */

  if (s.last_lit !== 0) {
    do {
      dist = (s.pending_buf[s.d_buf + lx * 2] << 8) | (s.pending_buf[s.d_buf + lx * 2 + 1]);
      lc = s.pending_buf[s.l_buf + lx];
      lx++;

      if (dist === 0) {
        send_code(s, lc, ltree); /* send a literal byte */
        //Tracecv(isgraph(lc), (stderr," '%c' ", lc));
      } else {
        /* Here, lc is the match length - MIN_MATCH */
        code = _length_code[lc];
        send_code(s, code + LITERALS$1 + 1, ltree); /* send the length code */
        extra = extra_lbits[code];
        if (extra !== 0) {
          lc -= base_length[code];
          send_bits(s, lc, extra);       /* send the extra length bits */
        }
        dist--; /* dist is now the match distance - 1 */
        code = d_code(dist);
        //Assert (code < D_CODES, "bad d_code");

        send_code(s, code, dtree);       /* send the distance code */
        extra = extra_dbits[code];
        if (extra !== 0) {
          dist -= base_dist[code];
          send_bits(s, dist, extra);   /* send the extra distance bits */
        }
      } /* literal or match pair ? */

      /* Check that the overlay between pending_buf and d_buf+l_buf is ok: */
      //Assert((uInt)(s->pending) < s->lit_bufsize + 2*lx,
      //       "pendingBuf overflow");

    } while (lx < s.last_lit);
  }

  send_code(s, END_BLOCK, ltree);
};


/* ===========================================================================
 * Construct one Huffman tree and assigns the code bit strings and lengths.
 * Update the total bit length for the current block.
 * IN assertion: the field freq is set for all tree elements.
 * OUT assertions: the fields len and code are set to the optimal bit length
 *     and corresponding code. The length opt_len is updated; static_len is
 *     also updated if stree is not null. The field max_code is set.
 */
const build_tree = (s, desc) =>
//    deflate_state *s;
//    tree_desc *desc; /* the tree descriptor */
{
  const tree     = desc.dyn_tree;
  const stree    = desc.stat_desc.static_tree;
  const has_stree = desc.stat_desc.has_stree;
  const elems    = desc.stat_desc.elems;
  let n, m;          /* iterate over heap elements */
  let max_code = -1; /* largest code with non zero frequency */
  let node;          /* new node being created */

  /* Construct the initial heap, with least frequent element in
   * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].
   * heap[0] is not used.
   */
  s.heap_len = 0;
  s.heap_max = HEAP_SIZE$1;

  for (n = 0; n < elems; n++) {
    if (tree[n * 2]/*.Freq*/ !== 0) {
      s.heap[++s.heap_len] = max_code = n;
      s.depth[n] = 0;

    } else {
      tree[n * 2 + 1]/*.Len*/ = 0;
    }
  }

  /* The pkzip format requires that at least one distance code exists,
   * and that at least one bit should be sent even if there is only one
   * possible code. So to avoid special checks later on we force at least
   * two codes of non zero frequency.
   */
  while (s.heap_len < 2) {
    node = s.heap[++s.heap_len] = (max_code < 2 ? ++max_code : 0);
    tree[node * 2]/*.Freq*/ = 1;
    s.depth[node] = 0;
    s.opt_len--;

    if (has_stree) {
      s.static_len -= stree[node * 2 + 1]/*.Len*/;
    }
    /* node is 0 or 1 so it does not have extra bits */
  }
  desc.max_code = max_code;

  /* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,
   * establish sub-heaps of increasing lengths:
   */
  for (n = (s.heap_len >> 1/*int /2*/); n >= 1; n--) { pqdownheap(s, tree, n); }

  /* Construct the Huffman tree by repeatedly combining the least two
   * frequent nodes.
   */
  node = elems;              /* next internal node of the tree */
  do {
    //pqremove(s, tree, n);  /* n = node of least frequency */
    /*** pqremove ***/
    n = s.heap[1/*SMALLEST*/];
    s.heap[1/*SMALLEST*/] = s.heap[s.heap_len--];
    pqdownheap(s, tree, 1/*SMALLEST*/);
    /***/

    m = s.heap[1/*SMALLEST*/]; /* m = node of next least frequency */

    s.heap[--s.heap_max] = n; /* keep the nodes sorted by frequency */
    s.heap[--s.heap_max] = m;

    /* Create a new node father of n and m */
    tree[node * 2]/*.Freq*/ = tree[n * 2]/*.Freq*/ + tree[m * 2]/*.Freq*/;
    s.depth[node] = (s.depth[n] >= s.depth[m] ? s.depth[n] : s.depth[m]) + 1;
    tree[n * 2 + 1]/*.Dad*/ = tree[m * 2 + 1]/*.Dad*/ = node;

    /* and insert the new node in the heap */
    s.heap[1/*SMALLEST*/] = node++;
    pqdownheap(s, tree, 1/*SMALLEST*/);

  } while (s.heap_len >= 2);

  s.heap[--s.heap_max] = s.heap[1/*SMALLEST*/];

  /* At this point, the fields freq and dad are set. We can now
   * generate the bit lengths.
   */
  gen_bitlen(s, desc);

  /* The field len is now set, we can generate the bit codes */
  gen_codes(tree, max_code, s.bl_count);
};


/* ===========================================================================
 * Scan a literal or distance tree to determine the frequencies of the codes
 * in the bit length tree.
 */
const scan_tree = (s, tree, max_code) =>
//    deflate_state *s;
//    ct_data *tree;   /* the tree to be scanned */
//    int max_code;    /* and its largest code of non zero frequency */
{
  let n;                     /* iterates over all tree elements */
  let prevlen = -1;          /* last emitted length */
  let curlen;                /* length of current code */

  let nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */

  let count = 0;             /* repeat count of the current code */
  let max_count = 7;         /* max repeat count */
  let min_count = 4;         /* min repeat count */

  if (nextlen === 0) {
    max_count = 138;
    min_count = 3;
  }
  tree[(max_code + 1) * 2 + 1]/*.Len*/ = 0xffff; /* guard */

  for (n = 0; n <= max_code; n++) {
    curlen = nextlen;
    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;

    if (++count < max_count && curlen === nextlen) {
      continue;

    } else if (count < min_count) {
      s.bl_tree[curlen * 2]/*.Freq*/ += count;

    } else if (curlen !== 0) {

      if (curlen !== prevlen) { s.bl_tree[curlen * 2]/*.Freq*/++; }
      s.bl_tree[REP_3_6 * 2]/*.Freq*/++;

    } else if (count <= 10) {
      s.bl_tree[REPZ_3_10 * 2]/*.Freq*/++;

    } else {
      s.bl_tree[REPZ_11_138 * 2]/*.Freq*/++;
    }

    count = 0;
    prevlen = curlen;

    if (nextlen === 0) {
      max_count = 138;
      min_count = 3;

    } else if (curlen === nextlen) {
      max_count = 6;
      min_count = 3;

    } else {
      max_count = 7;
      min_count = 4;
    }
  }
};


/* ===========================================================================
 * Send a literal or distance tree in compressed form, using the codes in
 * bl_tree.
 */
const send_tree = (s, tree, max_code) =>
//    deflate_state *s;
//    ct_data *tree; /* the tree to be scanned */
//    int max_code;       /* and its largest code of non zero frequency */
{
  let n;                     /* iterates over all tree elements */
  let prevlen = -1;          /* last emitted length */
  let curlen;                /* length of current code */

  let nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */

  let count = 0;             /* repeat count of the current code */
  let max_count = 7;         /* max repeat count */
  let min_count = 4;         /* min repeat count */

  /* tree[max_code+1].Len = -1; */  /* guard already set */
  if (nextlen === 0) {
    max_count = 138;
    min_count = 3;
  }

  for (n = 0; n <= max_code; n++) {
    curlen = nextlen;
    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;

    if (++count < max_count && curlen === nextlen) {
      continue;

    } else if (count < min_count) {
      do { send_code(s, curlen, s.bl_tree); } while (--count !== 0);

    } else if (curlen !== 0) {
      if (curlen !== prevlen) {
        send_code(s, curlen, s.bl_tree);
        count--;
      }
      //Assert(count >= 3 && count <= 6, " 3_6?");
      send_code(s, REP_3_6, s.bl_tree);
      send_bits(s, count - 3, 2);

    } else if (count <= 10) {
      send_code(s, REPZ_3_10, s.bl_tree);
      send_bits(s, count - 3, 3);

    } else {
      send_code(s, REPZ_11_138, s.bl_tree);
      send_bits(s, count - 11, 7);
    }

    count = 0;
    prevlen = curlen;
    if (nextlen === 0) {
      max_count = 138;
      min_count = 3;

    } else if (curlen === nextlen) {
      max_count = 6;
      min_count = 3;

    } else {
      max_count = 7;
      min_count = 4;
    }
  }
};


/* ===========================================================================
 * Construct the Huffman tree for the bit lengths and return the index in
 * bl_order of the last bit length code to send.
 */
const build_bl_tree = (s) => {

  let max_blindex;  /* index of last bit length code of non zero freq */

  /* Determine the bit length frequencies for literal and distance trees */
  scan_tree(s, s.dyn_ltree, s.l_desc.max_code);
  scan_tree(s, s.dyn_dtree, s.d_desc.max_code);

  /* Build the bit length tree: */
  build_tree(s, s.bl_desc);
  /* opt_len now includes the length of the tree representations, except
   * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.
   */

  /* Determine the number of bit length codes to send. The pkzip format
   * requires that at least 4 bit length codes be sent. (appnote.txt says
   * 3 but the actual value used is 4.)
   */
  for (max_blindex = BL_CODES$1 - 1; max_blindex >= 3; max_blindex--) {
    if (s.bl_tree[bl_order[max_blindex] * 2 + 1]/*.Len*/ !== 0) {
      break;
    }
  }
  /* Update opt_len to include the bit length tree and counts */
  s.opt_len += 3 * (max_blindex + 1) + 5 + 5 + 4;
  //Tracev((stderr, "\ndyn trees: dyn %ld, stat %ld",
  //        s->opt_len, s->static_len));

  return max_blindex;
};


/* ===========================================================================
 * Send the header for a block using dynamic Huffman trees: the counts, the
 * lengths of the bit length codes, the literal tree and the distance tree.
 * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.
 */
const send_all_trees = (s, lcodes, dcodes, blcodes) =>
//    deflate_state *s;
//    int lcodes, dcodes, blcodes; /* number of codes for each tree */
{
  let rank;                    /* index in bl_order */

  //Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, "not enough codes");
  //Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,
  //        "too many codes");
  //Tracev((stderr, "\nbl counts: "));
  send_bits(s, lcodes - 257, 5); /* not +255 as stated in appnote.txt */
  send_bits(s, dcodes - 1,   5);
  send_bits(s, blcodes - 4,  4); /* not -3 as stated in appnote.txt */
  for (rank = 0; rank < blcodes; rank++) {
    //Tracev((stderr, "\nbl code %2d ", bl_order[rank]));
    send_bits(s, s.bl_tree[bl_order[rank] * 2 + 1]/*.Len*/, 3);
  }
  //Tracev((stderr, "\nbl tree: sent %ld", s->bits_sent));

  send_tree(s, s.dyn_ltree, lcodes - 1); /* literal tree */
  //Tracev((stderr, "\nlit tree: sent %ld", s->bits_sent));

  send_tree(s, s.dyn_dtree, dcodes - 1); /* distance tree */
  //Tracev((stderr, "\ndist tree: sent %ld", s->bits_sent));
};


/* ===========================================================================
 * Check if the data type is TEXT or BINARY, using the following algorithm:
 * - TEXT if the two conditions below are satisfied:
 *    a) There are no non-portable control characters belonging to the
 *       "black list" (0..6, 14..25, 28..31).
 *    b) There is at least one printable character belonging to the
 *       "white list" (9 {TAB}, 10 {LF}, 13 {CR}, 32..255).
 * - BINARY otherwise.
 * - The following partially-portable control characters form a
 *   "gray list" that is ignored in this detection algorithm:
 *   (7 {BEL}, 8 {BS}, 11 {VT}, 12 {FF}, 26 {SUB}, 27 {ESC}).
 * IN assertion: the fields Freq of dyn_ltree are set.
 */
const detect_data_type = (s) => {
  /* black_mask is the bit mask of black-listed bytes
   * set bits 0..6, 14..25, and 28..31
   * 0xf3ffc07f = binary 11110011111111111100000001111111
   */
  let black_mask = 0xf3ffc07f;
  let n;

  /* Check for non-textual ("black-listed") bytes. */
  for (n = 0; n <= 31; n++, black_mask >>>= 1) {
    if ((black_mask & 1) && (s.dyn_ltree[n * 2]/*.Freq*/ !== 0)) {
      return Z_BINARY;
    }
  }

  /* Check for textual ("white-listed") bytes. */
  if (s.dyn_ltree[9 * 2]/*.Freq*/ !== 0 || s.dyn_ltree[10 * 2]/*.Freq*/ !== 0 ||
      s.dyn_ltree[13 * 2]/*.Freq*/ !== 0) {
    return Z_TEXT;
  }
  for (n = 32; n < LITERALS$1; n++) {
    if (s.dyn_ltree[n * 2]/*.Freq*/ !== 0) {
      return Z_TEXT;
    }
  }

  /* There are no "black-listed" or "white-listed" bytes:
   * this stream either is empty or has tolerated ("gray-listed") bytes only.
   */
  return Z_BINARY;
};


let static_init_done = false;

/* ===========================================================================
 * Initialize the tree data structures for a new zlib stream.
 */
const _tr_init$1 = (s) =>
{

  if (!static_init_done) {
    tr_static_init();
    static_init_done = true;
  }

  s.l_desc  = new TreeDesc(s.dyn_ltree, static_l_desc);
  s.d_desc  = new TreeDesc(s.dyn_dtree, static_d_desc);
  s.bl_desc = new TreeDesc(s.bl_tree, static_bl_desc);

  s.bi_buf = 0;
  s.bi_valid = 0;

  /* Initialize the first block of the first file: */
  init_block(s);
};


/* ===========================================================================
 * Send a stored block
 */
const _tr_stored_block$1 = (s, buf, stored_len, last) =>
//DeflateState *s;
//charf *buf;       /* input block */
//ulg stored_len;   /* length of input block */
//int last;         /* one if this is the last block for a file */
{
  send_bits(s, (STORED_BLOCK << 1) + (last ? 1 : 0), 3);    /* send block type */
  copy_block(s, buf, stored_len, true); /* with header */
};


/* ===========================================================================
 * Send one empty static block to give enough lookahead for inflate.
 * This takes 10 bits, of which 7 may remain in the bit buffer.
 */
const _tr_align$1 = (s) => {
  send_bits(s, STATIC_TREES << 1, 3);
  send_code(s, END_BLOCK, static_ltree);
  bi_flush(s);
};


/* ===========================================================================
 * Determine the best encoding for the current block: dynamic trees, static
 * trees or store, and output the encoded block to the zip file.
 */
const _tr_flush_block$1 = (s, buf, stored_len, last) =>
//DeflateState *s;
//charf *buf;       /* input block, or NULL if too old */
//ulg stored_len;   /* length of input block */
//int last;         /* one if this is the last block for a file */
{
  let opt_lenb, static_lenb;  /* opt_len and static_len in bytes */
  let max_blindex = 0;        /* index of last bit length code of non zero freq */

  /* Build the Huffman trees unless a stored block is forced */
  if (s.level > 0) {

    /* Check if the file is binary or text */
    if (s.strm.data_type === Z_UNKNOWN$1) {
      s.strm.data_type = detect_data_type(s);
    }

    /* Construct the literal and distance trees */
    build_tree(s, s.l_desc);
    // Tracev((stderr, "\nlit data: dyn %ld, stat %ld", s->opt_len,
    //        s->static_len));

    build_tree(s, s.d_desc);
    // Tracev((stderr, "\ndist data: dyn %ld, stat %ld", s->opt_len,
    //        s->static_len));
    /* At this point, opt_len and static_len are the total bit lengths of
     * the compressed block data, excluding the tree representations.
     */

    /* Build the bit length tree for the above two trees, and get the index
     * in bl_order of the last bit length code to send.
     */
    max_blindex = build_bl_tree(s);

    /* Determine the best encoding. Compute the block lengths in bytes. */
    opt_lenb = (s.opt_len + 3 + 7) >>> 3;
    static_lenb = (s.static_len + 3 + 7) >>> 3;

    // Tracev((stderr, "\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u ",
    //        opt_lenb, s->opt_len, static_lenb, s->static_len, stored_len,
    //        s->last_lit));

    if (static_lenb <= opt_lenb) { opt_lenb = static_lenb; }

  } else {
    // Assert(buf != (char*)0, "lost buf");
    opt_lenb = static_lenb = stored_len + 5; /* force a stored block */
  }

  if ((stored_len + 4 <= opt_lenb) && (buf !== -1)) {
    /* 4: two words for the lengths */

    /* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.
     * Otherwise we can't have processed more than WSIZE input bytes since
     * the last block flush, because compression would have been
     * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to
     * transform a block into a stored block.
     */
    _tr_stored_block$1(s, buf, stored_len, last);

  } else if (s.strategy === Z_FIXED$1 || static_lenb === opt_lenb) {

    send_bits(s, (STATIC_TREES << 1) + (last ? 1 : 0), 3);
    compress_block(s, static_ltree, static_dtree);

  } else {
    send_bits(s, (DYN_TREES << 1) + (last ? 1 : 0), 3);
    send_all_trees(s, s.l_desc.max_code + 1, s.d_desc.max_code + 1, max_blindex + 1);
    compress_block(s, s.dyn_ltree, s.dyn_dtree);
  }
  // Assert (s->compressed_len == s->bits_sent, "bad compressed size");
  /* The above check is made mod 2^32, for files larger than 512 MB
   * and uLong implemented on 32 bits.
   */
  init_block(s);

  if (last) {
    bi_windup(s);
  }
  // Tracev((stderr,"\ncomprlen %lu(%lu) ", s->compressed_len>>3,
  //       s->compressed_len-7*last));
};

/* ===========================================================================
 * Save the match info and tally the frequency counts. Return true if
 * the current block must be flushed.
 */
const _tr_tally$1 = (s, dist, lc) =>
//    deflate_state *s;
//    unsigned dist;  /* distance of matched string */
//    unsigned lc;    /* match length-MIN_MATCH or unmatched char (if dist==0) */
{
  //let out_length, in_length, dcode;

  s.pending_buf[s.d_buf + s.last_lit * 2]     = (dist >>> 8) & 0xff;
  s.pending_buf[s.d_buf + s.last_lit * 2 + 1] = dist & 0xff;

  s.pending_buf[s.l_buf + s.last_lit] = lc & 0xff;
  s.last_lit++;

  if (dist === 0) {
    /* lc is the unmatched char */
    s.dyn_ltree[lc * 2]/*.Freq*/++;
  } else {
    s.matches++;
    /* Here, lc is the match length - MIN_MATCH */
    dist--;             /* dist = match distance - 1 */
    //Assert((ush)dist < (ush)MAX_DIST(s) &&
    //       (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&
    //       (ush)d_code(dist) < (ush)D_CODES,  "_tr_tally: bad match");

    s.dyn_ltree[(_length_code[lc] + LITERALS$1 + 1) * 2]/*.Freq*/++;
    s.dyn_dtree[d_code(dist) * 2]/*.Freq*/++;
  }

// (!) This block is disabled in zlib defaults,
// don't enable it for binary compatibility

//#ifdef TRUNCATE_BLOCK
//  /* Try to guess if it is profitable to stop the current block here */
//  if ((s.last_lit & 0x1fff) === 0 && s.level > 2) {
//    /* Compute an upper bound for the compressed length */
//    out_length = s.last_lit*8;
//    in_length = s.strstart - s.block_start;
//
//    for (dcode = 0; dcode < D_CODES; dcode++) {
//      out_length += s.dyn_dtree[dcode*2]/*.Freq*/ * (5 + extra_dbits[dcode]);
//    }
//    out_length >>>= 3;
//    //Tracev((stderr,"\nlast_lit %u, in %ld, out ~%ld(%ld%%) ",
//    //       s->last_lit, in_length, out_length,
//    //       100L - out_length*100L/in_length));
//    if (s.matches < (s.last_lit>>1)/*int /2*/ && out_length < (in_length>>1)/*int /2*/) {
//      return true;
//    }
//  }
//#endif

  return (s.last_lit === s.lit_bufsize - 1);
  /* We avoid equality with lit_bufsize because of wraparound at 64K
   * on 16 bit machines and because stored blocks are restricted to
   * 64K-1 bytes.
   */
};

var _tr_init_1  = _tr_init$1;
var _tr_stored_block_1 = _tr_stored_block$1;
var _tr_flush_block_1  = _tr_flush_block$1;
var _tr_tally_1 = _tr_tally$1;
var _tr_align_1 = _tr_align$1;

var trees = {
	_tr_init: _tr_init_1,
	_tr_stored_block: _tr_stored_block_1,
	_tr_flush_block: _tr_flush_block_1,
	_tr_tally: _tr_tally_1,
	_tr_align: _tr_align_1
};

// Note: adler32 takes 12% for level 0 and 2% for level 6.
// It isn't worth it to make additional optimizations as in original.
// Small size is preferable.

// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

const adler32 = (adler, buf, len, pos) => {
  let s1 = (adler & 0xffff) |0,
      s2 = ((adler >>> 16) & 0xffff) |0,
      n = 0;

  while (len !== 0) {
    // Set limit ~ twice less than 5552, to keep
    // s2 in 31-bits, because we force signed ints.
    // in other case %= will fail.
    n = len > 2000 ? 2000 : len;
    len -= n;

    do {
      s1 = (s1 + buf[pos++]) |0;
      s2 = (s2 + s1) |0;
    } while (--n);

    s1 %= 65521;
    s2 %= 65521;
  }

  return (s1 | (s2 << 16)) |0;
};


var adler32_1 = adler32;

// Note: we can't get significant speed boost here.
// So write code to minimize size - no pregenerated tables
// and array tools dependencies.

// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

// Use ordinary array, since untyped makes no boost here
const makeTable = () => {
  let c, table = [];

  for (var n = 0; n < 256; n++) {
    c = n;
    for (var k = 0; k < 8; k++) {
      c = ((c & 1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));
    }
    table[n] = c;
  }

  return table;
};

// Create table on load. Just 255 signed longs. Not a problem.
const crcTable = new Uint32Array(makeTable());


const crc32 = (crc, buf, len, pos) => {
  const t = crcTable;
  const end = pos + len;

  crc ^= -1;

  for (let i = pos; i < end; i++) {
    crc = (crc >>> 8) ^ t[(crc ^ buf[i]) & 0xFF];
  }

  return (crc ^ (-1)); // >>> 0;
};


var crc32_1 = crc32;

// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

var messages = {
  2:      'need dictionary',     /* Z_NEED_DICT       2  */
  1:      'stream end',          /* Z_STREAM_END      1  */
  0:      '',                    /* Z_OK              0  */
  '-1':   'file error',          /* Z_ERRNO         (-1) */
  '-2':   'stream error',        /* Z_STREAM_ERROR  (-2) */
  '-3':   'data error',          /* Z_DATA_ERROR    (-3) */
  '-4':   'insufficient memory', /* Z_MEM_ERROR     (-4) */
  '-5':   'buffer error',        /* Z_BUF_ERROR     (-5) */
  '-6':   'incompatible version' /* Z_VERSION_ERROR (-6) */
};

// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

var constants$2 = {

  /* Allowed flush values; see deflate() and inflate() below for details */
  Z_NO_FLUSH:         0,
  Z_PARTIAL_FLUSH:    1,
  Z_SYNC_FLUSH:       2,
  Z_FULL_FLUSH:       3,
  Z_FINISH:           4,
  Z_BLOCK:            5,
  Z_TREES:            6,

  /* Return codes for the compression/decompression functions. Negative values
  * are errors, positive values are used for special but normal events.
  */
  Z_OK:               0,
  Z_STREAM_END:       1,
  Z_NEED_DICT:        2,
  Z_ERRNO:           -1,
  Z_STREAM_ERROR:    -2,
  Z_DATA_ERROR:      -3,
  Z_MEM_ERROR:       -4,
  Z_BUF_ERROR:       -5,
  //Z_VERSION_ERROR: -6,

  /* compression levels */
  Z_NO_COMPRESSION:         0,
  Z_BEST_SPEED:             1,
  Z_BEST_COMPRESSION:       9,
  Z_DEFAULT_COMPRESSION:   -1,


  Z_FILTERED:               1,
  Z_HUFFMAN_ONLY:           2,
  Z_RLE:                    3,
  Z_FIXED:                  4,
  Z_DEFAULT_STRATEGY:       0,

  /* Possible values of the data_type field (though see inflate()) */
  Z_BINARY:                 0,
  Z_TEXT:                   1,
  //Z_ASCII:                1, // = Z_TEXT (deprecated)
  Z_UNKNOWN:                2,

  /* The deflate compression method */
  Z_DEFLATED:               8
  //Z_NULL:                 null // Use -1 or null inline, depending on var type
};

// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

const { _tr_init, _tr_stored_block, _tr_flush_block, _tr_tally, _tr_align } = trees;




/* Public constants ==========================================================*/
/* ===========================================================================*/

const {
  Z_NO_FLUSH: Z_NO_FLUSH$2, Z_PARTIAL_FLUSH, Z_FULL_FLUSH: Z_FULL_FLUSH$1, Z_FINISH: Z_FINISH$3, Z_BLOCK: Z_BLOCK$1,
  Z_OK: Z_OK$3, Z_STREAM_END: Z_STREAM_END$3, Z_STREAM_ERROR: Z_STREAM_ERROR$2, Z_DATA_ERROR: Z_DATA_ERROR$2, Z_BUF_ERROR: Z_BUF_ERROR$1,
  Z_DEFAULT_COMPRESSION: Z_DEFAULT_COMPRESSION$1,
  Z_FILTERED, Z_HUFFMAN_ONLY, Z_RLE, Z_FIXED, Z_DEFAULT_STRATEGY: Z_DEFAULT_STRATEGY$1,
  Z_UNKNOWN,
  Z_DEFLATED: Z_DEFLATED$2
} = constants$2;

/*============================================================================*/


const MAX_MEM_LEVEL = 9;
/* Maximum value for memLevel in deflateInit2 */
const MAX_WBITS$1 = 15;
/* 32K LZ77 window */
const DEF_MEM_LEVEL = 8;


const LENGTH_CODES  = 29;
/* number of length codes, not counting the special END_BLOCK code */
const LITERALS      = 256;
/* number of literal bytes 0..255 */
const L_CODES       = LITERALS + 1 + LENGTH_CODES;
/* number of Literal or Length codes, including the END_BLOCK code */
const D_CODES       = 30;
/* number of distance codes */
const BL_CODES      = 19;
/* number of codes used to transfer the bit lengths */
const HEAP_SIZE     = 2 * L_CODES + 1;
/* maximum heap size */
const MAX_BITS  = 15;
/* All codes must not exceed MAX_BITS bits */

const MIN_MATCH = 3;
const MAX_MATCH = 258;
const MIN_LOOKAHEAD = (MAX_MATCH + MIN_MATCH + 1);

const PRESET_DICT = 0x20;

const INIT_STATE = 42;
const EXTRA_STATE = 69;
const NAME_STATE = 73;
const COMMENT_STATE = 91;
const HCRC_STATE = 103;
const BUSY_STATE = 113;
const FINISH_STATE = 666;

const BS_NEED_MORE      = 1; /* block not completed, need more input or more output */
const BS_BLOCK_DONE     = 2; /* block flush performed */
const BS_FINISH_STARTED = 3; /* finish started, need only more output at next deflate */
const BS_FINISH_DONE    = 4; /* finish done, accept no more input or output */

const OS_CODE = 0x03; // Unix :) . Don't detect, use this default.

const err = (strm, errorCode) => {
  strm.msg = messages[errorCode];
  return errorCode;
};

const rank = (f) => {
  return ((f) << 1) - ((f) > 4 ? 9 : 0);
};

const zero = (buf) => {
  let len = buf.length; while (--len >= 0) { buf[len] = 0; }
};


/* eslint-disable new-cap */
let HASH_ZLIB = (s, prev, data) => ((prev << s.hash_shift) ^ data) & s.hash_mask;
// This hash causes less collisions, https://github.com/nodeca/pako/issues/135
// But breaks binary compatibility
//let HASH_FAST = (s, prev, data) => ((prev << 8) + (prev >> 8) + (data << 4)) & s.hash_mask;
let HASH = HASH_ZLIB;

/* =========================================================================
 * Flush as much pending output as possible. All deflate() output goes
 * through this function so some applications may wish to modify it
 * to avoid allocating a large strm->output buffer and copying into it.
 * (See also read_buf()).
 */
const flush_pending = (strm) => {
  const s = strm.state;

  //_tr_flush_bits(s);
  let len = s.pending;
  if (len > strm.avail_out) {
    len = strm.avail_out;
  }
  if (len === 0) { return; }

  strm.output.set(s.pending_buf.subarray(s.pending_out, s.pending_out + len), strm.next_out);
  strm.next_out += len;
  s.pending_out += len;
  strm.total_out += len;
  strm.avail_out -= len;
  s.pending -= len;
  if (s.pending === 0) {
    s.pending_out = 0;
  }
};


const flush_block_only = (s, last) => {
  _tr_flush_block(s, (s.block_start >= 0 ? s.block_start : -1), s.strstart - s.block_start, last);
  s.block_start = s.strstart;
  flush_pending(s.strm);
};


const put_byte = (s, b) => {
  s.pending_buf[s.pending++] = b;
};


/* =========================================================================
 * Put a short in the pending buffer. The 16-bit value is put in MSB order.
 * IN assertion: the stream state is correct and there is enough room in
 * pending_buf.
 */
const putShortMSB = (s, b) => {

  //  put_byte(s, (Byte)(b >> 8));
//  put_byte(s, (Byte)(b & 0xff));
  s.pending_buf[s.pending++] = (b >>> 8) & 0xff;
  s.pending_buf[s.pending++] = b & 0xff;
};


/* ===========================================================================
 * Read a new buffer from the current input stream, update the adler32
 * and total number of bytes read.  All deflate() input goes through
 * this function so some applications may wish to modify it to avoid
 * allocating a large strm->input buffer and copying from it.
 * (See also flush_pending()).
 */
const read_buf = (strm, buf, start, size) => {

  let len = strm.avail_in;

  if (len > size) { len = size; }
  if (len === 0) { return 0; }

  strm.avail_in -= len;

  // zmemcpy(buf, strm->next_in, len);
  buf.set(strm.input.subarray(strm.next_in, strm.next_in + len), start);
  if (strm.state.wrap === 1) {
    strm.adler = adler32_1(strm.adler, buf, len, start);
  }

  else if (strm.state.wrap === 2) {
    strm.adler = crc32_1(strm.adler, buf, len, start);
  }

  strm.next_in += len;
  strm.total_in += len;

  return len;
};


/* ===========================================================================
 * Set match_start to the longest match starting at the given string and
 * return its length. Matches shorter or equal to prev_length are discarded,
 * in which case the result is equal to prev_length and match_start is
 * garbage.
 * IN assertions: cur_match is the head of the hash chain for the current
 *   string (strstart) and its distance is <= MAX_DIST, and prev_length >= 1
 * OUT assertion: the match length is not greater than s->lookahead.
 */
const longest_match = (s, cur_match) => {

  let chain_length = s.max_chain_length;      /* max hash chain length */
  let scan = s.strstart; /* current string */
  let match;                       /* matched string */
  let len;                           /* length of current match */
  let best_len = s.prev_length;              /* best match length so far */
  let nice_match = s.nice_match;             /* stop if match long enough */
  const limit = (s.strstart > (s.w_size - MIN_LOOKAHEAD)) ?
      s.strstart - (s.w_size - MIN_LOOKAHEAD) : 0/*NIL*/;

  const _win = s.window; // shortcut

  const wmask = s.w_mask;
  const prev  = s.prev;

  /* Stop when cur_match becomes <= limit. To simplify the code,
   * we prevent matches with the string of window index 0.
   */

  const strend = s.strstart + MAX_MATCH;
  let scan_end1  = _win[scan + best_len - 1];
  let scan_end   = _win[scan + best_len];

  /* The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of 16.
   * It is easy to get rid of this optimization if necessary.
   */
  // Assert(s->hash_bits >= 8 && MAX_MATCH == 258, "Code too clever");

  /* Do not waste too much time if we already have a good match: */
  if (s.prev_length >= s.good_match) {
    chain_length >>= 2;
  }
  /* Do not look for matches beyond the end of the input. This is necessary
   * to make deflate deterministic.
   */
  if (nice_match > s.lookahead) { nice_match = s.lookahead; }

  // Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, "need lookahead");

  do {
    // Assert(cur_match < s->strstart, "no future");
    match = cur_match;

    /* Skip to next match if the match length cannot increase
     * or if the match length is less than 2.  Note that the checks below
     * for insufficient lookahead only occur occasionally for performance
     * reasons.  Therefore uninitialized memory will be accessed, and
     * conditional jumps will be made that depend on those values.
     * However the length of the match is limited to the lookahead, so
     * the output of deflate is not affected by the uninitialized values.
     */

    if (_win[match + best_len]     !== scan_end  ||
        _win[match + best_len - 1] !== scan_end1 ||
        _win[match]                !== _win[scan] ||
        _win[++match]              !== _win[scan + 1]) {
      continue;
    }

    /* The check at best_len-1 can be removed because it will be made
     * again later. (This heuristic is not always a win.)
     * It is not necessary to compare scan[2] and match[2] since they
     * are always equal when the other bytes match, given that
     * the hash keys are equal and that HASH_BITS >= 8.
     */
    scan += 2;
    match++;
    // Assert(*scan == *match, "match[2]?");

    /* We check for insufficient lookahead only every 8th comparison;
     * the 256th check will be made at strstart+258.
     */
    do {
      /*jshint noempty:false*/
    } while (_win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&
             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&
             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&
             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&
             scan < strend);

    // Assert(scan <= s->window+(unsigned)(s->window_size-1), "wild scan");

    len = MAX_MATCH - (strend - scan);
    scan = strend - MAX_MATCH;

    if (len > best_len) {
      s.match_start = cur_match;
      best_len = len;
      if (len >= nice_match) {
        break;
      }
      scan_end1  = _win[scan + best_len - 1];
      scan_end   = _win[scan + best_len];
    }
  } while ((cur_match = prev[cur_match & wmask]) > limit && --chain_length !== 0);

  if (best_len <= s.lookahead) {
    return best_len;
  }
  return s.lookahead;
};


/* ===========================================================================
 * Fill the window when the lookahead becomes insufficient.
 * Updates strstart and lookahead.
 *
 * IN assertion: lookahead < MIN_LOOKAHEAD
 * OUT assertions: strstart <= window_size-MIN_LOOKAHEAD
 *    At least one byte has been read, or avail_in == 0; reads are
 *    performed for at least two bytes (required for the zip translate_eol
 *    option -- not supported here).
 */
const fill_window = (s) => {

  const _w_size = s.w_size;
  let p, n, m, more, str;

  //Assert(s->lookahead < MIN_LOOKAHEAD, "already enough lookahead");

  do {
    more = s.window_size - s.lookahead - s.strstart;

    // JS ints have 32 bit, block below not needed
    /* Deal with !@#$% 64K limit: */
    //if (sizeof(int) <= 2) {
    //    if (more == 0 && s->strstart == 0 && s->lookahead == 0) {
    //        more = wsize;
    //
    //  } else if (more == (unsigned)(-1)) {
    //        /* Very unlikely, but possible on 16 bit machine if
    //         * strstart == 0 && lookahead == 1 (input done a byte at time)
    //         */
    //        more--;
    //    }
    //}


    /* If the window is almost full and there is insufficient lookahead,
     * move the upper half to the lower one to make room in the upper half.
     */
    if (s.strstart >= _w_size + (_w_size - MIN_LOOKAHEAD)) {

      s.window.set(s.window.subarray(_w_size, _w_size + _w_size), 0);
      s.match_start -= _w_size;
      s.strstart -= _w_size;
      /* we now have strstart >= MAX_DIST */
      s.block_start -= _w_size;

      /* Slide the hash table (could be avoided with 32 bit values
       at the expense of memory usage). We slide even when level == 0
       to keep the hash table consistent if we switch back to level > 0
       later. (Using level 0 permanently is not an optimal usage of
       zlib, so we don't care about this pathological case.)
       */

      n = s.hash_size;
      p = n;

      do {
        m = s.head[--p];
        s.head[p] = (m >= _w_size ? m - _w_size : 0);
      } while (--n);

      n = _w_size;
      p = n;

      do {
        m = s.prev[--p];
        s.prev[p] = (m >= _w_size ? m - _w_size : 0);
        /* If n is not on any hash chain, prev[n] is garbage but
         * its value will never be used.
         */
      } while (--n);

      more += _w_size;
    }
    if (s.strm.avail_in === 0) {
      break;
    }

    /* If there was no sliding:
     *    strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&
     *    more == window_size - lookahead - strstart
     * => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)
     * => more >= window_size - 2*WSIZE + 2
     * In the BIG_MEM or MMAP case (not yet supported),
     *   window_size == input_size + MIN_LOOKAHEAD  &&
     *   strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.
     * Otherwise, window_size == 2*WSIZE so more >= 2.
     * If there was sliding, more >= WSIZE. So in all cases, more >= 2.
     */
    //Assert(more >= 2, "more < 2");
    n = read_buf(s.strm, s.window, s.strstart + s.lookahead, more);
    s.lookahead += n;

    /* Initialize the hash value now that we have some input: */
    if (s.lookahead + s.insert >= MIN_MATCH) {
      str = s.strstart - s.insert;
      s.ins_h = s.window[str];

      /* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */
      s.ins_h = HASH(s, s.ins_h, s.window[str + 1]);
//#if MIN_MATCH != 3
//        Call update_hash() MIN_MATCH-3 more times
//#endif
      while (s.insert) {
        /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */
        s.ins_h = HASH(s, s.ins_h, s.window[str + MIN_MATCH - 1]);

        s.prev[str & s.w_mask] = s.head[s.ins_h];
        s.head[s.ins_h] = str;
        str++;
        s.insert--;
        if (s.lookahead + s.insert < MIN_MATCH) {
          break;
        }
      }
    }
    /* If the whole input has less than MIN_MATCH bytes, ins_h is garbage,
     * but this is not important since only literal bytes will be emitted.
     */

  } while (s.lookahead < MIN_LOOKAHEAD && s.strm.avail_in !== 0);

  /* If the WIN_INIT bytes after the end of the current data have never been
   * written, then zero those bytes in order to avoid memory check reports of
   * the use of uninitialized (or uninitialised as Julian writes) bytes by
   * the longest match routines.  Update the high water mark for the next
   * time through here.  WIN_INIT is set to MAX_MATCH since the longest match
   * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.
   */
//  if (s.high_water < s.window_size) {
//    const curr = s.strstart + s.lookahead;
//    let init = 0;
//
//    if (s.high_water < curr) {
//      /* Previous high water mark below current data -- zero WIN_INIT
//       * bytes or up to end of window, whichever is less.
//       */
//      init = s.window_size - curr;
//      if (init > WIN_INIT)
//        init = WIN_INIT;
//      zmemzero(s->window + curr, (unsigned)init);
//      s->high_water = curr + init;
//    }
//    else if (s->high_water < (ulg)curr + WIN_INIT) {
//      /* High water mark at or above current data, but below current data
//       * plus WIN_INIT -- zero out to current data plus WIN_INIT, or up
//       * to end of window, whichever is less.
//       */
//      init = (ulg)curr + WIN_INIT - s->high_water;
//      if (init > s->window_size - s->high_water)
//        init = s->window_size - s->high_water;
//      zmemzero(s->window + s->high_water, (unsigned)init);
//      s->high_water += init;
//    }
//  }
//
//  Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,
//    "not enough room for search");
};

/* ===========================================================================
 * Copy without compression as much as possible from the input stream, return
 * the current block state.
 * This function does not insert new strings in the dictionary since
 * uncompressible data is probably not useful. This function is used
 * only for the level=0 compression option.
 * NOTE: this function should be optimized to avoid extra copying from
 * window to pending_buf.
 */
const deflate_stored = (s, flush) => {

  /* Stored blocks are limited to 0xffff bytes, pending_buf is limited
   * to pending_buf_size, and each stored block has a 5 byte header:
   */
  let max_block_size = 0xffff;

  if (max_block_size > s.pending_buf_size - 5) {
    max_block_size = s.pending_buf_size - 5;
  }

  /* Copy as much as possible from input to output: */
  for (;;) {
    /* Fill the window as much as possible: */
    if (s.lookahead <= 1) {

      //Assert(s->strstart < s->w_size+MAX_DIST(s) ||
      //  s->block_start >= (long)s->w_size, "slide too late");
//      if (!(s.strstart < s.w_size + (s.w_size - MIN_LOOKAHEAD) ||
//        s.block_start >= s.w_size)) {
//        throw  new Error("slide too late");
//      }

      fill_window(s);
      if (s.lookahead === 0 && flush === Z_NO_FLUSH$2) {
        return BS_NEED_MORE;
      }

      if (s.lookahead === 0) {
        break;
      }
      /* flush the current block */
    }
    //Assert(s->block_start >= 0L, "block gone");
//    if (s.block_start < 0) throw new Error("block gone");

    s.strstart += s.lookahead;
    s.lookahead = 0;

    /* Emit a stored block if pending_buf will be full: */
    const max_start = s.block_start + max_block_size;

    if (s.strstart === 0 || s.strstart >= max_start) {
      /* strstart == 0 is possible when wraparound on 16-bit machine */
      s.lookahead = s.strstart - max_start;
      s.strstart = max_start;
      /*** FLUSH_BLOCK(s, 0); ***/
      flush_block_only(s, false);
      if (s.strm.avail_out === 0) {
        return BS_NEED_MORE;
      }
      /***/


    }
    /* Flush if we may have to slide, otherwise block_start may become
     * negative and the data will be gone:
     */
    if (s.strstart - s.block_start >= (s.w_size - MIN_LOOKAHEAD)) {
      /*** FLUSH_BLOCK(s, 0); ***/
      flush_block_only(s, false);
      if (s.strm.avail_out === 0) {
        return BS_NEED_MORE;
      }
      /***/
    }
  }

  s.insert = 0;

  if (flush === Z_FINISH$3) {
    /*** FLUSH_BLOCK(s, 1); ***/
    flush_block_only(s, true);
    if (s.strm.avail_out === 0) {
      return BS_FINISH_STARTED;
    }
    /***/
    return BS_FINISH_DONE;
  }

  if (s.strstart > s.block_start) {
    /*** FLUSH_BLOCK(s, 0); ***/
    flush_block_only(s, false);
    if (s.strm.avail_out === 0) {
      return BS_NEED_MORE;
    }
    /***/
  }

  return BS_NEED_MORE;
};

/* ===========================================================================
 * Compress as much as possible from the input stream, return the current
 * block state.
 * This function does not perform lazy evaluation of matches and inserts
 * new strings in the dictionary only for unmatched strings or for short
 * matches. It is used only for the fast compression options.
 */
const deflate_fast = (s, flush) => {

  let hash_head;        /* head of the hash chain */
  let bflush;           /* set if current block must be flushed */

  for (;;) {
    /* Make sure that we always have enough lookahead, except
     * at the end of the input file. We need MAX_MATCH bytes
     * for the next match, plus MIN_MATCH bytes to insert the
     * string following the next match.
     */
    if (s.lookahead < MIN_LOOKAHEAD) {
      fill_window(s);
      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH$2) {
        return BS_NEED_MORE;
      }
      if (s.lookahead === 0) {
        break; /* flush the current block */
      }
    }

    /* Insert the string window[strstart .. strstart+2] in the
     * dictionary, and set hash_head to the head of the hash chain:
     */
    hash_head = 0/*NIL*/;
    if (s.lookahead >= MIN_MATCH) {
      /*** INSERT_STRING(s, s.strstart, hash_head); ***/
      s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);
      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];
      s.head[s.ins_h] = s.strstart;
      /***/
    }

    /* Find the longest match, discarding those <= prev_length.
     * At this point we have always match_length < MIN_MATCH
     */
    if (hash_head !== 0/*NIL*/ && ((s.strstart - hash_head) <= (s.w_size - MIN_LOOKAHEAD))) {
      /* To simplify the code, we prevent matches with the string
       * of window index 0 (in particular we have to avoid a match
       * of the string with itself at the start of the input file).
       */
      s.match_length = longest_match(s, hash_head);
      /* longest_match() sets match_start */
    }
    if (s.match_length >= MIN_MATCH) {
      // check_match(s, s.strstart, s.match_start, s.match_length); // for debug only

      /*** _tr_tally_dist(s, s.strstart - s.match_start,
                     s.match_length - MIN_MATCH, bflush); ***/
      bflush = _tr_tally(s, s.strstart - s.match_start, s.match_length - MIN_MATCH);

      s.lookahead -= s.match_length;

      /* Insert new strings in the hash table only if the match length
       * is not too large. This saves time but degrades compression.
       */
      if (s.match_length <= s.max_lazy_match/*max_insert_length*/ && s.lookahead >= MIN_MATCH) {
        s.match_length--; /* string at strstart already in table */
        do {
          s.strstart++;
          /*** INSERT_STRING(s, s.strstart, hash_head); ***/
          s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);
          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];
          s.head[s.ins_h] = s.strstart;
          /***/
          /* strstart never exceeds WSIZE-MAX_MATCH, so there are
           * always MIN_MATCH bytes ahead.
           */
        } while (--s.match_length !== 0);
        s.strstart++;
      } else
      {
        s.strstart += s.match_length;
        s.match_length = 0;
        s.ins_h = s.window[s.strstart];
        /* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */
        s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + 1]);

//#if MIN_MATCH != 3
//                Call UPDATE_HASH() MIN_MATCH-3 more times
//#endif
        /* If lookahead < MIN_MATCH, ins_h is garbage, but it does not
         * matter since it will be recomputed at next deflate call.
         */
      }
    } else {
      /* No match, output a literal byte */
      //Tracevv((stderr,"%c", s.window[s.strstart]));
      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/
      bflush = _tr_tally(s, 0, s.window[s.strstart]);

      s.lookahead--;
      s.strstart++;
    }
    if (bflush) {
      /*** FLUSH_BLOCK(s, 0); ***/
      flush_block_only(s, false);
      if (s.strm.avail_out === 0) {
        return BS_NEED_MORE;
      }
      /***/
    }
  }
  s.insert = ((s.strstart < (MIN_MATCH - 1)) ? s.strstart : MIN_MATCH - 1);
  if (flush === Z_FINISH$3) {
    /*** FLUSH_BLOCK(s, 1); ***/
    flush_block_only(s, true);
    if (s.strm.avail_out === 0) {
      return BS_FINISH_STARTED;
    }
    /***/
    return BS_FINISH_DONE;
  }
  if (s.last_lit) {
    /*** FLUSH_BLOCK(s, 0); ***/
    flush_block_only(s, false);
    if (s.strm.avail_out === 0) {
      return BS_NEED_MORE;
    }
    /***/
  }
  return BS_BLOCK_DONE;
};

/* ===========================================================================
 * Same as above, but achieves better compression. We use a lazy
 * evaluation for matches: a match is finally adopted only if there is
 * no better match at the next window position.
 */
const deflate_slow = (s, flush) => {

  let hash_head;          /* head of hash chain */
  let bflush;              /* set if current block must be flushed */

  let max_insert;

  /* Process the input block. */
  for (;;) {
    /* Make sure that we always have enough lookahead, except
     * at the end of the input file. We need MAX_MATCH bytes
     * for the next match, plus MIN_MATCH bytes to insert the
     * string following the next match.
     */
    if (s.lookahead < MIN_LOOKAHEAD) {
      fill_window(s);
      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH$2) {
        return BS_NEED_MORE;
      }
      if (s.lookahead === 0) { break; } /* flush the current block */
    }

    /* Insert the string window[strstart .. strstart+2] in the
     * dictionary, and set hash_head to the head of the hash chain:
     */
    hash_head = 0/*NIL*/;
    if (s.lookahead >= MIN_MATCH) {
      /*** INSERT_STRING(s, s.strstart, hash_head); ***/
      s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);
      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];
      s.head[s.ins_h] = s.strstart;
      /***/
    }

    /* Find the longest match, discarding those <= prev_length.
     */
    s.prev_length = s.match_length;
    s.prev_match = s.match_start;
    s.match_length = MIN_MATCH - 1;

    if (hash_head !== 0/*NIL*/ && s.prev_length < s.max_lazy_match &&
        s.strstart - hash_head <= (s.w_size - MIN_LOOKAHEAD)/*MAX_DIST(s)*/) {
      /* To simplify the code, we prevent matches with the string
       * of window index 0 (in particular we have to avoid a match
       * of the string with itself at the start of the input file).
       */
      s.match_length = longest_match(s, hash_head);
      /* longest_match() sets match_start */

      if (s.match_length <= 5 &&
         (s.strategy === Z_FILTERED || (s.match_length === MIN_MATCH && s.strstart - s.match_start > 4096/*TOO_FAR*/))) {

        /* If prev_match is also MIN_MATCH, match_start is garbage
         * but we will ignore the current match anyway.
         */
        s.match_length = MIN_MATCH - 1;
      }
    }
    /* If there was a match at the previous step and the current
     * match is not better, output the previous match:
     */
    if (s.prev_length >= MIN_MATCH && s.match_length <= s.prev_length) {
      max_insert = s.strstart + s.lookahead - MIN_MATCH;
      /* Do not insert strings in hash table beyond this. */

      //check_match(s, s.strstart-1, s.prev_match, s.prev_length);

      /***_tr_tally_dist(s, s.strstart - 1 - s.prev_match,
                     s.prev_length - MIN_MATCH, bflush);***/
      bflush = _tr_tally(s, s.strstart - 1 - s.prev_match, s.prev_length - MIN_MATCH);
      /* Insert in hash table all strings up to the end of the match.
       * strstart-1 and strstart are already inserted. If there is not
       * enough lookahead, the last two strings are not inserted in
       * the hash table.
       */
      s.lookahead -= s.prev_length - 1;
      s.prev_length -= 2;
      do {
        if (++s.strstart <= max_insert) {
          /*** INSERT_STRING(s, s.strstart, hash_head); ***/
          s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);
          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];
          s.head[s.ins_h] = s.strstart;
          /***/
        }
      } while (--s.prev_length !== 0);
      s.match_available = 0;
      s.match_length = MIN_MATCH - 1;
      s.strstart++;

      if (bflush) {
        /*** FLUSH_BLOCK(s, 0); ***/
        flush_block_only(s, false);
        if (s.strm.avail_out === 0) {
          return BS_NEED_MORE;
        }
        /***/
      }

    } else if (s.match_available) {
      /* If there was no match at the previous position, output a
       * single literal. If there was a match but the current match
       * is longer, truncate the previous match to a single literal.
       */
      //Tracevv((stderr,"%c", s->window[s->strstart-1]));
      /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/
      bflush = _tr_tally(s, 0, s.window[s.strstart - 1]);

      if (bflush) {
        /*** FLUSH_BLOCK_ONLY(s, 0) ***/
        flush_block_only(s, false);
        /***/
      }
      s.strstart++;
      s.lookahead--;
      if (s.strm.avail_out === 0) {
        return BS_NEED_MORE;
      }
    } else {
      /* There is no previous match to compare with, wait for
       * the next step to decide.
       */
      s.match_available = 1;
      s.strstart++;
      s.lookahead--;
    }
  }
  //Assert (flush != Z_NO_FLUSH, "no flush?");
  if (s.match_available) {
    //Tracevv((stderr,"%c", s->window[s->strstart-1]));
    /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/
    bflush = _tr_tally(s, 0, s.window[s.strstart - 1]);

    s.match_available = 0;
  }
  s.insert = s.strstart < MIN_MATCH - 1 ? s.strstart : MIN_MATCH - 1;
  if (flush === Z_FINISH$3) {
    /*** FLUSH_BLOCK(s, 1); ***/
    flush_block_only(s, true);
    if (s.strm.avail_out === 0) {
      return BS_FINISH_STARTED;
    }
    /***/
    return BS_FINISH_DONE;
  }
  if (s.last_lit) {
    /*** FLUSH_BLOCK(s, 0); ***/
    flush_block_only(s, false);
    if (s.strm.avail_out === 0) {
      return BS_NEED_MORE;
    }
    /***/
  }

  return BS_BLOCK_DONE;
};


/* ===========================================================================
 * For Z_RLE, simply look for runs of bytes, generate matches only of distance
 * one.  Do not maintain a hash table.  (It will be regenerated if this run of
 * deflate switches away from Z_RLE.)
 */
const deflate_rle = (s, flush) => {

  let bflush;            /* set if current block must be flushed */
  let prev;              /* byte at distance one to match */
  let scan, strend;      /* scan goes up to strend for length of run */

  const _win = s.window;

  for (;;) {
    /* Make sure that we always have enough lookahead, except
     * at the end of the input file. We need MAX_MATCH bytes
     * for the longest run, plus one for the unrolled loop.
     */
    if (s.lookahead <= MAX_MATCH) {
      fill_window(s);
      if (s.lookahead <= MAX_MATCH && flush === Z_NO_FLUSH$2) {
        return BS_NEED_MORE;
      }
      if (s.lookahead === 0) { break; } /* flush the current block */
    }

    /* See how many times the previous byte repeats */
    s.match_length = 0;
    if (s.lookahead >= MIN_MATCH && s.strstart > 0) {
      scan = s.strstart - 1;
      prev = _win[scan];
      if (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan]) {
        strend = s.strstart + MAX_MATCH;
        do {
          /*jshint noempty:false*/
        } while (prev === _win[++scan] && prev === _win[++scan] &&
                 prev === _win[++scan] && prev === _win[++scan] &&
                 prev === _win[++scan] && prev === _win[++scan] &&
                 prev === _win[++scan] && prev === _win[++scan] &&
                 scan < strend);
        s.match_length = MAX_MATCH - (strend - scan);
        if (s.match_length > s.lookahead) {
          s.match_length = s.lookahead;
        }
      }
      //Assert(scan <= s->window+(uInt)(s->window_size-1), "wild scan");
    }

    /* Emit match if have run of MIN_MATCH or longer, else emit literal */
    if (s.match_length >= MIN_MATCH) {
      //check_match(s, s.strstart, s.strstart - 1, s.match_length);

      /*** _tr_tally_dist(s, 1, s.match_length - MIN_MATCH, bflush); ***/
      bflush = _tr_tally(s, 1, s.match_length - MIN_MATCH);

      s.lookahead -= s.match_length;
      s.strstart += s.match_length;
      s.match_length = 0;
    } else {
      /* No match, output a literal byte */
      //Tracevv((stderr,"%c", s->window[s->strstart]));
      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/
      bflush = _tr_tally(s, 0, s.window[s.strstart]);

      s.lookahead--;
      s.strstart++;
    }
    if (bflush) {
      /*** FLUSH_BLOCK(s, 0); ***/
      flush_block_only(s, false);
      if (s.strm.avail_out === 0) {
        return BS_NEED_MORE;
      }
      /***/
    }
  }
  s.insert = 0;
  if (flush === Z_FINISH$3) {
    /*** FLUSH_BLOCK(s, 1); ***/
    flush_block_only(s, true);
    if (s.strm.avail_out === 0) {
      return BS_FINISH_STARTED;
    }
    /***/
    return BS_FINISH_DONE;
  }
  if (s.last_lit) {
    /*** FLUSH_BLOCK(s, 0); ***/
    flush_block_only(s, false);
    if (s.strm.avail_out === 0) {
      return BS_NEED_MORE;
    }
    /***/
  }
  return BS_BLOCK_DONE;
};

/* ===========================================================================
 * For Z_HUFFMAN_ONLY, do not look for matches.  Do not maintain a hash table.
 * (It will be regenerated if this run of deflate switches away from Huffman.)
 */
const deflate_huff = (s, flush) => {

  let bflush;             /* set if current block must be flushed */

  for (;;) {
    /* Make sure that we have a literal to write. */
    if (s.lookahead === 0) {
      fill_window(s);
      if (s.lookahead === 0) {
        if (flush === Z_NO_FLUSH$2) {
          return BS_NEED_MORE;
        }
        break;      /* flush the current block */
      }
    }

    /* Output a literal byte */
    s.match_length = 0;
    //Tracevv((stderr,"%c", s->window[s->strstart]));
    /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/
    bflush = _tr_tally(s, 0, s.window[s.strstart]);
    s.lookahead--;
    s.strstart++;
    if (bflush) {
      /*** FLUSH_BLOCK(s, 0); ***/
      flush_block_only(s, false);
      if (s.strm.avail_out === 0) {
        return BS_NEED_MORE;
      }
      /***/
    }
  }
  s.insert = 0;
  if (flush === Z_FINISH$3) {
    /*** FLUSH_BLOCK(s, 1); ***/
    flush_block_only(s, true);
    if (s.strm.avail_out === 0) {
      return BS_FINISH_STARTED;
    }
    /***/
    return BS_FINISH_DONE;
  }
  if (s.last_lit) {
    /*** FLUSH_BLOCK(s, 0); ***/
    flush_block_only(s, false);
    if (s.strm.avail_out === 0) {
      return BS_NEED_MORE;
    }
    /***/
  }
  return BS_BLOCK_DONE;
};

/* Values for max_lazy_match, good_match and max_chain_length, depending on
 * the desired pack level (0..9). The values given below have been tuned to
 * exclude worst case performance for pathological files. Better values may be
 * found for specific files.
 */
function Config(good_length, max_lazy, nice_length, max_chain, func) {

  this.good_length = good_length;
  this.max_lazy = max_lazy;
  this.nice_length = nice_length;
  this.max_chain = max_chain;
  this.func = func;
}

const configuration_table = [
  /*      good lazy nice chain */
  new Config(0, 0, 0, 0, deflate_stored),          /* 0 store only */
  new Config(4, 4, 8, 4, deflate_fast),            /* 1 max speed, no lazy matches */
  new Config(4, 5, 16, 8, deflate_fast),           /* 2 */
  new Config(4, 6, 32, 32, deflate_fast),          /* 3 */

  new Config(4, 4, 16, 16, deflate_slow),          /* 4 lazy matches */
  new Config(8, 16, 32, 32, deflate_slow),         /* 5 */
  new Config(8, 16, 128, 128, deflate_slow),       /* 6 */
  new Config(8, 32, 128, 256, deflate_slow),       /* 7 */
  new Config(32, 128, 258, 1024, deflate_slow),    /* 8 */
  new Config(32, 258, 258, 4096, deflate_slow)     /* 9 max compression */
];


/* ===========================================================================
 * Initialize the "longest match" routines for a new zlib stream
 */
const lm_init = (s) => {

  s.window_size = 2 * s.w_size;

  /*** CLEAR_HASH(s); ***/
  zero(s.head); // Fill with NIL (= 0);

  /* Set the default configuration parameters:
   */
  s.max_lazy_match = configuration_table[s.level].max_lazy;
  s.good_match = configuration_table[s.level].good_length;
  s.nice_match = configuration_table[s.level].nice_length;
  s.max_chain_length = configuration_table[s.level].max_chain;

  s.strstart = 0;
  s.block_start = 0;
  s.lookahead = 0;
  s.insert = 0;
  s.match_length = s.prev_length = MIN_MATCH - 1;
  s.match_available = 0;
  s.ins_h = 0;
};


function DeflateState() {
  this.strm = null;            /* pointer back to this zlib stream */
  this.status = 0;            /* as the name implies */
  this.pending_buf = null;      /* output still pending */
  this.pending_buf_size = 0;  /* size of pending_buf */
  this.pending_out = 0;       /* next pending byte to output to the stream */
  this.pending = 0;           /* nb of bytes in the pending buffer */
  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */
  this.gzhead = null;         /* gzip header information to write */
  this.gzindex = 0;           /* where in extra, name, or comment */
  this.method = Z_DEFLATED$2; /* can only be DEFLATED */
  this.last_flush = -1;   /* value of flush param for previous deflate call */

  this.w_size = 0;  /* LZ77 window size (32K by default) */
  this.w_bits = 0;  /* log2(w_size)  (8..16) */
  this.w_mask = 0;  /* w_size - 1 */

  this.window = null;
  /* Sliding window. Input bytes are read into the second half of the window,
   * and move to the first half later to keep a dictionary of at least wSize
   * bytes. With this organization, matches are limited to a distance of
   * wSize-MAX_MATCH bytes, but this ensures that IO is always
   * performed with a length multiple of the block size.
   */

  this.window_size = 0;
  /* Actual size of window: 2*wSize, except when the user input buffer
   * is directly used as sliding window.
   */

  this.prev = null;
  /* Link to older string with same hash index. To limit the size of this
   * array to 64K, this link is maintained only for the last 32K strings.
   * An index in this array is thus a window index modulo 32K.
   */

  this.head = null;   /* Heads of the hash chains or NIL. */

  this.ins_h = 0;       /* hash index of string to be inserted */
  this.hash_size = 0;   /* number of elements in hash table */
  this.hash_bits = 0;   /* log2(hash_size) */
  this.hash_mask = 0;   /* hash_size-1 */

  this.hash_shift = 0;
  /* Number of bits by which ins_h must be shifted at each input
   * step. It must be such that after MIN_MATCH steps, the oldest
   * byte no longer takes part in the hash key, that is:
   *   hash_shift * MIN_MATCH >= hash_bits
   */

  this.block_start = 0;
  /* Window position at the beginning of the current output block. Gets
   * negative when the window is moved backwards.
   */

  this.match_length = 0;      /* length of best match */
  this.prev_match = 0;        /* previous match */
  this.match_available = 0;   /* set if previous match exists */
  this.strstart = 0;          /* start of string to insert */
  this.match_start = 0;       /* start of matching string */
  this.lookahead = 0;         /* number of valid bytes ahead in window */

  this.prev_length = 0;
  /* Length of the best match at previous step. Matches not greater than this
   * are discarded. This is used in the lazy match evaluation.
   */

  this.max_chain_length = 0;
  /* To speed up deflation, hash chains are never searched beyond this
   * length.  A higher limit improves compression ratio but degrades the
   * speed.
   */

  this.max_lazy_match = 0;
  /* Attempt to find a better match only when the current match is strictly
   * smaller than this value. This mechanism is used only for compression
   * levels >= 4.
   */
  // That's alias to max_lazy_match, don't use directly
  //this.max_insert_length = 0;
  /* Insert new strings in the hash table only if the match length is not
   * greater than this length. This saves time but degrades compression.
   * max_insert_length is used only for compression levels <= 3.
   */

  this.level = 0;     /* compression level (1..9) */
  this.strategy = 0;  /* favor or force Huffman coding*/

  this.good_match = 0;
  /* Use a faster search when the previous match is longer than this */

  this.nice_match = 0; /* Stop searching when current match exceeds this */

              /* used by trees.c: */

  /* Didn't use ct_data typedef below to suppress compiler warning */

  // struct ct_data_s dyn_ltree[HEAP_SIZE];   /* literal and length tree */
  // struct ct_data_s dyn_dtree[2*D_CODES+1]; /* distance tree */
  // struct ct_data_s bl_tree[2*BL_CODES+1];  /* Huffman tree for bit lengths */

  // Use flat array of DOUBLE size, with interleaved fata,
  // because JS does not support effective
  this.dyn_ltree  = new Uint16Array(HEAP_SIZE * 2);
  this.dyn_dtree  = new Uint16Array((2 * D_CODES + 1) * 2);
  this.bl_tree    = new Uint16Array((2 * BL_CODES + 1) * 2);
  zero(this.dyn_ltree);
  zero(this.dyn_dtree);
  zero(this.bl_tree);

  this.l_desc   = null;         /* desc. for literal tree */
  this.d_desc   = null;         /* desc. for distance tree */
  this.bl_desc  = null;         /* desc. for bit length tree */

  //ush bl_count[MAX_BITS+1];
  this.bl_count = new Uint16Array(MAX_BITS + 1);
  /* number of codes at each bit length for an optimal tree */

  //int heap[2*L_CODES+1];      /* heap used to build the Huffman trees */
  this.heap = new Uint16Array(2 * L_CODES + 1);  /* heap used to build the Huffman trees */
  zero(this.heap);

  this.heap_len = 0;               /* number of elements in the heap */
  this.heap_max = 0;               /* element of largest frequency */
  /* The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.
   * The same heap array is used to build all trees.
   */

  this.depth = new Uint16Array(2 * L_CODES + 1); //uch depth[2*L_CODES+1];
  zero(this.depth);
  /* Depth of each subtree used as tie breaker for trees of equal frequency
   */

  this.l_buf = 0;          /* buffer index for literals or lengths */

  this.lit_bufsize = 0;
  /* Size of match buffer for literals/lengths.  There are 4 reasons for
   * limiting lit_bufsize to 64K:
   *   - frequencies can be kept in 16 bit counters
   *   - if compression is not successful for the first block, all input
   *     data is still in the window so we can still emit a stored block even
   *     when input comes from standard input.  (This can also be done for
   *     all blocks if lit_bufsize is not greater than 32K.)
   *   - if compression is not successful for a file smaller than 64K, we can
   *     even emit a stored file instead of a stored block (saving 5 bytes).
   *     This is applicable only for zip (not gzip or zlib).
   *   - creating new Huffman trees less frequently may not provide fast
   *     adaptation to changes in the input data statistics. (Take for
   *     example a binary file with poorly compressible code followed by
   *     a highly compressible string table.) Smaller buffer sizes give
   *     fast adaptation but have of course the overhead of transmitting
   *     trees more frequently.
   *   - I can't count above 4
   */

  this.last_lit = 0;      /* running index in l_buf */

  this.d_buf = 0;
  /* Buffer index for distances. To simplify the code, d_buf and l_buf have
   * the same number of elements. To use different lengths, an extra flag
   * array would be necessary.
   */

  this.opt_len = 0;       /* bit length of current block with optimal trees */
  this.static_len = 0;    /* bit length of current block with static trees */
  this.matches = 0;       /* number of string matches in current block */
  this.insert = 0;        /* bytes at end of window left to insert */


  this.bi_buf = 0;
  /* Output buffer. bits are inserted starting at the bottom (least
   * significant bits).
   */
  this.bi_valid = 0;
  /* Number of valid bits in bi_buf.  All bits above the last valid bit
   * are always zero.
   */

  // Used for window memory init. We safely ignore it for JS. That makes
  // sense only for pointers and memory check tools.
  //this.high_water = 0;
  /* High water mark offset in window for initialized bytes -- bytes above
   * this are set to zero in order to avoid memory check warnings when
   * longest match routines access bytes past the input.  This is then
   * updated to the new high water mark.
   */
}


const deflateResetKeep = (strm) => {

  if (!strm || !strm.state) {
    return err(strm, Z_STREAM_ERROR$2);
  }

  strm.total_in = strm.total_out = 0;
  strm.data_type = Z_UNKNOWN;

  const s = strm.state;
  s.pending = 0;
  s.pending_out = 0;

  if (s.wrap < 0) {
    s.wrap = -s.wrap;
    /* was made negative by deflate(..., Z_FINISH); */
  }
  s.status = (s.wrap ? INIT_STATE : BUSY_STATE);
  strm.adler = (s.wrap === 2) ?
    0  // crc32(0, Z_NULL, 0)
  :
    1; // adler32(0, Z_NULL, 0)
  s.last_flush = Z_NO_FLUSH$2;
  _tr_init(s);
  return Z_OK$3;
};


const deflateReset = (strm) => {

  const ret = deflateResetKeep(strm);
  if (ret === Z_OK$3) {
    lm_init(strm.state);
  }
  return ret;
};


const deflateSetHeader = (strm, head) => {

  if (!strm || !strm.state) { return Z_STREAM_ERROR$2; }
  if (strm.state.wrap !== 2) { return Z_STREAM_ERROR$2; }
  strm.state.gzhead = head;
  return Z_OK$3;
};


const deflateInit2 = (strm, level, method, windowBits, memLevel, strategy) => {

  if (!strm) { // === Z_NULL
    return Z_STREAM_ERROR$2;
  }
  let wrap = 1;

  if (level === Z_DEFAULT_COMPRESSION$1) {
    level = 6;
  }

  if (windowBits < 0) { /* suppress zlib wrapper */
    wrap = 0;
    windowBits = -windowBits;
  }

  else if (windowBits > 15) {
    wrap = 2;           /* write gzip wrapper instead */
    windowBits -= 16;
  }


  if (memLevel < 1 || memLevel > MAX_MEM_LEVEL || method !== Z_DEFLATED$2 ||
    windowBits < 8 || windowBits > 15 || level < 0 || level > 9 ||
    strategy < 0 || strategy > Z_FIXED) {
    return err(strm, Z_STREAM_ERROR$2);
  }


  if (windowBits === 8) {
    windowBits = 9;
  }
  /* until 256-byte window bug fixed */

  const s = new DeflateState();

  strm.state = s;
  s.strm = strm;

  s.wrap = wrap;
  s.gzhead = null;
  s.w_bits = windowBits;
  s.w_size = 1 << s.w_bits;
  s.w_mask = s.w_size - 1;

  s.hash_bits = memLevel + 7;
  s.hash_size = 1 << s.hash_bits;
  s.hash_mask = s.hash_size - 1;
  s.hash_shift = ~~((s.hash_bits + MIN_MATCH - 1) / MIN_MATCH);

  s.window = new Uint8Array(s.w_size * 2);
  s.head = new Uint16Array(s.hash_size);
  s.prev = new Uint16Array(s.w_size);

  // Don't need mem init magic for JS.
  //s.high_water = 0;  /* nothing written to s->window yet */

  s.lit_bufsize = 1 << (memLevel + 6); /* 16K elements by default */

  s.pending_buf_size = s.lit_bufsize * 4;

  //overlay = (ushf *) ZALLOC(strm, s->lit_bufsize, sizeof(ush)+2);
  //s->pending_buf = (uchf *) overlay;
  s.pending_buf = new Uint8Array(s.pending_buf_size);

  // It is offset from `s.pending_buf` (size is `s.lit_bufsize * 2`)
  //s->d_buf = overlay + s->lit_bufsize/sizeof(ush);
  s.d_buf = 1 * s.lit_bufsize;

  //s->l_buf = s->pending_buf + (1+sizeof(ush))*s->lit_bufsize;
  s.l_buf = (1 + 2) * s.lit_bufsize;

  s.level = level;
  s.strategy = strategy;
  s.method = method;

  return deflateReset(strm);
};

const deflateInit = (strm, level) => {

  return deflateInit2(strm, level, Z_DEFLATED$2, MAX_WBITS$1, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY$1);
};


const deflate$2 = (strm, flush) => {

  let beg, val; // for gzip header write only

  if (!strm || !strm.state ||
    flush > Z_BLOCK$1 || flush < 0) {
    return strm ? err(strm, Z_STREAM_ERROR$2) : Z_STREAM_ERROR$2;
  }

  const s = strm.state;

  if (!strm.output ||
      (!strm.input && strm.avail_in !== 0) ||
      (s.status === FINISH_STATE && flush !== Z_FINISH$3)) {
    return err(strm, (strm.avail_out === 0) ? Z_BUF_ERROR$1 : Z_STREAM_ERROR$2);
  }

  s.strm = strm; /* just in case */
  const old_flush = s.last_flush;
  s.last_flush = flush;

  /* Write the header */
  if (s.status === INIT_STATE) {

    if (s.wrap === 2) { // GZIP header
      strm.adler = 0;  //crc32(0L, Z_NULL, 0);
      put_byte(s, 31);
      put_byte(s, 139);
      put_byte(s, 8);
      if (!s.gzhead) { // s->gzhead == Z_NULL
        put_byte(s, 0);
        put_byte(s, 0);
        put_byte(s, 0);
        put_byte(s, 0);
        put_byte(s, 0);
        put_byte(s, s.level === 9 ? 2 :
                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?
                     4 : 0));
        put_byte(s, OS_CODE);
        s.status = BUSY_STATE;
      }
      else {
        put_byte(s, (s.gzhead.text ? 1 : 0) +
                    (s.gzhead.hcrc ? 2 : 0) +
                    (!s.gzhead.extra ? 0 : 4) +
                    (!s.gzhead.name ? 0 : 8) +
                    (!s.gzhead.comment ? 0 : 16)
        );
        put_byte(s, s.gzhead.time & 0xff);
        put_byte(s, (s.gzhead.time >> 8) & 0xff);
        put_byte(s, (s.gzhead.time >> 16) & 0xff);
        put_byte(s, (s.gzhead.time >> 24) & 0xff);
        put_byte(s, s.level === 9 ? 2 :
                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?
                     4 : 0));
        put_byte(s, s.gzhead.os & 0xff);
        if (s.gzhead.extra && s.gzhead.extra.length) {
          put_byte(s, s.gzhead.extra.length & 0xff);
          put_byte(s, (s.gzhead.extra.length >> 8) & 0xff);
        }
        if (s.gzhead.hcrc) {
          strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending, 0);
        }
        s.gzindex = 0;
        s.status = EXTRA_STATE;
      }
    }
    else // DEFLATE header
    {
      let header = (Z_DEFLATED$2 + ((s.w_bits - 8) << 4)) << 8;
      let level_flags = -1;

      if (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2) {
        level_flags = 0;
      } else if (s.level < 6) {
        level_flags = 1;
      } else if (s.level === 6) {
        level_flags = 2;
      } else {
        level_flags = 3;
      }
      header |= (level_flags << 6);
      if (s.strstart !== 0) { header |= PRESET_DICT; }
      header += 31 - (header % 31);

      s.status = BUSY_STATE;
      putShortMSB(s, header);

      /* Save the adler32 of the preset dictionary: */
      if (s.strstart !== 0) {
        putShortMSB(s, strm.adler >>> 16);
        putShortMSB(s, strm.adler & 0xffff);
      }
      strm.adler = 1; // adler32(0L, Z_NULL, 0);
    }
  }

//#ifdef GZIP
  if (s.status === EXTRA_STATE) {
    if (s.gzhead.extra/* != Z_NULL*/) {
      beg = s.pending;  /* start of bytes to update crc */

      while (s.gzindex < (s.gzhead.extra.length & 0xffff)) {
        if (s.pending === s.pending_buf_size) {
          if (s.gzhead.hcrc && s.pending > beg) {
            strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);
          }
          flush_pending(strm);
          beg = s.pending;
          if (s.pending === s.pending_buf_size) {
            break;
          }
        }
        put_byte(s, s.gzhead.extra[s.gzindex] & 0xff);
        s.gzindex++;
      }
      if (s.gzhead.hcrc && s.pending > beg) {
        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);
      }
      if (s.gzindex === s.gzhead.extra.length) {
        s.gzindex = 0;
        s.status = NAME_STATE;
      }
    }
    else {
      s.status = NAME_STATE;
    }
  }
  if (s.status === NAME_STATE) {
    if (s.gzhead.name/* != Z_NULL*/) {
      beg = s.pending;  /* start of bytes to update crc */
      //int val;

      do {
        if (s.pending === s.pending_buf_size) {
          if (s.gzhead.hcrc && s.pending > beg) {
            strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);
          }
          flush_pending(strm);
          beg = s.pending;
          if (s.pending === s.pending_buf_size) {
            val = 1;
            break;
          }
        }
        // JS specific: little magic to add zero terminator to end of string
        if (s.gzindex < s.gzhead.name.length) {
          val = s.gzhead.name.charCodeAt(s.gzindex++) & 0xff;
        } else {
          val = 0;
        }
        put_byte(s, val);
      } while (val !== 0);

      if (s.gzhead.hcrc && s.pending > beg) {
        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);
      }
      if (val === 0) {
        s.gzindex = 0;
        s.status = COMMENT_STATE;
      }
    }
    else {
      s.status = COMMENT_STATE;
    }
  }
  if (s.status === COMMENT_STATE) {
    if (s.gzhead.comment/* != Z_NULL*/) {
      beg = s.pending;  /* start of bytes to update crc */
      //int val;

      do {
        if (s.pending === s.pending_buf_size) {
          if (s.gzhead.hcrc && s.pending > beg) {
            strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);
          }
          flush_pending(strm);
          beg = s.pending;
          if (s.pending === s.pending_buf_size) {
            val = 1;
            break;
          }
        }
        // JS specific: little magic to add zero terminator to end of string
        if (s.gzindex < s.gzhead.comment.length) {
          val = s.gzhead.comment.charCodeAt(s.gzindex++) & 0xff;
        } else {
          val = 0;
        }
        put_byte(s, val);
      } while (val !== 0);

      if (s.gzhead.hcrc && s.pending > beg) {
        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);
      }
      if (val === 0) {
        s.status = HCRC_STATE;
      }
    }
    else {
      s.status = HCRC_STATE;
    }
  }
  if (s.status === HCRC_STATE) {
    if (s.gzhead.hcrc) {
      if (s.pending + 2 > s.pending_buf_size) {
        flush_pending(strm);
      }
      if (s.pending + 2 <= s.pending_buf_size) {
        put_byte(s, strm.adler & 0xff);
        put_byte(s, (strm.adler >> 8) & 0xff);
        strm.adler = 0; //crc32(0L, Z_NULL, 0);
        s.status = BUSY_STATE;
      }
    }
    else {
      s.status = BUSY_STATE;
    }
  }
//#endif

  /* Flush as much pending output as possible */
  if (s.pending !== 0) {
    flush_pending(strm);
    if (strm.avail_out === 0) {
      /* Since avail_out is 0, deflate will be called again with
       * more output space, but possibly with both pending and
       * avail_in equal to zero. There won't be anything to do,
       * but this is not an error situation so make sure we
       * return OK instead of BUF_ERROR at next call of deflate:
       */
      s.last_flush = -1;
      return Z_OK$3;
    }

    /* Make sure there is something to do and avoid duplicate consecutive
     * flushes. For repeated and useless calls with Z_FINISH, we keep
     * returning Z_STREAM_END instead of Z_BUF_ERROR.
     */
  } else if (strm.avail_in === 0 && rank(flush) <= rank(old_flush) &&
    flush !== Z_FINISH$3) {
    return err(strm, Z_BUF_ERROR$1);
  }

  /* User must not provide more input after the first FINISH: */
  if (s.status === FINISH_STATE && strm.avail_in !== 0) {
    return err(strm, Z_BUF_ERROR$1);
  }

  /* Start a new block or continue the current one.
   */
  if (strm.avail_in !== 0 || s.lookahead !== 0 ||
    (flush !== Z_NO_FLUSH$2 && s.status !== FINISH_STATE)) {
    let bstate = (s.strategy === Z_HUFFMAN_ONLY) ? deflate_huff(s, flush) :
      (s.strategy === Z_RLE ? deflate_rle(s, flush) :
        configuration_table[s.level].func(s, flush));

    if (bstate === BS_FINISH_STARTED || bstate === BS_FINISH_DONE) {
      s.status = FINISH_STATE;
    }
    if (bstate === BS_NEED_MORE || bstate === BS_FINISH_STARTED) {
      if (strm.avail_out === 0) {
        s.last_flush = -1;
        /* avoid BUF_ERROR next call, see above */
      }
      return Z_OK$3;
      /* If flush != Z_NO_FLUSH && avail_out == 0, the next call
       * of deflate should use the same flush parameter to make sure
       * that the flush is complete. So we don't have to output an
       * empty block here, this will be done at next call. This also
       * ensures that for a very small output buffer, we emit at most
       * one empty block.
       */
    }
    if (bstate === BS_BLOCK_DONE) {
      if (flush === Z_PARTIAL_FLUSH) {
        _tr_align(s);
      }
      else if (flush !== Z_BLOCK$1) { /* FULL_FLUSH or SYNC_FLUSH */

        _tr_stored_block(s, 0, 0, false);
        /* For a full flush, this empty block will be recognized
         * as a special marker by inflate_sync().
         */
        if (flush === Z_FULL_FLUSH$1) {
          /*** CLEAR_HASH(s); ***/             /* forget history */
          zero(s.head); // Fill with NIL (= 0);

          if (s.lookahead === 0) {
            s.strstart = 0;
            s.block_start = 0;
            s.insert = 0;
          }
        }
      }
      flush_pending(strm);
      if (strm.avail_out === 0) {
        s.last_flush = -1; /* avoid BUF_ERROR at next call, see above */
        return Z_OK$3;
      }
    }
  }
  //Assert(strm->avail_out > 0, "bug2");
  //if (strm.avail_out <= 0) { throw new Error("bug2");}

  if (flush !== Z_FINISH$3) { return Z_OK$3; }
  if (s.wrap <= 0) { return Z_STREAM_END$3; }

  /* Write the trailer */
  if (s.wrap === 2) {
    put_byte(s, strm.adler & 0xff);
    put_byte(s, (strm.adler >> 8) & 0xff);
    put_byte(s, (strm.adler >> 16) & 0xff);
    put_byte(s, (strm.adler >> 24) & 0xff);
    put_byte(s, strm.total_in & 0xff);
    put_byte(s, (strm.total_in >> 8) & 0xff);
    put_byte(s, (strm.total_in >> 16) & 0xff);
    put_byte(s, (strm.total_in >> 24) & 0xff);
  }
  else
  {
    putShortMSB(s, strm.adler >>> 16);
    putShortMSB(s, strm.adler & 0xffff);
  }

  flush_pending(strm);
  /* If avail_out is zero, the application will call deflate again
   * to flush the rest.
   */
  if (s.wrap > 0) { s.wrap = -s.wrap; }
  /* write the trailer only once! */
  return s.pending !== 0 ? Z_OK$3 : Z_STREAM_END$3;
};


const deflateEnd = (strm) => {

  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {
    return Z_STREAM_ERROR$2;
  }

  const status = strm.state.status;
  if (status !== INIT_STATE &&
    status !== EXTRA_STATE &&
    status !== NAME_STATE &&
    status !== COMMENT_STATE &&
    status !== HCRC_STATE &&
    status !== BUSY_STATE &&
    status !== FINISH_STATE
  ) {
    return err(strm, Z_STREAM_ERROR$2);
  }

  strm.state = null;

  return status === BUSY_STATE ? err(strm, Z_DATA_ERROR$2) : Z_OK$3;
};


/* =========================================================================
 * Initializes the compression dictionary from the given byte
 * sequence without producing any compressed output.
 */
const deflateSetDictionary = (strm, dictionary) => {

  let dictLength = dictionary.length;

  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {
    return Z_STREAM_ERROR$2;
  }

  const s = strm.state;
  const wrap = s.wrap;

  if (wrap === 2 || (wrap === 1 && s.status !== INIT_STATE) || s.lookahead) {
    return Z_STREAM_ERROR$2;
  }

  /* when using zlib wrappers, compute Adler-32 for provided dictionary */
  if (wrap === 1) {
    /* adler32(strm->adler, dictionary, dictLength); */
    strm.adler = adler32_1(strm.adler, dictionary, dictLength, 0);
  }

  s.wrap = 0;   /* avoid computing Adler-32 in read_buf */

  /* if dictionary would fill window, just replace the history */
  if (dictLength >= s.w_size) {
    if (wrap === 0) {            /* already empty otherwise */
      /*** CLEAR_HASH(s); ***/
      zero(s.head); // Fill with NIL (= 0);
      s.strstart = 0;
      s.block_start = 0;
      s.insert = 0;
    }
    /* use the tail */
    // dictionary = dictionary.slice(dictLength - s.w_size);
    let tmpDict = new Uint8Array(s.w_size);
    tmpDict.set(dictionary.subarray(dictLength - s.w_size, dictLength), 0);
    dictionary = tmpDict;
    dictLength = s.w_size;
  }
  /* insert dictionary into window and hash */
  const avail = strm.avail_in;
  const next = strm.next_in;
  const input = strm.input;
  strm.avail_in = dictLength;
  strm.next_in = 0;
  strm.input = dictionary;
  fill_window(s);
  while (s.lookahead >= MIN_MATCH) {
    let str = s.strstart;
    let n = s.lookahead - (MIN_MATCH - 1);
    do {
      /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */
      s.ins_h = HASH(s, s.ins_h, s.window[str + MIN_MATCH - 1]);

      s.prev[str & s.w_mask] = s.head[s.ins_h];

      s.head[s.ins_h] = str;
      str++;
    } while (--n);
    s.strstart = str;
    s.lookahead = MIN_MATCH - 1;
    fill_window(s);
  }
  s.strstart += s.lookahead;
  s.block_start = s.strstart;
  s.insert = s.lookahead;
  s.lookahead = 0;
  s.match_length = s.prev_length = MIN_MATCH - 1;
  s.match_available = 0;
  strm.next_in = next;
  strm.input = input;
  strm.avail_in = avail;
  s.wrap = wrap;
  return Z_OK$3;
};


var deflateInit_1 = deflateInit;
var deflateInit2_1 = deflateInit2;
var deflateReset_1 = deflateReset;
var deflateResetKeep_1 = deflateResetKeep;
var deflateSetHeader_1 = deflateSetHeader;
var deflate_2$1 = deflate$2;
var deflateEnd_1 = deflateEnd;
var deflateSetDictionary_1 = deflateSetDictionary;
var deflateInfo = 'pako deflate (from Nodeca project)';

/* Not implemented
module.exports.deflateBound = deflateBound;
module.exports.deflateCopy = deflateCopy;
module.exports.deflateParams = deflateParams;
module.exports.deflatePending = deflatePending;
module.exports.deflatePrime = deflatePrime;
module.exports.deflateTune = deflateTune;
*/

var deflate_1$2 = {
	deflateInit: deflateInit_1,
	deflateInit2: deflateInit2_1,
	deflateReset: deflateReset_1,
	deflateResetKeep: deflateResetKeep_1,
	deflateSetHeader: deflateSetHeader_1,
	deflate: deflate_2$1,
	deflateEnd: deflateEnd_1,
	deflateSetDictionary: deflateSetDictionary_1,
	deflateInfo: deflateInfo
};

const _has = (obj, key) => {
  return Object.prototype.hasOwnProperty.call(obj, key);
};

var assign = function (obj /*from1, from2, from3, ...*/) {
  const sources = Array.prototype.slice.call(arguments, 1);
  while (sources.length) {
    const source = sources.shift();
    if (!source) { continue; }

    if (typeof source !== 'object') {
      throw new TypeError(source + 'must be non-object');
    }

    for (const p in source) {
      if (_has(source, p)) {
        obj[p] = source[p];
      }
    }
  }

  return obj;
};


// Join array of chunks to single array.
var flattenChunks = (chunks) => {
  // calculate data length
  let len = 0;

  for (let i = 0, l = chunks.length; i < l; i++) {
    len += chunks[i].length;
  }

  // join chunks
  const result = new Uint8Array(len);

  for (let i = 0, pos = 0, l = chunks.length; i < l; i++) {
    let chunk = chunks[i];
    result.set(chunk, pos);
    pos += chunk.length;
  }

  return result;
};

var common = {
	assign: assign,
	flattenChunks: flattenChunks
};

// String encode/decode helpers


// Quick check if we can use fast array to bin string conversion
//
// - apply(Array) can fail on Android 2.2
// - apply(Uint8Array) can fail on iOS 5.1 Safari
//
let STR_APPLY_UIA_OK = true;

try { String.fromCharCode.apply(null, new Uint8Array(1)); } catch (__) { STR_APPLY_UIA_OK = false; }


// Table with utf8 lengths (calculated by first byte of sequence)
// Note, that 5 & 6-byte values and some 4-byte values can not be represented in JS,
// because max possible codepoint is 0x10ffff
const _utf8len = new Uint8Array(256);
for (let q = 0; q < 256; q++) {
  _utf8len[q] = (q >= 252 ? 6 : q >= 248 ? 5 : q >= 240 ? 4 : q >= 224 ? 3 : q >= 192 ? 2 : 1);
}
_utf8len[254] = _utf8len[254] = 1; // Invalid sequence start


// convert string to array (typed, when possible)
var string2buf = (str) => {
  if (typeof TextEncoder === 'function' && TextEncoder.prototype.encode) {
    return new TextEncoder().encode(str);
  }

  let buf, c, c2, m_pos, i, str_len = str.length, buf_len = 0;

  // count binary size
  for (m_pos = 0; m_pos < str_len; m_pos++) {
    c = str.charCodeAt(m_pos);
    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {
      c2 = str.charCodeAt(m_pos + 1);
      if ((c2 & 0xfc00) === 0xdc00) {
        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);
        m_pos++;
      }
    }
    buf_len += c < 0x80 ? 1 : c < 0x800 ? 2 : c < 0x10000 ? 3 : 4;
  }

  // allocate buffer
  buf = new Uint8Array(buf_len);

  // convert
  for (i = 0, m_pos = 0; i < buf_len; m_pos++) {
    c = str.charCodeAt(m_pos);
    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {
      c2 = str.charCodeAt(m_pos + 1);
      if ((c2 & 0xfc00) === 0xdc00) {
        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);
        m_pos++;
      }
    }
    if (c < 0x80) {
      /* one byte */
      buf[i++] = c;
    } else if (c < 0x800) {
      /* two bytes */
      buf[i++] = 0xC0 | (c >>> 6);
      buf[i++] = 0x80 | (c & 0x3f);
    } else if (c < 0x10000) {
      /* three bytes */
      buf[i++] = 0xE0 | (c >>> 12);
      buf[i++] = 0x80 | (c >>> 6 & 0x3f);
      buf[i++] = 0x80 | (c & 0x3f);
    } else {
      /* four bytes */
      buf[i++] = 0xf0 | (c >>> 18);
      buf[i++] = 0x80 | (c >>> 12 & 0x3f);
      buf[i++] = 0x80 | (c >>> 6 & 0x3f);
      buf[i++] = 0x80 | (c & 0x3f);
    }
  }

  return buf;
};

// Helper
const buf2binstring = (buf, len) => {
  // On Chrome, the arguments in a function call that are allowed is `65534`.
  // If the length of the buffer is smaller than that, we can use this optimization,
  // otherwise we will take a slower path.
  if (len < 65534) {
    if (buf.subarray && STR_APPLY_UIA_OK) {
      return String.fromCharCode.apply(null, buf.length === len ? buf : buf.subarray(0, len));
    }
  }

  let result = '';
  for (let i = 0; i < len; i++) {
    result += String.fromCharCode(buf[i]);
  }
  return result;
};


// convert array to string
var buf2string = (buf, max) => {
  const len = max || buf.length;

  if (typeof TextDecoder === 'function' && TextDecoder.prototype.decode) {
    return new TextDecoder().decode(buf.subarray(0, max));
  }

  let i, out;

  // Reserve max possible length (2 words per char)
  // NB: by unknown reasons, Array is significantly faster for
  //     String.fromCharCode.apply than Uint16Array.
  const utf16buf = new Array(len * 2);

  for (out = 0, i = 0; i < len;) {
    let c = buf[i++];
    // quick process ascii
    if (c < 0x80) { utf16buf[out++] = c; continue; }

    let c_len = _utf8len[c];
    // skip 5 & 6 byte codes
    if (c_len > 4) { utf16buf[out++] = 0xfffd; i += c_len - 1; continue; }

    // apply mask on first byte
    c &= c_len === 2 ? 0x1f : c_len === 3 ? 0x0f : 0x07;
    // join the rest
    while (c_len > 1 && i < len) {
      c = (c << 6) | (buf[i++] & 0x3f);
      c_len--;
    }

    // terminated by end of string?
    if (c_len > 1) { utf16buf[out++] = 0xfffd; continue; }

    if (c < 0x10000) {
      utf16buf[out++] = c;
    } else {
      c -= 0x10000;
      utf16buf[out++] = 0xd800 | ((c >> 10) & 0x3ff);
      utf16buf[out++] = 0xdc00 | (c & 0x3ff);
    }
  }

  return buf2binstring(utf16buf, out);
};


// Calculate max possible position in utf8 buffer,
// that will not break sequence. If that's not possible
// - (very small limits) return max size as is.
//
// buf[] - utf8 bytes array
// max   - length limit (mandatory);
var utf8border = (buf, max) => {

  max = max || buf.length;
  if (max > buf.length) { max = buf.length; }

  // go back from last position, until start of sequence found
  let pos = max - 1;
  while (pos >= 0 && (buf[pos] & 0xC0) === 0x80) { pos--; }

  // Very small and broken sequence,
  // return max, because we should return something anyway.
  if (pos < 0) { return max; }

  // If we came to start of buffer - that means buffer is too small,
  // return max too.
  if (pos === 0) { return max; }

  return (pos + _utf8len[buf[pos]] > max) ? pos : max;
};

var strings = {
	string2buf: string2buf,
	buf2string: buf2string,
	utf8border: utf8border
};

// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

function ZStream() {
  /* next input byte */
  this.input = null; // JS specific, because we have no pointers
  this.next_in = 0;
  /* number of bytes available at input */
  this.avail_in = 0;
  /* total number of input bytes read so far */
  this.total_in = 0;
  /* next output byte should be put there */
  this.output = null; // JS specific, because we have no pointers
  this.next_out = 0;
  /* remaining free space at output */
  this.avail_out = 0;
  /* total number of bytes output so far */
  this.total_out = 0;
  /* last error message, NULL if no error */
  this.msg = ''/*Z_NULL*/;
  /* not visible by applications */
  this.state = null;
  /* best guess about the data type: binary or text */
  this.data_type = 2/*Z_UNKNOWN*/;
  /* adler32 value of the uncompressed data */
  this.adler = 0;
}

var zstream = ZStream;

const toString$1 = Object.prototype.toString;

/* Public constants ==========================================================*/
/* ===========================================================================*/

const {
  Z_NO_FLUSH: Z_NO_FLUSH$1, Z_SYNC_FLUSH, Z_FULL_FLUSH, Z_FINISH: Z_FINISH$2,
  Z_OK: Z_OK$2, Z_STREAM_END: Z_STREAM_END$2,
  Z_DEFAULT_COMPRESSION,
  Z_DEFAULT_STRATEGY,
  Z_DEFLATED: Z_DEFLATED$1
} = constants$2;

/* ===========================================================================*/


/**
 * class Deflate
 *
 * Generic JS-style wrapper for zlib calls. If you don't need
 * streaming behaviour - use more simple functions: [[deflate]],
 * [[deflateRaw]] and [[gzip]].
 **/

/* internal
 * Deflate.chunks -> Array
 *
 * Chunks of output data, if [[Deflate#onData]] not overridden.
 **/

/**
 * Deflate.result -> Uint8Array
 *
 * Compressed result, generated by default [[Deflate#onData]]
 * and [[Deflate#onEnd]] handlers. Filled after you push last chunk
 * (call [[Deflate#push]] with `Z_FINISH` / `true` param).
 **/

/**
 * Deflate.err -> Number
 *
 * Error code after deflate finished. 0 (Z_OK) on success.
 * You will not need it in real life, because deflate errors
 * are possible only on wrong options or bad `onData` / `onEnd`
 * custom handlers.
 **/

/**
 * Deflate.msg -> String
 *
 * Error message, if [[Deflate.err]] != 0
 **/


/**
 * new Deflate(options)
 * - options (Object): zlib deflate options.
 *
 * Creates new deflator instance with specified params. Throws exception
 * on bad params. Supported options:
 *
 * - `level`
 * - `windowBits`
 * - `memLevel`
 * - `strategy`
 * - `dictionary`
 *
 * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)
 * for more information on these.
 *
 * Additional options, for internal needs:
 *
 * - `chunkSize` - size of generated data chunks (16K by default)
 * - `raw` (Boolean) - do raw deflate
 * - `gzip` (Boolean) - create gzip wrapper
 * - `header` (Object) - custom header for gzip
 *   - `text` (Boolean) - true if compressed data believed to be text
 *   - `time` (Number) - modification time, unix timestamp
 *   - `os` (Number) - operation system code
 *   - `extra` (Array) - array of bytes with extra data (max 65536)
 *   - `name` (String) - file name (binary string)
 *   - `comment` (String) - comment (binary string)
 *   - `hcrc` (Boolean) - true if header crc should be added
 *
 * ##### Example:
 *
 * ```javascript
 * const pako = require('pako')
 *   , chunk1 = new Uint8Array([1,2,3,4,5,6,7,8,9])
 *   , chunk2 = new Uint8Array([10,11,12,13,14,15,16,17,18,19]);
 *
 * const deflate = new pako.Deflate({ level: 3});
 *
 * deflate.push(chunk1, false);
 * deflate.push(chunk2, true);  // true -> last chunk
 *
 * if (deflate.err) { throw new Error(deflate.err); }
 *
 * console.log(deflate.result);
 * ```
 **/
function Deflate$1(options) {
  this.options = common.assign({
    level: Z_DEFAULT_COMPRESSION,
    method: Z_DEFLATED$1,
    chunkSize: 16384,
    windowBits: 15,
    memLevel: 8,
    strategy: Z_DEFAULT_STRATEGY
  }, options || {});

  let opt = this.options;

  if (opt.raw && (opt.windowBits > 0)) {
    opt.windowBits = -opt.windowBits;
  }

  else if (opt.gzip && (opt.windowBits > 0) && (opt.windowBits < 16)) {
    opt.windowBits += 16;
  }

  this.err    = 0;      // error code, if happens (0 = Z_OK)
  this.msg    = '';     // error message
  this.ended  = false;  // used to avoid multiple onEnd() calls
  this.chunks = [];     // chunks of compressed data

  this.strm = new zstream();
  this.strm.avail_out = 0;

  let status = deflate_1$2.deflateInit2(
    this.strm,
    opt.level,
    opt.method,
    opt.windowBits,
    opt.memLevel,
    opt.strategy
  );

  if (status !== Z_OK$2) {
    throw new Error(messages[status]);
  }

  if (opt.header) {
    deflate_1$2.deflateSetHeader(this.strm, opt.header);
  }

  if (opt.dictionary) {
    let dict;
    // Convert data if needed
    if (typeof opt.dictionary === 'string') {
      // If we need to compress text, change encoding to utf8.
      dict = strings.string2buf(opt.dictionary);
    } else if (toString$1.call(opt.dictionary) === '[object ArrayBuffer]') {
      dict = new Uint8Array(opt.dictionary);
    } else {
      dict = opt.dictionary;
    }

    status = deflate_1$2.deflateSetDictionary(this.strm, dict);

    if (status !== Z_OK$2) {
      throw new Error(messages[status]);
    }

    this._dict_set = true;
  }
}

/**
 * Deflate#push(data[, flush_mode]) -> Boolean
 * - data (Uint8Array|ArrayBuffer|String): input data. Strings will be
 *   converted to utf8 byte sequence.
 * - flush_mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.
 *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.
 *
 * Sends input data to deflate pipe, generating [[Deflate#onData]] calls with
 * new compressed chunks. Returns `true` on success. The last data block must
 * have `flush_mode` Z_FINISH (or `true`). That will flush internal pending
 * buffers and call [[Deflate#onEnd]].
 *
 * On fail call [[Deflate#onEnd]] with error code and return false.
 *
 * ##### Example
 *
 * ```javascript
 * push(chunk, false); // push one of data chunks
 * ...
 * push(chunk, true);  // push last chunk
 * ```
 **/
Deflate$1.prototype.push = function (data, flush_mode) {
  const strm = this.strm;
  const chunkSize = this.options.chunkSize;
  let status, _flush_mode;

  if (this.ended) { return false; }

  if (flush_mode === ~~flush_mode) _flush_mode = flush_mode;
  else _flush_mode = flush_mode === true ? Z_FINISH$2 : Z_NO_FLUSH$1;

  // Convert data if needed
  if (typeof data === 'string') {
    // If we need to compress text, change encoding to utf8.
    strm.input = strings.string2buf(data);
  } else if (toString$1.call(data) === '[object ArrayBuffer]') {
    strm.input = new Uint8Array(data);
  } else {
    strm.input = data;
  }

  strm.next_in = 0;
  strm.avail_in = strm.input.length;

  for (;;) {
    if (strm.avail_out === 0) {
      strm.output = new Uint8Array(chunkSize);
      strm.next_out = 0;
      strm.avail_out = chunkSize;
    }

    // Make sure avail_out > 6 to avoid repeating markers
    if ((_flush_mode === Z_SYNC_FLUSH || _flush_mode === Z_FULL_FLUSH) && strm.avail_out <= 6) {
      this.onData(strm.output.subarray(0, strm.next_out));
      strm.avail_out = 0;
      continue;
    }

    status = deflate_1$2.deflate(strm, _flush_mode);

    // Ended => flush and finish
    if (status === Z_STREAM_END$2) {
      if (strm.next_out > 0) {
        this.onData(strm.output.subarray(0, strm.next_out));
      }
      status = deflate_1$2.deflateEnd(this.strm);
      this.onEnd(status);
      this.ended = true;
      return status === Z_OK$2;
    }

    // Flush if out buffer full
    if (strm.avail_out === 0) {
      this.onData(strm.output);
      continue;
    }

    // Flush if requested and has data
    if (_flush_mode > 0 && strm.next_out > 0) {
      this.onData(strm.output.subarray(0, strm.next_out));
      strm.avail_out = 0;
      continue;
    }

    if (strm.avail_in === 0) break;
  }

  return true;
};


/**
 * Deflate#onData(chunk) -> Void
 * - chunk (Uint8Array): output data.
 *
 * By default, stores data blocks in `chunks[]` property and glue
 * those in `onEnd`. Override this handler, if you need another behaviour.
 **/
Deflate$1.prototype.onData = function (chunk) {
  this.chunks.push(chunk);
};


/**
 * Deflate#onEnd(status) -> Void
 * - status (Number): deflate status. 0 (Z_OK) on success,
 *   other if not.
 *
 * Called once after you tell deflate that the input stream is
 * complete (Z_FINISH). By default - join collected chunks,
 * free memory and fill `results` / `err` properties.
 **/
Deflate$1.prototype.onEnd = function (status) {
  // On success - join
  if (status === Z_OK$2) {
    this.result = common.flattenChunks(this.chunks);
  }
  this.chunks = [];
  this.err = status;
  this.msg = this.strm.msg;
};


/**
 * deflate(data[, options]) -> Uint8Array
 * - data (Uint8Array|String): input data to compress.
 * - options (Object): zlib deflate options.
 *
 * Compress `data` with deflate algorithm and `options`.
 *
 * Supported options are:
 *
 * - level
 * - windowBits
 * - memLevel
 * - strategy
 * - dictionary
 *
 * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)
 * for more information on these.
 *
 * Sugar (options):
 *
 * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify
 *   negative windowBits implicitly.
 *
 * ##### Example:
 *
 * ```javascript
 * const pako = require('pako')
 * const data = new Uint8Array([1,2,3,4,5,6,7,8,9]);
 *
 * console.log(pako.deflate(data));
 * ```
 **/
function deflate$1(input, options) {
  const deflator = new Deflate$1(options);

  deflator.push(input, true);

  // That will never happens, if you don't cheat with options :)
  if (deflator.err) { throw deflator.msg || messages[deflator.err]; }

  return deflator.result;
}


/**
 * deflateRaw(data[, options]) -> Uint8Array
 * - data (Uint8Array|String): input data to compress.
 * - options (Object): zlib deflate options.
 *
 * The same as [[deflate]], but creates raw data, without wrapper
 * (header and adler32 crc).
 **/
function deflateRaw$1(input, options) {
  options = options || {};
  options.raw = true;
  return deflate$1(input, options);
}


/**
 * gzip(data[, options]) -> Uint8Array
 * - data (Uint8Array|String): input data to compress.
 * - options (Object): zlib deflate options.
 *
 * The same as [[deflate]], but create gzip wrapper instead of
 * deflate one.
 **/
function gzip$1(input, options) {
  options = options || {};
  options.gzip = true;
  return deflate$1(input, options);
}


var Deflate_1$1 = Deflate$1;
var deflate_2 = deflate$1;
var deflateRaw_1$1 = deflateRaw$1;
var gzip_1$1 = gzip$1;
var constants$1 = constants$2;

var deflate_1$1 = {
	Deflate: Deflate_1$1,
	deflate: deflate_2,
	deflateRaw: deflateRaw_1$1,
	gzip: gzip_1$1,
	constants: constants$1
};

// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

// See state defs from inflate.js
const BAD$1 = 30;       /* got a data error -- remain here until reset */
const TYPE$1 = 12;      /* i: waiting for type bits, including last-flag bit */

/*
   Decode literal, length, and distance codes and write out the resulting
   literal and match bytes until either not enough input or output is
   available, an end-of-block is encountered, or a data error is encountered.
   When large enough input and output buffers are supplied to inflate(), for
   example, a 16K input buffer and a 64K output buffer, more than 95% of the
   inflate execution time is spent in this routine.

   Entry assumptions:

        state.mode === LEN
        strm.avail_in >= 6
        strm.avail_out >= 258
        start >= strm.avail_out
        state.bits < 8

   On return, state.mode is one of:

        LEN -- ran out of enough output space or enough available input
        TYPE -- reached end of block code, inflate() to interpret next block
        BAD -- error in block data

   Notes:

    - The maximum input bits used by a length/distance pair is 15 bits for the
      length code, 5 bits for the length extra, 15 bits for the distance code,
      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.
      Therefore if strm.avail_in >= 6, then there is enough input to avoid
      checking for available input while decoding.

    - The maximum bytes that a single length/distance pair can output is 258
      bytes, which is the maximum length that can be coded.  inflate_fast()
      requires strm.avail_out >= 258 for each loop to avoid checking for
      output space.
 */
var inffast = function inflate_fast(strm, start) {
  let _in;                    /* local strm.input */
  let last;                   /* have enough input while in < last */
  let _out;                   /* local strm.output */
  let beg;                    /* inflate()'s initial strm.output */
  let end;                    /* while out < end, enough space available */
//#ifdef INFLATE_STRICT
  let dmax;                   /* maximum distance from zlib header */
//#endif
  let wsize;                  /* window size or zero if not using window */
  let whave;                  /* valid bytes in the window */
  let wnext;                  /* window write index */
  // Use `s_window` instead `window`, avoid conflict with instrumentation tools
  let s_window;               /* allocated sliding window, if wsize != 0 */
  let hold;                   /* local strm.hold */
  let bits;                   /* local strm.bits */
  let lcode;                  /* local strm.lencode */
  let dcode;                  /* local strm.distcode */
  let lmask;                  /* mask for first level of length codes */
  let dmask;                  /* mask for first level of distance codes */
  let here;                   /* retrieved table entry */
  let op;                     /* code bits, operation, extra bits, or */
                              /*  window position, window bytes to copy */
  let len;                    /* match length, unused bytes */
  let dist;                   /* match distance */
  let from;                   /* where to copy match from */
  let from_source;


  let input, output; // JS specific, because we have no pointers

  /* copy state to local variables */
  const state = strm.state;
  //here = state.here;
  _in = strm.next_in;
  input = strm.input;
  last = _in + (strm.avail_in - 5);
  _out = strm.next_out;
  output = strm.output;
  beg = _out - (start - strm.avail_out);
  end = _out + (strm.avail_out - 257);
//#ifdef INFLATE_STRICT
  dmax = state.dmax;
//#endif
  wsize = state.wsize;
  whave = state.whave;
  wnext = state.wnext;
  s_window = state.window;
  hold = state.hold;
  bits = state.bits;
  lcode = state.lencode;
  dcode = state.distcode;
  lmask = (1 << state.lenbits) - 1;
  dmask = (1 << state.distbits) - 1;


  /* decode literals and length/distances until end-of-block or not enough
     input data or output space */

  top:
  do {
    if (bits < 15) {
      hold += input[_in++] << bits;
      bits += 8;
      hold += input[_in++] << bits;
      bits += 8;
    }

    here = lcode[hold & lmask];

    dolen:
    for (;;) { // Goto emulation
      op = here >>> 24/*here.bits*/;
      hold >>>= op;
      bits -= op;
      op = (here >>> 16) & 0xff/*here.op*/;
      if (op === 0) {                          /* literal */
        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?
        //        "inflate:         literal '%c'\n" :
        //        "inflate:         literal 0x%02x\n", here.val));
        output[_out++] = here & 0xffff/*here.val*/;
      }
      else if (op & 16) {                     /* length base */
        len = here & 0xffff/*here.val*/;
        op &= 15;                           /* number of extra bits */
        if (op) {
          if (bits < op) {
            hold += input[_in++] << bits;
            bits += 8;
          }
          len += hold & ((1 << op) - 1);
          hold >>>= op;
          bits -= op;
        }
        //Tracevv((stderr, "inflate:         length %u\n", len));
        if (bits < 15) {
          hold += input[_in++] << bits;
          bits += 8;
          hold += input[_in++] << bits;
          bits += 8;
        }
        here = dcode[hold & dmask];

        dodist:
        for (;;) { // goto emulation
          op = here >>> 24/*here.bits*/;
          hold >>>= op;
          bits -= op;
          op = (here >>> 16) & 0xff/*here.op*/;

          if (op & 16) {                      /* distance base */
            dist = here & 0xffff/*here.val*/;
            op &= 15;                       /* number of extra bits */
            if (bits < op) {
              hold += input[_in++] << bits;
              bits += 8;
              if (bits < op) {
                hold += input[_in++] << bits;
                bits += 8;
              }
            }
            dist += hold & ((1 << op) - 1);
//#ifdef INFLATE_STRICT
            if (dist > dmax) {
              strm.msg = 'invalid distance too far back';
              state.mode = BAD$1;
              break top;
            }
//#endif
            hold >>>= op;
            bits -= op;
            //Tracevv((stderr, "inflate:         distance %u\n", dist));
            op = _out - beg;                /* max distance in output */
            if (dist > op) {                /* see if copy from window */
              op = dist - op;               /* distance back in window */
              if (op > whave) {
                if (state.sane) {
                  strm.msg = 'invalid distance too far back';
                  state.mode = BAD$1;
                  break top;
                }

// (!) This block is disabled in zlib defaults,
// don't enable it for binary compatibility
//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR
//                if (len <= op - whave) {
//                  do {
//                    output[_out++] = 0;
//                  } while (--len);
//                  continue top;
//                }
//                len -= op - whave;
//                do {
//                  output[_out++] = 0;
//                } while (--op > whave);
//                if (op === 0) {
//                  from = _out - dist;
//                  do {
//                    output[_out++] = output[from++];
//                  } while (--len);
//                  continue top;
//                }
//#endif
              }
              from = 0; // window index
              from_source = s_window;
              if (wnext === 0) {           /* very common case */
                from += wsize - op;
                if (op < len) {         /* some from window */
                  len -= op;
                  do {
                    output[_out++] = s_window[from++];
                  } while (--op);
                  from = _out - dist;  /* rest from output */
                  from_source = output;
                }
              }
              else if (wnext < op) {      /* wrap around window */
                from += wsize + wnext - op;
                op -= wnext;
                if (op < len) {         /* some from end of window */
                  len -= op;
                  do {
                    output[_out++] = s_window[from++];
                  } while (--op);
                  from = 0;
                  if (wnext < len) {  /* some from start of window */
                    op = wnext;
                    len -= op;
                    do {
                      output[_out++] = s_window[from++];
                    } while (--op);
                    from = _out - dist;      /* rest from output */
                    from_source = output;
                  }
                }
              }
              else {                      /* contiguous in window */
                from += wnext - op;
                if (op < len) {         /* some from window */
                  len -= op;
                  do {
                    output[_out++] = s_window[from++];
                  } while (--op);
                  from = _out - dist;  /* rest from output */
                  from_source = output;
                }
              }
              while (len > 2) {
                output[_out++] = from_source[from++];
                output[_out++] = from_source[from++];
                output[_out++] = from_source[from++];
                len -= 3;
              }
              if (len) {
                output[_out++] = from_source[from++];
                if (len > 1) {
                  output[_out++] = from_source[from++];
                }
              }
            }
            else {
              from = _out - dist;          /* copy direct from output */
              do {                        /* minimum length is three */
                output[_out++] = output[from++];
                output[_out++] = output[from++];
                output[_out++] = output[from++];
                len -= 3;
              } while (len > 2);
              if (len) {
                output[_out++] = output[from++];
                if (len > 1) {
                  output[_out++] = output[from++];
                }
              }
            }
          }
          else if ((op & 64) === 0) {          /* 2nd level distance code */
            here = dcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];
            continue dodist;
          }
          else {
            strm.msg = 'invalid distance code';
            state.mode = BAD$1;
            break top;
          }

          break; // need to emulate goto via "continue"
        }
      }
      else if ((op & 64) === 0) {              /* 2nd level length code */
        here = lcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];
        continue dolen;
      }
      else if (op & 32) {                     /* end-of-block */
        //Tracevv((stderr, "inflate:         end of block\n"));
        state.mode = TYPE$1;
        break top;
      }
      else {
        strm.msg = 'invalid literal/length code';
        state.mode = BAD$1;
        break top;
      }

      break; // need to emulate goto via "continue"
    }
  } while (_in < last && _out < end);

  /* return unused bytes (on entry, bits < 8, so in won't go too far back) */
  len = bits >> 3;
  _in -= len;
  bits -= len << 3;
  hold &= (1 << bits) - 1;

  /* update state and return */
  strm.next_in = _in;
  strm.next_out = _out;
  strm.avail_in = (_in < last ? 5 + (last - _in) : 5 - (_in - last));
  strm.avail_out = (_out < end ? 257 + (end - _out) : 257 - (_out - end));
  state.hold = hold;
  state.bits = bits;
  return;
};

// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

const MAXBITS = 15;
const ENOUGH_LENS$1 = 852;
const ENOUGH_DISTS$1 = 592;
//const ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);

const CODES$1 = 0;
const LENS$1 = 1;
const DISTS$1 = 2;

const lbase = new Uint16Array([ /* Length codes 257..285 base */
  3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,
  35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0
]);

const lext = new Uint8Array([ /* Length codes 257..285 extra */
  16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,
  19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78
]);

const dbase = new Uint16Array([ /* Distance codes 0..29 base */
  1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,
  257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,
  8193, 12289, 16385, 24577, 0, 0
]);

const dext = new Uint8Array([ /* Distance codes 0..29 extra */
  16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22,
  23, 23, 24, 24, 25, 25, 26, 26, 27, 27,
  28, 28, 29, 29, 64, 64
]);

const inflate_table = (type, lens, lens_index, codes, table, table_index, work, opts) =>
{
  const bits = opts.bits;
      //here = opts.here; /* table entry for duplication */

  let len = 0;               /* a code's length in bits */
  let sym = 0;               /* index of code symbols */
  let min = 0, max = 0;          /* minimum and maximum code lengths */
  let root = 0;              /* number of index bits for root table */
  let curr = 0;              /* number of index bits for current table */
  let drop = 0;              /* code bits to drop for sub-table */
  let left = 0;                   /* number of prefix codes available */
  let used = 0;              /* code entries in table used */
  let huff = 0;              /* Huffman code */
  let incr;              /* for incrementing code, index */
  let fill;              /* index for replicating entries */
  let low;               /* low bits for current root entry */
  let mask;              /* mask for low root bits */
  let next;             /* next available space in table */
  let base = null;     /* base value table to use */
  let base_index = 0;
//  let shoextra;    /* extra bits table to use */
  let end;                    /* use base and extra for symbol > end */
  const count = new Uint16Array(MAXBITS + 1); //[MAXBITS+1];    /* number of codes of each length */
  const offs = new Uint16Array(MAXBITS + 1); //[MAXBITS+1];     /* offsets in table for each length */
  let extra = null;
  let extra_index = 0;

  let here_bits, here_op, here_val;

  /*
   Process a set of code lengths to create a canonical Huffman code.  The
   code lengths are lens[0..codes-1].  Each length corresponds to the
   symbols 0..codes-1.  The Huffman code is generated by first sorting the
   symbols by length from short to long, and retaining the symbol order
   for codes with equal lengths.  Then the code starts with all zero bits
   for the first code of the shortest length, and the codes are integer
   increments for the same length, and zeros are appended as the length
   increases.  For the deflate format, these bits are stored backwards
   from their more natural integer increment ordering, and so when the
   decoding tables are built in the large loop below, the integer codes
   are incremented backwards.

   This routine assumes, but does not check, that all of the entries in
   lens[] are in the range 0..MAXBITS.  The caller must assure this.
   1..MAXBITS is interpreted as that code length.  zero means that that
   symbol does not occur in this code.

   The codes are sorted by computing a count of codes for each length,
   creating from that a table of starting indices for each length in the
   sorted table, and then entering the symbols in order in the sorted
   table.  The sorted table is work[], with that space being provided by
   the caller.

   The length counts are used for other purposes as well, i.e. finding
   the minimum and maximum length codes, determining if there are any
   codes at all, checking for a valid set of lengths, and looking ahead
   at length counts to determine sub-table sizes when building the
   decoding tables.
   */

  /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */
  for (len = 0; len <= MAXBITS; len++) {
    count[len] = 0;
  }
  for (sym = 0; sym < codes; sym++) {
    count[lens[lens_index + sym]]++;
  }

  /* bound code lengths, force root to be within code lengths */
  root = bits;
  for (max = MAXBITS; max >= 1; max--) {
    if (count[max] !== 0) { break; }
  }
  if (root > max) {
    root = max;
  }
  if (max === 0) {                     /* no symbols to code at all */
    //table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */
    //table.bits[opts.table_index] = 1;   //here.bits = (var char)1;
    //table.val[opts.table_index++] = 0;   //here.val = (var short)0;
    table[table_index++] = (1 << 24) | (64 << 16) | 0;


    //table.op[opts.table_index] = 64;
    //table.bits[opts.table_index] = 1;
    //table.val[opts.table_index++] = 0;
    table[table_index++] = (1 << 24) | (64 << 16) | 0;

    opts.bits = 1;
    return 0;     /* no symbols, but wait for decoding to report error */
  }
  for (min = 1; min < max; min++) {
    if (count[min] !== 0) { break; }
  }
  if (root < min) {
    root = min;
  }

  /* check for an over-subscribed or incomplete set of lengths */
  left = 1;
  for (len = 1; len <= MAXBITS; len++) {
    left <<= 1;
    left -= count[len];
    if (left < 0) {
      return -1;
    }        /* over-subscribed */
  }
  if (left > 0 && (type === CODES$1 || max !== 1)) {
    return -1;                      /* incomplete set */
  }

  /* generate offsets into symbol table for each length for sorting */
  offs[1] = 0;
  for (len = 1; len < MAXBITS; len++) {
    offs[len + 1] = offs[len] + count[len];
  }

  /* sort symbols by length, by symbol order within each length */
  for (sym = 0; sym < codes; sym++) {
    if (lens[lens_index + sym] !== 0) {
      work[offs[lens[lens_index + sym]]++] = sym;
    }
  }

  /*
   Create and fill in decoding tables.  In this loop, the table being
   filled is at next and has curr index bits.  The code being used is huff
   with length len.  That code is converted to an index by dropping drop
   bits off of the bottom.  For codes where len is less than drop + curr,
   those top drop + curr - len bits are incremented through all values to
   fill the table with replicated entries.

   root is the number of index bits for the root table.  When len exceeds
   root, sub-tables are created pointed to by the root entry with an index
   of the low root bits of huff.  This is saved in low to check for when a
   new sub-table should be started.  drop is zero when the root table is
   being filled, and drop is root when sub-tables are being filled.

   When a new sub-table is needed, it is necessary to look ahead in the
   code lengths to determine what size sub-table is needed.  The length
   counts are used for this, and so count[] is decremented as codes are
   entered in the tables.

   used keeps track of how many table entries have been allocated from the
   provided *table space.  It is checked for LENS and DIST tables against
   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in
   the initial root table size constants.  See the comments in inftrees.h
   for more information.

   sym increments through all symbols, and the loop terminates when
   all codes of length max, i.e. all codes, have been processed.  This
   routine permits incomplete codes, so another loop after this one fills
   in the rest of the decoding tables with invalid code markers.
   */

  /* set up for code type */
  // poor man optimization - use if-else instead of switch,
  // to avoid deopts in old v8
  if (type === CODES$1) {
    base = extra = work;    /* dummy value--not used */
    end = 19;

  } else if (type === LENS$1) {
    base = lbase;
    base_index -= 257;
    extra = lext;
    extra_index -= 257;
    end = 256;

  } else {                    /* DISTS */
    base = dbase;
    extra = dext;
    end = -1;
  }

  /* initialize opts for loop */
  huff = 0;                   /* starting code */
  sym = 0;                    /* starting code symbol */
  len = min;                  /* starting code length */
  next = table_index;              /* current table to fill in */
  curr = root;                /* current table index bits */
  drop = 0;                   /* current bits to drop from code for index */
  low = -1;                   /* trigger new sub-table when len > root */
  used = 1 << root;          /* use root table entries */
  mask = used - 1;            /* mask for comparing low */

  /* check available table space */
  if ((type === LENS$1 && used > ENOUGH_LENS$1) ||
    (type === DISTS$1 && used > ENOUGH_DISTS$1)) {
    return 1;
  }

  /* process all codes and make table entries */
  for (;;) {
    /* create table entry */
    here_bits = len - drop;
    if (work[sym] < end) {
      here_op = 0;
      here_val = work[sym];
    }
    else if (work[sym] > end) {
      here_op = extra[extra_index + work[sym]];
      here_val = base[base_index + work[sym]];
    }
    else {
      here_op = 32 + 64;         /* end of block */
      here_val = 0;
    }

    /* replicate for those indices with low len bits equal to huff */
    incr = 1 << (len - drop);
    fill = 1 << curr;
    min = fill;                 /* save offset to next table */
    do {
      fill -= incr;
      table[next + (huff >> drop) + fill] = (here_bits << 24) | (here_op << 16) | here_val |0;
    } while (fill !== 0);

    /* backwards increment the len-bit code huff */
    incr = 1 << (len - 1);
    while (huff & incr) {
      incr >>= 1;
    }
    if (incr !== 0) {
      huff &= incr - 1;
      huff += incr;
    } else {
      huff = 0;
    }

    /* go to next symbol, update count, len */
    sym++;
    if (--count[len] === 0) {
      if (len === max) { break; }
      len = lens[lens_index + work[sym]];
    }

    /* create new sub-table if needed */
    if (len > root && (huff & mask) !== low) {
      /* if first time, transition to sub-tables */
      if (drop === 0) {
        drop = root;
      }

      /* increment past last table */
      next += min;            /* here min is 1 << curr */

      /* determine length of next table */
      curr = len - drop;
      left = 1 << curr;
      while (curr + drop < max) {
        left -= count[curr + drop];
        if (left <= 0) { break; }
        curr++;
        left <<= 1;
      }

      /* check for enough space */
      used += 1 << curr;
      if ((type === LENS$1 && used > ENOUGH_LENS$1) ||
        (type === DISTS$1 && used > ENOUGH_DISTS$1)) {
        return 1;
      }

      /* point entry in root table to sub-table */
      low = huff & mask;
      /*table.op[low] = curr;
      table.bits[low] = root;
      table.val[low] = next - opts.table_index;*/
      table[low] = (root << 24) | (curr << 16) | (next - table_index) |0;
    }
  }

  /* fill in remaining table entry if code is incomplete (guaranteed to have
   at most one remaining entry, since if the code is incomplete, the
   maximum code length that was allowed to get this far is one bit) */
  if (huff !== 0) {
    //table.op[next + huff] = 64;            /* invalid code marker */
    //table.bits[next + huff] = len - drop;
    //table.val[next + huff] = 0;
    table[next + huff] = ((len - drop) << 24) | (64 << 16) |0;
  }

  /* set return parameters */
  //opts.table_index += used;
  opts.bits = root;
  return 0;
};


var inftrees = inflate_table;

// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.






const CODES = 0;
const LENS = 1;
const DISTS = 2;

/* Public constants ==========================================================*/
/* ===========================================================================*/

const {
  Z_FINISH: Z_FINISH$1, Z_BLOCK, Z_TREES,
  Z_OK: Z_OK$1, Z_STREAM_END: Z_STREAM_END$1, Z_NEED_DICT: Z_NEED_DICT$1, Z_STREAM_ERROR: Z_STREAM_ERROR$1, Z_DATA_ERROR: Z_DATA_ERROR$1, Z_MEM_ERROR: Z_MEM_ERROR$1, Z_BUF_ERROR,
  Z_DEFLATED
} = constants$2;


/* STATES ====================================================================*/
/* ===========================================================================*/


const    HEAD = 1;       /* i: waiting for magic header */
const    FLAGS = 2;      /* i: waiting for method and flags (gzip) */
const    TIME = 3;       /* i: waiting for modification time (gzip) */
const    OS = 4;         /* i: waiting for extra flags and operating system (gzip) */
const    EXLEN = 5;      /* i: waiting for extra length (gzip) */
const    EXTRA = 6;      /* i: waiting for extra bytes (gzip) */
const    NAME = 7;       /* i: waiting for end of file name (gzip) */
const    COMMENT = 8;    /* i: waiting for end of comment (gzip) */
const    HCRC = 9;       /* i: waiting for header crc (gzip) */
const    DICTID = 10;    /* i: waiting for dictionary check value */
const    DICT = 11;      /* waiting for inflateSetDictionary() call */
const        TYPE = 12;      /* i: waiting for type bits, including last-flag bit */
const        TYPEDO = 13;    /* i: same, but skip check to exit inflate on new block */
const        STORED = 14;    /* i: waiting for stored size (length and complement) */
const        COPY_ = 15;     /* i/o: same as COPY below, but only first time in */
const        COPY = 16;      /* i/o: waiting for input or output to copy stored block */
const        TABLE = 17;     /* i: waiting for dynamic block table lengths */
const        LENLENS = 18;   /* i: waiting for code length code lengths */
const        CODELENS = 19;  /* i: waiting for length/lit and distance code lengths */
const            LEN_ = 20;      /* i: same as LEN below, but only first time in */
const            LEN = 21;       /* i: waiting for length/lit/eob code */
const            LENEXT = 22;    /* i: waiting for length extra bits */
const            DIST = 23;      /* i: waiting for distance code */
const            DISTEXT = 24;   /* i: waiting for distance extra bits */
const            MATCH = 25;     /* o: waiting for output space to copy string */
const            LIT = 26;       /* o: waiting for output space to write literal */
const    CHECK = 27;     /* i: waiting for 32-bit check value */
const    LENGTH = 28;    /* i: waiting for 32-bit length (gzip) */
const    DONE = 29;      /* finished check, done -- remain here until reset */
const    BAD = 30;       /* got a data error -- remain here until reset */
const    MEM = 31;       /* got an inflate() memory error -- remain here until reset */
const    SYNC = 32;      /* looking for synchronization bytes to restart inflate() */

/* ===========================================================================*/



const ENOUGH_LENS = 852;
const ENOUGH_DISTS = 592;
//const ENOUGH =  (ENOUGH_LENS+ENOUGH_DISTS);

const MAX_WBITS = 15;
/* 32K LZ77 window */
const DEF_WBITS = MAX_WBITS;


const zswap32 = (q) => {

  return  (((q >>> 24) & 0xff) +
          ((q >>> 8) & 0xff00) +
          ((q & 0xff00) << 8) +
          ((q & 0xff) << 24));
};


function InflateState() {
  this.mode = 0;             /* current inflate mode */
  this.last = false;          /* true if processing last block */
  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */
  this.havedict = false;      /* true if dictionary provided */
  this.flags = 0;             /* gzip header method and flags (0 if zlib) */
  this.dmax = 0;              /* zlib header max distance (INFLATE_STRICT) */
  this.check = 0;             /* protected copy of check value */
  this.total = 0;             /* protected copy of output count */
  // TODO: may be {}
  this.head = null;           /* where to save gzip header information */

  /* sliding window */
  this.wbits = 0;             /* log base 2 of requested window size */
  this.wsize = 0;             /* window size or zero if not using window */
  this.whave = 0;             /* valid bytes in the window */
  this.wnext = 0;             /* window write index */
  this.window = null;         /* allocated sliding window, if needed */

  /* bit accumulator */
  this.hold = 0;              /* input bit accumulator */
  this.bits = 0;              /* number of bits in "in" */

  /* for string and stored block copying */
  this.length = 0;            /* literal or length of data to copy */
  this.offset = 0;            /* distance back to copy string from */

  /* for table and code decoding */
  this.extra = 0;             /* extra bits needed */

  /* fixed and dynamic code tables */
  this.lencode = null;          /* starting table for length/literal codes */
  this.distcode = null;         /* starting table for distance codes */
  this.lenbits = 0;           /* index bits for lencode */
  this.distbits = 0;          /* index bits for distcode */

  /* dynamic table building */
  this.ncode = 0;             /* number of code length code lengths */
  this.nlen = 0;              /* number of length code lengths */
  this.ndist = 0;             /* number of distance code lengths */
  this.have = 0;              /* number of code lengths in lens[] */
  this.next = null;              /* next available space in codes[] */

  this.lens = new Uint16Array(320); /* temporary storage for code lengths */
  this.work = new Uint16Array(288); /* work area for code table building */

  /*
   because we don't have pointers in js, we use lencode and distcode directly
   as buffers so we don't need codes
  */
  //this.codes = new Int32Array(ENOUGH);       /* space for code tables */
  this.lendyn = null;              /* dynamic table for length/literal codes (JS specific) */
  this.distdyn = null;             /* dynamic table for distance codes (JS specific) */
  this.sane = 0;                   /* if false, allow invalid distance too far */
  this.back = 0;                   /* bits back of last unprocessed length/lit */
  this.was = 0;                    /* initial length of match */
}


const inflateResetKeep = (strm) => {

  if (!strm || !strm.state) { return Z_STREAM_ERROR$1; }
  const state = strm.state;
  strm.total_in = strm.total_out = state.total = 0;
  strm.msg = ''; /*Z_NULL*/
  if (state.wrap) {       /* to support ill-conceived Java test suite */
    strm.adler = state.wrap & 1;
  }
  state.mode = HEAD;
  state.last = 0;
  state.havedict = 0;
  state.dmax = 32768;
  state.head = null/*Z_NULL*/;
  state.hold = 0;
  state.bits = 0;
  //state.lencode = state.distcode = state.next = state.codes;
  state.lencode = state.lendyn = new Int32Array(ENOUGH_LENS);
  state.distcode = state.distdyn = new Int32Array(ENOUGH_DISTS);

  state.sane = 1;
  state.back = -1;
  //Tracev((stderr, "inflate: reset\n"));
  return Z_OK$1;
};


const inflateReset = (strm) => {

  if (!strm || !strm.state) { return Z_STREAM_ERROR$1; }
  const state = strm.state;
  state.wsize = 0;
  state.whave = 0;
  state.wnext = 0;
  return inflateResetKeep(strm);

};


const inflateReset2 = (strm, windowBits) => {
  let wrap;

  /* get the state */
  if (!strm || !strm.state) { return Z_STREAM_ERROR$1; }
  const state = strm.state;

  /* extract wrap request from windowBits parameter */
  if (windowBits < 0) {
    wrap = 0;
    windowBits = -windowBits;
  }
  else {
    wrap = (windowBits >> 4) + 1;
    if (windowBits < 48) {
      windowBits &= 15;
    }
  }

  /* set number of window bits, free window if different */
  if (windowBits && (windowBits < 8 || windowBits > 15)) {
    return Z_STREAM_ERROR$1;
  }
  if (state.window !== null && state.wbits !== windowBits) {
    state.window = null;
  }

  /* update state and reset the rest of it */
  state.wrap = wrap;
  state.wbits = windowBits;
  return inflateReset(strm);
};


const inflateInit2 = (strm, windowBits) => {

  if (!strm) { return Z_STREAM_ERROR$1; }
  //strm.msg = Z_NULL;                 /* in case we return an error */

  const state = new InflateState();

  //if (state === Z_NULL) return Z_MEM_ERROR;
  //Tracev((stderr, "inflate: allocated\n"));
  strm.state = state;
  state.window = null/*Z_NULL*/;
  const ret = inflateReset2(strm, windowBits);
  if (ret !== Z_OK$1) {
    strm.state = null/*Z_NULL*/;
  }
  return ret;
};


const inflateInit = (strm) => {

  return inflateInit2(strm, DEF_WBITS);
};


/*
 Return state with length and distance decoding tables and index sizes set to
 fixed code decoding.  Normally this returns fixed tables from inffixed.h.
 If BUILDFIXED is defined, then instead this routine builds the tables the
 first time it's called, and returns those tables the first time and
 thereafter.  This reduces the size of the code by about 2K bytes, in
 exchange for a little execution time.  However, BUILDFIXED should not be
 used for threaded applications, since the rewriting of the tables and virgin
 may not be thread-safe.
 */
let virgin = true;

let lenfix, distfix; // We have no pointers in JS, so keep tables separate


const fixedtables = (state) => {

  /* build fixed huffman tables if first call (may not be thread safe) */
  if (virgin) {
    lenfix = new Int32Array(512);
    distfix = new Int32Array(32);

    /* literal/length table */
    let sym = 0;
    while (sym < 144) { state.lens[sym++] = 8; }
    while (sym < 256) { state.lens[sym++] = 9; }
    while (sym < 280) { state.lens[sym++] = 7; }
    while (sym < 288) { state.lens[sym++] = 8; }

    inftrees(LENS,  state.lens, 0, 288, lenfix,   0, state.work, { bits: 9 });

    /* distance table */
    sym = 0;
    while (sym < 32) { state.lens[sym++] = 5; }

    inftrees(DISTS, state.lens, 0, 32,   distfix, 0, state.work, { bits: 5 });

    /* do this just once */
    virgin = false;
  }

  state.lencode = lenfix;
  state.lenbits = 9;
  state.distcode = distfix;
  state.distbits = 5;
};


/*
 Update the window with the last wsize (normally 32K) bytes written before
 returning.  If window does not exist yet, create it.  This is only called
 when a window is already in use, or when output has been written during this
 inflate call, but the end of the deflate stream has not been reached yet.
 It is also called to create a window for dictionary data when a dictionary
 is loaded.

 Providing output buffers larger than 32K to inflate() should provide a speed
 advantage, since only the last 32K of output is copied to the sliding window
 upon return from inflate(), and since all distances after the first 32K of
 output will fall in the output data, making match copies simpler and faster.
 The advantage may be dependent on the size of the processor's data caches.
 */
const updatewindow = (strm, src, end, copy) => {

  let dist;
  const state = strm.state;

  /* if it hasn't been done already, allocate space for the window */
  if (state.window === null) {
    state.wsize = 1 << state.wbits;
    state.wnext = 0;
    state.whave = 0;

    state.window = new Uint8Array(state.wsize);
  }

  /* copy state->wsize or less output bytes into the circular window */
  if (copy >= state.wsize) {
    state.window.set(src.subarray(end - state.wsize, end), 0);
    state.wnext = 0;
    state.whave = state.wsize;
  }
  else {
    dist = state.wsize - state.wnext;
    if (dist > copy) {
      dist = copy;
    }
    //zmemcpy(state->window + state->wnext, end - copy, dist);
    state.window.set(src.subarray(end - copy, end - copy + dist), state.wnext);
    copy -= dist;
    if (copy) {
      //zmemcpy(state->window, end - copy, copy);
      state.window.set(src.subarray(end - copy, end), 0);
      state.wnext = copy;
      state.whave = state.wsize;
    }
    else {
      state.wnext += dist;
      if (state.wnext === state.wsize) { state.wnext = 0; }
      if (state.whave < state.wsize) { state.whave += dist; }
    }
  }
  return 0;
};


const inflate$2 = (strm, flush) => {

  let state;
  let input, output;          // input/output buffers
  let next;                   /* next input INDEX */
  let put;                    /* next output INDEX */
  let have, left;             /* available input and output */
  let hold;                   /* bit buffer */
  let bits;                   /* bits in bit buffer */
  let _in, _out;              /* save starting available input and output */
  let copy;                   /* number of stored or match bytes to copy */
  let from;                   /* where to copy match bytes from */
  let from_source;
  let here = 0;               /* current decoding table entry */
  let here_bits, here_op, here_val; // paked "here" denormalized (JS specific)
  //let last;                   /* parent table entry */
  let last_bits, last_op, last_val; // paked "last" denormalized (JS specific)
  let len;                    /* length to copy for repeats, bits to drop */
  let ret;                    /* return code */
  const hbuf = new Uint8Array(4);    /* buffer for gzip header crc calculation */
  let opts;

  let n; // temporary variable for NEED_BITS

  const order = /* permutation of code lengths */
    new Uint8Array([ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ]);


  if (!strm || !strm.state || !strm.output ||
      (!strm.input && strm.avail_in !== 0)) {
    return Z_STREAM_ERROR$1;
  }

  state = strm.state;
  if (state.mode === TYPE) { state.mode = TYPEDO; }    /* skip check */


  //--- LOAD() ---
  put = strm.next_out;
  output = strm.output;
  left = strm.avail_out;
  next = strm.next_in;
  input = strm.input;
  have = strm.avail_in;
  hold = state.hold;
  bits = state.bits;
  //---

  _in = have;
  _out = left;
  ret = Z_OK$1;

  inf_leave: // goto emulation
  for (;;) {
    switch (state.mode) {
      case HEAD:
        if (state.wrap === 0) {
          state.mode = TYPEDO;
          break;
        }
        //=== NEEDBITS(16);
        while (bits < 16) {
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
        }
        //===//
        if ((state.wrap & 2) && hold === 0x8b1f) {  /* gzip header */
          state.check = 0/*crc32(0L, Z_NULL, 0)*/;
          //=== CRC2(state.check, hold);
          hbuf[0] = hold & 0xff;
          hbuf[1] = (hold >>> 8) & 0xff;
          state.check = crc32_1(state.check, hbuf, 2, 0);
          //===//

          //=== INITBITS();
          hold = 0;
          bits = 0;
          //===//
          state.mode = FLAGS;
          break;
        }
        state.flags = 0;           /* expect zlib header */
        if (state.head) {
          state.head.done = false;
        }
        if (!(state.wrap & 1) ||   /* check if zlib header allowed */
          (((hold & 0xff)/*BITS(8)*/ << 8) + (hold >> 8)) % 31) {
          strm.msg = 'incorrect header check';
          state.mode = BAD;
          break;
        }
        if ((hold & 0x0f)/*BITS(4)*/ !== Z_DEFLATED) {
          strm.msg = 'unknown compression method';
          state.mode = BAD;
          break;
        }
        //--- DROPBITS(4) ---//
        hold >>>= 4;
        bits -= 4;
        //---//
        len = (hold & 0x0f)/*BITS(4)*/ + 8;
        if (state.wbits === 0) {
          state.wbits = len;
        }
        else if (len > state.wbits) {
          strm.msg = 'invalid window size';
          state.mode = BAD;
          break;
        }

        // !!! pako patch. Force use `options.windowBits` if passed.
        // Required to always use max window size by default.
        state.dmax = 1 << state.wbits;
        //state.dmax = 1 << len;

        //Tracev((stderr, "inflate:   zlib header ok\n"));
        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;
        state.mode = hold & 0x200 ? DICTID : TYPE;
        //=== INITBITS();
        hold = 0;
        bits = 0;
        //===//
        break;
      case FLAGS:
        //=== NEEDBITS(16); */
        while (bits < 16) {
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
        }
        //===//
        state.flags = hold;
        if ((state.flags & 0xff) !== Z_DEFLATED) {
          strm.msg = 'unknown compression method';
          state.mode = BAD;
          break;
        }
        if (state.flags & 0xe000) {
          strm.msg = 'unknown header flags set';
          state.mode = BAD;
          break;
        }
        if (state.head) {
          state.head.text = ((hold >> 8) & 1);
        }
        if (state.flags & 0x0200) {
          //=== CRC2(state.check, hold);
          hbuf[0] = hold & 0xff;
          hbuf[1] = (hold >>> 8) & 0xff;
          state.check = crc32_1(state.check, hbuf, 2, 0);
          //===//
        }
        //=== INITBITS();
        hold = 0;
        bits = 0;
        //===//
        state.mode = TIME;
        /* falls through */
      case TIME:
        //=== NEEDBITS(32); */
        while (bits < 32) {
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
        }
        //===//
        if (state.head) {
          state.head.time = hold;
        }
        if (state.flags & 0x0200) {
          //=== CRC4(state.check, hold)
          hbuf[0] = hold & 0xff;
          hbuf[1] = (hold >>> 8) & 0xff;
          hbuf[2] = (hold >>> 16) & 0xff;
          hbuf[3] = (hold >>> 24) & 0xff;
          state.check = crc32_1(state.check, hbuf, 4, 0);
          //===
        }
        //=== INITBITS();
        hold = 0;
        bits = 0;
        //===//
        state.mode = OS;
        /* falls through */
      case OS:
        //=== NEEDBITS(16); */
        while (bits < 16) {
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
        }
        //===//
        if (state.head) {
          state.head.xflags = (hold & 0xff);
          state.head.os = (hold >> 8);
        }
        if (state.flags & 0x0200) {
          //=== CRC2(state.check, hold);
          hbuf[0] = hold & 0xff;
          hbuf[1] = (hold >>> 8) & 0xff;
          state.check = crc32_1(state.check, hbuf, 2, 0);
          //===//
        }
        //=== INITBITS();
        hold = 0;
        bits = 0;
        //===//
        state.mode = EXLEN;
        /* falls through */
      case EXLEN:
        if (state.flags & 0x0400) {
          //=== NEEDBITS(16); */
          while (bits < 16) {
            if (have === 0) { break inf_leave; }
            have--;
            hold += input[next++] << bits;
            bits += 8;
          }
          //===//
          state.length = hold;
          if (state.head) {
            state.head.extra_len = hold;
          }
          if (state.flags & 0x0200) {
            //=== CRC2(state.check, hold);
            hbuf[0] = hold & 0xff;
            hbuf[1] = (hold >>> 8) & 0xff;
            state.check = crc32_1(state.check, hbuf, 2, 0);
            //===//
          }
          //=== INITBITS();
          hold = 0;
          bits = 0;
          //===//
        }
        else if (state.head) {
          state.head.extra = null/*Z_NULL*/;
        }
        state.mode = EXTRA;
        /* falls through */
      case EXTRA:
        if (state.flags & 0x0400) {
          copy = state.length;
          if (copy > have) { copy = have; }
          if (copy) {
            if (state.head) {
              len = state.head.extra_len - state.length;
              if (!state.head.extra) {
                // Use untyped array for more convenient processing later
                state.head.extra = new Uint8Array(state.head.extra_len);
              }
              state.head.extra.set(
                input.subarray(
                  next,
                  // extra field is limited to 65536 bytes
                  // - no need for additional size check
                  next + copy
                ),
                /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/
                len
              );
              //zmemcpy(state.head.extra + len, next,
              //        len + copy > state.head.extra_max ?
              //        state.head.extra_max - len : copy);
            }
            if (state.flags & 0x0200) {
              state.check = crc32_1(state.check, input, copy, next);
            }
            have -= copy;
            next += copy;
            state.length -= copy;
          }
          if (state.length) { break inf_leave; }
        }
        state.length = 0;
        state.mode = NAME;
        /* falls through */
      case NAME:
        if (state.flags & 0x0800) {
          if (have === 0) { break inf_leave; }
          copy = 0;
          do {
            // TODO: 2 or 1 bytes?
            len = input[next + copy++];
            /* use constant limit because in js we should not preallocate memory */
            if (state.head && len &&
                (state.length < 65536 /*state.head.name_max*/)) {
              state.head.name += String.fromCharCode(len);
            }
          } while (len && copy < have);

          if (state.flags & 0x0200) {
            state.check = crc32_1(state.check, input, copy, next);
          }
          have -= copy;
          next += copy;
          if (len) { break inf_leave; }
        }
        else if (state.head) {
          state.head.name = null;
        }
        state.length = 0;
        state.mode = COMMENT;
        /* falls through */
      case COMMENT:
        if (state.flags & 0x1000) {
          if (have === 0) { break inf_leave; }
          copy = 0;
          do {
            len = input[next + copy++];
            /* use constant limit because in js we should not preallocate memory */
            if (state.head && len &&
                (state.length < 65536 /*state.head.comm_max*/)) {
              state.head.comment += String.fromCharCode(len);
            }
          } while (len && copy < have);
          if (state.flags & 0x0200) {
            state.check = crc32_1(state.check, input, copy, next);
          }
          have -= copy;
          next += copy;
          if (len) { break inf_leave; }
        }
        else if (state.head) {
          state.head.comment = null;
        }
        state.mode = HCRC;
        /* falls through */
      case HCRC:
        if (state.flags & 0x0200) {
          //=== NEEDBITS(16); */
          while (bits < 16) {
            if (have === 0) { break inf_leave; }
            have--;
            hold += input[next++] << bits;
            bits += 8;
          }
          //===//
          if (hold !== (state.check & 0xffff)) {
            strm.msg = 'header crc mismatch';
            state.mode = BAD;
            break;
          }
          //=== INITBITS();
          hold = 0;
          bits = 0;
          //===//
        }
        if (state.head) {
          state.head.hcrc = ((state.flags >> 9) & 1);
          state.head.done = true;
        }
        strm.adler = state.check = 0;
        state.mode = TYPE;
        break;
      case DICTID:
        //=== NEEDBITS(32); */
        while (bits < 32) {
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
        }
        //===//
        strm.adler = state.check = zswap32(hold);
        //=== INITBITS();
        hold = 0;
        bits = 0;
        //===//
        state.mode = DICT;
        /* falls through */
      case DICT:
        if (state.havedict === 0) {
          //--- RESTORE() ---
          strm.next_out = put;
          strm.avail_out = left;
          strm.next_in = next;
          strm.avail_in = have;
          state.hold = hold;
          state.bits = bits;
          //---
          return Z_NEED_DICT$1;
        }
        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;
        state.mode = TYPE;
        /* falls through */
      case TYPE:
        if (flush === Z_BLOCK || flush === Z_TREES) { break inf_leave; }
        /* falls through */
      case TYPEDO:
        if (state.last) {
          //--- BYTEBITS() ---//
          hold >>>= bits & 7;
          bits -= bits & 7;
          //---//
          state.mode = CHECK;
          break;
        }
        //=== NEEDBITS(3); */
        while (bits < 3) {
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
        }
        //===//
        state.last = (hold & 0x01)/*BITS(1)*/;
        //--- DROPBITS(1) ---//
        hold >>>= 1;
        bits -= 1;
        //---//

        switch ((hold & 0x03)/*BITS(2)*/) {
          case 0:                             /* stored block */
            //Tracev((stderr, "inflate:     stored block%s\n",
            //        state.last ? " (last)" : ""));
            state.mode = STORED;
            break;
          case 1:                             /* fixed block */
            fixedtables(state);
            //Tracev((stderr, "inflate:     fixed codes block%s\n",
            //        state.last ? " (last)" : ""));
            state.mode = LEN_;             /* decode codes */
            if (flush === Z_TREES) {
              //--- DROPBITS(2) ---//
              hold >>>= 2;
              bits -= 2;
              //---//
              break inf_leave;
            }
            break;
          case 2:                             /* dynamic block */
            //Tracev((stderr, "inflate:     dynamic codes block%s\n",
            //        state.last ? " (last)" : ""));
            state.mode = TABLE;
            break;
          case 3:
            strm.msg = 'invalid block type';
            state.mode = BAD;
        }
        //--- DROPBITS(2) ---//
        hold >>>= 2;
        bits -= 2;
        //---//
        break;
      case STORED:
        //--- BYTEBITS() ---// /* go to byte boundary */
        hold >>>= bits & 7;
        bits -= bits & 7;
        //---//
        //=== NEEDBITS(32); */
        while (bits < 32) {
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
        }
        //===//
        if ((hold & 0xffff) !== ((hold >>> 16) ^ 0xffff)) {
          strm.msg = 'invalid stored block lengths';
          state.mode = BAD;
          break;
        }
        state.length = hold & 0xffff;
        //Tracev((stderr, "inflate:       stored length %u\n",
        //        state.length));
        //=== INITBITS();
        hold = 0;
        bits = 0;
        //===//
        state.mode = COPY_;
        if (flush === Z_TREES) { break inf_leave; }
        /* falls through */
      case COPY_:
        state.mode = COPY;
        /* falls through */
      case COPY:
        copy = state.length;
        if (copy) {
          if (copy > have) { copy = have; }
          if (copy > left) { copy = left; }
          if (copy === 0) { break inf_leave; }
          //--- zmemcpy(put, next, copy); ---
          output.set(input.subarray(next, next + copy), put);
          //---//
          have -= copy;
          next += copy;
          left -= copy;
          put += copy;
          state.length -= copy;
          break;
        }
        //Tracev((stderr, "inflate:       stored end\n"));
        state.mode = TYPE;
        break;
      case TABLE:
        //=== NEEDBITS(14); */
        while (bits < 14) {
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
        }
        //===//
        state.nlen = (hold & 0x1f)/*BITS(5)*/ + 257;
        //--- DROPBITS(5) ---//
        hold >>>= 5;
        bits -= 5;
        //---//
        state.ndist = (hold & 0x1f)/*BITS(5)*/ + 1;
        //--- DROPBITS(5) ---//
        hold >>>= 5;
        bits -= 5;
        //---//
        state.ncode = (hold & 0x0f)/*BITS(4)*/ + 4;
        //--- DROPBITS(4) ---//
        hold >>>= 4;
        bits -= 4;
        //---//
//#ifndef PKZIP_BUG_WORKAROUND
        if (state.nlen > 286 || state.ndist > 30) {
          strm.msg = 'too many length or distance symbols';
          state.mode = BAD;
          break;
        }
//#endif
        //Tracev((stderr, "inflate:       table sizes ok\n"));
        state.have = 0;
        state.mode = LENLENS;
        /* falls through */
      case LENLENS:
        while (state.have < state.ncode) {
          //=== NEEDBITS(3);
          while (bits < 3) {
            if (have === 0) { break inf_leave; }
            have--;
            hold += input[next++] << bits;
            bits += 8;
          }
          //===//
          state.lens[order[state.have++]] = (hold & 0x07);//BITS(3);
          //--- DROPBITS(3) ---//
          hold >>>= 3;
          bits -= 3;
          //---//
        }
        while (state.have < 19) {
          state.lens[order[state.have++]] = 0;
        }
        // We have separate tables & no pointers. 2 commented lines below not needed.
        //state.next = state.codes;
        //state.lencode = state.next;
        // Switch to use dynamic table
        state.lencode = state.lendyn;
        state.lenbits = 7;

        opts = { bits: state.lenbits };
        ret = inftrees(CODES, state.lens, 0, 19, state.lencode, 0, state.work, opts);
        state.lenbits = opts.bits;

        if (ret) {
          strm.msg = 'invalid code lengths set';
          state.mode = BAD;
          break;
        }
        //Tracev((stderr, "inflate:       code lengths ok\n"));
        state.have = 0;
        state.mode = CODELENS;
        /* falls through */
      case CODELENS:
        while (state.have < state.nlen + state.ndist) {
          for (;;) {
            here = state.lencode[hold & ((1 << state.lenbits) - 1)];/*BITS(state.lenbits)*/
            here_bits = here >>> 24;
            here_op = (here >>> 16) & 0xff;
            here_val = here & 0xffff;

            if ((here_bits) <= bits) { break; }
            //--- PULLBYTE() ---//
            if (have === 0) { break inf_leave; }
            have--;
            hold += input[next++] << bits;
            bits += 8;
            //---//
          }
          if (here_val < 16) {
            //--- DROPBITS(here.bits) ---//
            hold >>>= here_bits;
            bits -= here_bits;
            //---//
            state.lens[state.have++] = here_val;
          }
          else {
            if (here_val === 16) {
              //=== NEEDBITS(here.bits + 2);
              n = here_bits + 2;
              while (bits < n) {
                if (have === 0) { break inf_leave; }
                have--;
                hold += input[next++] << bits;
                bits += 8;
              }
              //===//
              //--- DROPBITS(here.bits) ---//
              hold >>>= here_bits;
              bits -= here_bits;
              //---//
              if (state.have === 0) {
                strm.msg = 'invalid bit length repeat';
                state.mode = BAD;
                break;
              }
              len = state.lens[state.have - 1];
              copy = 3 + (hold & 0x03);//BITS(2);
              //--- DROPBITS(2) ---//
              hold >>>= 2;
              bits -= 2;
              //---//
            }
            else if (here_val === 17) {
              //=== NEEDBITS(here.bits + 3);
              n = here_bits + 3;
              while (bits < n) {
                if (have === 0) { break inf_leave; }
                have--;
                hold += input[next++] << bits;
                bits += 8;
              }
              //===//
              //--- DROPBITS(here.bits) ---//
              hold >>>= here_bits;
              bits -= here_bits;
              //---//
              len = 0;
              copy = 3 + (hold & 0x07);//BITS(3);
              //--- DROPBITS(3) ---//
              hold >>>= 3;
              bits -= 3;
              //---//
            }
            else {
              //=== NEEDBITS(here.bits + 7);
              n = here_bits + 7;
              while (bits < n) {
                if (have === 0) { break inf_leave; }
                have--;
                hold += input[next++] << bits;
                bits += 8;
              }
              //===//
              //--- DROPBITS(here.bits) ---//
              hold >>>= here_bits;
              bits -= here_bits;
              //---//
              len = 0;
              copy = 11 + (hold & 0x7f);//BITS(7);
              //--- DROPBITS(7) ---//
              hold >>>= 7;
              bits -= 7;
              //---//
            }
            if (state.have + copy > state.nlen + state.ndist) {
              strm.msg = 'invalid bit length repeat';
              state.mode = BAD;
              break;
            }
            while (copy--) {
              state.lens[state.have++] = len;
            }
          }
        }

        /* handle error breaks in while */
        if (state.mode === BAD) { break; }

        /* check for end-of-block code (better have one) */
        if (state.lens[256] === 0) {
          strm.msg = 'invalid code -- missing end-of-block';
          state.mode = BAD;
          break;
        }

        /* build code tables -- note: do not change the lenbits or distbits
           values here (9 and 6) without reading the comments in inftrees.h
           concerning the ENOUGH constants, which depend on those values */
        state.lenbits = 9;

        opts = { bits: state.lenbits };
        ret = inftrees(LENS, state.lens, 0, state.nlen, state.lencode, 0, state.work, opts);
        // We have separate tables & no pointers. 2 commented lines below not needed.
        // state.next_index = opts.table_index;
        state.lenbits = opts.bits;
        // state.lencode = state.next;

        if (ret) {
          strm.msg = 'invalid literal/lengths set';
          state.mode = BAD;
          break;
        }

        state.distbits = 6;
        //state.distcode.copy(state.codes);
        // Switch to use dynamic table
        state.distcode = state.distdyn;
        opts = { bits: state.distbits };
        ret = inftrees(DISTS, state.lens, state.nlen, state.ndist, state.distcode, 0, state.work, opts);
        // We have separate tables & no pointers. 2 commented lines below not needed.
        // state.next_index = opts.table_index;
        state.distbits = opts.bits;
        // state.distcode = state.next;

        if (ret) {
          strm.msg = 'invalid distances set';
          state.mode = BAD;
          break;
        }
        //Tracev((stderr, 'inflate:       codes ok\n'));
        state.mode = LEN_;
        if (flush === Z_TREES) { break inf_leave; }
        /* falls through */
      case LEN_:
        state.mode = LEN;
        /* falls through */
      case LEN:
        if (have >= 6 && left >= 258) {
          //--- RESTORE() ---
          strm.next_out = put;
          strm.avail_out = left;
          strm.next_in = next;
          strm.avail_in = have;
          state.hold = hold;
          state.bits = bits;
          //---
          inffast(strm, _out);
          //--- LOAD() ---
          put = strm.next_out;
          output = strm.output;
          left = strm.avail_out;
          next = strm.next_in;
          input = strm.input;
          have = strm.avail_in;
          hold = state.hold;
          bits = state.bits;
          //---

          if (state.mode === TYPE) {
            state.back = -1;
          }
          break;
        }
        state.back = 0;
        for (;;) {
          here = state.lencode[hold & ((1 << state.lenbits) - 1)];  /*BITS(state.lenbits)*/
          here_bits = here >>> 24;
          here_op = (here >>> 16) & 0xff;
          here_val = here & 0xffff;

          if (here_bits <= bits) { break; }
          //--- PULLBYTE() ---//
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
          //---//
        }
        if (here_op && (here_op & 0xf0) === 0) {
          last_bits = here_bits;
          last_op = here_op;
          last_val = here_val;
          for (;;) {
            here = state.lencode[last_val +
                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];
            here_bits = here >>> 24;
            here_op = (here >>> 16) & 0xff;
            here_val = here & 0xffff;

            if ((last_bits + here_bits) <= bits) { break; }
            //--- PULLBYTE() ---//
            if (have === 0) { break inf_leave; }
            have--;
            hold += input[next++] << bits;
            bits += 8;
            //---//
          }
          //--- DROPBITS(last.bits) ---//
          hold >>>= last_bits;
          bits -= last_bits;
          //---//
          state.back += last_bits;
        }
        //--- DROPBITS(here.bits) ---//
        hold >>>= here_bits;
        bits -= here_bits;
        //---//
        state.back += here_bits;
        state.length = here_val;
        if (here_op === 0) {
          //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?
          //        "inflate:         literal '%c'\n" :
          //        "inflate:         literal 0x%02x\n", here.val));
          state.mode = LIT;
          break;
        }
        if (here_op & 32) {
          //Tracevv((stderr, "inflate:         end of block\n"));
          state.back = -1;
          state.mode = TYPE;
          break;
        }
        if (here_op & 64) {
          strm.msg = 'invalid literal/length code';
          state.mode = BAD;
          break;
        }
        state.extra = here_op & 15;
        state.mode = LENEXT;
        /* falls through */
      case LENEXT:
        if (state.extra) {
          //=== NEEDBITS(state.extra);
          n = state.extra;
          while (bits < n) {
            if (have === 0) { break inf_leave; }
            have--;
            hold += input[next++] << bits;
            bits += 8;
          }
          //===//
          state.length += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;
          //--- DROPBITS(state.extra) ---//
          hold >>>= state.extra;
          bits -= state.extra;
          //---//
          state.back += state.extra;
        }
        //Tracevv((stderr, "inflate:         length %u\n", state.length));
        state.was = state.length;
        state.mode = DIST;
        /* falls through */
      case DIST:
        for (;;) {
          here = state.distcode[hold & ((1 << state.distbits) - 1)];/*BITS(state.distbits)*/
          here_bits = here >>> 24;
          here_op = (here >>> 16) & 0xff;
          here_val = here & 0xffff;

          if ((here_bits) <= bits) { break; }
          //--- PULLBYTE() ---//
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
          //---//
        }
        if ((here_op & 0xf0) === 0) {
          last_bits = here_bits;
          last_op = here_op;
          last_val = here_val;
          for (;;) {
            here = state.distcode[last_val +
                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];
            here_bits = here >>> 24;
            here_op = (here >>> 16) & 0xff;
            here_val = here & 0xffff;

            if ((last_bits + here_bits) <= bits) { break; }
            //--- PULLBYTE() ---//
            if (have === 0) { break inf_leave; }
            have--;
            hold += input[next++] << bits;
            bits += 8;
            //---//
          }
          //--- DROPBITS(last.bits) ---//
          hold >>>= last_bits;
          bits -= last_bits;
          //---//
          state.back += last_bits;
        }
        //--- DROPBITS(here.bits) ---//
        hold >>>= here_bits;
        bits -= here_bits;
        //---//
        state.back += here_bits;
        if (here_op & 64) {
          strm.msg = 'invalid distance code';
          state.mode = BAD;
          break;
        }
        state.offset = here_val;
        state.extra = (here_op) & 15;
        state.mode = DISTEXT;
        /* falls through */
      case DISTEXT:
        if (state.extra) {
          //=== NEEDBITS(state.extra);
          n = state.extra;
          while (bits < n) {
            if (have === 0) { break inf_leave; }
            have--;
            hold += input[next++] << bits;
            bits += 8;
          }
          //===//
          state.offset += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;
          //--- DROPBITS(state.extra) ---//
          hold >>>= state.extra;
          bits -= state.extra;
          //---//
          state.back += state.extra;
        }
//#ifdef INFLATE_STRICT
        if (state.offset > state.dmax) {
          strm.msg = 'invalid distance too far back';
          state.mode = BAD;
          break;
        }
//#endif
        //Tracevv((stderr, "inflate:         distance %u\n", state.offset));
        state.mode = MATCH;
        /* falls through */
      case MATCH:
        if (left === 0) { break inf_leave; }
        copy = _out - left;
        if (state.offset > copy) {         /* copy from window */
          copy = state.offset - copy;
          if (copy > state.whave) {
            if (state.sane) {
              strm.msg = 'invalid distance too far back';
              state.mode = BAD;
              break;
            }
// (!) This block is disabled in zlib defaults,
// don't enable it for binary compatibility
//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR
//          Trace((stderr, "inflate.c too far\n"));
//          copy -= state.whave;
//          if (copy > state.length) { copy = state.length; }
//          if (copy > left) { copy = left; }
//          left -= copy;
//          state.length -= copy;
//          do {
//            output[put++] = 0;
//          } while (--copy);
//          if (state.length === 0) { state.mode = LEN; }
//          break;
//#endif
          }
          if (copy > state.wnext) {
            copy -= state.wnext;
            from = state.wsize - copy;
          }
          else {
            from = state.wnext - copy;
          }
          if (copy > state.length) { copy = state.length; }
          from_source = state.window;
        }
        else {                              /* copy from output */
          from_source = output;
          from = put - state.offset;
          copy = state.length;
        }
        if (copy > left) { copy = left; }
        left -= copy;
        state.length -= copy;
        do {
          output[put++] = from_source[from++];
        } while (--copy);
        if (state.length === 0) { state.mode = LEN; }
        break;
      case LIT:
        if (left === 0) { break inf_leave; }
        output[put++] = state.length;
        left--;
        state.mode = LEN;
        break;
      case CHECK:
        if (state.wrap) {
          //=== NEEDBITS(32);
          while (bits < 32) {
            if (have === 0) { break inf_leave; }
            have--;
            // Use '|' instead of '+' to make sure that result is signed
            hold |= input[next++] << bits;
            bits += 8;
          }
          //===//
          _out -= left;
          strm.total_out += _out;
          state.total += _out;
          if (_out) {
            strm.adler = state.check =
                /*UPDATE(state.check, put - _out, _out);*/
                (state.flags ? crc32_1(state.check, output, _out, put - _out) : adler32_1(state.check, output, _out, put - _out));

          }
          _out = left;
          // NB: crc32 stored as signed 32-bit int, zswap32 returns signed too
          if ((state.flags ? hold : zswap32(hold)) !== state.check) {
            strm.msg = 'incorrect data check';
            state.mode = BAD;
            break;
          }
          //=== INITBITS();
          hold = 0;
          bits = 0;
          //===//
          //Tracev((stderr, "inflate:   check matches trailer\n"));
        }
        state.mode = LENGTH;
        /* falls through */
      case LENGTH:
        if (state.wrap && state.flags) {
          //=== NEEDBITS(32);
          while (bits < 32) {
            if (have === 0) { break inf_leave; }
            have--;
            hold += input[next++] << bits;
            bits += 8;
          }
          //===//
          if (hold !== (state.total & 0xffffffff)) {
            strm.msg = 'incorrect length check';
            state.mode = BAD;
            break;
          }
          //=== INITBITS();
          hold = 0;
          bits = 0;
          //===//
          //Tracev((stderr, "inflate:   length matches trailer\n"));
        }
        state.mode = DONE;
        /* falls through */
      case DONE:
        ret = Z_STREAM_END$1;
        break inf_leave;
      case BAD:
        ret = Z_DATA_ERROR$1;
        break inf_leave;
      case MEM:
        return Z_MEM_ERROR$1;
      case SYNC:
        /* falls through */
      default:
        return Z_STREAM_ERROR$1;
    }
  }

  // inf_leave <- here is real place for "goto inf_leave", emulated via "break inf_leave"

  /*
     Return from inflate(), updating the total counts and the check value.
     If there was no progress during the inflate() call, return a buffer
     error.  Call updatewindow() to create and/or update the window state.
     Note: a memory error from inflate() is non-recoverable.
   */

  //--- RESTORE() ---
  strm.next_out = put;
  strm.avail_out = left;
  strm.next_in = next;
  strm.avail_in = have;
  state.hold = hold;
  state.bits = bits;
  //---

  if (state.wsize || (_out !== strm.avail_out && state.mode < BAD &&
                      (state.mode < CHECK || flush !== Z_FINISH$1))) {
    if (updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out)) ;
  }
  _in -= strm.avail_in;
  _out -= strm.avail_out;
  strm.total_in += _in;
  strm.total_out += _out;
  state.total += _out;
  if (state.wrap && _out) {
    strm.adler = state.check = /*UPDATE(state.check, strm.next_out - _out, _out);*/
      (state.flags ? crc32_1(state.check, output, _out, strm.next_out - _out) : adler32_1(state.check, output, _out, strm.next_out - _out));
  }
  strm.data_type = state.bits + (state.last ? 64 : 0) +
                    (state.mode === TYPE ? 128 : 0) +
                    (state.mode === LEN_ || state.mode === COPY_ ? 256 : 0);
  if (((_in === 0 && _out === 0) || flush === Z_FINISH$1) && ret === Z_OK$1) {
    ret = Z_BUF_ERROR;
  }
  return ret;
};


const inflateEnd = (strm) => {

  if (!strm || !strm.state /*|| strm->zfree == (free_func)0*/) {
    return Z_STREAM_ERROR$1;
  }

  let state = strm.state;
  if (state.window) {
    state.window = null;
  }
  strm.state = null;
  return Z_OK$1;
};


const inflateGetHeader = (strm, head) => {

  /* check state */
  if (!strm || !strm.state) { return Z_STREAM_ERROR$1; }
  const state = strm.state;
  if ((state.wrap & 2) === 0) { return Z_STREAM_ERROR$1; }

  /* save header structure */
  state.head = head;
  head.done = false;
  return Z_OK$1;
};


const inflateSetDictionary = (strm, dictionary) => {
  const dictLength = dictionary.length;

  let state;
  let dictid;
  let ret;

  /* check state */
  if (!strm /* == Z_NULL */ || !strm.state /* == Z_NULL */) { return Z_STREAM_ERROR$1; }
  state = strm.state;

  if (state.wrap !== 0 && state.mode !== DICT) {
    return Z_STREAM_ERROR$1;
  }

  /* check for correct dictionary identifier */
  if (state.mode === DICT) {
    dictid = 1; /* adler32(0, null, 0)*/
    /* dictid = adler32(dictid, dictionary, dictLength); */
    dictid = adler32_1(dictid, dictionary, dictLength, 0);
    if (dictid !== state.check) {
      return Z_DATA_ERROR$1;
    }
  }
  /* copy dictionary to window using updatewindow(), which will amend the
   existing dictionary if appropriate */
  ret = updatewindow(strm, dictionary, dictLength, dictLength);
  if (ret) {
    state.mode = MEM;
    return Z_MEM_ERROR$1;
  }
  state.havedict = 1;
  // Tracev((stderr, "inflate:   dictionary set\n"));
  return Z_OK$1;
};


var inflateReset_1 = inflateReset;
var inflateReset2_1 = inflateReset2;
var inflateResetKeep_1 = inflateResetKeep;
var inflateInit_1 = inflateInit;
var inflateInit2_1 = inflateInit2;
var inflate_2$1 = inflate$2;
var inflateEnd_1 = inflateEnd;
var inflateGetHeader_1 = inflateGetHeader;
var inflateSetDictionary_1 = inflateSetDictionary;
var inflateInfo = 'pako inflate (from Nodeca project)';

/* Not implemented
module.exports.inflateCopy = inflateCopy;
module.exports.inflateGetDictionary = inflateGetDictionary;
module.exports.inflateMark = inflateMark;
module.exports.inflatePrime = inflatePrime;
module.exports.inflateSync = inflateSync;
module.exports.inflateSyncPoint = inflateSyncPoint;
module.exports.inflateUndermine = inflateUndermine;
*/

var inflate_1$2 = {
	inflateReset: inflateReset_1,
	inflateReset2: inflateReset2_1,
	inflateResetKeep: inflateResetKeep_1,
	inflateInit: inflateInit_1,
	inflateInit2: inflateInit2_1,
	inflate: inflate_2$1,
	inflateEnd: inflateEnd_1,
	inflateGetHeader: inflateGetHeader_1,
	inflateSetDictionary: inflateSetDictionary_1,
	inflateInfo: inflateInfo
};

// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

function GZheader() {
  /* true if compressed data believed to be text */
  this.text       = 0;
  /* modification time */
  this.time       = 0;
  /* extra flags (not used when writing a gzip file) */
  this.xflags     = 0;
  /* operating system */
  this.os         = 0;
  /* pointer to extra field or Z_NULL if none */
  this.extra      = null;
  /* extra field length (valid if extra != Z_NULL) */
  this.extra_len  = 0; // Actually, we don't need it in JS,
                       // but leave for few code modifications

  //
  // Setup limits is not necessary because in js we should not preallocate memory
  // for inflate use constant limit in 65536 bytes
  //

  /* space at extra (only when reading header) */
  // this.extra_max  = 0;
  /* pointer to zero-terminated file name or Z_NULL */
  this.name       = '';
  /* space at name (only when reading header) */
  // this.name_max   = 0;
  /* pointer to zero-terminated comment or Z_NULL */
  this.comment    = '';
  /* space at comment (only when reading header) */
  // this.comm_max   = 0;
  /* true if there was or will be a header crc */
  this.hcrc       = 0;
  /* true when done reading gzip header (not used when writing a gzip file) */
  this.done       = false;
}

var gzheader = GZheader;

const toString = Object.prototype.toString;

/* Public constants ==========================================================*/
/* ===========================================================================*/

const {
  Z_NO_FLUSH, Z_FINISH,
  Z_OK, Z_STREAM_END, Z_NEED_DICT, Z_STREAM_ERROR, Z_DATA_ERROR, Z_MEM_ERROR
} = constants$2;

/* ===========================================================================*/


/**
 * class Inflate
 *
 * Generic JS-style wrapper for zlib calls. If you don't need
 * streaming behaviour - use more simple functions: [[inflate]]
 * and [[inflateRaw]].
 **/

/* internal
 * inflate.chunks -> Array
 *
 * Chunks of output data, if [[Inflate#onData]] not overridden.
 **/

/**
 * Inflate.result -> Uint8Array|String
 *
 * Uncompressed result, generated by default [[Inflate#onData]]
 * and [[Inflate#onEnd]] handlers. Filled after you push last chunk
 * (call [[Inflate#push]] with `Z_FINISH` / `true` param).
 **/

/**
 * Inflate.err -> Number
 *
 * Error code after inflate finished. 0 (Z_OK) on success.
 * Should be checked if broken data possible.
 **/

/**
 * Inflate.msg -> String
 *
 * Error message, if [[Inflate.err]] != 0
 **/


/**
 * new Inflate(options)
 * - options (Object): zlib inflate options.
 *
 * Creates new inflator instance with specified params. Throws exception
 * on bad params. Supported options:
 *
 * - `windowBits`
 * - `dictionary`
 *
 * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)
 * for more information on these.
 *
 * Additional options, for internal needs:
 *
 * - `chunkSize` - size of generated data chunks (16K by default)
 * - `raw` (Boolean) - do raw inflate
 * - `to` (String) - if equal to 'string', then result will be converted
 *   from utf8 to utf16 (javascript) string. When string output requested,
 *   chunk length can differ from `chunkSize`, depending on content.
 *
 * By default, when no options set, autodetect deflate/gzip data format via
 * wrapper header.
 *
 * ##### Example:
 *
 * ```javascript
 * const pako = require('pako')
 * const chunk1 = new Uint8Array([1,2,3,4,5,6,7,8,9])
 * const chunk2 = new Uint8Array([10,11,12,13,14,15,16,17,18,19]);
 *
 * const inflate = new pako.Inflate({ level: 3});
 *
 * inflate.push(chunk1, false);
 * inflate.push(chunk2, true);  // true -> last chunk
 *
 * if (inflate.err) { throw new Error(inflate.err); }
 *
 * console.log(inflate.result);
 * ```
 **/
function Inflate$1(options) {
  this.options = common.assign({
    chunkSize: 1024 * 64,
    windowBits: 15,
    to: ''
  }, options || {});

  const opt = this.options;

  // Force window size for `raw` data, if not set directly,
  // because we have no header for autodetect.
  if (opt.raw && (opt.windowBits >= 0) && (opt.windowBits < 16)) {
    opt.windowBits = -opt.windowBits;
    if (opt.windowBits === 0) { opt.windowBits = -15; }
  }

  // If `windowBits` not defined (and mode not raw) - set autodetect flag for gzip/deflate
  if ((opt.windowBits >= 0) && (opt.windowBits < 16) &&
      !(options && options.windowBits)) {
    opt.windowBits += 32;
  }

  // Gzip header has no info about windows size, we can do autodetect only
  // for deflate. So, if window size not set, force it to max when gzip possible
  if ((opt.windowBits > 15) && (opt.windowBits < 48)) {
    // bit 3 (16) -> gzipped data
    // bit 4 (32) -> autodetect gzip/deflate
    if ((opt.windowBits & 15) === 0) {
      opt.windowBits |= 15;
    }
  }

  this.err    = 0;      // error code, if happens (0 = Z_OK)
  this.msg    = '';     // error message
  this.ended  = false;  // used to avoid multiple onEnd() calls
  this.chunks = [];     // chunks of compressed data

  this.strm   = new zstream();
  this.strm.avail_out = 0;

  let status  = inflate_1$2.inflateInit2(
    this.strm,
    opt.windowBits
  );

  if (status !== Z_OK) {
    throw new Error(messages[status]);
  }

  this.header = new gzheader();

  inflate_1$2.inflateGetHeader(this.strm, this.header);

  // Setup dictionary
  if (opt.dictionary) {
    // Convert data if needed
    if (typeof opt.dictionary === 'string') {
      opt.dictionary = strings.string2buf(opt.dictionary);
    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {
      opt.dictionary = new Uint8Array(opt.dictionary);
    }
    if (opt.raw) { //In raw mode we need to set the dictionary early
      status = inflate_1$2.inflateSetDictionary(this.strm, opt.dictionary);
      if (status !== Z_OK) {
        throw new Error(messages[status]);
      }
    }
  }
}

/**
 * Inflate#push(data[, flush_mode]) -> Boolean
 * - data (Uint8Array|ArrayBuffer): input data
 * - flush_mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE
 *   flush modes. See constants. Skipped or `false` means Z_NO_FLUSH,
 *   `true` means Z_FINISH.
 *
 * Sends input data to inflate pipe, generating [[Inflate#onData]] calls with
 * new output chunks. Returns `true` on success. If end of stream detected,
 * [[Inflate#onEnd]] will be called.
 *
 * `flush_mode` is not needed for normal operation, because end of stream
 * detected automatically. You may try to use it for advanced things, but
 * this functionality was not tested.
 *
 * On fail call [[Inflate#onEnd]] with error code and return false.
 *
 * ##### Example
 *
 * ```javascript
 * push(chunk, false); // push one of data chunks
 * ...
 * push(chunk, true);  // push last chunk
 * ```
 **/
Inflate$1.prototype.push = function (data, flush_mode) {
  const strm = this.strm;
  const chunkSize = this.options.chunkSize;
  const dictionary = this.options.dictionary;
  let status, _flush_mode, last_avail_out;

  if (this.ended) return false;

  if (flush_mode === ~~flush_mode) _flush_mode = flush_mode;
  else _flush_mode = flush_mode === true ? Z_FINISH : Z_NO_FLUSH;

  // Convert data if needed
  if (toString.call(data) === '[object ArrayBuffer]') {
    strm.input = new Uint8Array(data);
  } else {
    strm.input = data;
  }

  strm.next_in = 0;
  strm.avail_in = strm.input.length;

  for (;;) {
    if (strm.avail_out === 0) {
      strm.output = new Uint8Array(chunkSize);
      strm.next_out = 0;
      strm.avail_out = chunkSize;
    }

    status = inflate_1$2.inflate(strm, _flush_mode);

    if (status === Z_NEED_DICT && dictionary) {
      status = inflate_1$2.inflateSetDictionary(strm, dictionary);

      if (status === Z_OK) {
        status = inflate_1$2.inflate(strm, _flush_mode);
      } else if (status === Z_DATA_ERROR) {
        // Replace code with more verbose
        status = Z_NEED_DICT;
      }
    }

    // Skip snyc markers if more data follows and not raw mode
    while (strm.avail_in > 0 &&
           status === Z_STREAM_END &&
           strm.state.wrap > 0 &&
           data[strm.next_in] !== 0)
    {
      inflate_1$2.inflateReset(strm);
      status = inflate_1$2.inflate(strm, _flush_mode);
    }

    switch (status) {
      case Z_STREAM_ERROR:
      case Z_DATA_ERROR:
      case Z_NEED_DICT:
      case Z_MEM_ERROR:
        this.onEnd(status);
        this.ended = true;
        return false;
    }

    // Remember real `avail_out` value, because we may patch out buffer content
    // to align utf8 strings boundaries.
    last_avail_out = strm.avail_out;

    if (strm.next_out) {
      if (strm.avail_out === 0 || status === Z_STREAM_END) {

        if (this.options.to === 'string') {

          let next_out_utf8 = strings.utf8border(strm.output, strm.next_out);

          let tail = strm.next_out - next_out_utf8;
          let utf8str = strings.buf2string(strm.output, next_out_utf8);

          // move tail & realign counters
          strm.next_out = tail;
          strm.avail_out = chunkSize - tail;
          if (tail) strm.output.set(strm.output.subarray(next_out_utf8, next_out_utf8 + tail), 0);

          this.onData(utf8str);

        } else {
          this.onData(strm.output.length === strm.next_out ? strm.output : strm.output.subarray(0, strm.next_out));
        }
      }
    }

    // Must repeat iteration if out buffer is full
    if (status === Z_OK && last_avail_out === 0) continue;

    // Finalize if end of stream reached.
    if (status === Z_STREAM_END) {
      status = inflate_1$2.inflateEnd(this.strm);
      this.onEnd(status);
      this.ended = true;
      return true;
    }

    if (strm.avail_in === 0) break;
  }

  return true;
};


/**
 * Inflate#onData(chunk) -> Void
 * - chunk (Uint8Array|String): output data. When string output requested,
 *   each chunk will be string.
 *
 * By default, stores data blocks in `chunks[]` property and glue
 * those in `onEnd`. Override this handler, if you need another behaviour.
 **/
Inflate$1.prototype.onData = function (chunk) {
  this.chunks.push(chunk);
};


/**
 * Inflate#onEnd(status) -> Void
 * - status (Number): inflate status. 0 (Z_OK) on success,
 *   other if not.
 *
 * Called either after you tell inflate that the input stream is
 * complete (Z_FINISH). By default - join collected chunks,
 * free memory and fill `results` / `err` properties.
 **/
Inflate$1.prototype.onEnd = function (status) {
  // On success - join
  if (status === Z_OK) {
    if (this.options.to === 'string') {
      this.result = this.chunks.join('');
    } else {
      this.result = common.flattenChunks(this.chunks);
    }
  }
  this.chunks = [];
  this.err = status;
  this.msg = this.strm.msg;
};


/**
 * inflate(data[, options]) -> Uint8Array|String
 * - data (Uint8Array): input data to decompress.
 * - options (Object): zlib inflate options.
 *
 * Decompress `data` with inflate/ungzip and `options`. Autodetect
 * format via wrapper header by default. That's why we don't provide
 * separate `ungzip` method.
 *
 * Supported options are:
 *
 * - windowBits
 *
 * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)
 * for more information.
 *
 * Sugar (options):
 *
 * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify
 *   negative windowBits implicitly.
 * - `to` (String) - if equal to 'string', then result will be converted
 *   from utf8 to utf16 (javascript) string. When string output requested,
 *   chunk length can differ from `chunkSize`, depending on content.
 *
 *
 * ##### Example:
 *
 * ```javascript
 * const pako = require('pako');
 * const input = pako.deflate(new Uint8Array([1,2,3,4,5,6,7,8,9]));
 * let output;
 *
 * try {
 *   output = pako.inflate(input);
 * } catch (err) {
 *   console.log(err);
 * }
 * ```
 **/
function inflate$1(input, options) {
  const inflator = new Inflate$1(options);

  inflator.push(input);

  // That will never happens, if you don't cheat with options :)
  if (inflator.err) throw inflator.msg || messages[inflator.err];

  return inflator.result;
}


/**
 * inflateRaw(data[, options]) -> Uint8Array|String
 * - data (Uint8Array): input data to decompress.
 * - options (Object): zlib inflate options.
 *
 * The same as [[inflate]], but creates raw data, without wrapper
 * (header and adler32 crc).
 **/
function inflateRaw$1(input, options) {
  options = options || {};
  options.raw = true;
  return inflate$1(input, options);
}


/**
 * ungzip(data[, options]) -> Uint8Array|String
 * - data (Uint8Array): input data to decompress.
 * - options (Object): zlib inflate options.
 *
 * Just shortcut to [[inflate]], because it autodetects format
 * by header.content. Done for convenience.
 **/


var Inflate_1$1 = Inflate$1;
var inflate_2 = inflate$1;
var inflateRaw_1$1 = inflateRaw$1;
var ungzip$1 = inflate$1;
var constants = constants$2;

var inflate_1$1 = {
	Inflate: Inflate_1$1,
	inflate: inflate_2,
	inflateRaw: inflateRaw_1$1,
	ungzip: ungzip$1,
	constants: constants
};

const { Deflate, deflate, deflateRaw, gzip } = deflate_1$1;

const { Inflate, inflate, inflateRaw, ungzip } = inflate_1$1;



var Deflate_1 = Deflate;
var deflate_1 = deflate;
var deflateRaw_1 = deflateRaw;
var gzip_1 = gzip;
var Inflate_1 = Inflate;
var inflate_1 = inflate;
var inflateRaw_1 = inflateRaw;
var ungzip_1 = ungzip;
var constants_1 = constants$2;

var pako = {
	Deflate: Deflate_1,
	deflate: deflate_1,
	deflateRaw: deflateRaw_1,
	gzip: gzip_1,
	Inflate: Inflate_1,
	inflate: inflate_1,
	inflateRaw: inflateRaw_1,
	ungzip: ungzip_1,
	constants: constants_1
};




/***/ }),

/***/ "../node_modules/regenerator-runtime/runtime.js":
/*!******************************************************!*\
  !*** ../node_modules/regenerator-runtime/runtime.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var runtime = (function (exports) {
  "use strict";

  var Op = Object.prototype;
  var hasOwn = Op.hasOwnProperty;
  var undefined; // More compressible than void 0.
  var $Symbol = typeof Symbol === "function" ? Symbol : {};
  var iteratorSymbol = $Symbol.iterator || "@@iterator";
  var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
  var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

  function define(obj, key, value) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
    return obj[key];
  }
  try {
    // IE 8 has a broken Object.defineProperty that only works on DOM objects.
    define({}, "");
  } catch (err) {
    define = function(obj, key, value) {
      return obj[key] = value;
    };
  }

  function wrap(innerFn, outerFn, self, tryLocsList) {
    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
    var generator = Object.create(protoGenerator.prototype);
    var context = new Context(tryLocsList || []);

    // The ._invoke method unifies the implementations of the .next,
    // .throw, and .return methods.
    generator._invoke = makeInvokeMethod(innerFn, self, context);

    return generator;
  }
  exports.wrap = wrap;

  // Try/catch helper to minimize deoptimizations. Returns a completion
  // record like context.tryEntries[i].completion. This interface could
  // have been (and was previously) designed to take a closure to be
  // invoked without arguments, but in all the cases we care about we
  // already have an existing method we want to call, so there's no need
  // to create a new function object. We can even get away with assuming
  // the method takes exactly one argument, since that happens to be true
  // in every case, so we don't have to touch the arguments object. The
  // only additional allocation required is the completion record, which
  // has a stable shape and so hopefully should be cheap to allocate.
  function tryCatch(fn, obj, arg) {
    try {
      return { type: "normal", arg: fn.call(obj, arg) };
    } catch (err) {
      return { type: "throw", arg: err };
    }
  }

  var GenStateSuspendedStart = "suspendedStart";
  var GenStateSuspendedYield = "suspendedYield";
  var GenStateExecuting = "executing";
  var GenStateCompleted = "completed";

  // Returning this object from the innerFn has the same effect as
  // breaking out of the dispatch switch statement.
  var ContinueSentinel = {};

  // Dummy constructor functions that we use as the .constructor and
  // .constructor.prototype properties for functions that return Generator
  // objects. For full spec compliance, you may wish to configure your
  // minifier not to mangle the names of these two functions.
  function Generator() {}
  function GeneratorFunction() {}
  function GeneratorFunctionPrototype() {}

  // This is a polyfill for %IteratorPrototype% for environments that
  // don't natively support it.
  var IteratorPrototype = {};
  define(IteratorPrototype, iteratorSymbol, function () {
    return this;
  });

  var getProto = Object.getPrototypeOf;
  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));
  if (NativeIteratorPrototype &&
      NativeIteratorPrototype !== Op &&
      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
    // This environment has a native %IteratorPrototype%; use it instead
    // of the polyfill.
    IteratorPrototype = NativeIteratorPrototype;
  }

  var Gp = GeneratorFunctionPrototype.prototype =
    Generator.prototype = Object.create(IteratorPrototype);
  GeneratorFunction.prototype = GeneratorFunctionPrototype;
  define(Gp, "constructor", GeneratorFunctionPrototype);
  define(GeneratorFunctionPrototype, "constructor", GeneratorFunction);
  GeneratorFunction.displayName = define(
    GeneratorFunctionPrototype,
    toStringTagSymbol,
    "GeneratorFunction"
  );

  // Helper for defining the .next, .throw, and .return methods of the
  // Iterator interface in terms of a single ._invoke method.
  function defineIteratorMethods(prototype) {
    ["next", "throw", "return"].forEach(function(method) {
      define(prototype, method, function(arg) {
        return this._invoke(method, arg);
      });
    });
  }

  exports.isGeneratorFunction = function(genFun) {
    var ctor = typeof genFun === "function" && genFun.constructor;
    return ctor
      ? ctor === GeneratorFunction ||
        // For the native GeneratorFunction constructor, the best we can
        // do is to check its .name property.
        (ctor.displayName || ctor.name) === "GeneratorFunction"
      : false;
  };

  exports.mark = function(genFun) {
    if (Object.setPrototypeOf) {
      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
    } else {
      genFun.__proto__ = GeneratorFunctionPrototype;
      define(genFun, toStringTagSymbol, "GeneratorFunction");
    }
    genFun.prototype = Object.create(Gp);
    return genFun;
  };

  // Within the body of any async function, `await x` is transformed to
  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
  // `hasOwn.call(value, "__await")` to determine if the yielded value is
  // meant to be awaited.
  exports.awrap = function(arg) {
    return { __await: arg };
  };

  function AsyncIterator(generator, PromiseImpl) {
    function invoke(method, arg, resolve, reject) {
      var record = tryCatch(generator[method], generator, arg);
      if (record.type === "throw") {
        reject(record.arg);
      } else {
        var result = record.arg;
        var value = result.value;
        if (value &&
            typeof value === "object" &&
            hasOwn.call(value, "__await")) {
          return PromiseImpl.resolve(value.__await).then(function(value) {
            invoke("next", value, resolve, reject);
          }, function(err) {
            invoke("throw", err, resolve, reject);
          });
        }

        return PromiseImpl.resolve(value).then(function(unwrapped) {
          // When a yielded Promise is resolved, its final value becomes
          // the .value of the Promise<{value,done}> result for the
          // current iteration.
          result.value = unwrapped;
          resolve(result);
        }, function(error) {
          // If a rejected Promise was yielded, throw the rejection back
          // into the async generator function so it can be handled there.
          return invoke("throw", error, resolve, reject);
        });
      }
    }

    var previousPromise;

    function enqueue(method, arg) {
      function callInvokeWithMethodAndArg() {
        return new PromiseImpl(function(resolve, reject) {
          invoke(method, arg, resolve, reject);
        });
      }

      return previousPromise =
        // If enqueue has been called before, then we want to wait until
        // all previous Promises have been resolved before calling invoke,
        // so that results are always delivered in the correct order. If
        // enqueue has not been called before, then it is important to
        // call invoke immediately, without waiting on a callback to fire,
        // so that the async generator function has the opportunity to do
        // any necessary setup in a predictable way. This predictability
        // is why the Promise constructor synchronously invokes its
        // executor callback, and why async functions synchronously
        // execute code before the first await. Since we implement simple
        // async functions in terms of async generators, it is especially
        // important to get this right, even though it requires care.
        previousPromise ? previousPromise.then(
          callInvokeWithMethodAndArg,
          // Avoid propagating failures to Promises returned by later
          // invocations of the iterator.
          callInvokeWithMethodAndArg
        ) : callInvokeWithMethodAndArg();
    }

    // Define the unified helper method that is used to implement .next,
    // .throw, and .return (see defineIteratorMethods).
    this._invoke = enqueue;
  }

  defineIteratorMethods(AsyncIterator.prototype);
  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {
    return this;
  });
  exports.AsyncIterator = AsyncIterator;

  // Note that simple async functions are implemented on top of
  // AsyncIterator objects; they just return a Promise for the value of
  // the final result produced by the iterator.
  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {
    if (PromiseImpl === void 0) PromiseImpl = Promise;

    var iter = new AsyncIterator(
      wrap(innerFn, outerFn, self, tryLocsList),
      PromiseImpl
    );

    return exports.isGeneratorFunction(outerFn)
      ? iter // If outerFn is a generator, return the full iterator.
      : iter.next().then(function(result) {
          return result.done ? result.value : iter.next();
        });
  };

  function makeInvokeMethod(innerFn, self, context) {
    var state = GenStateSuspendedStart;

    return function invoke(method, arg) {
      if (state === GenStateExecuting) {
        throw new Error("Generator is already running");
      }

      if (state === GenStateCompleted) {
        if (method === "throw") {
          throw arg;
        }

        // Be forgiving, per 25.3.3.3.3 of the spec:
        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
        return doneResult();
      }

      context.method = method;
      context.arg = arg;

      while (true) {
        var delegate = context.delegate;
        if (delegate) {
          var delegateResult = maybeInvokeDelegate(delegate, context);
          if (delegateResult) {
            if (delegateResult === ContinueSentinel) continue;
            return delegateResult;
          }
        }

        if (context.method === "next") {
          // Setting context._sent for legacy support of Babel's
          // function.sent implementation.
          context.sent = context._sent = context.arg;

        } else if (context.method === "throw") {
          if (state === GenStateSuspendedStart) {
            state = GenStateCompleted;
            throw context.arg;
          }

          context.dispatchException(context.arg);

        } else if (context.method === "return") {
          context.abrupt("return", context.arg);
        }

        state = GenStateExecuting;

        var record = tryCatch(innerFn, self, context);
        if (record.type === "normal") {
          // If an exception is thrown from innerFn, we leave state ===
          // GenStateExecuting and loop back for another invocation.
          state = context.done
            ? GenStateCompleted
            : GenStateSuspendedYield;

          if (record.arg === ContinueSentinel) {
            continue;
          }

          return {
            value: record.arg,
            done: context.done
          };

        } else if (record.type === "throw") {
          state = GenStateCompleted;
          // Dispatch the exception by looping back around to the
          // context.dispatchException(context.arg) call above.
          context.method = "throw";
          context.arg = record.arg;
        }
      }
    };
  }

  // Call delegate.iterator[context.method](context.arg) and handle the
  // result, either by returning a { value, done } result from the
  // delegate iterator, or by modifying context.method and context.arg,
  // setting context.delegate to null, and returning the ContinueSentinel.
  function maybeInvokeDelegate(delegate, context) {
    var method = delegate.iterator[context.method];
    if (method === undefined) {
      // A .throw or .return when the delegate iterator has no .throw
      // method always terminates the yield* loop.
      context.delegate = null;

      if (context.method === "throw") {
        // Note: ["return"] must be used for ES3 parsing compatibility.
        if (delegate.iterator["return"]) {
          // If the delegate iterator has a return method, give it a
          // chance to clean up.
          context.method = "return";
          context.arg = undefined;
          maybeInvokeDelegate(delegate, context);

          if (context.method === "throw") {
            // If maybeInvokeDelegate(context) changed context.method from
            // "return" to "throw", let that override the TypeError below.
            return ContinueSentinel;
          }
        }

        context.method = "throw";
        context.arg = new TypeError(
          "The iterator does not provide a 'throw' method");
      }

      return ContinueSentinel;
    }

    var record = tryCatch(method, delegate.iterator, context.arg);

    if (record.type === "throw") {
      context.method = "throw";
      context.arg = record.arg;
      context.delegate = null;
      return ContinueSentinel;
    }

    var info = record.arg;

    if (! info) {
      context.method = "throw";
      context.arg = new TypeError("iterator result is not an object");
      context.delegate = null;
      return ContinueSentinel;
    }

    if (info.done) {
      // Assign the result of the finished delegate to the temporary
      // variable specified by delegate.resultName (see delegateYield).
      context[delegate.resultName] = info.value;

      // Resume execution at the desired location (see delegateYield).
      context.next = delegate.nextLoc;

      // If context.method was "throw" but the delegate handled the
      // exception, let the outer generator proceed normally. If
      // context.method was "next", forget context.arg since it has been
      // "consumed" by the delegate iterator. If context.method was
      // "return", allow the original .return call to continue in the
      // outer generator.
      if (context.method !== "return") {
        context.method = "next";
        context.arg = undefined;
      }

    } else {
      // Re-yield the result returned by the delegate method.
      return info;
    }

    // The delegate iterator is finished, so forget it and continue with
    // the outer generator.
    context.delegate = null;
    return ContinueSentinel;
  }

  // Define Generator.prototype.{next,throw,return} in terms of the
  // unified ._invoke helper method.
  defineIteratorMethods(Gp);

  define(Gp, toStringTagSymbol, "Generator");

  // A Generator should always return itself as the iterator object when the
  // @@iterator function is called on it. Some browsers' implementations of the
  // iterator prototype chain incorrectly implement this, causing the Generator
  // object to not be returned from this call. This ensures that doesn't happen.
  // See https://github.com/facebook/regenerator/issues/274 for more details.
  define(Gp, iteratorSymbol, function() {
    return this;
  });

  define(Gp, "toString", function() {
    return "[object Generator]";
  });

  function pushTryEntry(locs) {
    var entry = { tryLoc: locs[0] };

    if (1 in locs) {
      entry.catchLoc = locs[1];
    }

    if (2 in locs) {
      entry.finallyLoc = locs[2];
      entry.afterLoc = locs[3];
    }

    this.tryEntries.push(entry);
  }

  function resetTryEntry(entry) {
    var record = entry.completion || {};
    record.type = "normal";
    delete record.arg;
    entry.completion = record;
  }

  function Context(tryLocsList) {
    // The root entry object (effectively a try statement without a catch
    // or a finally block) gives us a place to store values thrown from
    // locations where there is no enclosing try statement.
    this.tryEntries = [{ tryLoc: "root" }];
    tryLocsList.forEach(pushTryEntry, this);
    this.reset(true);
  }

  exports.keys = function(object) {
    var keys = [];
    for (var key in object) {
      keys.push(key);
    }
    keys.reverse();

    // Rather than returning an object with a next method, we keep
    // things simple and return the next function itself.
    return function next() {
      while (keys.length) {
        var key = keys.pop();
        if (key in object) {
          next.value = key;
          next.done = false;
          return next;
        }
      }

      // To avoid creating an additional object, we just hang the .value
      // and .done properties off the next function object itself. This
      // also ensures that the minifier will not anonymize the function.
      next.done = true;
      return next;
    };
  };

  function values(iterable) {
    if (iterable) {
      var iteratorMethod = iterable[iteratorSymbol];
      if (iteratorMethod) {
        return iteratorMethod.call(iterable);
      }

      if (typeof iterable.next === "function") {
        return iterable;
      }

      if (!isNaN(iterable.length)) {
        var i = -1, next = function next() {
          while (++i < iterable.length) {
            if (hasOwn.call(iterable, i)) {
              next.value = iterable[i];
              next.done = false;
              return next;
            }
          }

          next.value = undefined;
          next.done = true;

          return next;
        };

        return next.next = next;
      }
    }

    // Return an iterator with no values.
    return { next: doneResult };
  }
  exports.values = values;

  function doneResult() {
    return { value: undefined, done: true };
  }

  Context.prototype = {
    constructor: Context,

    reset: function(skipTempReset) {
      this.prev = 0;
      this.next = 0;
      // Resetting context._sent for legacy support of Babel's
      // function.sent implementation.
      this.sent = this._sent = undefined;
      this.done = false;
      this.delegate = null;

      this.method = "next";
      this.arg = undefined;

      this.tryEntries.forEach(resetTryEntry);

      if (!skipTempReset) {
        for (var name in this) {
          // Not sure about the optimal order of these conditions:
          if (name.charAt(0) === "t" &&
              hasOwn.call(this, name) &&
              !isNaN(+name.slice(1))) {
            this[name] = undefined;
          }
        }
      }
    },

    stop: function() {
      this.done = true;

      var rootEntry = this.tryEntries[0];
      var rootRecord = rootEntry.completion;
      if (rootRecord.type === "throw") {
        throw rootRecord.arg;
      }

      return this.rval;
    },

    dispatchException: function(exception) {
      if (this.done) {
        throw exception;
      }

      var context = this;
      function handle(loc, caught) {
        record.type = "throw";
        record.arg = exception;
        context.next = loc;

        if (caught) {
          // If the dispatched exception was caught by a catch block,
          // then let that catch block handle the exception normally.
          context.method = "next";
          context.arg = undefined;
        }

        return !! caught;
      }

      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        var record = entry.completion;

        if (entry.tryLoc === "root") {
          // Exception thrown outside of any try block that could handle
          // it, so set the completion value of the entire function to
          // throw the exception.
          return handle("end");
        }

        if (entry.tryLoc <= this.prev) {
          var hasCatch = hasOwn.call(entry, "catchLoc");
          var hasFinally = hasOwn.call(entry, "finallyLoc");

          if (hasCatch && hasFinally) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            } else if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else if (hasCatch) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            }

          } else if (hasFinally) {
            if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else {
            throw new Error("try statement without catch or finally");
          }
        }
      }
    },

    abrupt: function(type, arg) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc <= this.prev &&
            hasOwn.call(entry, "finallyLoc") &&
            this.prev < entry.finallyLoc) {
          var finallyEntry = entry;
          break;
        }
      }

      if (finallyEntry &&
          (type === "break" ||
           type === "continue") &&
          finallyEntry.tryLoc <= arg &&
          arg <= finallyEntry.finallyLoc) {
        // Ignore the finally entry if control is not jumping to a
        // location outside the try/catch block.
        finallyEntry = null;
      }

      var record = finallyEntry ? finallyEntry.completion : {};
      record.type = type;
      record.arg = arg;

      if (finallyEntry) {
        this.method = "next";
        this.next = finallyEntry.finallyLoc;
        return ContinueSentinel;
      }

      return this.complete(record);
    },

    complete: function(record, afterLoc) {
      if (record.type === "throw") {
        throw record.arg;
      }

      if (record.type === "break" ||
          record.type === "continue") {
        this.next = record.arg;
      } else if (record.type === "return") {
        this.rval = this.arg = record.arg;
        this.method = "return";
        this.next = "end";
      } else if (record.type === "normal" && afterLoc) {
        this.next = afterLoc;
      }

      return ContinueSentinel;
    },

    finish: function(finallyLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.finallyLoc === finallyLoc) {
          this.complete(entry.completion, entry.afterLoc);
          resetTryEntry(entry);
          return ContinueSentinel;
        }
      }
    },

    "catch": function(tryLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc === tryLoc) {
          var record = entry.completion;
          if (record.type === "throw") {
            var thrown = record.arg;
            resetTryEntry(entry);
          }
          return thrown;
        }
      }

      // The context.catch method must only be called with a location
      // argument that corresponds to a known catch block.
      throw new Error("illegal catch attempt");
    },

    delegateYield: function(iterable, resultName, nextLoc) {
      this.delegate = {
        iterator: values(iterable),
        resultName: resultName,
        nextLoc: nextLoc
      };

      if (this.method === "next") {
        // Deliberately forget the last sent value so that we don't
        // accidentally pass it on to the delegate.
        this.arg = undefined;
      }

      return ContinueSentinel;
    }
  };

  // Regardless of whether this script is executing as a CommonJS module
  // or not, return the runtime object so that we can declare the variable
  // regeneratorRuntime in the outer scope, which allows this module to be
  // injected easily by `bin/regenerator --include-runtime script.js`.
  return exports;

}(
  // If this script is executing as a CommonJS module, use module.exports
  // as the regeneratorRuntime namespace. Otherwise create a new empty
  // object. Either way, the resulting object will be used to initialize
  // the regeneratorRuntime variable at the top of this file.
   true ? module.exports : undefined
));

try {
  regeneratorRuntime = runtime;
} catch (accidentalStrictMode) {
  // This module should not be running in strict mode, so the above
  // assignment should always work unless something is misconfigured. Just
  // in case runtime.js accidentally runs in strict mode, in modern engines
  // we can explicitly access globalThis. In older engines we can escape
  // strict mode using a global Function call. This could conceivably fail
  // if a Content Security Policy forbids using Function, but in that case
  // the proper solution is to fix the accidental strict mode problem. If
  // you've misconfigured your bundler to force strict mode and applied a
  // CSP to forbid Function, and you're not willing to fix either of those
  // problems, please detail your unique predicament in a GitHub issue.
  if (typeof globalThis === "object") {
    globalThis.regeneratorRuntime = runtime;
  } else {
    Function("r", "regeneratorRuntime = r")(runtime);
  }
}


/***/ }),

/***/ "../node_modules/seedrandom/index.js":
/*!*******************************************!*\
  !*** ../node_modules/seedrandom/index.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// A library of seedable RNGs implemented in Javascript.
//
// Usage:
//
// var seedrandom = require('seedrandom');
// var random = seedrandom(1); // or any seed.
// var x = random();       // 0 <= x < 1.  Every bit is random.
// var x = random.quick(); // 0 <= x < 1.  32 bits of randomness.

// alea, a 53-bit multiply-with-carry generator by Johannes Baagøe.
// Period: ~2^116
// Reported to pass all BigCrush tests.
var alea = __webpack_require__(/*! ./lib/alea */ "../node_modules/seedrandom/lib/alea.js");

// xor128, a pure xor-shift generator by George Marsaglia.
// Period: 2^128-1.
// Reported to fail: MatrixRank and LinearComp.
var xor128 = __webpack_require__(/*! ./lib/xor128 */ "../node_modules/seedrandom/lib/xor128.js");

// xorwow, George Marsaglia's 160-bit xor-shift combined plus weyl.
// Period: 2^192-2^32
// Reported to fail: CollisionOver, SimpPoker, and LinearComp.
var xorwow = __webpack_require__(/*! ./lib/xorwow */ "../node_modules/seedrandom/lib/xorwow.js");

// xorshift7, by François Panneton and Pierre L'ecuyer, takes
// a different approach: it adds robustness by allowing more shifts
// than Marsaglia's original three.  It is a 7-shift generator
// with 256 bits, that passes BigCrush with no systmatic failures.
// Period 2^256-1.
// No systematic BigCrush failures reported.
var xorshift7 = __webpack_require__(/*! ./lib/xorshift7 */ "../node_modules/seedrandom/lib/xorshift7.js");

// xor4096, by Richard Brent, is a 4096-bit xor-shift with a
// very long period that also adds a Weyl generator. It also passes
// BigCrush with no systematic failures.  Its long period may
// be useful if you have many generators and need to avoid
// collisions.
// Period: 2^4128-2^32.
// No systematic BigCrush failures reported.
var xor4096 = __webpack_require__(/*! ./lib/xor4096 */ "../node_modules/seedrandom/lib/xor4096.js");

// Tyche-i, by Samuel Neves and Filipe Araujo, is a bit-shifting random
// number generator derived from ChaCha, a modern stream cipher.
// https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf
// Period: ~2^127
// No systematic BigCrush failures reported.
var tychei = __webpack_require__(/*! ./lib/tychei */ "../node_modules/seedrandom/lib/tychei.js");

// The original ARC4-based prng included in this library.
// Period: ~2^1600
var sr = __webpack_require__(/*! ./seedrandom */ "../node_modules/seedrandom/seedrandom.js");

sr.alea = alea;
sr.xor128 = xor128;
sr.xorwow = xorwow;
sr.xorshift7 = xorshift7;
sr.xor4096 = xor4096;
sr.tychei = tychei;

module.exports = sr;


/***/ }),

/***/ "../node_modules/seedrandom/lib/alea.js":
/*!**********************************************!*\
  !*** ../node_modules/seedrandom/lib/alea.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {var __WEBPACK_AMD_DEFINE_RESULT__;// A port of an algorithm by Johannes Baagøe <baagoe@baagoe.com>, 2010
// http://baagoe.com/en/RandomMusings/javascript/
// https://github.com/nquinlan/better-random-numbers-for-javascript-mirror
// Original work is under MIT license -

// Copyright (C) 2010 by Johannes Baagøe <baagoe@baagoe.org>
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.



(function(global, module, define) {

function Alea(seed) {
  var me = this, mash = Mash();

  me.next = function() {
    var t = 2091639 * me.s0 + me.c * 2.3283064365386963e-10; // 2^-32
    me.s0 = me.s1;
    me.s1 = me.s2;
    return me.s2 = t - (me.c = t | 0);
  };

  // Apply the seeding algorithm from Baagoe.
  me.c = 1;
  me.s0 = mash(' ');
  me.s1 = mash(' ');
  me.s2 = mash(' ');
  me.s0 -= mash(seed);
  if (me.s0 < 0) { me.s0 += 1; }
  me.s1 -= mash(seed);
  if (me.s1 < 0) { me.s1 += 1; }
  me.s2 -= mash(seed);
  if (me.s2 < 0) { me.s2 += 1; }
  mash = null;
}

function copy(f, t) {
  t.c = f.c;
  t.s0 = f.s0;
  t.s1 = f.s1;
  t.s2 = f.s2;
  return t;
}

function impl(seed, opts) {
  var xg = new Alea(seed),
      state = opts && opts.state,
      prng = xg.next;
  prng.int32 = function() { return (xg.next() * 0x100000000) | 0; }
  prng.double = function() {
    return prng() + (prng() * 0x200000 | 0) * 1.1102230246251565e-16; // 2^-53
  };
  prng.quick = prng;
  if (state) {
    if (typeof(state) == 'object') copy(state, xg);
    prng.state = function() { return copy(xg, {}); }
  }
  return prng;
}

function Mash() {
  var n = 0xefc8249d;

  var mash = function(data) {
    data = String(data);
    for (var i = 0; i < data.length; i++) {
      n += data.charCodeAt(i);
      var h = 0.02519603282416938 * n;
      n = h >>> 0;
      h -= n;
      h *= n;
      n = h >>> 0;
      h -= n;
      n += h * 0x100000000; // 2^32
    }
    return (n >>> 0) * 2.3283064365386963e-10; // 2^-32
  };

  return mash;
}


if (module && module.exports) {
  module.exports = impl;
} else if (__webpack_require__(/*! !webpack amd define */ "./node_modules/webpack/buildin/amd-define.js") && __webpack_require__(/*! !webpack amd options */ "./node_modules/webpack/buildin/amd-options.js")) {
  !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() { return impl; }).call(exports, __webpack_require__, exports, module),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
} else {
  this.alea = impl;
}

})(
  this,
   true && module,    // present in node.js
  __webpack_require__(/*! !webpack amd define */ "./node_modules/webpack/buildin/amd-define.js")   // present with an AMD loader
);



/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../dash-vtk/node_modules/webpack/buildin/module.js */ "./node_modules/webpack/buildin/module.js")(module)))

/***/ }),

/***/ "../node_modules/seedrandom/lib/tychei.js":
/*!************************************************!*\
  !*** ../node_modules/seedrandom/lib/tychei.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {var __WEBPACK_AMD_DEFINE_RESULT__;// A Javascript implementaion of the "Tyche-i" prng algorithm by
// Samuel Neves and Filipe Araujo.
// See https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf

(function(global, module, define) {

function XorGen(seed) {
  var me = this, strseed = '';

  // Set up generator function.
  me.next = function() {
    var b = me.b, c = me.c, d = me.d, a = me.a;
    b = (b << 25) ^ (b >>> 7) ^ c;
    c = (c - d) | 0;
    d = (d << 24) ^ (d >>> 8) ^ a;
    a = (a - b) | 0;
    me.b = b = (b << 20) ^ (b >>> 12) ^ c;
    me.c = c = (c - d) | 0;
    me.d = (d << 16) ^ (c >>> 16) ^ a;
    return me.a = (a - b) | 0;
  };

  /* The following is non-inverted tyche, which has better internal
   * bit diffusion, but which is about 25% slower than tyche-i in JS.
  me.next = function() {
    var a = me.a, b = me.b, c = me.c, d = me.d;
    a = (me.a + me.b | 0) >>> 0;
    d = me.d ^ a; d = d << 16 ^ d >>> 16;
    c = me.c + d | 0;
    b = me.b ^ c; b = b << 12 ^ d >>> 20;
    me.a = a = a + b | 0;
    d = d ^ a; me.d = d = d << 8 ^ d >>> 24;
    me.c = c = c + d | 0;
    b = b ^ c;
    return me.b = (b << 7 ^ b >>> 25);
  }
  */

  me.a = 0;
  me.b = 0;
  me.c = 2654435769 | 0;
  me.d = 1367130551;

  if (seed === Math.floor(seed)) {
    // Integer seed.
    me.a = (seed / 0x100000000) | 0;
    me.b = seed | 0;
  } else {
    // String seed.
    strseed += seed;
  }

  // Mix in string seed, then discard an initial batch of 64 values.
  for (var k = 0; k < strseed.length + 20; k++) {
    me.b ^= strseed.charCodeAt(k) | 0;
    me.next();
  }
}

function copy(f, t) {
  t.a = f.a;
  t.b = f.b;
  t.c = f.c;
  t.d = f.d;
  return t;
};

function impl(seed, opts) {
  var xg = new XorGen(seed),
      state = opts && opts.state,
      prng = function() { return (xg.next() >>> 0) / 0x100000000; };
  prng.double = function() {
    do {
      var top = xg.next() >>> 11,
          bot = (xg.next() >>> 0) / 0x100000000,
          result = (top + bot) / (1 << 21);
    } while (result === 0);
    return result;
  };
  prng.int32 = xg.next;
  prng.quick = prng;
  if (state) {
    if (typeof(state) == 'object') copy(state, xg);
    prng.state = function() { return copy(xg, {}); }
  }
  return prng;
}

if (module && module.exports) {
  module.exports = impl;
} else if (__webpack_require__(/*! !webpack amd define */ "./node_modules/webpack/buildin/amd-define.js") && __webpack_require__(/*! !webpack amd options */ "./node_modules/webpack/buildin/amd-options.js")) {
  !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() { return impl; }).call(exports, __webpack_require__, exports, module),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
} else {
  this.tychei = impl;
}

})(
  this,
   true && module,    // present in node.js
  __webpack_require__(/*! !webpack amd define */ "./node_modules/webpack/buildin/amd-define.js")   // present with an AMD loader
);



/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../dash-vtk/node_modules/webpack/buildin/module.js */ "./node_modules/webpack/buildin/module.js")(module)))

/***/ }),

/***/ "../node_modules/seedrandom/lib/xor128.js":
/*!************************************************!*\
  !*** ../node_modules/seedrandom/lib/xor128.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {var __WEBPACK_AMD_DEFINE_RESULT__;// A Javascript implementaion of the "xor128" prng algorithm by
// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper

(function(global, module, define) {

function XorGen(seed) {
  var me = this, strseed = '';

  me.x = 0;
  me.y = 0;
  me.z = 0;
  me.w = 0;

  // Set up generator function.
  me.next = function() {
    var t = me.x ^ (me.x << 11);
    me.x = me.y;
    me.y = me.z;
    me.z = me.w;
    return me.w ^= (me.w >>> 19) ^ t ^ (t >>> 8);
  };

  if (seed === (seed | 0)) {
    // Integer seed.
    me.x = seed;
  } else {
    // String seed.
    strseed += seed;
  }

  // Mix in string seed, then discard an initial batch of 64 values.
  for (var k = 0; k < strseed.length + 64; k++) {
    me.x ^= strseed.charCodeAt(k) | 0;
    me.next();
  }
}

function copy(f, t) {
  t.x = f.x;
  t.y = f.y;
  t.z = f.z;
  t.w = f.w;
  return t;
}

function impl(seed, opts) {
  var xg = new XorGen(seed),
      state = opts && opts.state,
      prng = function() { return (xg.next() >>> 0) / 0x100000000; };
  prng.double = function() {
    do {
      var top = xg.next() >>> 11,
          bot = (xg.next() >>> 0) / 0x100000000,
          result = (top + bot) / (1 << 21);
    } while (result === 0);
    return result;
  };
  prng.int32 = xg.next;
  prng.quick = prng;
  if (state) {
    if (typeof(state) == 'object') copy(state, xg);
    prng.state = function() { return copy(xg, {}); }
  }
  return prng;
}

if (module && module.exports) {
  module.exports = impl;
} else if (__webpack_require__(/*! !webpack amd define */ "./node_modules/webpack/buildin/amd-define.js") && __webpack_require__(/*! !webpack amd options */ "./node_modules/webpack/buildin/amd-options.js")) {
  !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() { return impl; }).call(exports, __webpack_require__, exports, module),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
} else {
  this.xor128 = impl;
}

})(
  this,
   true && module,    // present in node.js
  __webpack_require__(/*! !webpack amd define */ "./node_modules/webpack/buildin/amd-define.js")   // present with an AMD loader
);



/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../dash-vtk/node_modules/webpack/buildin/module.js */ "./node_modules/webpack/buildin/module.js")(module)))

/***/ }),

/***/ "../node_modules/seedrandom/lib/xor4096.js":
/*!*************************************************!*\
  !*** ../node_modules/seedrandom/lib/xor4096.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {var __WEBPACK_AMD_DEFINE_RESULT__;// A Javascript implementaion of Richard Brent's Xorgens xor4096 algorithm.
//
// This fast non-cryptographic random number generator is designed for
// use in Monte-Carlo algorithms. It combines a long-period xorshift
// generator with a Weyl generator, and it passes all common batteries
// of stasticial tests for randomness while consuming only a few nanoseconds
// for each prng generated.  For background on the generator, see Brent's
// paper: "Some long-period random number generators using shifts and xors."
// http://arxiv.org/pdf/1004.3115v1.pdf
//
// Usage:
//
// var xor4096 = require('xor4096');
// random = xor4096(1);                        // Seed with int32 or string.
// assert.equal(random(), 0.1520436450538547); // (0, 1) range, 53 bits.
// assert.equal(random.int32(), 1806534897);   // signed int32, 32 bits.
//
// For nonzero numeric keys, this impelementation provides a sequence
// identical to that by Brent's xorgens 3 implementaion in C.  This
// implementation also provides for initalizing the generator with
// string seeds, or for saving and restoring the state of the generator.
//
// On Chrome, this prng benchmarks about 2.1 times slower than
// Javascript's built-in Math.random().

(function(global, module, define) {

function XorGen(seed) {
  var me = this;

  // Set up generator function.
  me.next = function() {
    var w = me.w,
        X = me.X, i = me.i, t, v;
    // Update Weyl generator.
    me.w = w = (w + 0x61c88647) | 0;
    // Update xor generator.
    v = X[(i + 34) & 127];
    t = X[i = ((i + 1) & 127)];
    v ^= v << 13;
    t ^= t << 17;
    v ^= v >>> 15;
    t ^= t >>> 12;
    // Update Xor generator array state.
    v = X[i] = v ^ t;
    me.i = i;
    // Result is the combination.
    return (v + (w ^ (w >>> 16))) | 0;
  };

  function init(me, seed) {
    var t, v, i, j, w, X = [], limit = 128;
    if (seed === (seed | 0)) {
      // Numeric seeds initialize v, which is used to generates X.
      v = seed;
      seed = null;
    } else {
      // String seeds are mixed into v and X one character at a time.
      seed = seed + '\0';
      v = 0;
      limit = Math.max(limit, seed.length);
    }
    // Initialize circular array and weyl value.
    for (i = 0, j = -32; j < limit; ++j) {
      // Put the unicode characters into the array, and shuffle them.
      if (seed) v ^= seed.charCodeAt((j + 32) % seed.length);
      // After 32 shuffles, take v as the starting w value.
      if (j === 0) w = v;
      v ^= v << 10;
      v ^= v >>> 15;
      v ^= v << 4;
      v ^= v >>> 13;
      if (j >= 0) {
        w = (w + 0x61c88647) | 0;     // Weyl.
        t = (X[j & 127] ^= (v + w));  // Combine xor and weyl to init array.
        i = (0 == t) ? i + 1 : 0;     // Count zeroes.
      }
    }
    // We have detected all zeroes; make the key nonzero.
    if (i >= 128) {
      X[(seed && seed.length || 0) & 127] = -1;
    }
    // Run the generator 512 times to further mix the state before using it.
    // Factoring this as a function slows the main generator, so it is just
    // unrolled here.  The weyl generator is not advanced while warming up.
    i = 127;
    for (j = 4 * 128; j > 0; --j) {
      v = X[(i + 34) & 127];
      t = X[i = ((i + 1) & 127)];
      v ^= v << 13;
      t ^= t << 17;
      v ^= v >>> 15;
      t ^= t >>> 12;
      X[i] = v ^ t;
    }
    // Storing state as object members is faster than using closure variables.
    me.w = w;
    me.X = X;
    me.i = i;
  }

  init(me, seed);
}

function copy(f, t) {
  t.i = f.i;
  t.w = f.w;
  t.X = f.X.slice();
  return t;
};

function impl(seed, opts) {
  if (seed == null) seed = +(new Date);
  var xg = new XorGen(seed),
      state = opts && opts.state,
      prng = function() { return (xg.next() >>> 0) / 0x100000000; };
  prng.double = function() {
    do {
      var top = xg.next() >>> 11,
          bot = (xg.next() >>> 0) / 0x100000000,
          result = (top + bot) / (1 << 21);
    } while (result === 0);
    return result;
  };
  prng.int32 = xg.next;
  prng.quick = prng;
  if (state) {
    if (state.X) copy(state, xg);
    prng.state = function() { return copy(xg, {}); }
  }
  return prng;
}

if (module && module.exports) {
  module.exports = impl;
} else if (__webpack_require__(/*! !webpack amd define */ "./node_modules/webpack/buildin/amd-define.js") && __webpack_require__(/*! !webpack amd options */ "./node_modules/webpack/buildin/amd-options.js")) {
  !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() { return impl; }).call(exports, __webpack_require__, exports, module),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
} else {
  this.xor4096 = impl;
}

})(
  this,                                     // window object or global
   true && module,    // present in node.js
  __webpack_require__(/*! !webpack amd define */ "./node_modules/webpack/buildin/amd-define.js")   // present with an AMD loader
);

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../dash-vtk/node_modules/webpack/buildin/module.js */ "./node_modules/webpack/buildin/module.js")(module)))

/***/ }),

/***/ "../node_modules/seedrandom/lib/xorshift7.js":
/*!***************************************************!*\
  !*** ../node_modules/seedrandom/lib/xorshift7.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {var __WEBPACK_AMD_DEFINE_RESULT__;// A Javascript implementaion of the "xorshift7" algorithm by
// François Panneton and Pierre L'ecuyer:
// "On the Xorgshift Random Number Generators"
// http://saluc.engr.uconn.edu/refs/crypto/rng/panneton05onthexorshift.pdf

(function(global, module, define) {

function XorGen(seed) {
  var me = this;

  // Set up generator function.
  me.next = function() {
    // Update xor generator.
    var X = me.x, i = me.i, t, v, w;
    t = X[i]; t ^= (t >>> 7); v = t ^ (t << 24);
    t = X[(i + 1) & 7]; v ^= t ^ (t >>> 10);
    t = X[(i + 3) & 7]; v ^= t ^ (t >>> 3);
    t = X[(i + 4) & 7]; v ^= t ^ (t << 7);
    t = X[(i + 7) & 7]; t = t ^ (t << 13); v ^= t ^ (t << 9);
    X[i] = v;
    me.i = (i + 1) & 7;
    return v;
  };

  function init(me, seed) {
    var j, w, X = [];

    if (seed === (seed | 0)) {
      // Seed state array using a 32-bit integer.
      w = X[0] = seed;
    } else {
      // Seed state using a string.
      seed = '' + seed;
      for (j = 0; j < seed.length; ++j) {
        X[j & 7] = (X[j & 7] << 15) ^
            (seed.charCodeAt(j) + X[(j + 1) & 7] << 13);
      }
    }
    // Enforce an array length of 8, not all zeroes.
    while (X.length < 8) X.push(0);
    for (j = 0; j < 8 && X[j] === 0; ++j);
    if (j == 8) w = X[7] = -1; else w = X[j];

    me.x = X;
    me.i = 0;

    // Discard an initial 256 values.
    for (j = 256; j > 0; --j) {
      me.next();
    }
  }

  init(me, seed);
}

function copy(f, t) {
  t.x = f.x.slice();
  t.i = f.i;
  return t;
}

function impl(seed, opts) {
  if (seed == null) seed = +(new Date);
  var xg = new XorGen(seed),
      state = opts && opts.state,
      prng = function() { return (xg.next() >>> 0) / 0x100000000; };
  prng.double = function() {
    do {
      var top = xg.next() >>> 11,
          bot = (xg.next() >>> 0) / 0x100000000,
          result = (top + bot) / (1 << 21);
    } while (result === 0);
    return result;
  };
  prng.int32 = xg.next;
  prng.quick = prng;
  if (state) {
    if (state.x) copy(state, xg);
    prng.state = function() { return copy(xg, {}); }
  }
  return prng;
}

if (module && module.exports) {
  module.exports = impl;
} else if (__webpack_require__(/*! !webpack amd define */ "./node_modules/webpack/buildin/amd-define.js") && __webpack_require__(/*! !webpack amd options */ "./node_modules/webpack/buildin/amd-options.js")) {
  !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() { return impl; }).call(exports, __webpack_require__, exports, module),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
} else {
  this.xorshift7 = impl;
}

})(
  this,
   true && module,    // present in node.js
  __webpack_require__(/*! !webpack amd define */ "./node_modules/webpack/buildin/amd-define.js")   // present with an AMD loader
);


/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../dash-vtk/node_modules/webpack/buildin/module.js */ "./node_modules/webpack/buildin/module.js")(module)))

/***/ }),

/***/ "../node_modules/seedrandom/lib/xorwow.js":
/*!************************************************!*\
  !*** ../node_modules/seedrandom/lib/xorwow.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {var __WEBPACK_AMD_DEFINE_RESULT__;// A Javascript implementaion of the "xorwow" prng algorithm by
// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper

(function(global, module, define) {

function XorGen(seed) {
  var me = this, strseed = '';

  // Set up generator function.
  me.next = function() {
    var t = (me.x ^ (me.x >>> 2));
    me.x = me.y; me.y = me.z; me.z = me.w; me.w = me.v;
    return (me.d = (me.d + 362437 | 0)) +
       (me.v = (me.v ^ (me.v << 4)) ^ (t ^ (t << 1))) | 0;
  };

  me.x = 0;
  me.y = 0;
  me.z = 0;
  me.w = 0;
  me.v = 0;

  if (seed === (seed | 0)) {
    // Integer seed.
    me.x = seed;
  } else {
    // String seed.
    strseed += seed;
  }

  // Mix in string seed, then discard an initial batch of 64 values.
  for (var k = 0; k < strseed.length + 64; k++) {
    me.x ^= strseed.charCodeAt(k) | 0;
    if (k == strseed.length) {
      me.d = me.x << 10 ^ me.x >>> 4;
    }
    me.next();
  }
}

function copy(f, t) {
  t.x = f.x;
  t.y = f.y;
  t.z = f.z;
  t.w = f.w;
  t.v = f.v;
  t.d = f.d;
  return t;
}

function impl(seed, opts) {
  var xg = new XorGen(seed),
      state = opts && opts.state,
      prng = function() { return (xg.next() >>> 0) / 0x100000000; };
  prng.double = function() {
    do {
      var top = xg.next() >>> 11,
          bot = (xg.next() >>> 0) / 0x100000000,
          result = (top + bot) / (1 << 21);
    } while (result === 0);
    return result;
  };
  prng.int32 = xg.next;
  prng.quick = prng;
  if (state) {
    if (typeof(state) == 'object') copy(state, xg);
    prng.state = function() { return copy(xg, {}); }
  }
  return prng;
}

if (module && module.exports) {
  module.exports = impl;
} else if (__webpack_require__(/*! !webpack amd define */ "./node_modules/webpack/buildin/amd-define.js") && __webpack_require__(/*! !webpack amd options */ "./node_modules/webpack/buildin/amd-options.js")) {
  !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() { return impl; }).call(exports, __webpack_require__, exports, module),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
} else {
  this.xorwow = impl;
}

})(
  this,
   true && module,    // present in node.js
  __webpack_require__(/*! !webpack amd define */ "./node_modules/webpack/buildin/amd-define.js")   // present with an AMD loader
);



/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../dash-vtk/node_modules/webpack/buildin/module.js */ "./node_modules/webpack/buildin/module.js")(module)))

/***/ }),

/***/ "../node_modules/seedrandom/seedrandom.js":
/*!************************************************!*\
  !*** ../node_modules/seedrandom/seedrandom.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_RESULT__;/*
Copyright 2019 David Bau.

Permission is hereby granted, free of charge, to any person obtaining
a copy of this software and associated documentation files (the
"Software"), to deal in the Software without restriction, including
without limitation the rights to use, copy, modify, merge, publish,
distribute, sublicense, and/or sell copies of the Software, and to
permit persons to whom the Software is furnished to do so, subject to
the following conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

*/

(function (global, pool, math) {
//
// The following constants are related to IEEE 754 limits.
//

var width = 256,        // each RC4 output is 0 <= x < 256
    chunks = 6,         // at least six RC4 outputs for each double
    digits = 52,        // there are 52 significant digits in a double
    rngname = 'random', // rngname: name for Math.random and Math.seedrandom
    startdenom = math.pow(width, chunks),
    significance = math.pow(2, digits),
    overflow = significance * 2,
    mask = width - 1,
    nodecrypto;         // node.js crypto module, initialized at the bottom.

//
// seedrandom()
// This is the seedrandom function described above.
//
function seedrandom(seed, options, callback) {
  var key = [];
  options = (options == true) ? { entropy: true } : (options || {});

  // Flatten the seed string or build one from local entropy if needed.
  var shortseed = mixkey(flatten(
    options.entropy ? [seed, tostring(pool)] :
    (seed == null) ? autoseed() : seed, 3), key);

  // Use the seed to initialize an ARC4 generator.
  var arc4 = new ARC4(key);

  // This function returns a random double in [0, 1) that contains
  // randomness in every bit of the mantissa of the IEEE 754 value.
  var prng = function() {
    var n = arc4.g(chunks),             // Start with a numerator n < 2 ^ 48
        d = startdenom,                 //   and denominator d = 2 ^ 48.
        x = 0;                          //   and no 'extra last byte'.
    while (n < significance) {          // Fill up all significant digits by
      n = (n + x) * width;              //   shifting numerator and
      d *= width;                       //   denominator and generating a
      x = arc4.g(1);                    //   new least-significant-byte.
    }
    while (n >= overflow) {             // To avoid rounding up, before adding
      n /= 2;                           //   last byte, shift everything
      d /= 2;                           //   right using integer math until
      x >>>= 1;                         //   we have exactly the desired bits.
    }
    return (n + x) / d;                 // Form the number within [0, 1).
  };

  prng.int32 = function() { return arc4.g(4) | 0; }
  prng.quick = function() { return arc4.g(4) / 0x100000000; }
  prng.double = prng;

  // Mix the randomness into accumulated entropy.
  mixkey(tostring(arc4.S), pool);

  // Calling convention: what to return as a function of prng, seed, is_math.
  return (options.pass || callback ||
      function(prng, seed, is_math_call, state) {
        if (state) {
          // Load the arc4 state from the given state if it has an S array.
          if (state.S) { copy(state, arc4); }
          // Only provide the .state method if requested via options.state.
          prng.state = function() { return copy(arc4, {}); }
        }

        // If called as a method of Math (Math.seedrandom()), mutate
        // Math.random because that is how seedrandom.js has worked since v1.0.
        if (is_math_call) { math[rngname] = prng; return seed; }

        // Otherwise, it is a newer calling convention, so return the
        // prng directly.
        else return prng;
      })(
  prng,
  shortseed,
  'global' in options ? options.global : (this == math),
  options.state);
}

//
// ARC4
//
// An ARC4 implementation.  The constructor takes a key in the form of
// an array of at most (width) integers that should be 0 <= x < (width).
//
// The g(count) method returns a pseudorandom integer that concatenates
// the next (count) outputs from ARC4.  Its return value is a number x
// that is in the range 0 <= x < (width ^ count).
//
function ARC4(key) {
  var t, keylen = key.length,
      me = this, i = 0, j = me.i = me.j = 0, s = me.S = [];

  // The empty key [] is treated as [0].
  if (!keylen) { key = [keylen++]; }

  // Set up S using the standard key scheduling algorithm.
  while (i < width) {
    s[i] = i++;
  }
  for (i = 0; i < width; i++) {
    s[i] = s[j = mask & (j + key[i % keylen] + (t = s[i]))];
    s[j] = t;
  }

  // The "g" method returns the next (count) outputs as one number.
  (me.g = function(count) {
    // Using instance members instead of closure state nearly doubles speed.
    var t, r = 0,
        i = me.i, j = me.j, s = me.S;
    while (count--) {
      t = s[i = mask & (i + 1)];
      r = r * width + s[mask & ((s[i] = s[j = mask & (j + t)]) + (s[j] = t))];
    }
    me.i = i; me.j = j;
    return r;
    // For robust unpredictability, the function call below automatically
    // discards an initial batch of values.  This is called RC4-drop[256].
    // See http://google.com/search?q=rsa+fluhrer+response&btnI
  })(width);
}

//
// copy()
// Copies internal state of ARC4 to or from a plain object.
//
function copy(f, t) {
  t.i = f.i;
  t.j = f.j;
  t.S = f.S.slice();
  return t;
};

//
// flatten()
// Converts an object tree to nested arrays of strings.
//
function flatten(obj, depth) {
  var result = [], typ = (typeof obj), prop;
  if (depth && typ == 'object') {
    for (prop in obj) {
      try { result.push(flatten(obj[prop], depth - 1)); } catch (e) {}
    }
  }
  return (result.length ? result : typ == 'string' ? obj : obj + '\0');
}

//
// mixkey()
// Mixes a string seed into a key that is an array of integers, and
// returns a shortened string seed that is equivalent to the result key.
//
function mixkey(seed, key) {
  var stringseed = seed + '', smear, j = 0;
  while (j < stringseed.length) {
    key[mask & j] =
      mask & ((smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++));
  }
  return tostring(key);
}

//
// autoseed()
// Returns an object for autoseeding, using window.crypto and Node crypto
// module if available.
//
function autoseed() {
  try {
    var out;
    if (nodecrypto && (out = nodecrypto.randomBytes)) {
      // The use of 'out' to remember randomBytes makes tight minified code.
      out = out(width);
    } else {
      out = new Uint8Array(width);
      (global.crypto || global.msCrypto).getRandomValues(out);
    }
    return tostring(out);
  } catch (e) {
    var browser = global.navigator,
        plugins = browser && browser.plugins;
    return [+new Date, global, plugins, global.screen, tostring(pool)];
  }
}

//
// tostring()
// Converts an array of charcodes to a string
//
function tostring(a) {
  return String.fromCharCode.apply(0, a);
}

//
// When seedrandom.js is loaded, we immediately mix a few bits
// from the built-in RNG into the entropy pool.  Because we do
// not want to interfere with deterministic PRNG state later,
// seedrandom will not call math.random on its own again after
// initialization.
//
mixkey(math.random(), pool);

//
// Nodejs and AMD support: export the implementation as a module using
// either convention.
//
if ( true && module.exports) {
  module.exports = seedrandom;
  // When in node.js, try using crypto package for autoseeding.
  try {
    nodecrypto = __webpack_require__(/*! crypto */ 0);
  } catch (ex) {}
} else if (true) {
  !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() { return seedrandom; }).call(exports, __webpack_require__, exports, module),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
} else {}


// End anonymous scope, and pass initial values.
})(
  // global: `self` in browsers (including strict mode and web workers),
  // otherwise `this` in Node and other environments
  (typeof self !== 'undefined') ? self : this,
  [],     // pool: entropy pool starts empty
  Math    // math: package containing random, pow, and seedrandom
);


/***/ }),

/***/ "../node_modules/spark-md5/spark-md5.js":
/*!**********************************************!*\
  !*** ../node_modules/spark-md5/spark-md5.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

(function (factory) {
    if (true) {
        // Node/CommonJS
        module.exports = factory();
    } else { var glob; }
}(function (undefined) {

    'use strict';

    /*
     * Fastest md5 implementation around (JKM md5).
     * Credits: Joseph Myers
     *
     * @see http://www.myersdaily.org/joseph/javascript/md5-text.html
     * @see http://jsperf.com/md5-shootout/7
     */

    /* this function is much faster,
      so if possible we use it. Some IEs
      are the only ones I know of that
      need the idiotic second function,
      generated by an if clause.  */
    var add32 = function (a, b) {
        return (a + b) & 0xFFFFFFFF;
    },
        hex_chr = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];


    function cmn(q, a, b, x, s, t) {
        a = add32(add32(a, q), add32(x, t));
        return add32((a << s) | (a >>> (32 - s)), b);
    }

    function md5cycle(x, k) {
        var a = x[0],
            b = x[1],
            c = x[2],
            d = x[3];

        a += (b & c | ~b & d) + k[0] - 680876936 | 0;
        a  = (a << 7 | a >>> 25) + b | 0;
        d += (a & b | ~a & c) + k[1] - 389564586 | 0;
        d  = (d << 12 | d >>> 20) + a | 0;
        c += (d & a | ~d & b) + k[2] + 606105819 | 0;
        c  = (c << 17 | c >>> 15) + d | 0;
        b += (c & d | ~c & a) + k[3] - 1044525330 | 0;
        b  = (b << 22 | b >>> 10) + c | 0;
        a += (b & c | ~b & d) + k[4] - 176418897 | 0;
        a  = (a << 7 | a >>> 25) + b | 0;
        d += (a & b | ~a & c) + k[5] + 1200080426 | 0;
        d  = (d << 12 | d >>> 20) + a | 0;
        c += (d & a | ~d & b) + k[6] - 1473231341 | 0;
        c  = (c << 17 | c >>> 15) + d | 0;
        b += (c & d | ~c & a) + k[7] - 45705983 | 0;
        b  = (b << 22 | b >>> 10) + c | 0;
        a += (b & c | ~b & d) + k[8] + 1770035416 | 0;
        a  = (a << 7 | a >>> 25) + b | 0;
        d += (a & b | ~a & c) + k[9] - 1958414417 | 0;
        d  = (d << 12 | d >>> 20) + a | 0;
        c += (d & a | ~d & b) + k[10] - 42063 | 0;
        c  = (c << 17 | c >>> 15) + d | 0;
        b += (c & d | ~c & a) + k[11] - 1990404162 | 0;
        b  = (b << 22 | b >>> 10) + c | 0;
        a += (b & c | ~b & d) + k[12] + 1804603682 | 0;
        a  = (a << 7 | a >>> 25) + b | 0;
        d += (a & b | ~a & c) + k[13] - 40341101 | 0;
        d  = (d << 12 | d >>> 20) + a | 0;
        c += (d & a | ~d & b) + k[14] - 1502002290 | 0;
        c  = (c << 17 | c >>> 15) + d | 0;
        b += (c & d | ~c & a) + k[15] + 1236535329 | 0;
        b  = (b << 22 | b >>> 10) + c | 0;

        a += (b & d | c & ~d) + k[1] - 165796510 | 0;
        a  = (a << 5 | a >>> 27) + b | 0;
        d += (a & c | b & ~c) + k[6] - 1069501632 | 0;
        d  = (d << 9 | d >>> 23) + a | 0;
        c += (d & b | a & ~b) + k[11] + 643717713 | 0;
        c  = (c << 14 | c >>> 18) + d | 0;
        b += (c & a | d & ~a) + k[0] - 373897302 | 0;
        b  = (b << 20 | b >>> 12) + c | 0;
        a += (b & d | c & ~d) + k[5] - 701558691 | 0;
        a  = (a << 5 | a >>> 27) + b | 0;
        d += (a & c | b & ~c) + k[10] + 38016083 | 0;
        d  = (d << 9 | d >>> 23) + a | 0;
        c += (d & b | a & ~b) + k[15] - 660478335 | 0;
        c  = (c << 14 | c >>> 18) + d | 0;
        b += (c & a | d & ~a) + k[4] - 405537848 | 0;
        b  = (b << 20 | b >>> 12) + c | 0;
        a += (b & d | c & ~d) + k[9] + 568446438 | 0;
        a  = (a << 5 | a >>> 27) + b | 0;
        d += (a & c | b & ~c) + k[14] - 1019803690 | 0;
        d  = (d << 9 | d >>> 23) + a | 0;
        c += (d & b | a & ~b) + k[3] - 187363961 | 0;
        c  = (c << 14 | c >>> 18) + d | 0;
        b += (c & a | d & ~a) + k[8] + 1163531501 | 0;
        b  = (b << 20 | b >>> 12) + c | 0;
        a += (b & d | c & ~d) + k[13] - 1444681467 | 0;
        a  = (a << 5 | a >>> 27) + b | 0;
        d += (a & c | b & ~c) + k[2] - 51403784 | 0;
        d  = (d << 9 | d >>> 23) + a | 0;
        c += (d & b | a & ~b) + k[7] + 1735328473 | 0;
        c  = (c << 14 | c >>> 18) + d | 0;
        b += (c & a | d & ~a) + k[12] - 1926607734 | 0;
        b  = (b << 20 | b >>> 12) + c | 0;

        a += (b ^ c ^ d) + k[5] - 378558 | 0;
        a  = (a << 4 | a >>> 28) + b | 0;
        d += (a ^ b ^ c) + k[8] - 2022574463 | 0;
        d  = (d << 11 | d >>> 21) + a | 0;
        c += (d ^ a ^ b) + k[11] + 1839030562 | 0;
        c  = (c << 16 | c >>> 16) + d | 0;
        b += (c ^ d ^ a) + k[14] - 35309556 | 0;
        b  = (b << 23 | b >>> 9) + c | 0;
        a += (b ^ c ^ d) + k[1] - 1530992060 | 0;
        a  = (a << 4 | a >>> 28) + b | 0;
        d += (a ^ b ^ c) + k[4] + 1272893353 | 0;
        d  = (d << 11 | d >>> 21) + a | 0;
        c += (d ^ a ^ b) + k[7] - 155497632 | 0;
        c  = (c << 16 | c >>> 16) + d | 0;
        b += (c ^ d ^ a) + k[10] - 1094730640 | 0;
        b  = (b << 23 | b >>> 9) + c | 0;
        a += (b ^ c ^ d) + k[13] + 681279174 | 0;
        a  = (a << 4 | a >>> 28) + b | 0;
        d += (a ^ b ^ c) + k[0] - 358537222 | 0;
        d  = (d << 11 | d >>> 21) + a | 0;
        c += (d ^ a ^ b) + k[3] - 722521979 | 0;
        c  = (c << 16 | c >>> 16) + d | 0;
        b += (c ^ d ^ a) + k[6] + 76029189 | 0;
        b  = (b << 23 | b >>> 9) + c | 0;
        a += (b ^ c ^ d) + k[9] - 640364487 | 0;
        a  = (a << 4 | a >>> 28) + b | 0;
        d += (a ^ b ^ c) + k[12] - 421815835 | 0;
        d  = (d << 11 | d >>> 21) + a | 0;
        c += (d ^ a ^ b) + k[15] + 530742520 | 0;
        c  = (c << 16 | c >>> 16) + d | 0;
        b += (c ^ d ^ a) + k[2] - 995338651 | 0;
        b  = (b << 23 | b >>> 9) + c | 0;

        a += (c ^ (b | ~d)) + k[0] - 198630844 | 0;
        a  = (a << 6 | a >>> 26) + b | 0;
        d += (b ^ (a | ~c)) + k[7] + 1126891415 | 0;
        d  = (d << 10 | d >>> 22) + a | 0;
        c += (a ^ (d | ~b)) + k[14] - 1416354905 | 0;
        c  = (c << 15 | c >>> 17) + d | 0;
        b += (d ^ (c | ~a)) + k[5] - 57434055 | 0;
        b  = (b << 21 |b >>> 11) + c | 0;
        a += (c ^ (b | ~d)) + k[12] + 1700485571 | 0;
        a  = (a << 6 | a >>> 26) + b | 0;
        d += (b ^ (a | ~c)) + k[3] - 1894986606 | 0;
        d  = (d << 10 | d >>> 22) + a | 0;
        c += (a ^ (d | ~b)) + k[10] - 1051523 | 0;
        c  = (c << 15 | c >>> 17) + d | 0;
        b += (d ^ (c | ~a)) + k[1] - 2054922799 | 0;
        b  = (b << 21 |b >>> 11) + c | 0;
        a += (c ^ (b | ~d)) + k[8] + 1873313359 | 0;
        a  = (a << 6 | a >>> 26) + b | 0;
        d += (b ^ (a | ~c)) + k[15] - 30611744 | 0;
        d  = (d << 10 | d >>> 22) + a | 0;
        c += (a ^ (d | ~b)) + k[6] - 1560198380 | 0;
        c  = (c << 15 | c >>> 17) + d | 0;
        b += (d ^ (c | ~a)) + k[13] + 1309151649 | 0;
        b  = (b << 21 |b >>> 11) + c | 0;
        a += (c ^ (b | ~d)) + k[4] - 145523070 | 0;
        a  = (a << 6 | a >>> 26) + b | 0;
        d += (b ^ (a | ~c)) + k[11] - 1120210379 | 0;
        d  = (d << 10 | d >>> 22) + a | 0;
        c += (a ^ (d | ~b)) + k[2] + 718787259 | 0;
        c  = (c << 15 | c >>> 17) + d | 0;
        b += (d ^ (c | ~a)) + k[9] - 343485551 | 0;
        b  = (b << 21 | b >>> 11) + c | 0;

        x[0] = a + x[0] | 0;
        x[1] = b + x[1] | 0;
        x[2] = c + x[2] | 0;
        x[3] = d + x[3] | 0;
    }

    function md5blk(s) {
        var md5blks = [],
            i; /* Andy King said do it this way. */

        for (i = 0; i < 64; i += 4) {
            md5blks[i >> 2] = s.charCodeAt(i) + (s.charCodeAt(i + 1) << 8) + (s.charCodeAt(i + 2) << 16) + (s.charCodeAt(i + 3) << 24);
        }
        return md5blks;
    }

    function md5blk_array(a) {
        var md5blks = [],
            i; /* Andy King said do it this way. */

        for (i = 0; i < 64; i += 4) {
            md5blks[i >> 2] = a[i] + (a[i + 1] << 8) + (a[i + 2] << 16) + (a[i + 3] << 24);
        }
        return md5blks;
    }

    function md51(s) {
        var n = s.length,
            state = [1732584193, -271733879, -1732584194, 271733878],
            i,
            length,
            tail,
            tmp,
            lo,
            hi;

        for (i = 64; i <= n; i += 64) {
            md5cycle(state, md5blk(s.substring(i - 64, i)));
        }
        s = s.substring(i - 64);
        length = s.length;
        tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
        for (i = 0; i < length; i += 1) {
            tail[i >> 2] |= s.charCodeAt(i) << ((i % 4) << 3);
        }
        tail[i >> 2] |= 0x80 << ((i % 4) << 3);
        if (i > 55) {
            md5cycle(state, tail);
            for (i = 0; i < 16; i += 1) {
                tail[i] = 0;
            }
        }

        // Beware that the final length might not fit in 32 bits so we take care of that
        tmp = n * 8;
        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);
        lo = parseInt(tmp[2], 16);
        hi = parseInt(tmp[1], 16) || 0;

        tail[14] = lo;
        tail[15] = hi;

        md5cycle(state, tail);
        return state;
    }

    function md51_array(a) {
        var n = a.length,
            state = [1732584193, -271733879, -1732584194, 271733878],
            i,
            length,
            tail,
            tmp,
            lo,
            hi;

        for (i = 64; i <= n; i += 64) {
            md5cycle(state, md5blk_array(a.subarray(i - 64, i)));
        }

        // Not sure if it is a bug, however IE10 will always produce a sub array of length 1
        // containing the last element of the parent array if the sub array specified starts
        // beyond the length of the parent array - weird.
        // https://connect.microsoft.com/IE/feedback/details/771452/typed-array-subarray-issue
        a = (i - 64) < n ? a.subarray(i - 64) : new Uint8Array(0);

        length = a.length;
        tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
        for (i = 0; i < length; i += 1) {
            tail[i >> 2] |= a[i] << ((i % 4) << 3);
        }

        tail[i >> 2] |= 0x80 << ((i % 4) << 3);
        if (i > 55) {
            md5cycle(state, tail);
            for (i = 0; i < 16; i += 1) {
                tail[i] = 0;
            }
        }

        // Beware that the final length might not fit in 32 bits so we take care of that
        tmp = n * 8;
        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);
        lo = parseInt(tmp[2], 16);
        hi = parseInt(tmp[1], 16) || 0;

        tail[14] = lo;
        tail[15] = hi;

        md5cycle(state, tail);

        return state;
    }

    function rhex(n) {
        var s = '',
            j;
        for (j = 0; j < 4; j += 1) {
            s += hex_chr[(n >> (j * 8 + 4)) & 0x0F] + hex_chr[(n >> (j * 8)) & 0x0F];
        }
        return s;
    }

    function hex(x) {
        var i;
        for (i = 0; i < x.length; i += 1) {
            x[i] = rhex(x[i]);
        }
        return x.join('');
    }

    // In some cases the fast add32 function cannot be used..
    if (hex(md51('hello')) !== '5d41402abc4b2a76b9719d911017c592') {
        add32 = function (x, y) {
            var lsw = (x & 0xFFFF) + (y & 0xFFFF),
                msw = (x >> 16) + (y >> 16) + (lsw >> 16);
            return (msw << 16) | (lsw & 0xFFFF);
        };
    }

    // ---------------------------------------------------

    /**
     * ArrayBuffer slice polyfill.
     *
     * @see https://github.com/ttaubert/node-arraybuffer-slice
     */

    if (typeof ArrayBuffer !== 'undefined' && !ArrayBuffer.prototype.slice) {
        (function () {
            function clamp(val, length) {
                val = (val | 0) || 0;

                if (val < 0) {
                    return Math.max(val + length, 0);
                }

                return Math.min(val, length);
            }

            ArrayBuffer.prototype.slice = function (from, to) {
                var length = this.byteLength,
                    begin = clamp(from, length),
                    end = length,
                    num,
                    target,
                    targetArray,
                    sourceArray;

                if (to !== undefined) {
                    end = clamp(to, length);
                }

                if (begin > end) {
                    return new ArrayBuffer(0);
                }

                num = end - begin;
                target = new ArrayBuffer(num);
                targetArray = new Uint8Array(target);

                sourceArray = new Uint8Array(this, begin, num);
                targetArray.set(sourceArray);

                return target;
            };
        })();
    }

    // ---------------------------------------------------

    /**
     * Helpers.
     */

    function toUtf8(str) {
        if (/[\u0080-\uFFFF]/.test(str)) {
            str = unescape(encodeURIComponent(str));
        }

        return str;
    }

    function utf8Str2ArrayBuffer(str, returnUInt8Array) {
        var length = str.length,
           buff = new ArrayBuffer(length),
           arr = new Uint8Array(buff),
           i;

        for (i = 0; i < length; i += 1) {
            arr[i] = str.charCodeAt(i);
        }

        return returnUInt8Array ? arr : buff;
    }

    function arrayBuffer2Utf8Str(buff) {
        return String.fromCharCode.apply(null, new Uint8Array(buff));
    }

    function concatenateArrayBuffers(first, second, returnUInt8Array) {
        var result = new Uint8Array(first.byteLength + second.byteLength);

        result.set(new Uint8Array(first));
        result.set(new Uint8Array(second), first.byteLength);

        return returnUInt8Array ? result : result.buffer;
    }

    function hexToBinaryString(hex) {
        var bytes = [],
            length = hex.length,
            x;

        for (x = 0; x < length - 1; x += 2) {
            bytes.push(parseInt(hex.substr(x, 2), 16));
        }

        return String.fromCharCode.apply(String, bytes);
    }

    // ---------------------------------------------------

    /**
     * SparkMD5 OOP implementation.
     *
     * Use this class to perform an incremental md5, otherwise use the
     * static methods instead.
     */

    function SparkMD5() {
        // call reset to init the instance
        this.reset();
    }

    /**
     * Appends a string.
     * A conversion will be applied if an utf8 string is detected.
     *
     * @param {String} str The string to be appended
     *
     * @return {SparkMD5} The instance itself
     */
    SparkMD5.prototype.append = function (str) {
        // Converts the string to utf8 bytes if necessary
        // Then append as binary
        this.appendBinary(toUtf8(str));

        return this;
    };

    /**
     * Appends a binary string.
     *
     * @param {String} contents The binary string to be appended
     *
     * @return {SparkMD5} The instance itself
     */
    SparkMD5.prototype.appendBinary = function (contents) {
        this._buff += contents;
        this._length += contents.length;

        var length = this._buff.length,
            i;

        for (i = 64; i <= length; i += 64) {
            md5cycle(this._hash, md5blk(this._buff.substring(i - 64, i)));
        }

        this._buff = this._buff.substring(i - 64);

        return this;
    };

    /**
     * Finishes the incremental computation, reseting the internal state and
     * returning the result.
     *
     * @param {Boolean} raw True to get the raw string, false to get the hex string
     *
     * @return {String} The result
     */
    SparkMD5.prototype.end = function (raw) {
        var buff = this._buff,
            length = buff.length,
            i,
            tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            ret;

        for (i = 0; i < length; i += 1) {
            tail[i >> 2] |= buff.charCodeAt(i) << ((i % 4) << 3);
        }

        this._finish(tail, length);
        ret = hex(this._hash);

        if (raw) {
            ret = hexToBinaryString(ret);
        }

        this.reset();

        return ret;
    };

    /**
     * Resets the internal state of the computation.
     *
     * @return {SparkMD5} The instance itself
     */
    SparkMD5.prototype.reset = function () {
        this._buff = '';
        this._length = 0;
        this._hash = [1732584193, -271733879, -1732584194, 271733878];

        return this;
    };

    /**
     * Gets the internal state of the computation.
     *
     * @return {Object} The state
     */
    SparkMD5.prototype.getState = function () {
        return {
            buff: this._buff,
            length: this._length,
            hash: this._hash.slice()
        };
    };

    /**
     * Gets the internal state of the computation.
     *
     * @param {Object} state The state
     *
     * @return {SparkMD5} The instance itself
     */
    SparkMD5.prototype.setState = function (state) {
        this._buff = state.buff;
        this._length = state.length;
        this._hash = state.hash;

        return this;
    };

    /**
     * Releases memory used by the incremental buffer and other additional
     * resources. If you plan to use the instance again, use reset instead.
     */
    SparkMD5.prototype.destroy = function () {
        delete this._hash;
        delete this._buff;
        delete this._length;
    };

    /**
     * Finish the final calculation based on the tail.
     *
     * @param {Array}  tail   The tail (will be modified)
     * @param {Number} length The length of the remaining buffer
     */
    SparkMD5.prototype._finish = function (tail, length) {
        var i = length,
            tmp,
            lo,
            hi;

        tail[i >> 2] |= 0x80 << ((i % 4) << 3);
        if (i > 55) {
            md5cycle(this._hash, tail);
            for (i = 0; i < 16; i += 1) {
                tail[i] = 0;
            }
        }

        // Do the final computation based on the tail and length
        // Beware that the final length may not fit in 32 bits so we take care of that
        tmp = this._length * 8;
        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);
        lo = parseInt(tmp[2], 16);
        hi = parseInt(tmp[1], 16) || 0;

        tail[14] = lo;
        tail[15] = hi;
        md5cycle(this._hash, tail);
    };

    /**
     * Performs the md5 hash on a string.
     * A conversion will be applied if utf8 string is detected.
     *
     * @param {String}  str The string
     * @param {Boolean} [raw] True to get the raw string, false to get the hex string
     *
     * @return {String} The result
     */
    SparkMD5.hash = function (str, raw) {
        // Converts the string to utf8 bytes if necessary
        // Then compute it using the binary function
        return SparkMD5.hashBinary(toUtf8(str), raw);
    };

    /**
     * Performs the md5 hash on a binary string.
     *
     * @param {String}  content The binary string
     * @param {Boolean} [raw]     True to get the raw string, false to get the hex string
     *
     * @return {String} The result
     */
    SparkMD5.hashBinary = function (content, raw) {
        var hash = md51(content),
            ret = hex(hash);

        return raw ? hexToBinaryString(ret) : ret;
    };

    // ---------------------------------------------------

    /**
     * SparkMD5 OOP implementation for array buffers.
     *
     * Use this class to perform an incremental md5 ONLY for array buffers.
     */
    SparkMD5.ArrayBuffer = function () {
        // call reset to init the instance
        this.reset();
    };

    /**
     * Appends an array buffer.
     *
     * @param {ArrayBuffer} arr The array to be appended
     *
     * @return {SparkMD5.ArrayBuffer} The instance itself
     */
    SparkMD5.ArrayBuffer.prototype.append = function (arr) {
        var buff = concatenateArrayBuffers(this._buff.buffer, arr, true),
            length = buff.length,
            i;

        this._length += arr.byteLength;

        for (i = 64; i <= length; i += 64) {
            md5cycle(this._hash, md5blk_array(buff.subarray(i - 64, i)));
        }

        this._buff = (i - 64) < length ? new Uint8Array(buff.buffer.slice(i - 64)) : new Uint8Array(0);

        return this;
    };

    /**
     * Finishes the incremental computation, reseting the internal state and
     * returning the result.
     *
     * @param {Boolean} raw True to get the raw string, false to get the hex string
     *
     * @return {String} The result
     */
    SparkMD5.ArrayBuffer.prototype.end = function (raw) {
        var buff = this._buff,
            length = buff.length,
            tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            i,
            ret;

        for (i = 0; i < length; i += 1) {
            tail[i >> 2] |= buff[i] << ((i % 4) << 3);
        }

        this._finish(tail, length);
        ret = hex(this._hash);

        if (raw) {
            ret = hexToBinaryString(ret);
        }

        this.reset();

        return ret;
    };

    /**
     * Resets the internal state of the computation.
     *
     * @return {SparkMD5.ArrayBuffer} The instance itself
     */
    SparkMD5.ArrayBuffer.prototype.reset = function () {
        this._buff = new Uint8Array(0);
        this._length = 0;
        this._hash = [1732584193, -271733879, -1732584194, 271733878];

        return this;
    };

    /**
     * Gets the internal state of the computation.
     *
     * @return {Object} The state
     */
    SparkMD5.ArrayBuffer.prototype.getState = function () {
        var state = SparkMD5.prototype.getState.call(this);

        // Convert buffer to a string
        state.buff = arrayBuffer2Utf8Str(state.buff);

        return state;
    };

    /**
     * Gets the internal state of the computation.
     *
     * @param {Object} state The state
     *
     * @return {SparkMD5.ArrayBuffer} The instance itself
     */
    SparkMD5.ArrayBuffer.prototype.setState = function (state) {
        // Convert string to buffer
        state.buff = utf8Str2ArrayBuffer(state.buff, true);

        return SparkMD5.prototype.setState.call(this, state);
    };

    SparkMD5.ArrayBuffer.prototype.destroy = SparkMD5.prototype.destroy;

    SparkMD5.ArrayBuffer.prototype._finish = SparkMD5.prototype._finish;

    /**
     * Performs the md5 hash on an array buffer.
     *
     * @param {ArrayBuffer} arr The array buffer
     * @param {Boolean}     [raw] True to get the raw string, false to get the hex one
     *
     * @return {String} The result
     */
    SparkMD5.ArrayBuffer.hash = function (arr, raw) {
        var hash = md51_array(new Uint8Array(arr)),
            ret = hex(hash);

        return raw ? hexToBinaryString(ret) : ret;
    };

    return SparkMD5;
}));


/***/ }),

/***/ "../node_modules/webworker-promise/src/index.js":
/*!******************************************************!*\
  !*** ../node_modules/webworker-promise/src/index.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

const TinyEmitter = __webpack_require__(/*! ./tiny-emitter */ "../node_modules/webworker-promise/src/tiny-emitter.js");

const MESSAGE_RESULT = 0;
const MESSAGE_EVENT = 1;

const RESULT_ERROR = 0;
const RESULT_SUCCESS = 1;

class Worker extends TinyEmitter {
  /**
   *
   * @param worker {Worker}
   */
  constructor(worker) {
    super();

    this._messageId = 1;
    this._messages = new Map();

    this._worker = worker;
    this._worker.onmessage = this._onMessage.bind(this);
    this._id = Math.ceil(Math.random() * 10000000);
  }

  terminate() {
    this._worker.terminate();
  }

  /**
   * return true if there is no unresolved jobs
   * @returns {boolean}
   */
  isFree() {
    return this._messages.size === 0;
  }

  jobsLength() {
    return this._messages.size;
  }

  /**
   * @param operationName string
   * @param data any
   * @param transferable array
   * @param onEvent function
   * @returns {Promise}
   */
  exec(operationName, data = null, transferable = [], onEvent) {
    return new Promise((res, rej) => {
      const messageId = this._messageId++;
      this._messages.set(messageId, [res, rej, onEvent]);
      this._worker.postMessage([messageId, data, operationName], transferable || []);
    });
  }

  /**
   *
   * @param data any
   * @param transferable array
   * @param onEvent function
   * @returns {Promise}
   */
  postMessage(data = null, transferable = [], onEvent) {
    return new Promise((res, rej) => {
      const messageId = this._messageId++;
      this._messages.set(messageId, [res, rej, onEvent]);
      this._worker.postMessage([messageId, data], transferable || []);
    });
  }

  emit(eventName, ...args) {
    this._worker.postMessage({eventName, args});
  }

  _onMessage(e) {
    //if we got usual event, just emit it locally
    if(!Array.isArray(e.data) && e.data.eventName) {
      return super.emit(e.data.eventName, ...e.data.args);
    }

    const [type, ...args] = e.data;

    if(type === MESSAGE_EVENT)
      this._onEvent(...args);
    else if(type === MESSAGE_RESULT)
      this._onResult(...args);
    else
      throw new Error(`Wrong message type '${type}'`);
  }

  _onResult(messageId, success, payload) {
    const [res, rej] = this._messages.get(messageId);
    this._messages.delete(messageId);

    return success === RESULT_SUCCESS ? res(payload) : rej(payload);
  }

  _onEvent(messageId, eventName, data) {
    const [,,onEvent] = this._messages.get(messageId);

    if(onEvent) {
      onEvent(eventName, data);
    }
  }

}

module.exports = Worker;


/***/ }),

/***/ "../node_modules/webworker-promise/src/tiny-emitter.js":
/*!*************************************************************!*\
  !*** ../node_modules/webworker-promise/src/tiny-emitter.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

class TinyEmitter {
  constructor() {
    Object.defineProperty(this, '__listeners', {
      value: {},
      enumerable: false,
      writable: false
    });
  }

  emit(eventName, ...args) {
    if(!this.__listeners[eventName])
      return this;

    for(const handler of this.__listeners[eventName]) {
      handler(...args);
    }

    return this;
  }

  once(eventName, handler) {
    const once = (...args) => {
      this.off(eventName, once);
      handler(...args);
    };

    return this.on(eventName, once);
  }

  on(eventName, handler) {
    if(!this.__listeners[eventName])
      this.__listeners[eventName] = [];

    this.__listeners[eventName].push(handler);

    return this;
  }

  off(eventName, handler) {
    if(handler)
      this.__listeners[eventName] = this.__listeners[eventName].filter(h => h !== handler);
    else
      this.__listeners[eventName] = [];

    return this;
  }
}

module.exports = TinyEmitter;


/***/ }),

/***/ "../node_modules/xmlbuilder2/lib/xmlbuilder2.min.js":
/*!**********************************************************!*\
  !*** ../node_modules/xmlbuilder2/lib/xmlbuilder2.min.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

!function(e,t){ true?module.exports=t():undefined}(this,(function(){return function(e){var t={};function r(n){if(t[n])return t[n].exports;var i=t[n]={i:n,l:!1,exports:{}};return e[n].call(i.exports,i,i.exports,r),i.l=!0,i.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)r.d(n,i,function(t){return e[t]}.bind(null,i));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=184)}([function(e,t,r){"use strict";function n(e){for(var r in e)t.hasOwnProperty(r)||(t[r]=e[r])}Object.defineProperty(t,"__esModule",{value:!0}),n(r(240)),n(r(251)),n(r(175)),n(r(107)),n(r(29)),n(r(73)),n(r(106)),n(r(30)),n(r(252)),n(r(52)),n(r(97)),n(r(253)),n(r(37)),n(r(51)),n(r(173)),n(r(176)),n(r(172)),n(r(108)),n(r(254)),n(r(255)),n(r(256)),n(r(72)),n(r(177)),n(r(105)),n(r(17)),n(r(257)),n(r(12)),n(r(174))},function(e,t,r){"use strict";var n=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,r=t&&e[t],n=0;if(r)return r.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(t,"__esModule",{value:!0});var i=r(212);t.FixedSizeSet=i.FixedSizeSet;var o=r(213);t.ObjectCache=o.ObjectCache;var a=r(214);t.CompareCache=a.CompareCache;var s=r(215);t.Lazy=s.Lazy;var u=r(216);function l(e,t,r){if(m(e))e.forEach((function(e,n){return t.call(r,n,e)}));else for(var n in e)e.hasOwnProperty(n)&&t.call(r,n,e[n])}function c(e){var t,r;if(h(e))return e;if(f(e)){var i=[];try{for(var o=n(e),a=o.next();!a.done;a=o.next()){var s=a.value;i.push(c(s))}}catch(e){t={error:e}}finally{try{a&&!a.done&&(r=o.return)&&r.call(o)}finally{if(t)throw t.error}}return i}if(p(e)){i={};for(var u in e)if(e.hasOwnProperty(u)){var l=e[u];i[u]=c(l)}return i}return e}function h(e){return!!e&&"[object Function]"===Object.prototype.toString.call(e)}function p(e){var t=typeof e;return!!e&&("function"===t||"object"===t)}function f(e){return Array.isArray(e)}function d(e){return e instanceof Set}function m(e){return e instanceof Map}function y(e){if(p(e)){var t=Object.getPrototypeOf(e),r=t.constructor;return t&&r&&"function"==typeof r&&r instanceof r&&Function.prototype.toString.call(r)===Function.prototype.toString.call(Object)}return!1}t.StringWalker=u.StringWalker,t.applyMixin=function(e,t){for(var r=[],n=2;n<arguments.length;n++)r[n-2]=arguments[n];Object.getOwnPropertyNames(t.prototype).forEach((function(n){if("constructor"!==n){if(-1!==r.indexOf(n)){var i=Object.getOwnPropertyDescriptor(e.prototype,n);i&&Object.defineProperty(e.prototype,"_"+n,i)}var o=Object.getOwnPropertyDescriptor(t.prototype,n);o&&Object.defineProperty(e.prototype,n,o)}}))},t.applyDefaults=function e(t,r,n){void 0===n&&(n=!1);var i=c(t||{});return l(r,(function(t,r){y(r)?i[t]=e(i[t],r,n):(n||void 0===i[t])&&(i[t]=r)})),i},t.forEachArray=function(e,t,r){e.forEach(t,r)},t.forEachObject=l,t.arrayLength=function(e){return d(e)?e.size:e.length},t.objectLength=function(e){return m(e)?e.size:Object.keys(e).length},t.getObjectValue=function(e,t){return m(e)?e.get(t):e[t]},t.removeObjectValue=function(e,t){m(e)?e.delete(t):delete e[t]},t.clone=c,t.isBoolean=function(e){return"boolean"==typeof e},t.isNumber=function(e){return"number"==typeof e},t.isString=function(e){return"string"==typeof e},t.isFunction=h,t.isObject=p,t.isArray=f,t.isSet=d,t.isMap=m,t.isEmpty=function(e){if(f(e))return!e.length;if(d(e))return!e.size;if(m(e))return!e.size;if(p(e)){for(var t in e)if(e.hasOwnProperty(t))return!1;return!0}return!1},t.isPlainObject=y,t.isIterable=function(e){return e&&"function"==typeof e[Symbol.iterator]},t.getValue=function(e){return h(e.valueOf)?e.valueOf():e},t.utf8Encode=function(e){for(var t=new Uint8Array(4*e.length),r=0,n=0;n<e.length;n++){var i=e.charCodeAt(n);if(i<128)t[r++]=i;else{if(i<2048)t[r++]=i>>6|192;else{if(i>55295&&i<56320){if(++n>=e.length)throw new Error("Incomplete surrogate pair.");var o=e.charCodeAt(n);if(o<56320||o>57343)throw new Error("Invalid surrogate character.");i=65536+((1023&i)<<10)+(1023&o),t[r++]=i>>18|240,t[r++]=i>>12&63|128}else t[r++]=i>>12|224;t[r++]=i>>6&63|128}t[r++]=63&i|128}}return t.subarray(0,r)},t.utf8Decode=function(e){for(var t="",r=0;r<e.length;){var n=e[r++];if(n>127)if(n>191&&n<224){if(r>=e.length)throw new Error("Incomplete 2-byte sequence.");n=(31&n)<<6|63&e[r++]}else if(n>223&&n<240){if(r+1>=e.length)throw new Error("Incomplete 3-byte sequence.");n=(15&n)<<12|(63&e[r++])<<6|63&e[r++]}else{if(!(n>239&&n<248))throw new Error("Unknown multi-byte start.");if(r+2>=e.length)throw new Error("Incomplete 4-byte sequence.");n=(7&n)<<18|(63&e[r++])<<12|(63&e[r++])<<6|63&e[r++]}if(n<=65535)t+=String.fromCharCode(n);else{if(!(n<=1114111))throw new Error("Code point exceeds UTF-16 limit.");n-=65536,t+=String.fromCharCode(n>>10|55296),t+=String.fromCharCode(1023&n|56320)}}return t}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),function(e){e[e.Before=0]="Before",e[e.Equal=1]="Equal",e[e.After=2]="After"}(t.BoundaryPosition||(t.BoundaryPosition={})),function(e){e[e.None=0]="None",e[e.Capturing=1]="Capturing",e[e.AtTarget=2]="AtTarget",e[e.Bubbling=3]="Bubbling"}(t.EventPhase||(t.EventPhase={})),function(e){e[e.Element=1]="Element",e[e.Attribute=2]="Attribute",e[e.Text=3]="Text",e[e.CData=4]="CData",e[e.EntityReference=5]="EntityReference",e[e.Entity=6]="Entity",e[e.ProcessingInstruction=7]="ProcessingInstruction",e[e.Comment=8]="Comment",e[e.Document=9]="Document",e[e.DocumentType=10]="DocumentType",e[e.DocumentFragment=11]="DocumentFragment",e[e.Notation=12]="Notation"}(t.NodeType||(t.NodeType={})),function(e){e[e.Disconnected=1]="Disconnected",e[e.Preceding=2]="Preceding",e[e.Following=4]="Following",e[e.Contains=8]="Contains",e[e.ContainedBy=16]="ContainedBy",e[e.ImplementationSpecific=32]="ImplementationSpecific"}(t.Position||(t.Position={})),function(e){e[e.Accept=1]="Accept",e[e.Reject=2]="Reject",e[e.Skip=3]="Skip"}(t.FilterResult||(t.FilterResult={})),function(e){e[e.All=4294967295]="All",e[e.Element=1]="Element",e[e.Attribute=2]="Attribute",e[e.Text=4]="Text",e[e.CDataSection=8]="CDataSection",e[e.EntityReference=16]="EntityReference",e[e.Entity=32]="Entity",e[e.ProcessingInstruction=64]="ProcessingInstruction",e[e.Comment=128]="Comment",e[e.Document=256]="Document",e[e.DocumentType=512]="DocumentType",e[e.DocumentFragment=1024]="DocumentFragment",e[e.Notation=2048]="Notation"}(t.WhatToShow||(t.WhatToShow={})),function(e){e[e.StartToStart=0]="StartToStart",e[e.StartToEnd=1]="StartToEnd",e[e.EndToEnd=2]="EndToEnd",e[e.EndToStart=3]="EndToStart"}(t.HowToCompare||(t.HowToCompare={}))},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(241);t.Cast=n.Cast;var i=r(150);t.Guard=i.Guard;var o=r(242);t.EmptySet=o.EmptySet},function(e,t,r){var n=r(11),i=r(55).f,o=r(21),a=r(25),s=r(80),u=r(119),l=r(123);e.exports=function(e,t){var r,c,h,p,f,d=e.target,m=e.global,y=e.stat;if(r=m?n:y?n[d]||s(d,{}):(n[d]||{}).prototype)for(c in t){if(p=t[c],h=e.noTargetGet?(f=i(r,c))&&f.value:r[c],!l(m?c:d+(y?".":"#")+c,e.forced)&&void 0!==h){if(typeof p==typeof h)continue;u(p,h)}(e.sham||h&&h.sham)&&o(p,"sham",!0),a(r,c,p,e)}}},function(e,t,r){var n=r(11),i=r(81),o=r(14),a=r(58),s=r(86),u=r(124),l=i("wks"),c=n.Symbol,h=u?c:c&&c.withoutSetter||a;e.exports=function(e){return o(l,e)||(s&&o(c,e)?l[e]=c[e]:l[e]=h("Symbol."+e)),l[e]}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(1),i=r(29),o=function(){function e(){this._features={mutationObservers:!0,customElements:!0,slots:!0,steps:!0},this._window=null,this._compareCache=new n.CompareCache,this._rangeList=new n.FixedSizeSet}return e.prototype.setFeatures=function(e){if(void 0===e&&(e=!0),n.isObject(e))for(var t in e)this._features[t]=e[t]||!1;else for(var t in this._features)this._features[t]=e},Object.defineProperty(e.prototype,"features",{get:function(){return this._features},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"window",{get:function(){return null===this._window&&(this._window=i.create_window()),this._window},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"compareCache",{get:function(){return this._compareCache},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"rangeList",{get:function(){return this._rangeList},enumerable:!0,configurable:!0}),Object.defineProperty(e,"instance",{get:function(){return e._instance||(e._instance=new e),e._instance},enumerable:!0,configurable:!0}),e}();t.dom=o.instance},function(e,t,r){"use strict";var n=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t};Object.defineProperty(t,"__esModule",{value:!0});var i=n(r(228));t.base64=i;var o=n(r(146));t.byte=o;var a=n(r(147));t.byteSequence=a;var s=n(r(96));t.codePoint=s;var u=n(r(232));t.json=u;var l=n(r(233));t.list=l;var c=n(r(234));t.map=c;var h=n(r(235));t.namespace=h;var p=n(r(236));t.queue=p;var f=n(r(237));t.set=f;var d=n(r(238));t.stack=d;var m=n(r(239));t.string=m},function(e,t){e.exports=function(e){try{return!!e()}catch(e){return!0}}},function(e,t,r){"use strict";var n,i=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});Object.defineProperty(t,"__esModule",{value:!0});var o=function(e){function t(t,r){void 0===r&&(r="");var n=e.call(this,r)||this;return n.name=t,n}return i(t,e),t}(Error);t.DOMException=o;var a=function(e){function t(t){return void 0===t&&(t=""),e.call(this,"DOMStringSizeError",t)||this}return i(t,e),t}(o);t.DOMStringSizeError=a;var s=function(e){function t(t){return void 0===t&&(t=""),e.call(this,"WrongDocumentError","The object is in the wrong document. "+t)||this}return i(t,e),t}(o);t.WrongDocumentError=s;var u=function(e){function t(t){return void 0===t&&(t=""),e.call(this,"NoDataAllowedError",t)||this}return i(t,e),t}(o);t.NoDataAllowedError=u;var l=function(e){function t(t){return void 0===t&&(t=""),e.call(this,"NoModificationAllowedError","The object can not be modified. "+t)||this}return i(t,e),t}(o);t.NoModificationAllowedError=l;var c=function(e){function t(t){return void 0===t&&(t=""),e.call(this,"NotSupportedError","The operation is not supported. "+t)||this}return i(t,e),t}(o);t.NotSupportedError=c;var h=function(e){function t(t){return void 0===t&&(t=""),e.call(this,"InUseAttributeError",t)||this}return i(t,e),t}(o);t.InUseAttributeError=h;var p=function(e){function t(t){return void 0===t&&(t=""),e.call(this,"InvalidStateError","The object is in an invalid state. "+t)||this}return i(t,e),t}(o);t.InvalidStateError=p;var f=function(e){function t(t){return void 0===t&&(t=""),e.call(this,"InvalidModificationError","The object can not be modified in this way. "+t)||this}return i(t,e),t}(o);t.InvalidModificationError=f;var d=function(e){function t(t){return void 0===t&&(t=""),e.call(this,"NamespaceError","The operation is not allowed by Namespaces in XML. [XMLNS] "+t)||this}return i(t,e),t}(o);t.NamespaceError=d;var m=function(e){function t(t){return void 0===t&&(t=""),e.call(this,"InvalidAccessError","The object does not support the operation or argument. "+t)||this}return i(t,e),t}(o);t.InvalidAccessError=m;var y=function(e){function t(t){return void 0===t&&(t=""),e.call(this,"ValidationError",t)||this}return i(t,e),t}(o);t.ValidationError=y;var v=function(e){function t(t){return void 0===t&&(t=""),e.call(this,"TypeMismatchError",t)||this}return i(t,e),t}(o);t.TypeMismatchError=v;var _=function(e){function t(t){return void 0===t&&(t=""),e.call(this,"SecurityError","The operation is insecure. "+t)||this}return i(t,e),t}(o);t.SecurityError=_;var g=function(e){function t(t){return void 0===t&&(t=""),e.call(this,"NetworkError","A network error occurred. "+t)||this}return i(t,e),t}(o);t.NetworkError=g;var b=function(e){function t(t){return void 0===t&&(t=""),e.call(this,"AbortError","The operation was aborted. "+t)||this}return i(t,e),t}(o);t.AbortError=b;var x=function(e){function t(t){return void 0===t&&(t=""),e.call(this,"URLMismatchError","The given URL does not match another URL. "+t)||this}return i(t,e),t}(o);t.URLMismatchError=x;var w=function(e){function t(t){return void 0===t&&(t=""),e.call(this,"QuotaExceededError","The quota has been exceeded. "+t)||this}return i(t,e),t}(o);t.QuotaExceededError=w;var E=function(e){function t(t){return void 0===t&&(t=""),e.call(this,"TimeoutError","The operation timed out. "+t)||this}return i(t,e),t}(o);t.TimeoutError=E;var D=function(e){function t(t){return void 0===t&&(t=""),e.call(this,"InvalidNodeTypeError","The supplied node is incorrect or has an incorrect ancestor for this operation. "+t)||this}return i(t,e),t}(o);t.InvalidNodeTypeError=D;var S=function(e){function t(t){return void 0===t&&(t=""),e.call(this,"DataCloneError","The object can not be cloned. "+t)||this}return i(t,e),t}(o);t.DataCloneError=S;var C=function(e){function t(t){return void 0===t&&(t=""),e.call(this,"NotImplementedError","The DOM method is not implemented by this module. "+t)||this}return i(t,e),t}(o);t.NotImplementedError=C;var A=function(e){function t(t){return void 0===t&&(t=""),e.call(this,"HierarchyRequestError","The operation would yield an incorrect node tree. "+t)||this}return i(t,e),t}(o);t.HierarchyRequestError=A;var N=function(e){function t(t){return void 0===t&&(t=""),e.call(this,"NotFoundError","The object can not be found here. "+t)||this}return i(t,e),t}(o);t.NotFoundError=N;var T=function(e){function t(t){return void 0===t&&(t=""),e.call(this,"IndexSizeError","The index is not in the allowed range. "+t)||this}return i(t,e),t}(o);t.IndexSizeError=T;var O=function(e){function t(t){return void 0===t&&(t=""),e.call(this,"SyntaxError","The string did not match the expected pattern. "+t)||this}return i(t,e),t}(o);t.SyntaxError=O;var F=function(e){function t(t){return void 0===t&&(t=""),e.call(this,"InvalidCharacterError","The string contains invalid characters. "+t)||this}return i(t,e),t}(o);t.InvalidCharacterError=F},function(e,t,r){"use strict";var n=r(53),i=["kind","resolve","construct","instanceOf","predicate","represent","defaultStyle","styleAliases"],o=["scalar","sequence","mapping"];e.exports=function(e,t){var r,a;if(t=t||{},Object.keys(t).forEach((function(t){if(-1===i.indexOf(t))throw new n('Unknown option "'+t+'" is met in definition of "'+e+'" YAML type.')})),this.tag=e,this.kind=t.kind||null,this.resolve=t.resolve||function(){return!0},this.construct=t.construct||function(e){return e},this.instanceOf=t.instanceOf||null,this.predicate=t.predicate||null,this.represent=t.represent||null,this.defaultStyle=t.defaultStyle||null,this.styleAliases=(r=t.styleAliases||null,a={},null!==r&&Object.keys(r).forEach((function(e){r[e].forEach((function(t){a[String(t)]=e}))})),a),-1===o.indexOf(this.kind))throw new n('Unknown kind "'+this.kind+'" is specified for "'+e+'" YAML type.')}},function(e,t,r){(function(t){var r=function(e){return e&&e.Math==Math&&e};e.exports=r("object"==typeof globalThis&&globalThis)||r("object"==typeof window&&window)||r("object"==typeof self&&self)||r("object"==typeof t&&t)||Function("return this")()}).call(this,r(78))},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.idl_defineConst=function(e,t,r){Object.defineProperty(e,t,{writable:!1,enumerable:!0,configurable:!1,value:r})}},function(e,t){e.exports=function(e){return"object"==typeof e?null!==e:"function"==typeof e}},function(e,t){var r={}.hasOwnProperty;e.exports=function(e,t){return r.call(e,t)}},function(e,t,r){var n=r(16),i=r(115),o=r(18),a=r(56),s=Object.defineProperty;t.f=n?s:function(e,t,r){if(o(e),t=a(t,!0),o(r),i)try{return s(e,t,r)}catch(e){}if("get"in r||"set"in r)throw TypeError("Accessors not supported");return"value"in r&&(e[t]=r.value),e}},function(e,t,r){var n=r(8);e.exports=!n((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]}))},function(e,t,r){"use strict";var n=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,r=t&&e[t],n=0;if(r)return r.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(t,"__esModule",{value:!0});var i=r(3),o=r(2);function a(e,t,r){if(void 0===r&&(r=!1),r&&i.Guard.isElementNode(t)&&i.Guard.isShadowRoot(t.shadowRoot)&&t.shadowRoot._firstChild)return t.shadowRoot._firstChild;if(t._firstChild)return t._firstChild;if(t===e)return null;if(t._nextSibling)return t._nextSibling;for(var n=t._parent;n&&n!==e;){if(n._nextSibling)return n._nextSibling;n=n._parent}return null}function s(){var e;return(e={})[Symbol.iterator]=function(){return{next:function(){return{done:!0,value:null}}}},e}function u(e,t,r,n){void 0===t&&(t=!1),void 0===r&&(r=!1);for(var i=t?e:a(e,e,r);i&&n&&!n(i);)i=a(e,i,r);return i}function l(e,t,r,n,i){void 0===r&&(r=!1),void 0===n&&(n=!1);for(var o=a(e,t,n);o&&i&&!i(o);)o=a(e,o,n);return o}function c(e,t,r,n){var i;return void 0===t&&(t=!1),void 0===r&&(r=!1),t||0!==e._children.size?((i={})[Symbol.iterator]=function(){var i=t?e:a(e,e,r);return{next:function(){for(;i&&n&&!n(i);)i=a(e,i,r);if(null===i)return{done:!0,value:null};var t={done:!1,value:i};return i=a(e,i,r),t}}},i):s()}function h(e,t,r){void 0===t&&(t=!1);for(var n=t?e:e._parent;n&&r&&!r(n);)n=n._parent;return n}function p(e,t,r,n){void 0===r&&(r=!1);for(var i=t._parent;i&&n&&!n(i);)i=i._parent;return i}function f(e){return i.Guard.isDocumentTypeNode(e)?0:i.Guard.isCharacterDataNode(e)?e._data.length:e._children.size}function d(e,t){if(void 0===t&&(t=!1),t){var r=d(e,!1);return i.Guard.isShadowRoot(r)?d(r._host,!0):r}return e._parent?d(e._parent):e}function m(e,t,r,n){void 0===r&&(r=!1),void 0===n&&(n=!1);for(var o=r?e:n&&i.Guard.isShadowRoot(e)?e._host:e._parent;null!==o;){if(o===t)return!0;o=n&&i.Guard.isShadowRoot(o)?o._host:o._parent}return!1}function y(e){for(var t=d(e),r=0,n=u(t);null!==n;){if(r++,n===e)return r;n=l(t,n)}return-1}t.tree_getFirstDescendantNode=u,t.tree_getNextDescendantNode=l,t.tree_getDescendantNodes=c,t.tree_getDescendantElements=function(e,t,r,n){var o;return void 0===t&&(t=!1),void 0===r&&(r=!1),t||0!==e._children.size?((o={})[Symbol.iterator]=function(){var o=c(e,t,r,(function(e){return i.Guard.isElementNode(e)}))[Symbol.iterator](),a=o.next().value;return{next:function(){for(;a&&n&&!n(a);)a=o.next().value;if(null===a)return{done:!0,value:null};var e={done:!1,value:a};return a=o.next().value,e}}},o):s()},t.tree_getSiblingNodes=function(e,t,r){var n;return void 0===t&&(t=!1),e._parent&&0!==e._parent._children.size?((n={})[Symbol.iterator]=function(){var n=e._parent?e._parent._firstChild:null;return{next:function(){for(;n&&(r&&!r(n)||!t&&n===e);)n=n._nextSibling;if(null===n)return{done:!0,value:null};var i={done:!1,value:n};return n=n._nextSibling,i}}},n):s()},t.tree_getFirstAncestorNode=h,t.tree_getNextAncestorNode=p,t.tree_getAncestorNodes=function(e,t,r){var n;return void 0===t&&(t=!1),t||e._parent?((n={})[Symbol.iterator]=function(){var n=h(e,t,r);return{next:function(){if(null===n)return{done:!0,value:null};var e={done:!1,value:n};return n=p(0,n,t,r),e}}},n):s()},t.tree_getCommonAncestor=function(e,t){if(e===t)return e._parent;for(var r=[],n=[],i=h(e,!0);null!==i;)r.push(i),i=p(0,i,!0);for(var o=h(t,!0);null!==o;)n.push(o),o=p(0,o,!0);for(var a=r.length,s=n.length,u=null,l=Math.min(a,s);l>0;l--){var c=r[--a];if(c!==n[--s])break;u=c}return u},t.tree_getFollowingNode=function(e,t){if(t._firstChild)return t._firstChild;if(t._nextSibling)return t._nextSibling;for(;;){var r=t._parent;if(null===r||r===e)return null;if(r._nextSibling)return r._nextSibling;t=r}},t.tree_getPrecedingNode=function(e,t){return t===e?null:t._previousSibling?(t=t._previousSibling)._lastChild?t._lastChild:t:t._parent},t.tree_isConstrained=function e(t){var r,i,a,s,u,l;switch(t._nodeType){case o.NodeType.Document:var c=!1,h=!1;try{for(var p=n(t._children),f=p.next();!f.done;f=p.next()){switch(f.value._nodeType){case o.NodeType.ProcessingInstruction:case o.NodeType.Comment:break;case o.NodeType.DocumentType:if(c||h)return!1;c=!0;break;case o.NodeType.Element:if(h)return!1;h=!0;break;default:return!1}}}catch(e){r={error:e}}finally{try{f&&!f.done&&(i=p.return)&&i.call(p)}finally{if(r)throw r.error}}break;case o.NodeType.DocumentFragment:case o.NodeType.Element:try{for(var d=n(t._children),m=d.next();!m.done;m=d.next()){switch(m.value._nodeType){case o.NodeType.Element:case o.NodeType.Text:case o.NodeType.ProcessingInstruction:case o.NodeType.CData:case o.NodeType.Comment:break;default:return!1}}}catch(e){a={error:e}}finally{try{m&&!m.done&&(s=d.return)&&s.call(d)}finally{if(a)throw a.error}}break;case o.NodeType.DocumentType:case o.NodeType.Text:case o.NodeType.ProcessingInstruction:case o.NodeType.CData:case o.NodeType.Comment:return!t.hasChildNodes()}try{for(var y=n(t._children),v=y.next();!v.done;v=y.next()){if(!e(v.value))return!1}}catch(e){u={error:e}}finally{try{v&&!v.done&&(l=y.return)&&l.call(y)}finally{if(u)throw u.error}}return!0},t.tree_nodeLength=f,t.tree_isEmpty=function(e){return 0===f(e)},t.tree_rootNode=d,t.tree_isDescendantOf=function(e,t,r,n){void 0===r&&(r=!1),void 0===n&&(n=!1);for(var i=u(e,r,n);null!==i;){if(i===t)return!0;i=l(e,i,r,n)}return!1},t.tree_isAncestorOf=m,t.tree_isHostIncludingAncestorOf=function e(t,r,n){if(void 0===n&&(n=!1),m(t,r,n))return!0;var o=d(t);return!(!i.Guard.isDocumentFragmentNode(o)||null===o._host||!e(o._host,r,n))},t.tree_isSiblingOf=function(e,t,r){return void 0===r&&(r=!1),e!==t?null!==e._parent&&e._parent===t._parent:!!r},t.tree_isPreceding=function(e,t){var r=y(e),n=y(t);return-1!==r&&-1!==n&&(d(e)===d(t)&&n<r)},t.tree_isFollowing=function(e,t){var r=y(e),n=y(t);return-1!==r&&-1!==n&&(d(e)===d(t)&&n>r)},t.tree_isParentOf=function(e,t){return e._parent===t},t.tree_isChildOf=function(e,t){return t._parent===e},t.tree_previousSibling=function(e){return e._previousSibling},t.tree_nextSibling=function(e){return e._nextSibling},t.tree_firstChild=function(e){return e._firstChild},t.tree_lastChild=function(e){return e._lastChild},t.tree_treePosition=y,t.tree_index=function(e){for(var t=0;null!==e._previousSibling;)t++,e=e._previousSibling;return t},t.tree_retarget=function(e,t){for(;;){if(!e||!i.Guard.isNode(e))return e;var r=d(e);if(!i.Guard.isShadowRoot(r))return e;if(t&&i.Guard.isNode(t)&&m(r,t,!0,!0))return e;e=r.host}}},function(e,t,r){var n=r(13);e.exports=function(e){if(!n(e))throw TypeError(String(e)+" is not an object");return e}},function(e,t,r){"use strict";var n=r(24),i=r(130),o=r(49),a=r(43),s=r(88),u=a.set,l=a.getterFor("Array Iterator");e.exports=s(Array,"Array",(function(e,t){u(this,{type:"Array Iterator",target:n(e),index:0,kind:t})}),(function(){var e=l(this),t=e.target,r=e.kind,n=e.index++;return!t||n>=t.length?(e.target=void 0,{value:void 0,done:!0}):"keys"==r?{value:n,done:!1}:"values"==r?{value:t[n],done:!1}:{value:[n,t[n]],done:!1}}),"values"),o.Arguments=o.Array,i("keys"),i("values"),i("entries")},function(e,t,r){var n=r(90),i=r(25),o=r(202);n||i(Object.prototype,"toString",o,{unsafe:!0})},function(e,t,r){var n=r(16),i=r(15),o=r(40);e.exports=n?function(e,t,r){return i.f(e,t,o(1,r))}:function(e,t,r){return e[t]=r,e}},function(e,t,r){"use strict";var n=r(137).charAt,i=r(43),o=r(88),a=i.set,s=i.getterFor("String Iterator");o(String,"String",(function(e){a(this,{type:"String Iterator",string:String(e),index:0})}),(function(){var e,t=s(this),r=t.string,i=t.index;return i>=r.length?{value:void 0,done:!0}:(e=n(r,i),t.index+=e.length,{value:e,done:!1})}))},function(e,t,r){var n=r(11),i=r(203),o=r(19),a=r(21),s=r(5),u=s("iterator"),l=s("toStringTag"),c=o.values;for(var h in i){var p=n[h],f=p&&p.prototype;if(f){if(f[u]!==c)try{a(f,u,c)}catch(e){f[u]=c}if(f[l]||a(f,l,h),i[h])for(var d in o)if(f[d]!==o[d])try{a(f,d,o[d])}catch(e){f[d]=o[d]}}}},function(e,t,r){var n=r(41),i=r(35);e.exports=function(e){return n(i(e))}},function(e,t,r){var n=r(11),i=r(21),o=r(14),a=r(80),s=r(117),u=r(43),l=u.get,c=u.enforce,h=String(String).split("String");(e.exports=function(e,t,r,s){var u=!!s&&!!s.unsafe,l=!!s&&!!s.enumerable,p=!!s&&!!s.noTargetGet;"function"==typeof r&&("string"!=typeof t||o(r,"name")||i(r,"name",t),c(r).source=h.join("string"==typeof t?t:"")),e!==n?(u?!p&&e[t]&&(l=!0):delete e[t],l?e[t]=r:i(e,t,r)):l?e[t]=r:a(t,r)})(Function.prototype,"toString",(function(){return"function"==typeof this&&l(this).source||s(this)}))},function(e,t,r){var n=r(47),i=Math.min;e.exports=function(e){return e>0?i(n(e),9007199254740991):0}},function(e,t,r){var n=r(35);e.exports=function(e){return Object(n(e))}},function(e,t,r){var n=r(16),i=r(8),o=r(14),a=Object.defineProperty,s={},u=function(e){throw e};e.exports=function(e,t){if(o(s,e))return s[e];t||(t={});var r=[][e],l=!!o(t,"ACCESSORS")&&t.ACCESSORS,c=o(t,0)?t[0]:u,h=o(t,1)?t[1]:void 0;return s[e]=!!r&&!i((function(){if(l&&!n)return!0;var e={length:-1};l?a(e,1,{enumerable:!0,get:u}):e[1]=1,r.call(e,c,h)}))}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(148),i=r(149),o=r(151),a=r(98),s=r(153),u=r(154),l=r(155),c=r(99),h=r(100),p=r(156),f=r(157),d=r(101),m=r(158),y=r(159),v=r(160),_=r(161),g=r(162),b=r(163),x=r(164),w=r(165),E=r(166),D=r(167),S=r(168),C=r(169),A=r(170);t.create_domImplementation=function(e){return n.DOMImplementationImpl._create(e)},t.create_window=function(){return i.WindowImpl._create()},t.create_xmlDocument=function(){return new o.XMLDocumentImpl},t.create_document=function(){return new a.DocumentImpl},t.create_abortController=function(){return new s.AbortControllerImpl},t.create_abortSignal=function(){return u.AbortSignalImpl._create()},t.create_documentType=function(e,t,r,n){return l.DocumentTypeImpl._create(e,t,r,n)},t.create_element=function(e,t,r,n){return c.ElementImpl._create(e,t,r,n)},t.create_htmlElement=function(e,t,r,n){return c.ElementImpl._create(e,t,r,n)},t.create_htmlUnknownElement=function(e,t,r,n){return c.ElementImpl._create(e,t,r,n)},t.create_documentFragment=function(e){return h.DocumentFragmentImpl._create(e)},t.create_shadowRoot=function(e,t){return p.ShadowRootImpl._create(e,t)},t.create_attr=function(e,t){return f.AttrImpl._create(e,t)},t.create_text=function(e,t){return d.TextImpl._create(e,t)},t.create_cdataSection=function(e,t){return m.CDATASectionImpl._create(e,t)},t.create_comment=function(e,t){return y.CommentImpl._create(e,t)},t.create_processingInstruction=function(e,t,r){return v.ProcessingInstructionImpl._create(e,t,r)},t.create_htmlCollection=function(e,t){return void 0===t&&(t=function(){return!0}),_.HTMLCollectionImpl._create(e,t)},t.create_nodeList=function(e){return g.NodeListImpl._create(e)},t.create_nodeListStatic=function(e,t){return b.NodeListStaticImpl._create(e,t)},t.create_namedNodeMap=function(e){return x.NamedNodeMapImpl._create(e)},t.create_range=function(e,t){return w.RangeImpl._create(e,t)},t.create_nodeIterator=function(e,t,r){return E.NodeIteratorImpl._create(e,t,r)},t.create_treeWalker=function(e,t){return D.TreeWalkerImpl._create(e,t)},t.create_nodeFilter=function(){return S.NodeFilterImpl._create()},t.create_mutationRecord=function(e,t,r,n,i,o,a,s,u){return C.MutationRecordImpl._create(e,t,r,n,i,o,a,s,u)},t.create_domTokenList=function(e,t){return A.DOMTokenListImpl._create(e,t)}},function(e,t,r){"use strict";var n=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,r=t&&e[t],n=0;if(r)return r.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(t,"__esModule",{value:!0});var i=r(6),o=r(17),a=r(3),s=r(72),u=new Map;function l(e,t){if(t!==e._root&&o.tree_isAncestorOf(e._reference,t,!0)){if(e._pointerBeforeReference)for(;;){var r=o.tree_getFollowingNode(e._root,t);if(null!==r&&o.tree_isDescendantOf(e._root,r,!0)&&!o.tree_isDescendantOf(t,r,!0))return void(e._reference=r);if(null===r)return void(e._pointerBeforeReference=!1)}if(null===t._previousSibling)null!==t._parent&&(e._reference=t._parent);else{for(var n=t._previousSibling,i=o.tree_getFirstDescendantNode(t._previousSibling,!0,!1);null!==i;)null!==i&&(n=i),i=o.tree_getNextDescendantNode(t._previousSibling,i,!0,!1);e._reference=n}}}function c(e,t,r,n,i){if(a.Guard.isSlot(e)&&"name"===t&&null===i){if(n===r)return;if(null===n&&""===r)return;if(""===n&&null===r)return;e._name=null===n||""===n?"":n,s.shadowTree_assignSlotablesForATree(o.tree_rootNode(e))}}function h(e,t,r,n,i){if(a.Guard.isSlotable(e)&&"slot"===t&&null===i){if(n===r)return;if(null===n&&""===r)return;if(""===n&&null===r)return;e._name=null===n||""===n?"":n,s.shadowTree_isAssigned(e)&&s.shadowTree_assignSlotables(e._assignedSlot),s.shadowTree_assignASlot(e)}}function p(e,t,r,n){"id"===t&&null===n&&(e._uniqueIdentifier=r||void 0)}t.dom_runRemovingSteps=function(e,t){},t.dom_runCloningSteps=function(e,t,r,n){},t.dom_runAdoptingSteps=function(e,t){},t.dom_runAttributeChangeSteps=function(e,t,r,o,a){var s,u;i.dom.features.slots&&(h.call(e,e,t,r,o,a),c.call(e,e,t,r,o,a)),p.call(e,e,t,o,a);try{for(var l=n(e._attributeChangeSteps),f=l.next();!f.done;f=l.next()){f.value.call(e,e,t,r,o,a)}}catch(e){s={error:e}}finally{try{f&&!f.done&&(u=l.return)&&u.call(l)}finally{if(s)throw s.error}}},t.dom_runInsertionSteps=function(e){},t.dom_runNodeIteratorPreRemovingSteps=function(e,t){l.call(e,e,t)},t.dom_hasSupportedTokens=function(e){return u.has(e)},t.dom_getSupportedTokens=function(e){return u.get(e)||new Set},t.dom_runEventConstructingSteps=function(e){},t.dom_runChildTextContentChangeSteps=function(e){}},function(e,t,r){"use strict";var n=r(4),i=r(11),o=r(46),a=r(44),s=r(16),u=r(86),l=r(124),c=r(8),h=r(14),p=r(59),f=r(13),d=r(18),m=r(27),y=r(24),v=r(56),_=r(40),g=r(60),b=r(61),x=r(82),w=r(190),E=r(85),D=r(55),S=r(15),C=r(79),A=r(21),N=r(25),T=r(81),O=r(57),F=r(45),k=r(58),P=r(5),I=r(125),L=r(126),M=r(62),B=r(43),j=r(36).forEach,R=O("hidden"),z=P("toPrimitive"),U=B.set,G=B.getterFor("Symbol"),X=Object.prototype,q=i.Symbol,W=o("JSON","stringify"),H=D.f,J=S.f,Y=w.f,V=C.f,K=T("symbols"),$=T("op-symbols"),Q=T("string-to-symbol-registry"),Z=T("symbol-to-string-registry"),ee=T("wks"),te=i.QObject,re=!te||!te.prototype||!te.prototype.findChild,ne=s&&c((function(){return 7!=g(J({},"a",{get:function(){return J(this,"a",{value:7}).a}})).a}))?function(e,t,r){var n=H(X,t);n&&delete X[t],J(e,t,r),n&&e!==X&&J(X,t,n)}:J,ie=function(e,t){var r=K[e]=g(q.prototype);return U(r,{type:"Symbol",tag:e,description:t}),s||(r.description=t),r},oe=l?function(e){return"symbol"==typeof e}:function(e){return Object(e)instanceof q},ae=function(e,t,r){e===X&&ae($,t,r),d(e);var n=v(t,!0);return d(r),h(K,n)?(r.enumerable?(h(e,R)&&e[R][n]&&(e[R][n]=!1),r=g(r,{enumerable:_(0,!1)})):(h(e,R)||J(e,R,_(1,{})),e[R][n]=!0),ne(e,n,r)):J(e,n,r)},se=function(e,t){d(e);var r=y(t),n=b(r).concat(he(r));return j(n,(function(t){s&&!ue.call(r,t)||ae(e,t,r[t])})),e},ue=function(e){var t=v(e,!0),r=V.call(this,t);return!(this===X&&h(K,t)&&!h($,t))&&(!(r||!h(this,t)||!h(K,t)||h(this,R)&&this[R][t])||r)},le=function(e,t){var r=y(e),n=v(t,!0);if(r!==X||!h(K,n)||h($,n)){var i=H(r,n);return!i||!h(K,n)||h(r,R)&&r[R][n]||(i.enumerable=!0),i}},ce=function(e){var t=Y(y(e)),r=[];return j(t,(function(e){h(K,e)||h(F,e)||r.push(e)})),r},he=function(e){var t=e===X,r=Y(t?$:y(e)),n=[];return j(r,(function(e){!h(K,e)||t&&!h(X,e)||n.push(K[e])})),n};(u||(N((q=function(){if(this instanceof q)throw TypeError("Symbol is not a constructor");var e=arguments.length&&void 0!==arguments[0]?String(arguments[0]):void 0,t=k(e),r=function(e){this===X&&r.call($,e),h(this,R)&&h(this[R],t)&&(this[R][t]=!1),ne(this,t,_(1,e))};return s&&re&&ne(X,t,{configurable:!0,set:r}),ie(t,e)}).prototype,"toString",(function(){return G(this).tag})),N(q,"withoutSetter",(function(e){return ie(k(e),e)})),C.f=ue,S.f=ae,D.f=le,x.f=w.f=ce,E.f=he,I.f=function(e){return ie(P(e),e)},s&&(J(q.prototype,"description",{configurable:!0,get:function(){return G(this).description}}),a||N(X,"propertyIsEnumerable",ue,{unsafe:!0}))),n({global:!0,wrap:!0,forced:!u,sham:!u},{Symbol:q}),j(b(ee),(function(e){L(e)})),n({target:"Symbol",stat:!0,forced:!u},{for:function(e){var t=String(e);if(h(Q,t))return Q[t];var r=q(t);return Q[t]=r,Z[r]=t,r},keyFor:function(e){if(!oe(e))throw TypeError(e+" is not a symbol");if(h(Z,e))return Z[e]},useSetter:function(){re=!0},useSimple:function(){re=!1}}),n({target:"Object",stat:!0,forced:!u,sham:!s},{create:function(e,t){return void 0===t?g(e):se(g(e),t)},defineProperty:ae,defineProperties:se,getOwnPropertyDescriptor:le}),n({target:"Object",stat:!0,forced:!u},{getOwnPropertyNames:ce,getOwnPropertySymbols:he}),n({target:"Object",stat:!0,forced:c((function(){E.f(1)}))},{getOwnPropertySymbols:function(e){return E.f(m(e))}}),W)&&n({target:"JSON",stat:!0,forced:!u||c((function(){var e=q();return"[null]"!=W([e])||"{}"!=W({a:e})||"{}"!=W(Object(e))}))},{stringify:function(e,t,r){for(var n,i=[e],o=1;arguments.length>o;)i.push(arguments[o++]);if(n=t,(f(t)||void 0!==e)&&!oe(e))return p(t)||(t=function(e,t){if("function"==typeof n&&(t=n.call(this,e,t)),!oe(t))return t}),i[1]=t,W.apply(null,i)}});q.prototype[z]||A(q.prototype,z,q.prototype.valueOf),M(q,"Symbol"),F[R]=!0},function(e,t,r){"use strict";var n=r(4),i=r(16),o=r(11),a=r(14),s=r(13),u=r(15).f,l=r(119),c=o.Symbol;if(i&&"function"==typeof c&&(!("description"in c.prototype)||void 0!==c().description)){var h={},p=function(){var e=arguments.length<1||void 0===arguments[0]?void 0:String(arguments[0]),t=this instanceof p?new c(e):void 0===e?c():c(e);return""===e&&(h[t]=!0),t};l(p,c);var f=p.prototype=c.prototype;f.constructor=p;var d=f.toString,m="Symbol(test)"==String(c("test")),y=/^Symbol\((.*)\)[^)]+$/;u(f,"description",{configurable:!0,get:function(){var e=s(this)?this.valueOf():this,t=d.call(e);if(a(h,e))return"";var r=m?t.slice(7,-1):t.replace(y,"$1");return""===r?void 0:r}}),n({global:!0,forced:!0},{Symbol:p})}},function(e,t,r){r(126)("iterator")},function(e,t,r){"use strict";var n,i=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}),o=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,r=t&&e[t],n=0;if(r)return r.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(t,"__esModule",{value:!0});var a=r(6),s=r(2),u=r(70),l=r(3),c=r(9),h=r(0),p=r(152),f=r(12),d=function(e){function t(){var t=e.call(this)||this;return t._parent=null,t._firstChild=null,t._lastChild=null,t._previousSibling=null,t._nextSibling=null,t}return i(t,e),Object.defineProperty(t.prototype,"_childNodes",{get:function(){return this.__childNodes||(this.__childNodes=h.create_nodeList(this))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"_nodeDocument",{get:function(){return this._nodeDocumentOverride||a.dom.window._associatedDocument},set:function(e){this._nodeDocumentOverride=e},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"_registeredObserverList",{get:function(){return this.__registeredObserverList||(this.__registeredObserverList=[])},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"nodeType",{get:function(){return this._nodeType},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"nodeName",{get:function(){return l.Guard.isElementNode(this)?this._htmlUppercasedQualifiedName:l.Guard.isAttrNode(this)?this._qualifiedName:l.Guard.isExclusiveTextNode(this)?"#text":l.Guard.isCDATASectionNode(this)?"#cdata-section":l.Guard.isProcessingInstructionNode(this)?this._target:l.Guard.isCommentNode(this)?"#comment":l.Guard.isDocumentNode(this)?"#document":l.Guard.isDocumentTypeNode(this)?this._name:l.Guard.isDocumentFragmentNode(this)?"#document-fragment":""},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"baseURI",{get:function(){return p.urlSerializer(this._nodeDocument._URL)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"isConnected",{get:function(){return l.Guard.isElementNode(this)&&h.shadowTree_isConnected(this)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"ownerDocument",{get:function(){return this._nodeType===s.NodeType.Document?null:this._nodeDocument},enumerable:!0,configurable:!0}),t.prototype.getRootNode=function(e){return h.tree_rootNode(this,!!e&&e.composed)},Object.defineProperty(t.prototype,"parentNode",{get:function(){return this._nodeType===s.NodeType.Attribute?null:this._parent},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"parentElement",{get:function(){return this._parent&&l.Guard.isElementNode(this._parent)?this._parent:null},enumerable:!0,configurable:!0}),t.prototype.hasChildNodes=function(){return null!==this._firstChild},Object.defineProperty(t.prototype,"childNodes",{get:function(){return this._childNodes},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"firstChild",{get:function(){return this._firstChild},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"lastChild",{get:function(){return this._lastChild},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"previousSibling",{get:function(){return this._previousSibling},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"nextSibling",{get:function(){return this._nextSibling},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"nodeValue",{get:function(){return l.Guard.isAttrNode(this)?this._value:l.Guard.isCharacterDataNode(this)?this._data:null},set:function(e){null===e&&(e=""),l.Guard.isAttrNode(this)?h.attr_setAnExistingAttributeValue(this,e):l.Guard.isCharacterDataNode(this)&&h.characterData_replaceData(this,0,this._data.length,e)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"textContent",{get:function(){return l.Guard.isDocumentFragmentNode(this)||l.Guard.isElementNode(this)?h.text_descendantTextContent(this):l.Guard.isAttrNode(this)?this._value:l.Guard.isCharacterDataNode(this)?this._data:null},set:function(e){null===e&&(e=""),l.Guard.isDocumentFragmentNode(this)||l.Guard.isElementNode(this)?h.node_stringReplaceAll(e,this):l.Guard.isAttrNode(this)?h.attr_setAnExistingAttributeValue(this,e):l.Guard.isCharacterDataNode(this)&&h.characterData_replaceData(this,0,h.tree_nodeLength(this),e)},enumerable:!0,configurable:!0}),t.prototype.normalize=function(){for(var e,t,r,n,i=[],s=h.tree_getFirstDescendantNode(this,!1,!1,(function(e){return l.Guard.isExclusiveTextNode(e)}));null!==s;)i.push(s),s=h.tree_getNextDescendantNode(this,s,!1,!1,(function(e){return l.Guard.isExclusiveTextNode(e)}));for(var u=0;u<i.length;u++){var c=i[u];if(null!==c._parent){var p=h.tree_nodeLength(c);if(0!==p){var f=[],d="";try{for(var m=(e=void 0,o(h.text_contiguousExclusiveTextNodes(c))),y=m.next();!y.done;y=m.next()){var v=y.value;f.push(v),d+=v._data}}catch(t){e={error:t}}finally{try{y&&!y.done&&(t=m.return)&&t.call(m)}finally{if(e)throw e.error}}if(h.characterData_replaceData(c,p,0,d),0!==a.dom.rangeList.size)for(var _=c._nextSibling;null!==_&&l.Guard.isExclusiveTextNode(_);){var g=_,b=h.tree_index(g);try{for(var x=(r=void 0,o(a.dom.rangeList)),w=x.next();!w.done;w=x.next()){var E=w.value;E._start[0]===g&&(E._start[0]=c,E._start[1]+=p),E._end[0]===g&&(E._end[0]=c,E._end[1]+=p),E._start[0]===g._parent&&E._start[1]===b&&(E._start[0]=c,E._start[1]=p),E._end[0]===g._parent&&E._end[1]===b&&(E._end[0]=c,E._end[1]=p)}}catch(e){r={error:e}}finally{try{w&&!w.done&&(n=x.return)&&n.call(x)}finally{if(r)throw r.error}}p+=h.tree_nodeLength(_),_=_._nextSibling}for(var D=0;D<f.length;D++){null!==(v=f[D])._parent&&h.mutation_remove(v,v._parent)}}else h.mutation_remove(c,c._parent)}}},t.prototype.cloneNode=function(e){if(void 0===e&&(e=!1),l.Guard.isShadowRoot(this))throw new c.NotSupportedError;return h.node_clone(this,null,e)},t.prototype.isEqualNode=function(e){return void 0===e&&(e=null),null!==e&&h.node_equals(this,e)},t.prototype.isSameNode=function(e){return void 0===e&&(e=null),this===e},t.prototype.compareDocumentPosition=function(e){if(e===this)return 0;var t=e,r=this,n=null,i=null;if(l.Guard.isAttrNode(t)&&(t=(n=t)._element),l.Guard.isAttrNode(r)&&(r=(i=r)._element,n&&t&&t===r))for(var o=0;o<r._attributeList.length;o++){var u=r._attributeList[o];if(h.node_equals(u,n))return s.Position.ImplementationSpecific|s.Position.Preceding;if(h.node_equals(u,i))return s.Position.ImplementationSpecific|s.Position.Following}return null===t||null===r||h.tree_rootNode(t)!==h.tree_rootNode(r)?s.Position.Disconnected|s.Position.ImplementationSpecific|(a.dom.compareCache.check(this,e)?s.Position.Preceding:s.Position.Following):!n&&h.tree_isAncestorOf(r,t)||i&&t===r?s.Position.Contains|s.Position.Preceding:!i&&h.tree_isDescendantOf(r,t)||n&&t===r?s.Position.ContainedBy|s.Position.Following:h.tree_isPreceding(r,t)?s.Position.Preceding:s.Position.Following},t.prototype.contains=function(e){return null!==e&&h.tree_isDescendantOf(this,e,!0)},t.prototype.lookupPrefix=function(e){return e?l.Guard.isElementNode(this)?h.node_locateANamespacePrefix(this,e):l.Guard.isDocumentNode(this)?null===this.documentElement?null:h.node_locateANamespacePrefix(this.documentElement,e):l.Guard.isDocumentTypeNode(this)||l.Guard.isDocumentFragmentNode(this)?null:l.Guard.isAttrNode(this)?null===this._element?null:h.node_locateANamespacePrefix(this._element,e):null!==this._parent&&l.Guard.isElementNode(this._parent)?h.node_locateANamespacePrefix(this._parent,e):null:null},t.prototype.lookupNamespaceURI=function(e){return h.node_locateANamespace(this,e||null)},t.prototype.isDefaultNamespace=function(e){return e||(e=null),h.node_locateANamespace(this,null)===e},t.prototype.insertBefore=function(e,t){return h.mutation_preInsert(e,this,t)},t.prototype.appendChild=function(e){return h.mutation_append(e,this)},t.prototype.replaceChild=function(e,t){return h.mutation_replace(t,e,this)},t.prototype.removeChild=function(e){return h.mutation_preRemove(e,this)},t.prototype._getTheParent=function(e){return l.Guard.isSlotable(this)&&h.shadowTree_isAssigned(this)?this._assignedSlot:this._parent},t.ELEMENT_NODE=1,t.ATTRIBUTE_NODE=2,t.TEXT_NODE=3,t.CDATA_SECTION_NODE=4,t.ENTITY_REFERENCE_NODE=5,t.ENTITY_NODE=6,t.PROCESSING_INSTRUCTION_NODE=7,t.COMMENT_NODE=8,t.DOCUMENT_NODE=9,t.DOCUMENT_TYPE_NODE=10,t.DOCUMENT_FRAGMENT_NODE=11,t.NOTATION_NODE=12,t.DOCUMENT_POSITION_DISCONNECTED=1,t.DOCUMENT_POSITION_PRECEDING=2,t.DOCUMENT_POSITION_FOLLOWING=4,t.DOCUMENT_POSITION_CONTAINS=8,t.DOCUMENT_POSITION_CONTAINED_BY=16,t.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC=32,t}(u.EventTargetImpl);t.NodeImpl=d,d.prototype._children=new l.EmptySet,f.idl_defineConst(d.prototype,"ELEMENT_NODE",1),f.idl_defineConst(d.prototype,"ATTRIBUTE_NODE",2),f.idl_defineConst(d.prototype,"TEXT_NODE",3),f.idl_defineConst(d.prototype,"CDATA_SECTION_NODE",4),f.idl_defineConst(d.prototype,"ENTITY_REFERENCE_NODE",5),f.idl_defineConst(d.prototype,"ENTITY_NODE",6),f.idl_defineConst(d.prototype,"PROCESSING_INSTRUCTION_NODE",7),f.idl_defineConst(d.prototype,"COMMENT_NODE",8),f.idl_defineConst(d.prototype,"DOCUMENT_NODE",9),f.idl_defineConst(d.prototype,"DOCUMENT_TYPE_NODE",10),f.idl_defineConst(d.prototype,"DOCUMENT_FRAGMENT_NODE",11),f.idl_defineConst(d.prototype,"NOTATION_NODE",12),f.idl_defineConst(d.prototype,"DOCUMENT_POSITION_DISCONNECTED",1),f.idl_defineConst(d.prototype,"DOCUMENT_POSITION_PRECEDING",2),f.idl_defineConst(d.prototype,"DOCUMENT_POSITION_FOLLOWING",4),f.idl_defineConst(d.prototype,"DOCUMENT_POSITION_CONTAINS",8),f.idl_defineConst(d.prototype,"DOCUMENT_POSITION_CONTAINED_BY",16),f.idl_defineConst(d.prototype,"DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC",32)},function(e,t){e.exports=function(e){if(null==e)throw TypeError("Can't call method on "+e);return e}},function(e,t,r){var n=r(87),i=r(41),o=r(27),a=r(26),s=r(128),u=[].push,l=function(e){var t=1==e,r=2==e,l=3==e,c=4==e,h=6==e,p=5==e||h;return function(f,d,m,y){for(var v,_,g=o(f),b=i(g),x=n(d,m,3),w=a(b.length),E=0,D=y||s,S=t?D(f,w):r?D(f,0):void 0;w>E;E++)if((p||E in b)&&(_=x(v=b[E],E,g),e))if(t)S[E]=_;else if(_)switch(e){case 3:return!0;case 5:return v;case 6:return E;case 2:u.call(S,v)}else if(c)return!1;return h?-1:l||c?c:S}};e.exports={forEach:l(0),map:l(1),filter:l(2),some:l(3),every:l(4),find:l(5),findIndex:l(6)}},function(e,t,r){"use strict";var n=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,r=t&&e[t],n=0;if(r)return r.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")},i=this&&this.__read||function(e,t){var r="function"==typeof Symbol&&e[Symbol.iterator];if(!r)return e;var n,i,o=r.call(e),a=[];try{for(;(void 0===t||t-- >0)&&!(n=o.next()).done;)a.push(n.value)}catch(e){i={error:e}}finally{try{n&&!n.done&&(r=o.return)&&r.call(o)}finally{if(i)throw i.error}}return a},o=this&&this.__spread||function(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(i(arguments[t]));return e};Object.defineProperty(t,"__esModule",{value:!0});var a=r(6),s=r(9),u=r(2),l=r(3),c=r(1),h=r(7),p=r(73),f=r(17),d=r(172),m=r(72),y=r(51),v=r(30),_=r(106);function g(e,t,r){var i,o,a,l,c,h,p,d,m=t._nodeType,y=e._nodeType,v=r?r._nodeType:null;if(m!==u.NodeType.Document&&m!==u.NodeType.DocumentFragment&&m!==u.NodeType.Element)throw new s.HierarchyRequestError("Only document, document fragment and element nodes can contain child nodes. Parent node is "+t.nodeName+".");if(f.tree_isHostIncludingAncestorOf(t,e,!0))throw new s.HierarchyRequestError("The node to be inserted cannot be an inclusive ancestor of parent node. Node is "+e.nodeName+", parent node is "+t.nodeName+".");if(null!==r&&r._parent!==t)throw new s.NotFoundError("The reference child node cannot be found under parent node. Child node is "+r.nodeName+", parent node is "+t.nodeName+".");if(y!==u.NodeType.DocumentFragment&&y!==u.NodeType.DocumentType&&y!==u.NodeType.Element&&y!==u.NodeType.Text&&y!==u.NodeType.ProcessingInstruction&&y!==u.NodeType.CData&&y!==u.NodeType.Comment)throw new s.HierarchyRequestError("Only document fragment, document type, element, text, processing instruction, cdata section or comment nodes can be inserted. Node is "+e.nodeName+".");if(y===u.NodeType.Text&&m===u.NodeType.Document)throw new s.HierarchyRequestError("Cannot insert a text node as a child of a document node. Node is "+e.nodeName+".");if(y===u.NodeType.DocumentType&&m!==u.NodeType.Document)throw new s.HierarchyRequestError("A document type node can only be inserted under a document node. Parent node is "+t.nodeName+".");if(m===u.NodeType.Document)if(y===u.NodeType.DocumentFragment){var _=0;try{for(var g=n(e._children),b=g.next();!b.done;b=g.next()){var x=b.value;if(x._nodeType===u.NodeType.Element)_++;else if(x._nodeType===u.NodeType.Text)throw new s.HierarchyRequestError("Cannot insert text a node as a child of a document node. Node is "+x.nodeName+".")}}catch(e){i={error:e}}finally{try{b&&!b.done&&(o=g.return)&&o.call(g)}finally{if(i)throw i.error}}if(_>1)throw new s.HierarchyRequestError("A document node can only have one document element node. Document fragment to be inserted has "+_+" element nodes.");if(1===_){try{for(var w=n(t._children),E=w.next();!E.done;E=w.next()){if(E.value._nodeType===u.NodeType.Element)throw new s.HierarchyRequestError("The document node already has a document element node.")}}catch(e){a={error:e}}finally{try{E&&!E.done&&(l=w.return)&&l.call(w)}finally{if(a)throw a.error}}if(r){if(v===u.NodeType.DocumentType)throw new s.HierarchyRequestError("Cannot insert an element node before a document type node.");for(var D=r._nextSibling;D;){if(D._nodeType===u.NodeType.DocumentType)throw new s.HierarchyRequestError("Cannot insert an element node before a document type node.");D=D._nextSibling}}}}else if(y===u.NodeType.Element){try{for(var S=n(t._children),C=S.next();!C.done;C=S.next()){if(C.value._nodeType===u.NodeType.Element)throw new s.HierarchyRequestError("Document already has a document element node. Node is "+e.nodeName+".")}}catch(e){c={error:e}}finally{try{C&&!C.done&&(h=S.return)&&h.call(S)}finally{if(c)throw c.error}}if(r){if(v===u.NodeType.DocumentType)throw new s.HierarchyRequestError("Cannot insert an element node before a document type node. Node is "+e.nodeName+".");for(D=r._nextSibling;D;){if(D._nodeType===u.NodeType.DocumentType)throw new s.HierarchyRequestError("Cannot insert an element node before a document type node. Node is "+e.nodeName+".");D=D._nextSibling}}}else if(y===u.NodeType.DocumentType){try{for(var A=n(t._children),N=A.next();!N.done;N=A.next()){if(N.value._nodeType===u.NodeType.DocumentType)throw new s.HierarchyRequestError("Document already has a document type node. Node is "+e.nodeName+".")}}catch(e){p={error:e}}finally{try{N&&!N.done&&(d=A.return)&&d.call(A)}finally{if(p)throw p.error}}if(r)for(var T=r._previousSibling;T;){if(T._nodeType===u.NodeType.Element)throw new s.HierarchyRequestError("Cannot insert a document type node before an element node. Node is "+e.nodeName+".");T=T._previousSibling}else for(T=t._firstChild;T;){if(T._nodeType===u.NodeType.Element)throw new s.HierarchyRequestError("Cannot insert a document type node before an element node. Node is "+e.nodeName+".");T=T._nextSibling}}}function b(e,t,r){g(e,t,r);var n=r;return n===e&&(n=e._nextSibling),_.document_adopt(e,t._nodeDocument),x(e,t,n),e}function x(e,t,r,i){var s,d;if(null!==r||e._nodeType===u.NodeType.DocumentFragment){var _=e._nodeType===u.NodeType.DocumentFragment?e._children.size:1;if(null!==r&&0!==a.dom.rangeList.size){var g=f.tree_index(r);try{for(var b=n(a.dom.rangeList),x=b.next();!x.done;x=b.next()){var E=x.value;E._start[0]===t&&E._start[1]>g&&(E._start[1]+=_),E._end[0]===t&&E._end[1]>g&&(E._end[1]+=_)}}catch(e){s={error:e}}finally{try{x&&!x.done&&(d=b.return)&&d.call(b)}finally{if(s)throw s.error}}}var D=e._nodeType===u.NodeType.DocumentFragment?new(Array.bind.apply(Array,o([void 0],e._children))):[e];if(e._nodeType===u.NodeType.DocumentFragment)for(;e._firstChild;)w(e._firstChild,e,!0);a.dom.features.mutationObservers&&e._nodeType===u.NodeType.DocumentFragment&&y.observer_queueTreeMutationRecord(e,[],D,null,null);for(var S=r?r._previousSibling:t._lastChild,C=null===r?-1:f.tree_index(r),A=0;A<D.length;A++){var N=D[A];if(l.Guard.isElementNode(N)&&(l.Guard.isDocumentNode(t)&&(t._documentElement=N),N._nodeDocument._hasNamespaces||null===N._namespace&&null===N._namespacePrefix||(N._nodeDocument._hasNamespaces=!0)),N._parent=t,null===r?h.set.append(t._children,N):(h.set.insert(t._children,N,C),C++),null===t._firstChild)N._previousSibling=null,N._nextSibling=null,t._firstChild=N,t._lastChild=N;else{var T=r?r._previousSibling:t._lastChild,O=r||null;N._previousSibling=T,N._nextSibling=O,T&&(T._nextSibling=N),O&&(O._previousSibling=N),T||(t._firstChild=N),O||(t._lastChild=N)}a.dom.features.slots&&null!==t._shadowRoot&&l.Guard.isSlotable(N)&&m.shadowTree_assignASlot(N),a.dom.features.steps&&l.Guard.isTextNode(N)&&v.dom_runChildTextContentChangeSteps(t),a.dom.features.slots&&l.Guard.isShadowRoot(f.tree_rootNode(t))&&l.Guard.isSlot(t)&&c.isEmpty(t._assignedNodes)&&m.shadowTree_signalASlotChange(t),a.dom.features.slots&&m.shadowTree_assignSlotablesForATree(f.tree_rootNode(N));for(var F=f.tree_getFirstDescendantNode(N,!0,!0);null!==F;)a.dom.features.steps&&v.dom_runInsertionSteps(F),a.dom.features.customElements&&l.Guard.isElementNode(F)&&m.shadowTree_isConnected(F)&&(l.Guard.isCustomElementNode(F)?p.customElement_enqueueACustomElementCallbackReaction(F,"connectedCallback",[]):p.customElement_tryToUpgrade(F)),F=f.tree_getNextDescendantNode(N,F,!0,!0)}a.dom.features.mutationObservers&&(i||y.observer_queueTreeMutationRecord(t,D,[],S,r))}else!function(e,t,r){var n=t._lastChild;l.Guard.isElementNode(e)&&(l.Guard.isDocumentNode(t)&&(t._documentElement=e),e._nodeDocument._hasNamespaces||null===e._namespace&&null===e._namespacePrefix||(e._nodeDocument._hasNamespaces=!0));if(e._parent=t,t._children.add(e),null===t._firstChild)e._previousSibling=null,e._nextSibling=null,t._firstChild=e,t._lastChild=e;else{var i=t._lastChild;e._previousSibling=i,e._nextSibling=null,i&&(i._nextSibling=e),i||(t._firstChild=e),t._lastChild=e}a.dom.features.slots&&null!==t._shadowRoot&&l.Guard.isSlotable(e)&&m.shadowTree_assignASlot(e);a.dom.features.steps&&l.Guard.isTextNode(e)&&v.dom_runChildTextContentChangeSteps(t);a.dom.features.slots&&l.Guard.isShadowRoot(f.tree_rootNode(t))&&l.Guard.isSlot(t)&&c.isEmpty(t._assignedNodes)&&m.shadowTree_signalASlotChange(t);a.dom.features.slots&&m.shadowTree_assignSlotablesForATree(f.tree_rootNode(e));a.dom.features.steps&&v.dom_runInsertionSteps(e);a.dom.features.customElements&&l.Guard.isElementNode(e)&&m.shadowTree_isConnected(e)&&(l.Guard.isCustomElementNode(e)?p.customElement_enqueueACustomElementCallbackReaction(e,"connectedCallback",[]):p.customElement_tryToUpgrade(e));a.dom.features.mutationObservers&&(r||y.observer_queueTreeMutationRecord(t,[e],[],n,null))}(e,t,i)}function w(e,t,r){var i,o,s,u,h,_,g,b;if(0!==a.dom.rangeList.size){var x=f.tree_index(e);try{for(var w=n(a.dom.rangeList),E=w.next();!E.done;E=w.next()){var D=E.value;f.tree_isDescendantOf(e,D._start[0],!0)&&(D._start=[t,x]),f.tree_isDescendantOf(e,D._end[0],!0)&&(D._end=[t,x]),D._start[0]===t&&D._start[1]>x&&D._start[1]--,D._end[0]===t&&D._end[1]>x&&D._end[1]--}}catch(e){i={error:e}}finally{try{E&&!E.done&&(o=w.return)&&o.call(w)}finally{if(i)throw i.error}}try{for(var S=n(a.dom.rangeList),C=S.next();!C.done;C=S.next()){(D=C.value)._start[0]===t&&D._start[1]>x&&(D._start[1]-=1),D._end[0]===t&&D._end[1]>x&&(D._end[1]-=1)}}catch(e){s={error:e}}finally{try{C&&!C.done&&(u=S.return)&&u.call(S)}finally{if(s)throw s.error}}}if(a.dom.features.steps)try{for(var A=n(d.nodeIterator_iteratorList()),N=A.next();!N.done;N=A.next()){var T=N.value;T._root._nodeDocument===e._nodeDocument&&v.dom_runNodeIteratorPreRemovingSteps(T,e)}}catch(e){h={error:e}}finally{try{N&&!N.done&&(_=A.return)&&_.call(A)}finally{if(h)throw h.error}}var O=e._previousSibling,F=e._nextSibling;l.Guard.isDocumentNode(t)&&l.Guard.isElementNode(e)&&(t._documentElement=null),e._parent=null,t._children.delete(e);var k=e._previousSibling,P=e._nextSibling;(e._previousSibling=null,e._nextSibling=null,k&&(k._nextSibling=P),P&&(P._previousSibling=k),k||(t._firstChild=P),P||(t._lastChild=k),a.dom.features.slots&&l.Guard.isSlotable(e)&&null!==e._assignedSlot&&m.shadowTree_isAssigned(e)&&m.shadowTree_assignSlotables(e._assignedSlot),a.dom.features.slots&&l.Guard.isShadowRoot(f.tree_rootNode(t))&&l.Guard.isSlot(t)&&c.isEmpty(t._assignedNodes)&&m.shadowTree_signalASlotChange(t),a.dom.features.slots)&&(null!==f.tree_getFirstDescendantNode(e,!0,!1,(function(e){return l.Guard.isSlot(e)}))&&(m.shadowTree_assignSlotablesForATree(f.tree_rootNode(t)),m.shadowTree_assignSlotablesForATree(e)));a.dom.features.steps&&v.dom_runRemovingSteps(e,t),a.dom.features.customElements&&l.Guard.isCustomElementNode(e)&&p.customElement_enqueueACustomElementCallbackReaction(e,"disconnectedCallback",[]);for(var I=f.tree_getFirstDescendantNode(e,!1,!0);null!==I;)a.dom.features.steps&&v.dom_runRemovingSteps(I,e),a.dom.features.customElements&&l.Guard.isCustomElementNode(I)&&p.customElement_enqueueACustomElementCallbackReaction(I,"disconnectedCallback",[]),I=f.tree_getNextDescendantNode(e,I,!1,!0);if(a.dom.features.mutationObservers)for(var L=f.tree_getFirstAncestorNode(t,!0);null!==L;){try{for(var M=(g=void 0,n(L._registeredObserverList)),B=M.next();!B.done;B=M.next()){var j=B.value;j.options.subtree&&e._registeredObserverList.push({observer:j.observer,options:j.options,source:j})}}catch(e){g={error:e}}finally{try{B&&!B.done&&(b=M.return)&&b.call(M)}finally{if(g)throw g.error}}L=f.tree_getNextAncestorNode(t,L,!0)}a.dom.features.mutationObservers&&(r||y.observer_queueTreeMutationRecord(t,[],[e],O,F)),a.dom.features.steps&&l.Guard.isTextNode(e)&&v.dom_runChildTextContentChangeSteps(t)}t.mutation_ensurePreInsertionValidity=g,t.mutation_preInsert=b,t.mutation_insert=x,t.mutation_append=function(e,t){return b(e,t,null)},t.mutation_replace=function(e,t,r){var i,o,l,c,h,p,d,m;if(r._nodeType!==u.NodeType.Document&&r._nodeType!==u.NodeType.DocumentFragment&&r._nodeType!==u.NodeType.Element)throw new s.HierarchyRequestError("Only document, document fragment and element nodes can contain child nodes. Parent node is "+r.nodeName+".");if(f.tree_isHostIncludingAncestorOf(r,t,!0))throw new s.HierarchyRequestError("The node to be inserted cannot be an ancestor of parent node. Node is "+t.nodeName+", parent node is "+r.nodeName+".");if(e._parent!==r)throw new s.NotFoundError("The reference child node cannot be found under parent node. Child node is "+e.nodeName+", parent node is "+r.nodeName+".");if(t._nodeType!==u.NodeType.DocumentFragment&&t._nodeType!==u.NodeType.DocumentType&&t._nodeType!==u.NodeType.Element&&t._nodeType!==u.NodeType.Text&&t._nodeType!==u.NodeType.ProcessingInstruction&&t._nodeType!==u.NodeType.CData&&t._nodeType!==u.NodeType.Comment)throw new s.HierarchyRequestError("Only document fragment, document type, element, text, processing instruction, cdata section or comment nodes can be inserted. Node is "+t.nodeName+".");if(t._nodeType===u.NodeType.Text&&r._nodeType===u.NodeType.Document)throw new s.HierarchyRequestError("Cannot insert a text node as a child of a document node. Node is "+t.nodeName+".");if(t._nodeType===u.NodeType.DocumentType&&r._nodeType!==u.NodeType.Document)throw new s.HierarchyRequestError("A document type node can only be inserted under a document node. Parent node is "+r.nodeName+".");if(r._nodeType===u.NodeType.Document)if(t._nodeType===u.NodeType.DocumentFragment){var v=0;try{for(var g=n(t._children),b=g.next();!b.done;b=g.next()){var E=b.value;if(E._nodeType===u.NodeType.Element)v++;else if(E._nodeType===u.NodeType.Text)throw new s.HierarchyRequestError("Cannot insert text a node as a child of a document node. Node is "+E.nodeName+".")}}catch(e){i={error:e}}finally{try{b&&!b.done&&(o=g.return)&&o.call(g)}finally{if(i)throw i.error}}if(v>1)throw new s.HierarchyRequestError("A document node can only have one document element node. Document fragment to be inserted has "+v+" element nodes.");if(1===v){try{for(var D=n(r._children),S=D.next();!S.done;S=D.next()){if((F=S.value)._nodeType===u.NodeType.Element&&F!==e)throw new s.HierarchyRequestError("The document node already has a document element node.")}}catch(e){l={error:e}}finally{try{S&&!S.done&&(c=D.return)&&c.call(D)}finally{if(l)throw l.error}}for(var C=e._nextSibling;C;){if(C._nodeType===u.NodeType.DocumentType)throw new s.HierarchyRequestError("Cannot insert an element node before a document type node.");C=C._nextSibling}}}else if(t._nodeType===u.NodeType.Element){try{for(var A=n(r._children),N=A.next();!N.done;N=A.next()){if((F=N.value)._nodeType===u.NodeType.Element&&F!==e)throw new s.HierarchyRequestError("Document already has a document element node. Node is "+t.nodeName+".")}}catch(e){h={error:e}}finally{try{N&&!N.done&&(p=A.return)&&p.call(A)}finally{if(h)throw h.error}}for(C=e._nextSibling;C;){if(C._nodeType===u.NodeType.DocumentType)throw new s.HierarchyRequestError("Cannot insert an element node before a document type node. Node is "+t.nodeName+".");C=C._nextSibling}}else if(t._nodeType===u.NodeType.DocumentType){try{for(var T=n(r._children),O=T.next();!O.done;O=T.next()){var F;if((F=O.value)._nodeType===u.NodeType.DocumentType&&F!==e)throw new s.HierarchyRequestError("Document already has a document type node. Node is "+t.nodeName+".")}}catch(e){d={error:e}}finally{try{O&&!O.done&&(m=T.return)&&m.call(T)}finally{if(d)throw d.error}}for(var k=e._previousSibling;k;){if(k._nodeType===u.NodeType.Element)throw new s.HierarchyRequestError("Cannot insert a document type node before an element node. Node is "+t.nodeName+".");k=k._previousSibling}}var P=e._nextSibling;P===t&&(P=t._nextSibling);var I=e._previousSibling;_.document_adopt(t,r._nodeDocument);var L=[];null!==e._parent&&(L.push(e),w(e,e._parent,!0));var M=[];return t._nodeType===u.NodeType.DocumentFragment?M=Array.from(t._children):M.push(t),x(t,r,P,!0),a.dom.features.mutationObservers&&y.observer_queueTreeMutationRecord(r,M,L,I,P),e},t.mutation_replaceAll=function(e,t){var r,i;null!==e&&_.document_adopt(e,t._nodeDocument);var o=Array.from(t._children),s=[];e&&e._nodeType===u.NodeType.DocumentFragment?s=Array.from(e._children):null!==e&&s.push(e);try{for(var l=n(o),c=l.next();!c.done;c=l.next()){w(c.value,t,!0)}}catch(e){r={error:e}}finally{try{c&&!c.done&&(i=l.return)&&i.call(l)}finally{if(r)throw r.error}}null!==e&&x(e,t,null,!0),a.dom.features.mutationObservers&&y.observer_queueTreeMutationRecord(t,s,o,null,null)},t.mutation_preRemove=function(e,t){if(e._parent!==t)throw new s.NotFoundError("The child node cannot be found under parent node. Child node is "+e.nodeName+", parent node is "+t.nodeName+".");return w(e,t),e},t.mutation_remove=w},function(e,t,r){"use strict";function n(e){return null==e}e.exports.isNothing=n,e.exports.isObject=function(e){return"object"==typeof e&&null!==e},e.exports.toArray=function(e){return Array.isArray(e)?e:n(e)?[]:[e]},e.exports.repeat=function(e,t){var r,n="";for(r=0;r<t;r+=1)n+=e;return n},e.exports.isNegativeZero=function(e){return 0===e&&Number.NEGATIVE_INFINITY===1/e},e.exports.extend=function(e,t){var r,n,i,o;if(t)for(r=0,n=(o=Object.keys(t)).length;r<n;r+=1)e[i=o[r]]=t[i];return e}},function(e,t,r){"use strict";var n=r(38),i=r(53),o=r(10);function a(e,t,r){var n=[];return e.include.forEach((function(e){r=a(e,t,r)})),e[t].forEach((function(e){r.forEach((function(t,r){t.tag===e.tag&&t.kind===e.kind&&n.push(r)})),r.push(e)})),r.filter((function(e,t){return-1===n.indexOf(t)}))}function s(e){this.include=e.include||[],this.implicit=e.implicit||[],this.explicit=e.explicit||[],this.implicit.forEach((function(e){if(e.loadKind&&"scalar"!==e.loadKind)throw new i("There is a non-scalar type in the implicit list of a schema. Implicit resolving of such types is not supported.")})),this.compiledImplicit=a(this,"implicit",[]),this.compiledExplicit=a(this,"explicit",[]),this.compiledTypeMap=function(){var e,t,r={scalar:{},sequence:{},mapping:{},fallback:{}};function n(e){r[e.kind][e.tag]=r.fallback[e.tag]=e}for(e=0,t=arguments.length;e<t;e+=1)arguments[e].forEach(n);return r}(this.compiledImplicit,this.compiledExplicit)}s.DEFAULT=null,s.create=function(){var e,t;switch(arguments.length){case 1:e=s.DEFAULT,t=arguments[0];break;case 2:e=arguments[0],t=arguments[1];break;default:throw new i("Wrong number of arguments for Schema.create function")}if(e=n.toArray(e),t=n.toArray(t),!e.every((function(e){return e instanceof s})))throw new i("Specified list of super schemas (or a single Schema object) contains a non-Schema object.");if(!t.every((function(e){return e instanceof o})))throw new i("Specified list of YAML types (or a single Type object) contains a non-Type object.");return new s({include:e,explicit:t})},e.exports=s},function(e,t){e.exports=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}},function(e,t,r){var n=r(8),i=r(42),o="".split;e.exports=n((function(){return!Object("z").propertyIsEnumerable(0)}))?function(e){return"String"==i(e)?o.call(e,""):Object(e)}:Object},function(e,t){var r={}.toString;e.exports=function(e){return r.call(e).slice(8,-1)}},function(e,t,r){var n,i,o,a=r(186),s=r(11),u=r(13),l=r(21),c=r(14),h=r(57),p=r(45),f=s.WeakMap;if(a){var d=new f,m=d.get,y=d.has,v=d.set;n=function(e,t){return v.call(d,e,t),t},i=function(e){return m.call(d,e)||{}},o=function(e){return y.call(d,e)}}else{var _=h("state");p[_]=!0,n=function(e,t){return l(e,_,t),t},i=function(e){return c(e,_)?e[_]:{}},o=function(e){return c(e,_)}}e.exports={set:n,get:i,has:o,enforce:function(e){return o(e)?i(e):n(e,{})},getterFor:function(e){return function(t){var r;if(!u(t)||(r=i(t)).type!==e)throw TypeError("Incompatible receiver, "+e+" required");return r}}}},function(e,t){e.exports=!1},function(e,t){e.exports={}},function(e,t,r){var n=r(120),i=r(11),o=function(e){return"function"==typeof e?e:void 0};e.exports=function(e,t){return arguments.length<2?o(n[e])||o(i[e]):n[e]&&n[e][t]||i[e]&&i[e][t]}},function(e,t){var r=Math.ceil,n=Math.floor;e.exports=function(e){return isNaN(e=+e)?0:(e>0?n:r)(e)}},function(e,t,r){"use strict";var n=r(8);e.exports=function(e,t){var r=[][e];return!!r&&n((function(){r.call(null,t||function(){throw 1},1)}))}},function(e,t){e.exports={}},function(e,t,r){"use strict";r(31),r(32),r(33),r(220),r(64),r(19),r(65),r(20),r(68),r(66),r(92),r(144),r(22),r(94),r(23);var n=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,r=t&&e[t],n=0;if(r)return r.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")},i=this&&this.__read||function(e,t){var r="function"==typeof Symbol&&e[Symbol.iterator];if(!r)return e;var n,i,o=r.call(e),a=[];try{for(;(void 0===t||t-- >0)&&!(n=o.next()).done;)a.push(n.value)}catch(e){i={error:e}}finally{try{n&&!n.done&&(r=o.return)&&r.call(o)}finally{if(i)throw i.error}}return a},o=this&&this.__spread||function(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(i(arguments[t]));return e};Object.defineProperty(t,"__esModule",{value:!0});var a=r(2),s=r(69),u=r(95),l=r(7),c=r(0),h=function(){function e(e){this.level=0,this._builderOptions=e}return e.prototype.declaration=function(e,t,r){},e.prototype.docType=function(e,t,r){},e.prototype.comment=function(e){},e.prototype.text=function(e){},e.prototype.instruction=function(e,t){},e.prototype.cdata=function(e){},e.prototype.openTagBegin=function(e){},e.prototype.openTagEnd=function(e,t,r){},e.prototype.closeTag=function(e){},e.prototype.attributes=function(e){var t,r;try{for(var i=n(e),o=i.next();!o.done;o=i.next()){var a=o.value;this.attribute(null===a[1]?a[2]:a[1]+":"+a[2],a[3])}}catch(e){t={error:e}}finally{try{o&&!o.done&&(r=i.return)&&r.call(i)}finally{if(t)throw t.error}}},e.prototype.attribute=function(e,t){},e.prototype.beginElement=function(e){},e.prototype.endElement=function(e){},e.prototype.serializeNode=function(e,t){var r=void 0!==e._nodeDocument&&e._nodeDocument._hasNamespaces;if(this.level=0,this.currentNode=e,r){var n=new u.NamespacePrefixMap;n.set("xml",l.namespace.XML);this._serializeNodeNS(e,null,n,{value:1},t)}else this._serializeNode(e,t)},e.prototype._serializeNodeNS=function(e,t,r,n,i){switch(this.currentNode=e,e.nodeType){case a.NodeType.Element:this._serializeElementNS(e,t,r,n,i);break;case a.NodeType.Document:this._serializeDocumentNS(e,t,r,n,i);break;case a.NodeType.Comment:this._serializeComment(e,i);break;case a.NodeType.Text:this._serializeText(e,i);break;case a.NodeType.DocumentFragment:this._serializeDocumentFragmentNS(e,t,r,n,i);break;case a.NodeType.DocumentType:this._serializeDocumentType(e,i);break;case a.NodeType.ProcessingInstruction:this._serializeProcessingInstruction(e,i);break;case a.NodeType.CData:this._serializeCData(e,i);break;default:throw new Error("Unknown node type: "+e.nodeType)}},e.prototype._serializeNode=function(e,t){switch(this.currentNode=e,e.nodeType){case a.NodeType.Element:this._serializeElement(e,t);break;case a.NodeType.Document:this._serializeDocument(e,t);break;case a.NodeType.Comment:this._serializeComment(e,t);break;case a.NodeType.Text:this._serializeText(e,t);break;case a.NodeType.DocumentFragment:this._serializeDocumentFragment(e,t);break;case a.NodeType.DocumentType:this._serializeDocumentType(e,t);break;case a.NodeType.ProcessingInstruction:this._serializeProcessingInstruction(e,t);break;case a.NodeType.CData:this._serializeCData(e,t);break;default:throw new Error("Unknown node type: "+e.nodeType)}},e.prototype._serializeElementNS=function(t,r,i,a,s){var u,h,p=[];if(s&&(-1!==t.localName.indexOf(":")||!c.xml_isName(t.localName)))throw new Error("Node local name contains invalid characters (well-formed required).");var f="",d=!1,m=!1,y=i.copy(),v={},_=this._recordNamespaceInformation(t,y,v),g=r,b=t.namespaceURI;if(g===b)null!==_&&(m=!0),f=b===l.namespace.XML?"xml:"+t.localName:t.localName,this.beginElement(f),this.openTagBegin(f);else{var x=t.prefix,w=null;if(null===x&&b===_||(w=y.get(x,b)),"xmlns"===x){if(s)throw new Error("An element cannot have the 'xmlns' prefix (well-formed required).");w=x}null!==w?(f=w+":"+t.localName,null!==_&&_!==l.namespace.XML&&(g=_||null),this.beginElement(f),this.openTagBegin(f)):null!==x?(x in v&&(x=this._generatePrefix(b,y,a)),y.set(x,b),f+=x+":"+t.localName,this.beginElement(f),this.openTagBegin(f),p.push([null,"xmlns",x,this._serializeAttributeValue(b,s)]),null!==_&&(g=_||null)):null===_||null!==_&&_!==b?(m=!0,f+=t.localName,g=b,this.beginElement(f),this.openTagBegin(f),p.push([null,null,"xmlns",this._serializeAttributeValue(b,s)])):(f+=t.localName,g=b,this.beginElement(f),this.openTagBegin(f))}p.push.apply(p,o(this._serializeAttributesNS(t,y,a,v,m,s))),this.attributes(p);var E=b===l.namespace.HTML;if(E&&0===t.childNodes.length&&e._VoidElementNames.has(t.localName)?(this.openTagEnd(f,!0,!0),this.endElement(f),d=!0):E||0!==t.childNodes.length?this.openTagEnd(f,!1,!1):(this.openTagEnd(f,!0,!1),this.endElement(f),d=!0),!d){if(E&&"template"===t.localName);else try{for(var D=n(t.childNodes),S=D.next();!S.done;S=D.next()){var C=S.value;this.level++,this._serializeNodeNS(C,g,y,a,s),this.level--}}catch(e){u={error:e}}finally{try{S&&!S.done&&(h=D.return)&&h.call(D)}finally{if(u)throw u.error}}this.closeTag(f),this.endElement(f)}},e.prototype._serializeElement=function(e,t){var r,i;if(t&&(-1!==e.localName.indexOf(":")||!c.xml_isName(e.localName)))throw new Error("Node local name contains invalid characters (well-formed required).");var o=!1,a=e.localName;this.beginElement(a),this.openTagBegin(a);var s=this._serializeAttributes(e,t);if(this.attributes(s),e.hasChildNodes()?this.openTagEnd(a,!1,!1):(this.openTagEnd(a,!0,!1),this.endElement(a),o=!0),!o){try{for(var u=n(e._children),l=u.next();!l.done;l=u.next()){var h=l.value;this.level++,this._serializeNode(h,t),this.level--}}catch(e){r={error:e}}finally{try{l&&!l.done&&(i=u.return)&&i.call(u)}finally{if(r)throw r.error}}this.closeTag(a),this.endElement(a)}},e.prototype._serializeDocumentNS=function(e,t,r,i,o){var a,s;if(o&&null===e.documentElement)throw new Error("Missing document element (well-formed required).");try{for(var u=n(e.childNodes),l=u.next();!l.done;l=u.next()){var c=l.value;this._serializeNodeNS(c,t,r,i,o)}}catch(e){a={error:e}}finally{try{l&&!l.done&&(s=u.return)&&s.call(u)}finally{if(a)throw a.error}}},e.prototype._serializeDocument=function(e,t){var r,i;if(t&&null===e.documentElement)throw new Error("Missing document element (well-formed required).");try{for(var o=n(e._children),a=o.next();!a.done;a=o.next()){var s=a.value;this._serializeNode(s,t)}}catch(e){r={error:e}}finally{try{a&&!a.done&&(i=o.return)&&i.call(o)}finally{if(r)throw r.error}}},e.prototype._serializeComment=function(e,t){if(t&&(!c.xml_isLegalChar(e.data)||-1!==e.data.indexOf("--")||e.data.endsWith("-")))throw new Error("Comment data contains invalid characters (well-formed required).");this.comment(e.data)},e.prototype._serializeText=function(e,t){if(t&&!c.xml_isLegalChar(e.data))throw new Error("Text data contains invalid characters (well-formed required).");var r=e.data.replace(/(?!&([^&;]*);)&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;");this.text(r)},e.prototype._serializeDocumentFragmentNS=function(e,t,r,i,o){var a,s;try{for(var u=n(e.childNodes),l=u.next();!l.done;l=u.next()){var c=l.value;this._serializeNodeNS(c,t,r,i,o)}}catch(e){a={error:e}}finally{try{l&&!l.done&&(s=u.return)&&s.call(u)}finally{if(a)throw a.error}}},e.prototype._serializeDocumentFragment=function(e,t){var r,i;try{for(var o=n(e._children),a=o.next();!a.done;a=o.next()){var s=a.value;this._serializeNode(s,t)}}catch(e){r={error:e}}finally{try{a&&!a.done&&(i=o.return)&&i.call(o)}finally{if(r)throw r.error}}},e.prototype._serializeDocumentType=function(e,t){if(t&&!c.xml_isPubidChar(e.publicId))throw new Error("DocType public identifier does not match PubidChar construct (well-formed required).");if(t&&(!c.xml_isLegalChar(e.systemId)||-1!==e.systemId.indexOf('"')&&-1!==e.systemId.indexOf("'")))throw new Error("DocType system identifier contains invalid characters (well-formed required).");this.docType(e.name,e.publicId,e.systemId)},e.prototype._serializeProcessingInstruction=function(e,t){if(t&&(-1!==e.target.indexOf(":")||/^xml$/i.test(e.target)))throw new Error("Processing instruction target contains invalid characters (well-formed required).");if(t&&(!c.xml_isLegalChar(e.data)||-1!==e.data.indexOf("?>")))throw new Error("Processing instruction data contains invalid characters (well-formed required).");this.instruction(e.target,e.data)},e.prototype._serializeCData=function(e,t){if(t&&-1!==e.data.indexOf("]]>"))throw new Error("CDATA contains invalid characters (well-formed required).");this.cdata(e.data)},e.prototype._serializeAttributesNS=function(e,t,r,i,o,a){var u,h,p=[],f=a?new s.LocalNameSet:void 0;try{for(var d=n(e.attributes),m=d.next();!m.done;m=d.next()){var y=m.value;if(a||o||null!==y.namespaceURI){if(a&&f&&f.has(y.namespaceURI,y.localName))throw new Error("Element contains duplicate attributes (well-formed required).");a&&f&&f.set(y.namespaceURI,y.localName);var v=y.namespaceURI,_=null;if(null!==v)if(_=t.get(y.prefix,v),v===l.namespace.XMLNS){if(y.value===l.namespace.XML||null===y.prefix&&o||null!==y.prefix&&(!(y.localName in i)||i[y.localName]!==y.value)&&t.has(y.localName,y.value))continue;if(a&&y.value===l.namespace.XMLNS)throw new Error("XMLNS namespace is reserved (well-formed required).");if(a&&""===y.value)throw new Error("Namespace prefix declarations cannot be used to undeclare a namespace (well-formed required).");"xmlns"===y.prefix&&(_="xmlns")}else null===_&&(_=null===y.prefix||t.hasPrefix(y.prefix)&&!t.has(y.prefix,v)?this._generatePrefix(v,t,r):y.prefix,p.push([null,"xmlns",_,this._serializeAttributeValue(v,a)]));if(null!==_&&_,a&&(-1!==y.localName.indexOf(":")||!c.xml_isName(y.localName)||"xmlns"===y.localName&&null===v))throw new Error("Attribute local name contains invalid characters (well-formed required).");p.push([v,_,y.localName,this._serializeAttributeValue(y.value,a)])}else p.push([null,null,y.localName,this._serializeAttributeValue(y.value,a)])}}catch(e){u={error:e}}finally{try{m&&!m.done&&(h=d.return)&&h.call(d)}finally{if(u)throw u.error}}return p},e.prototype._serializeAttributes=function(e,t){var r,i,o=[],a=t?{}:void 0;try{for(var s=n(e.attributes),u=s.next();!u.done;u=s.next()){var l=u.value;if(t){if(t&&a&&l.localName in a)throw new Error("Element contains duplicate attributes (well-formed required).");if(t&&a&&(a[l.localName]=!0),t&&(-1!==l.localName.indexOf(":")||!c.xml_isName(l.localName)))throw new Error("Attribute local name contains invalid characters (well-formed required).");o.push([null,null,l.localName,this._serializeAttributeValue(l.value,t)])}else o.push([null,null,l.localName,this._serializeAttributeValue(l.value,t)])}}catch(e){r={error:e}}finally{try{u&&!u.done&&(i=s.return)&&i.call(s)}finally{if(r)throw r.error}}return o},e.prototype._recordNamespaceInformation=function(e,t,r){var i,o,a=null;try{for(var s=n(e.attributes),u=s.next();!u.done;u=s.next()){var c=u.value,h=c.namespaceURI,p=c.prefix;if(h===l.namespace.XMLNS){if(null===p){a=c.value;continue}var f=c.localName,d=c.value;if(d===l.namespace.XML)continue;if(""===d&&(d=null),t.has(f,d))continue;t.set(f,d),r[f]=d||""}}}catch(e){i={error:e}}finally{try{u&&!u.done&&(o=s.return)&&o.call(s)}finally{if(i)throw i.error}}return a},e.prototype._generatePrefix=function(e,t,r){var n="ns"+r.value.toString();return r.value++,t.set(n,e),n},e.prototype._serializeAttributeValue=function(e,t){if(t&&null!==e&&!c.xml_isLegalChar(e))throw new Error("Invalid characters in attribute value.");return null===e?"":e.replace(/(?!&([^&;]*);)&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;")},e._VoidElementNames=new Set(["area","base","basefont","bgsound","br","col","embed","frame","hr","img","input","keygen","link","menuitem","meta","param","source","track","wbr"]),e}();t.BaseWriter=h},function(e,t,r){"use strict";var n=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,r=t&&e[t],n=0;if(r)return r.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")},i=this&&this.__read||function(e,t){var r="function"==typeof Symbol&&e[Symbol.iterator];if(!r)return e;var n,i,o=r.call(e),a=[];try{for(;(void 0===t||t-- >0)&&!(n=o.next()).done;)a.push(n.value)}catch(e){i={error:e}}finally{try{n&&!n.done&&(r=o.return)&&r.call(o)}finally{if(i)throw i.error}}return a};Object.defineProperty(t,"__esModule",{value:!0});var o=r(6),a=r(3),s=r(7),u=r(29),l=r(17),c=r(97);function h(){var e=o.dom.window;e._mutationObserverMicrotaskQueued||(e._mutationObserverMicrotaskQueued=!0,Promise.resolve().then((function(){p()})))}function p(){var e,t,r,i,u=o.dom.window;u._mutationObserverMicrotaskQueued=!1;var l=s.set.clone(u._mutationObservers),h=s.set.clone(u._signalSlots);s.set.empty(u._signalSlots);var p=function(e){var t=s.list.clone(e._recordQueue);s.list.empty(e._recordQueue);for(var r=0;r<e._nodeList.length;r++){var n=e._nodeList[r];s.list.remove(n._registeredObserverList,(function(t){return a.Guard.isTransientRegisteredObserver(t)&&t.observer===e}))}if(!s.list.isEmpty(t))try{e._callback.call(e,t,e)}catch(e){}};try{for(var f=n(l),d=f.next();!d.done;d=f.next()){p(d.value)}}catch(t){e={error:t}}finally{try{d&&!d.done&&(t=f.return)&&t.call(f)}finally{if(e)throw e.error}}if(o.dom.features.slots)try{for(var m=n(h),y=m.next();!y.done;y=m.next()){var v=y.value;c.event_fireAnEvent("slotchange",v,void 0,{bubbles:!0})}}catch(e){r={error:e}}finally{try{y&&!y.done&&(i=m.return)&&i.call(m)}finally{if(r)throw r.error}}}function f(e,t,r,o,a,s,c,p,f){for(var d,m,y=new Map,v=l.tree_getFirstAncestorNode(t,!0);null!==v;){for(var _=0;_<v._registeredObserverList.length;_++){var g=v._registeredObserverList[_],b=g.options;if((v===t||b.subtree)&&(("attributes"!==e||b.attributes)&&("attributes"!==e||!b.attributeFilter||b.attributeFilter.indexOf(r||"")&&null===o)&&("characterData"!==e||b.characterData)&&("childList"!==e||b.childList))){var x=g.observer;y.has(x)||y.set(x,null),("attributes"===e&&b.attributeOldValue||"characterData"===e&&b.characterDataOldValue)&&y.set(x,a)}}v=l.tree_getNextAncestorNode(t,v,!0)}try{for(var w=n(y),E=w.next();!E.done;E=w.next()){var D=i(E.value,2),S=D[0],C=D[1],A=u.create_mutationRecord(e,t,u.create_nodeListStatic(t,s),u.create_nodeListStatic(t,c),p,f,r,o,C);S._recordQueue.push(A)}}catch(e){d={error:e}}finally{try{E&&!E.done&&(m=w.return)&&m.call(w)}finally{if(d)throw d.error}}h()}t.observer_queueAMutationObserverMicrotask=h,t.observer_notifyMutationObservers=p,t.observer_queueMutationRecord=f,t.observer_queueTreeMutationRecord=function(e,t,r,n,i){f("childList",e,null,null,null,t,r,n,i)},t.observer_queueAttributeMutationRecord=function(e,t,r,n){f("attributes",e,t,r,n,[],[],null,null)}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(6),i=r(7),o=r(3),a=r(9),s=r(29),u=r(73),l=r(51),c=r(30),h=r(37),p=r(106);function f(e,t,r){n.dom.features.mutationObservers&&l.observer_queueAttributeMutationRecord(t,e._localName,e._namespace,e._value),n.dom.features.customElements&&o.Guard.isCustomElementNode(t)&&u.customElement_enqueueACustomElementCallbackReaction(t,"attributeChangedCallback",[e._localName,e._value,r,e._namespace]),n.dom.features.steps&&c.dom_runAttributeChangeSteps(t,e._localName,e._value,r,e._namespace),e._value=r}function d(e,t){n.dom.features.mutationObservers&&l.observer_queueAttributeMutationRecord(t,e._localName,e._namespace,null),n.dom.features.customElements&&o.Guard.isCustomElementNode(t)&&u.customElement_enqueueACustomElementCallbackReaction(t,"attributeChangedCallback",[e._localName,null,e._value,e._namespace]),n.dom.features.steps&&c.dom_runAttributeChangeSteps(t,e._localName,null,e._value,e._namespace),t._attributeList._asArray().push(e),e._element=t,t._nodeDocument._hasNamespaces||null===e._namespace&&null===e._namespacePrefix&&"xmlns"!==e._localName||(t._nodeDocument._hasNamespaces=!0)}function m(e,t){n.dom.features.mutationObservers&&l.observer_queueAttributeMutationRecord(t,e._localName,e._namespace,e._value),n.dom.features.customElements&&o.Guard.isCustomElementNode(t)&&u.customElement_enqueueACustomElementCallbackReaction(t,"attributeChangedCallback",[e._localName,e._value,null,e._namespace]),n.dom.features.steps&&c.dom_runAttributeChangeSteps(t,e._localName,e._value,null,e._namespace);var r=t._attributeList._asArray().indexOf(e);t._attributeList._asArray().splice(r,1),e._element=null}function y(e,t,r){n.dom.features.mutationObservers&&l.observer_queueAttributeMutationRecord(r,e._localName,e._namespace,e._value),n.dom.features.customElements&&o.Guard.isCustomElementNode(r)&&u.customElement_enqueueACustomElementCallbackReaction(r,"attributeChangedCallback",[e._localName,e._value,t._value,e._namespace]),n.dom.features.steps&&c.dom_runAttributeChangeSteps(r,e._localName,e._value,t._value,e._namespace);var i=r._attributeList._asArray().indexOf(e);-1!==i&&(r._attributeList._asArray()[i]=t),e._element=null,t._element=r,r._nodeDocument._hasNamespaces||null===t._namespace&&null===t._namespacePrefix&&"xmlns"!==t._localName||(r._nodeDocument._hasNamespaces=!0)}function v(e,t){return t._namespace===i.namespace.HTML&&"html"===t._nodeDocument._type&&(e=e.toLowerCase()),t._attributeList._asArray().find((function(t){return t._qualifiedName===e}))||null}function _(e,t,r){var n=e||null;return r._attributeList._asArray().find((function(e){return e._namespace===n&&e._localName===t}))||null}t.element_has=function(e,t){return-1!==t._attributeList._asArray().indexOf(e)},t.element_change=f,t.element_append=d,t.element_remove=m,t.element_replace=y,t.element_getAnAttributeByName=v,t.element_getAnAttributeByNamespaceAndLocalName=_,t.element_getAnAttributeValue=function(e,t,r){void 0===r&&(r="");var n=_(r,t,e);return null===n?"":n._value},t.element_setAnAttribute=function(e,t){if(null!==e._element&&e._element!==t)throw new a.InUseAttributeError("This attribute already exists in the document: "+e._qualifiedName+" as a child of "+e._element._qualifiedName+".");var r=_(e._namespace||"",e._localName,t);return r===e?e:(null!==r?y(r,e,t):d(e,t),r)},t.element_setAnAttributeValue=function(e,t,r,n,i){void 0===n&&(n=null),void 0===i&&(i=null);var o=_(i||"",t,e);if(null===o){var a=s.create_attr(e._nodeDocument,t);return a._namespace=i,a._namespacePrefix=n,a._value=r,void d(a,e)}f(o,e,r)},t.element_removeAnAttributeByName=function(e,t){var r=v(e,t);return null!==r&&m(r,t),r},t.element_removeAnAttributeByNamespaceAndLocalName=function(e,t,r){var n=_(e,t,r);return null!==n&&m(n,r),n},t.element_createAnElement=function(e,t,r,o,l,c){void 0===o&&(o=null),void 0===l&&(l=null),void 0===c&&(c=!1);var h=null;if(!n.dom.features.customElements)return(h=s.create_element(e,t,r,o))._customElementState="uncustomized",h._customElementDefinition=null,h._is=l,h;var f=u.customElement_lookUpACustomElementDefinition(e,r,t,l);if(null!==f&&f.name!==f.localName)(h=new(p.document_elementInterface(t,i.namespace.HTML)))._localName=t,h._namespace=i.namespace.HTML,h._namespacePrefix=o,h._customElementState="undefined",h._customElementDefinition=null,h._is=l,h._nodeDocument=e,c?u.customElement_upgrade(f,h):u.customElement_enqueueACustomElementUpgradeReaction(h,f);else if(null!==f)if(c)try{var d=new(0,f.constructor);if(console.assert(void 0!==d._customElementState),console.assert(void 0!==d._customElementDefinition),console.assert(d._namespace===i.namespace.HTML),0!==d._attributeList.length)throw new a.NotSupportedError("Custom element already has attributes.");if(0!==d._children.size)throw new a.NotSupportedError("Custom element already has child nodes.");if(null!==d._parent)throw new a.NotSupportedError("Custom element already has a parent node.");if(d._nodeDocument!==e)throw new a.NotSupportedError("Custom element is already in a document.");if(d._localName!==t)throw new a.NotSupportedError("Custom element has a different local name.");d._namespacePrefix=o,d._is=null}catch(r){(h=s.create_htmlUnknownElement(e,t,i.namespace.HTML,o))._customElementState="failed",h._customElementDefinition=null,h._is=null}else(h=s.create_htmlElement(e,t,i.namespace.HTML,o))._customElementState="undefined",h._customElementDefinition=null,h._is=null,u.customElement_enqueueACustomElementUpgradeReaction(h,f);else{(h=new(p.document_elementInterface(t,r)))._localName=t,h._namespace=r,h._namespacePrefix=o,h._customElementState="uncustomized",h._customElementDefinition=null,h._is=l,h._nodeDocument=e,r!==i.namespace.HTML||null===l&&!u.customElement_isValidCustomElementName(t)||(h._customElementState="undefined")}if(null===h)throw new Error("Unable to create element.");return h},t.element_insertAdjacent=function(e,t,r){switch(t.toLowerCase()){case"beforebegin":return null===e._parent?null:h.mutation_preInsert(r,e._parent,e);case"afterbegin":return h.mutation_preInsert(r,e,e._firstChild);case"beforeend":return h.mutation_preInsert(r,e,null);case"afterend":return null===e._parent?null:h.mutation_preInsert(r,e._parent,e._nextSibling);default:throw new a.SyntaxError('Invalid \'where\' argument. "beforebegin", "afterbegin", "beforeend" or "afterend" expected')}}},function(e,t,r){"use strict";function n(e,t){Error.call(this),this.name="YAMLException",this.reason=e,this.mark=t,this.message=(this.reason||"(unknown reason)")+(this.mark?" "+this.mark.toString():""),Error.captureStackTrace?Error.captureStackTrace(this,this.constructor):this.stack=(new Error).stack||""}n.prototype=Object.create(Error.prototype),n.prototype.constructor=n,n.prototype.toString=function(e){var t=this.name+": ";return t+=this.reason||"(unknown reason)",!e&&this.mark&&(t+=" "+this.mark.toString()),t},e.exports=n},function(e,t,r){"use strict";var n=r(39);e.exports=new n({include:[r(181)],implicit:[r(293),r(294)],explicit:[r(295),r(296),r(297),r(298)]})},function(e,t,r){var n=r(16),i=r(79),o=r(40),a=r(24),s=r(56),u=r(14),l=r(115),c=Object.getOwnPropertyDescriptor;t.f=n?c:function(e,t){if(e=a(e),t=s(t,!0),l)try{return c(e,t)}catch(e){}if(u(e,t))return o(!i.f.call(e,t),e[t])}},function(e,t,r){var n=r(13);e.exports=function(e,t){if(!n(e))return e;var r,i;if(t&&"function"==typeof(r=e.toString)&&!n(i=r.call(e)))return i;if("function"==typeof(r=e.valueOf)&&!n(i=r.call(e)))return i;if(!t&&"function"==typeof(r=e.toString)&&!n(i=r.call(e)))return i;throw TypeError("Can't convert object to primitive value")}},function(e,t,r){var n=r(81),i=r(58),o=n("keys");e.exports=function(e){return o[e]||(o[e]=i(e))}},function(e,t){var r=0,n=Math.random();e.exports=function(e){return"Symbol("+String(void 0===e?"":e)+")_"+(++r+n).toString(36)}},function(e,t,r){var n=r(42);e.exports=Array.isArray||function(e){return"Array"==n(e)}},function(e,t,r){var n,i=r(18),o=r(188),a=r(84),s=r(45),u=r(189),l=r(116),c=r(57),h=c("IE_PROTO"),p=function(){},f=function(e){return"<script>"+e+"<\/script>"},d=function(){try{n=document.domain&&new ActiveXObject("htmlfile")}catch(e){}var e,t;d=n?function(e){e.write(f("")),e.close();var t=e.parentWindow.Object;return e=null,t}(n):((t=l("iframe")).style.display="none",u.appendChild(t),t.src=String("javascript:"),(e=t.contentWindow.document).open(),e.write(f("document.F=Object")),e.close(),e.F);for(var r=a.length;r--;)delete d.prototype[a[r]];return d()};s[h]=!0,e.exports=Object.create||function(e,t){var r;return null!==e?(p.prototype=i(e),r=new p,p.prototype=null,r[h]=e):r=d(),void 0===t?r:o(r,t)}},function(e,t,r){var n=r(121),i=r(84);e.exports=Object.keys||function(e){return n(e,i)}},function(e,t,r){var n=r(15).f,i=r(14),o=r(5)("toStringTag");e.exports=function(e,t,r){e&&!i(e=r?e:e.prototype,o)&&n(e,o,{configurable:!0,value:t})}},function(e,t,r){var n=r(8),i=r(5),o=r(129),a=i("species");e.exports=function(e){return o>=51||!n((function(){var t=[];return(t.constructor={})[a]=function(){return{foo:1}},1!==t[e](Boolean).foo}))}},function(e,t,r){"use strict";var n=r(4),i=r(122).indexOf,o=r(48),a=r(28),s=[].indexOf,u=!!s&&1/[1].indexOf(1,-0)<0,l=o("indexOf"),c=a("indexOf",{ACCESSORS:!0,1:0});n({target:"Array",proto:!0,forced:u||!l||!c},{indexOf:function(e){return u?s.apply(this,arguments)||0:i(this,e,arguments.length>1?arguments[1]:void 0)}})},function(e,t,r){var n=r(16),i=r(15).f,o=Function.prototype,a=o.toString,s=/^\s*function ([^ (]*)/;n&&!("name"in o)&&i(o,"name",{configurable:!0,get:function(){try{return a.call(this).match(s)[1]}catch(e){return""}}})},function(e,t,r){"use strict";var n=r(25),i=r(18),o=r(8),a=r(136),s=RegExp.prototype,u=s.toString,l=o((function(){return"/a/b"!=u.call({source:"a",flags:"b"})})),c="toString"!=u.name;(l||c)&&n(RegExp.prototype,"toString",(function(){var e=i(this),t=String(e.source),r=e.flags;return"/"+t+"/"+String(void 0===r&&e instanceof RegExp&&!("flags"in s)?a.call(e):r)}),{unsafe:!0})},function(e,t,r){"use strict";r(31),r(32),r(33),r(19),r(138),r(20),r(66),r(22),r(23);var n,i=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}),o=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,r=t&&e[t],n=0;if(r)return r.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(t,"__esModule",{value:!0});var a=r(1),s=r(2),u=function(e){function t(t,r){var n=e.call(this,t)||this;return n._writerOptions=a.applyDefaults(r,{format:"object",wellFormed:!1,group:!1,verbose:!1}),n}return i(t,e),t.prototype.serialize=function(e){return this._currentList=[],this._currentIndex=0,this._listRegister=[this._currentList],this.serializeNode(e,this._writerOptions.wellFormed),this._process(this._currentList,this._writerOptions)},t.prototype._process=function(e,t){var r,n,i,o,u,l,c;if(0===e.length)return{};for(var h={},p=!1,f=0,d=0,m=0,y=0,v=0;v<e.length;v++){var _=e[v];switch(I=Object.keys(_)[0]){case"@":continue;case"#":f++;break;case"!":d++;break;case"?":m++;break;case"$":y++;break;default:h[I]?p=!0:h[I]=!0}}var g=this._getAttrKey(),b=this._getNodeKey(s.NodeType.Text),x=this._getNodeKey(s.NodeType.Comment),w=this._getNodeKey(s.NodeType.ProcessingInstruction),E=this._getNodeKey(s.NodeType.CData);if(1===f&&1===e.length&&a.isString(e[0]["#"]))return e[0]["#"];if(p){var D={};for(v=0;v<e.length;v++){_=e[v];if("@"===(I=Object.keys(_)[0])){var S=_["@"];1===(L=Object.keys(S)).length?D[g+L[0]]=S[L[0]]:D[g]=_["@"]}}var C=[];for(v=0;v<e.length;v++){_=e[v];switch(I=Object.keys(_)[0]){case"@":break;case"#":C.push(((r={})[b]=_["#"],r));break;case"!":C.push(((n={})[x]=_["!"],n));break;case"?":C.push(((i={})[w]=_["?"],i));break;case"$":C.push(((o={})[E]=_.$,o));break;default:if(0!==(B=_)[I].length&&a.isArray(B[I][0])){for(var A=[],N=B[I],T=0;T<N.length;T++)A.push(this._process(N[T],t));C.push(((u={})[I]=A,u))}else t.verbose?C.push(((l={})[I]=[this._process(B[I],t)],l)):C.push(((c={})[I]=this._process(B[I],t),c))}}return D[b]=C,D}var O=1,F=1,k=1,P=1;for(D={},v=0;v<e.length;v++){var I;_=e[v];switch(I=Object.keys(_)[0]){case"@":S=_["@"];var L=Object.keys(S);if(t.group&&1!==L.length)D[g]=S;else for(var M in S)D[g+M]=S[M];break;case"#":O=this._processSpecItem(_["#"],D,t.group,b,f,O);break;case"!":F=this._processSpecItem(_["!"],D,t.group,x,d,F);break;case"?":k=this._processSpecItem(_["?"],D,t.group,w,m,k);break;case"$":P=this._processSpecItem(_.$,D,t.group,E,y,P);break;default:var B;if(0!==(B=_)[I].length&&a.isArray(B[I][0])){A=[],N=B[I];for(var j=0;j<N.length;j++)A.push(this._process(N[j],t));D[I]=A}else t.verbose?D[I]=[this._process(B[I],t)]:D[I]=this._process(B[I],t)}}return D},t.prototype._processSpecItem=function(e,t,r,n,i,s){var u,l;if(!r&&a.isArray(e)&&i+e.length>2)try{for(var c=o(e),h=c.next();!h.done;h=c.next()){var p=h.value;t[n+(s++).toString()]=p}}catch(e){u={error:e}}finally{try{h&&!h.done&&(l=c.return)&&l.call(c)}finally{if(u)throw u.error}}else t[i>1?n+(s++).toString():n]=e;return s},t.prototype.beginElement=function(e){var t,r,n=[];if(0===this._currentList.length)this._currentList.push(((t={})[e]=n,t));else{var i=this._currentList[this._currentList.length-1];if(this._isElementNode(i,e))if(0!==i[e].length&&a.isArray(i[e][0]))i[e].push(n);else i[e]=[i[e],n];else this._currentList.push(((r={})[e]=n,r))}this._currentIndex++,this._listRegister.length>this._currentIndex?this._listRegister[this._currentIndex]=n:this._listRegister.push(n),this._currentList=n},t.prototype.endElement=function(){this._currentList=this._listRegister[--this._currentIndex]},t.prototype.attribute=function(e,t){var r,n;if(0===this._currentList.length)this._currentList.push({"@":(r={},r[e]=t,r)});else{var i=this._currentList[this._currentList.length-1];this._isAttrNode(i)?i["@"][e]=t:this._currentList.push({"@":(n={},n[e]=t,n)})}},t.prototype.comment=function(e){if(0===this._currentList.length)this._currentList.push({"!":e});else{var t=this._currentList[this._currentList.length-1];this._isCommentNode(t)?a.isArray(t["!"])?t["!"].push(e):t["!"]=[t["!"],e]:this._currentList.push({"!":e})}},t.prototype.text=function(e){if(0===this._currentList.length)this._currentList.push({"#":e});else{var t=this._currentList[this._currentList.length-1];this._isTextNode(t)?a.isArray(t["#"])?t["#"].push(e):t["#"]=[t["#"],e]:this._currentList.push({"#":e})}},t.prototype.instruction=function(e,t){var r=""===t?e:e+" "+t;if(0===this._currentList.length)this._currentList.push({"?":r});else{var n=this._currentList[this._currentList.length-1];this._isInstructionNode(n)?a.isArray(n["?"])?n["?"].push(r):n["?"]=[n["?"],r]:this._currentList.push({"?":r})}},t.prototype.cdata=function(e){if(0===this._currentList.length)this._currentList.push({$:e});else{var t=this._currentList[this._currentList.length-1];this._isCDATANode(t)?a.isArray(t.$)?t.$.push(e):t.$=[t.$,e]:this._currentList.push({$:e})}},t.prototype._isAttrNode=function(e){return"@"in e},t.prototype._isTextNode=function(e){return"#"in e},t.prototype._isCommentNode=function(e){return"!"in e},t.prototype._isInstructionNode=function(e){return"?"in e},t.prototype._isCDATANode=function(e){return"$"in e},t.prototype._isElementNode=function(e,t){return t in e},t.prototype._getAttrKey=function(){return this._builderOptions.convert.att},t.prototype._getNodeKey=function(e){switch(e){case s.NodeType.Comment:return this._builderOptions.convert.comment;case s.NodeType.Text:return this._builderOptions.convert.text;case s.NodeType.ProcessingInstruction:return this._builderOptions.convert.ins;case s.NodeType.CData:return this._builderOptions.convert.cdata;default:throw new Error("Invalid node type.")}},t}(r(50).BaseWriter);t.ObjectWriter=u},function(e,t,r){"use strict";var n=r(4),i=r(93);n({target:"RegExp",proto:!0,forced:/./.exec!==i},{exec:i})},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(){function e(){this._items={},this._nullItems={}}return e.prototype.set=function(e,t){null===e?this._nullItems[t]=!0:(this._items[e]||(this._items[e]={}),this._items[e][t]=!0)},e.prototype.has=function(e,t){return null===e?!0===this._nullItems[t]:!!this._items[e]&&!0===this._items[e][t]},e}();t.LocalNameSet=n},function(e,t,r){"use strict";var n=this&&this.__read||function(e,t){var r="function"==typeof Symbol&&e[Symbol.iterator];if(!r)return e;var n,i,o=r.call(e),a=[];try{for(;(void 0===t||t-- >0)&&!(n=o.next()).done;)a.push(n.value)}catch(e){i={error:e}}finally{try{n&&!n.done&&(r=o.return)&&r.call(o)}finally{if(i)throw i.error}}return a};Object.defineProperty(t,"__esModule",{value:!0});var i=r(9),o=r(3),a=r(0),s=function(){function e(){}return Object.defineProperty(e.prototype,"_eventListenerList",{get:function(){return this.__eventListenerList||(this.__eventListenerList=[])},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"_eventHandlerMap",{get:function(){return this.__eventHandlerMap||(this.__eventHandlerMap={})},enumerable:!0,configurable:!0}),e.prototype.addEventListener=function(e,t,r){void 0===r&&(r={passive:!1,once:!1,capture:!1});var i,s=n(a.eventTarget_flattenMore(r),3),u=s[0],l=s[1],c=s[2];t&&(i=o.Guard.isEventListener(t)?t:{handleEvent:t},a.eventTarget_addEventListener(this,{type:e,callback:i,capture:u,passive:l,once:c,removed:!1}))},e.prototype.removeEventListener=function(e,t,r){void 0===r&&(r={capture:!1});var n=a.eventTarget_flatten(r);if(t)for(var i=0;i<this._eventListenerList.length;i++){var s=this._eventListenerList[i];if(s.type===e&&s.capture===n){if(o.Guard.isEventListener(t)&&s.callback===t){a.eventTarget_removeEventListener(this,s,i);break}if(t&&s.callback.handleEvent===t){a.eventTarget_removeEventListener(this,s,i);break}}}},e.prototype.dispatchEvent=function(e){if(e._dispatchFlag||!e._initializedFlag)throw new i.InvalidStateError;return e._isTrusted=!1,a.event_dispatch(e,this)},e.prototype._getTheParent=function(e){return null},e}();t.EventTargetImpl=s},function(e,t,r){"use strict";var n,i=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});Object.defineProperty(t,"__esModule",{value:!0});var o=r(34),a=r(0),s=function(e){function t(t){var r=e.call(this)||this;return r._data=t,r}return i(t,e),Object.defineProperty(t.prototype,"data",{get:function(){return this._data},set:function(e){a.characterData_replaceData(this,0,this._data.length,e)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"length",{get:function(){return this._data.length},enumerable:!0,configurable:!0}),t.prototype.substringData=function(e,t){return a.characterData_substringData(this,e,t)},t.prototype.appendData=function(e){return a.characterData_replaceData(this,this._data.length,0,e)},t.prototype.insertData=function(e,t){a.characterData_replaceData(this,e,0,t)},t.prototype.deleteData=function(e,t){a.characterData_replaceData(this,e,t,"")},t.prototype.replaceData=function(e,t,r){a.characterData_replaceData(this,e,t,r)},Object.defineProperty(t.prototype,"previousElementSibling",{get:function(){throw new Error("Mixin: NonDocumentTypeChildNode not implemented.")},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"nextElementSibling",{get:function(){throw new Error("Mixin: NonDocumentTypeChildNode not implemented.")},enumerable:!0,configurable:!0}),t.prototype.before=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];throw new Error("Mixin: ChildNode not implemented.")},t.prototype.after=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];throw new Error("Mixin: ChildNode not implemented.")},t.prototype.replaceWith=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];throw new Error("Mixin: ChildNode not implemented.")},t.prototype.remove=function(){throw new Error("Mixin: ChildNode not implemented.")},t}(o.NodeImpl);t.CharacterDataImpl=s},function(e,t,r){"use strict";var n=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,r=t&&e[t],n=0;if(r)return r.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")},i=this&&this.__read||function(e,t){var r="function"==typeof Symbol&&e[Symbol.iterator];if(!r)return e;var n,i,o=r.call(e),a=[];try{for(;(void 0===t||t-- >0)&&!(n=o.next()).done;)a.push(n.value)}catch(e){i={error:e}}finally{try{n&&!n.done&&(r=o.return)&&r.call(o)}finally{if(i)throw i.error}}return a},o=this&&this.__spread||function(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(i(arguments[t]));return e};Object.defineProperty(t,"__esModule",{value:!0});var a=r(6),s=r(3),u=r(1),l=r(17),c=r(51);function h(e){a.dom.window._signalSlots.add(e),c.observer_queueAMutationObserverMicrotask()}function p(e,t){void 0===t&&(t=!1);var r=s.Cast.asNode(e)._parent;if(null===r)return null;var n=r._shadowRoot||null;if(null===n)return null;if(t&&"open"!==n._mode)return null;for(var i=l.tree_getFirstDescendantNode(n,!1,!0,(function(e){return s.Guard.isSlot(e)}));null!==i;){if(i._name===e._name)return i;i=l.tree_getNextDescendantNode(n,i,!1,!0,(function(e){return s.Guard.isSlot(e)}))}return null}function f(e){var t,r,i=[],o=l.tree_rootNode(e);if(!s.Guard.isShadowRoot(o))return i;var a=o._host;try{for(var u=n(a._children),c=u.next();!c.done;c=u.next()){var h=c.value;if(s.Guard.isSlotable(h))p(h)===e&&i.push(h)}}catch(e){t={error:e}}finally{try{c&&!c.done&&(r=u.return)&&r.call(u)}finally{if(t)throw t.error}}return i}function d(e){var t,r,i=f(e);if(i.length===e._assignedNodes.length){for(var o=!0,a=0;a<i.length;a++)if(i[a]!==e._assignedNodes[a]){o=!1;break}o||h(e)}e._assignedNodes=i;try{for(var s=n(i),u=s.next();!u.done;u=s.next()){u.value._assignedSlot=e}}catch(e){t={error:e}}finally{try{u&&!u.done&&(r=s.return)&&r.call(s)}finally{if(t)throw t.error}}}t.shadowTree_signalASlotChange=h,t.shadowTree_isConnected=function(e){return s.Guard.isDocumentNode(l.tree_rootNode(e,!0))},t.shadowTree_isAssigned=function(e){return null!==e._assignedSlot},t.shadowTree_findASlot=p,t.shadowTree_findSlotables=f,t.shadowTree_findFlattenedSlotables=function e(t){var r,i,a,c,h=[],p=l.tree_rootNode(t);if(!s.Guard.isShadowRoot(p))return h;var d=f(t);if(u.isEmpty(d))try{for(var m=n(t._children),y=m.next();!y.done;y=m.next()){var v=y.value;s.Guard.isSlotable(v)&&d.push(v)}}catch(e){r={error:e}}finally{try{y&&!y.done&&(i=m.return)&&i.call(m)}finally{if(r)throw r.error}}try{for(var _=n(d),g=_.next();!g.done;g=_.next()){var b=g.value;if(s.Guard.isSlot(b)&&s.Guard.isShadowRoot(l.tree_rootNode(b))){var x=e(b);h.push.apply(h,o(x))}else h.push(b)}}catch(e){a={error:e}}finally{try{g&&!g.done&&(c=_.return)&&c.call(_)}finally{if(a)throw a.error}}return h},t.shadowTree_assignSlotables=d,t.shadowTree_assignSlotablesForATree=function(e){for(var t=l.tree_getFirstDescendantNode(e,!0,!1,(function(e){return s.Guard.isSlot(e)}));null!==t;)d(t),t=l.tree_getNextDescendantNode(e,t,!0,!1,(function(e){return s.Guard.isSlot(e)}))},t.shadowTree_assignASlot=function(e){var t=p(e);null!==t&&d(t)}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=/[a-z]([\0-\t\x2D\._a-z\xB7\xC0-\xD6\xD8-\xF6\xF8-\u037D\u037F-\u1FFF\u200C\u200D\u203F\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]|[\uD800-\uDB7F][\uDC00-\uDFFF])*-([\0-\t\x2D\._a-z\xB7\xC0-\xD6\xD8-\xF6\xF8-\u037D\u037F-\u1FFF\u200C\u200D\u203F\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]|[\uD800-\uDB7F][\uDC00-\uDFFF])*/,i=new Set(["annotation-xml","color-profile","font-face","font-face-src","font-face-uri","font-face-format","font-face-name","missing-glyph"]),o=new Set(["article","aside","blockquote","body","div","footer","h1","h2","h3","h4","h5","h6","header","main","nav","p","section","span"]),a=new Set(["area","base","basefont","bgsound","br","col","embed","frame","hr","img","input","keygen","link","menuitem","meta","param","source","track","wbr"]),s=new Set(["article","aside","blockquote","body","div","footer","h1","h2","h3","h4","h5","h6","header","main","nav","p","section","span"]);t.customElement_isValidCustomElementName=function(e){return!!n.test(e)&&!i.has(e)},t.customElement_isValidElementName=function(e){return o.has(e)},t.customElement_isVoidElementName=function(e){return a.has(e)},t.customElement_isValidShadowHostName=function(e){return s.has(e)},t.customElement_enqueueACustomElementUpgradeReaction=function(e,t){},t.customElement_enqueueACustomElementCallbackReaction=function(e,t,r){},t.customElement_upgrade=function(e,t){},t.customElement_tryToUpgrade=function(e){},t.customElement_lookUpACustomElementDefinition=function(e,t,r,n){return null}},function(e,t,r){r(4)({target:"String",proto:!0},{repeat:r(259)})},function(e,t,r){"use strict";r(278),r(68),r(179),r(94),Object.defineProperty(t,"__esModule",{value:!0});var n=r(109),i=function(){function e(e){this._builderOptions=e,e.parser&&Object.assign(this,e.parser)}return e.prototype._docType=function(e,t,r,n){return e.dtd({name:t,pubID:r,sysID:n})},e.prototype._comment=function(e,t){return e.com(t)},e.prototype._text=function(e,t){return e.txt(t)},e.prototype._instruction=function(e,t,r){return e.ins(t,r)},e.prototype._cdata=function(e,t){return e.dat(t)},e.prototype._element=function(e,t,r){return void 0===t?e.ele(r):e.ele(t,r)},e.prototype._attribute=function(e,t,r,n){return void 0===t?e.att(r,n):e.att(t,r,n)},e.prototype._sanitize=function(e){return n.sanitizeInput(e,this._builderOptions.invalidCharReplacement)},e.prototype._decodeText=function(t){return null==t?t:t.replace(/&(quot|amp|apos|lt|gt);/g,(function(t,r){return e._entityTable[r]})).replace(/&#(?:x([a-fA-F0-9]+)|([0-9]+));/g,(function(e,t,r){return String.fromCodePoint(parseInt(t||r,t?16:10))}))},e.prototype._decodeAttributeValue=function(e){return this._decodeText(e)},e.prototype.parse=function(e,t){return this._parse(e,t)},e.prototype.docType=function(e,t,r,n){return this._docType(e,t,r,n)},e.prototype.comment=function(e,t){return this._comment(e,t)},e.prototype.text=function(e,t){return this._text(e,t)},e.prototype.instruction=function(e,t,r){return this._instruction(e,t,r)},e.prototype.cdata=function(e,t){return this._cdata(e,t)},e.prototype.element=function(e,t,r){return this._element(e,t,r)},e.prototype.attribute=function(e,t,r,n){return this._attribute(e,t,r,n)},e.prototype.sanitize=function(e){return this._sanitize(e)},e._entityTable={lt:"<",gt:">",amp:"&",quot:'"',apos:"'"},e}();t.BaseReader=i},function(e,t,r){"use strict";var n=r(39);e.exports=n.DEFAULT=new n({include:[r(54)],explicit:[r(299),r(300),r(301)]})},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(185);t.XMLBuilderImpl=n.XMLBuilderImpl;var i=r(304);t.XMLBuilderCBImpl=i.XMLBuilderCBImpl;var o=r(183);t.builder=o.builder,t.create=o.create,t.fragment=o.fragment,t.convert=o.convert;var a=r(309);t.createCB=a.createCB,t.fragmentCB=a.fragmentCB},function(e,t){var r;r=function(){return this}();try{r=r||new Function("return this")()}catch(e){"object"==typeof window&&(r=window)}e.exports=r},function(e,t,r){"use strict";var n={}.propertyIsEnumerable,i=Object.getOwnPropertyDescriptor,o=i&&!n.call({1:2},1);t.f=o?function(e){var t=i(this,e);return!!t&&t.enumerable}:n},function(e,t,r){var n=r(11),i=r(21);e.exports=function(e,t){try{i(n,e,t)}catch(r){n[e]=t}return t}},function(e,t,r){var n=r(44),i=r(118);(e.exports=function(e,t){return i[e]||(i[e]=void 0!==t?t:{})})("versions",[]).push({version:"3.6.5",mode:n?"pure":"global",copyright:"© 2020 Denis Pushkarev (zloirock.ru)"})},function(e,t,r){var n=r(121),i=r(84).concat("length","prototype");t.f=Object.getOwnPropertyNames||function(e){return n(e,i)}},function(e,t,r){var n=r(47),i=Math.max,o=Math.min;e.exports=function(e,t){var r=n(e);return r<0?i(r+t,0):o(r,t)}},function(e,t){e.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},function(e,t){t.f=Object.getOwnPropertySymbols},function(e,t,r){var n=r(8);e.exports=!!Object.getOwnPropertySymbols&&!n((function(){return!String(Symbol())}))},function(e,t,r){var n=r(127);e.exports=function(e,t,r){if(n(e),void 0===t)return e;switch(r){case 0:return function(){return e.call(t)};case 1:return function(r){return e.call(t,r)};case 2:return function(r,n){return e.call(t,r,n)};case 3:return function(r,n,i){return e.call(t,r,n,i)}}return function(){return e.apply(t,arguments)}}},function(e,t,r){"use strict";var n=r(4),i=r(195),o=r(132),a=r(133),s=r(62),u=r(21),l=r(25),c=r(5),h=r(44),p=r(49),f=r(131),d=f.IteratorPrototype,m=f.BUGGY_SAFARI_ITERATORS,y=c("iterator"),v=function(){return this};e.exports=function(e,t,r,c,f,_,g){i(r,t,c);var b,x,w,E=function(e){if(e===f&&N)return N;if(!m&&e in C)return C[e];switch(e){case"keys":case"values":case"entries":return function(){return new r(this,e)}}return function(){return new r(this)}},D=t+" Iterator",S=!1,C=e.prototype,A=C[y]||C["@@iterator"]||f&&C[f],N=!m&&A||E(f),T="Array"==t&&C.entries||A;if(T&&(b=o(T.call(new e)),d!==Object.prototype&&b.next&&(h||o(b)===d||(a?a(b,d):"function"!=typeof b[y]&&u(b,y,v)),s(b,D,!0,!0),h&&(p[D]=v))),"values"==f&&A&&"values"!==A.name&&(S=!0,N=function(){return A.call(this)}),h&&!g||C[y]===N||u(C,y,N),p[t]=N,f)if(x={values:E("values"),keys:_?N:E("keys"),entries:E("entries")},g)for(w in x)(m||S||!(w in C))&&l(C,w,x[w]);else n({target:t,proto:!0,forced:m||S},x);return x}},function(e,t,r){"use strict";var n=r(4),i=r(13),o=r(59),a=r(83),s=r(26),u=r(24),l=r(134),c=r(5),h=r(63),p=r(28),f=h("slice"),d=p("slice",{ACCESSORS:!0,0:0,1:2}),m=c("species"),y=[].slice,v=Math.max;n({target:"Array",proto:!0,forced:!f||!d},{slice:function(e,t){var r,n,c,h=u(this),p=s(h.length),f=a(e,p),d=a(void 0===t?p:t,p);if(o(h)&&("function"!=typeof(r=h.constructor)||r!==Array&&!o(r.prototype)?i(r)&&null===(r=r[m])&&(r=void 0):r=void 0,r===Array||void 0===r))return y.call(h,f,d);for(n=new(void 0===r?Array:r)(v(d-f,0)),c=0;f<d;f++,c++)f in h&&l(n,c,h[f]);return n.length=c,n}})},function(e,t,r){var n={};n[r(5)("toStringTag")]="z",e.exports="[object z]"===String(n)},function(e,t,r){"use strict";r(19),r(138),r(20),r(92),r(22),r(23),Object.defineProperty(t,"__esModule",{value:!0}),t.DefaultBuilderOptions={version:"1.0",encoding:void 0,standalone:void 0,keepNullNodes:!1,keepNullAttributes:!1,ignoreConverters:!1,convert:{att:"@",ins:"?",text:"#",cdata:"$",comment:"!"},defaultNamespace:{ele:void 0,att:void 0},namespaceAlias:{html:"http://www.w3.org/1999/xhtml",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/",mathml:"http://www.w3.org/1998/Math/MathML",svg:"http://www.w3.org/2000/svg",xlink:"http://www.w3.org/1999/xlink"},invalidCharReplacement:void 0,parser:void 0},t.XMLBuilderOptionKeys=new Set(Object.keys(t.DefaultBuilderOptions)),t.DefaultXMLBuilderCBOptions={format:"xml",wellFormed:!1,prettyPrint:!1,indent:"  ",newline:"\n",offset:0,width:0,allowEmptyTags:!1,spaceBeforeSlash:!1,keepNullNodes:!1,keepNullAttributes:!1,ignoreConverters:!1,convert:{att:"@",ins:"?",text:"#",cdata:"$",comment:"!"},defaultNamespace:{ele:void 0,att:void 0},namespaceAlias:{html:"http://www.w3.org/1999/xhtml",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/",mathml:"http://www.w3.org/1998/Math/MathML",svg:"http://www.w3.org/2000/svg",xlink:"http://www.w3.org/1999/xlink"}}},function(e,t,r){"use strict";var n=r(139),i=r(143);e.exports=n("Set",(function(e){return function(){return e(this,arguments.length?arguments[0]:void 0)}}),i)},function(e,t,r){"use strict";var n,i,o=r(136),a=r(221),s=RegExp.prototype.exec,u=String.prototype.replace,l=s,c=(n=/a/,i=/b*/g,s.call(n,"a"),s.call(i,"a"),0!==n.lastIndex||0!==i.lastIndex),h=a.UNSUPPORTED_Y||a.BROKEN_CARET,p=void 0!==/()??/.exec("")[1];(c||p||h)&&(l=function(e){var t,r,n,i,a=this,l=h&&a.sticky,f=o.call(a),d=a.source,m=0,y=e;return l&&(-1===(f=f.replace("y","")).indexOf("g")&&(f+="g"),y=String(e).slice(a.lastIndex),a.lastIndex>0&&(!a.multiline||a.multiline&&"\n"!==e[a.lastIndex-1])&&(d="(?: "+d+")",y=" "+y,m++),r=new RegExp("^(?:"+d+")",f)),p&&(r=new RegExp("^"+d+"$(?!\\s)",f)),c&&(t=a.lastIndex),n=s.call(l?r:a,y),l?n?(n.input=n.input.slice(m),n[0]=n[0].slice(m),n.index=a.lastIndex,a.lastIndex+=n[0].length):a.lastIndex=0:c&&n&&(a.lastIndex=a.global?n.index+n[0].length:t),p&&n&&n.length>1&&u.call(n[0],r,(function(){for(i=1;i<arguments.length-2;i++)void 0===arguments[i]&&(n[i]=void 0)})),n}),e.exports=l},function(e,t,r){"use strict";var n=r(225),i=r(18),o=r(27),a=r(26),s=r(47),u=r(35),l=r(226),c=r(227),h=Math.max,p=Math.min,f=Math.floor,d=/\$([$&'`]|\d\d?|<[^>]*>)/g,m=/\$([$&'`]|\d\d?)/g;n("replace",2,(function(e,t,r,n){var y=n.REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE,v=n.REPLACE_KEEPS_$0,_=y?"$":"$0";return[function(r,n){var i=u(this),o=null==r?void 0:r[e];return void 0!==o?o.call(r,i,n):t.call(String(i),r,n)},function(e,n){if(!y&&v||"string"==typeof n&&-1===n.indexOf(_)){var o=r(t,e,this,n);if(o.done)return o.value}var u=i(e),f=String(this),d="function"==typeof n;d||(n=String(n));var m=u.global;if(m){var b=u.unicode;u.lastIndex=0}for(var x=[];;){var w=c(u,f);if(null===w)break;if(x.push(w),!m)break;""===String(w[0])&&(u.lastIndex=l(f,a(u.lastIndex),b))}for(var E,D="",S=0,C=0;C<x.length;C++){w=x[C];for(var A=String(w[0]),N=h(p(s(w.index),f.length),0),T=[],O=1;O<w.length;O++)T.push(void 0===(E=w[O])?E:String(E));var F=w.groups;if(d){var k=[A].concat(T,N,f);void 0!==F&&k.push(F);var P=String(n.apply(void 0,k))}else P=g(A,f,N,T,F,n);N>=S&&(D+=f.slice(S,N)+P,S=N+A.length)}return D+f.slice(S)}];function g(e,r,n,i,a,s){var u=n+e.length,l=i.length,c=m;return void 0!==a&&(a=o(a),c=d),t.call(s,c,(function(t,o){var s;switch(o.charAt(0)){case"$":return"$";case"&":return e;case"`":return r.slice(0,n);case"'":return r.slice(u);case"<":s=a[o.slice(1,-1)];break;default:var c=+o;if(0===c)return t;if(c>l){var h=f(c/10);return 0===h?t:h<=l?void 0===i[h-1]?o.charAt(1):i[h-1]+o.charAt(1):t}s=i[c-1]}return void 0===s?"":s}))}}))},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(){function e(){this._items={},this._nullItems=[]}return e.prototype.copy=function(){var t=new e;for(var r in this._items)t._items[r]=this._items[r].slice(0);return t._nullItems=this._nullItems.slice(0),t},e.prototype.get=function(e,t){var r=null===t?this._nullItems:this._items[t]||null;if(null===r)return null;for(var n=null,i=0;i<r.length;i++)if((n=r[i])===e)return n;return n},e.prototype.has=function(e,t){var r=null===t?this._nullItems:this._items[t]||null;return null!==r&&-1!==r.indexOf(e)},e.prototype.hasPrefix=function(e){if(-1!==this._nullItems.indexOf(e))return!0;for(var t in this._items)if(-1!==this._items[t].indexOf(e))return!0;return!1},e.prototype.set=function(e,t){var r=null===t?this._nullItems:this._items[t]||null;null!==t&&null===r?this._items[t]=[e]:r.push(e)},e}();t.NamespacePrefixMap=n},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Surrogate=/[\uD800-\uDFFF]/,t.ScalarValue=/[\uD800-\uDFFF]/,t.NonCharacter=/[\uFDD0-\uFDEF\uFFFE\uFFFF]|[\uD83F\uD87F\uD8BF\uD8FF\uD93F\uD97F\uD9BF\uD9FF\uDA3F\uDA7F\uDABF\uDAFF\uDB3F\uDB7F\uDBBF\uDBFF][\uDFFE\uDFFF]/,t.ASCIICodePoint=/[\u0000-\u007F]/,t.ASCIITabOrNewLine=/[\t\n\r]/,t.ASCIIWhiteSpace=/[\t\n\f\r ]/,t.C0Control=/[\u0000-\u001F]/,t.C0ControlOrSpace=/[\u0000-\u001F ]/,t.Control=/[\u0000-\u001F\u007F-\u009F]/,t.ASCIIDigit=/[0-9]/,t.ASCIIUpperHexDigit=/[0-9A-F]/,t.ASCIILowerHexDigit=/[0-9a-f]/,t.ASCIIHexDigit=/[0-9A-Fa-f]/,t.ASCIIUpperAlpha=/[A-Z]/,t.ASCIILowerAlpha=/[a-z]/,t.ASCIIAlpha=/[A-Za-z]/,t.ASCIIAlphanumeric=/[0-9A-Za-z]/},function(e,t,r){"use strict";var n=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,r=t&&e[t],n=0;if(r)return r.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")},i=this&&this.__read||function(e,t){var r="function"==typeof Symbol&&e[Symbol.iterator];if(!r)return e;var n,i,o=r.call(e),a=[];try{for(;(void 0===t||t-- >0)&&!(n=o.next()).done;)a.push(n.value)}catch(e){i={error:e}}finally{try{n&&!n.done&&(r=o.return)&&r.call(o)}finally{if(i)throw i.error}}return a},o=this&&this.__spread||function(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(i(arguments[t]));return e};Object.defineProperty(t,"__esModule",{value:!0});var a=r(6),s=r(2),u=r(3),l=r(171),c=r(104),h=r(9),p=r(17),f=r(72),d=r(30);function m(e,t){void 0===t&&(t=void 0),void 0===t&&(t=null);var r=y(e,t,new Date,{});return r._isTrusted=!0,r}function y(e,t,r,n){var i=new e("");return i._initializedFlag=!0,i._timeStamp=r.getTime(),Object.assign(i,n),a.dom.features.steps&&d.dom_runEventConstructingSteps(i),i}function v(e,t,r,i){var o,a,l,c;void 0===r&&(r=!1),void 0===i&&(i={value:!1});var h=!1;e._dispatchFlag=!0;var d=t;if(r){var m=t._associatedDocument;u.Guard.isDocumentNode(m)&&(d=m)}var y=null,v=p.tree_retarget(e._relatedTarget,t);if(t!==v||t===e._relatedTarget){var b=[];try{for(var x=n(e._touchTargetList),w=x.next();!w.done;w=x.next()){var E=w.value;b.push(p.tree_retarget(E,t))}}catch(e){o={error:e}}finally{try{w&&!w.done&&(a=x.return)&&a.call(x)}finally{if(o)throw o.error}}_(e,t,d,v,b,!1);var D=u.Guard.isMouseEvent(e)&&"click"===e._type;D&&void 0!==t._activationBehavior&&(y=t);for(var S=u.Guard.isSlotable(t)&&f.shadowTree_isAssigned(t)?t:null,C=!1,A=t._getTheParent(e);null!==A&&u.Guard.isNode(A);){if(null!==S){if(!u.Guard.isSlot(A))throw new Error("Parent node of a slotable should be a slot.");S=null;var N=p.tree_rootNode(A,!0);u.Guard.isShadowRoot(N)&&"closed"===N._mode&&(C=!0)}u.Guard.isSlotable(A)&&f.shadowTree_isAssigned(A)&&(S=A),v=p.tree_retarget(e._relatedTarget,A),b=[];try{for(var T=(l=void 0,n(e._touchTargetList)),O=T.next();!O.done;O=T.next()){E=O.value;b.push(p.tree_retarget(E,A))}}catch(e){l={error:e}}finally{try{O&&!O.done&&(c=T.return)&&c.call(T)}finally{if(l)throw l.error}}u.Guard.isWindow(A)||u.Guard.isNode(A)&&u.Guard.isNode(t)&&p.tree_isAncestorOf(p.tree_rootNode(t,!0),A,!0,!0)?(D&&e._bubbles&&null===y&&A._activationBehavior&&(y=A),_(e,A,null,v,b,C)):A===v?A=null:(t=A,D&&null===y&&t._activationBehavior&&(y=t),_(e,A,t,v,b,C)),null!==A&&(A=A._getTheParent(e)),C=!1}for(var F=null,k=e._path,P=k.length-1;P>=0;P--){if(null!==(L=k[P]).shadowAdjustedTarget){F=L;break}}if(null!==F)if(u.Guard.isNode(F.shadowAdjustedTarget)&&u.Guard.isShadowRoot(p.tree_rootNode(F.shadowAdjustedTarget,!0)))h=!0;else if(u.Guard.isNode(F.relatedTarget)&&u.Guard.isShadowRoot(p.tree_rootNode(F.relatedTarget,!0)))h=!0;else for(var I=0;I<F.touchTargetList.length;I++){var L=F.touchTargetList[I];if(u.Guard.isNode(L)&&u.Guard.isShadowRoot(p.tree_rootNode(L,!0))){h=!0;break}}null!==y&&void 0!==y._legacyPreActivationBehavior&&y._legacyPreActivationBehavior(e);for(P=k.length-1;P>=0;P--){null!==(L=k[P]).shadowAdjustedTarget?e._eventPhase=s.EventPhase.AtTarget:e._eventPhase=s.EventPhase.Capturing,g(L,e,"capturing",i)}for(P=0;P<k.length;P++){if(null!==(L=k[P]).shadowAdjustedTarget)e._eventPhase=s.EventPhase.AtTarget;else{if(!e._bubbles)continue;e._eventPhase=s.EventPhase.Bubbling}g(L,e,"bubbling",i)}}return e._eventPhase=s.EventPhase.None,e._currentTarget=null,e._path=[],e._dispatchFlag=!1,e._stopPropagationFlag=!1,e._stopImmediatePropagationFlag=!1,h&&(e._target=null,e._relatedTarget=null,e._touchTargetList=[]),null!==y&&(e._canceledFlag||void 0===y._activationBehavior?void 0!==y._legacyCanceledActivationBehavior&&y._legacyCanceledActivationBehavior(e):y._activationBehavior(e)),!e._canceledFlag}function _(e,t,r,n,i,o){var a=!1;u.Guard.isNode(t)&&u.Guard.isShadowRoot(p.tree_rootNode(t))&&(a=!0);var s=!1;u.Guard.isShadowRoot(t)&&"closed"===t._mode&&(s=!0),e._path.push({invocationTarget:t,invocationTargetInShadowTree:a,shadowAdjustedTarget:r,relatedTarget:n,touchTargetList:i,rootOfClosedTree:s,slotInClosedTree:o})}function g(e,t,r,n){void 0===n&&(n={value:!1});for(var i=t._path,a=-1,s=0;s<i.length;s++)if(i[s]===e){a=s;break}if(-1!==a){var u=i[a];(null!==u.shadowAdjustedTarget||a>0&&null!==(u=i[a-1]).shadowAdjustedTarget)&&(t._target=u.shadowAdjustedTarget)}if(t._relatedTarget=e.relatedTarget,t._touchTargetList=e.touchTargetList,!t._stopPropagationFlag){t._currentTarget=e.invocationTarget;var l=t._currentTarget._eventListenerList,c=new(Array.bind.apply(Array,o([void 0],l)));if(!b(t,c,r,e,n)&&t._isTrusted){var h=t._type;"animationend"===h?t._type="webkitAnimationEnd":"animationiteration"===h?t._type="webkitAnimationIteration":"animationstart"===h?t._type="webkitAnimationStart":"transitionend"===h&&(t._type="webkitTransitionEnd"),b(t,c,r,e,n),t._type=h}}}function b(e,t,r,n,i){void 0===i&&(i={value:!1});for(var o=!1,a=0;a<t.length;a++){var s=t[a];if(!s.removed){if(e._type!==s.type)continue;if(o=!0,"capturing"===r&&!s.capture)continue;if("bubbling"===r&&s.capture)continue;if(s.once&&null!==e._currentTarget){for(var l=e._currentTarget,c=-1,h=0;h<l._eventListenerList.length;h++)if(l._eventListenerList[h]===s){c=h;break}-1!==c&&l._eventListenerList.splice(c,1)}var p=void 0,f=void 0;u.Guard.isWindow(p)&&(f=p._currentEvent,!1===n.invocationTargetInShadowTree&&(p._currentEvent=e)),s.passive&&(e._inPassiveListenerFlag=!0);try{s.callback.handleEvent.call(e._currentTarget,e)}catch(e){i.value=!0}if(s.passive&&(e._inPassiveListenerFlag=!1),u.Guard.isWindow(p)&&(p._currentEvent=f),e._stopImmediatePropagationFlag)return o}}return o}function x(e,t){return null}function w(e,t){return null}function E(e,t){}function D(e,t){}t.event_setTheCanceledFlag=function(e){e._cancelable&&!e._inPassiveListenerFlag&&(e._canceledFlag=!0)},t.event_initialize=function(e,t,r,n){e._initializedFlag=!0,e._stopPropagationFlag=!1,e._stopImmediatePropagationFlag=!1,e._canceledFlag=!1,e._isTrusted=!1,e._target=null,e._type=t,e._bubbles=r,e._cancelable=n},t.event_createAnEvent=m,t.event_innerEventCreationSteps=y,t.event_dispatch=v,t.event_appendToAnEventPath=_,t.event_invoke=g,t.event_innerInvoke=b,t.event_fireAnEvent=function(e,t,r,n,i){void 0===r&&(r=c.EventImpl);var o=m(r);if(o._type=e,n)for(var a in n){o[a]=n[a]}return v(o,t,i)},t.event_createLegacyEvent=function(e){var t=null;switch(e.toLowerCase()){case"beforeunloadevent":case"compositionevent":break;case"customevent":t=l.CustomEventImpl;break;case"devicemotionevent":case"deviceorientationevent":case"dragevent":break;case"event":case"events":t=c.EventImpl}if(null===t)throw new h.NotSupportedError("Event constructor not found for interface "+e+".");var r=new t("");return r._type="",r._timeStamp=(new Date).getTime(),r._isTrusted=!1,r._initializedFlag=!1,r},t.event_getterEventHandlerIDLAttribute=function(e,t){return null},t.event_setterEventHandlerIDLAttribute=function(e,t,r){},t.event_determineTheTargetOfAnEventHandler=x,t.event_getTheCurrentValueOfAnEventHandler=w,t.event_activateAnEventHandler=E,t.event_deactivateAnEventHandler=D},function(e,t,r){"use strict";var n,i=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}),o=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,r=t&&e[t],n=0;if(r)return r.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")},a=this&&this.__read||function(e,t){var r="function"==typeof Symbol&&e[Symbol.iterator];if(!r)return e;var n,i,o=r.call(e),a=[];try{for(;(void 0===t||t-- >0)&&!(n=o.next()).done;)a.push(n.value)}catch(e){i={error:e}}finally{try{n&&!n.done&&(r=o.return)&&r.call(o)}finally{if(i)throw i.error}}return a};Object.defineProperty(t,"__esModule",{value:!0});var s=r(6),u=r(2),l=r(9),c=r(34),h=r(3),p=r(1),f=r(7),d=r(152),m=r(0),y=r(12),v=function(e){function t(){var t=e.call(this)||this;return t._children=new Set,t._encoding={name:"UTF-8",labels:["unicode-1-1-utf-8","utf-8","utf8"]},t._contentType="application/xml",t._URL={scheme:"about",username:"",password:"",host:null,port:null,path:["blank"],query:null,fragment:null,_cannotBeABaseURLFlag:!0,_blobURLEntry:null},t._origin=null,t._type="xml",t._mode="no-quirks",t._documentElement=null,t._hasNamespaces=!1,t._nodeDocumentOverwrite=null,t}return i(t,e),Object.defineProperty(t.prototype,"_nodeDocument",{get:function(){return this._nodeDocumentOverwrite||this},set:function(e){this._nodeDocumentOverwrite=e},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"implementation",{get:function(){return this._implementation||(this._implementation=m.create_domImplementation(this))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"URL",{get:function(){return d.urlSerializer(this._URL)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"documentURI",{get:function(){return this.URL},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"origin",{get:function(){return"null"},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"compatMode",{get:function(){return"quirks"===this._mode?"BackCompat":"CSS1Compat"},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"characterSet",{get:function(){return this._encoding.name},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"charset",{get:function(){return this._encoding.name},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"inputEncoding",{get:function(){return this._encoding.name},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"contentType",{get:function(){return this._contentType},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"doctype",{get:function(){var e,t;try{for(var r=o(this._children),n=r.next();!n.done;n=r.next()){var i=n.value;if(h.Guard.isDocumentTypeNode(i))return i}}catch(t){e={error:t}}finally{try{n&&!n.done&&(t=r.return)&&t.call(r)}finally{if(e)throw e.error}}return null},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"documentElement",{get:function(){return this._documentElement},enumerable:!0,configurable:!0}),t.prototype.getElementsByTagName=function(e){return m.node_listOfElementsWithQualifiedName(e,this)},t.prototype.getElementsByTagNameNS=function(e,t){return m.node_listOfElementsWithNamespace(e,t,this)},t.prototype.getElementsByClassName=function(e){return m.node_listOfElementsWithClassNames(e,this)},t.prototype.createElement=function(e,t){if(!m.xml_isName(e))throw new l.InvalidCharacterError;"html"===this._type&&(e=e.toLowerCase());var r=null;void 0!==t&&(r=p.isString(t)?t:t.is);var n="html"===this._type||"application/xhtml+xml"===this._contentType?f.namespace.HTML:null;return m.element_createAnElement(this,e,n,null,r,!0)},t.prototype.createElementNS=function(e,t,r){return m.document_internalCreateElementNS(this,e,t,r)},t.prototype.createDocumentFragment=function(){return m.create_documentFragment(this)},t.prototype.createTextNode=function(e){return m.create_text(this,e)},t.prototype.createCDATASection=function(e){if("html"===this._type)throw new l.NotSupportedError;if(-1!==e.indexOf("]]>"))throw new l.InvalidCharacterError;return m.create_cdataSection(this,e)},t.prototype.createComment=function(e){return m.create_comment(this,e)},t.prototype.createProcessingInstruction=function(e,t){if(!m.xml_isName(e))throw new l.InvalidCharacterError;if(-1!==t.indexOf("?>"))throw new l.InvalidCharacterError;return m.create_processingInstruction(this,e,t)},t.prototype.importNode=function(e,t){if(void 0===t&&(t=!1),h.Guard.isDocumentNode(e)||h.Guard.isShadowRoot(e))throw new l.NotSupportedError;return m.node_clone(e,this,t)},t.prototype.adoptNode=function(e){if(h.Guard.isDocumentNode(e))throw new l.NotSupportedError;if(h.Guard.isShadowRoot(e))throw new l.HierarchyRequestError;return m.document_adopt(e,this),e},t.prototype.createAttribute=function(e){if(!m.xml_isName(e))throw new l.InvalidCharacterError;return"html"===this._type&&(e=e.toLowerCase()),m.create_attr(this,e)},t.prototype.createAttributeNS=function(e,t){var r=a(m.namespace_validateAndExtract(e,t),3),n=r[0],i=r[1],o=r[2],s=m.create_attr(this,o);return s._namespace=n,s._namespacePrefix=i,s},t.prototype.createEvent=function(e){return m.event_createLegacyEvent(e)},t.prototype.createRange=function(){var e=m.create_range();return e._start=[this,0],e._end=[this,0],e},t.prototype.createNodeIterator=function(e,t,r){void 0===t&&(t=u.WhatToShow.All),void 0===r&&(r=null);var n=m.create_nodeIterator(e,e,!0);return n._whatToShow=t,n._iteratorCollection=m.create_nodeList(e),p.isFunction(r)?(n._filter=m.create_nodeFilter(),n._filter.acceptNode=r):n._filter=r,n},t.prototype.createTreeWalker=function(e,t,r){void 0===t&&(t=u.WhatToShow.All),void 0===r&&(r=null);var n=m.create_treeWalker(e,e);return n._whatToShow=t,p.isFunction(r)?(n._filter=m.create_nodeFilter(),n._filter.acceptNode=r):n._filter=r,n},t.prototype._getTheParent=function(e){return"load"===e._type?null:s.dom.window},t.prototype.getElementById=function(e){throw new Error("Mixin: NonElementParentNode not implemented.")},Object.defineProperty(t.prototype,"children",{get:function(){throw new Error("Mixin: ParentNode not implemented.")},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"firstElementChild",{get:function(){throw new Error("Mixin: ParentNode not implemented.")},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"lastElementChild",{get:function(){throw new Error("Mixin: ParentNode not implemented.")},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"childElementCount",{get:function(){throw new Error("Mixin: ParentNode not implemented.")},enumerable:!0,configurable:!0}),t.prototype.prepend=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];throw new Error("Mixin: ParentNode not implemented.")},t.prototype.append=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];throw new Error("Mixin: ParentNode not implemented.")},t.prototype.querySelector=function(e){throw new Error("Mixin: ParentNode not implemented.")},t.prototype.querySelectorAll=function(e){throw new Error("Mixin: ParentNode not implemented.")},t}(c.NodeImpl);t.DocumentImpl=v,y.idl_defineConst(v.prototype,"_nodeType",u.NodeType.Document)},function(e,t,r){"use strict";var n,i=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}),o=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,r=t&&e[t],n=0;if(r)return r.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")},a=this&&this.__read||function(e,t){var r="function"==typeof Symbol&&e[Symbol.iterator];if(!r)return e;var n,i,o=r.call(e),a=[];try{for(;(void 0===t||t-- >0)&&!(n=o.next()).done;)a.push(n.value)}catch(e){i={error:e}}finally{try{n&&!n.done&&(r=o.return)&&r.call(o)}finally{if(i)throw i.error}}return a};Object.defineProperty(t,"__esModule",{value:!0});var s=r(2),u=r(34),l=r(9),c=r(7),h=r(0),p=r(12),f=function(e){function t(){var t=e.call(this)||this;return t._children=new Set,t._namespace=null,t._namespacePrefix=null,t._localName="",t._customElementState="undefined",t._customElementDefinition=null,t._is=null,t._shadowRoot=null,t._attributeList=h.create_namedNodeMap(t),t._attributeChangeSteps=[],t._name="",t._assignedSlot=null,t}return i(t,e),Object.defineProperty(t.prototype,"namespaceURI",{get:function(){return this._namespace},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"prefix",{get:function(){return this._namespacePrefix},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"localName",{get:function(){return this._localName},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"tagName",{get:function(){return this._htmlUppercasedQualifiedName},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"id",{get:function(){return h.element_getAnAttributeValue(this,"id")},set:function(e){h.element_setAnAttributeValue(this,"id",e)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"className",{get:function(){return h.element_getAnAttributeValue(this,"class")},set:function(e){h.element_setAnAttributeValue(this,"class",e)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"classList",{get:function(){var e=h.element_getAnAttributeByName("class",this);return null===e&&(e=h.create_attr(this._nodeDocument,"class")),h.create_domTokenList(this,e)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"slot",{get:function(){return h.element_getAnAttributeValue(this,"slot")},set:function(e){h.element_setAnAttributeValue(this,"slot",e)},enumerable:!0,configurable:!0}),t.prototype.hasAttributes=function(){return 0!==this._attributeList.length},Object.defineProperty(t.prototype,"attributes",{get:function(){return this._attributeList},enumerable:!0,configurable:!0}),t.prototype.getAttributeNames=function(){var e,t,r=[];try{for(var n=o(this._attributeList),i=n.next();!i.done;i=n.next()){var a=i.value;r.push(a._qualifiedName)}}catch(t){e={error:t}}finally{try{i&&!i.done&&(t=n.return)&&t.call(n)}finally{if(e)throw e.error}}return r},t.prototype.getAttribute=function(e){var t=h.element_getAnAttributeByName(e,this);return t?t._value:null},t.prototype.getAttributeNS=function(e,t){var r=h.element_getAnAttributeByNamespaceAndLocalName(e,t,this);return r?r._value:null},t.prototype.setAttribute=function(e,t){if(!h.xml_isName(e))throw new l.InvalidCharacterError;this._namespace===c.namespace.HTML&&"html"===this._nodeDocument._type&&(e=e.toLowerCase());for(var r=null,n=0;n<this._attributeList.length;n++){var i=this._attributeList[n];if(i._qualifiedName===e){r=i;break}}if(null===r)return(r=h.create_attr(this._nodeDocument,e))._value=t,void h.element_append(r,this);h.element_change(r,this,t)},t.prototype.setAttributeNS=function(e,t,r){var n=a(h.namespace_validateAndExtract(e,t),3),i=n[0],o=n[1],s=n[2];h.element_setAnAttributeValue(this,s,r,o,i)},t.prototype.removeAttribute=function(e){h.element_removeAnAttributeByName(e,this)},t.prototype.removeAttributeNS=function(e,t){h.element_removeAnAttributeByNamespaceAndLocalName(e,t,this)},t.prototype.hasAttribute=function(e){this._namespace===c.namespace.HTML&&"html"===this._nodeDocument._type&&(e=e.toLowerCase());for(var t=0;t<this._attributeList.length;t++){if(this._attributeList[t]._qualifiedName===e)return!0}return!1},t.prototype.toggleAttribute=function(e,t){if(!h.xml_isName(e))throw new l.InvalidCharacterError;this._namespace===c.namespace.HTML&&"html"===this._nodeDocument._type&&(e=e.toLowerCase());for(var r=null,n=0;n<this._attributeList.length;n++){var i=this._attributeList[n];if(i._qualifiedName===e){r=i;break}}return null===r?(void 0===t||!0===t)&&((r=h.create_attr(this._nodeDocument,e))._value="",h.element_append(r,this),!0):void 0!==t&&!1!==t||(h.element_removeAnAttributeByName(e,this),!1)},t.prototype.hasAttributeNS=function(e,t){for(var r=e||null,n=0;n<this._attributeList.length;n++){var i=this._attributeList[n];if(i._namespace===r&&i._localName===t)return!0}return!1},t.prototype.getAttributeNode=function(e){return h.element_getAnAttributeByName(e,this)},t.prototype.getAttributeNodeNS=function(e,t){return h.element_getAnAttributeByNamespaceAndLocalName(e,t,this)},t.prototype.setAttributeNode=function(e){return h.element_setAnAttribute(e,this)},t.prototype.setAttributeNodeNS=function(e){return h.element_setAnAttribute(e,this)},t.prototype.removeAttributeNode=function(e){for(var t=!1,r=0;r<this._attributeList.length;r++){if(this._attributeList[r]===e){t=!0;break}}if(!t)throw new l.NotFoundError;return h.element_remove(e,this),e},t.prototype.attachShadow=function(e){if(this._namespace!==c.namespace.HTML)throw new l.NotSupportedError;if(!h.customElement_isValidCustomElementName(this._localName)&&!h.customElement_isValidShadowHostName(this._localName))throw new l.NotSupportedError;if(h.customElement_isValidCustomElementName(this._localName)||null!==this._is){var t=h.customElement_lookUpACustomElementDefinition(this._nodeDocument,this._namespace,this._localName,this._is);if(null!==t&&!0===t.disableShadow)throw new l.NotSupportedError}if(null!==this._shadowRoot)throw new l.NotSupportedError;var r=h.create_shadowRoot(this._nodeDocument,this);return r._mode=e.mode,this._shadowRoot=r,r},Object.defineProperty(t.prototype,"shadowRoot",{get:function(){var e=this._shadowRoot;return null===e||"closed"===e.mode?null:e},enumerable:!0,configurable:!0}),t.prototype.closest=function(e){throw new l.NotImplementedError},t.prototype.matches=function(e){throw new l.NotImplementedError},t.prototype.webkitMatchesSelector=function(e){return this.matches(e)},t.prototype.getElementsByTagName=function(e){return h.node_listOfElementsWithQualifiedName(e,this)},t.prototype.getElementsByTagNameNS=function(e,t){return h.node_listOfElementsWithNamespace(e,t,this)},t.prototype.getElementsByClassName=function(e){return h.node_listOfElementsWithClassNames(e,this)},t.prototype.insertAdjacentElement=function(e,t){return h.element_insertAdjacent(this,e,t)},t.prototype.insertAdjacentText=function(e,t){var r=h.create_text(this._nodeDocument,t);h.element_insertAdjacent(this,e,r)},Object.defineProperty(t.prototype,"_qualifiedName",{get:function(){return this._namespacePrefix?this._namespacePrefix+":"+this._localName:this._localName},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"_htmlUppercasedQualifiedName",{get:function(){var e=this._qualifiedName;return this._namespace===c.namespace.HTML&&"html"===this._nodeDocument._type&&(e=e.toUpperCase()),e},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"children",{get:function(){throw new Error("Mixin: ParentNode not implemented.")},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"firstElementChild",{get:function(){throw new Error("Mixin: ParentNode not implemented.")},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"lastElementChild",{get:function(){throw new Error("Mixin: ParentNode not implemented.")},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"childElementCount",{get:function(){throw new Error("Mixin: ParentNode not implemented.")},enumerable:!0,configurable:!0}),t.prototype.prepend=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];throw new Error("Mixin: ParentNode not implemented.")},t.prototype.append=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];throw new Error("Mixin: ParentNode not implemented.")},t.prototype.querySelector=function(e){throw new Error("Mixin: ParentNode not implemented.")},t.prototype.querySelectorAll=function(e){throw new Error("Mixin: ParentNode not implemented.")},Object.defineProperty(t.prototype,"previousElementSibling",{get:function(){throw new Error("Mixin: NonDocumentTypeChildNode not implemented.")},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"nextElementSibling",{get:function(){throw new Error("Mixin: NonDocumentTypeChildNode not implemented.")},enumerable:!0,configurable:!0}),t.prototype.before=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];throw new Error("Mixin: ChildNode not implemented.")},t.prototype.after=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];throw new Error("Mixin: ChildNode not implemented.")},t.prototype.replaceWith=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];throw new Error("Mixin: ChildNode not implemented.")},t.prototype.remove=function(){throw new Error("Mixin: ChildNode not implemented.")},Object.defineProperty(t.prototype,"assignedSlot",{get:function(){throw new Error("Mixin: Slotable not implemented.")},enumerable:!0,configurable:!0}),t._create=function(e,r,n,i){void 0===n&&(n=null),void 0===i&&(i=null);var o=new t;return o._localName=r,o._namespace=n,o._namespacePrefix=i,o._nodeDocument=e,o},t}(u.NodeImpl);t.ElementImpl=f,p.idl_defineConst(f.prototype,"_nodeType",s.NodeType.Element)},function(e,t,r){"use strict";var n,i=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});Object.defineProperty(t,"__esModule",{value:!0});var o=r(2),a=r(34),s=r(12),u=function(e){function t(t){void 0===t&&(t=null);var r=e.call(this)||this;return r._children=new Set,r._host=t,r}return i(t,e),t.prototype.getElementById=function(e){throw new Error("Mixin: NonElementParentNode not implemented.")},Object.defineProperty(t.prototype,"children",{get:function(){throw new Error("Mixin: ParentNode not implemented.")},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"firstElementChild",{get:function(){throw new Error("Mixin: ParentNode not implemented.")},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"lastElementChild",{get:function(){throw new Error("Mixin: ParentNode not implemented.")},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"childElementCount",{get:function(){throw new Error("Mixin: ParentNode not implemented.")},enumerable:!0,configurable:!0}),t.prototype.prepend=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];throw new Error("Mixin: ParentNode not implemented.")},t.prototype.append=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];throw new Error("Mixin: ParentNode not implemented.")},t.prototype.querySelector=function(e){throw new Error("Mixin: ParentNode not implemented.")},t.prototype.querySelectorAll=function(e){throw new Error("Mixin: ParentNode not implemented.")},t._create=function(e,r){void 0===r&&(r=null);var n=new t(r);return n._nodeDocument=e,n},t}(a.NodeImpl);t.DocumentFragmentImpl=u,s.idl_defineConst(u.prototype,"_nodeType",o.NodeType.DocumentFragment)},function(e,t,r){"use strict";var n,i=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}),o=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,r=t&&e[t],n=0;if(r)return r.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(t,"__esModule",{value:!0});var a=r(2),s=r(71),u=r(0),l=r(12),c=function(e){function t(t){void 0===t&&(t="");var r=e.call(this,t)||this;return r._name="",r._assignedSlot=null,r}return i(t,e),Object.defineProperty(t.prototype,"wholeText",{get:function(){var e,t,r="";try{for(var n=o(u.text_contiguousTextNodes(this,!0)),i=n.next();!i.done;i=n.next()){r+=i.value._data}}catch(t){e={error:t}}finally{try{i&&!i.done&&(t=n.return)&&t.call(n)}finally{if(e)throw e.error}}return r},enumerable:!0,configurable:!0}),t.prototype.splitText=function(e){return u.text_split(this,e)},Object.defineProperty(t.prototype,"assignedSlot",{get:function(){throw new Error("Mixin: Slotable not implemented.")},enumerable:!0,configurable:!0}),t._create=function(e,r){void 0===r&&(r="");var n=new t(r);return n._nodeDocument=e,n},t}(s.CharacterDataImpl);t.TextImpl=c,l.idl_defineConst(c.prototype,"_nodeType",a.NodeType.Text)},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(){function e(){}return Object.defineProperty(e.prototype,"_startNode",{get:function(){return this._start[0]},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"_startOffset",{get:function(){return this._start[1]},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"_endNode",{get:function(){return this._end[0]},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"_endOffset",{get:function(){return this._end[1]},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"_collapsed",{get:function(){return this._start[0]===this._end[0]&&this._start[1]===this._end[1]},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"startContainer",{get:function(){return this._startNode},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"startOffset",{get:function(){return this._startOffset},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"endContainer",{get:function(){return this._endNode},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"endOffset",{get:function(){return this._endOffset},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"collapsed",{get:function(){return this._collapsed},enumerable:!0,configurable:!0}),e}();t.AbstractRangeImpl=n},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(2),i=function(){function e(e){this._activeFlag=!1,this._root=e,this._whatToShow=n.WhatToShow.All,this._filter=null}return Object.defineProperty(e.prototype,"root",{get:function(){return this._root},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"whatToShow",{get:function(){return this._whatToShow},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"filter",{get:function(){return this._filter},enumerable:!0,configurable:!0}),e}();t.TraverserImpl=i},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(2),i=r(0),o=r(12),a=function(){function e(e,t){this._target=null,this._relatedTarget=null,this._touchTargetList=[],this._path=[],this._currentTarget=null,this._eventPhase=n.EventPhase.None,this._stopPropagationFlag=!1,this._stopImmediatePropagationFlag=!1,this._canceledFlag=!1,this._inPassiveListenerFlag=!1,this._composedFlag=!1,this._initializedFlag=!1,this._dispatchFlag=!1,this._isTrusted=!1,this._bubbles=!1,this._cancelable=!1,this._type=e,t&&(this._bubbles=t.bubbles||!1,this._cancelable=t.cancelable||!1,this._composedFlag=t.composed||!1),this._initializedFlag=!0,this._timeStamp=(new Date).getTime()}return Object.defineProperty(e.prototype,"type",{get:function(){return this._type},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"target",{get:function(){return this._target},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"srcElement",{get:function(){return this._target},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"currentTarget",{get:function(){return this._currentTarget},enumerable:!0,configurable:!0}),e.prototype.composedPath=function(){var e=[],t=this._path;if(0===t.length)return e;var r=this._currentTarget;if(null===r)throw new Error("Event currentTarget is null.");e.push(r);for(var n=0,i=0,o=t.length-1;o>=0;){if(t[o].rootOfClosedTree&&i++,t[o].invocationTarget===r){n=o;break}t[o].slotInClosedTree&&i--,o--}var a=i,s=i;for(o=n-1;o>=0;)t[o].rootOfClosedTree&&a++,a<=s&&e.unshift(t[o].invocationTarget),t[o].slotInClosedTree&&--a<s&&(s=a),o--;for(a=i,s=i,o=n+1;o<t.length;)t[o].slotInClosedTree&&a++,a<=s&&e.push(t[o].invocationTarget),t[o].rootOfClosedTree&&--a<s&&(s=a),o++;return e},Object.defineProperty(e.prototype,"eventPhase",{get:function(){return this._eventPhase},enumerable:!0,configurable:!0}),e.prototype.stopPropagation=function(){this._stopPropagationFlag=!0},Object.defineProperty(e.prototype,"cancelBubble",{get:function(){return this._stopPropagationFlag},set:function(e){e&&this.stopPropagation()},enumerable:!0,configurable:!0}),e.prototype.stopImmediatePropagation=function(){this._stopPropagationFlag=!0,this._stopImmediatePropagationFlag=!0},Object.defineProperty(e.prototype,"bubbles",{get:function(){return this._bubbles},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"cancelable",{get:function(){return this._cancelable},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"returnValue",{get:function(){return!this._canceledFlag},set:function(e){e||i.event_setTheCanceledFlag(this)},enumerable:!0,configurable:!0}),e.prototype.preventDefault=function(){i.event_setTheCanceledFlag(this)},Object.defineProperty(e.prototype,"defaultPrevented",{get:function(){return this._canceledFlag},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"composed",{get:function(){return this._composedFlag},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"isTrusted",{get:function(){return this._isTrusted},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"timeStamp",{get:function(){return this._timeStamp},enumerable:!0,configurable:!0}),e.prototype.initEvent=function(e,t,r){void 0===t&&(t=!1),void 0===r&&(r=!1),this._dispatchFlag||i.event_initialize(this,e,t,r)},e.NONE=0,e.CAPTURING_PHASE=1,e.AT_TARGET=2,e.BUBBLING_PHASE=3,e}();t.EventImpl=a,o.idl_defineConst(a.prototype,"NONE",0),o.idl_defineConst(a.prototype,"CAPTURING_PHASE",1),o.idl_defineConst(a.prototype,"AT_TARGET",2),o.idl_defineConst(a.prototype,"BUBBLING_PHASE",3)},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(2),i=r(9);t.traversal_filter=function(e,t){if(e._activeFlag)throw new i.InvalidStateError;var r=1<<t._nodeType-1;if(0==(e.whatToShow&r))return n.FilterResult.Skip;if(!e.filter)return n.FilterResult.Accept;e._activeFlag=!0;var o=n.FilterResult.Reject;try{o=e.filter.acceptNode(t)}catch(t){throw e._activeFlag=!1,t}return e._activeFlag=!1,o}},function(e,t,r){"use strict";var n=this&&this.__read||function(e,t){var r="function"==typeof Symbol&&e[Symbol.iterator];if(!r)return e;var n,i,o=r.call(e),a=[];try{for(;(void 0===t||t-- >0)&&!(n=o.next()).done;)a.push(n.value)}catch(e){i={error:e}}finally{try{n&&!n.done&&(r=o.return)&&r.call(o)}finally{if(i)throw i.error}}return a},i=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,r=t&&e[t],n=0;if(r)return r.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(t,"__esModule",{value:!0});var o=r(6),a=r(3),s=r(1),u=r(99),l=r(73),c=r(17),h=r(173),p=r(30),f=r(52),d=r(37);t.document_elementInterface=function(e,t){return u.ElementImpl},t.document_internalCreateElementNS=function(e,t,r,i){var o=n(h.namespace_validateAndExtract(t,r),3),a=o[0],u=o[1],l=o[2],c=null;return void 0!==i&&(c=s.isString(i)?i:i.is),f.element_createAnElement(e,l,a,u,c,!0)},t.document_adopt=function(e,t){var r,n;if(e._nodeDocument!==t||null!==e._parent){var s=e._nodeDocument;if(e._parent&&d.mutation_remove(e,e._parent),t!==s)for(var u=c.tree_getFirstDescendantNode(e,!0,!0);null!==u;){if(u._nodeDocument=t,a.Guard.isElementNode(u))try{for(var h=(r=void 0,i(u._attributeList._asArray())),f=h.next();!f.done;f=h.next()){f.value._nodeDocument=t}}catch(e){r={error:e}}finally{try{f&&!f.done&&(n=h.return)&&n.call(h)}finally{if(r)throw r.error}}o.dom.features.customElements&&a.Guard.isElementNode(u)&&"custom"===u._customElementState&&l.customElement_enqueueACustomElementCallbackReaction(u,"adoptedCallback",[s,t]),o.dom.features.steps&&p.dom_runAdoptingSteps(u,s),u=c.tree_getNextDescendantNode(e,u,!0,!0)}}}},function(e,t,r){"use strict";var n=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,r=t&&e[t],n=0;if(r)return r.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(t,"__esModule",{value:!0});var i=r(6),o=r(3),a=r(9),s=r(17),u=r(51),l=r(30);t.characterData_replaceData=function(e,t,r,c){var h,p,f=s.tree_nodeLength(e);if(t>f)throw new a.IndexSizeError("Offset exceeds character data length. Offset: "+t+", Length: "+f+", Node is "+e.nodeName+".");t+r>f&&(r=f-t),i.dom.features.mutationObservers&&u.observer_queueMutationRecord("characterData",e,null,null,e._data,[],[],null,null);var d=e._data.substring(0,t)+c+e._data.substring(t+r);e._data=d;try{for(var m=n(i.dom.rangeList),y=m.next();!y.done;y=m.next()){var v=y.value;v._start[0]===e&&v._start[1]>t&&v._start[1]<=t+r&&(v._start[1]=t),v._end[0]===e&&v._end[1]>t&&v._end[1]<=t+r&&(v._end[1]=t),v._start[0]===e&&v._start[1]>t+r&&(v._start[1]+=c.length-r),v._end[0]===e&&v._end[1]>t+r&&(v._end[1]+=c.length-r)}}catch(e){h={error:e}}finally{try{y&&!y.done&&(p=m.return)&&p.call(m)}finally{if(h)throw h.error}}i.dom.features.steps&&o.Guard.isTextNode(e)&&null!==e._parent&&l.dom_runChildTextContentChangeSteps(e._parent)},t.characterData_substringData=function(e,t,r){var n=s.tree_nodeLength(e);if(t>n)throw new a.IndexSizeError("Offset exceeds character data length. Offset: "+t+", Length: "+n+", Node is "+e.nodeName+".");return t+r>n?e._data.substr(t):e._data.substr(t,r)}},function(e,t,r){"use strict";var n=this&&this.__read||function(e,t){var r="function"==typeof Symbol&&e[Symbol.iterator];if(!r)return e;var n,i,o=r.call(e),a=[];try{for(;(void 0===t||t-- >0)&&!(n=o.next()).done;)a.push(n.value)}catch(e){i={error:e}}finally{try{n&&!n.done&&(r=o.return)&&r.call(o)}finally{if(i)throw i.error}}return a},i=this&&this.__spread||function(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(n(arguments[t]));return e},o=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,r=t&&e[t],n=0;if(r)return r.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(t,"__esModule",{value:!0});var a=r(7);function s(e){var t=a.string.splitAStringOnASCIIWhitespace(e);return new Set(t)}function u(e){return i(e).join(" ")}t.orderedSet_parse=s,t.orderedSet_serialize=u,t.orderedSet_sanitize=function(e){return u(s(e))},t.orderedSet_contains=function(e,t,r){var n,i,a,s;try{for(var u=o(t),l=u.next();!l.done;l=u.next()){var c=l.value,h=!1;try{for(var p=(a=void 0,o(e)),f=p.next();!f.done;f=p.next()){var d=f.value;if(r){if(d===c){h=!0;break}}else if(d.toUpperCase()===c.toUpperCase()){h=!0;break}}}catch(e){a={error:e}}finally{try{f&&!f.done&&(s=p.return)&&s.call(p)}finally{if(a)throw a.error}}if(!h)return!1}}catch(e){n={error:e}}finally{try{l&&!l.done&&(i=u.return)&&i.call(u)}finally{if(n)throw n.error}}return!0}},function(e,t,r){"use strict";r(179),Object.defineProperty(t,"__esModule",{value:!0});var n=r(262),i=r(110),o=r(1);i.dom.setFeatures(!1),t.createDocument=function(){var e=(new n.DOMImplementation).createDocument(null,"root",null);return e.documentElement&&e.removeChild(e.documentElement),e},t.sanitizeInput=function(e,t){if(null==e)return e;if(void 0===t)return e+"";var r="";e+="";for(var n=0;n<e.length;n++){var i=e.charCodeAt(n);if(9===i||10===i||13===i||i>=32&&i<=55295||i>=57344&&i<=65533)r+=e.charAt(n);else if(i>=55296&&i<=56319&&n<e.length-1){var a=e.charCodeAt(n+1);a>=56320&&a<=57343?(i=1024*(i-55296)+a-56320+65536,r+=String.fromCodePoint(i),n++):r+=o.isString(t)?t:t(e.charAt(n),n,e)}else r+=o.isString(t)?t:t(e.charAt(n),n,e)}return r}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(1),i=r(153);t.AbortController=i.AbortControllerImpl;var o=r(154);t.AbortSignal=o.AbortSignalImpl;var a=r(102);t.AbstractRange=a.AbstractRangeImpl;var s=r(157);t.Attr=s.AttrImpl;var u=r(158);t.CDATASection=u.CDATASectionImpl;var l=r(71);t.CharacterData=l.CharacterDataImpl;var c=r(263),h=r(159);t.Comment=h.CommentImpl;var p=r(171);t.CustomEvent=p.CustomEventImpl;var f=r(100);t.DocumentFragment=f.DocumentFragmentImpl;var d=r(98);t.Document=d.DocumentImpl;var m=r(264),y=r(155);t.DocumentType=y.DocumentTypeImpl;var v=r(6);t.dom=v.dom;var _=r(148);t.DOMImplementation=_.DOMImplementationImpl;var g=r(170);t.DOMTokenList=g.DOMTokenListImpl;var b=r(99);t.Element=b.ElementImpl;var x=r(104);t.Event=x.EventImpl;var w=r(70);t.EventTarget=w.EventTargetImpl;var E=r(161);t.HTMLCollection=E.HTMLCollectionImpl;var D=r(265);t.MutationObserver=D.MutationObserverImpl;var S=r(169);t.MutationRecord=S.MutationRecordImpl;var C=r(164);t.NamedNodeMap=C.NamedNodeMapImpl;var A=r(168);t.NodeFilter=A.NodeFilterImpl;var N=r(34);t.Node=N.NodeImpl;var T=r(166);t.NodeIterator=T.NodeIteratorImpl;var O=r(162);t.NodeList=O.NodeListImpl;var F=r(163);t.NodeListStatic=F.NodeListStaticImpl;var k=r(266),P=r(267),I=r(268),L=r(160);t.ProcessingInstruction=L.ProcessingInstructionImpl;var M=r(165);t.Range=M.RangeImpl;var B=r(156);t.ShadowRoot=B.ShadowRootImpl;var j=r(269),R=r(270);t.StaticRange=R.StaticRangeImpl;var z=r(101);t.Text=z.TextImpl;var U=r(103);t.Traverser=U.TraverserImpl;var G=r(167);t.TreeWalker=G.TreeWalkerImpl;var X=r(149);t.Window=X.WindowImpl;var q=r(151);t.XMLDocument=q.XMLDocumentImpl,n.applyMixin(b.ElementImpl,c.ChildNodeImpl),n.applyMixin(l.CharacterDataImpl,c.ChildNodeImpl),n.applyMixin(y.DocumentTypeImpl,c.ChildNodeImpl),n.applyMixin(d.DocumentImpl,m.DocumentOrShadowRootImpl),n.applyMixin(B.ShadowRootImpl,m.DocumentOrShadowRootImpl),n.applyMixin(b.ElementImpl,k.NonDocumentTypeChildNodeImpl),n.applyMixin(l.CharacterDataImpl,k.NonDocumentTypeChildNodeImpl),n.applyMixin(d.DocumentImpl,P.NonElementParentNodeImpl),n.applyMixin(f.DocumentFragmentImpl,P.NonElementParentNodeImpl),n.applyMixin(d.DocumentImpl,I.ParentNodeImpl),n.applyMixin(f.DocumentFragmentImpl,I.ParentNodeImpl),n.applyMixin(b.ElementImpl,I.ParentNodeImpl),n.applyMixin(z.TextImpl,j.SlotableImpl),n.applyMixin(b.ElementImpl,j.SlotableImpl)},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),function(e){e[e.EOF=0]="EOF",e[e.Declaration=1]="Declaration",e[e.DocType=2]="DocType",e[e.Element=3]="Element",e[e.Text=4]="Text",e[e.CDATA=5]="CDATA",e[e.PI=6]="PI",e[e.Comment=7]="Comment",e[e.ClosingTag=8]="ClosingTag"}(t.TokenType||(t.TokenType={}))},function(e,t,r){"use strict";r(64),r(20),r(66);var n,i=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});Object.defineProperty(t,"__esModule",{value:!0});var o=r(1),a=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return i(t,e),t.prototype._parse=function(e,t){var r=this,n=this._builderOptions,i=null;return o.isFunction(t)?i=this.parse(e,t.apply(this)):o.isArray(t)||o.isSet(t)?o.forEachArray(t,(function(t){return i=r.parse(e,t)}),this):o.isMap(t)||o.isObject(t)?o.forEachObject(t,(function(t,a){if(o.isFunction(a)&&(a=a.apply(r)),n.ignoreConverters||0!==t.indexOf(n.convert.att))if(n.ignoreConverters||0!==t.indexOf(n.convert.text))if(n.ignoreConverters||0!==t.indexOf(n.convert.cdata))if(n.ignoreConverters||0!==t.indexOf(n.convert.comment))if(n.ignoreConverters||0!==t.indexOf(n.convert.ins))if((o.isArray(a)||o.isSet(a))&&o.isEmpty(a));else if((o.isMap(a)||o.isObject(a))&&o.isEmpty(a))i=r.element(e,void 0,r.sanitize(t))||i;else if(n.keepNullNodes||null!=a)if(o.isArray(a)||o.isSet(a))o.forEachArray(a,(function(n){var o={};o[t]=n,i=r.parse(e,o)}),r);else if(o.isMap(a)||o.isObject(a)){(s=r.element(e,void 0,r.sanitize(t)))&&(i=s,r.parse(s,a))}else if(null!=a&&""!==a){var s;(s=r.element(e,void 0,r.sanitize(t)))&&(i=s,r.text(s,r._decodeText(r.sanitize(a))))}else i=r.element(e,void 0,r.sanitize(t))||i;else;else if(o.isString(a)){var u=a.indexOf(" "),l=-1===u?a:a.substr(0,u),c=-1===u?"":a.substr(u+1);i=r.instruction(e,r.sanitize(l),r.sanitize(c))||i}else o.isArray(a)||o.isSet(a)?o.forEachArray(a,(function(t){var n=t.indexOf(" "),o=-1===n?t:t.substr(0,n),a=-1===n?"":t.substr(n+1);i=r.instruction(e,r.sanitize(o),r.sanitize(a))||i}),r):o.forEachObject(a,(function(t,n){return i=r.instruction(e,r.sanitize(t),r.sanitize(n))||i}),r);else o.isArray(a)||o.isSet(a)?o.forEachArray(a,(function(t){return i=r.comment(e,r.sanitize(t))||i}),r):i=r.comment(e,r.sanitize(a))||i;else o.isArray(a)||o.isSet(a)?o.forEachArray(a,(function(t){return i=r.cdata(e,r.sanitize(t))||i}),r):i=r.cdata(e,r.sanitize(a))||i;else i=o.isMap(a)||o.isObject(a)?r.parse(e,a):r.text(e,r._decodeText(r.sanitize(a)))||i;else if(t===n.convert.att){if(o.isArray(a)||o.isSet(a))throw new Error("Invalid attribute: "+a.toString()+". "+e._debugInfo());o.forEachObject(a,(function(t,n){i=r.attribute(e,void 0,r.sanitize(t),r._decodeAttributeValue(r.sanitize(n)))||i}))}else i=r.attribute(e,void 0,r.sanitize(t.substr(n.convert.att.length)),r._decodeAttributeValue(r.sanitize(a)))||i}),this):(n.keepNullNodes||null!=t)&&(i=this.text(e,this._decodeText(this.sanitize(t)))||i),i||e},t}(r(75).BaseReader);t.ObjectReader=a},function(e,t,r){"use strict";var n=r(39);e.exports=new n({explicit:[r(286),r(287),r(288)]})},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(e){this.level=0,this._builderOptions=e,this._writerOptions=e};t.BaseCBWriter=n},function(e,t,r){var n=r(16),i=r(8),o=r(116);e.exports=!n&&!i((function(){return 7!=Object.defineProperty(o("div"),"a",{get:function(){return 7}}).a}))},function(e,t,r){var n=r(11),i=r(13),o=n.document,a=i(o)&&i(o.createElement);e.exports=function(e){return a?o.createElement(e):{}}},function(e,t,r){var n=r(118),i=Function.toString;"function"!=typeof n.inspectSource&&(n.inspectSource=function(e){return i.call(e)}),e.exports=n.inspectSource},function(e,t,r){var n=r(11),i=r(80),o=n["__core-js_shared__"]||i("__core-js_shared__",{});e.exports=o},function(e,t,r){var n=r(14),i=r(187),o=r(55),a=r(15);e.exports=function(e,t){for(var r=i(t),s=a.f,u=o.f,l=0;l<r.length;l++){var c=r[l];n(e,c)||s(e,c,u(t,c))}}},function(e,t,r){var n=r(11);e.exports=n},function(e,t,r){var n=r(14),i=r(24),o=r(122).indexOf,a=r(45);e.exports=function(e,t){var r,s=i(e),u=0,l=[];for(r in s)!n(a,r)&&n(s,r)&&l.push(r);for(;t.length>u;)n(s,r=t[u++])&&(~o(l,r)||l.push(r));return l}},function(e,t,r){var n=r(24),i=r(26),o=r(83),a=function(e){return function(t,r,a){var s,u=n(t),l=i(u.length),c=o(a,l);if(e&&r!=r){for(;l>c;)if((s=u[c++])!=s)return!0}else for(;l>c;c++)if((e||c in u)&&u[c]===r)return e||c||0;return!e&&-1}};e.exports={includes:a(!0),indexOf:a(!1)}},function(e,t,r){var n=r(8),i=/#|\.prototype\./,o=function(e,t){var r=s[a(e)];return r==l||r!=u&&("function"==typeof t?n(t):!!t)},a=o.normalize=function(e){return String(e).replace(i,".").toLowerCase()},s=o.data={},u=o.NATIVE="N",l=o.POLYFILL="P";e.exports=o},function(e,t,r){var n=r(86);e.exports=n&&!Symbol.sham&&"symbol"==typeof Symbol.iterator},function(e,t,r){var n=r(5);t.f=n},function(e,t,r){var n=r(120),i=r(14),o=r(125),a=r(15).f;e.exports=function(e){var t=n.Symbol||(n.Symbol={});i(t,e)||a(t,e,{value:o.f(e)})}},function(e,t){e.exports=function(e){if("function"!=typeof e)throw TypeError(String(e)+" is not a function");return e}},function(e,t,r){var n=r(13),i=r(59),o=r(5)("species");e.exports=function(e,t){var r;return i(e)&&("function"!=typeof(r=e.constructor)||r!==Array&&!i(r.prototype)?n(r)&&null===(r=r[o])&&(r=void 0):r=void 0),new(void 0===r?Array:r)(0===t?0:t)}},function(e,t,r){var n,i,o=r(11),a=r(193),s=o.process,u=s&&s.versions,l=u&&u.v8;l?i=(n=l.split("."))[0]+n[1]:a&&(!(n=a.match(/Edge\/(\d+)/))||n[1]>=74)&&(n=a.match(/Chrome\/(\d+)/))&&(i=n[1]),e.exports=i&&+i},function(e,t,r){var n=r(5),i=r(60),o=r(15),a=n("unscopables"),s=Array.prototype;null==s[a]&&o.f(s,a,{configurable:!0,value:i(null)}),e.exports=function(e){s[a][e]=!0}},function(e,t,r){"use strict";var n,i,o,a=r(132),s=r(21),u=r(14),l=r(5),c=r(44),h=l("iterator"),p=!1;[].keys&&("next"in(o=[].keys())?(i=a(a(o)))!==Object.prototype&&(n=i):p=!0),null==n&&(n={}),c||u(n,h)||s(n,h,(function(){return this})),e.exports={IteratorPrototype:n,BUGGY_SAFARI_ITERATORS:p}},function(e,t,r){var n=r(14),i=r(27),o=r(57),a=r(196),s=o("IE_PROTO"),u=Object.prototype;e.exports=a?Object.getPrototypeOf:function(e){return e=i(e),n(e,s)?e[s]:"function"==typeof e.constructor&&e instanceof e.constructor?e.constructor.prototype:e instanceof Object?u:null}},function(e,t,r){var n=r(18),i=r(197);e.exports=Object.setPrototypeOf||("__proto__"in{}?function(){var e,t=!1,r={};try{(e=Object.getOwnPropertyDescriptor(Object.prototype,"__proto__").set).call(r,[]),t=r instanceof Array}catch(e){}return function(r,o){return n(r),i(o),t?e.call(r,o):r.__proto__=o,r}}():void 0)},function(e,t,r){"use strict";var n=r(56),i=r(15),o=r(40);e.exports=function(e,t,r){var a=n(t);a in e?i.f(e,a,o(0,r)):e[a]=r}},function(e,t,r){var n=r(90),i=r(42),o=r(5)("toStringTag"),a="Arguments"==i(function(){return arguments}());e.exports=n?i:function(e){var t,r,n;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(r=function(e,t){try{return e[t]}catch(e){}}(t=Object(e),o))?r:a?i(t):"Object"==(n=i(t))&&"function"==typeof t.callee?"Arguments":n}},function(e,t,r){"use strict";var n=r(18);e.exports=function(){var e=n(this),t="";return e.global&&(t+="g"),e.ignoreCase&&(t+="i"),e.multiline&&(t+="m"),e.dotAll&&(t+="s"),e.unicode&&(t+="u"),e.sticky&&(t+="y"),t}},function(e,t,r){var n=r(47),i=r(35),o=function(e){return function(t,r){var o,a,s=String(i(t)),u=n(r),l=s.length;return u<0||u>=l?e?"":void 0:(o=s.charCodeAt(u))<55296||o>56319||u+1===l||(a=s.charCodeAt(u+1))<56320||a>57343?e?s.charAt(u):o:e?s.slice(u,u+2):a-56320+(o-55296<<10)+65536}};e.exports={codeAt:o(!1),charAt:o(!0)}},function(e,t,r){var n=r(4),i=r(27),o=r(61);n({target:"Object",stat:!0,forced:r(8)((function(){o(1)}))},{keys:function(e){return o(i(e))}})},function(e,t,r){"use strict";var n=r(4),i=r(11),o=r(123),a=r(25),s=r(140),u=r(141),l=r(142),c=r(13),h=r(8),p=r(208),f=r(62),d=r(209);e.exports=function(e,t,r){var m=-1!==e.indexOf("Map"),y=-1!==e.indexOf("Weak"),v=m?"set":"add",_=i[e],g=_&&_.prototype,b=_,x={},w=function(e){var t=g[e];a(g,e,"add"==e?function(e){return t.call(this,0===e?0:e),this}:"delete"==e?function(e){return!(y&&!c(e))&&t.call(this,0===e?0:e)}:"get"==e?function(e){return y&&!c(e)?void 0:t.call(this,0===e?0:e)}:"has"==e?function(e){return!(y&&!c(e))&&t.call(this,0===e?0:e)}:function(e,r){return t.call(this,0===e?0:e,r),this})};if(o(e,"function"!=typeof _||!(y||g.forEach&&!h((function(){(new _).entries().next()})))))b=r.getConstructor(t,e,m,v),s.REQUIRED=!0;else if(o(e,!0)){var E=new b,D=E[v](y?{}:-0,1)!=E,S=h((function(){E.has(1)})),C=p((function(e){new _(e)})),A=!y&&h((function(){for(var e=new _,t=5;t--;)e[v](t,t);return!e.has(-0)}));C||((b=t((function(t,r){l(t,b,e);var n=d(new _,t,b);return null!=r&&u(r,n[v],n,m),n}))).prototype=g,g.constructor=b),(S||A)&&(w("delete"),w("has"),m&&w("get")),(A||D)&&w(v),y&&g.clear&&delete g.clear}return x[e]=b,n({global:!0,forced:b!=_},x),f(b,e),y||r.setStrong(b,e,m),b}},function(e,t,r){var n=r(45),i=r(13),o=r(14),a=r(15).f,s=r(58),u=r(204),l=s("meta"),c=0,h=Object.isExtensible||function(){return!0},p=function(e){a(e,l,{value:{objectID:"O"+ ++c,weakData:{}}})},f=e.exports={REQUIRED:!1,fastKey:function(e,t){if(!i(e))return"symbol"==typeof e?e:("string"==typeof e?"S":"P")+e;if(!o(e,l)){if(!h(e))return"F";if(!t)return"E";p(e)}return e[l].objectID},getWeakData:function(e,t){if(!o(e,l)){if(!h(e))return!0;if(!t)return!1;p(e)}return e[l].weakData},onFreeze:function(e){return u&&f.REQUIRED&&h(e)&&!o(e,l)&&p(e),e}};n[l]=!0},function(e,t,r){var n=r(18),i=r(205),o=r(26),a=r(87),s=r(206),u=r(207),l=function(e,t){this.stopped=e,this.result=t};(e.exports=function(e,t,r,c,h){var p,f,d,m,y,v,_,g=a(t,r,c?2:1);if(h)p=e;else{if("function"!=typeof(f=s(e)))throw TypeError("Target is not iterable");if(i(f)){for(d=0,m=o(e.length);m>d;d++)if((y=c?g(n(_=e[d])[0],_[1]):g(e[d]))&&y instanceof l)return y;return new l(!1)}p=f.call(e)}for(v=p.next;!(_=v.call(p)).done;)if("object"==typeof(y=u(p,g,_.value,c))&&y&&y instanceof l)return y;return new l(!1)}).stop=function(e){return new l(!0,e)}},function(e,t){e.exports=function(e,t,r){if(!(e instanceof t))throw TypeError("Incorrect "+(r?r+" ":"")+"invocation");return e}},function(e,t,r){"use strict";var n=r(15).f,i=r(60),o=r(210),a=r(87),s=r(142),u=r(141),l=r(88),c=r(211),h=r(16),p=r(140).fastKey,f=r(43),d=f.set,m=f.getterFor;e.exports={getConstructor:function(e,t,r,l){var c=e((function(e,n){s(e,c,t),d(e,{type:t,index:i(null),first:void 0,last:void 0,size:0}),h||(e.size=0),null!=n&&u(n,e[l],e,r)})),f=m(t),y=function(e,t,r){var n,i,o=f(e),a=v(e,t);return a?a.value=r:(o.last=a={index:i=p(t,!0),key:t,value:r,previous:n=o.last,next:void 0,removed:!1},o.first||(o.first=a),n&&(n.next=a),h?o.size++:e.size++,"F"!==i&&(o.index[i]=a)),e},v=function(e,t){var r,n=f(e),i=p(t);if("F"!==i)return n.index[i];for(r=n.first;r;r=r.next)if(r.key==t)return r};return o(c.prototype,{clear:function(){for(var e=f(this),t=e.index,r=e.first;r;)r.removed=!0,r.previous&&(r.previous=r.previous.next=void 0),delete t[r.index],r=r.next;e.first=e.last=void 0,h?e.size=0:this.size=0},delete:function(e){var t=f(this),r=v(this,e);if(r){var n=r.next,i=r.previous;delete t.index[r.index],r.removed=!0,i&&(i.next=n),n&&(n.previous=i),t.first==r&&(t.first=n),t.last==r&&(t.last=i),h?t.size--:this.size--}return!!r},forEach:function(e){for(var t,r=f(this),n=a(e,arguments.length>1?arguments[1]:void 0,3);t=t?t.next:r.first;)for(n(t.value,t.key,this);t&&t.removed;)t=t.previous},has:function(e){return!!v(this,e)}}),o(c.prototype,r?{get:function(e){var t=v(this,e);return t&&t.value},set:function(e,t){return y(this,0===e?0:e,t)}}:{add:function(e){return y(this,e=0===e?0:e,e)}}),h&&n(c.prototype,"size",{get:function(){return f(this).size}}),c},setStrong:function(e,t,r){var n=t+" Iterator",i=m(t),o=m(n);l(e,t,(function(e,t){d(this,{type:n,target:e,state:i(e),kind:t,last:void 0})}),(function(){for(var e=o(this),t=e.kind,r=e.last;r&&r.removed;)r=r.previous;return e.target&&(e.last=r=r?r.next:e.state.first)?"keys"==t?{value:r.key,done:!1}:"values"==t?{value:r.value,done:!1}:{value:[r.key,r.value],done:!1}:(e.target=void 0,{value:void 0,done:!0})}),r?"entries":"values",!r,!0),c(t)}}},function(e,t,r){"use strict";var n,i=r(4),o=r(55).f,a=r(26),s=r(222),u=r(35),l=r(224),c=r(44),h="".endsWith,p=Math.min,f=l("endsWith");i({target:"String",proto:!0,forced:!!(c||f||(n=o(String.prototype,"endsWith"),!n||n.writable))&&!f},{endsWith:function(e){var t=String(u(this));s(e);var r=arguments.length>1?arguments[1]:void 0,n=a(t.length),i=void 0===r?n:p(a(r),n),o=String(e);return h?h.call(t,o,i):t.slice(i-o.length,i)===o}})},function(e,t,r){"use strict";(function(e){
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <http://feross.org>
 * @license  MIT
 */
var n=r(229),i=r(230),o=r(231);function a(){return u.TYPED_ARRAY_SUPPORT?2147483647:1073741823}function s(e,t){if(a()<t)throw new RangeError("Invalid typed array length");return u.TYPED_ARRAY_SUPPORT?(e=new Uint8Array(t)).__proto__=u.prototype:(null===e&&(e=new u(t)),e.length=t),e}function u(e,t,r){if(!(u.TYPED_ARRAY_SUPPORT||this instanceof u))return new u(e,t,r);if("number"==typeof e){if("string"==typeof t)throw new Error("If encoding is specified then the first argument must be a string");return h(this,e)}return l(this,e,t,r)}function l(e,t,r,n){if("number"==typeof t)throw new TypeError('"value" argument must not be a number');return"undefined"!=typeof ArrayBuffer&&t instanceof ArrayBuffer?function(e,t,r,n){if(t.byteLength,r<0||t.byteLength<r)throw new RangeError("'offset' is out of bounds");if(t.byteLength<r+(n||0))throw new RangeError("'length' is out of bounds");t=void 0===r&&void 0===n?new Uint8Array(t):void 0===n?new Uint8Array(t,r):new Uint8Array(t,r,n);u.TYPED_ARRAY_SUPPORT?(e=t).__proto__=u.prototype:e=p(e,t);return e}(e,t,r,n):"string"==typeof t?function(e,t,r){"string"==typeof r&&""!==r||(r="utf8");if(!u.isEncoding(r))throw new TypeError('"encoding" must be a valid string encoding');var n=0|d(t,r),i=(e=s(e,n)).write(t,r);i!==n&&(e=e.slice(0,i));return e}(e,t,r):function(e,t){if(u.isBuffer(t)){var r=0|f(t.length);return 0===(e=s(e,r)).length||t.copy(e,0,0,r),e}if(t){if("undefined"!=typeof ArrayBuffer&&t.buffer instanceof ArrayBuffer||"length"in t)return"number"!=typeof t.length||(n=t.length)!=n?s(e,0):p(e,t);if("Buffer"===t.type&&o(t.data))return p(e,t.data)}var n;throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")}(e,t)}function c(e){if("number"!=typeof e)throw new TypeError('"size" argument must be a number');if(e<0)throw new RangeError('"size" argument must not be negative')}function h(e,t){if(c(t),e=s(e,t<0?0:0|f(t)),!u.TYPED_ARRAY_SUPPORT)for(var r=0;r<t;++r)e[r]=0;return e}function p(e,t){var r=t.length<0?0:0|f(t.length);e=s(e,r);for(var n=0;n<r;n+=1)e[n]=255&t[n];return e}function f(e){if(e>=a())throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+a().toString(16)+" bytes");return 0|e}function d(e,t){if(u.isBuffer(e))return e.length;if("undefined"!=typeof ArrayBuffer&&"function"==typeof ArrayBuffer.isView&&(ArrayBuffer.isView(e)||e instanceof ArrayBuffer))return e.byteLength;"string"!=typeof e&&(e=""+e);var r=e.length;if(0===r)return 0;for(var n=!1;;)switch(t){case"ascii":case"latin1":case"binary":return r;case"utf8":case"utf-8":case void 0:return z(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*r;case"hex":return r>>>1;case"base64":return U(e).length;default:if(n)return z(e).length;t=(""+t).toLowerCase(),n=!0}}function m(e,t,r){var n=!1;if((void 0===t||t<0)&&(t=0),t>this.length)return"";if((void 0===r||r>this.length)&&(r=this.length),r<=0)return"";if((r>>>=0)<=(t>>>=0))return"";for(e||(e="utf8");;)switch(e){case"hex":return T(this,t,r);case"utf8":case"utf-8":return C(this,t,r);case"ascii":return A(this,t,r);case"latin1":case"binary":return N(this,t,r);case"base64":return S(this,t,r);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return O(this,t,r);default:if(n)throw new TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),n=!0}}function y(e,t,r){var n=e[t];e[t]=e[r],e[r]=n}function v(e,t,r,n,i){if(0===e.length)return-1;if("string"==typeof r?(n=r,r=0):r>2147483647?r=2147483647:r<-2147483648&&(r=-2147483648),r=+r,isNaN(r)&&(r=i?0:e.length-1),r<0&&(r=e.length+r),r>=e.length){if(i)return-1;r=e.length-1}else if(r<0){if(!i)return-1;r=0}if("string"==typeof t&&(t=u.from(t,n)),u.isBuffer(t))return 0===t.length?-1:_(e,t,r,n,i);if("number"==typeof t)return t&=255,u.TYPED_ARRAY_SUPPORT&&"function"==typeof Uint8Array.prototype.indexOf?i?Uint8Array.prototype.indexOf.call(e,t,r):Uint8Array.prototype.lastIndexOf.call(e,t,r):_(e,[t],r,n,i);throw new TypeError("val must be string, number or Buffer")}function _(e,t,r,n,i){var o,a=1,s=e.length,u=t.length;if(void 0!==n&&("ucs2"===(n=String(n).toLowerCase())||"ucs-2"===n||"utf16le"===n||"utf-16le"===n)){if(e.length<2||t.length<2)return-1;a=2,s/=2,u/=2,r/=2}function l(e,t){return 1===a?e[t]:e.readUInt16BE(t*a)}if(i){var c=-1;for(o=r;o<s;o++)if(l(e,o)===l(t,-1===c?0:o-c)){if(-1===c&&(c=o),o-c+1===u)return c*a}else-1!==c&&(o-=o-c),c=-1}else for(r+u>s&&(r=s-u),o=r;o>=0;o--){for(var h=!0,p=0;p<u;p++)if(l(e,o+p)!==l(t,p)){h=!1;break}if(h)return o}return-1}function g(e,t,r,n){r=Number(r)||0;var i=e.length-r;n?(n=Number(n))>i&&(n=i):n=i;var o=t.length;if(o%2!=0)throw new TypeError("Invalid hex string");n>o/2&&(n=o/2);for(var a=0;a<n;++a){var s=parseInt(t.substr(2*a,2),16);if(isNaN(s))return a;e[r+a]=s}return a}function b(e,t,r,n){return G(z(t,e.length-r),e,r,n)}function x(e,t,r,n){return G(function(e){for(var t=[],r=0;r<e.length;++r)t.push(255&e.charCodeAt(r));return t}(t),e,r,n)}function w(e,t,r,n){return x(e,t,r,n)}function E(e,t,r,n){return G(U(t),e,r,n)}function D(e,t,r,n){return G(function(e,t){for(var r,n,i,o=[],a=0;a<e.length&&!((t-=2)<0);++a)r=e.charCodeAt(a),n=r>>8,i=r%256,o.push(i),o.push(n);return o}(t,e.length-r),e,r,n)}function S(e,t,r){return 0===t&&r===e.length?n.fromByteArray(e):n.fromByteArray(e.slice(t,r))}function C(e,t,r){r=Math.min(e.length,r);for(var n=[],i=t;i<r;){var o,a,s,u,l=e[i],c=null,h=l>239?4:l>223?3:l>191?2:1;if(i+h<=r)switch(h){case 1:l<128&&(c=l);break;case 2:128==(192&(o=e[i+1]))&&(u=(31&l)<<6|63&o)>127&&(c=u);break;case 3:o=e[i+1],a=e[i+2],128==(192&o)&&128==(192&a)&&(u=(15&l)<<12|(63&o)<<6|63&a)>2047&&(u<55296||u>57343)&&(c=u);break;case 4:o=e[i+1],a=e[i+2],s=e[i+3],128==(192&o)&&128==(192&a)&&128==(192&s)&&(u=(15&l)<<18|(63&o)<<12|(63&a)<<6|63&s)>65535&&u<1114112&&(c=u)}null===c?(c=65533,h=1):c>65535&&(c-=65536,n.push(c>>>10&1023|55296),c=56320|1023&c),n.push(c),i+=h}return function(e){var t=e.length;if(t<=4096)return String.fromCharCode.apply(String,e);var r="",n=0;for(;n<t;)r+=String.fromCharCode.apply(String,e.slice(n,n+=4096));return r}(n)}t.Buffer=u,t.SlowBuffer=function(e){+e!=e&&(e=0);return u.alloc(+e)},t.INSPECT_MAX_BYTES=50,u.TYPED_ARRAY_SUPPORT=void 0!==e.TYPED_ARRAY_SUPPORT?e.TYPED_ARRAY_SUPPORT:function(){try{var e=new Uint8Array(1);return e.__proto__={__proto__:Uint8Array.prototype,foo:function(){return 42}},42===e.foo()&&"function"==typeof e.subarray&&0===e.subarray(1,1).byteLength}catch(e){return!1}}(),t.kMaxLength=a(),u.poolSize=8192,u._augment=function(e){return e.__proto__=u.prototype,e},u.from=function(e,t,r){return l(null,e,t,r)},u.TYPED_ARRAY_SUPPORT&&(u.prototype.__proto__=Uint8Array.prototype,u.__proto__=Uint8Array,"undefined"!=typeof Symbol&&Symbol.species&&u[Symbol.species]===u&&Object.defineProperty(u,Symbol.species,{value:null,configurable:!0})),u.alloc=function(e,t,r){return function(e,t,r,n){return c(t),t<=0?s(e,t):void 0!==r?"string"==typeof n?s(e,t).fill(r,n):s(e,t).fill(r):s(e,t)}(null,e,t,r)},u.allocUnsafe=function(e){return h(null,e)},u.allocUnsafeSlow=function(e){return h(null,e)},u.isBuffer=function(e){return!(null==e||!e._isBuffer)},u.compare=function(e,t){if(!u.isBuffer(e)||!u.isBuffer(t))throw new TypeError("Arguments must be Buffers");if(e===t)return 0;for(var r=e.length,n=t.length,i=0,o=Math.min(r,n);i<o;++i)if(e[i]!==t[i]){r=e[i],n=t[i];break}return r<n?-1:n<r?1:0},u.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},u.concat=function(e,t){if(!o(e))throw new TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return u.alloc(0);var r;if(void 0===t)for(t=0,r=0;r<e.length;++r)t+=e[r].length;var n=u.allocUnsafe(t),i=0;for(r=0;r<e.length;++r){var a=e[r];if(!u.isBuffer(a))throw new TypeError('"list" argument must be an Array of Buffers');a.copy(n,i),i+=a.length}return n},u.byteLength=d,u.prototype._isBuffer=!0,u.prototype.swap16=function(){var e=this.length;if(e%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var t=0;t<e;t+=2)y(this,t,t+1);return this},u.prototype.swap32=function(){var e=this.length;if(e%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var t=0;t<e;t+=4)y(this,t,t+3),y(this,t+1,t+2);return this},u.prototype.swap64=function(){var e=this.length;if(e%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var t=0;t<e;t+=8)y(this,t,t+7),y(this,t+1,t+6),y(this,t+2,t+5),y(this,t+3,t+4);return this},u.prototype.toString=function(){var e=0|this.length;return 0===e?"":0===arguments.length?C(this,0,e):m.apply(this,arguments)},u.prototype.equals=function(e){if(!u.isBuffer(e))throw new TypeError("Argument must be a Buffer");return this===e||0===u.compare(this,e)},u.prototype.inspect=function(){var e="",r=t.INSPECT_MAX_BYTES;return this.length>0&&(e=this.toString("hex",0,r).match(/.{2}/g).join(" "),this.length>r&&(e+=" ... ")),"<Buffer "+e+">"},u.prototype.compare=function(e,t,r,n,i){if(!u.isBuffer(e))throw new TypeError("Argument must be a Buffer");if(void 0===t&&(t=0),void 0===r&&(r=e?e.length:0),void 0===n&&(n=0),void 0===i&&(i=this.length),t<0||r>e.length||n<0||i>this.length)throw new RangeError("out of range index");if(n>=i&&t>=r)return 0;if(n>=i)return-1;if(t>=r)return 1;if(this===e)return 0;for(var o=(i>>>=0)-(n>>>=0),a=(r>>>=0)-(t>>>=0),s=Math.min(o,a),l=this.slice(n,i),c=e.slice(t,r),h=0;h<s;++h)if(l[h]!==c[h]){o=l[h],a=c[h];break}return o<a?-1:a<o?1:0},u.prototype.includes=function(e,t,r){return-1!==this.indexOf(e,t,r)},u.prototype.indexOf=function(e,t,r){return v(this,e,t,r,!0)},u.prototype.lastIndexOf=function(e,t,r){return v(this,e,t,r,!1)},u.prototype.write=function(e,t,r,n){if(void 0===t)n="utf8",r=this.length,t=0;else if(void 0===r&&"string"==typeof t)n=t,r=this.length,t=0;else{if(!isFinite(t))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");t|=0,isFinite(r)?(r|=0,void 0===n&&(n="utf8")):(n=r,r=void 0)}var i=this.length-t;if((void 0===r||r>i)&&(r=i),e.length>0&&(r<0||t<0)||t>this.length)throw new RangeError("Attempt to write outside buffer bounds");n||(n="utf8");for(var o=!1;;)switch(n){case"hex":return g(this,e,t,r);case"utf8":case"utf-8":return b(this,e,t,r);case"ascii":return x(this,e,t,r);case"latin1":case"binary":return w(this,e,t,r);case"base64":return E(this,e,t,r);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return D(this,e,t,r);default:if(o)throw new TypeError("Unknown encoding: "+n);n=(""+n).toLowerCase(),o=!0}},u.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};function A(e,t,r){var n="";r=Math.min(e.length,r);for(var i=t;i<r;++i)n+=String.fromCharCode(127&e[i]);return n}function N(e,t,r){var n="";r=Math.min(e.length,r);for(var i=t;i<r;++i)n+=String.fromCharCode(e[i]);return n}function T(e,t,r){var n=e.length;(!t||t<0)&&(t=0),(!r||r<0||r>n)&&(r=n);for(var i="",o=t;o<r;++o)i+=R(e[o]);return i}function O(e,t,r){for(var n=e.slice(t,r),i="",o=0;o<n.length;o+=2)i+=String.fromCharCode(n[o]+256*n[o+1]);return i}function F(e,t,r){if(e%1!=0||e<0)throw new RangeError("offset is not uint");if(e+t>r)throw new RangeError("Trying to access beyond buffer length")}function k(e,t,r,n,i,o){if(!u.isBuffer(e))throw new TypeError('"buffer" argument must be a Buffer instance');if(t>i||t<o)throw new RangeError('"value" argument is out of bounds');if(r+n>e.length)throw new RangeError("Index out of range")}function P(e,t,r,n){t<0&&(t=65535+t+1);for(var i=0,o=Math.min(e.length-r,2);i<o;++i)e[r+i]=(t&255<<8*(n?i:1-i))>>>8*(n?i:1-i)}function I(e,t,r,n){t<0&&(t=4294967295+t+1);for(var i=0,o=Math.min(e.length-r,4);i<o;++i)e[r+i]=t>>>8*(n?i:3-i)&255}function L(e,t,r,n,i,o){if(r+n>e.length)throw new RangeError("Index out of range");if(r<0)throw new RangeError("Index out of range")}function M(e,t,r,n,o){return o||L(e,0,r,4),i.write(e,t,r,n,23,4),r+4}function B(e,t,r,n,o){return o||L(e,0,r,8),i.write(e,t,r,n,52,8),r+8}u.prototype.slice=function(e,t){var r,n=this.length;if((e=~~e)<0?(e+=n)<0&&(e=0):e>n&&(e=n),(t=void 0===t?n:~~t)<0?(t+=n)<0&&(t=0):t>n&&(t=n),t<e&&(t=e),u.TYPED_ARRAY_SUPPORT)(r=this.subarray(e,t)).__proto__=u.prototype;else{var i=t-e;r=new u(i,void 0);for(var o=0;o<i;++o)r[o]=this[o+e]}return r},u.prototype.readUIntLE=function(e,t,r){e|=0,t|=0,r||F(e,t,this.length);for(var n=this[e],i=1,o=0;++o<t&&(i*=256);)n+=this[e+o]*i;return n},u.prototype.readUIntBE=function(e,t,r){e|=0,t|=0,r||F(e,t,this.length);for(var n=this[e+--t],i=1;t>0&&(i*=256);)n+=this[e+--t]*i;return n},u.prototype.readUInt8=function(e,t){return t||F(e,1,this.length),this[e]},u.prototype.readUInt16LE=function(e,t){return t||F(e,2,this.length),this[e]|this[e+1]<<8},u.prototype.readUInt16BE=function(e,t){return t||F(e,2,this.length),this[e]<<8|this[e+1]},u.prototype.readUInt32LE=function(e,t){return t||F(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},u.prototype.readUInt32BE=function(e,t){return t||F(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},u.prototype.readIntLE=function(e,t,r){e|=0,t|=0,r||F(e,t,this.length);for(var n=this[e],i=1,o=0;++o<t&&(i*=256);)n+=this[e+o]*i;return n>=(i*=128)&&(n-=Math.pow(2,8*t)),n},u.prototype.readIntBE=function(e,t,r){e|=0,t|=0,r||F(e,t,this.length);for(var n=t,i=1,o=this[e+--n];n>0&&(i*=256);)o+=this[e+--n]*i;return o>=(i*=128)&&(o-=Math.pow(2,8*t)),o},u.prototype.readInt8=function(e,t){return t||F(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},u.prototype.readInt16LE=function(e,t){t||F(e,2,this.length);var r=this[e]|this[e+1]<<8;return 32768&r?4294901760|r:r},u.prototype.readInt16BE=function(e,t){t||F(e,2,this.length);var r=this[e+1]|this[e]<<8;return 32768&r?4294901760|r:r},u.prototype.readInt32LE=function(e,t){return t||F(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},u.prototype.readInt32BE=function(e,t){return t||F(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},u.prototype.readFloatLE=function(e,t){return t||F(e,4,this.length),i.read(this,e,!0,23,4)},u.prototype.readFloatBE=function(e,t){return t||F(e,4,this.length),i.read(this,e,!1,23,4)},u.prototype.readDoubleLE=function(e,t){return t||F(e,8,this.length),i.read(this,e,!0,52,8)},u.prototype.readDoubleBE=function(e,t){return t||F(e,8,this.length),i.read(this,e,!1,52,8)},u.prototype.writeUIntLE=function(e,t,r,n){(e=+e,t|=0,r|=0,n)||k(this,e,t,r,Math.pow(2,8*r)-1,0);var i=1,o=0;for(this[t]=255&e;++o<r&&(i*=256);)this[t+o]=e/i&255;return t+r},u.prototype.writeUIntBE=function(e,t,r,n){(e=+e,t|=0,r|=0,n)||k(this,e,t,r,Math.pow(2,8*r)-1,0);var i=r-1,o=1;for(this[t+i]=255&e;--i>=0&&(o*=256);)this[t+i]=e/o&255;return t+r},u.prototype.writeUInt8=function(e,t,r){return e=+e,t|=0,r||k(this,e,t,1,255,0),u.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),this[t]=255&e,t+1},u.prototype.writeUInt16LE=function(e,t,r){return e=+e,t|=0,r||k(this,e,t,2,65535,0),u.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8):P(this,e,t,!0),t+2},u.prototype.writeUInt16BE=function(e,t,r){return e=+e,t|=0,r||k(this,e,t,2,65535,0),u.TYPED_ARRAY_SUPPORT?(this[t]=e>>>8,this[t+1]=255&e):P(this,e,t,!1),t+2},u.prototype.writeUInt32LE=function(e,t,r){return e=+e,t|=0,r||k(this,e,t,4,4294967295,0),u.TYPED_ARRAY_SUPPORT?(this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e):I(this,e,t,!0),t+4},u.prototype.writeUInt32BE=function(e,t,r){return e=+e,t|=0,r||k(this,e,t,4,4294967295,0),u.TYPED_ARRAY_SUPPORT?(this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e):I(this,e,t,!1),t+4},u.prototype.writeIntLE=function(e,t,r,n){if(e=+e,t|=0,!n){var i=Math.pow(2,8*r-1);k(this,e,t,r,i-1,-i)}var o=0,a=1,s=0;for(this[t]=255&e;++o<r&&(a*=256);)e<0&&0===s&&0!==this[t+o-1]&&(s=1),this[t+o]=(e/a>>0)-s&255;return t+r},u.prototype.writeIntBE=function(e,t,r,n){if(e=+e,t|=0,!n){var i=Math.pow(2,8*r-1);k(this,e,t,r,i-1,-i)}var o=r-1,a=1,s=0;for(this[t+o]=255&e;--o>=0&&(a*=256);)e<0&&0===s&&0!==this[t+o+1]&&(s=1),this[t+o]=(e/a>>0)-s&255;return t+r},u.prototype.writeInt8=function(e,t,r){return e=+e,t|=0,r||k(this,e,t,1,127,-128),u.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),e<0&&(e=255+e+1),this[t]=255&e,t+1},u.prototype.writeInt16LE=function(e,t,r){return e=+e,t|=0,r||k(this,e,t,2,32767,-32768),u.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8):P(this,e,t,!0),t+2},u.prototype.writeInt16BE=function(e,t,r){return e=+e,t|=0,r||k(this,e,t,2,32767,-32768),u.TYPED_ARRAY_SUPPORT?(this[t]=e>>>8,this[t+1]=255&e):P(this,e,t,!1),t+2},u.prototype.writeInt32LE=function(e,t,r){return e=+e,t|=0,r||k(this,e,t,4,2147483647,-2147483648),u.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24):I(this,e,t,!0),t+4},u.prototype.writeInt32BE=function(e,t,r){return e=+e,t|=0,r||k(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),u.TYPED_ARRAY_SUPPORT?(this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e):I(this,e,t,!1),t+4},u.prototype.writeFloatLE=function(e,t,r){return M(this,e,t,!0,r)},u.prototype.writeFloatBE=function(e,t,r){return M(this,e,t,!1,r)},u.prototype.writeDoubleLE=function(e,t,r){return B(this,e,t,!0,r)},u.prototype.writeDoubleBE=function(e,t,r){return B(this,e,t,!1,r)},u.prototype.copy=function(e,t,r,n){if(r||(r=0),n||0===n||(n=this.length),t>=e.length&&(t=e.length),t||(t=0),n>0&&n<r&&(n=r),n===r)return 0;if(0===e.length||0===this.length)return 0;if(t<0)throw new RangeError("targetStart out of bounds");if(r<0||r>=this.length)throw new RangeError("sourceStart out of bounds");if(n<0)throw new RangeError("sourceEnd out of bounds");n>this.length&&(n=this.length),e.length-t<n-r&&(n=e.length-t+r);var i,o=n-r;if(this===e&&r<t&&t<n)for(i=o-1;i>=0;--i)e[i+t]=this[i+r];else if(o<1e3||!u.TYPED_ARRAY_SUPPORT)for(i=0;i<o;++i)e[i+t]=this[i+r];else Uint8Array.prototype.set.call(e,this.subarray(r,r+o),t);return o},u.prototype.fill=function(e,t,r,n){if("string"==typeof e){if("string"==typeof t?(n=t,t=0,r=this.length):"string"==typeof r&&(n=r,r=this.length),1===e.length){var i=e.charCodeAt(0);i<256&&(e=i)}if(void 0!==n&&"string"!=typeof n)throw new TypeError("encoding must be a string");if("string"==typeof n&&!u.isEncoding(n))throw new TypeError("Unknown encoding: "+n)}else"number"==typeof e&&(e&=255);if(t<0||this.length<t||this.length<r)throw new RangeError("Out of range index");if(r<=t)return this;var o;if(t>>>=0,r=void 0===r?this.length:r>>>0,e||(e=0),"number"==typeof e)for(o=t;o<r;++o)this[o]=e;else{var a=u.isBuffer(e)?e:z(new u(e,n).toString()),s=a.length;for(o=0;o<r-t;++o)this[o+t]=a[o%s]}return this};var j=/[^+\/0-9A-Za-z-_]/g;function R(e){return e<16?"0"+e.toString(16):e.toString(16)}function z(e,t){var r;t=t||1/0;for(var n=e.length,i=null,o=[],a=0;a<n;++a){if((r=e.charCodeAt(a))>55295&&r<57344){if(!i){if(r>56319){(t-=3)>-1&&o.push(239,191,189);continue}if(a+1===n){(t-=3)>-1&&o.push(239,191,189);continue}i=r;continue}if(r<56320){(t-=3)>-1&&o.push(239,191,189),i=r;continue}r=65536+(i-55296<<10|r-56320)}else i&&(t-=3)>-1&&o.push(239,191,189);if(i=null,r<128){if((t-=1)<0)break;o.push(r)}else if(r<2048){if((t-=2)<0)break;o.push(r>>6|192,63&r|128)}else if(r<65536){if((t-=3)<0)break;o.push(r>>12|224,r>>6&63|128,63&r|128)}else{if(!(r<1114112))throw new Error("Invalid code point");if((t-=4)<0)break;o.push(r>>18|240,r>>12&63|128,r>>6&63|128,63&r|128)}}return o}function U(e){return n.toByteArray(function(e){if((e=function(e){return e.trim?e.trim():e.replace(/^\s+|\s+$/g,"")}(e).replace(j,"")).length<2)return"";for(;e.length%4!=0;)e+="=";return e}(e))}function G(e,t,r,n){for(var i=0;i<n&&!(i+r>=t.length||i>=e.length);++i)t[i+r]=e[i];return i}}).call(this,r(78))},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isASCIIByte=function(e){return e>=0&&e<=127}},function(e,t,r){"use strict";var n=this&&this.__read||function(e,t){var r="function"==typeof Symbol&&e[Symbol.iterator];if(!r)return e;var n,i,o=r.call(e),a=[];try{for(;(void 0===t||t-- >0)&&!(n=o.next()).done;)a.push(n.value)}catch(e){i={error:e}}finally{try{n&&!n.done&&(r=o.return)&&r.call(o)}finally{if(i)throw i.error}}return a},i=this&&this.__spread||function(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(n(arguments[t]));return e};Object.defineProperty(t,"__esModule",{value:!0}),t.length=function(e){return e.length},t.byteLowercase=function(e){for(var t=0;t<e.length;t++){var r=e[t];r>=65&&r<=90&&(e[t]=r+32)}},t.byteUppercase=function(e){for(var t=0;t<e.length;t++){var r=e[t];r>=97&&r<=122&&(e[t]=r-32)}},t.byteCaseInsensitiveMatch=function(e,t){if(e.length!==t.length)return!1;for(var r=0;r<e.length;r++){var n=e[r],i=t[r];if(n>=65&&n<=90&&(n+=32),i>=65&&i<=90&&(i+=32),n!==i)return!1}return!0},t.startsWith=function(e,t){for(var r=0;;){if(r>=e.length)return!1;if(r>=t.length)return!0;if(e[r]!==t[r])return!1;r++}},t.byteLessThan=function(e,t){for(var r=0;;){if(r>=e.length)return!1;if(r>=t.length)return!0;var n=e[r],i=t[r];if(n<i)return!0;if(n>i)return!1;r++}},t.isomorphicDecode=function(e){return String.fromCodePoint.apply(String,i(e))}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(6),i=r(7),o=r(0),a=r(12),s=function(){function e(e){this._associatedDocument=e||n.dom.window.document}return e.prototype.createDocumentType=function(e,t,r){return o.namespace_validate(e),o.create_documentType(this._associatedDocument,e,t,r)},e.prototype.createDocument=function(e,t,r){void 0===r&&(r=null);var n=o.create_xmlDocument(),a=null;return t&&(a=o.document_internalCreateElementNS(n,e,t)),r&&n.appendChild(r),a&&n.appendChild(a),n._origin=this._associatedDocument._origin,e===i.namespace.HTML?n._contentType="application/xhtml+xml":e===i.namespace.SVG?n._contentType="image/svg+xml":n._contentType="application/xml",n},e.prototype.createHTMLDocument=function(e){var t=o.create_document();t._type="html",t._contentType="text/html",t.appendChild(o.create_documentType(t,"html","",""));var r=o.element_createAnElement(t,"html",i.namespace.HTML);t.appendChild(r);var n=o.element_createAnElement(t,"head",i.namespace.HTML);if(r.appendChild(n),void 0!==e){var a=o.element_createAnElement(t,"title",i.namespace.HTML);n.appendChild(a);var s=o.create_text(t,e);a.appendChild(s)}var u=o.element_createAnElement(t,"body",i.namespace.HTML);return r.appendChild(u),t._origin=this._associatedDocument._origin,t},e.prototype.hasFeature=function(){return!0},e._create=function(t){return new e(t)},e}();t.DOMImplementationImpl=s,a.idl_defineConst(s.prototype,"_ID","@oozcitak/dom")},function(e,t,r){"use strict";var n,i=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});Object.defineProperty(t,"__esModule",{value:!0});var o=r(70),a=r(1),s=r(0),u=function(e){function t(){var t=e.call(this)||this;return t._signalSlots=new Set,t._mutationObserverMicrotaskQueued=!1,t._mutationObservers=new Set,t._iteratorList=new a.FixedSizeSet,t._associatedDocument=s.create_document(),t}return i(t,e),Object.defineProperty(t.prototype,"document",{get:function(){return this._associatedDocument},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"event",{get:function(){return this._currentEvent},enumerable:!0,configurable:!0}),t._create=function(){return new t},t}(o.EventTargetImpl);t.WindowImpl=u},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(2),i=function(){function e(){}return e.isNode=function(e){return!!e&&void 0!==e._nodeType},e.isDocumentNode=function(t){return e.isNode(t)&&t._nodeType===n.NodeType.Document},e.isDocumentTypeNode=function(t){return e.isNode(t)&&t._nodeType===n.NodeType.DocumentType},e.isDocumentFragmentNode=function(t){return e.isNode(t)&&t._nodeType===n.NodeType.DocumentFragment},e.isAttrNode=function(t){return e.isNode(t)&&t._nodeType===n.NodeType.Attribute},e.isCharacterDataNode=function(t){if(!e.isNode(t))return!1;var r=t._nodeType;return r===n.NodeType.Text||r===n.NodeType.ProcessingInstruction||r===n.NodeType.Comment||r===n.NodeType.CData},e.isTextNode=function(t){return e.isNode(t)&&(t._nodeType===n.NodeType.Text||t._nodeType===n.NodeType.CData)},e.isExclusiveTextNode=function(t){return e.isNode(t)&&t._nodeType===n.NodeType.Text},e.isCDATASectionNode=function(t){return e.isNode(t)&&t._nodeType===n.NodeType.CData},e.isCommentNode=function(t){return e.isNode(t)&&t._nodeType===n.NodeType.Comment},e.isProcessingInstructionNode=function(t){return e.isNode(t)&&t._nodeType===n.NodeType.ProcessingInstruction},e.isElementNode=function(t){return e.isNode(t)&&t._nodeType===n.NodeType.Element},e.isCustomElementNode=function(t){return e.isElementNode(t)&&"custom"===t._customElementState},e.isShadowRoot=function(e){return!!e&&void 0!==e.host},e.isMouseEvent=function(e){return!!e&&void 0!==e.screenX&&null!=e.screenY},e.isSlotable=function(t){return!!t&&void 0!==t._name&&void 0!==t._assignedSlot&&(e.isTextNode(t)||e.isElementNode(t))},e.isSlot=function(t){return!!t&&void 0!==t._name&&void 0!==t._assignedNodes&&e.isElementNode(t)},e.isWindow=function(e){return!!e&&void 0!==e.navigator},e.isEventListener=function(e){return!!e&&void 0!==e.handleEvent},e.isRegisteredObserver=function(e){return!!e&&void 0!==e.observer&&void 0!==e.options},e.isTransientRegisteredObserver=function(t){return!!t&&void 0!==t.source&&e.isRegisteredObserver(t)},e}();t.Guard=i},function(e,t,r){"use strict";var n,i=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});Object.defineProperty(t,"__esModule",{value:!0});var o=function(e){function t(){return e.call(this)||this}return i(t,e),t}(r(98).DocumentImpl);t.XMLDocumentImpl=o},function(e,t,r){"use strict";var n=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,r=t&&e[t],n=0;if(r)return r.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")},i=this&&this.__read||function(e,t){var r="function"==typeof Symbol&&e[Symbol.iterator];if(!r)return e;var n,i,o=r.call(e),a=[];try{for(;(void 0===t||t-- >0)&&!(n=o.next()).done;)a.push(n.value)}catch(e){i={error:e}}finally{try{n&&!n.done&&(r=o.return)&&r.call(o)}finally{if(i)throw i.error}}return a};Object.defineProperty(t,"__esModule",{value:!0});var o,a=r(1),s=r(243),u=r(7),l=r(244),c={ftp:21,file:null,http:80,https:443,ws:80,wss:443},h=/[\0-\x1F\x7F-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/,p=/[ "<>`]|[\0-\x1F\x7F-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/,f=/[ "<>`#?{}]|[\0-\x1F\x7F-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/,d=/[ "<>`#?{}/:;=@\[\]\\\^\|]|[\0-\x1F\x7F-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/,m=/[0-9A-Za-z!\$&-\/:;=\?@_~\xA0-\uD7FF\uE000-\uFDCF\uFDF0-\uFFFD]|[\uD800-\uD83E\uD840-\uD87E\uD880-\uD8BE\uD8C0-\uD8FE\uD900-\uD93E\uD940-\uD97E\uD980-\uD9BE\uD9C0-\uD9FE\uDA00-\uDA3E\uDA40-\uDA7E\uDA80-\uDABE\uDAC0-\uDAFE\uDB00-\uDB3E\uDB40-\uDB7E\uDB80-\uDBBE\uDBC0-\uDBFE][\uDC00-\uDFFF]|[\uD83F\uD87F\uD8BF\uD8FF\uD93F\uD97F\uD9BF\uD9FF\uDA3F\uDA7F\uDABF\uDAFF\uDB3F\uDB7F\uDBBF\uDBFF][\uDC00-\uDFFD]/,y=/[\0\t\f\r #%/:?@\[\\\]]/;function v(e){void 0!==o&&o.call(null,"Validation Error: "+e)}function _(){return{scheme:"",username:"",password:"",host:null,port:null,path:[],query:null,fragment:null,_cannotBeABaseURLFlag:!1,_blobURLEntry:null}}function g(e){return e in c}function b(e){return g(e.scheme)}function x(e){return c[e]||null}function w(e){return""!==e.username||""!==e.password}function E(e,t){var r,i;void 0===t&&(t=!1);var o=e.scheme+":";if(null!==e.host?(o+="//",w(e)&&(o+=e.username,""!==e.password&&(o+=":"+e.password),o+="@"),o+=D(e.host),null!==e.port&&(o+=":"+e.port)):null===e.host&&"file"===e.scheme&&(o+="//"),e._cannotBeABaseURLFlag)o+=e.path[0];else try{for(var a=n(e.path),s=a.next();!s.done;s=a.next()){o+="/"+s.value}}catch(e){r={error:e}}finally{try{s&&!s.done&&(i=a.return)&&i.call(a)}finally{if(r)throw r.error}}return null!==e.query&&(o+="?"+e.query),t||null===e.fragment||(o+="#"+e.fragment),o}function D(e){return a.isNumber(e)?S(e):a.isArray(e)?"["+C(e)+"]":e}function S(e){for(var t="",r=e,n=1;n<=4;n++)t=(r%256).toString()+t,4!==n&&(t="."+t),r=Math.floor(r/256);return t}function C(e){for(var t="",r=null,n=-1,i=0,o=0,a=0;a<8;a++)if(0===e[a]){i=1;for(var s=a+1;s<8&&0===e[s];s++)i++;i>o&&(o=i,n=a)}o>1&&(r=n);for(var u=!1,l=0;l<8;l++)u&&0===e[l]||(u&&(u=!1),r!==l?(t+=e[l].toString(16),7!==l&&(t+=":")):(t+=0===l?"::":":",u=!0));return t}function A(e,t,r,i,o){var l,c,y,_;if(void 0===i){i={scheme:"",username:"",password:"",host:null,port:null,path:[],query:null,fragment:null,_cannotBeABaseURLFlag:!1,_blobURLEntry:null};var E=/^[\u0000-\u001F\u0020]+/,D=/[\u0000-\u001F\u0020]+$/;(E.test(e)||D.test(e))&&v("Input string contains leading or trailing control characters or space."),e=(e=e.replace(E,"")).replace(D,"")}var S=/[\u0009\u000A\u000D]/g;S.test(e)&&v("Input string contains tab or newline characters."),e=e.replace(S,"");var C=void 0===o?s.ParserState.SchemeStart:o;void 0===t&&(t=null);for(var A=void 0===r||"replacement"===r||"UTF-16BE"===r||"UTF-16LE"===r?"UTF-8":r,L="",M=!1,B=!1,j=!1,R=new a.StringWalker(e);;){switch(C){case s.ParserState.SchemeStart:if(u.codePoint.ASCIIAlpha.test(R.c()))L+=R.c().toLowerCase(),C=s.ParserState.Scheme;else{if(void 0!==o)return v("Invalid scheme start character."),null;C=s.ParserState.NoScheme,R.pointer--}break;case s.ParserState.Scheme:if(u.codePoint.ASCIIAlphanumeric.test(R.c())||"+"===R.c()||"-"===R.c()||"."===R.c())L+=R.c().toLowerCase();else{if(":"!==R.c()){if(void 0===o){L="",C=s.ParserState.NoScheme,R.pointer=0;continue}return v("Invalid input string."),null}if(void 0!==o){if(g(i.scheme)&&!g(L))return i;if(!g(i.scheme)&&g(L))return i;if((w(i)||null!==i.port)&&"file"===L)return i;if("file"===i.scheme&&(""===i.host||null===i.host))return i}if(i.scheme=L,void 0!==o)return i.port===x(i.scheme)&&(i.port=null),i;L="","file"===i.scheme?(R.remaining().startsWith("//")||v("Invalid file URL scheme, '//' expected."),C=s.ParserState.File):b(i)&&null!==t&&t.scheme===i.scheme?C=s.ParserState.SpecialRelativeOrAuthority:b(i)?C=s.ParserState.SpecialAuthoritySlashes:R.remaining().startsWith("/")?(C=s.ParserState.PathOrAuthority,R.pointer++):(i._cannotBeABaseURLFlag=!0,i.path.push(""),C=s.ParserState.CannotBeABaseURLPath)}break;case s.ParserState.NoScheme:if(null===t||t._cannotBeABaseURLFlag&&"#"!==R.c())return v("Invalid input string."),null;t._cannotBeABaseURLFlag&&"#"===R.c()?(i.scheme=t.scheme,i.path=u.list.clone(t.path),i.query=t.query,i.fragment="",i._cannotBeABaseURLFlag=!0,C=s.ParserState.Fragment):"file"!==t.scheme?(C=s.ParserState.Relative,R.pointer--):(C=s.ParserState.File,R.pointer--);break;case s.ParserState.SpecialRelativeOrAuthority:"/"===R.c()&&R.remaining().startsWith("/")?(C=s.ParserState.SpecialAuthorityIgnoreSlashes,R.pointer++):(v("Invalid input string."),C=s.ParserState.Relative,R.pointer--);break;case s.ParserState.PathOrAuthority:"/"===R.c()?C=s.ParserState.Authority:(C=s.ParserState.Path,R.pointer--);break;case s.ParserState.Relative:if(null===t)throw new Error("Invalid parser state. Base URL is null.");switch(i.scheme=t.scheme,R.c()){case"":i.username=t.username,i.password=t.password,i.host=t.host,i.port=t.port,i.path=u.list.clone(t.path),i.query=t.query;break;case"/":C=s.ParserState.RelativeSlash;break;case"?":i.username=t.username,i.password=t.password,i.host=t.host,i.port=t.port,i.path=u.list.clone(t.path),i.query="",C=s.ParserState.Query;break;case"#":i.username=t.username,i.password=t.password,i.host=t.host,i.port=t.port,i.path=u.list.clone(t.path),i.query=t.query,i.fragment="",C=s.ParserState.Fragment;break;default:b(i)&&"\\"===R.c()?(v("Invalid input string."),C=s.ParserState.RelativeSlash):(i.username=t.username,i.password=t.password,i.host=t.host,i.port=t.port,i.path=u.list.clone(t.path),0!==i.path.length&&i.path.splice(i.path.length-1,1),C=s.ParserState.Path,R.pointer--)}break;case s.ParserState.RelativeSlash:if(!b(i)||"/"!==R.c()&&"\\"!==R.c())if("/"===R.c())C=s.ParserState.Authority;else{if(null===t)throw new Error("Invalid parser state. Base URL is null.");i.username=t.username,i.password=t.password,i.host=t.host,i.port=t.port,C=s.ParserState.Path,R.pointer--}else"\\"===R.c()&&v("Invalid input string."),C=s.ParserState.SpecialAuthorityIgnoreSlashes;break;case s.ParserState.SpecialAuthoritySlashes:"/"===R.c()&&R.remaining().startsWith("/")?(C=s.ParserState.SpecialAuthorityIgnoreSlashes,R.pointer++):(v("Expected '//'."),C=s.ParserState.SpecialAuthorityIgnoreSlashes,R.pointer--);break;case s.ParserState.SpecialAuthorityIgnoreSlashes:"/"!==R.c()&&"\\"!==R.c()?(C=s.ParserState.Authority,R.pointer--):v("Unexpected '/' or '\\'.");break;case s.ParserState.Authority:if("@"===R.c()){v("Unexpected '@'."),M&&(L="%40"+L),M=!0;try{for(var U=(l=void 0,n(L)),G=U.next();!G.done;G=U.next()){var q=G.value;if(":"!==q||j){var W=X(q,d);j?i.password+=W:i.username+=W}else j=!0}}catch(e){l={error:e}}finally{try{G&&!G.done&&(c=U.return)&&c.call(U)}finally{if(l)throw l.error}}L=""}else if(""===R.c()||"/"===R.c()||"?"===R.c()||"#"===R.c()||b(i)&&"\\"===R.c()){if(M&&""===L)return v("Invalid input string."),null;R.pointer-=L.length+1,L="",C=s.ParserState.Host}else L+=R.c();break;case s.ParserState.Host:case s.ParserState.Hostname:if(void 0!==o&&"file"===i.scheme)R.pointer--,C=s.ParserState.FileHost;else if(":"!==R.c()||B)if(""===R.c()||"/"===R.c()||"?"===R.c()||"#"===R.c()||b(i)&&"\\"===R.c()){if(R.pointer--,b(i)&&""===L)return v("Invalid input string."),null;if(void 0!==o&&""===L&&(w(i)||null!==i.port))return v("Invalid input string."),i;if(null===(J=I(L,!b(i))))return null;if(i.host=J,L="",C=s.ParserState.PathStart,void 0!==o)return i}else"["===R.c()&&(B=!0),"]"===R.c()&&(B=!1),L+=R.c();else{if(""===L)return v("Invalid input string."),null;if(null===(J=I(L,!b(i))))return null;if(i.host=J,L="",C=s.ParserState.Port,o===s.ParserState.Hostname)return i}break;case s.ParserState.Port:if(u.codePoint.ASCIIDigit.test(R.c()))L+=R.c();else{if(!(""===R.c()||"/"===R.c()||"?"===R.c()||"#"===R.c()||b(i)&&"\\"===R.c()||o))return v("Invalid input string."),null;if(""!==L&&""!==L){var H=parseInt(L,10);if(H>Math.pow(2,16)-1)return v("Invalid port number."),null;i.port=H===x(i.scheme)?null:H,L=""}if(void 0!==o)return i;C=s.ParserState.PathStart,R.pointer--}break;case s.ParserState.File:if(i.scheme="file","/"===R.c()||"\\"===R.c())"\\"===R.c()&&v("Invalid input string."),C=s.ParserState.FileSlash;else if(null!==t&&"file"===t.scheme)switch(R.c()){case"":i.host=t.host,i.path=u.list.clone(t.path),i.query=t.query;break;case"?":i.host=t.host,i.path=u.list.clone(t.path),i.query="",C=s.ParserState.Query;break;case"#":i.host=t.host,i.path=u.list.clone(t.path),i.query=t.query,i.fragment="",C=s.ParserState.Fragment;break;default:P(R.substring())?v("Unexpected windows drive letter in input string."):(i.host=t.host,i.path=u.list.clone(t.path),O(i)),C=s.ParserState.Path,R.pointer--}else C=s.ParserState.Path,R.pointer--;break;case s.ParserState.FileSlash:"/"===R.c()||"\\"===R.c()?("\\"===R.c()&&v("Invalid input string."),C=s.ParserState.FileHost):(null===t||"file"!==t.scheme||P(R.substring())||(F(t.path[0])?i.path.push(t.path[0]):i.host=t.host),C=s.ParserState.Path,R.pointer--);break;case s.ParserState.FileHost:if(""===R.c()||"/"===R.c()||"\\"===R.c()||"?"===R.c()||"#"===R.c())if(R.pointer--,void 0===o&&k(L))v("Unexpected windows drive letter in input string."),C=s.ParserState.Path;else if(""===L){if(i.host="",void 0!==o)return i;C=s.ParserState.PathStart}else{var J;if(null===(J=I(L,!b(i))))return null;if("localhost"===J&&(J=""),i.host=J,void 0!==o)return i;L="",C=s.ParserState.PathStart}else L+=R.c();break;case s.ParserState.PathStart:b(i)?("\\"===R.c()&&v("Invalid input string."),C=s.ParserState.Path,"/"!==R.c()&&"\\"!==R.c()&&R.pointer--):void 0===o&&"?"===R.c()?(i.query="",C=s.ParserState.Query):void 0===o&&"#"===R.c()?(i.fragment="",C=s.ParserState.Fragment):""!==R.c()&&(C=s.ParserState.Path,"/"!==R.c()&&R.pointer--);break;case s.ParserState.Path:if(""===R.c()||"/"===R.c()||b(i)&&"\\"===R.c()||void 0===o&&("?"===R.c()||"#"===R.c())){if(b(i)&&"\\"===R.c()&&v("Invalid input string."),T(L))O(i),"/"===R.c()||b(i)&&"\\"===R.c()||i.path.push("");else if(!N(L)||"/"===R.c()||b(i)&&"\\"===R.c()){if(!N(L)){if("file"===i.scheme&&0===i.path.length&&k(L)){null!==i.host&&""!==i.host&&(v("Invalid input string."),i.host="");var Y=Array.from(L);L=Y.slice(0,1)+":"+Y.slice(2)}i.path.push(L)}}else i.path.push("");if(L="","file"===i.scheme&&(""===R.c()||"?"===R.c()||"#"===R.c()))for(;i.path.length>1&&""===i.path[0];)v("Invalid input string."),i.path.splice(0,1);"?"===R.c()&&(i.query="",C=s.ParserState.Query),"#"===R.c()&&(i.fragment="",C=s.ParserState.Fragment)}else m.test(R.c())||"%"===R.c()||v("Character is not a URL code point or a percent encoded character."),"%"!==R.c()||/^[0-9a-fA-F][0-9a-fA-F]/.test(R.remaining())||v("Percent encoded character must be followed by two hex digits."),L+=X(R.c(),f);break;case s.ParserState.CannotBeABaseURLPath:"?"===R.c()?(i.query="",C=s.ParserState.Query):"#"===R.c()?(i.fragment="",C=s.ParserState.Fragment):(""===R.c()||m.test(R.c())||"%"===R.c()||v("Character is not a URL code point or a percent encoded character."),"%"!==R.c()||/^[0-9a-fA-F][0-9a-fA-F]/.test(R.remaining())||v("Percent encoded character must be followed by two hex digits."),""!==R.c()&&(i.path[0]+=X(R.c(),h)));break;case s.ParserState.Query:if("UTF-8"===A||b(i)&&"ws"!==i.scheme&&"wss"!==i.scheme||(A="UTF-8"),void 0===o&&"#"===R.c())i.fragment="",C=s.ParserState.Fragment;else if(""!==R.c()){if(m.test(R.c())||"%"===R.c()||v("Character is not a URL code point or a percent encoded character."),"%"!==R.c()||/^[0-9a-fA-F][0-9a-fA-F]/.test(R.remaining())||v("Percent encoded character must be followed by two hex digits."),"UTF-8"!==A.toUpperCase())throw new Error("Only UTF-8 encoding is supported.");var V=a.utf8Encode(R.c());if(V.length>=3&&38===V[0]&&35===V[1]&&59===V[V.length-1])V=V.subarray(2,V.length-1),i.query+="%26%23"+u.byteSequence.isomorphicDecode(V)+"%3B";else try{for(var K=(y=void 0,n(V)),$=K.next();!$.done;$=K.next()){var Q=$.value;Q<33||Q>126||34===Q||35===Q||60===Q||62===Q||39===Q&&b(i)?i.query+=z(Q):i.query+=String.fromCharCode(Q)}}catch(e){y={error:e}}finally{try{$&&!$.done&&(_=K.return)&&_.call(K)}finally{if(y)throw y.error}}}break;case s.ParserState.Fragment:""===R.c()||("\0"===R.c()?v("NULL character in input string."):(m.test(R.c())||"%"===R.c()||v("Unexpected character in fragment string."),"%"!==R.c()||/^[A-Za-z0-9][A-Za-z0-9]/.test(R.remaining())||v("Unexpected character in fragment string."),i.fragment+=X(R.c(),p)))}if(R.eof)break;R.pointer++}return i}function N(e){return"."===e||"%2e"===e.toLowerCase()}function T(e){var t=e.toLowerCase();return".."===t||".%2e"===t||"%2e."===t||"%2e%2e"===t}function O(e){var t=e.path;0!==t.length&&("file"===e.scheme&&1===t.length&&F(t[0])||e.path.splice(e.path.length-1,1))}function F(e){return e.length>=2&&u.codePoint.ASCIIAlpha.test(e[0])&&":"===e[1]}function k(e){return e.length>=2&&u.codePoint.ASCIIAlpha.test(e[0])&&(":"===e[1]||"|"===e[1])}function P(e){return e.length>=2&&k(e)&&(2===e.length||"/"===e[2]||"\\"===e[2]||"?"===e[2]||"#"===e[2])}function I(e,t){if(void 0===t&&(t=!1),e.startsWith("["))return e.endsWith("]")?B(e.substring(1,e.length-1)):(v("Expected ']' after '['."),null);if(t)return j(e);var r=H(a.utf8Decode(G(e)));if(null===r)return v("Invalid domain."),null;if(y.test(r))return v("Invalid domain."),null;var n=M(r);return null===n||a.isNumber(n)?n:r}function L(e,t){void 0===t&&(t={value:!1});var r=10;return e.startsWith("0x")||e.startsWith("0X")?(t.value=!0,e=e.substr(2),r=16):e.length>=2&&"0"===e[0]&&(t.value=!0,e=e.substr(1),r=8),""===e?0:(10===r?/^[0-9]+$/:16===r?/^[0-9A-Fa-f]+$/:/^[0-7]+$/).test(e)?parseInt(e,r):null}function M(e){var t,r,i,o,a={value:!1},s=e.split(".");if(""===s[s.length-1]&&(a.value=!0,s.length>1&&s.pop()),s.length>4)return e;var u=[];try{for(var l=n(s),c=l.next();!c.done;c=l.next()){var h=c.value;if(""===h)return e;if(null===(_=L(h,a)))return e;u.push(_)}}catch(e){t={error:e}}finally{try{c&&!c.done&&(r=l.return)&&r.call(l)}finally{if(t)throw t.error}}a.value&&v("Invalid IP v4 address.");for(var p=0;p<u.length;p++){if(u[p]>255&&(v("Invalid IP v4 address."),p<u.length-1))return null}if(u[u.length-1]>=Math.pow(256,5-u.length))return v("Invalid IP v4 address."),null;var f=u[u.length-1];u.pop();var d=0;try{for(var m=n(u),y=m.next();!y.done;y=m.next()){var _;f+=(_=y.value)*Math.pow(256,3-d),d++}}catch(e){i={error:e}}finally{try{y&&!y.done&&(o=m.return)&&o.call(m)}finally{if(i)throw i.error}}return f}function B(e){var t,r=[0,0,0,0,0,0,0,0],n=0,o=null,s=new a.StringWalker(e);if(":"===s.c()){if(!s.remaining().startsWith(":"))return v("Invalid IP v6 address."),null;s.pointer+=2,o=n+=1}for(;""!==s.c();){if(8===n)return v("Invalid IP v6 address."),null;if(":"!==s.c()){for(var l=0,c=0;c<4&&u.codePoint.ASCIIHexDigit.test(s.c());)l=16*l+parseInt(s.c(),16),s.pointer++,c++;if("."===s.c()){if(0===c)return v("Invalid IP v6 address."),null;if(s.pointer-=c,n>6)return v("Invalid IP v6 address."),null;for(var h=0;""!==s.c();){var p=null;if(h>0){if(!("."===s.c()&&h<4))return v("Invalid IP v6 address."),null;s.pointer++}if(!u.codePoint.ASCIIDigit.test(s.c()))return v("Invalid IP v6 address."),null;for(;u.codePoint.ASCIIDigit.test(s.c());){var f=parseInt(s.c(),10);if(null===p)p=f;else{if(0===p)return v("Invalid IP v6 address."),null;p=10*p+f}if(p>255)return v("Invalid IP v6 address."),null;s.pointer++}if(null===p)return v("Invalid IP v6 address."),null;r[n]=256*r[n]+p,2!==++h&&4!==h||n++}if(4!==h)return v("Invalid IP v6 address."),null;break}if(":"===s.c()){if(s.pointer++,""===s.c())return v("Invalid IP v6 address."),null}else if(""!==s.c())return v("Invalid IP v6 address."),null;r[n]=l,n++}else{if(null!==o)return v("Invalid IP v6 address."),null;s.pointer++,o=++n}}if(null!==o){var d=n-o;for(n=7;0!==n&&d>0;)t=i([r[o+d-1],r[n]],2),r[n]=t[0],r[o+d-1]=t[1],n--,d--}else if(null===o&&8!==n)return v("Invalid IP v6 address."),null;return r}function j(e){var t,r;if(/[\x00\t\f\r #/:?@\[\\\]]/.test(e))return v("Invalid host string."),null;var i="";try{for(var o=n(e),a=o.next();!a.done;a=o.next()){i+=X(a.value,h)}}catch(e){t={error:e}}finally{try{a&&!a.done&&(r=o.return)&&r.call(o)}finally{if(t)throw t.error}}return i}function R(e){return null}function z(e){return"%"+("00"+e.toString(16).toUpperCase()).slice(-2)}function U(e){for(var t=function(e){return e>=48&&e<=57||e>=65&&e<=70||e>=97&&e<=102},r=new Uint8Array(e.length),n=0,i=0;i<e.length;i++){var o=e[i];if(37!==o)r[n]=o,n++;else if(37===o&&i>=e.length-2)r[n]=o,n++;else if(37!==o||t(e[i+1])&&t(e[i+2])){var s=parseInt(a.utf8Decode(Uint8Array.of(e[i+1],e[i+2])),16);r[n]=s,n++,i+=2}else r[n]=o,n++}return r.subarray(0,n)}function G(e){return U(a.utf8Encode(e))}function X(e,t){var r,i;if(!t.test(e))return e;var o=a.utf8Encode(e),s="";try{for(var u=n(o),l=u.next();!l.done;l=u.next()){s+=z(l.value)}}catch(e){r={error:e}}finally{try{l&&!l.done&&(i=u.return)&&i.call(u)}finally{if(r)throw r.error}}return s}function q(e){var t,r,i,o,s=[],u=[];try{for(var l=n(e),c=l.next();!c.done;c=l.next()){var h=c.value;38===h?(s.push(Uint8Array.from(u)),u=[]):u.push(h)}}catch(e){t={error:e}}finally{try{c&&!c.done&&(r=l.return)&&r.call(l)}finally{if(t)throw t.error}}0!==u.length&&s.push(Uint8Array.from(u));var p=[];try{for(var f=n(s),d=f.next();!d.done;d=f.next()){var m=d.value;if(0!==m.length){for(var y=m.indexOf(61),v=-1!==y?m.slice(0,y):m,_=-1!==y?m.slice(y+1):new Uint8Array,g=0;g<v.length;g++)43===v[g]&&(v[g]=32);for(g=0;g<_.length;g++)43===_[g]&&(_[g]=32);var b=a.utf8Decode(v),x=a.utf8Decode(_);p.push([b,x])}}}catch(e){i={error:e}}finally{try{d&&!d.done&&(o=f.return)&&o.call(f)}finally{if(i)throw i.error}}return p}function W(e){var t,r,i="";try{for(var o=n(e),a=o.next();!a.done;a=o.next()){var s=a.value;i+=32===s?"+":42===s||45===s||46===s||s>=48&&s<=57||s>=65&&s<=90||95===s||s>=97&&s<=122?String.fromCodePoint(s):z(s)}}catch(e){t={error:e}}finally{try{a&&!a.done&&(r=o.return)&&r.call(o)}finally{if(t)throw t.error}}return i}function H(e,t){void 0===t&&(t=!1);var r=l.domainToASCII(e);return""===r?(v("Invalid domain name."),null):r}t.setValidationErrorCallback=function(e){o=e},t.newURL=_,t.isSpecialScheme=g,t.isSpecial=b,t.defaultPort=x,t.includesCredentials=w,t.cannotHaveAUsernamePasswordPort=function(e){return null===e.host||""===e.host||e._cannotBeABaseURLFlag||"file"===e.scheme},t.urlSerializer=E,t.hostSerializer=D,t.iPv4Serializer=S,t.iPv6Serializer=C,t.urlParser=function(e,t,r){var n=A(e,t,r);return null===n?null:("blob"!==n.scheme||(n._blobURLEntry=null),n)},t.basicURLParser=A,t.setTheUsername=function(e,t){var r,i,o="";try{for(var a=n(t),s=a.next();!s.done;s=a.next()){o+=X(s.value,d)}}catch(e){r={error:e}}finally{try{s&&!s.done&&(i=a.return)&&i.call(a)}finally{if(r)throw r.error}}e.username=o},t.setThePassword=function(e,t){var r,i,o="";try{for(var a=n(t),s=a.next();!s.done;s=a.next()){o+=X(s.value,d)}}catch(e){r={error:e}}finally{try{s&&!s.done&&(i=a.return)&&i.call(a)}finally{if(r)throw r.error}}e.password=o},t.isSingleDotPathSegment=N,t.isDoubleDotPathSegment=T,t.shorten=O,t.isNormalizedWindowsDriveLetter=F,t.isWindowsDriveLetter=k,t.startsWithAWindowsDriveLetter=P,t.hostParser=I,t.iPv4NumberParser=L,t.iPv4Parser=M,t.iPv6Parser=B,t.opaqueHostParser=j,t.resolveABlobURL=R,t.percentEncode=z,t.percentDecode=U,t.stringPercentDecode=G,t.utf8PercentEncode=X,t.hostEquals=function(e,t){return e===t},t.urlEquals=function(e,t,r){return void 0===r&&(r=!1),E(e,r)===E(t,r)},t.urlEncodedStringParser=function(e){return q(a.utf8Encode(e))},t.urlEncodedParser=q,t.urlEncodedByteSerializer=W,t.urlEncodedSerializer=function(e,t){var r,i;if("UTF-8"!==(void 0===t||"replacement"===t||"UTF-16BE"===t||"UTF-16LE"===t?"UTF-8":t).toUpperCase())throw new Error("Only UTF-8 encoding is supported.");var o="";try{for(var s=n(e),u=s.next();!u.done;u=s.next()){var l=u.value,c=W(a.utf8Encode(l[0])),h=l[1];h=W(a.utf8Encode(h)),""!==o&&(o+="&"),o+=c+"="+h}}catch(e){r={error:e}}finally{try{u&&!u.done&&(i=s.return)&&i.call(s)}finally{if(r)throw r.error}}return o},t.origin=function e(t){switch(t.scheme){case"blob":t._blobURLEntry;var r=A(t.path[0]);return null===r?s.OpaqueOrigin:e(r);case"ftp":case"http":case"https":case"ws":case"wss":return[t.scheme,null===t.host?"":t.host,t.port,null];case"file":default:return s.OpaqueOrigin}},t.domainToASCII=H,t.domainToUnicode=function(e,t){void 0===t&&(t=!1);var r=l.domainToUnicode(e);return""===r&&v("Invalid domain name."),r},t.asciiSerializationOfAnOrigin=function(e){if(""===e[0]&&""===e[1]&&null===e[2]&&null===e[3])return"null";var t=e[0]+"://"+D(e[1]);return null!==e[2]&&(t+=":"+e[2].toString()),t}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(0),i=function(){function e(){this._signal=n.create_abortSignal()}return Object.defineProperty(e.prototype,"signal",{get:function(){return this._signal},enumerable:!0,configurable:!0}),e.prototype.abort=function(){n.abort_signalAbort(this._signal)},e}();t.AbortControllerImpl=i},function(e,t,r){"use strict";var n,i=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});Object.defineProperty(t,"__esModule",{value:!0});var o=r(70),a=r(0),s=function(e){function t(){var t=e.call(this)||this;return t._abortedFlag=!1,t._abortAlgorithms=new Set,t}return i(t,e),Object.defineProperty(t.prototype,"aborted",{get:function(){return this._abortedFlag},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"onabort",{get:function(){return a.event_getterEventHandlerIDLAttribute(this,"onabort")},set:function(e){a.event_setterEventHandlerIDLAttribute(this,"onabort",e)},enumerable:!0,configurable:!0}),t._create=function(){return new t},t}(o.EventTargetImpl);t.AbortSignalImpl=s},function(e,t,r){"use strict";var n,i=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});Object.defineProperty(t,"__esModule",{value:!0});var o=r(2),a=r(34),s=r(12),u=function(e){function t(t,r,n){var i=e.call(this)||this;return i._name="",i._publicId="",i._systemId="",i._name=t,i._publicId=r,i._systemId=n,i}return i(t,e),Object.defineProperty(t.prototype,"name",{get:function(){return this._name},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"publicId",{get:function(){return this._publicId},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"systemId",{get:function(){return this._systemId},enumerable:!0,configurable:!0}),t.prototype.before=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];throw new Error("Mixin: ChildNode not implemented.")},t.prototype.after=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];throw new Error("Mixin: ChildNode not implemented.")},t.prototype.replaceWith=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];throw new Error("Mixin: ChildNode not implemented.")},t.prototype.remove=function(){throw new Error("Mixin: ChildNode not implemented.")},t._create=function(e,r,n,i){void 0===n&&(n=""),void 0===i&&(i="");var o=new t(r,n,i);return o._nodeDocument=e,o},t}(a.NodeImpl);t.DocumentTypeImpl=u,s.idl_defineConst(u.prototype,"_nodeType",o.NodeType.DocumentType)},function(e,t,r){"use strict";var n,i=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});Object.defineProperty(t,"__esModule",{value:!0});var o=r(100),a=r(1),s=r(0),u=function(e){function t(t,r){var n=e.call(this)||this;return n._host=t,n._mode=r,n}return i(t,e),Object.defineProperty(t.prototype,"mode",{get:function(){return this._mode},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"host",{get:function(){return this._host},enumerable:!0,configurable:!0}),t.prototype._getTheParent=function(e){return e._composedFlag||a.isEmpty(e._path)||s.tree_rootNode(e._path[0].invocationTarget)!==this?this._host:null},t._create=function(e,r){return new t(r,"closed")},t}(o.DocumentFragmentImpl);t.ShadowRootImpl=u},function(e,t,r){"use strict";var n,i=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});Object.defineProperty(t,"__esModule",{value:!0});var o=r(2),a=r(34),s=r(0),u=r(12),l=function(e){function t(t){var r=e.call(this)||this;return r._namespace=null,r._namespacePrefix=null,r._element=null,r._value="",r._localName=t,r}return i(t,e),Object.defineProperty(t.prototype,"ownerElement",{get:function(){return this._element},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"namespaceURI",{get:function(){return this._namespace},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"prefix",{get:function(){return this._namespacePrefix},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"localName",{get:function(){return this._localName},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"name",{get:function(){return this._qualifiedName},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"value",{get:function(){return this._value},set:function(e){s.attr_setAnExistingAttributeValue(this,e)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"_qualifiedName",{get:function(){return null!==this._namespacePrefix?this._namespacePrefix+":"+this._localName:this._localName},enumerable:!0,configurable:!0}),t._create=function(e,r){var n=new t(r);return n._nodeDocument=e,n},t}(a.NodeImpl);t.AttrImpl=l,u.idl_defineConst(l.prototype,"_nodeType",o.NodeType.Attribute),u.idl_defineConst(l.prototype,"specified",!0)},function(e,t,r){"use strict";var n,i=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});Object.defineProperty(t,"__esModule",{value:!0});var o=r(101),a=r(2),s=r(12),u=function(e){function t(t){return e.call(this,t)||this}return i(t,e),t._create=function(e,r){void 0===r&&(r="");var n=new t(r);return n._nodeDocument=e,n},t}(o.TextImpl);t.CDATASectionImpl=u,s.idl_defineConst(u.prototype,"_nodeType",a.NodeType.CData)},function(e,t,r){"use strict";var n,i=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});Object.defineProperty(t,"__esModule",{value:!0});var o=r(2),a=r(71),s=r(12),u=function(e){function t(t){return void 0===t&&(t=""),e.call(this,t)||this}return i(t,e),t._create=function(e,r){void 0===r&&(r="");var n=new t(r);return n._nodeDocument=e,n},t}(a.CharacterDataImpl);t.CommentImpl=u,s.idl_defineConst(u.prototype,"_nodeType",o.NodeType.Comment)},function(e,t,r){"use strict";var n,i=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});Object.defineProperty(t,"__esModule",{value:!0});var o=r(2),a=r(71),s=r(12),u=function(e){function t(t,r){var n=e.call(this,r)||this;return n._target=t,n}return i(t,e),Object.defineProperty(t.prototype,"target",{get:function(){return this._target},enumerable:!0,configurable:!0}),t._create=function(e,r,n){var i=new t(r,n);return i._nodeDocument=e,i},t}(a.CharacterDataImpl);t.ProcessingInstructionImpl=u,s.idl_defineConst(u.prototype,"_nodeType",o.NodeType.ProcessingInstruction)},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(7),i=r(0),o=r(3),a=r(1),s=function(){function e(e,t){return this._live=!0,this._root=e,this._filter=t,new Proxy(this,this)}return Object.defineProperty(e.prototype,"length",{get:function(){for(var e=this,t=0,r=i.tree_getFirstDescendantNode(this._root,!1,!1,(function(t){return o.Guard.isElementNode(t)&&e._filter(t)}));null!==r;)t++,r=i.tree_getNextDescendantNode(this._root,r,!1,!1,(function(t){return o.Guard.isElementNode(t)&&e._filter(t)}));return t},enumerable:!0,configurable:!0}),e.prototype.item=function(e){for(var t=this,r=0,n=i.tree_getFirstDescendantNode(this._root,!1,!1,(function(e){return o.Guard.isElementNode(e)&&t._filter(e)}));null!==n;){if(r===e)return n;r++,n=i.tree_getNextDescendantNode(this._root,n,!1,!1,(function(e){return o.Guard.isElementNode(e)&&t._filter(e)}))}return null},e.prototype.namedItem=function(e){var t=this;if(""===e)return null;for(var r=i.tree_getFirstDescendantNode(this._root,!1,!1,(function(e){return o.Guard.isElementNode(e)&&t._filter(e)}));null!=r;){if(r._uniqueIdentifier===e)return r;if(r._namespace===n.namespace.HTML)for(var a=0;a<r._attributeList.length;a++){var s=r._attributeList[a];if("name"===s._localName&&null===s._namespace&&null===s._namespacePrefix&&s._value===e)return r}r=i.tree_getNextDescendantNode(this._root,r,!1,!1,(function(e){return o.Guard.isElementNode(e)&&t._filter(e)}))}return null},e.prototype[Symbol.iterator]=function(){var e=this._root,t=this._filter,r=i.tree_getFirstDescendantNode(e,!1,!1,(function(e){return o.Guard.isElementNode(e)&&t(e)}));return{next:function(){if(null===r)return{done:!0,value:null};var n={done:!1,value:r};return r=i.tree_getNextDescendantNode(e,r,!1,!1,(function(e){return o.Guard.isElementNode(e)&&t(e)})),n}}},e.prototype.get=function(t,r,n){if(!a.isString(r)||-1!==e.reservedNames.indexOf(r))return Reflect.get(t,r,n);var i=Number(r);return isNaN(i)?t.namedItem(r)||void 0:t.item(i)||void 0},e.prototype.set=function(t,r,n,o){if(!a.isString(r)||-1!==e.reservedNames.indexOf(r))return Reflect.set(t,r,n,o);var s=Number(r),u=isNaN(s)?t.namedItem(r)||void 0:t.item(s)||void 0;return!(!u||!u._parent)&&(i.mutation_replace(u,n,u._parent),!0)},e._create=function(t,r){return void 0===r&&(r=function(){return!0}),new e(t,r)},e.reservedNames=["_root","_live","_filter","length","item","namedItem","get","set"],e}();t.HTMLCollectionImpl=s},function(e,t,r){"use strict";var n=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,r=t&&e[t],n=0;if(r)return r.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(t,"__esModule",{value:!0});var i=r(6),o=r(1),a=r(0),s=function(){function e(e){return this._live=!0,this._filter=null,this._length=0,this._root=e,new Proxy(this,this)}return Object.defineProperty(e.prototype,"length",{get:function(){return this._root._children.size},enumerable:!0,configurable:!0}),e.prototype.item=function(e){if(e<0||e>this.length-1)return null;if(e<this.length/2){for(var t=0,r=this._root._firstChild;null!==r&&t!==e;)r=r._nextSibling,t++;return r}for(t=this.length-1,r=this._root._lastChild;null!==r&&t!==e;)r=r._previousSibling,t--;return r},e.prototype.keys=function(){var e;return(e={})[Symbol.iterator]=function(){var e=0;return{next:function(){return e===this.length?{done:!0,value:null}:{done:!1,value:e++}}.bind(this)}}.bind(this),e},e.prototype.values=function(){var e;return(e={})[Symbol.iterator]=function(){var e=this[Symbol.iterator]();return{next:function(){return e.next()}}}.bind(this),e},e.prototype.entries=function(){var e;return(e={})[Symbol.iterator]=function(){var e=this[Symbol.iterator](),t=0;return{next:function(){var r=e.next();return r.done?{done:!0,value:null}:{done:!1,value:[t++,r.value]}}}}.bind(this),e},e.prototype[Symbol.iterator]=function(){return this._root._children[Symbol.iterator]()},e.prototype.forEach=function(e,t){var r,o;void 0===t&&(t=i.dom.window);var a=0;try{for(var s=n(this._root._children),u=s.next();!u.done;u=s.next()){var l=u.value;e.call(t,l,a++,this)}}catch(e){r={error:e}}finally{try{u&&!u.done&&(o=s.return)&&o.call(s)}finally{if(r)throw r.error}}},e.prototype.get=function(e,t,r){if(!o.isString(t))return Reflect.get(e,t,r);var n=Number(t);return isNaN(n)?Reflect.get(e,t,r):e.item(n)||void 0},e.prototype.set=function(e,t,r,n){if(!o.isString(t))return Reflect.set(e,t,r,n);var i=Number(t);if(isNaN(i))return Reflect.set(e,t,r,n);var s=e.item(i)||void 0;return!!s&&(!!s._parent&&(a.mutation_replace(s,r,s._parent),!0))},e._create=function(t){return new e(t)},e}();t.NodeListImpl=s},function(e,t,r){"use strict";var n=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,r=t&&e[t],n=0;if(r)return r.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(t,"__esModule",{value:!0});var i=r(6),o=r(1),a=function(){function e(e){return this._live=!1,this._items=[],this._length=0,this._root=e,this._items=[],this._filter=function(e){return!0},new Proxy(this,this)}return Object.defineProperty(e.prototype,"length",{get:function(){return this._items.length},enumerable:!0,configurable:!0}),e.prototype.item=function(e){return e<0||e>this.length-1?null:this._items[e]},e.prototype.keys=function(){var e;return(e={})[Symbol.iterator]=function(){var e=0;return{next:function(){return e===this.length?{done:!0,value:null}:{done:!1,value:e++}}.bind(this)}}.bind(this),e},e.prototype.values=function(){var e;return(e={})[Symbol.iterator]=function(){var e=this[Symbol.iterator]();return{next:function(){return e.next()}}}.bind(this),e},e.prototype.entries=function(){var e;return(e={})[Symbol.iterator]=function(){var e=this[Symbol.iterator](),t=0;return{next:function(){var r=e.next();return r.done?{done:!0,value:null}:{done:!1,value:[t++,r.value]}}}}.bind(this),e},e.prototype[Symbol.iterator]=function(){var e=this._items[Symbol.iterator]();return{next:function(){return e.next()}}},e.prototype.forEach=function(e,t){var r,o;void 0===t&&(t=i.dom.window);var a=0;try{for(var s=n(this._items),u=s.next();!u.done;u=s.next()){var l=u.value;e.call(t,l,a++,this)}}catch(e){r={error:e}}finally{try{u&&!u.done&&(o=s.return)&&o.call(s)}finally{if(r)throw r.error}}},e.prototype.get=function(e,t,r){if(!o.isString(t))return Reflect.get(e,t,r);var n=Number(t);return isNaN(n)?Reflect.get(e,t,r):e._items[n]||void 0},e.prototype.set=function(e,t,r,n){if(!o.isString(t))return Reflect.set(e,t,r,n);var i=Number(t);return isNaN(i)?Reflect.set(e,t,r,n):i>=0&&i<e._items.length&&(e._items[i]=r,!0)},e._create=function(t,r){var n=new e(t);return n._items=r,n},e}();t.NodeListStaticImpl=a},function(e,t,r){"use strict";var n,i=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});Object.defineProperty(t,"__esModule",{value:!0});var o=r(9),a=r(0),s=function(e){function t(r){var n=e.call(this)||this;return n._element=r,Object.setPrototypeOf(n,t.prototype),n}return i(t,e),t.prototype._asArray=function(){return this},t.prototype.item=function(e){return this[e]||null},t.prototype.getNamedItem=function(e){return a.element_getAnAttributeByName(e,this._element)},t.prototype.getNamedItemNS=function(e,t){return a.element_getAnAttributeByNamespaceAndLocalName(e||"",t,this._element)},t.prototype.setNamedItem=function(e){return a.element_setAnAttribute(e,this._element)},t.prototype.setNamedItemNS=function(e){return a.element_setAnAttribute(e,this._element)},t.prototype.removeNamedItem=function(e){var t=a.element_removeAnAttributeByName(e,this._element);if(null===t)throw new o.NotFoundError;return t},t.prototype.removeNamedItemNS=function(e,t){var r=a.element_removeAnAttributeByNamespaceAndLocalName(e||"",t,this._element);if(null===r)throw new o.NotFoundError;return r},t._create=function(e){return new t(e)},t}(Array);t.NamedNodeMapImpl=s},function(e,t,r){"use strict";var n,i=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}),o=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,r=t&&e[t],n=0;if(r)return r.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(t,"__esModule",{value:!0});var a=r(6),s=r(2),u=r(102),l=r(9),c=r(0),h=r(12),p=r(3),f=function(e){function t(){var t=e.call(this)||this,r=a.dom.window._associatedDocument;return t._start=[r,0],t._end=[r,0],a.dom.rangeList.add(t),t}return i(t,e),Object.defineProperty(t.prototype,"commonAncestorContainer",{get:function(){for(var e=this._start[0];!c.tree_isAncestorOf(this._end[0],e,!0);){if(null===e._parent)throw new Error("Parent node  is null.");e=e._parent}return e},enumerable:!0,configurable:!0}),t.prototype.setStart=function(e,t){c.range_setTheStart(this,e,t)},t.prototype.setEnd=function(e,t){c.range_setTheEnd(this,e,t)},t.prototype.setStartBefore=function(e){var t=e._parent;if(null===t)throw new l.InvalidNodeTypeError;c.range_setTheStart(this,t,c.tree_index(e))},t.prototype.setStartAfter=function(e){var t=e._parent;if(null===t)throw new l.InvalidNodeTypeError;c.range_setTheStart(this,t,c.tree_index(e)+1)},t.prototype.setEndBefore=function(e){var t=e._parent;if(null===t)throw new l.InvalidNodeTypeError;c.range_setTheEnd(this,t,c.tree_index(e))},t.prototype.setEndAfter=function(e){var t=e._parent;if(null===t)throw new l.InvalidNodeTypeError;c.range_setTheEnd(this,t,c.tree_index(e)+1)},t.prototype.collapse=function(e){e?this._end=this._start:this._start=this._end},t.prototype.selectNode=function(e){c.range_select(e,this)},t.prototype.selectNodeContents=function(e){if(p.Guard.isDocumentTypeNode(e))throw new l.InvalidNodeTypeError;var t=c.tree_nodeLength(e);this._start=[e,0],this._end=[e,t]},t.prototype.compareBoundaryPoints=function(e,t){if(e!==s.HowToCompare.StartToStart&&e!==s.HowToCompare.StartToEnd&&e!==s.HowToCompare.EndToEnd&&e!==s.HowToCompare.EndToStart)throw new l.NotSupportedError;if(c.range_root(this)!==c.range_root(t))throw new l.WrongDocumentError;var r,n;switch(e){case s.HowToCompare.StartToStart:r=this._start,n=t._start;break;case s.HowToCompare.StartToEnd:r=this._end,n=t._start;break;case s.HowToCompare.EndToEnd:r=this._end,n=t._end;break;case s.HowToCompare.EndToStart:r=this._start,n=t._end;break;default:throw new l.NotSupportedError}var i=c.boundaryPoint_position(r,n);return i===s.BoundaryPosition.Before?-1:i===s.BoundaryPosition.After?1:0},t.prototype.deleteContents=function(){var e,t,r,n;if(!c.range_collapsed(this)){var i=this._startNode,a=this._startOffset,s=this._endNode,u=this._endOffset;if(i===s&&p.Guard.isCharacterDataNode(i))c.characterData_replaceData(i,a,u-a,"");else{var l,h,f=[];try{for(var d=o(c.range_getContainedNodes(this)),m=d.next();!m.done;m=d.next()){var y=(b=m.value)._parent;null!==y&&c.range_isContained(y,this)||f.push(b)}}catch(t){e={error:t}}finally{try{m&&!m.done&&(t=d.return)&&t.call(d)}finally{if(e)throw e.error}}if(c.tree_isAncestorOf(s,i,!0))l=i,h=a;else{for(var v=i;null!==v._parent&&!c.tree_isAncestorOf(s,v._parent,!0);)v=v._parent;if(null===v._parent)throw new Error("Parent node is null.");l=v._parent,h=c.tree_index(v)+1}p.Guard.isCharacterDataNode(i)&&c.characterData_replaceData(i,a,c.tree_nodeLength(i)-a,"");try{for(var _=o(f),g=_.next();!g.done;g=_.next()){var b;(b=g.value)._parent&&c.mutation_remove(b,b._parent)}}catch(e){r={error:e}}finally{try{g&&!g.done&&(n=_.return)&&n.call(_)}finally{if(r)throw r.error}}p.Guard.isCharacterDataNode(s)&&c.characterData_replaceData(s,0,u,""),this._start=[l,h],this._end=[l,h]}}},t.prototype.extractContents=function(){return c.range_extract(this)},t.prototype.cloneContents=function(){return c.range_cloneTheContents(this)},t.prototype.insertNode=function(e){return c.range_insert(e,this)},t.prototype.surroundContents=function(e){var t,r;try{for(var n=o(c.range_getPartiallyContainedNodes(this)),i=n.next();!i.done;i=n.next()){var a=i.value;if(!p.Guard.isTextNode(a))throw new l.InvalidStateError}}catch(e){t={error:e}}finally{try{i&&!i.done&&(r=n.return)&&r.call(n)}finally{if(t)throw t.error}}if(p.Guard.isDocumentNode(e)||p.Guard.isDocumentTypeNode(e)||p.Guard.isDocumentFragmentNode(e))throw new l.InvalidNodeTypeError;var s=c.range_extract(this);0!==e._children.size&&c.mutation_replaceAll(null,e),c.range_insert(e,this),c.mutation_append(s,e),c.range_select(e,this)},t.prototype.cloneRange=function(){return c.create_range(this._start,this._end)},t.prototype.detach=function(){a.dom.rangeList.delete(this)},t.prototype.isPointInRange=function(e,t){if(c.tree_rootNode(e)!==c.range_root(this))return!1;if(p.Guard.isDocumentTypeNode(e))throw new l.InvalidNodeTypeError;if(t>c.tree_nodeLength(e))throw new l.IndexSizeError;var r=[e,t];return c.boundaryPoint_position(r,this._start)!==s.BoundaryPosition.Before&&c.boundaryPoint_position(r,this._end)!==s.BoundaryPosition.After},t.prototype.comparePoint=function(e,t){if(c.tree_rootNode(e)!==c.range_root(this))throw new l.WrongDocumentError;if(p.Guard.isDocumentTypeNode(e))throw new l.InvalidNodeTypeError;if(t>c.tree_nodeLength(e))throw new l.IndexSizeError;var r=[e,t];return c.boundaryPoint_position(r,this._start)===s.BoundaryPosition.Before?-1:c.boundaryPoint_position(r,this._end)===s.BoundaryPosition.After?1:0},t.prototype.intersectsNode=function(e){if(c.tree_rootNode(e)!==c.range_root(this))return!1;var t=e._parent;if(null===t)return!0;var r=c.tree_index(e);return c.boundaryPoint_position([t,r],this._end)===s.BoundaryPosition.Before&&c.boundaryPoint_position([t,r+1],this._start)===s.BoundaryPosition.After},t.prototype.toString=function(){var e,t,r="";if(this._startNode===this._endNode&&p.Guard.isTextNode(this._startNode))return this._startNode._data.substring(this._startOffset,this._endOffset);p.Guard.isTextNode(this._startNode)&&(r+=this._startNode._data.substring(this._startOffset));try{for(var n=o(c.range_getContainedNodes(this)),i=n.next();!i.done;i=n.next()){var a=i.value;p.Guard.isTextNode(a)&&(r+=a._data)}}catch(t){e={error:t}}finally{try{i&&!i.done&&(t=n.return)&&t.call(n)}finally{if(e)throw e.error}}return p.Guard.isTextNode(this._endNode)&&(r+=this._endNode._data.substring(0,this._endOffset)),r},t._create=function(e,r){var n=new t;return e&&(n._start=e),r&&(n._end=r),n},t.START_TO_START=0,t.START_TO_END=1,t.END_TO_END=2,t.END_TO_START=3,t}(u.AbstractRangeImpl);t.RangeImpl=f,h.idl_defineConst(f.prototype,"START_TO_START",0),h.idl_defineConst(f.prototype,"START_TO_END",1),h.idl_defineConst(f.prototype,"END_TO_END",2),h.idl_defineConst(f.prototype,"END_TO_START",3)},function(e,t,r){"use strict";var n,i=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});Object.defineProperty(t,"__esModule",{value:!0});var o=r(103),a=r(0),s=function(e){function t(t,r,n){var i=e.call(this,t)||this;return i._iteratorCollection=void 0,i._reference=r,i._pointerBeforeReference=n,a.nodeIterator_iteratorList().add(i),i}return i(t,e),Object.defineProperty(t.prototype,"referenceNode",{get:function(){return this._reference},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"pointerBeforeReferenceNode",{get:function(){return this._pointerBeforeReference},enumerable:!0,configurable:!0}),t.prototype.nextNode=function(){return a.nodeIterator_traverse(this,!0)},t.prototype.previousNode=function(){return a.nodeIterator_traverse(this,!1)},t.prototype.detach=function(){a.nodeIterator_iteratorList().delete(this)},t._create=function(e,r,n){return new t(e,r,n)},t}(o.TraverserImpl);t.NodeIteratorImpl=s},function(e,t,r){"use strict";var n,i=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});Object.defineProperty(t,"__esModule",{value:!0});var o=r(2),a=r(103),s=r(0),u=function(e){function t(t,r){var n=e.call(this,t)||this;return n._current=r,n}return i(t,e),Object.defineProperty(t.prototype,"currentNode",{get:function(){return this._current},set:function(e){this._current=e},enumerable:!0,configurable:!0}),t.prototype.parentNode=function(){for(var e=this._current;null!==e&&e!==this._root;)if(null!==(e=e._parent)&&s.traversal_filter(this,e)===o.FilterResult.Accept)return this._current=e,e;return null},t.prototype.firstChild=function(){return s.treeWalker_traverseChildren(this,!0)},t.prototype.lastChild=function(){return s.treeWalker_traverseChildren(this,!1)},t.prototype.nextSibling=function(){return s.treeWalker_traverseSiblings(this,!0)},t.prototype.previousNode=function(){for(var e=this._current;e!==this._root;){for(var t=e._previousSibling;t;){e=t;for(var r=s.traversal_filter(this,e);r!==o.FilterResult.Reject&&e._lastChild;)e=e._lastChild,r=s.traversal_filter(this,e);if(r===o.FilterResult.Accept)return this._current=e,e;t=e._previousSibling}if(e===this._root||null===e._parent)return null;if(e=e._parent,s.traversal_filter(this,e)===o.FilterResult.Accept)return this._current=e,e}return null},t.prototype.previousSibling=function(){return s.treeWalker_traverseSiblings(this,!1)},t.prototype.nextNode=function(){for(var e=this._current,t=o.FilterResult.Accept;;){for(;t!==o.FilterResult.Reject&&e._firstChild;)if(e=e._firstChild,(t=s.traversal_filter(this,e))===o.FilterResult.Accept)return this._current=e,e;for(var r=null,n=e;null!==n;){if(n===this._root)return null;if(null!==(r=n._nextSibling)){e=r;break}n=n._parent}if((t=s.traversal_filter(this,e))===o.FilterResult.Accept)return this._current=e,e}},t._create=function(e,r){return new t(e,r)},t}(a.TraverserImpl);t.TreeWalkerImpl=u},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(2),i=r(12),o=function(){function e(){}return e.prototype.acceptNode=function(e){return n.FilterResult.Accept},e._create=function(){return new e},e.FILTER_ACCEPT=1,e.FILTER_REJECT=2,e.FILTER_SKIP=3,e.SHOW_ALL=4294967295,e.SHOW_ELEMENT=1,e.SHOW_ATTRIBUTE=2,e.SHOW_TEXT=4,e.SHOW_CDATA_SECTION=8,e.SHOW_ENTITY_REFERENCE=16,e.SHOW_ENTITY=32,e.SHOW_PROCESSING_INSTRUCTION=64,e.SHOW_COMMENT=128,e.SHOW_DOCUMENT=256,e.SHOW_DOCUMENT_TYPE=512,e.SHOW_DOCUMENT_FRAGMENT=1024,e.SHOW_NOTATION=2048,e}();t.NodeFilterImpl=o,i.idl_defineConst(o.prototype,"FILTER_ACCEPT",1),i.idl_defineConst(o.prototype,"FILTER_REJECT",2),i.idl_defineConst(o.prototype,"FILTER_SKIP",3),i.idl_defineConst(o.prototype,"SHOW_ALL",4294967295),i.idl_defineConst(o.prototype,"SHOW_ELEMENT",1),i.idl_defineConst(o.prototype,"SHOW_ATTRIBUTE",2),i.idl_defineConst(o.prototype,"SHOW_TEXT",4),i.idl_defineConst(o.prototype,"SHOW_CDATA_SECTION",8),i.idl_defineConst(o.prototype,"SHOW_ENTITY_REFERENCE",16),i.idl_defineConst(o.prototype,"SHOW_ENTITY",32),i.idl_defineConst(o.prototype,"SHOW_PROCESSING_INSTRUCTION",64),i.idl_defineConst(o.prototype,"SHOW_COMMENT",128),i.idl_defineConst(o.prototype,"SHOW_DOCUMENT",256),i.idl_defineConst(o.prototype,"SHOW_DOCUMENT_TYPE",512),i.idl_defineConst(o.prototype,"SHOW_DOCUMENT_FRAGMENT",1024),i.idl_defineConst(o.prototype,"SHOW_NOTATION",2048)},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(){function e(e,t,r,n,i,o,a,s,u){this._type=e,this._target=t,this._addedNodes=r,this._removedNodes=n,this._previousSibling=i,this._nextSibling=o,this._attributeName=a,this._attributeNamespace=s,this._oldValue=u}return Object.defineProperty(e.prototype,"type",{get:function(){return this._type},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"target",{get:function(){return this._target},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"addedNodes",{get:function(){return this._addedNodes},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"removedNodes",{get:function(){return this._removedNodes},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"previousSibling",{get:function(){return this._previousSibling},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"nextSibling",{get:function(){return this._nextSibling},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"attributeName",{get:function(){return this._attributeName},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"attributeNamespace",{get:function(){return this._attributeNamespace},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"oldValue",{get:function(){return this._oldValue},enumerable:!0,configurable:!0}),e._create=function(t,r,n,i,o,a,s,u,l){return new e(t,r,n,i,o,a,s,u,l)},e}();t.MutationRecordImpl=n},function(e,t,r){"use strict";var n=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,r=t&&e[t],n=0;if(r)return r.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(t,"__esModule",{value:!0});var i=r(6),o=r(9),a=r(7),s=r(0),u=function(){function e(e,t){this._element=e,this._attribute=t,this._tokenSet=new Set;var r=t._localName,n=s.element_getAnAttributeValue(e,r),o=this;this._element._attributeChangeSteps.push((function(e,t,r,n,i){t===o._attribute._localName&&null===i&&(n?o._tokenSet=s.orderedSet_parse(n):o._tokenSet.clear())})),i.dom.features.steps&&s.dom_runAttributeChangeSteps(e,r,n,n,null)}return Object.defineProperty(e.prototype,"length",{get:function(){return this._tokenSet.size},enumerable:!0,configurable:!0}),e.prototype.item=function(e){var t,r,i=0;try{for(var o=n(this._tokenSet),a=o.next();!a.done;a=o.next()){var s=a.value;if(i===e)return s;i++}}catch(e){t={error:e}}finally{try{a&&!a.done&&(r=o.return)&&r.call(o)}finally{if(t)throw t.error}}return null},e.prototype.contains=function(e){return this._tokenSet.has(e)},e.prototype.add=function(){for(var e,t,r=[],i=0;i<arguments.length;i++)r[i]=arguments[i];try{for(var u=n(r),l=u.next();!l.done;l=u.next()){var c=l.value;if(""===c)throw new o.SyntaxError("Cannot add an empty token.");if(a.codePoint.ASCIIWhiteSpace.test(c))throw new o.InvalidCharacterError("Token cannot contain whitespace.");this._tokenSet.add(c)}}catch(t){e={error:t}}finally{try{l&&!l.done&&(t=u.return)&&t.call(u)}finally{if(e)throw e.error}}s.tokenList_updateSteps(this)},e.prototype.remove=function(){for(var e,t,r=[],i=0;i<arguments.length;i++)r[i]=arguments[i];try{for(var u=n(r),l=u.next();!l.done;l=u.next()){var c=l.value;if(""===c)throw new o.SyntaxError("Cannot remove an empty token.");if(a.codePoint.ASCIIWhiteSpace.test(c))throw new o.InvalidCharacterError("Token cannot contain whitespace.");this._tokenSet.delete(c)}}catch(t){e={error:t}}finally{try{l&&!l.done&&(t=u.return)&&t.call(u)}finally{if(e)throw e.error}}s.tokenList_updateSteps(this)},e.prototype.toggle=function(e,t){if(void 0===t&&(t=void 0),""===e)throw new o.SyntaxError("Cannot toggle an empty token.");if(a.codePoint.ASCIIWhiteSpace.test(e))throw new o.InvalidCharacterError("Token cannot contain whitespace.");return this._tokenSet.has(e)?void 0!==t&&!1!==t||(this._tokenSet.delete(e),s.tokenList_updateSteps(this),!1):(void 0===t||!0===t)&&(this._tokenSet.add(e),s.tokenList_updateSteps(this),!0)},e.prototype.replace=function(e,t){if(""===e||""===t)throw new o.SyntaxError("Cannot replace an empty token.");if(a.codePoint.ASCIIWhiteSpace.test(e)||a.codePoint.ASCIIWhiteSpace.test(t))throw new o.InvalidCharacterError("Token cannot contain whitespace.");return!!this._tokenSet.has(e)&&(a.set.replace(this._tokenSet,e,t),s.tokenList_updateSteps(this),!0)},e.prototype.supports=function(e){return s.tokenList_validationSteps(this,e)},Object.defineProperty(e.prototype,"value",{get:function(){return s.tokenList_serializeSteps(this)},set:function(e){s.element_setAnAttributeValue(this._element,this._attribute._localName,e)},enumerable:!0,configurable:!0}),e.prototype[Symbol.iterator]=function(){var e=this._tokenSet[Symbol.iterator]();return{next:function(){return e.next()}}},e._create=function(t,r){return new e(t,r)},e}();t.DOMTokenListImpl=u},function(e,t,r){"use strict";var n,i=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});Object.defineProperty(t,"__esModule",{value:!0});var o=r(104),a=r(0),s=function(e){function t(t,r){var n=e.call(this,t,r)||this;return n._detail=null,n._detail=r&&r.detail||null,n}return i(t,e),Object.defineProperty(t.prototype,"detail",{get:function(){return this._detail},enumerable:!0,configurable:!0}),t.prototype.initCustomEvent=function(e,t,r,n){void 0===t&&(t=!1),void 0===r&&(r=!1),void 0===n&&(n=null),this._dispatchFlag||(a.event_initialize(this,e,t,r),this._detail=n)},t}(o.EventImpl);t.CustomEventImpl=s},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(6),i=r(2),o=r(105),a=r(17);t.nodeIterator_traverse=function(e,t){for(var r=e._reference,n=e._pointerBeforeReference;;){if(t)if(n)n=!1;else{var s=a.tree_getFollowingNode(e._root,r);if(!s)return null;r=s}else if(n){var u=a.tree_getPrecedingNode(e.root,r);if(!u)return null;r=u}else n=!0;if(o.traversal_filter(e,r)===i.FilterResult.Accept)break}return e._reference=r,e._pointerBeforeReference=n,r},t.nodeIterator_iteratorList=function(){return n.dom.window._iteratorList}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(9),i=r(7),o=r(174);function a(e){if(!o.xml_isName(e))throw new n.InvalidCharacterError("Invalid XML name: "+e);if(!o.xml_isQName(e))throw new n.InvalidCharacterError("Invalid XML qualified name: "+e+".")}t.namespace_validate=a,t.namespace_validateAndExtract=function(e,t){e||(e=null),a(t);var r=t.split(":"),o=2===r.length?r[0]:null,s=2===r.length?r[1]:t;if(o&&null===e)throw new n.NamespaceError("Qualified name includes a prefix but the namespace is null.");if("xml"===o&&e!==i.namespace.XML)throw new n.NamespaceError('Qualified name includes the "xml" prefix but the namespace is not the XML namespace.');if(e!==i.namespace.XMLNS&&("xmlns"===o||"xmlns"===t))throw new n.NamespaceError('Qualified name includes the "xmlns" prefix but the namespace is not the XMLNS namespace.');if(e===i.namespace.XMLNS&&"xmlns"!==o&&"xmlns"!==t)throw new n.NamespaceError('Qualified name does not include the "xmlns" prefix but the namespace is the XMLNS namespace.');return[e,o,s]},t.namespace_extractQName=function(e){a(e);var t=e.split(":");return[2===t.length?t[0]:null,2===t.length?t[1]:e]}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.xml_isName=function(e){for(var t=0;t<e.length;t++){var r=e.charCodeAt(t);if(!(r>=97&&r<=122||r>=65&&r<=90||58===r||95===r||r>=192&&r<=214||r>=216&&r<=246||r>=248&&r<=767||r>=880&&r<=893||r>=895&&r<=8191||r>=8204&&r<=8205||r>=8304&&r<=8591||r>=11264&&r<=12271||r>=12289&&r<=55295||r>=63744&&r<=64975||r>=65008&&r<=65533)&&(0===t||!(45===r||46===r||r>=48&&r<=57||183===r||r>=768&&r<=879||r>=8255&&r<=8256))){if(r>=55296&&r<=56319&&t<e.length-1){var n=e.charCodeAt(t+1);if(n>=56320&&n<=57343&&(t++,(r=1024*(r-55296)+n-56320+65536)>=65536&&r<=983039))continue}return!1}}return!0},t.xml_isQName=function(e){for(var t=!1,r=0;r<e.length;r++){var n=e.charCodeAt(r);if(!(n>=97&&n<=122||n>=65&&n<=90||95===n||n>=192&&n<=214||n>=216&&n<=246||n>=248&&n<=767||n>=880&&n<=893||n>=895&&n<=8191||n>=8204&&n<=8205||n>=8304&&n<=8591||n>=11264&&n<=12271||n>=12289&&n<=55295||n>=63744&&n<=64975||n>=65008&&n<=65533)&&(0===r||!(45===n||46===n||n>=48&&n<=57||183===n||n>=768&&n<=879||n>=8255&&n<=8256))){if(0===r||58!==n){if(n>=55296&&n<=56319&&r<e.length-1){var i=e.charCodeAt(r+1);if(i>=56320&&i<=57343&&(r++,(n=1024*(n-55296)+i-56320+65536)>=65536&&n<=983039))continue}return!1}if(t)return!1;if(r===e.length-1)return!1;t=!0}}return!0},t.xml_isLegalChar=function(e){for(var t=0;t<e.length;t++){var r=e.charCodeAt(t);if(!(9===r||10===r||13===r||r>=32&&r<=55295||r>=57344&&r<=65533)){if(r>=55296&&r<=56319&&t<e.length-1){var n=e.charCodeAt(t+1);if(n>=56320&&n<=57343&&(t++,(r=1024*(r-55296)+n-56320+65536)>=65536&&r<=1114111))continue}return!1}}return!0},t.xml_isPubidChar=function(e){for(var t=0;t<e.length;t++){var r=e.charCodeAt(t);if(!(r>=97&&r<=122||r>=65&&r<=90||r>=39&&r<=59||32===r||13===r||10===r||r>=35&&r<=37||33===r||61===r||63===r||64===r||95===r))return!1}return!0}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(2),i=r(17);t.boundaryPoint_position=function e(t,r){var o=t[0],a=t[1],s=r[0],u=r[1];if(console.assert(i.tree_rootNode(o)===i.tree_rootNode(s),"Boundary points must share the same root node."),o===s)return a===u?n.BoundaryPosition.Equal:a<u?n.BoundaryPosition.Before:n.BoundaryPosition.After;if(i.tree_isFollowing(s,o)){var l=e([s,u],[o,a]);if(l===n.BoundaryPosition.Before)return n.BoundaryPosition.After;if(l===n.BoundaryPosition.After)return n.BoundaryPosition.Before}if(i.tree_isAncestorOf(s,o)){for(var c=s;!i.tree_isChildOf(o,c);)null!==c._parent&&(c=c._parent);if(i.tree_index(c)<a)return n.BoundaryPosition.After}return n.BoundaryPosition.Before}},function(e,t,r){"use strict";var n=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,r=t&&e[t],n=0;if(r)return r.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(t,"__esModule",{value:!0});var i=r(6),o=r(3),a=r(7),s=r(29),u=r(108),l=r(30),c=r(37),h=r(52);t.node_stringReplaceAll=function(e,t){var r=null;""!==e&&(r=s.create_text(t._nodeDocument,e)),c.mutation_replaceAll(r,t)},t.node_clone=function e(t,r,a){var u,p,f,d,m;if(void 0===r&&(r=null),void 0===a&&(a=!1),null===r&&(r=t._nodeDocument),o.Guard.isElementNode(t)){m=h.element_createAnElement(r,t._localName,t._namespace,t._namespacePrefix,t._is,!1);try{for(var y=n(t._attributeList),v=y.next();!v.done;v=y.next()){var _=e(v.value,r);h.element_append(_,m)}}catch(e){u={error:e}}finally{try{v&&!v.done&&(p=y.return)&&p.call(y)}finally{if(u)throw u.error}}}else if(o.Guard.isDocumentNode(t)){var g=s.create_document();g._encoding=t._encoding,g._contentType=t._contentType,g._URL=t._URL,g._origin=t._origin,g._type=t._type,g._mode=t._mode,m=g}else if(o.Guard.isDocumentTypeNode(t)){m=s.create_documentType(r,t._name,t._publicId,t._systemId)}else if(o.Guard.isAttrNode(t)){var b=s.create_attr(r,t.localName);b._namespace=t._namespace,b._namespacePrefix=t._namespacePrefix,b._value=t._value,m=b}else m=o.Guard.isExclusiveTextNode(t)?s.create_text(r,t._data):o.Guard.isCDATASectionNode(t)?s.create_cdataSection(r,t._data):o.Guard.isCommentNode(t)?s.create_comment(r,t._data):o.Guard.isProcessingInstructionNode(t)?s.create_processingInstruction(r,t._target,t._data):o.Guard.isDocumentFragmentNode(t)?s.create_documentFragment(r):Object.create(t);if(o.Guard.isDocumentNode(m)?(m._nodeDocument=m,r=m):m._nodeDocument=r,i.dom.features.steps&&l.dom_runCloningSteps(m,t,r,a),a)try{for(var x=n(t._children),w=x.next();!w.done;w=x.next()){var E=e(w.value,r,!0);c.mutation_append(E,m)}}catch(e){f={error:e}}finally{try{w&&!w.done&&(d=x.return)&&d.call(x)}finally{if(f)throw f.error}}return m},t.node_equals=function e(t,r){var i,a,s,u;if(t._nodeType!==r._nodeType)return!1;if(o.Guard.isDocumentTypeNode(t)&&o.Guard.isDocumentTypeNode(r)){if(t._name!==r._name||t._publicId!==r._publicId||t._systemId!==r._systemId)return!1}else if(o.Guard.isElementNode(t)&&o.Guard.isElementNode(r)){if(t._namespace!==r._namespace||t._namespacePrefix!==r._namespacePrefix||t._localName!==r._localName||t._attributeList.length!==r._attributeList.length)return!1}else if(o.Guard.isAttrNode(t)&&o.Guard.isAttrNode(r)){if(t._namespace!==r._namespace||t._localName!==r._localName||t._value!==r._value)return!1}else if(o.Guard.isProcessingInstructionNode(t)&&o.Guard.isProcessingInstructionNode(r)){if(t._target!==r._target||t._data!==r._data)return!1}else if(o.Guard.isCharacterDataNode(t)&&o.Guard.isCharacterDataNode(r)&&t._data!==r._data)return!1;if(o.Guard.isElementNode(t)&&o.Guard.isElementNode(r)){var l={};try{for(var c=n(t._attributeList),h=c.next();!h.done;h=c.next()){l[(d=h.value)._localName]=d}}catch(e){i={error:e}}finally{try{h&&!h.done&&(a=c.return)&&a.call(c)}finally{if(i)throw i.error}}try{for(var p=n(r._attributeList),f=p.next();!f.done;f=p.next()){var d,m=f.value;if(!(d=l[m._localName]))return!1;if(!e(d,m))return!1}}catch(e){s={error:e}}finally{try{f&&!f.done&&(u=p.return)&&u.call(p)}finally{if(s)throw s.error}}}if(t._children.size!==r._children.size)return!1;for(var y=t._children[Symbol.iterator](),v=r._children[Symbol.iterator](),_=y.next(),g=v.next();!_.done&&!g.done;){if(!e(_.value,g.value))return!1;_=y.next(),g=v.next()}return!0},t.node_listOfElementsWithQualifiedName=function(e,t){return"*"===e?s.create_htmlCollection(t):"html"===t._nodeDocument._type?s.create_htmlCollection(t,(function(t){return t._namespace===a.namespace.HTML&&t._qualifiedName===e.toLowerCase()||t._namespace!==a.namespace.HTML&&t._qualifiedName===e})):s.create_htmlCollection(t,(function(t){return t._qualifiedName===e}))},t.node_listOfElementsWithNamespace=function(e,t,r){return""===e&&(e=null),"*"===e&&"*"===t?s.create_htmlCollection(r):"*"===e?s.create_htmlCollection(r,(function(e){return e._localName===t})):"*"===t?s.create_htmlCollection(r,(function(t){return t._namespace===e})):s.create_htmlCollection(r,(function(r){return r._localName===t&&r._namespace===e}))},t.node_listOfElementsWithClassNames=function(e,t){var r=u.orderedSet_parse(e);if(0===r.size)return s.create_htmlCollection(t,(function(){return!1}));var n="quirks"!==t._nodeDocument._mode;return s.create_htmlCollection(t,(function(e){var t=e.classList;return u.orderedSet_contains(t._tokenSet,r,n)}))},t.node_locateANamespacePrefix=function e(t,r){if(t._namespace===r&&null!==t._namespacePrefix)return t._namespacePrefix;for(var n=0;n<t._attributeList.length;n++){var i=t._attributeList[n];if("xmlns"===i._namespacePrefix&&i._value===r)return i._localName}return t._parent&&o.Guard.isElementNode(t._parent)?e(t._parent,r):null},t.node_locateANamespace=function e(t,r){if(o.Guard.isElementNode(t)){if(null!==t._namespace&&t._namespacePrefix===r)return t._namespace;for(var n=0;n<t._attributeList.length;n++){var i=t._attributeList[n];if(i._namespace===a.namespace.XMLNS&&"xmlns"===i._namespacePrefix&&i._localName===r)return i._value||null;if(null===r&&i._namespace===a.namespace.XMLNS&&null===i._namespacePrefix&&"xmlns"===i._localName)return i._value||null}return null===t.parentElement?null:e(t.parentElement,r)}return o.Guard.isDocumentNode(t)?null===t.documentElement?null:e(t.documentElement,r):o.Guard.isDocumentTypeNode(t)||o.Guard.isDocumentFragmentNode(t)?null:o.Guard.isAttrNode(t)?null===t._element?null:e(t._element,r):t._parent&&o.Guard.isElementNode(t._parent)?e(t._parent,r):null}},function(e,t,r){"use strict";var n=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,r=t&&e[t],n=0;if(r)return r.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(t,"__esModule",{value:!0});var i=r(6),o=r(3),a=r(9),s=r(29),u=r(17),l=r(107),c=r(37);t.text_contiguousTextNodes=function(e,t){var r;return void 0===t&&(t=!1),(r={})[Symbol.iterator]=function(){for(var r=e;r&&o.Guard.isTextNode(r._previousSibling);)r=r._previousSibling;return{next:function(){if(r&&!t&&r===e&&(r=o.Guard.isTextNode(r._nextSibling)?r._nextSibling:null),null===r)return{done:!0,value:null};var n={done:!1,value:r};return r=o.Guard.isTextNode(r._nextSibling)?r._nextSibling:null,n}}},r},t.text_contiguousExclusiveTextNodes=function(e,t){var r;return void 0===t&&(t=!1),(r={})[Symbol.iterator]=function(){for(var r=e;r&&o.Guard.isExclusiveTextNode(r._previousSibling);)r=r._previousSibling;return{next:function(){if(r&&!t&&r===e&&(r=o.Guard.isExclusiveTextNode(r._nextSibling)?r._nextSibling:null),null===r)return{done:!0,value:null};var n={done:!1,value:r};return r=o.Guard.isExclusiveTextNode(r._nextSibling)?r._nextSibling:null,n}}},r},t.text_descendantTextContent=function(e){for(var t="",r=u.tree_getFirstDescendantNode(e,!1,!1,(function(e){return o.Guard.isTextNode(e)}));null!==r;)t+=r._data,r=u.tree_getNextDescendantNode(e,r,!1,!1,(function(e){return o.Guard.isTextNode(e)}));return t},t.text_split=function(e,t){var r,o,h=e._data.length;if(t>h)throw new a.IndexSizeError;var p=h-t,f=l.characterData_substringData(e,t,p),d=s.create_text(e._nodeDocument,f),m=e._parent;if(null!==m){c.mutation_insert(d,m,e._nextSibling);try{for(var y=n(i.dom.rangeList),v=y.next();!v.done;v=y.next()){var _=v.value;_._start[0]===e&&_._start[1]>t&&(_._start[0]=d,_._start[1]-=t),_._end[0]===e&&_._end[1]>t&&(_._end[0]=d,_._end[1]-=t);var g=u.tree_index(e);_._start[0]===m&&_._start[1]===g+1&&_._start[1]++,_._end[0]===m&&_._end[1]===g+1&&_._end[1]++}}catch(e){r={error:e}}finally{try{v&&!v.done&&(o=y.return)&&o.call(y)}finally{if(r)throw r.error}}}return l.characterData_replaceData(e,t,p,""),d}},function(e,t,r){"use strict";var n=r(4),i=r(41),o=r(24),a=r(48),s=[].join,u=i!=Object,l=a("join",",");n({target:"Array",proto:!0,forced:u||!l},{join:function(e){return s.call(o(this),void 0===e?",":e)}})},function(e,t,r){var n=r(4),i=r(83),o=String.fromCharCode,a=String.fromCodePoint;n({target:"String",stat:!0,forced:!!a&&1!=a.length},{fromCodePoint:function(e){for(var t,r=[],n=arguments.length,a=0;n>a;){if(t=+arguments[a++],i(t,1114111)!==t)throw RangeError(t+" is not a valid code point");r.push(t<65536?o(t):o(55296+((t-=65536)>>10),t%1024+56320))}return r.join("")}})},function(e,t,r){"use strict";var n=this&&this.__read||function(e,t){var r="function"==typeof Symbol&&e[Symbol.iterator];if(!r)return e;var n,i,o=r.call(e),a=[];try{for(;(void 0===t||t-- >0)&&!(n=o.next()).done;)a.push(n.value)}catch(e){i={error:e}}finally{try{n&&!n.done&&(r=o.return)&&r.call(o)}finally{if(i)throw i.error}}return a};Object.defineProperty(t,"__esModule",{value:!0});var i=r(111),o=function(){function e(e,t){this._options={skipWhitespaceOnlyText:!1},this.err={line:-1,col:-1,index:-1,str:""},this._str=e,this._index=0,this._length=e.length,t&&(this._options.skipWhitespaceOnlyText=t.skipWhitespaceOnlyText||!1)}return e.prototype.nextToken=function(){if(this.eof())return{type:i.TokenType.EOF};var t=this.skipIfStartsWith("<")?this.openBracket():this.text();return this._options.skipWhitespaceOnlyText&&t.type===i.TokenType.Text&&e.isWhiteSpaceToken(t)&&(t=this.nextToken()),t},e.prototype.openBracket=function(){return this.skipIfStartsWith("?")?this.skipIfStartsWith("xml")?e.isSpace(this._str[this._index])?this.declaration():(this.seek(-3),this.pi()):this.pi():this.skipIfStartsWith("!")?this.skipIfStartsWith("--")?this.comment():this.skipIfStartsWith("[CDATA[")?this.cdata():this.skipIfStartsWith("DOCTYPE")?this.doctype():void this.throwError("Invalid '!' in opening tag."):this.skipIfStartsWith("/")?this.closeTag():this.openTag()},e.prototype.declaration=function(){for(var e="",t="",r="";!this.eof();){if(this.skipSpace(),this.skipIfStartsWith("?>"))return{type:i.TokenType.Declaration,version:e,encoding:t,standalone:r};var o=n(this.attribute(),2),a=o[0],s=o[1];"version"===a?e=s:"encoding"===a?t=s:"standalone"===a?r=s:this.throwError("Invalid attribute name: "+a)}this.throwError("Missing declaration end symbol `?>`")},e.prototype.doctype=function(){var e="",t="";this.skipSpace();var r=this.takeUntil2("[",">",!0);return this.skipSpace(),this.skipIfStartsWith("PUBLIC")?(e=this.quotedString(),t=this.quotedString()):this.skipIfStartsWith("SYSTEM")&&(t=this.quotedString()),this.skipSpace(),this.skipIfStartsWith("[")&&(this.skipUntil("]"),this.skipIfStartsWith("]")||this.throwError("Missing end bracket of DTD internal subset")),this.skipSpace(),this.skipIfStartsWith(">")||this.throwError("Missing doctype end symbol `>`"),{type:i.TokenType.DocType,name:r,pubId:e,sysId:t}},e.prototype.pi=function(){var e=this.takeUntilStartsWith("?>",!0);if(this.eof()&&this.throwError("Missing processing instruction end symbol `?>`"),this.skipSpace(),this.skipIfStartsWith("?>"))return{type:i.TokenType.PI,target:e,data:""};var t=this.takeUntilStartsWith("?>");return this.eof()&&this.throwError("Missing processing instruction end symbol `?>`"),this.seek(2),{type:i.TokenType.PI,target:e,data:t}},e.prototype.text=function(){var e=this.takeUntil("<");return{type:i.TokenType.Text,data:e}},e.prototype.comment=function(){var e=this.takeUntilStartsWith("--\x3e");return this.eof()&&this.throwError("Missing comment end symbol `--\x3e`"),this.seek(3),{type:i.TokenType.Comment,data:e}},e.prototype.cdata=function(){var e=this.takeUntilStartsWith("]]>");return this.eof()&&this.throwError("Missing CDATA end symbol `]>`"),this.seek(3),{type:i.TokenType.CDATA,data:e}},e.prototype.openTag=function(){this.skipSpace();var e=this.takeUntil2(">","/",!0);if(this.skipSpace(),this.skipIfStartsWith(">"))return{type:i.TokenType.Element,name:e,attributes:[],selfClosing:!1};if(this.skipIfStartsWith("/>"))return{type:i.TokenType.Element,name:e,attributes:[],selfClosing:!0};for(var t=[];!this.eof();){if(this.skipSpace(),this.skipIfStartsWith(">"))return{type:i.TokenType.Element,name:e,attributes:t,selfClosing:!1};if(this.skipIfStartsWith("/>"))return{type:i.TokenType.Element,name:e,attributes:t,selfClosing:!0};var r=this.attribute();t.push(r)}this.throwError("Missing opening element tag end symbol `>`")},e.prototype.closeTag=function(){this.skipSpace();var e=this.takeUntil(">",!0);return this.skipSpace(),this.skipIfStartsWith(">")||this.throwError("Missing closing element tag end symbol `>`"),{type:i.TokenType.ClosingTag,name:e}},e.prototype.attribute=function(){this.skipSpace();var e=this.takeUntil("=",!0);return this.skipSpace(),this.skipIfStartsWith("=")||this.throwError("Missing equals sign before attribute value"),[e,this.quotedString()]},e.prototype.quotedString=function(){this.skipSpace();var t=this.take(1);e.isQuote(t)||this.throwError("Missing start quote character before quoted value");var r=this.takeUntil(t);return this.skipIfStartsWith(t)||this.throwError("Missing end quote character after quoted value"),r},e.prototype.eof=function(){return this._index>=this._length},e.prototype.skipIfStartsWith=function(e){var t=e.length;if(1===t)return this._str[this._index]===e&&(this._index++,!0);for(var r=0;r<t;r++)if(this._str[this._index+r]!==e[r])return!1;return this._index+=t,!0},e.prototype.seek=function(e){this._index+=e,this._index<0&&(this._index=0),this._index>this._length&&(this._index=this._length)},e.prototype.skipSpace=function(){for(;!this.eof()&&e.isSpace(this._str[this._index]);)this._index++},e.prototype.take=function(e){if(1===e)return this._str[this._index++];var t=this._index;return this.seek(e),this._str.slice(t,this._index)},e.prototype.takeUntil=function(t,r){void 0===r&&(r=!1);for(var n=this._index;this._index<this._length;){var i=this._str[this._index];if(i===t||r&&e.isSpace(i))break;this._index++}return this._str.slice(n,this._index)},e.prototype.takeUntil2=function(t,r,n){void 0===n&&(n=!1);for(var i=this._index;this._index<this._length;){var o=this._str[this._index];if(o===t||o===r||n&&e.isSpace(o))break;this._index++}return this._str.slice(i,this._index)},e.prototype.takeUntilStartsWith=function(t,r){void 0===r&&(r=!1);for(var n=this._index,i=t.length;this._index<this._length;){for(var o=!0,a=0;a<i;a++){var s=this._str[this._index+a],u=t[a];if(r&&e.isSpace(s))return this._str.slice(n,this._index);if(s!==u){this._index++,o=!1;break}}if(o)return this._str.slice(n,this._index)}return this._index=this._length,this._str.slice(n)},e.prototype.skipUntil=function(e){for(;this._index<this._length;){if(this._str[this._index]===e)break;this._index++}},e.isWhiteSpaceToken=function(e){for(var t=e.data,r=0;r<t.length;r++){var n=t[r];if(" "!==n&&"\n"!==n&&"\r"!==n&&"\t"!==n&&"\f"!==n)return!1}return!0},e.isSpace=function(e){return" "===e||"\n"===e||"\r"===e||"\t"===e},e.isQuote=function(e){return'"'===e||"'"===e},e.prototype.throwError=function(e){for(var t=/\r\n|\r|\n/g,r=null,n=0,i=0,o=this._str.length;null!==(r=t.exec(this._str))&&null!==r;)if(n++,r.index<this._index&&(i=t.lastIndex),r.index>this._index){o=r.index;break}throw this.err={line:n,col:this._index-i,index:this._index,str:this._str.substring(i,o)},new Error(e+"\nIndex: "+this.err.index+"\nLn: "+this.err.line+", Col: "+this.err.col+"\nInput: "+this.err.str)},e.prototype[Symbol.iterator]=function(){return this._index=0,{next:function(){var e=this.nextToken();return e.type===i.TokenType.EOF?{done:!0,value:null}:{done:!1,value:e}}.bind(this)}},e}();t.XMLStringLexer=o},function(e,t,r){"use strict";var n=r(39);e.exports=new n({include:[r(182)]})},function(e,t,r){"use strict";var n=r(39);e.exports=new n({include:[r(113)],implicit:[r(289),r(290),r(291),r(292)]})},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(91),i=r(1),o=r(3),a=r(77),s=r(109);function u(e,t){var r=c(void 0===e||l(e)?e:n.DefaultBuilderOptions),i=l(e)?t:e,o=s.createDocument();h(o,r);var u=new a.XMLBuilderImpl(o);return void 0!==i&&u.ele(i),u}function l(e){if(!i.isPlainObject(e))return!1;for(var t in e)if(e.hasOwnProperty(t)&&!n.XMLBuilderOptionKeys.has(t))return!1;return!0}function c(e){void 0===e&&(e={});var t=i.applyDefaults(e,n.DefaultBuilderOptions);if(0===t.convert.att.length||0===t.convert.ins.length||0===t.convert.text.length||0===t.convert.cdata.length||0===t.convert.comment.length)throw new Error("JS object converter strings cannot be zero length.");return t}function h(e,t,r){var n=e;n._xmlBuilderOptions=t,n._isFragment=r}t.builder=function(e,t){var r=c(l(e)?e:n.DefaultBuilderOptions),s=o.Guard.isNode(e)||i.isArray(e)?e:t;if(void 0===s)throw new Error("Invalid arguments.");if(i.isArray(s)){for(var u=[],h=0;h<s.length;h++){var p=new a.XMLBuilderImpl(s[h]);p.set(r),u.push(p)}return u}var f=new a.XMLBuilderImpl(s);return f.set(r),f},t.create=u,t.fragment=function(e,t){var r=c(void 0===e||l(e)?e:n.DefaultBuilderOptions),i=l(e)?t:e,o=s.createDocument();h(o,r,!0);var u=new a.XMLBuilderImpl(o.createDocumentFragment());return void 0!==i&&u.ele(i),u},t.convert=function(e,t,r){var i,o,a;return l(e)&&void 0!==t?(i=e,o=t,a=r):(i=n.DefaultBuilderOptions,o=e,a=t||void 0),u(i,o).end(a)}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(77);t.builder=n.builder,t.create=n.create,t.fragment=n.fragment,t.convert=n.convert,t.createCB=n.createCB,t.fragmentCB=n.fragmentCB},function(e,t,r){"use strict";r(31),r(32),r(33),r(191),r(192),r(194),r(64),r(19),r(198),r(199),r(89),r(201),r(65),r(20),r(66),r(22),r(23);var n=this&&this.__read||function(e,t){var r="function"==typeof Symbol&&e[Symbol.iterator];if(!r)return e;var n,i,o=r.call(e),a=[];try{for(;(void 0===t||t-- >0)&&!(n=o.next()).done;)a.push(n.value)}catch(e){i={error:e}}finally{try{n&&!n.done&&(r=o.return)&&r.call(o)}finally{if(i)throw i.error}}return a},i=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,r=t&&e[t],n=0;if(r)return r.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(t,"__esModule",{value:!0});var o=r(91),a=r(1),s=r(217),u=r(2),l=r(3),c=r(0),h=r(109),p=r(7),f=r(276),d=function(){function e(e){this._domNode=e}return Object.defineProperty(e.prototype,"node",{get:function(){return this._domNode},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"options",{get:function(){return this._options},enumerable:!0,configurable:!0}),e.prototype.set=function(e){return this._options=a.applyDefaults(a.applyDefaults(this._options,e,!0),o.DefaultBuilderOptions),this},e.prototype.ele=function(t,r,i){var o,s,u,l,p,d;if(a.isObject(t))return new f.ObjectReader(this._options).parse(this,t);if(null!==t&&/^\s*</.test(t))return new f.XMLReader(this._options).parse(this,t);if(null!==t&&/^\s*[\{\[]/.test(t))return new f.JSONReader(this._options).parse(this,t);if(null!==t&&/^(\s*|(#.*)|(%.*))*---/.test(t))return new f.YAMLReader(this._options).parse(this,t);if((null===t||a.isString(t))&&a.isString(r))l=(o=n([t,r,i],3))[0],p=o[1],d=o[2];else{if(null===t)throw new Error("Element name cannot be null. "+this._debugInfo());l=(s=n([void 0,t,a.isObject(r)?r:void 0],3))[0],p=s[1],d=s[2]}if(d&&(d=a.getValue(d)),l=(u=n(this._extractNamespace(h.sanitizeInput(l,this._options.invalidCharReplacement),h.sanitizeInput(p,this._options.invalidCharReplacement),!0),2))[0],p=u[1],void 0===l){var m=n(c.namespace_extractQName(p),1)[0];l=this.node.lookupNamespaceURI(m)}var y=null!=l?this._doc.createElementNS(l,p):this._doc.createElement(p);this.node.appendChild(y);var v=new e(y),_=this._doc.doctype;if(y===this._doc.documentElement&&null!==_){var g=this._doc.implementation.createDocumentType(this._doc.documentElement.tagName,_.publicId,_.systemId);this._doc.replaceChild(g,_)}return d&&!a.isEmpty(d)&&v.att(d),v},e.prototype.remove=function(){var e=this.up();return e.node.removeChild(this.node),e},e.prototype.att=function(e,t,r){var i,o,s,u,f,d,m=this;if(a.isMap(e)||a.isObject(e))return a.forEachObject(e,(function(e,t){return m.att(e,t)}),this),this;if(null!=e&&(e=a.getValue(e+"")),null!=t&&(t=a.getValue(t+"")),null!=r&&(r=a.getValue(r+"")),null!==e&&!a.isString(e)||!a.isString(t)||null!==r&&!a.isString(r)){if(!a.isString(e)||null!=t&&!a.isString(t))throw new Error("Attribute name and value not specified. "+this._debugInfo());u=(o=n([void 0,e,t],3))[0],f=o[1],d=o[2]}else u=(i=n([e,t,r],3))[0],f=i[1],d=i[2];if(this._options.keepNullAttributes&&null==d)d="";else if(null==d)return this;if(!l.Guard.isElementNode(this.node))throw new Error("An attribute can only be assigned to an element node.");var y=this.node;u=(s=n(this._extractNamespace(u,f,!1),2))[0],f=s[1],f=h.sanitizeInput(f,this._options.invalidCharReplacement),u=h.sanitizeInput(u,this._options.invalidCharReplacement),d=h.sanitizeInput(d,this._options.invalidCharReplacement);var v=n(c.namespace_extractQName(f),2),_=v[0],g=v[1],b=n(c.namespace_extractQName(y.prefix?y.prefix+":"+y.localName:y.localName),1)[0],x=null;return"xmlns"===_?(u=p.namespace.XMLNS,null===y.namespaceURI&&b===g&&(x=d)):null===_&&"xmlns"===g&&null===b&&(u=p.namespace.XMLNS,x=d),null!==x&&(this._updateNamespace(x),y=this.node),void 0!==u?y.setAttributeNS(u,f,d):y.setAttribute(f,d),this},e.prototype.removeAtt=function(e,t){var r,n,i=this;if(!l.Guard.isElementNode(this.node))throw new Error("An attribute can only be removed from an element node.");if(e=a.getValue(e),void 0!==t&&(t=a.getValue(t)),null!==e&&void 0===t)n=e;else{if(null!==e&&!a.isString(e)||void 0===t)throw new Error("Attribute namespace must be a string. "+this._debugInfo());r=e,n=t}return a.isArray(n)||a.isSet(n)?a.forEachArray(n,(function(e){return void 0===r?i.removeAtt(e):i.removeAtt(r,e)}),this):void 0!==r?(n=h.sanitizeInput(n,this._options.invalidCharReplacement),r=h.sanitizeInput(r,this._options.invalidCharReplacement),this.node.removeAttributeNS(r,n)):(n=h.sanitizeInput(n,this._options.invalidCharReplacement),this.node.removeAttribute(n)),this},e.prototype.txt=function(e){if(null==e){if(!this._options.keepNullNodes)return this;e=""}var t=this._doc.createTextNode(h.sanitizeInput(e,this._options.invalidCharReplacement));return this.node.appendChild(t),this},e.prototype.com=function(e){if(null==e){if(!this._options.keepNullNodes)return this;e=""}var t=this._doc.createComment(h.sanitizeInput(e,this._options.invalidCharReplacement));return this.node.appendChild(t),this},e.prototype.dat=function(e){if(null==e){if(!this._options.keepNullNodes)return this;e=""}var t=this._doc.createCDATASection(h.sanitizeInput(e,this._options.invalidCharReplacement));return this.node.appendChild(t),this},e.prototype.ins=function(e,t){var r=this;if(void 0===t&&(t=""),null==t){if(!this._options.keepNullNodes)return this;t=""}if(a.isArray(e)||a.isSet(e))a.forEachArray(e,(function(e){var t=(e+="").indexOf(" "),n=-1===t?e:e.substr(0,t),i=-1===t?"":e.substr(t+1);r.ins(n,i)}),this);else if(a.isMap(e)||a.isObject(e))a.forEachObject(e,(function(e,t){return r.ins(e,t)}),this);else{var n=this._doc.createProcessingInstruction(h.sanitizeInput(e,this._options.invalidCharReplacement),h.sanitizeInput(t,this._options.invalidCharReplacement));this.node.appendChild(n)}return this},e.prototype.dec=function(e){return this._options.version=e.version||"1.0",this._options.encoding=e.encoding,this._options.standalone=e.standalone,this},e.prototype.dtd=function(e){var t=h.sanitizeInput(e&&e.name||(this._doc.documentElement?this._doc.documentElement.tagName:"ROOT"),this._options.invalidCharReplacement),r=h.sanitizeInput(e&&e.pubID||"",this._options.invalidCharReplacement),n=h.sanitizeInput(e&&e.sysID||"",this._options.invalidCharReplacement);if(null!==this._doc.documentElement&&t!==this._doc.documentElement.tagName)throw new Error("DocType name does not match document element name.");var i=this._doc.implementation.createDocumentType(t,r,n);return null!==this._doc.doctype?this._doc.replaceChild(i,this._doc.doctype):this._doc.insertBefore(i,this._doc.documentElement),this},e.prototype.import=function(t){var r,o,a=this._domNode,s=this._doc,u=t.node;if(l.Guard.isDocumentNode(u)){var h=u.documentElement;if(null===h)throw new Error("Imported document has no document element node. "+this._debugInfo());var p=s.importNode(h,!0);a.appendChild(p);var f=n(c.namespace_extractQName(p.prefix?p.prefix+":"+p.localName:p.localName),1)[0],d=a.lookupNamespaceURI(f);new e(p)._updateNamespace(d)}else if(l.Guard.isDocumentFragmentNode(u))try{for(var m=i(u.childNodes),y=m.next();!y.done;y=m.next()){var v=y.value;p=s.importNode(v,!0);if(a.appendChild(p),l.Guard.isElementNode(p)){f=n(c.namespace_extractQName(p.prefix?p.prefix+":"+p.localName:p.localName),1)[0],d=a.lookupNamespaceURI(f);new e(p)._updateNamespace(d)}}}catch(e){r={error:e}}finally{try{y&&!y.done&&(o=m.return)&&o.call(m)}finally{if(r)throw r.error}}else{p=s.importNode(u,!0);if(a.appendChild(p),l.Guard.isElementNode(p)){f=n(c.namespace_extractQName(p.prefix?p.prefix+":"+p.localName:p.localName),1)[0],d=a.lookupNamespaceURI(f);new e(p)._updateNamespace(d)}}return this},e.prototype.doc=function(){if(this._doc._isFragment){for(var t=this.node;t&&t.nodeType!==u.NodeType.DocumentFragment;)t=t.parentNode;if(null===t)throw new Error("Node has no parent node while searching for document fragment ancestor. "+this._debugInfo());return new e(t)}return new e(this._doc)},e.prototype.root=function(){var t=this._doc.documentElement;if(!t)throw new Error("Document root element is null. "+this._debugInfo());return new e(t)},e.prototype.up=function(){var t=this._domNode.parentNode;if(!t)throw new Error("Parent node is null. "+this._debugInfo());return new e(t)},e.prototype.prev=function(){var t=this._domNode.previousSibling;if(!t)throw new Error("Previous sibling node is null. "+this._debugInfo());return new e(t)},e.prototype.next=function(){var t=this._domNode.nextSibling;if(!t)throw new Error("Next sibling node is null. "+this._debugInfo());return new e(t)},e.prototype.first=function(){var t=this._domNode.firstChild;if(!t)throw new Error("First child node is null. "+this._debugInfo());return new e(t)},e.prototype.last=function(){var t=this._domNode.lastChild;if(!t)throw new Error("Last child node is null. "+this._debugInfo());return new e(t)},e.prototype.each=function(t,r,n,i){void 0===r&&(r=!1),void 0===n&&(n=!1);for(var o=this._getFirstDescendantNode(this._domNode,r,n);o[0];){var a=this._getNextDescendantNode(this._domNode,o[0],n,o[1],o[2]);t.call(i,new e(o[0]),o[1],o[2]),o=a}return this},e.prototype.map=function(e,t,r,n){void 0===t&&(t=!1),void 0===r&&(r=!1);var i=[];return this.each((function(t,r,o){return i.push(e.call(n,t,r,o))}),t,r),i},e.prototype.reduce=function(e,t,r,n,i){void 0===r&&(r=!1),void 0===n&&(n=!1);var o=t;return this.each((function(t,r,n){return o=e.call(i,o,t,r,n)}),r,n),o},e.prototype.find=function(t,r,n,i){void 0===r&&(r=!1),void 0===n&&(n=!1);for(var o=this._getFirstDescendantNode(this._domNode,r,n);o[0];){var a=new e(o[0]);if(t.call(i,a,o[1],o[2]))return a;o=this._getNextDescendantNode(this._domNode,o[0],n,o[1],o[2])}},e.prototype.filter=function(e,t,r,n){void 0===t&&(t=!1),void 0===r&&(r=!1);var i=[];return this.each((function(t,r,o){e.call(n,t,r,o)&&i.push(t)}),t,r),i},e.prototype.every=function(t,r,n,i){void 0===r&&(r=!1),void 0===n&&(n=!1);for(var o=this._getFirstDescendantNode(this._domNode,r,n);o[0];){var a=new e(o[0]);if(!t.call(i,a,o[1],o[2]))return!1;o=this._getNextDescendantNode(this._domNode,o[0],n,o[1],o[2])}return!0},e.prototype.some=function(t,r,n,i){void 0===r&&(r=!1),void 0===n&&(n=!1);for(var o=this._getFirstDescendantNode(this._domNode,r,n);o[0];){var a=new e(o[0]);if(t.call(i,a,o[1],o[2]))return!0;o=this._getNextDescendantNode(this._domNode,o[0],n,o[1],o[2])}return!1},e.prototype.toArray=function(e,t){void 0===e&&(e=!1),void 0===t&&(t=!1);var r=[];return this.each((function(e){return r.push(e)}),e,t),r},e.prototype.toString=function(e){return void 0===(e=e||{}).format&&(e.format="xml"),this._serialize(e)},e.prototype.toObject=function(e){return void 0===(e=e||{}).format&&(e.format="object"),this._serialize(e)},e.prototype.end=function(e){return void 0===(e=e||{}).format&&(e.format="xml"),this.doc()._serialize(e)},e.prototype._getFirstDescendantNode=function(e,t,r){return t?[this._domNode,0,0]:r?this._getNextDescendantNode(e,e,r,0,0):[this._domNode.firstChild,0,1]},e.prototype._getNextDescendantNode=function(e,t,r,n,i){if(!r)return e===t?[t.firstChild,0,i+1]:[t.nextSibling,n+1,i];if(t.firstChild)return[t.firstChild,0,i+1];if(t===e)return[null,-1,-1];if(t.nextSibling)return[t.nextSibling,n+1,i];for(var o=t.parentNode;o&&o!==e;){if(o.nextSibling)return[o.nextSibling,c.tree_index(o.nextSibling),i-1];o=o.parentNode,i--}return[null,-1,-1]},e.prototype._serialize=function(e){if("xml"===e.format)return new s.XMLWriter(this._options,e).serialize(this.node);if("map"===e.format)return new s.MapWriter(this._options,e).serialize(this.node);if("object"===e.format)return new s.ObjectWriter(this._options,e).serialize(this.node);if("json"===e.format)return new s.JSONWriter(this._options,e).serialize(this.node);if("yaml"===e.format)return new s.YAMLWriter(this._options,e).serialize(this.node);throw new Error("Invalid writer format: "+e.format+". "+this._debugInfo())},e.prototype._extractNamespace=function(e,t,r){var n=t.indexOf("@");if(n>0&&(void 0===e&&(e=t.slice(n+1)),t=t.slice(0,n)),void 0===e)e=r?this._options.defaultNamespace.ele:this._options.defaultNamespace.att;else if(null!==e&&"@"===e[0]){var i=e.slice(1);if(void 0===(e=this._options.namespaceAlias[i]))throw new Error("Namespace alias `"+i+"` is not defined. "+this._debugInfo())}return[e,t]},e.prototype._updateNamespace=function(t){var r,o,a,s,u=this._domNode;if(l.Guard.isElementNode(u)&&null!==t&&u.namespaceURI!==t){var h=n(c.namespace_extractQName(u.prefix?u.prefix+":"+u.localName:u.localName),2),p=h[0],f=h[1],d=c.create_element(this._doc,f,t,p);try{for(var m=i(u.attributes),y=m.next();!y.done;y=m.next()){var v=y.value,_=v.prefix?v.prefix+":"+v.localName:v.localName,g=n(c.namespace_extractQName(_),1)[0],b=v.namespaceURI;null===b&&null!==g&&(b=u.lookupNamespaceURI(g)),null===b?d.setAttribute(_,v.value):d.setAttributeNS(b,_,v.value)}}catch(e){r={error:e}}finally{try{y&&!y.done&&(o=m.return)&&o.call(m)}finally{if(r)throw r.error}}var x=u.parentNode;if(null===x)throw new Error("Parent node is null."+this._debugInfo());x.replaceChild(d,u),this._domNode=d;try{for(var w=i(u.childNodes),E=w.next();!E.done;E=w.next()){var D=E.value.cloneNode(!0);if(d.appendChild(D),l.Guard.isElementNode(D)){var S=n(c.namespace_extractQName(D.prefix?D.prefix+":"+D.localName:D.localName),1)[0],C=d.lookupNamespaceURI(S);new e(D)._updateNamespace(C)}}}catch(e){a={error:e}}finally{try{E&&!E.done&&(s=w.return)&&s.call(w)}finally{if(a)throw a.error}}}},Object.defineProperty(e.prototype,"_doc",{get:function(){var e=this.node;if(l.Guard.isDocumentNode(e))return e;var t=e.ownerDocument;if(!t)throw new Error("Owner document is null. "+this._debugInfo());return t},enumerable:!0,configurable:!0}),e.prototype._debugInfo=function(e){var t=this.node,r=t.parentNode;e=e||t.nodeName;var n=r?r.nodeName:"";return n?"node: <"+e+">, parent: <"+n+">":"node: <"+e+">"},Object.defineProperty(e.prototype,"_options",{get:function(){var e=this._doc;if(void 0===e._xmlBuilderOptions)throw new Error("Builder options is not set.");return e._xmlBuilderOptions},set:function(e){this._doc._xmlBuilderOptions=e},enumerable:!0,configurable:!0}),e}();t.XMLBuilderImpl=d},function(e,t,r){var n=r(11),i=r(117),o=n.WeakMap;e.exports="function"==typeof o&&/native code/.test(i(o))},function(e,t,r){var n=r(46),i=r(82),o=r(85),a=r(18);e.exports=n("Reflect","ownKeys")||function(e){var t=i.f(a(e)),r=o.f;return r?t.concat(r(e)):t}},function(e,t,r){var n=r(16),i=r(15),o=r(18),a=r(61);e.exports=n?Object.defineProperties:function(e,t){o(e);for(var r,n=a(t),s=n.length,u=0;s>u;)i.f(e,r=n[u++],t[r]);return e}},function(e,t,r){var n=r(46);e.exports=n("document","documentElement")},function(e,t,r){var n=r(24),i=r(82).f,o={}.toString,a="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[];e.exports.f=function(e){return a&&"[object Window]"==o.call(e)?function(e){try{return i(e)}catch(e){return a.slice()}}(e):i(n(e))}},function(e,t,r){"use strict";var n=r(4),i=r(36).every,o=r(48),a=r(28),s=o("every"),u=a("every");n({target:"Array",proto:!0,forced:!s||!u},{every:function(e){return i(this,e,arguments.length>1?arguments[1]:void 0)}})},function(e,t,r){"use strict";var n=r(4),i=r(36).filter,o=r(63),a=r(28),s=o("filter"),u=a("filter");n({target:"Array",proto:!0,forced:!s||!u},{filter:function(e){return i(this,e,arguments.length>1?arguments[1]:void 0)}})},function(e,t,r){var n=r(46);e.exports=n("navigator","userAgent")||""},function(e,t,r){"use strict";var n=r(4),i=r(36).find,o=r(130),a=r(28),s=!0,u=a("find");"find"in[]&&Array(1).find((function(){s=!1})),n({target:"Array",proto:!0,forced:s||!u},{find:function(e){return i(this,e,arguments.length>1?arguments[1]:void 0)}}),o("find")},function(e,t,r){"use strict";var n=r(131).IteratorPrototype,i=r(60),o=r(40),a=r(62),s=r(49),u=function(){return this};e.exports=function(e,t,r){var l=t+" Iterator";return e.prototype=i(n,{next:o(1,r)}),a(e,l,!1,!0),s[l]=u,e}},function(e,t,r){var n=r(8);e.exports=!n((function(){function e(){}return e.prototype.constructor=null,Object.getPrototypeOf(new e)!==e.prototype}))},function(e,t,r){var n=r(13);e.exports=function(e){if(!n(e)&&null!==e)throw TypeError("Can't set "+String(e)+" as a prototype");return e}},function(e,t,r){"use strict";var n=r(4),i=r(36).map,o=r(63),a=r(28),s=o("map"),u=a("map");n({target:"Array",proto:!0,forced:!s||!u},{map:function(e){return i(this,e,arguments.length>1?arguments[1]:void 0)}})},function(e,t,r){"use strict";var n=r(4),i=r(200).left,o=r(48),a=r(28),s=o("reduce"),u=a("reduce",{1:0});n({target:"Array",proto:!0,forced:!s||!u},{reduce:function(e){return i(this,e,arguments.length,arguments.length>1?arguments[1]:void 0)}})},function(e,t,r){var n=r(127),i=r(27),o=r(41),a=r(26),s=function(e){return function(t,r,s,u){n(r);var l=i(t),c=o(l),h=a(l.length),p=e?h-1:0,f=e?-1:1;if(s<2)for(;;){if(p in c){u=c[p],p+=f;break}if(p+=f,e?p<0:h<=p)throw TypeError("Reduce of empty array with no initial value")}for(;e?p>=0:h>p;p+=f)p in c&&(u=r(u,c[p],p,l));return u}};e.exports={left:s(!1),right:s(!0)}},function(e,t,r){"use strict";var n=r(4),i=r(36).some,o=r(48),a=r(28),s=o("some"),u=a("some");n({target:"Array",proto:!0,forced:!s||!u},{some:function(e){return i(this,e,arguments.length>1?arguments[1]:void 0)}})},function(e,t,r){"use strict";var n=r(90),i=r(135);e.exports=n?{}.toString:function(){return"[object "+i(this)+"]"}},function(e,t){e.exports={CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0}},function(e,t,r){var n=r(8);e.exports=!n((function(){return Object.isExtensible(Object.preventExtensions({}))}))},function(e,t,r){var n=r(5),i=r(49),o=n("iterator"),a=Array.prototype;e.exports=function(e){return void 0!==e&&(i.Array===e||a[o]===e)}},function(e,t,r){var n=r(135),i=r(49),o=r(5)("iterator");e.exports=function(e){if(null!=e)return e[o]||e["@@iterator"]||i[n(e)]}},function(e,t,r){var n=r(18);e.exports=function(e,t,r,i){try{return i?t(n(r)[0],r[1]):t(r)}catch(t){var o=e.return;throw void 0!==o&&n(o.call(e)),t}}},function(e,t,r){var n=r(5)("iterator"),i=!1;try{var o=0,a={next:function(){return{done:!!o++}},return:function(){i=!0}};a[n]=function(){return this},Array.from(a,(function(){throw 2}))}catch(e){}e.exports=function(e,t){if(!t&&!i)return!1;var r=!1;try{var o={};o[n]=function(){return{next:function(){return{done:r=!0}}}},e(o)}catch(e){}return r}},function(e,t,r){var n=r(13),i=r(133);e.exports=function(e,t,r){var o,a;return i&&"function"==typeof(o=t.constructor)&&o!==r&&n(a=o.prototype)&&a!==r.prototype&&i(e,a),e}},function(e,t,r){var n=r(25);e.exports=function(e,t,r){for(var i in t)n(e,i,t[i],r);return e}},function(e,t,r){"use strict";var n=r(46),i=r(15),o=r(5),a=r(16),s=o("species");e.exports=function(e){var t=n(e),r=i.f;a&&t&&!t[s]&&r(t,s,{configurable:!0,get:function(){return this}})}},function(e,t,r){"use strict";var n=this&&this.__generator||function(e,t){var r,n,i,o,a={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return o={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function s(o){return function(s){return function(o){if(r)throw new TypeError("Generator is already executing.");for(;a;)try{if(r=1,n&&(i=2&o[0]?n.return:o[0]?n.throw||((i=n.return)&&i.call(n),0):n.next)&&!(i=i.call(n,o[1])).done)return i;switch(n=0,i&&(o=[2&o[0],i.value]),o[0]){case 0:case 1:i=o;break;case 4:return a.label++,{value:o[1],done:!1};case 5:a.label++,n=o[1],o=[0];continue;case 7:o=a.ops.pop(),a.trys.pop();continue;default:if(!(i=a.trys,(i=i.length>0&&i[i.length-1])||6!==o[0]&&2!==o[0])){a=0;continue}if(3===o[0]&&(!i||o[1]>i[0]&&o[1]<i[3])){a.label=o[1];break}if(6===o[0]&&a.label<i[1]){a.label=i[1],i=o;break}if(i&&a.label<i[2]){a.label=i[2],a.ops.push(o);break}i[2]&&a.ops.pop(),a.trys.pop();continue}o=t.call(e,a)}catch(e){o=[6,e],n=0}finally{r=i=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,s])}}},i=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,r=t&&e[t],n=0;if(r)return r.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(t,"__esModule",{value:!0});var o=function(){function e(e){void 0===e&&(e=1e3),this._items=new Set,this._limit=e}return e.prototype.add=function(e){if(this._items.add(e),this._items.size>this._limit){var t=this._items.values().next();t.done||this._items.delete(t.value)}return this},e.prototype.delete=function(e){return this._items.delete(e)},e.prototype.has=function(e){return this._items.has(e)},e.prototype.clear=function(){this._items.clear()},Object.defineProperty(e.prototype,"size",{get:function(){return this._items.size},enumerable:!0,configurable:!0}),e.prototype.forEach=function(e,t){var r=this;this._items.forEach((function(n){return e.call(t,n,n,r)}))},e.prototype.keys=function(){return n(this,(function(e){switch(e.label){case 0:return[5,i(this._items.keys())];case 1:return e.sent(),[2]}}))},e.prototype.values=function(){return n(this,(function(e){switch(e.label){case 0:return[5,i(this._items.values())];case 1:return e.sent(),[2]}}))},e.prototype.entries=function(){return n(this,(function(e){switch(e.label){case 0:return[5,i(this._items.entries())];case 1:return e.sent(),[2]}}))},e.prototype[Symbol.iterator]=function(){return n(this,(function(e){switch(e.label){case 0:return[5,i(this._items)];case 1:return e.sent(),[2]}}))},Object.defineProperty(e.prototype,Symbol.toStringTag,{get:function(){return"FixedSizeSet"},enumerable:!0,configurable:!0}),e}();t.FixedSizeSet=o},function(e,t,r){"use strict";var n=this&&this.__generator||function(e,t){var r,n,i,o,a={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return o={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function s(o){return function(s){return function(o){if(r)throw new TypeError("Generator is already executing.");for(;a;)try{if(r=1,n&&(i=2&o[0]?n.return:o[0]?n.throw||((i=n.return)&&i.call(n),0):n.next)&&!(i=i.call(n,o[1])).done)return i;switch(n=0,i&&(o=[2&o[0],i.value]),o[0]){case 0:case 1:i=o;break;case 4:return a.label++,{value:o[1],done:!1};case 5:a.label++,n=o[1],o=[0];continue;case 7:o=a.ops.pop(),a.trys.pop();continue;default:if(!(i=a.trys,(i=i.length>0&&i[i.length-1])||6!==o[0]&&2!==o[0])){a=0;continue}if(3===o[0]&&(!i||o[1]>i[0]&&o[1]<i[3])){a.label=o[1];break}if(6===o[0]&&a.label<i[1]){a.label=i[1],i=o;break}if(i&&a.label<i[2]){a.label=i[2],a.ops.push(o);break}i[2]&&a.ops.pop(),a.trys.pop();continue}o=t.call(e,a)}catch(e){o=[6,e],n=0}finally{r=i=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,s])}}},i=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,r=t&&e[t],n=0;if(r)return r.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(t,"__esModule",{value:!0});var o=function(){function e(e){void 0===e&&(e=1e3),this._items=new Map,this._limit=e}return e.prototype.get=function(e){return this._items.get(e)},e.prototype.set=function(e,t){if(this._items.set(e,t),this._items.size>this._limit){var r=this._items.keys().next();r.done||this._items.delete(r.value)}},e.prototype.delete=function(e){return this._items.delete(e)},e.prototype.has=function(e){return this._items.has(e)},e.prototype.clear=function(){this._items.clear()},Object.defineProperty(e.prototype,"size",{get:function(){return this._items.size},enumerable:!0,configurable:!0}),e.prototype.forEach=function(e,t){this._items.forEach((function(r,n){return e.call(t,n,r)}))},e.prototype.keys=function(){return n(this,(function(e){switch(e.label){case 0:return[5,i(this._items.keys())];case 1:return e.sent(),[2]}}))},e.prototype.values=function(){return n(this,(function(e){switch(e.label){case 0:return[5,i(this._items.values())];case 1:return e.sent(),[2]}}))},e.prototype.entries=function(){return n(this,(function(e){switch(e.label){case 0:return[5,i(this._items.entries())];case 1:return e.sent(),[2]}}))},e.prototype[Symbol.iterator]=function(){return n(this,(function(e){switch(e.label){case 0:return[5,i(this._items)];case 1:return e.sent(),[2]}}))},Object.defineProperty(e.prototype,Symbol.toStringTag,{get:function(){return"ObjectCache"},enumerable:!0,configurable:!0}),e}();t.ObjectCache=o},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(){function e(e){void 0===e&&(e=1e3),this._items=new Map,this._limit=e}return e.prototype.check=function(e,t){if(this._items.get(e)===t)return!0;if(this._items.get(t)===e)return!1;var r=Math.random()<.5;if(r?this._items.set(e,t):this._items.set(t,e),this._items.size>this._limit){var n=this._items.keys().next();n.done||this._items.delete(n.value)}return r},e}();t.CompareCache=n},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(){function e(e){this._initialized=!1,this._value=void 0,this._initFunc=e}return Object.defineProperty(e.prototype,"value",{get:function(){return this._initialized||(this._value=this._initFunc(),this._initialized=!0),this._value},enumerable:!0,configurable:!0}),e}();t.Lazy=n},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(){function e(e){this._pointer=0,this._chars=Array.from(e),this._length=this._chars.length}return Object.defineProperty(e.prototype,"eof",{get:function(){return this._pointer>=this._length},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"length",{get:function(){return this._length},enumerable:!0,configurable:!0}),e.prototype.codePoint=function(){if(void 0===this._codePoint)if(this.eof)this._codePoint=-1;else{var e=this._chars[this._pointer].codePointAt(0);this._codePoint=void 0!==e?e:-1}return this._codePoint},e.prototype.c=function(){return void 0===this._c&&(this._c=this.eof?"":this._chars[this._pointer]),this._c},e.prototype.remaining=function(){return void 0===this._remaining&&(this._remaining=this.eof?"":this._chars.slice(this._pointer+1).join("")),this._remaining},e.prototype.substring=function(){return void 0===this._substring&&(this._substring=this.eof?"":this._chars.slice(this._pointer).join("")),this._substring},Object.defineProperty(e.prototype,"pointer",{get:function(){return this._pointer},set:function(e){e!==this._pointer&&(this._pointer=e,this._codePoint=void 0,this._c=void 0,this._remaining=void 0,this._substring=void 0)},enumerable:!0,configurable:!0}),e}();t.StringWalker=n},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(218);t.MapWriter=n.MapWriter;var i=r(258);t.XMLWriter=i.XMLWriter;var o=r(67);t.ObjectWriter=o.ObjectWriter;var a=r(260);t.JSONWriter=a.JSONWriter;var s=r(261);t.YAMLWriter=s.YAMLWriter},function(e,t,r){"use strict";r(19),r(219),r(20),r(22),r(23);var n,i=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});Object.defineProperty(t,"__esModule",{value:!0});var o=r(1),a=r(67),s=function(e){function t(t,r){var n=e.call(this,t)||this;return n._writerOptions=o.applyDefaults(r,{format:"map",wellFormed:!1,group:!1,verbose:!1}),n}return i(t,e),t.prototype.serialize=function(e){var t=o.applyDefaults(this._writerOptions,{format:"object",wellFormed:!1,verbose:!1}),r=new a.ObjectWriter(this._builderOptions,t).serialize(e);return this._convertObject(r)},t.prototype._convertObject=function(e){if(o.isArray(e)){for(var t=0;t<e.length;t++)e[t]=this._convertObject(e[t]);return e}if(o.isObject(e)){var r=new Map;for(var n in e)r.set(n,this._convertObject(e[n]));return r}return e},t}(r(50).BaseWriter);t.MapWriter=s},function(e,t,r){"use strict";var n=r(139),i=r(143);e.exports=n("Map",(function(e){return function(){return e(this,arguments.length?arguments[0]:void 0)}}),i)},function(e,t,r){"use strict";var n=r(4),i=r(8),o=r(59),a=r(13),s=r(27),u=r(26),l=r(134),c=r(128),h=r(63),p=r(5),f=r(129),d=p("isConcatSpreadable"),m=f>=51||!i((function(){var e=[];return e[d]=!1,e.concat()[0]!==e})),y=h("concat"),v=function(e){if(!a(e))return!1;var t=e[d];return void 0!==t?!!t:o(e)};n({target:"Array",proto:!0,forced:!m||!y},{concat:function(e){var t,r,n,i,o,a=s(this),h=c(a,0),p=0;for(t=-1,n=arguments.length;t<n;t++)if(v(o=-1===t?a:arguments[t])){if(p+(i=u(o.length))>9007199254740991)throw TypeError("Maximum allowed index exceeded");for(r=0;r<i;r++,p++)r in o&&l(h,p,o[r])}else{if(p>=9007199254740991)throw TypeError("Maximum allowed index exceeded");l(h,p++,o)}return h.length=p,h}})},function(e,t,r){"use strict";var n=r(8);function i(e,t){return RegExp(e,t)}t.UNSUPPORTED_Y=n((function(){var e=i("a","y");return e.lastIndex=2,null!=e.exec("abcd")})),t.BROKEN_CARET=n((function(){var e=i("^r","gy");return e.lastIndex=2,null!=e.exec("str")}))},function(e,t,r){var n=r(223);e.exports=function(e){if(n(e))throw TypeError("The method doesn't accept regular expressions");return e}},function(e,t,r){var n=r(13),i=r(42),o=r(5)("match");e.exports=function(e){var t;return n(e)&&(void 0!==(t=e[o])?!!t:"RegExp"==i(e))}},function(e,t,r){var n=r(5)("match");e.exports=function(e){var t=/./;try{"/./"[e](t)}catch(r){try{return t[n]=!1,"/./"[e](t)}catch(e){}}return!1}},function(e,t,r){"use strict";r(68);var n=r(25),i=r(8),o=r(5),a=r(93),s=r(21),u=o("species"),l=!i((function(){var e=/./;return e.exec=function(){var e=[];return e.groups={a:"7"},e},"7"!=="".replace(e,"$<a>")})),c="$0"==="a".replace(/./,"$0"),h=o("replace"),p=!!/./[h]&&""===/./[h]("a","$0"),f=!i((function(){var e=/(?:)/,t=e.exec;e.exec=function(){return t.apply(this,arguments)};var r="ab".split(e);return 2!==r.length||"a"!==r[0]||"b"!==r[1]}));e.exports=function(e,t,r,h){var d=o(e),m=!i((function(){var t={};return t[d]=function(){return 7},7!=""[e](t)})),y=m&&!i((function(){var t=!1,r=/a/;return"split"===e&&((r={}).constructor={},r.constructor[u]=function(){return r},r.flags="",r[d]=/./[d]),r.exec=function(){return t=!0,null},r[d](""),!t}));if(!m||!y||"replace"===e&&(!l||!c||p)||"split"===e&&!f){var v=/./[d],_=r(d,""[e],(function(e,t,r,n,i){return t.exec===a?m&&!i?{done:!0,value:v.call(t,r,n)}:{done:!0,value:e.call(r,t,n)}:{done:!1}}),{REPLACE_KEEPS_$0:c,REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE:p}),g=_[0],b=_[1];n(String.prototype,e,g),n(RegExp.prototype,d,2==t?function(e,t){return b.call(e,this,t)}:function(e){return b.call(e,this)})}h&&s(RegExp.prototype[d],"sham",!0)}},function(e,t,r){"use strict";var n=r(137).charAt;e.exports=function(e,t,r){return t+(r?n(e,t).length:1)}},function(e,t,r){var n=r(42),i=r(93);e.exports=function(e,t){var r=e.exec;if("function"==typeof r){var o=r.call(e,t);if("object"!=typeof o)throw TypeError("RegExp exec method returned something other than an Object or null");return o}if("RegExp"!==n(e))throw TypeError("RegExp#exec called on incompatible receiver");return i.call(e,t)}},function(e,t,r){"use strict";(function(e){Object.defineProperty(t,"__esModule",{value:!0});var n=r(96);t.forgivingBase64Encode=function(t){return e.from(t).toString("base64")},t.forgivingBase64Decode=function(t){return""===t?"":((t=t.replace(n.ASCIIWhiteSpace,"")).length%4==0&&(t.endsWith("==")?t=t.substr(0,t.length-2):t.endsWith("=")&&(t=t.substr(0,t.length-1))),t.length%4==1?null:/[0-9A-Za-z+/]/.test(t)?e.from(t,"base64").toString("utf8"):null)}}).call(this,r(145).Buffer)},function(e,t,r){"use strict";t.byteLength=function(e){var t=l(e),r=t[0],n=t[1];return 3*(r+n)/4-n},t.toByteArray=function(e){var t,r,n=l(e),a=n[0],s=n[1],u=new o(function(e,t,r){return 3*(t+r)/4-r}(0,a,s)),c=0,h=s>0?a-4:a;for(r=0;r<h;r+=4)t=i[e.charCodeAt(r)]<<18|i[e.charCodeAt(r+1)]<<12|i[e.charCodeAt(r+2)]<<6|i[e.charCodeAt(r+3)],u[c++]=t>>16&255,u[c++]=t>>8&255,u[c++]=255&t;2===s&&(t=i[e.charCodeAt(r)]<<2|i[e.charCodeAt(r+1)]>>4,u[c++]=255&t);1===s&&(t=i[e.charCodeAt(r)]<<10|i[e.charCodeAt(r+1)]<<4|i[e.charCodeAt(r+2)]>>2,u[c++]=t>>8&255,u[c++]=255&t);return u},t.fromByteArray=function(e){for(var t,r=e.length,i=r%3,o=[],a=0,s=r-i;a<s;a+=16383)o.push(c(e,a,a+16383>s?s:a+16383));1===i?(t=e[r-1],o.push(n[t>>2]+n[t<<4&63]+"==")):2===i&&(t=(e[r-2]<<8)+e[r-1],o.push(n[t>>10]+n[t>>4&63]+n[t<<2&63]+"="));return o.join("")};for(var n=[],i=[],o="undefined"!=typeof Uint8Array?Uint8Array:Array,a="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",s=0,u=a.length;s<u;++s)n[s]=a[s],i[a.charCodeAt(s)]=s;function l(e){var t=e.length;if(t%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var r=e.indexOf("=");return-1===r&&(r=t),[r,r===t?0:4-r%4]}function c(e,t,r){for(var i,o,a=[],s=t;s<r;s+=3)i=(e[s]<<16&16711680)+(e[s+1]<<8&65280)+(255&e[s+2]),a.push(n[(o=i)>>18&63]+n[o>>12&63]+n[o>>6&63]+n[63&o]);return a.join("")}i["-".charCodeAt(0)]=62,i["_".charCodeAt(0)]=63},function(e,t){t.read=function(e,t,r,n,i){var o,a,s=8*i-n-1,u=(1<<s)-1,l=u>>1,c=-7,h=r?i-1:0,p=r?-1:1,f=e[t+h];for(h+=p,o=f&(1<<-c)-1,f>>=-c,c+=s;c>0;o=256*o+e[t+h],h+=p,c-=8);for(a=o&(1<<-c)-1,o>>=-c,c+=n;c>0;a=256*a+e[t+h],h+=p,c-=8);if(0===o)o=1-l;else{if(o===u)return a?NaN:1/0*(f?-1:1);a+=Math.pow(2,n),o-=l}return(f?-1:1)*a*Math.pow(2,o-n)},t.write=function(e,t,r,n,i,o){var a,s,u,l=8*o-i-1,c=(1<<l)-1,h=c>>1,p=23===i?Math.pow(2,-24)-Math.pow(2,-77):0,f=n?0:o-1,d=n?1:-1,m=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(s=isNaN(t)?1:0,a=c):(a=Math.floor(Math.log(t)/Math.LN2),t*(u=Math.pow(2,-a))<1&&(a--,u*=2),(t+=a+h>=1?p/u:p*Math.pow(2,1-h))*u>=2&&(a++,u/=2),a+h>=c?(s=0,a=c):a+h>=1?(s=(t*u-1)*Math.pow(2,i),a+=h):(s=t*Math.pow(2,h-1)*Math.pow(2,i),a=0));i>=8;e[r+f]=255&s,f+=d,s/=256,i-=8);for(a=a<<i|s,l+=i;l>0;e[r+f]=255&a,f+=d,a/=256,l-=8);e[r+f-d]|=128*m}},function(e,t){var r={}.toString;e.exports=Array.isArray||function(e){return"[object Array]"==r.call(e)}},function(e,t,r){"use strict";var n=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,r=t&&e[t],n=0;if(r)return r.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(t,"__esModule",{value:!0});var i=r(1);function o(e){var t,r;if(null===e||i.isString(e)||i.isNumber(e))return e;if(i.isArray(e)){var a=new Array;try{for(var s=n(e),u=s.next();!u.done;u=s.next()){var l=u.value;a.push(o(l))}}catch(e){t={error:e}}finally{try{u&&!u.done&&(r=s.return)&&r.call(s)}finally{if(t)throw t.error}}return a}if(i.isObject(e)){a=new Map;for(var c in e)if(e.hasOwnProperty(c)){var h=e[c];a.set(c,o(h))}return a}return e}t.parseJSONFromBytes=function(e){var t=i.utf8Decode(e);return JSON.parse.call(void 0,t)},t.serializeJSONToBytes=function(e){var t=JSON.stringify.call(void 0,e);return i.utf8Encode(t)},t.parseJSONIntoInfraValues=function(e){return o(JSON.parse.call(void 0,e))},t.convertAJSONDerivedJavaScriptValueToAnInfraValue=o},function(e,t,r){"use strict";var n=this&&this.__generator||function(e,t){var r,n,i,o,a={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return o={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function s(o){return function(s){return function(o){if(r)throw new TypeError("Generator is already executing.");for(;a;)try{if(r=1,n&&(i=2&o[0]?n.return:o[0]?n.throw||((i=n.return)&&i.call(n),0):n.next)&&!(i=i.call(n,o[1])).done)return i;switch(n=0,i&&(o=[2&o[0],i.value]),o[0]){case 0:case 1:i=o;break;case 4:return a.label++,{value:o[1],done:!1};case 5:a.label++,n=o[1],o=[0];continue;case 7:o=a.ops.pop(),a.trys.pop();continue;default:if(!(i=a.trys,(i=i.length>0&&i[i.length-1])||6!==o[0]&&2!==o[0])){a=0;continue}if(3===o[0]&&(!i||o[1]>i[0]&&o[1]<i[3])){a.label=o[1];break}if(6===o[0]&&a.label<i[1]){a.label=i[1],i=o;break}if(i&&a.label<i[2]){a.label=i[2],a.ops.push(o);break}i[2]&&a.ops.pop(),a.trys.pop();continue}o=t.call(e,a)}catch(e){o=[6,e],n=0}finally{r=i=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,s])}}},i=this&&this.__read||function(e,t){var r="function"==typeof Symbol&&e[Symbol.iterator];if(!r)return e;var n,i,o=r.call(e),a=[];try{for(;(void 0===t||t-- >0)&&!(n=o.next()).done;)a.push(n.value)}catch(e){i={error:e}}finally{try{n&&!n.done&&(r=o.return)&&r.call(o)}finally{if(i)throw i.error}}return a},o=this&&this.__spread||function(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(i(arguments[t]));return e},a=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,r=t&&e[t],n=0;if(r)return r.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(t,"__esModule",{value:!0});var s=r(1);t.append=function(e,t){e.push(t)},t.extend=function(e,t){e.push.apply(e,o(t))},t.prepend=function(e,t){e.unshift(t)},t.replace=function(e,t,r){var n,i,o=0;try{for(var u=a(e),l=u.next();!l.done;l=u.next()){var c=l.value;if(s.isFunction(t))t.call(null,c)&&(e[o]=r);else if(c===t)return void(e[o]=r);o++}}catch(e){n={error:e}}finally{try{l&&!l.done&&(i=u.return)&&i.call(u)}finally{if(n)throw n.error}}},t.insert=function(e,t,r){e.splice(r,0,t)},t.remove=function(e,t){for(var r=e.length;r--;){var n=e[r];if(s.isFunction(t))t.call(null,n)&&e.splice(r,1);else if(n===t)return void e.splice(r,1)}},t.empty=function(e){e.length=0},t.contains=function(e,t){var r,n;try{for(var i=a(e),o=i.next();!o.done;o=i.next()){var u=o.value;if(s.isFunction(t)){if(t.call(null,u))return!0}else if(u===t)return!0}}catch(e){r={error:e}}finally{try{o&&!o.done&&(n=i.return)&&n.call(i)}finally{if(r)throw r.error}}return!1},t.size=function(e,t){var r,n;if(void 0===t)return e.length;var i=0;try{for(var o=a(e),s=o.next();!s.done;s=o.next()){var u=s.value;t.call(null,u)&&i++}}catch(e){r={error:e}}finally{try{s&&!s.done&&(n=o.return)&&n.call(o)}finally{if(r)throw r.error}}return i},t.isEmpty=function(e){return 0===e.length},t.forEach=function(e,t){var r,i,o,s,u,l;return n(this,(function(n){switch(n.label){case 0:return void 0!==t?[3,2]:[5,a(e)];case 1:return n.sent(),[3,9];case 2:n.trys.push([2,7,8,9]),r=a(e),i=r.next(),n.label=3;case 3:return i.done?[3,6]:(o=i.value,t.call(null,o)?[4,o]:[3,5]);case 4:n.sent(),n.label=5;case 5:return i=r.next(),[3,3];case 6:return[3,9];case 7:return s=n.sent(),u={error:s},[3,9];case 8:try{i&&!i.done&&(l=r.return)&&l.call(r)}finally{if(u)throw u.error}return[7];case 9:return[2]}}))},t.clone=function(e){return new(Array.bind.apply(Array,o([void 0],e)))},t.sortInAscendingOrder=function(e,t){return e.sort((function(e,r){return t.call(null,e,r)?-1:1}))},t.sortInDescendingOrder=function(e,t){return e.sort((function(e,r){return t.call(null,e,r)?1:-1}))}},function(e,t,r){"use strict";var n=this&&this.__generator||function(e,t){var r,n,i,o,a={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return o={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function s(o){return function(s){return function(o){if(r)throw new TypeError("Generator is already executing.");for(;a;)try{if(r=1,n&&(i=2&o[0]?n.return:o[0]?n.throw||((i=n.return)&&i.call(n),0):n.next)&&!(i=i.call(n,o[1])).done)return i;switch(n=0,i&&(o=[2&o[0],i.value]),o[0]){case 0:case 1:i=o;break;case 4:return a.label++,{value:o[1],done:!1};case 5:a.label++,n=o[1],o=[0];continue;case 7:o=a.ops.pop(),a.trys.pop();continue;default:if(!(i=a.trys,(i=i.length>0&&i[i.length-1])||6!==o[0]&&2!==o[0])){a=0;continue}if(3===o[0]&&(!i||o[1]>i[0]&&o[1]<i[3])){a.label=o[1];break}if(6===o[0]&&a.label<i[1]){a.label=i[1],i=o;break}if(i&&a.label<i[2]){a.label=i[2],a.ops.push(o);break}i[2]&&a.ops.pop(),a.trys.pop();continue}o=t.call(e,a)}catch(e){o=[6,e],n=0}finally{r=i=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,s])}}},i=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,r=t&&e[t],n=0;if(r)return r.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")},o=this&&this.__read||function(e,t){var r="function"==typeof Symbol&&e[Symbol.iterator];if(!r)return e;var n,i,o=r.call(e),a=[];try{for(;(void 0===t||t-- >0)&&!(n=o.next()).done;)a.push(n.value)}catch(e){i={error:e}}finally{try{n&&!n.done&&(r=o.return)&&r.call(o)}finally{if(i)throw i.error}}return a},a=this&&this.__spread||function(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(o(arguments[t]));return e};Object.defineProperty(t,"__esModule",{value:!0});var s=r(1);t.get=function(e,t){return e.get(t)},t.set=function(e,t,r){e.set(t,r)},t.remove=function(e,t){var r,n,o,a;if(s.isFunction(t)){var u=[];try{for(var l=i(e),c=l.next();!c.done;c=l.next()){var h=c.value;t.call(null,h)&&u.push(h[0])}}catch(e){r={error:e}}finally{try{c&&!c.done&&(n=l.return)&&n.call(l)}finally{if(r)throw r.error}}try{for(var p=i(u),f=p.next();!f.done;f=p.next()){var d=f.value;e.delete(d)}}catch(e){o={error:e}}finally{try{f&&!f.done&&(a=p.return)&&a.call(p)}finally{if(o)throw o.error}}}else e.delete(t)},t.contains=function(e,t){var r,n;if(s.isFunction(t)){try{for(var o=i(e),a=o.next();!a.done;a=o.next()){var u=a.value;if(t.call(null,u))return!0}}catch(e){r={error:e}}finally{try{a&&!a.done&&(n=o.return)&&n.call(o)}finally{if(r)throw r.error}}return!1}return e.has(t)},t.keys=function(e){return new Set(e.keys())},t.values=function(e){return a(e.values())},t.size=function(e,t){var r,n;if(void 0===t)return e.size;var o=0;try{for(var a=i(e),s=a.next();!s.done;s=a.next()){var u=s.value;t.call(null,u)&&o++}}catch(e){r={error:e}}finally{try{s&&!s.done&&(n=a.return)&&n.call(a)}finally{if(r)throw r.error}}return o},t.isEmpty=function(e){return 0===e.size},t.forEach=function(e,t){var r,o,a,s,u,l;return n(this,(function(n){switch(n.label){case 0:return void 0!==t?[3,2]:[5,i(e)];case 1:return n.sent(),[3,9];case 2:n.trys.push([2,7,8,9]),r=i(e),o=r.next(),n.label=3;case 3:return o.done?[3,6]:(a=o.value,t.call(null,a)?[4,a]:[3,5]);case 4:n.sent(),n.label=5;case 5:return o=r.next(),[3,3];case 6:return[3,9];case 7:return s=n.sent(),u={error:s},[3,9];case 8:try{o&&!o.done&&(l=r.return)&&l.call(r)}finally{if(u)throw u.error}return[7];case 9:return[2]}}))},t.clone=function(e){return new Map(e)},t.sortInAscendingOrder=function(e,t){var r=new(Array.bind.apply(Array,a([void 0],e)));return r.sort((function(e,r){return t.call(null,e,r)?-1:1})),new Map(r)},t.sortInDescendingOrder=function(e,t){var r=new(Array.bind.apply(Array,a([void 0],e)));return r.sort((function(e,r){return t.call(null,e,r)?1:-1})),new Map(r)}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.HTML="http://www.w3.org/1999/xhtml",t.XML="http://www.w3.org/XML/1998/namespace",t.XMLNS="http://www.w3.org/2000/xmlns/",t.MathML="http://www.w3.org/1998/Math/MathML",t.SVG="http://www.w3.org/2000/svg",t.XLink="http://www.w3.org/1999/xlink"},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.enqueue=function(e,t){e.push(t)},t.dequeue=function(e){return e.shift()||null}},function(e,t,r){"use strict";var n=this&&this.__generator||function(e,t){var r,n,i,o,a={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return o={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function s(o){return function(s){return function(o){if(r)throw new TypeError("Generator is already executing.");for(;a;)try{if(r=1,n&&(i=2&o[0]?n.return:o[0]?n.throw||((i=n.return)&&i.call(n),0):n.next)&&!(i=i.call(n,o[1])).done)return i;switch(n=0,i&&(o=[2&o[0],i.value]),o[0]){case 0:case 1:i=o;break;case 4:return a.label++,{value:o[1],done:!1};case 5:a.label++,n=o[1],o=[0];continue;case 7:o=a.ops.pop(),a.trys.pop();continue;default:if(!(i=a.trys,(i=i.length>0&&i[i.length-1])||6!==o[0]&&2!==o[0])){a=0;continue}if(3===o[0]&&(!i||o[1]>i[0]&&o[1]<i[3])){a.label=o[1];break}if(6===o[0]&&a.label<i[1]){a.label=i[1],i=o;break}if(i&&a.label<i[2]){a.label=i[2],a.ops.push(o);break}i[2]&&a.ops.pop(),a.trys.pop();continue}o=t.call(e,a)}catch(e){o=[6,e],n=0}finally{r=i=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,s])}}},i=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,r=t&&e[t],n=0;if(r)return r.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")},o=this&&this.__read||function(e,t){var r="function"==typeof Symbol&&e[Symbol.iterator];if(!r)return e;var n,i,o=r.call(e),a=[];try{for(;(void 0===t||t-- >0)&&!(n=o.next()).done;)a.push(n.value)}catch(e){i={error:e}}finally{try{n&&!n.done&&(r=o.return)&&r.call(o)}finally{if(i)throw i.error}}return a},a=this&&this.__spread||function(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(o(arguments[t]));return e};Object.defineProperty(t,"__esModule",{value:!0});var s=r(1);function u(e,t){var r,n;try{for(var o=i(e),a=o.next();!a.done;a=o.next()){var s=a.value;if(!t.has(s))return!1}}catch(e){r={error:e}}finally{try{a&&!a.done&&(n=o.return)&&n.call(o)}finally{if(r)throw r.error}}return!0}t.append=function(e,t){e.add(t)},t.extend=function(e,t){t.forEach(e.add,e)},t.prepend=function(e,t){var r=new Set(e);e.clear(),e.add(t),r.forEach(e.add,e)},t.replace=function(e,t,r){var n,o,a=new Set;try{for(var u=i(e),l=u.next();!l.done;l=u.next()){var c=l.value;s.isFunction(t)?t.call(null,c)?a.add(r):a.add(c):c===t?a.add(r):a.add(c)}}catch(e){n={error:e}}finally{try{l&&!l.done&&(o=u.return)&&o.call(u)}finally{if(n)throw n.error}}e.clear(),a.forEach(e.add,e)},t.insert=function(e,t,r){var n,o,a=new Set,s=0;try{for(var u=i(e),l=u.next();!l.done;l=u.next()){var c=l.value;s===r&&a.add(t),a.add(c),s++}}catch(e){n={error:e}}finally{try{l&&!l.done&&(o=u.return)&&o.call(u)}finally{if(n)throw n.error}}e.clear(),a.forEach(e.add,e)},t.remove=function(e,t){var r,n,o,a;if(s.isFunction(t)){var u=[];try{for(var l=i(e),c=l.next();!c.done;c=l.next()){var h=c.value;t.call(null,h)&&u.push(h)}}catch(e){r={error:e}}finally{try{c&&!c.done&&(n=l.return)&&n.call(l)}finally{if(r)throw r.error}}try{for(var p=i(u),f=p.next();!f.done;f=p.next()){var d=f.value;e.delete(d)}}catch(e){o={error:e}}finally{try{f&&!f.done&&(a=p.return)&&a.call(p)}finally{if(o)throw o.error}}}else e.delete(t)},t.empty=function(e){e.clear()},t.contains=function(e,t){var r,n;if(!s.isFunction(t))return e.has(t);try{for(var o=i(e),a=o.next();!a.done;a=o.next()){var u=a.value;if(t.call(null,u))return!0}}catch(e){r={error:e}}finally{try{a&&!a.done&&(n=o.return)&&n.call(o)}finally{if(r)throw r.error}}return!1},t.size=function(e,t){var r,n;if(void 0===t)return e.size;var o=0;try{for(var a=i(e),s=a.next();!s.done;s=a.next()){var u=s.value;t.call(null,u)&&o++}}catch(e){r={error:e}}finally{try{s&&!s.done&&(n=a.return)&&n.call(a)}finally{if(r)throw r.error}}return o},t.isEmpty=function(e){return 0===e.size},t.forEach=function(e,t){var r,o,a,s,u,l;return n(this,(function(n){switch(n.label){case 0:return void 0!==t?[3,2]:[5,i(e)];case 1:return n.sent(),[3,9];case 2:n.trys.push([2,7,8,9]),r=i(e),o=r.next(),n.label=3;case 3:return o.done?[3,6]:(a=o.value,t.call(null,a)?[4,a]:[3,5]);case 4:n.sent(),n.label=5;case 5:return o=r.next(),[3,3];case 6:return[3,9];case 7:return s=n.sent(),u={error:s},[3,9];case 8:try{o&&!o.done&&(l=r.return)&&l.call(r)}finally{if(u)throw u.error}return[7];case 9:return[2]}}))},t.clone=function(e){return new Set(e)},t.sortInAscendingOrder=function(e,t){var r=new(Array.bind.apply(Array,a([void 0],e)));return r.sort((function(e,r){return t.call(null,e,r)?-1:1})),new Set(r)},t.sortInDescendingOrder=function(e,t){var r=new(Array.bind.apply(Array,a([void 0],e)));return r.sort((function(e,r){return t.call(null,e,r)?1:-1})),new Set(r)},t.isSubsetOf=u,t.isSupersetOf=function(e,t){return u(t,e)},t.intersection=function(e,t){var r,n,o=new Set;try{for(var a=i(e),s=a.next();!s.done;s=a.next()){var u=s.value;t.has(u)&&o.add(u)}}catch(e){r={error:e}}finally{try{s&&!s.done&&(n=a.return)&&n.call(a)}finally{if(r)throw r.error}}return o},t.union=function(e,t){var r=new Set(e);return t.forEach(r.add,r),r},t.range=function(e,t){for(var r=new Set,n=e;n<=t;n++)r.add(n);return r}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.push=function(e,t){e.push(t)},t.pop=function(e){return e.pop()||null}},function(e,t,r){"use strict";var n=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,r=t&&e[t],n=0;if(r)return r.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(t,"__esModule",{value:!0});var i=r(96),o=r(147),a=r(146),s=r(1);function u(e,t){for(var r=0;;){var n=r<e.length?e.charCodeAt(r):null,i=r<t.length?t.charCodeAt(r):null;if(null===n)return!0;if(n!==i)return!1;r++}}function l(e){var t,r,i=Array.from(e),o=new Uint8Array(i.length),a=0;try{for(var s=n(e),u=s.next();!u.done;u=s.next()){var l=u.value.codePointAt(0);console.assert(void 0!==l&&l<=255,"isomorphicEncode requires string bytes to be less than or equal to 0x00FF."),void 0!==l&&l<=255&&(o[a++]=l)}}catch(e){t={error:e}}finally{try{u&&!u.done&&(r=s.return)&&r.call(s)}finally{if(t)throw t.error}}return o}function c(e){return/^[\u0000-\u007F]*$/.test(e)}function h(e){var t,r,i="";try{for(var o=n(e),a=o.next();!a.done;a=o.next()){var s=a.value,u=s.codePointAt(0);i+=void 0!==u&&u>=65&&u<=90?String.fromCodePoint(u+32):s}}catch(e){t={error:e}}finally{try{a&&!a.done&&(r=o.return)&&r.call(o)}finally{if(t)throw t.error}}return i}function p(e){return e.replace(/^[\t\n\f\r ]+/,"").replace(/[\t\n\f\r ]+$/,"")}function f(e,t,r){if(!s.isArray(t))return f(e,Array.from(t),r);for(var n="";r.position<t.length&&e.call(null,t[r.position]);)n+=t[r.position],r.position++;return n}function d(e,t){f((function(e){return i.ASCIIWhiteSpace.test(e)}),e,t)}t.isCodeUnitPrefix=u,t.isCodeUnitLessThan=function(e,t){if(u(t,e))return!1;if(u(e,t))return!0;for(var r=0;r<Math.min(e.length,t.length);r++){var n=e.charCodeAt(r),i=t.charCodeAt(r);if(n!==i)return n<i}return!1},t.isomorphicEncode=l,t.isASCIIString=c,t.asciiLowercase=h,t.asciiUppercase=function(e){var t,r,i="";try{for(var o=n(e),a=o.next();!a.done;a=o.next()){var s=a.value,u=s.codePointAt(0);i+=void 0!==u&&u>=97&&u<=122?String.fromCodePoint(u-32):s}}catch(e){t={error:e}}finally{try{a&&!a.done&&(r=o.return)&&r.call(o)}finally{if(t)throw t.error}}return i},t.asciiCaseInsensitiveMatch=function(e,t){return h(e)===h(t)},t.asciiEncode=function(e){return console.assert(c(e),"asciiEncode requires an ASCII string."),l(e)},t.asciiDecode=function(e){var t,r;try{for(var i=n(e),s=i.next();!s.done;s=i.next()){var u=s.value;console.assert(a.isASCIIByte(u),"asciiDecode requires an ASCII byte sequence.")}}catch(e){t={error:e}}finally{try{s&&!s.done&&(r=i.return)&&r.call(i)}finally{if(t)throw t.error}}return o.isomorphicDecode(e)},t.stripNewlines=function(e){return e.replace(/[\n\r]/g,"")},t.normalizeNewlines=function(e){return e.replace(/\r\n/g,"\n").replace(/\r/g,"\n")},t.stripLeadingAndTrailingASCIIWhitespace=p,t.stripAndCollapseASCIIWhitespace=function(e){return p(e.replace(/[\t\n\f\r ]{2,}/g," "))},t.collectASequenceOfCodePoints=f,t.skipASCIIWhitespace=d,t.strictlySplit=function e(t,r){if(!s.isArray(t))return e(Array.from(t),r);var n={position:0},i=[],o=f((function(e){return r!==e}),t,n);for(i.push(o);n.position<t.length;)console.assert(t[n.position]===r,"strictlySplit found no delimiter in input string."),n.position++,o=f((function(e){return r!==e}),t,n),i.push(o);return i},t.splitAStringOnASCIIWhitespace=function e(t){if(!s.isArray(t))return e(Array.from(t));var r={position:0},n=[];for(d(t,r);r.position<t.length;){var o=f((function(e){return!i.ASCIIWhiteSpace.test(e)}),t,r);n.push(o),d(t,r)}return n},t.splitAStringOnCommas=function e(t){if(!s.isArray(t))return e(Array.from(t));for(var r={position:0},n=[];r.position<t.length;){var i=f((function(e){return","!==e}),t,r);n.push(p(i)),r.position<t.length&&(console.assert(","===t[r.position],"splitAStringOnCommas found no delimiter in input string."),r.position++)}return n},t.concatenate=function(e,t){return void 0===t&&(t=""),0===e.length?"":e.join(t)}},function(e,t,r){"use strict";var n=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,r=t&&e[t],n=0;if(r)return r.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(t,"__esModule",{value:!0});var i=r(97);t.abort_add=function(e,t){t._abortedFlag||t._abortAlgorithms.add(e)},t.abort_remove=function(e,t){t._abortAlgorithms.delete(e)},t.abort_signalAbort=function(e){var t,r;if(!e._abortedFlag){e._abortedFlag=!0;try{for(var o=n(e._abortAlgorithms),a=o.next();!a.done;a=o.next()){a.value.call(e)}}catch(e){t={error:e}}finally{try{a&&!a.done&&(r=o.return)&&r.call(o)}finally{if(t)throw t.error}}e._abortAlgorithms.clear(),i.event_fireAnEvent("abort",e)}}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(150),i=function(){function e(){}return e.asNode=function(e){if(n.Guard.isNode(e))return e;throw new Error("Invalid object. Node expected.")},e}();t.Cast=i},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(){function e(){}return Object.defineProperty(e.prototype,"size",{get:function(){return 0},enumerable:!0,configurable:!0}),e.prototype.add=function(e){throw new Error("Cannot add to an empty set.")},e.prototype.clear=function(){},e.prototype.delete=function(e){return!1},e.prototype.forEach=function(e,t){},e.prototype.has=function(e){return!1},e.prototype[Symbol.iterator]=function(){return new i},e.prototype.entries=function(){return new i},e.prototype.keys=function(){return new i},e.prototype.values=function(){return new i},Object.defineProperty(e.prototype,Symbol.toStringTag,{get:function(){return"EmptySet"},enumerable:!0,configurable:!0}),e}();t.EmptySet=n;var i=function(){function e(){}return e.prototype[Symbol.iterator]=function(){return this},e.prototype.next=function(){return{done:!0,value:null}},e}()},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),function(e){e[e.SchemeStart=0]="SchemeStart",e[e.Scheme=1]="Scheme",e[e.NoScheme=2]="NoScheme",e[e.SpecialRelativeOrAuthority=3]="SpecialRelativeOrAuthority",e[e.PathOrAuthority=4]="PathOrAuthority",e[e.Relative=5]="Relative",e[e.RelativeSlash=6]="RelativeSlash",e[e.SpecialAuthoritySlashes=7]="SpecialAuthoritySlashes",e[e.SpecialAuthorityIgnoreSlashes=8]="SpecialAuthorityIgnoreSlashes",e[e.Authority=9]="Authority",e[e.Host=10]="Host",e[e.Hostname=11]="Hostname",e[e.Port=12]="Port",e[e.File=13]="File",e[e.FileSlash=14]="FileSlash",e[e.FileHost=15]="FileHost",e[e.PathStart=16]="PathStart",e[e.Path=17]="Path",e[e.CannotBeABaseURLPath=18]="CannotBeABaseURLPath",e[e.Query=19]="Query",e[e.Fragment=20]="Fragment"}(t.ParserState||(t.ParserState={})),t.OpaqueOrigin=["","",null,null]},function(e,t,r){"use strict";var n=r(245),i=r(247);function o(){this.protocol=null,this.slashes=null,this.auth=null,this.host=null,this.port=null,this.hostname=null,this.hash=null,this.search=null,this.query=null,this.pathname=null,this.path=null,this.href=null}t.parse=g,t.resolve=function(e,t){return g(e,!1,!0).resolve(t)},t.resolveObject=function(e,t){return e?g(e,!1,!0).resolveObject(t):t},t.format=function(e){i.isString(e)&&(e=g(e));return e instanceof o?e.format():o.prototype.format.call(e)},t.Url=o;var a=/^([a-z0-9.+-]+:)/i,s=/:[0-9]*$/,u=/^(\/\/?(?!\/)[^\?\s]*)(\?[^\s]*)?$/,l=["{","}","|","\\","^","`"].concat(["<",">",'"',"`"," ","\r","\n","\t"]),c=["'"].concat(l),h=["%","/","?",";","#"].concat(c),p=["/","?","#"],f=/^[+a-z0-9A-Z_-]{0,63}$/,d=/^([+a-z0-9A-Z_-]{0,63})(.*)$/,m={javascript:!0,"javascript:":!0},y={javascript:!0,"javascript:":!0},v={http:!0,https:!0,ftp:!0,gopher:!0,file:!0,"http:":!0,"https:":!0,"ftp:":!0,"gopher:":!0,"file:":!0},_=r(248);function g(e,t,r){if(e&&i.isObject(e)&&e instanceof o)return e;var n=new o;return n.parse(e,t,r),n}o.prototype.parse=function(e,t,r){if(!i.isString(e))throw new TypeError("Parameter 'url' must be a string, not "+typeof e);var o=e.indexOf("?"),s=-1!==o&&o<e.indexOf("#")?"?":"#",l=e.split(s);l[0]=l[0].replace(/\\/g,"/");var g=e=l.join(s);if(g=g.trim(),!r&&1===e.split("#").length){var b=u.exec(g);if(b)return this.path=g,this.href=g,this.pathname=b[1],b[2]?(this.search=b[2],this.query=t?_.parse(this.search.substr(1)):this.search.substr(1)):t&&(this.search="",this.query={}),this}var x=a.exec(g);if(x){var w=(x=x[0]).toLowerCase();this.protocol=w,g=g.substr(x.length)}if(r||x||g.match(/^\/\/[^@\/]+@[^@\/]+/)){var E="//"===g.substr(0,2);!E||x&&y[x]||(g=g.substr(2),this.slashes=!0)}if(!y[x]&&(E||x&&!v[x])){for(var D,S,C=-1,A=0;A<p.length;A++){-1!==(N=g.indexOf(p[A]))&&(-1===C||N<C)&&(C=N)}-1!==(S=-1===C?g.lastIndexOf("@"):g.lastIndexOf("@",C))&&(D=g.slice(0,S),g=g.slice(S+1),this.auth=decodeURIComponent(D)),C=-1;for(A=0;A<h.length;A++){var N;-1!==(N=g.indexOf(h[A]))&&(-1===C||N<C)&&(C=N)}-1===C&&(C=g.length),this.host=g.slice(0,C),g=g.slice(C),this.parseHost(),this.hostname=this.hostname||"";var T="["===this.hostname[0]&&"]"===this.hostname[this.hostname.length-1];if(!T)for(var O=this.hostname.split(/\./),F=(A=0,O.length);A<F;A++){var k=O[A];if(k&&!k.match(f)){for(var P="",I=0,L=k.length;I<L;I++)k.charCodeAt(I)>127?P+="x":P+=k[I];if(!P.match(f)){var M=O.slice(0,A),B=O.slice(A+1),j=k.match(d);j&&(M.push(j[1]),B.unshift(j[2])),B.length&&(g="/"+B.join(".")+g),this.hostname=M.join(".");break}}}this.hostname.length>255?this.hostname="":this.hostname=this.hostname.toLowerCase(),T||(this.hostname=n.toASCII(this.hostname));var R=this.port?":"+this.port:"",z=this.hostname||"";this.host=z+R,this.href+=this.host,T&&(this.hostname=this.hostname.substr(1,this.hostname.length-2),"/"!==g[0]&&(g="/"+g))}if(!m[w])for(A=0,F=c.length;A<F;A++){var U=c[A];if(-1!==g.indexOf(U)){var G=encodeURIComponent(U);G===U&&(G=escape(U)),g=g.split(U).join(G)}}var X=g.indexOf("#");-1!==X&&(this.hash=g.substr(X),g=g.slice(0,X));var q=g.indexOf("?");if(-1!==q?(this.search=g.substr(q),this.query=g.substr(q+1),t&&(this.query=_.parse(this.query)),g=g.slice(0,q)):t&&(this.search="",this.query={}),g&&(this.pathname=g),v[w]&&this.hostname&&!this.pathname&&(this.pathname="/"),this.pathname||this.search){R=this.pathname||"";var W=this.search||"";this.path=R+W}return this.href=this.format(),this},o.prototype.format=function(){var e=this.auth||"";e&&(e=(e=encodeURIComponent(e)).replace(/%3A/i,":"),e+="@");var t=this.protocol||"",r=this.pathname||"",n=this.hash||"",o=!1,a="";this.host?o=e+this.host:this.hostname&&(o=e+(-1===this.hostname.indexOf(":")?this.hostname:"["+this.hostname+"]"),this.port&&(o+=":"+this.port)),this.query&&i.isObject(this.query)&&Object.keys(this.query).length&&(a=_.stringify(this.query));var s=this.search||a&&"?"+a||"";return t&&":"!==t.substr(-1)&&(t+=":"),this.slashes||(!t||v[t])&&!1!==o?(o="//"+(o||""),r&&"/"!==r.charAt(0)&&(r="/"+r)):o||(o=""),n&&"#"!==n.charAt(0)&&(n="#"+n),s&&"?"!==s.charAt(0)&&(s="?"+s),t+o+(r=r.replace(/[?#]/g,(function(e){return encodeURIComponent(e)})))+(s=s.replace("#","%23"))+n},o.prototype.resolve=function(e){return this.resolveObject(g(e,!1,!0)).format()},o.prototype.resolveObject=function(e){if(i.isString(e)){var t=new o;t.parse(e,!1,!0),e=t}for(var r=new o,n=Object.keys(this),a=0;a<n.length;a++){var s=n[a];r[s]=this[s]}if(r.hash=e.hash,""===e.href)return r.href=r.format(),r;if(e.slashes&&!e.protocol){for(var u=Object.keys(e),l=0;l<u.length;l++){var c=u[l];"protocol"!==c&&(r[c]=e[c])}return v[r.protocol]&&r.hostname&&!r.pathname&&(r.path=r.pathname="/"),r.href=r.format(),r}if(e.protocol&&e.protocol!==r.protocol){if(!v[e.protocol]){for(var h=Object.keys(e),p=0;p<h.length;p++){var f=h[p];r[f]=e[f]}return r.href=r.format(),r}if(r.protocol=e.protocol,e.host||y[e.protocol])r.pathname=e.pathname;else{for(var d=(e.pathname||"").split("/");d.length&&!(e.host=d.shift()););e.host||(e.host=""),e.hostname||(e.hostname=""),""!==d[0]&&d.unshift(""),d.length<2&&d.unshift(""),r.pathname=d.join("/")}if(r.search=e.search,r.query=e.query,r.host=e.host||"",r.auth=e.auth,r.hostname=e.hostname||e.host,r.port=e.port,r.pathname||r.search){var m=r.pathname||"",_=r.search||"";r.path=m+_}return r.slashes=r.slashes||e.slashes,r.href=r.format(),r}var g=r.pathname&&"/"===r.pathname.charAt(0),b=e.host||e.pathname&&"/"===e.pathname.charAt(0),x=b||g||r.host&&e.pathname,w=x,E=r.pathname&&r.pathname.split("/")||[],D=(d=e.pathname&&e.pathname.split("/")||[],r.protocol&&!v[r.protocol]);if(D&&(r.hostname="",r.port=null,r.host&&(""===E[0]?E[0]=r.host:E.unshift(r.host)),r.host="",e.protocol&&(e.hostname=null,e.port=null,e.host&&(""===d[0]?d[0]=e.host:d.unshift(e.host)),e.host=null),x=x&&(""===d[0]||""===E[0])),b)r.host=e.host||""===e.host?e.host:r.host,r.hostname=e.hostname||""===e.hostname?e.hostname:r.hostname,r.search=e.search,r.query=e.query,E=d;else if(d.length)E||(E=[]),E.pop(),E=E.concat(d),r.search=e.search,r.query=e.query;else if(!i.isNullOrUndefined(e.search)){if(D)r.hostname=r.host=E.shift(),(T=!!(r.host&&r.host.indexOf("@")>0)&&r.host.split("@"))&&(r.auth=T.shift(),r.host=r.hostname=T.shift());return r.search=e.search,r.query=e.query,i.isNull(r.pathname)&&i.isNull(r.search)||(r.path=(r.pathname?r.pathname:"")+(r.search?r.search:"")),r.href=r.format(),r}if(!E.length)return r.pathname=null,r.search?r.path="/"+r.search:r.path=null,r.href=r.format(),r;for(var S=E.slice(-1)[0],C=(r.host||e.host||E.length>1)&&("."===S||".."===S)||""===S,A=0,N=E.length;N>=0;N--)"."===(S=E[N])?E.splice(N,1):".."===S?(E.splice(N,1),A++):A&&(E.splice(N,1),A--);if(!x&&!w)for(;A--;A)E.unshift("..");!x||""===E[0]||E[0]&&"/"===E[0].charAt(0)||E.unshift(""),C&&"/"!==E.join("/").substr(-1)&&E.push("");var T,O=""===E[0]||E[0]&&"/"===E[0].charAt(0);D&&(r.hostname=r.host=O?"":E.length?E.shift():"",(T=!!(r.host&&r.host.indexOf("@")>0)&&r.host.split("@"))&&(r.auth=T.shift(),r.host=r.hostname=T.shift()));return(x=x||r.host&&E.length)&&!O&&E.unshift(""),E.length?r.pathname=E.join("/"):(r.pathname=null,r.path=null),i.isNull(r.pathname)&&i.isNull(r.search)||(r.path=(r.pathname?r.pathname:"")+(r.search?r.search:"")),r.auth=e.auth||r.auth,r.slashes=r.slashes||e.slashes,r.href=r.format(),r},o.prototype.parseHost=function(){var e=this.host,t=s.exec(e);t&&(":"!==(t=t[0])&&(this.port=t.substr(1)),e=e.substr(0,e.length-t.length)),e&&(this.hostname=e)}},function(e,t,r){(function(e,n){var i;/*! https://mths.be/punycode v1.4.1 by @mathias */!function(o){t&&t.nodeType,e&&e.nodeType;var a="object"==typeof n&&n;a.global!==a&&a.window!==a&&a.self;var s,u=2147483647,l=/^xn--/,c=/[^\x20-\x7E]/,h=/[\x2E\u3002\uFF0E\uFF61]/g,p={overflow:"Overflow: input needs wider integers to process","not-basic":"Illegal input >= 0x80 (not a basic code point)","invalid-input":"Invalid input"},f=Math.floor,d=String.fromCharCode;function m(e){throw new RangeError(p[e])}function y(e,t){for(var r=e.length,n=[];r--;)n[r]=t(e[r]);return n}function v(e,t){var r=e.split("@"),n="";return r.length>1&&(n=r[0]+"@",e=r[1]),n+y((e=e.replace(h,".")).split("."),t).join(".")}function _(e){for(var t,r,n=[],i=0,o=e.length;i<o;)(t=e.charCodeAt(i++))>=55296&&t<=56319&&i<o?56320==(64512&(r=e.charCodeAt(i++)))?n.push(((1023&t)<<10)+(1023&r)+65536):(n.push(t),i--):n.push(t);return n}function g(e){return y(e,(function(e){var t="";return e>65535&&(t+=d((e-=65536)>>>10&1023|55296),e=56320|1023&e),t+=d(e)})).join("")}function b(e,t){return e+22+75*(e<26)-((0!=t)<<5)}function x(e,t,r){var n=0;for(e=r?f(e/700):e>>1,e+=f(e/t);e>455;n+=36)e=f(e/35);return f(n+36*e/(e+38))}function w(e){var t,r,n,i,o,a,s,l,c,h,p,d=[],y=e.length,v=0,_=128,b=72;for((r=e.lastIndexOf("-"))<0&&(r=0),n=0;n<r;++n)e.charCodeAt(n)>=128&&m("not-basic"),d.push(e.charCodeAt(n));for(i=r>0?r+1:0;i<y;){for(o=v,a=1,s=36;i>=y&&m("invalid-input"),((l=(p=e.charCodeAt(i++))-48<10?p-22:p-65<26?p-65:p-97<26?p-97:36)>=36||l>f((u-v)/a))&&m("overflow"),v+=l*a,!(l<(c=s<=b?1:s>=b+26?26:s-b));s+=36)a>f(u/(h=36-c))&&m("overflow"),a*=h;b=x(v-o,t=d.length+1,0==o),f(v/t)>u-_&&m("overflow"),_+=f(v/t),v%=t,d.splice(v++,0,_)}return g(d)}function E(e){var t,r,n,i,o,a,s,l,c,h,p,y,v,g,w,E=[];for(y=(e=_(e)).length,t=128,r=0,o=72,a=0;a<y;++a)(p=e[a])<128&&E.push(d(p));for(n=i=E.length,i&&E.push("-");n<y;){for(s=u,a=0;a<y;++a)(p=e[a])>=t&&p<s&&(s=p);for(s-t>f((u-r)/(v=n+1))&&m("overflow"),r+=(s-t)*v,t=s,a=0;a<y;++a)if((p=e[a])<t&&++r>u&&m("overflow"),p==t){for(l=r,c=36;!(l<(h=c<=o?1:c>=o+26?26:c-o));c+=36)w=l-h,g=36-h,E.push(d(b(h+w%g,0))),l=f(w/g);E.push(d(b(l,0))),o=x(r,v,n==i),r=0,++n}++r,++t}return E.join("")}s={version:"1.4.1",ucs2:{decode:_,encode:g},decode:w,encode:E,toASCII:function(e){return v(e,(function(e){return c.test(e)?"xn--"+E(e):e}))},toUnicode:function(e){return v(e,(function(e){return l.test(e)?w(e.slice(4).toLowerCase()):e}))}},void 0===(i=function(){return s}.call(t,r,t,e))||(e.exports=i)}()}).call(this,r(246)(e),r(78))},function(e,t){e.exports=function(e){return e.webpackPolyfill||(e.deprecate=function(){},e.paths=[],e.children||(e.children=[]),Object.defineProperty(e,"loaded",{enumerable:!0,get:function(){return e.l}}),Object.defineProperty(e,"id",{enumerable:!0,get:function(){return e.i}}),e.webpackPolyfill=1),e}},function(e,t,r){"use strict";e.exports={isString:function(e){return"string"==typeof e},isObject:function(e){return"object"==typeof e&&null!==e},isNull:function(e){return null===e},isNullOrUndefined:function(e){return null==e}}},function(e,t,r){"use strict";t.decode=t.parse=r(249),t.encode=t.stringify=r(250)},function(e,t,r){"use strict";function n(e,t){return Object.prototype.hasOwnProperty.call(e,t)}e.exports=function(e,t,r,o){t=t||"&",r=r||"=";var a={};if("string"!=typeof e||0===e.length)return a;var s=/\+/g;e=e.split(t);var u=1e3;o&&"number"==typeof o.maxKeys&&(u=o.maxKeys);var l=e.length;u>0&&l>u&&(l=u);for(var c=0;c<l;++c){var h,p,f,d,m=e[c].replace(s,"%20"),y=m.indexOf(r);y>=0?(h=m.substr(0,y),p=m.substr(y+1)):(h=m,p=""),f=decodeURIComponent(h),d=decodeURIComponent(p),n(a,f)?i(a[f])?a[f].push(d):a[f]=[a[f],d]:a[f]=d}return a};var i=Array.isArray||function(e){return"[object Array]"===Object.prototype.toString.call(e)}},function(e,t,r){"use strict";var n=function(e){switch(typeof e){case"string":return e;case"boolean":return e?"true":"false";case"number":return isFinite(e)?e:"";default:return""}};e.exports=function(e,t,r,s){return t=t||"&",r=r||"=",null===e&&(e=void 0),"object"==typeof e?o(a(e),(function(a){var s=encodeURIComponent(n(a))+r;return i(e[a])?o(e[a],(function(e){return s+encodeURIComponent(n(e))})).join(t):s+encodeURIComponent(n(e[a]))})).join(t):s?encodeURIComponent(n(s))+r+encodeURIComponent(n(e)):""};var i=Array.isArray||function(e){return"[object Array]"===Object.prototype.toString.call(e)};function o(e,t){if(e.map)return e.map(t);for(var r=[],n=0;n<e.length;n++)r.push(t(e[n],n));return r}var a=Object.keys||function(e){var t=[];for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.push(r);return t}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(52);t.attr_setAnExistingAttributeValue=function(e,t){null===e._element?e._value=t:n.element_change(e,e._element,t)}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(108),i=r(30),o=r(52);t.tokenList_validationSteps=function(e,t){if(!i.dom_hasSupportedTokens(e._attribute._localName))throw new TypeError("There are no supported tokens defined for attribute name: '"+e._attribute._localName+"'.");return i.dom_getSupportedTokens(e._attribute._localName).has(t.toLowerCase())},t.tokenList_updateSteps=function(e){(e._element.hasAttribute(e._attribute._localName)||0!==e._tokenSet.size)&&o.element_setAnAttributeValue(e._element,e._attribute._localName,n.orderedSet_serialize(e._tokenSet))},t.tokenList_serializeSteps=function(e){return o.element_getAnAttributeValue(e._element,e._attribute._localName)}},function(e,t,r){"use strict";var n=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,r=t&&e[t],n=0;if(r)return r.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(t,"__esModule",{value:!0});var i=r(1);function o(e){return i.isBoolean(e)?e:e.capture||!1}t.eventTarget_flatten=o,t.eventTarget_flattenMore=function(e){var t=o(e),r=!1,n=!1;return i.isBoolean(e)||(r=e.once||!1,n=e.passive||!1),[t,n,r]},t.eventTarget_addEventListener=function(e,t){if(null!==t.callback){for(var r=0;r<e._eventListenerList.length;r++){var n=e._eventListenerList[r];if(n.type===t.type&&n.callback.handleEvent===t.callback.handleEvent&&n.capture===t.capture)return}e._eventListenerList.push(t)}},t.eventTarget_removeEventListener=function(e,t,r){t.removed=!0,e._eventListenerList.splice(r,1)},t.eventTarget_removeAllEventListeners=function(e){var t,r;try{for(var i=n(e._eventListenerList),o=i.next();!o.done;o=i.next()){o.value.removed=!0}}catch(e){t={error:e}}finally{try{o&&!o.done&&(r=i.return)&&r.call(i)}finally{if(t)throw t.error}}e._eventListenerList.length=0}},function(e,t,r){"use strict";var n=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,r=t&&e[t],n=0;if(r)return r.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(t,"__esModule",{value:!0});var i=r(1),o=r(29);t.parentNode_convertNodesIntoANode=function(e,t){for(var r,a,s=null,u=0;u<e.length;u++){var l=e[u];if(i.isString(l)){var c=o.create_text(t,l);e[u]=c}}if(1===e.length)s=e[0];else{var h=s=o.create_documentFragment(t);try{for(var p=n(e),f=p.next();!f.done;f=p.next()){l=f.value;h.appendChild(l)}}catch(e){r={error:e}}finally{try{f&&!f.done&&(a=p.return)&&a.call(p)}finally{if(r)throw r.error}}}return s}},function(e,t,r){"use strict";var n=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,r=t&&e[t],n=0;if(r)return r.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")},i=this&&this.__read||function(e,t){var r="function"==typeof Symbol&&e[Symbol.iterator];if(!r)return e;var n,i,o=r.call(e),a=[];try{for(;(void 0===t||t-- >0)&&!(n=o.next()).done;)a.push(n.value)}catch(e){i={error:e}}finally{try{n&&!n.done&&(r=o.return)&&r.call(o)}finally{if(i)throw i.error}}return a},o=this&&this.__spread||function(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(i(arguments[t]));return e};Object.defineProperty(t,"__esModule",{value:!0});var a=r(2),s=r(9),u=r(3),l=r(29),c=r(17),h=r(175),p=r(107),f=r(176),d=r(37),m=r(177);function y(e){return e._startNode===e._endNode&&e._startOffset===e._endOffset}function v(e){return c.tree_rootNode(e._startNode)}function _(e,t){return c.tree_rootNode(e)===v(t)&&h.boundaryPoint_position([e,0],t._start)===a.BoundaryPosition.After&&h.boundaryPoint_position([e,c.tree_nodeLength(e)],t._end)===a.BoundaryPosition.Before}function g(e,t){var r=c.tree_isAncestorOf(t._startNode,e,!0),n=c.tree_isAncestorOf(t._endNode,e,!0);return r&&!n||!r&&n}function b(e){var t,r,i,a,h,m,v=l.create_documentFragment(e._startNode._nodeDocument);if(y(e))return v;var x=e._startNode,w=e._startOffset,E=e._endNode,D=e._endOffset;if(x===E&&u.Guard.isCharacterDataNode(x))return(R=f.node_clone(x))._data=p.characterData_substringData(x,w,D-w),d.mutation_append(R,v),p.characterData_replaceData(x,w,D-w,""),v;for(var S=x;!c.tree_isAncestorOf(E,S,!0);){if(null===S._parent)throw new Error("Parent node  is null.");S=S._parent}var C=null;if(!c.tree_isAncestorOf(E,x,!0))try{for(var A=n(S._children),N=A.next();!N.done;N=A.next()){if(g(k=N.value,e)){C=k;break}}}catch(e){t={error:e}}finally{try{N&&!N.done&&(r=A.return)&&r.call(A)}finally{if(t)throw t.error}}var T=null;if(!c.tree_isAncestorOf(x,E,!0))for(var O=o(S._children),F=O.length-1;F>0;F--){var k;if(g(k=O[F],e)){T=k;break}}var P,I,L=[];try{for(var M=n(S._children),B=M.next();!B.done;B=M.next()){if(_(X=B.value,e)){if(u.Guard.isDocumentTypeNode(X))throw new s.HierarchyRequestError;L.push(X)}}}catch(e){i={error:e}}finally{try{B&&!B.done&&(a=M.return)&&a.call(M)}finally{if(i)throw i.error}}if(c.tree_isAncestorOf(E,x,!0))P=x,I=w;else{for(var j=x;null!==j._parent&&!c.tree_isAncestorOf(E,j._parent);)j=j._parent;if(null===j._parent)throw new Error("Parent node is null.");P=j._parent,I=1+c.tree_index(j)}if(u.Guard.isCharacterDataNode(C))(R=f.node_clone(x))._data=p.characterData_substringData(x,w,c.tree_nodeLength(x)-w),d.mutation_append(R,v),p.characterData_replaceData(x,w,c.tree_nodeLength(x)-w,"");else if(null!==C){var R=f.node_clone(C);d.mutation_append(R,v);var z=b(l.create_range([x,w],[C,c.tree_nodeLength(C)]));d.mutation_append(z,R)}try{for(var U=n(L),G=U.next();!G.done;G=U.next()){var X=G.value;d.mutation_append(X,v)}}catch(e){h={error:e}}finally{try{G&&!G.done&&(m=U.return)&&m.call(U)}finally{if(h)throw h.error}}if(u.Guard.isCharacterDataNode(T))(R=f.node_clone(E))._data=p.characterData_substringData(E,0,D),d.mutation_append(R,v),p.characterData_replaceData(E,0,D,"");else if(null!==T){R=f.node_clone(T);d.mutation_append(R,v);z=b(l.create_range([T,0],[E,D]));d.mutation_append(z,R)}return e._start=[P,I],e._end=[P,I],v}t.range_collapsed=y,t.range_root=v,t.range_isContained=_,t.range_isPartiallyContained=g,t.range_setTheStart=function(e,t,r){if(u.Guard.isDocumentTypeNode(t))throw new s.InvalidNodeTypeError;if(r>c.tree_nodeLength(t))throw new s.IndexSizeError;var n=[t,r];v(e)===c.tree_rootNode(t)&&h.boundaryPoint_position(n,e._end)!==a.BoundaryPosition.After||(e._end=n),e._start=n},t.range_setTheEnd=function(e,t,r){if(u.Guard.isDocumentTypeNode(t))throw new s.InvalidNodeTypeError;if(r>c.tree_nodeLength(t))throw new s.IndexSizeError;var n=[t,r];v(e)===c.tree_rootNode(t)&&h.boundaryPoint_position(n,e._start)!==a.BoundaryPosition.Before||(e._start=n),e._end=n},t.range_select=function(e,t){var r=e._parent;if(null===r)throw new s.InvalidNodeTypeError;var n=c.tree_index(e);t._start=[r,n],t._end=[r,n+1]},t.range_extract=b,t.range_cloneTheContents=function e(t){var r,i,a,h,m,v,x=l.create_documentFragment(t._startNode._nodeDocument);if(y(t))return x;var w=t._startNode,E=t._startOffset,D=t._endNode,S=t._endOffset;w===D&&u.Guard.isCharacterDataNode(w)&&((B=f.node_clone(w))._data=p.characterData_substringData(w,E,S-E),d.mutation_append(B,x));for(var C=w;!c.tree_isAncestorOf(D,C,!0);){if(null===C._parent)throw new Error("Parent node  is null.");C=C._parent}var A=null;if(!c.tree_isAncestorOf(D,w,!0))try{for(var N=n(C._children),T=N.next();!T.done;T=N.next()){if(g(P=T.value,t)){A=P;break}}}catch(e){r={error:e}}finally{try{T&&!T.done&&(i=N.return)&&i.call(N)}finally{if(r)throw r.error}}var O=null;if(!c.tree_isAncestorOf(w,D,!0))for(var F=o(C._children),k=F.length-1;k>0;k--){var P;if(g(P=F[k],t)){O=P;break}}var I=[];try{for(var L=n(C._children),M=L.next();!M.done;M=L.next()){if(_(U=M.value,t)){if(u.Guard.isDocumentTypeNode(U))throw new s.HierarchyRequestError;I.push(U)}}}catch(e){a={error:e}}finally{try{M&&!M.done&&(h=L.return)&&h.call(L)}finally{if(a)throw a.error}}if(u.Guard.isCharacterDataNode(A))(B=f.node_clone(w))._data=p.characterData_substringData(w,E,c.tree_nodeLength(w)-E),d.mutation_append(B,x);else if(null!==A){var B=f.node_clone(A);d.mutation_append(B,x);var j=e(l.create_range([w,E],[A,c.tree_nodeLength(A)]));d.mutation_append(j,B)}try{for(var R=n(I),z=R.next();!z.done;z=R.next()){var U=z.value,B=f.node_clone(U);d.mutation_append(B,x)}}catch(e){m={error:e}}finally{try{z&&!z.done&&(v=R.return)&&v.call(R)}finally{if(m)throw m.error}}if(u.Guard.isCharacterDataNode(O))(B=f.node_clone(D))._data=p.characterData_substringData(D,0,S),d.mutation_append(B,x);else if(null!==O){B=f.node_clone(O);x.append(B);j=b(l.create_range([O,0],[D,S]));d.mutation_append(j,B)}return x},t.range_insert=function(e,t){var r,i;if(u.Guard.isProcessingInstructionNode(t._startNode)||u.Guard.isCommentNode(t._startNode)||u.Guard.isTextNode(t._startNode)&&null===t._startNode._parent||t._startNode===e)throw new s.HierarchyRequestError;var o,a=null;if(u.Guard.isTextNode(t._startNode))a=t._startNode;else{var l=0;try{for(var h=n(t._startNode._children),p=h.next();!p.done;p=h.next()){var f=p.value;if(l===t._startOffset){a=f;break}l++}}catch(e){r={error:e}}finally{try{p&&!p.done&&(i=h.return)&&i.call(h)}finally{if(r)throw r.error}}}if(null===a)o=t._startNode;else{if(null===a._parent)throw new Error("Parent node is null.");o=a._parent}d.mutation_ensurePreInsertionValidity(e,o,a),u.Guard.isTextNode(t._startNode)&&(a=m.text_split(t._startNode,t._startOffset)),e===a&&(a=e._nextSibling),null!==e._parent&&d.mutation_remove(e,e._parent);var v=null===a?c.tree_nodeLength(o):c.tree_index(a);u.Guard.isDocumentFragmentNode(e)?v+=c.tree_nodeLength(e):v++,d.mutation_preInsert(e,o,a),y(t)&&(t._end=[o,v])},t.range_getContainedNodes=function(e){var t;return(t={})[Symbol.iterator]=function(){var t=e.commonAncestorContainer,r=c.tree_getFirstDescendantNode(t);return{next:function(){for(;r&&!_(r,e);)r=c.tree_getNextDescendantNode(t,r);if(null===r)return{done:!0,value:null};var n={done:!1,value:r};return r=c.tree_getNextDescendantNode(t,r),n}}},t},t.range_getPartiallyContainedNodes=function(e){var t;return(t={})[Symbol.iterator]=function(){var t=e.commonAncestorContainer,r=c.tree_getFirstDescendantNode(t);return{next:function(){for(;r&&!g(r,e);)r=c.tree_getNextDescendantNode(t,r);if(null===r)return{done:!0,value:null};var n={done:!1,value:r};return r=c.tree_getNextDescendantNode(t,r),n}}},t}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(9);t.selectors_scopeMatchASelectorsString=function(e,t){throw new n.NotSupportedError}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(2),i=r(105);t.treeWalker_traverseChildren=function(e,t){for(var r=t?e._current._firstChild:e._current._lastChild;null!==r;){var o=i.traversal_filter(e,r);if(o===n.FilterResult.Accept)return e._current=r,r;if(o===n.FilterResult.Skip){var a=t?r._firstChild:r._lastChild;if(null!==a){r=a;continue}}for(;null!==r;){var s=t?r._nextSibling:r._previousSibling;if(null!==s){r=s;break}var u=r._parent;if(null===u||u===e._root||u===e._current)return null;r=u}}return null},t.treeWalker_traverseSiblings=function(e,t){var r=e._current;if(r===e._root)return null;for(;;){for(var o=t?r._nextSibling:r._previousSibling;null!==o;){r=o;var a=i.traversal_filter(e,r);if(a===n.FilterResult.Accept)return e._current=r,r;o=t?r._firstChild:r._lastChild,a!==n.FilterResult.Reject&&null!==o||(o=t?r._nextSibling:r._previousSibling)}if(null===(r=r._parent)||r===e._root)return null;if(i.traversal_filter(e,r)===n.FilterResult.Accept)return null}}},function(e,t,r){"use strict";r(89),r(74);var n,i=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});Object.defineProperty(t,"__esModule",{value:!0});var o=r(1),a=r(2),s=r(50),u=r(3),l=function(e){function t(t,r){var n=e.call(this,t)||this;return n._indentation={},n._lengthToLastNewline=0,n._writerOptions=o.applyDefaults(r,{wellFormed:!1,headless:!1,prettyPrint:!1,indent:"  ",newline:"\n",offset:0,width:0,allowEmptyTags:!1,indentTextOnlyNodes:!1,spaceBeforeSlash:!1}),n}return i(t,e),t.prototype.serialize=function(e){return this._refs={suppressPretty:!1,emptyNode:!1,markup:""},e.nodeType!==a.NodeType.Document||this._writerOptions.headless||this.declaration(this._builderOptions.version,this._builderOptions.encoding,this._builderOptions.standalone),this.serializeNode(e,this._writerOptions.wellFormed),this._writerOptions.prettyPrint&&this._refs.markup.slice(-this._writerOptions.newline.length)===this._writerOptions.newline&&(this._refs.markup=this._refs.markup.slice(0,-this._writerOptions.newline.length)),this._refs.markup},t.prototype.declaration=function(e,t,r){this._beginLine(),this._refs.markup+='<?xml version="'+e+'"',void 0!==t&&(this._refs.markup+=' encoding="'+t+'"'),void 0!==r&&(this._refs.markup+=' standalone="'+(r?"yes":"no")+'"'),this._refs.markup+="?>",this._endLine()},t.prototype.docType=function(e,t,r){this._beginLine(),this._refs.markup+=t&&r?"<!DOCTYPE "+e+' PUBLIC "'+t+'" "'+r+'">':t?"<!DOCTYPE "+e+' PUBLIC "'+t+'">':r?"<!DOCTYPE "+e+' SYSTEM "'+r+'">':"<!DOCTYPE "+e+">",this._endLine()},t.prototype.openTagBegin=function(e){this._beginLine(),this._refs.markup+="<"+e},t.prototype.openTagEnd=function(e,t,r){if(this._refs.suppressPretty=!1,this._refs.emptyNode=!1,this._writerOptions.prettyPrint&&!t&&!r){for(var n=!0,i=!0,o=this.currentNode.firstChild,a=0,s=0;o;){if(u.Guard.isExclusiveTextNode(o))s++;else{if(!u.Guard.isCDATASectionNode(o)){n=!1,i=!1;break}a++}""!==o.data&&(i=!1),o=o.nextSibling}this._refs.suppressPretty=!this._writerOptions.indentTextOnlyNodes&&n&&(a<=1&&0===s||0===a),this._refs.emptyNode=i}(r||t||this._refs.emptyNode)&&this._writerOptions.allowEmptyTags?this._refs.markup+="></"+e+">":this._refs.markup+=r?" />":t||this._refs.emptyNode?this._writerOptions.spaceBeforeSlash?" />":"/>":">",this._endLine()},t.prototype.closeTag=function(e){this._refs.emptyNode||(this._beginLine(),this._refs.markup+="</"+e+">"),this._refs.suppressPretty=!1,this._refs.emptyNode=!1,this._endLine()},t.prototype.attribute=function(e,t){var r=e+'="'+t+'"';this._writerOptions.prettyPrint&&this._writerOptions.width>0&&this._refs.markup.length-this._lengthToLastNewline+1+r.length>this._writerOptions.width?(this._endLine(),this._beginLine(),this._refs.markup+=this._indent(1)+r):this._refs.markup+=" "+r},t.prototype.text=function(e){""!==e&&(this._beginLine(),this._refs.markup+=e,this._endLine())},t.prototype.cdata=function(e){""!==e&&(this._beginLine(),this._refs.markup+="<![CDATA["+e+"]]>",this._endLine())},t.prototype.comment=function(e){this._beginLine(),this._refs.markup+="\x3c!--"+e+"--\x3e",this._endLine()},t.prototype.instruction=function(e,t){this._beginLine(),this._refs.markup+="<?"+(""===t?e:e+" "+t)+"?>",this._endLine()},t.prototype._beginLine=function(){this._writerOptions.prettyPrint&&!this._refs.suppressPretty&&(this._refs.markup+=this._indent(this._writerOptions.offset+this.level))},t.prototype._endLine=function(){this._writerOptions.prettyPrint&&!this._refs.suppressPretty&&(this._refs.markup+=this._writerOptions.newline,this._lengthToLastNewline=this._refs.markup.length)},t.prototype._indent=function(e){if(e<=0)return"";if(void 0!==this._indentation[e])return this._indentation[e];var t=this._writerOptions.indent.repeat(e);return this._indentation[e]=t,t},t}(s.BaseWriter);t.XMLWriter=l},function(e,t,r){"use strict";var n=r(47),i=r(35);e.exports="".repeat||function(e){var t=String(i(this)),r="",o=n(e);if(o<0||o==1/0)throw RangeError("Wrong number of repetitions");for(;o>0;(o>>>=1)&&(t+=t))1&o&&(r+=t);return r}},function(e,t,r){"use strict";r(31),r(32),r(33),r(19),r(178),r(20),r(22),r(23);var n,i=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}),o=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,r=t&&e[t],n=0;if(r)return r.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(t,"__esModule",{value:!0});var a=r(67),s=r(1),u=function(e){function t(t,r){var n=e.call(this,t)||this;return n._writerOptions=s.applyDefaults(r,{wellFormed:!1,prettyPrint:!1,indent:"  ",newline:"\n",offset:0,group:!1,verbose:!1}),n}return i(t,e),t.prototype.serialize=function(e){var t=s.applyDefaults(this._writerOptions,{format:"object",wellFormed:!1}),r=new a.ObjectWriter(this._builderOptions,t).serialize(e);return this._beginLine(this._writerOptions,0)+this._convertObject(r,this._writerOptions)},t.prototype._convertObject=function(e,t,r){var n,i,a=this;void 0===r&&(r=0);var u="",l=this._isLeafNode(e);if(s.isArray(e)){u+="[";var c=e.length,h=0;try{for(var p=o(e),f=p.next();!f.done;f=p.next()){var d=f.value;u+=this._endLine(t,r+1)+this._beginLine(t,r+1)+this._convertObject(d,t,r+1),h<c-1&&(u+=","),h++}}catch(e){n={error:e}}finally{try{f&&!f.done&&(i=p.return)&&i.call(p)}finally{if(n)throw n.error}}u+=this._endLine(t,r)+this._beginLine(t,r),u+="]"}else if(s.isObject(e)){u+="{";var m=s.objectLength(e),y=0;s.forEachObject(e,(function(e,n){l&&t.prettyPrint?u+=" ":u+=a._endLine(t,r+1)+a._beginLine(t,r+1),u+=a._key(e),t.prettyPrint&&(u+=" "),u+=a._convertObject(n,t,r+1),y<m-1&&(u+=","),y++}),this),l&&t.prettyPrint?u+=" ":u+=this._endLine(t,r)+this._beginLine(t,r),u+="}"}else u+=this._val(e);return u},t.prototype._beginLine=function(e,t){if(!e.prettyPrint)return"";var r=e.offset+t+1;return r>0?new Array(r).join(e.indent):""},t.prototype._endLine=function(e,t){return e.prettyPrint?e.newline:""},t.prototype._key=function(e){return'"'+e+'":'},t.prototype._val=function(e){return JSON.stringify(e)},t.prototype._isLeafNode=function(e){return this._descendantCount(e)<=1},t.prototype._descendantCount=function(e,t){var r=this;return void 0===t&&(t=0),s.isArray(e)?s.forEachArray(e,(function(e){return t+=r._descendantCount(e,t)}),this):s.isObject(e)?s.forEachObject(e,(function(e,n){return t+=r._descendantCount(n,t)}),this):t++,t},t}(r(50).BaseWriter);t.JSONWriter=u},function(e,t,r){"use strict";r(31),r(32),r(33),r(19),r(178),r(89),r(20),r(22),r(23);var n,i=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}),o=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,r=t&&e[t],n=0;if(r)return r.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(t,"__esModule",{value:!0});var a=r(67),s=r(1),u=function(e){function t(t,r){var n=e.call(this,t)||this;if(n._writerOptions=s.applyDefaults(r,{wellFormed:!1,indent:"  ",newline:"\n",offset:0,group:!1,verbose:!1}),n._writerOptions.indent.length<2)throw new Error("YAML indententation string must be at least two characters long.");if(n._writerOptions.offset<0)throw new Error("YAML offset should be zero or a positive number.");return n}return i(t,e),t.prototype.serialize=function(e){var t=s.applyDefaults(this._writerOptions,{format:"object",wellFormed:!1}),r=new a.ObjectWriter(this._builderOptions,t).serialize(e),n=this._beginLine(this._writerOptions,0)+"---"+this._endLine(this._writerOptions)+this._convertObject(r,this._writerOptions,0);return n.slice(-this._writerOptions.newline.length)===this._writerOptions.newline&&(n=n.slice(0,-this._writerOptions.newline.length)),n},t.prototype._convertObject=function(e,t,r,n){var i,a,u=this;void 0===n&&(n=!1);var l="";if(s.isArray(e))try{for(var c=o(e),h=c.next();!h.done;h=c.next()){var p=h.value;l+=this._beginLine(t,r,!0),s.isObject(p)?s.isEmpty(p)?l+='""'+this._endLine(t):l+=this._convertObject(p,t,r,!0):l+=this._val(p)+this._endLine(t)}}catch(e){i={error:e}}finally{try{h&&!h.done&&(a=c.return)&&a.call(c)}finally{if(i)throw i.error}}else s.forEachObject(e,(function(e,i){n?(l+=u._key(e),n=!1):l+=u._beginLine(t,r)+u._key(e),s.isObject(i)?s.isEmpty(i)?l+=' ""'+u._endLine(t):l+=u._endLine(t)+u._convertObject(i,t,r+1):l+=" "+u._val(i)+u._endLine(t)}),this);return l},t.prototype._beginLine=function(e,t,r){void 0===r&&(r=!1);var n=e.offset+t+1,i=new Array(n).join(e.indent);return r?i.substr(0,i.length-2)+"-"+i.substr(-1,1):i},t.prototype._endLine=function(e){return e.newline},t.prototype._key=function(e){return'"'+e+'":'},t.prototype._val=function(e){return JSON.stringify(e)},t}(r(50).BaseWriter);t.YAMLWriter=u},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),r(110).dom.setFeatures(!0);var n=r(110);t.DOMImplementation=n.DOMImplementation;var i=r(271);t.DOMParser=i.DOMParser;var o=r(274);t.XMLSerializer=o.XMLSerializer},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(3),i=r(0),o=function(){function e(){}return e.prototype.before=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];var r=n.Cast.asNode(this),o=r._parent;if(null!==o){for(var a=r._previousSibling,s=!0;s&&a;){s=!1;for(var u=0;u<e.length;u++){var l=e[u];if(l===a){a=a._previousSibling,s=!0;break}}}var c=i.parentNode_convertNodesIntoANode(e,r._nodeDocument);a=null===a?o._firstChild:a._nextSibling,i.mutation_preInsert(c,o,a)}},e.prototype.after=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];var r=n.Cast.asNode(this),o=r._parent;if(o){for(var a=r._nextSibling,s=!0;s&&a;){s=!1;for(var u=0;u<e.length;u++){var l=e[u];if(l===a){a=a._nextSibling,s=!0;break}}}var c=i.parentNode_convertNodesIntoANode(e,r._nodeDocument);i.mutation_preInsert(c,o,a)}},e.prototype.replaceWith=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];var r=n.Cast.asNode(this),o=r._parent;if(o){for(var a=r._nextSibling,s=!0;s&&a;){s=!1;for(var u=0;u<e.length;u++){var l=e[u];if(l===a){a=a._nextSibling,s=!0;break}}}var c=i.parentNode_convertNodesIntoANode(e,r._nodeDocument);r._parent===o?i.mutation_replace(r,c,o):i.mutation_preInsert(c,o,a)}},e.prototype.remove=function(){var e=n.Cast.asNode(this),t=e._parent;t&&i.mutation_remove(e,t)},e}();t.ChildNodeImpl=o},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(){};t.DocumentOrShadowRootImpl=n},function(e,t,r){"use strict";var n=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,r=t&&e[t],n=0;if(r)return r.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(t,"__esModule",{value:!0});var i=r(6),o=r(3),a=r(7),s=function(){function e(e){this._nodeList=[],this._recordQueue=[],this._callback=e;var t=i.dom.window;a.set.append(t._mutationObservers,this)}return e.prototype.observe=function(e,t){var r,i;if(void 0===(t=t||{childList:!1,subtree:!1}).attributeOldValue&&void 0===t.attributeFilter||void 0!==t.attributes||(t.attributes=!0),void 0!==t.characterDataOldValue&&void 0===t.characterData&&(t.characterData=!0),!t.childList&&!t.attributes&&!t.characterData)throw new TypeError;if(t.attributeOldValue&&!t.attributes)throw new TypeError;if(void 0!==t.attributeFilter&&!t.attributes)throw new TypeError;if(t.characterDataOldValue&&!t.characterData)throw new TypeError;var s=!1,u=t,l=function(e){var t,r;if(e.observer===c){s=!0;try{for(var i=(t=void 0,n(c._nodeList)),l=i.next();!l.done;l=i.next()){var h=l.value;a.list.remove(h._registeredObserverList,(function(t){return o.Guard.isTransientRegisteredObserver(t)&&t.source===e}))}}catch(e){t={error:e}}finally{try{l&&!l.done&&(r=i.return)&&r.call(i)}finally{if(t)throw t.error}}e.options=u}},c=this;try{for(var h=n(e._registeredObserverList),p=h.next();!p.done;p=h.next()){l(p.value)}}catch(e){r={error:e}}finally{try{p&&!p.done&&(i=h.return)&&i.call(h)}finally{if(r)throw r.error}}s||(e._registeredObserverList.push({observer:this,options:t}),this._nodeList.push(e))},e.prototype.disconnect=function(){var e,t,r=this;try{for(var i=n(this._nodeList),o=i.next();!o.done;o=i.next()){var s=o.value;a.list.remove(s._registeredObserverList,(function(e){return e.observer===r}))}}catch(t){e={error:t}}finally{try{o&&!o.done&&(t=i.return)&&t.call(i)}finally{if(e)throw e.error}}this._recordQueue=[]},e.prototype.takeRecords=function(){var e=this._recordQueue;return this._recordQueue=[],e},e}();t.MutationObserverImpl=s},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(3),i=function(){function e(){}return Object.defineProperty(e.prototype,"previousElementSibling",{get:function(){for(var e=n.Cast.asNode(this)._previousSibling;e;){if(n.Guard.isElementNode(e))return e;e=e._previousSibling}return null},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"nextElementSibling",{get:function(){for(var e=n.Cast.asNode(this)._nextSibling;e;){if(n.Guard.isElementNode(e))return e;e=e._nextSibling}return null},enumerable:!0,configurable:!0}),e}();t.NonDocumentTypeChildNodeImpl=i},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(3),i=r(0),o=function(){function e(){}return e.prototype.getElementById=function(e){for(var t=i.tree_getFirstDescendantNode(n.Cast.asNode(this),!1,!1,(function(e){return n.Guard.isElementNode(e)}));null!==t;){if(t._uniqueIdentifier===e)return t;t=i.tree_getNextDescendantNode(n.Cast.asNode(this),t,!1,!1,(function(e){return n.Guard.isElementNode(e)}))}return null},e}();t.NonElementParentNodeImpl=o},function(e,t,r){"use strict";var n=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,r=t&&e[t],n=0;if(r)return r.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(t,"__esModule",{value:!0});var i=r(3),o=r(0),a=function(){function e(){}return Object.defineProperty(e.prototype,"children",{get:function(){return o.create_htmlCollection(i.Cast.asNode(this))},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"firstElementChild",{get:function(){for(var e=i.Cast.asNode(this)._firstChild;e;){if(i.Guard.isElementNode(e))return e;e=e._nextSibling}return null},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"lastElementChild",{get:function(){for(var e=i.Cast.asNode(this)._lastChild;e;){if(i.Guard.isElementNode(e))return e;e=e._previousSibling}return null},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"childElementCount",{get:function(){var e,t,r=0;try{for(var o=n(i.Cast.asNode(this)._children),a=o.next();!a.done;a=o.next()){var s=a.value;i.Guard.isElementNode(s)&&r++}}catch(t){e={error:t}}finally{try{a&&!a.done&&(t=o.return)&&t.call(o)}finally{if(e)throw e.error}}return r},enumerable:!0,configurable:!0}),e.prototype.prepend=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];var r=i.Cast.asNode(this),n=o.parentNode_convertNodesIntoANode(e,r._nodeDocument);o.mutation_preInsert(n,r,r._firstChild)},e.prototype.append=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];var r=i.Cast.asNode(this),n=o.parentNode_convertNodesIntoANode(e,r._nodeDocument);o.mutation_append(n,r)},e.prototype.querySelector=function(e){var t=i.Cast.asNode(this),r=o.selectors_scopeMatchASelectorsString(e,t);return 0===r.length?null:r[0]},e.prototype.querySelectorAll=function(e){var t=i.Cast.asNode(this),r=o.selectors_scopeMatchASelectorsString(e,t);return o.create_nodeListStatic(t,r)},e}();t.ParentNodeImpl=a},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(0),i=function(){function e(){}return Object.defineProperty(e.prototype,"_name",{get:function(){return this.__name||""},set:function(e){this.__name=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"_assignedSlot",{get:function(){return this.__assignedSlot||null},set:function(e){this.__assignedSlot=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"assignedSlot",{get:function(){return n.shadowTree_findASlot(this,!0)},enumerable:!0,configurable:!0}),e}();t.SlotableImpl=i},function(e,t,r){"use strict";var n,i=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});Object.defineProperty(t,"__esModule",{value:!0});var o=r(102),a=r(9),s=r(3),u=function(e){function t(t){var r=e.call(this)||this;if(s.Guard.isDocumentTypeNode(t.startContainer)||s.Guard.isAttrNode(t.startContainer)||s.Guard.isDocumentTypeNode(t.endContainer)||s.Guard.isAttrNode(t.endContainer))throw new a.InvalidNodeTypeError;return r._start=[t.startContainer,t.startOffset],r._end=[t.endContainer,t.endOffset],r}return i(t,e),t}(o.AbstractRangeImpl);t.StaticRangeImpl=u},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(272);t.DOMParser=n.DOMParserImpl},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(0),i=r(273),o=function(){function e(){}return e.prototype.parseFromString=function(e,t){if("text/html"===t)throw new Error("HTML parser not implemented.");try{return(r=(new i.XMLParserImpl).parse(e))._contentType=t,r}catch(e){var r,o="http://www.mozilla.org/newlayout/xml/parsererror.xml",a=(r=n.create_xmlDocument()).createElementNS(o,"parsererror"),s=r.createElementNS(o,"error");return s.setAttribute("message",e.message),a.appendChild(s),r.appendChild(a),r}},e}();t.DOMParserImpl=o},function(e,t,r){"use strict";var n=this&&this.__read||function(e,t){var r="function"==typeof Symbol&&e[Symbol.iterator];if(!r)return e;var n,i,o=r.call(e),a=[];try{for(;(void 0===t||t-- >0)&&!(n=o.next()).done;)a.push(n.value)}catch(e){i={error:e}}finally{try{n&&!n.done&&(r=o.return)&&r.call(o)}finally{if(i)throw i.error}}return a},i=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,r=t&&e[t],n=0;if(r)return r.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(t,"__esModule",{value:!0});var o=r(180),a=r(111),s=r(7),u=r(0),l=r(69),c=function(){function e(){}return e.prototype.parse=function(e){for(var t,r,c,h,p=new o.XMLStringLexer(e,{skipWhitespaceOnlyText:!0}),f=u.create_document(),d=f,m=p.nextToken();m.type!==a.TokenType.EOF;){switch(m.type){case a.TokenType.Declaration:var y=m;if("1.0"!==y.version)throw new Error("Invalid xml version: "+y.version);break;case a.TokenType.DocType:var v=m;if(!u.xml_isPubidChar(v.pubId))throw new Error("DocType public identifier does not match PubidChar construct.");if(!u.xml_isLegalChar(v.sysId)||-1!==v.sysId.indexOf('"')&&-1!==v.sysId.indexOf("'"))throw new Error("DocType system identifier contains invalid characters.");d.appendChild(f.implementation.createDocumentType(v.name,v.pubId,v.sysId));break;case a.TokenType.CDATA:var _=m;if(!u.xml_isLegalChar(_.data)||-1!==_.data.indexOf("]]>"))throw new Error("CDATA contains invalid characters.");d.appendChild(f.createCDATASection(_.data));break;case a.TokenType.Comment:var g=m;if(!u.xml_isLegalChar(g.data)||-1!==g.data.indexOf("--")||g.data.endsWith("-"))throw new Error("Comment data contains invalid characters.");d.appendChild(f.createComment(g.data));break;case a.TokenType.PI:var b=m;if(-1!==b.target.indexOf(":")||/^xml$/i.test(b.target))throw new Error("Processing instruction target contains invalid characters.");if(!u.xml_isLegalChar(b.data)||-1!==b.data.indexOf("?>"))throw new Error("Processing instruction data contains invalid characters.");d.appendChild(f.createProcessingInstruction(b.target,b.data));break;case a.TokenType.Text:var x=m;if(!u.xml_isLegalChar(x.data))throw new Error("Text data contains invalid characters.");d.appendChild(f.createTextNode(this._decodeText(x.data)));break;case a.TokenType.Element:var w=m,E=n(u.namespace_extractQName(w.name),2),D=E[0],S=E[1];if(-1!==S.indexOf(":")||!u.xml_isName(S))throw new Error("Node local name contains invalid characters.");if("xmlns"===D)throw new Error("An element cannot have the 'xmlns' prefix.");var C=d.lookupNamespaceURI(D),A={};try{for(var N=(t=void 0,i(w.attributes)),T=N.next();!T.done;T=N.next()){var O=n(T.value,2),F=O[0],k=O[1];if("xmlns"===F)C=k;else{var P=n(u.namespace_extractQName(F),2),I=P[0],L=P[1];"xmlns"===I&&(L===D&&(C=k),A[L]=k)}}}catch(e){t={error:e}}finally{try{T&&!T.done&&(r=N.return)&&r.call(N)}finally{if(t)throw t.error}}var M=null!==C?f.createElementNS(C,w.name):f.createElement(w.name);d.appendChild(M);var B=new l.LocalNameSet;try{for(var j=(c=void 0,i(w.attributes)),R=j.next();!R.done;R=j.next()){var z=n(R.value,2),U=(F=z[0],k=z[1],n(u.namespace_extractQName(F),2)),G=(I=U[0],L=U[1],null);if("xmlns"===I||null===I&&"xmlns"===L?G=s.namespace.XMLNS:null!==(G=M.lookupNamespaceURI(I))&&M.isDefaultNamespace(G)?G=null:null===G&&null!==I&&(G=A[I]||null),B.has(G,L))throw new Error("Element contains duplicate attributes.");if(B.set(G,L),G===s.namespace.XMLNS&&k===s.namespace.XMLNS)throw new Error("XMLNS namespace is reserved.");if(-1!==L.indexOf(":")||!u.xml_isName(L))throw new Error("Attribute local name contains invalid characters.");if("xmlns"===I&&""===k)throw new Error("Empty XML namespace is not allowed.");null!==G?M.setAttributeNS(G,F,this._decodeAttributeValue(k)):M.setAttribute(F,this._decodeAttributeValue(k))}}catch(e){c={error:e}}finally{try{R&&!R.done&&(h=j.return)&&h.call(j)}finally{if(c)throw c.error}}w.selfClosing||(d=M);break;case a.TokenType.ClosingTag:if(m.name!==d.nodeName)throw new Error("Closing tag name does not match opening tag name.");d._parent&&(d=d._parent)}m=p.nextToken()}return f},e.prototype._decodeText=function(e){return null==e?e:e.replace(/&lt;/g,"<").replace(/&gt;/g,">").replace(/&amp;/g,"&")},e.prototype._decodeAttributeValue=function(e){return null==e?e:e.replace(/&lt;/g,"<").replace(/&gt;/g,">").replace(/&amp;/g,"&")},e}();t.XMLParserImpl=c},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(275);t.XMLSerializer=n.XMLSerializerImpl},function(e,t,r){"use strict";var n=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,r=t&&e[t],n=0;if(r)return r.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(t,"__esModule",{value:!0});var i=r(2),o=r(69),a=r(95),s=r(9),u=r(7),l=r(0),c=function(){function e(){}return e.prototype.serializeToString=function(e){return this._xmlSerialization(e,!1)},e.prototype._xmlSerialization=function(e,t){if(void 0===e._nodeDocument||e._nodeDocument._hasNamespaces){var r=new a.NamespacePrefixMap;r.set("xml",u.namespace.XML);try{return this._serializeNodeNS(e,null,r,{value:1},t)}catch(e){throw new s.InvalidStateError}}else try{return this._serializeNode(e,t)}catch(e){throw new s.InvalidStateError}},e.prototype._serializeNodeNS=function(e,t,r,n,o){switch(e.nodeType){case i.NodeType.Element:return this._serializeElementNS(e,t,r,n,o);case i.NodeType.Document:return this._serializeDocumentNS(e,t,r,n,o);case i.NodeType.Comment:return this._serializeComment(e,o);case i.NodeType.Text:return this._serializeText(e,o);case i.NodeType.DocumentFragment:return this._serializeDocumentFragmentNS(e,t,r,n,o);case i.NodeType.DocumentType:return this._serializeDocumentType(e,o);case i.NodeType.ProcessingInstruction:return this._serializeProcessingInstruction(e,o);case i.NodeType.CData:return this._serializeCData(e,o);default:throw new Error("Unknown node type: "+e.nodeType)}},e.prototype._serializeNode=function(e,t){switch(e.nodeType){case i.NodeType.Element:return this._serializeElement(e,t);case i.NodeType.Document:return this._serializeDocument(e,t);case i.NodeType.Comment:return this._serializeComment(e,t);case i.NodeType.Text:return this._serializeText(e,t);case i.NodeType.DocumentFragment:return this._serializeDocumentFragment(e,t);case i.NodeType.DocumentType:return this._serializeDocumentType(e,t);case i.NodeType.ProcessingInstruction:return this._serializeProcessingInstruction(e,t);case i.NodeType.CData:return this._serializeCData(e,t);default:throw new Error("Unknown node type: "+e.nodeType)}},e.prototype._serializeElementNS=function(t,r,i,o,a){var s,c;if(a&&(-1!==t.localName.indexOf(":")||!l.xml_isName(t.localName)))throw new Error("Node local name contains invalid characters (well-formed required).");var h="<",p="",f=!1,d=!1,m=i.copy(),y={},v=this._recordNamespaceInformation(t,m,y),_=r,g=t.namespaceURI;if(_===g)null!==v&&(d=!0),h+=p=g===u.namespace.XML?"xml:"+t.localName:t.localName;else{var b=t.prefix,x=null;if(null===b&&g===v||(x=m.get(b,g)),"xmlns"===b){if(a)throw new Error("An element cannot have the 'xmlns' prefix (well-formed required).");x=b}null!==x?(p=x+":"+t.localName,null!==v&&v!==u.namespace.XML&&(_=v||null),h+=p):null!==b?(b in y&&(b=this._generatePrefix(g,m,o)),m.set(b,g),h+=p+=b+":"+t.localName,h+=" xmlns:"+b+'="'+this._serializeAttributeValue(g,a)+'"',null!==v&&(_=v||null)):null===v||null!==v&&v!==g?(d=!0,_=g,h+=p+=t.localName,h+=' xmlns="'+this._serializeAttributeValue(g,a)+'"'):(_=g,h+=p+=t.localName)}h+=this._serializeAttributesNS(t,m,o,y,d,a);var w=g===u.namespace.HTML;if(w&&0===t.childNodes.length&&e._VoidElementNames.has(t.localName)?(h+=" /",f=!0):w||0!==t.childNodes.length||(h+="/",f=!0),h+=">",f)return h;if(w&&"template"===t.localName);else try{for(var E=n(t._children||t.childNodes),D=E.next();!D.done;D=E.next()){var S=D.value;h+=this._serializeNodeNS(S,_,m,o,a)}}catch(e){s={error:e}}finally{try{D&&!D.done&&(c=E.return)&&c.call(E)}finally{if(s)throw s.error}}return h+="</"+p+">"},e.prototype._serializeDocumentNS=function(e,t,r,i,o){var a,s;if(o&&null===e.documentElement)throw new Error("Missing document element (well-formed required).");var u="";try{for(var l=n(e._children||e.childNodes),c=l.next();!c.done;c=l.next()){var h=c.value;u+=this._serializeNodeNS(h,t,r,i,o)}}catch(e){a={error:e}}finally{try{c&&!c.done&&(s=l.return)&&s.call(l)}finally{if(a)throw a.error}}return u},e.prototype._serializeComment=function(e,t){if(t&&(!l.xml_isLegalChar(e.data)||-1!==e.data.indexOf("--")||e.data.endsWith("-")))throw new Error("Comment data contains invalid characters (well-formed required).");return"\x3c!--"+e.data+"--\x3e"},e.prototype._serializeText=function(e,t){if(t&&!l.xml_isLegalChar(e.data))throw new Error("Text data contains invalid characters (well-formed required).");for(var r="",n=0;n<e.data.length;n++){var i=e.data[n];r+="&"===i?"&amp;":"<"===i?"&lt;":">"===i?"&gt;":i}return r},e.prototype._serializeDocumentFragmentNS=function(e,t,r,i,o){var a,s,u="";try{for(var l=n(e._children||e.childNodes),c=l.next();!c.done;c=l.next()){var h=c.value;u+=this._serializeNodeNS(h,t,r,i,o)}}catch(e){a={error:e}}finally{try{c&&!c.done&&(s=l.return)&&s.call(l)}finally{if(a)throw a.error}}return u},e.prototype._serializeDocumentType=function(e,t){if(t&&!l.xml_isPubidChar(e.publicId))throw new Error("DocType public identifier does not match PubidChar construct (well-formed required).");if(t&&(!l.xml_isLegalChar(e.systemId)||-1!==e.systemId.indexOf('"')&&-1!==e.systemId.indexOf("'")))throw new Error("DocType system identifier contains invalid characters (well-formed required).");return e.publicId&&e.systemId?"<!DOCTYPE "+e.name+' PUBLIC "'+e.publicId+'" "'+e.systemId+'">':e.publicId?"<!DOCTYPE "+e.name+' PUBLIC "'+e.publicId+'">':e.systemId?"<!DOCTYPE "+e.name+' SYSTEM "'+e.systemId+'">':"<!DOCTYPE "+e.name+">"},e.prototype._serializeProcessingInstruction=function(e,t){if(t&&(-1!==e.target.indexOf(":")||/^xml$/i.test(e.target)))throw new Error("Processing instruction target contains invalid characters (well-formed required).");if(t&&(!l.xml_isLegalChar(e.data)||-1!==e.data.indexOf("?>")))throw new Error("Processing instruction data contains invalid characters (well-formed required).");return"<?"+(""===e.data?e.target:e.target+" "+e.data)+"?>"},e.prototype._serializeCData=function(e,t){if(t&&-1!==e.data.indexOf("]]>"))throw new Error("CDATA contains invalid characters (well-formed required).");return"<![CDATA["+e.data+"]]>"},e.prototype._serializeAttributesNS=function(e,t,r,i,a,s){var c,h,p="",f=s?new o.LocalNameSet:void 0;try{for(var d=n(e.attributes),m=d.next();!m.done;m=d.next()){var y=m.value;if(a||s||null!==y.namespaceURI){if(s&&f&&f.has(y.namespaceURI,y.localName))throw new Error("Element contains duplicate attributes (well-formed required).");s&&f&&f.set(y.namespaceURI,y.localName);var v=y.namespaceURI,_=null;if(null!==v)if(_=t.get(y.prefix,v),v===u.namespace.XMLNS){if(y.value===u.namespace.XML||null===y.prefix&&a||null!==y.prefix&&(!(y.localName in i)||i[y.localName]!==y.value)&&t.has(y.localName,y.value))continue;if(s&&y.value===u.namespace.XMLNS)throw new Error("XMLNS namespace is reserved (well-formed required).");if(s&&""===y.value)throw new Error("Namespace prefix declarations cannot be used to undeclare a namespace (well-formed required).");"xmlns"===y.prefix&&(_="xmlns")}else null===_&&(p+=" xmlns:"+(_=null===y.prefix||t.hasPrefix(y.prefix)&&!t.has(y.prefix,v)?this._generatePrefix(v,t,r):y.prefix)+'="'+this._serializeAttributeValue(v,s)+'"');if(p+=" ",null!==_&&(p+=_+":"),s&&(-1!==y.localName.indexOf(":")||!l.xml_isName(y.localName)||"xmlns"===y.localName&&null===v))throw new Error("Attribute local name contains invalid characters (well-formed required).");p+=y.localName+'="'+this._serializeAttributeValue(y.value,s)+'"'}else p+=" "+y.localName+'="'+this._serializeAttributeValue(y.value,s)+'"'}}catch(e){c={error:e}}finally{try{m&&!m.done&&(h=d.return)&&h.call(d)}finally{if(c)throw c.error}}return p},e.prototype._recordNamespaceInformation=function(e,t,r){var i,o,a=null;try{for(var s=n(e.attributes),l=s.next();!l.done;l=s.next()){var c=l.value,h=c.namespaceURI,p=c.prefix;if(h===u.namespace.XMLNS){if(null===p){a=c.value;continue}var f=c.localName,d=c.value;if(d===u.namespace.XML)continue;if(""===d&&(d=null),t.has(f,d))continue;t.set(f,d),r[f]=d||""}}}catch(e){i={error:e}}finally{try{l&&!l.done&&(o=s.return)&&o.call(s)}finally{if(i)throw i.error}}return a},e.prototype._generatePrefix=function(e,t,r){var n="ns"+r.value;return r.value++,t.set(n,e),n},e.prototype._serializeAttributeValue=function(e,t){if(t&&null!==e&&!l.xml_isLegalChar(e))throw new Error("Invalid characters in attribute value.");if(null===e)return"";for(var r="",n=0;n<e.length;n++){var i=e[n];r+='"'===i?"&quot;":"&"===i?"&amp;":"<"===i?"&lt;":">"===i?"&gt;":i}return r},e.prototype._serializeElement=function(e,t){var r,i;if(t&&(-1!==e.localName.indexOf(":")||!l.xml_isName(e.localName)))throw new Error("Node local name contains invalid characters (well-formed required).");var o=!1,a=e.localName,s="<"+a;if(s+=this._serializeAttributes(e,t),0===e._children.size&&(s+="/",o=!0),s+=">",o)return s;try{for(var u=n(e._children),c=u.next();!c.done;c=u.next()){var h=c.value;s+=this._serializeNode(h,t)}}catch(e){r={error:e}}finally{try{c&&!c.done&&(i=u.return)&&i.call(u)}finally{if(r)throw r.error}}return s+="</"+a+">"},e.prototype._serializeDocument=function(e,t){var r,i;if(t&&null===e.documentElement)throw new Error("Missing document element (well-formed required).");var o="";try{for(var a=n(e._children),s=a.next();!s.done;s=a.next()){var u=s.value;o+=this._serializeNode(u,t)}}catch(e){r={error:e}}finally{try{s&&!s.done&&(i=a.return)&&i.call(a)}finally{if(r)throw r.error}}return o},e.prototype._serializeDocumentFragment=function(e,t){var r,i,o="";try{for(var a=n(e._children),s=a.next();!s.done;s=a.next()){var u=s.value;o+=this._serializeNode(u,t)}}catch(e){r={error:e}}finally{try{s&&!s.done&&(i=a.return)&&i.call(a)}finally{if(r)throw r.error}}return o},e.prototype._serializeAttributes=function(e,t){var r,i,o="",a=t?{}:void 0;try{for(var s=n(e.attributes),u=s.next();!u.done;u=s.next()){var c=u.value;if(t&&a&&c.localName in a)throw new Error("Element contains duplicate attributes (well-formed required).");if(t&&a&&(a[c.localName]=!0),t&&(-1!==c.localName.indexOf(":")||!l.xml_isName(c.localName)))throw new Error("Attribute local name contains invalid characters (well-formed required).");o+=" "+c.localName+'="'+this._serializeAttributeValue(c.value,t)+'"'}}catch(e){r={error:e}}finally{try{u&&!u.done&&(i=s.return)&&i.call(s)}finally{if(r)throw r.error}}return o},e._VoidElementNames=new Set(["area","base","basefont","bgsound","br","col","embed","frame","hr","img","input","keygen","link","menuitem","meta","param","source","track","wbr"]),e}();t.XMLSerializerImpl=c},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(277);t.XMLReader=n.XMLReader;var i=r(112);t.ObjectReader=i.ObjectReader;var o=r(280);t.JSONReader=o.JSONReader;var a=r(281);t.YAMLReader=a.YAMLReader},function(e,t,r){"use strict";r(31),r(32),r(33),r(19),r(65),r(20),r(22),r(23);var n,i=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}),o=this&&this.__read||function(e,t){var r="function"==typeof Symbol&&e[Symbol.iterator];if(!r)return e;var n,i,o=r.call(e),a=[];try{for(;(void 0===t||t-- >0)&&!(n=o.next()).done;)a.push(n.value)}catch(e){i={error:e}}finally{try{n&&!n.done&&(r=o.return)&&r.call(o)}finally{if(i)throw i.error}}return a},a=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,r=t&&e[t],n=0;if(r)return r.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(t,"__esModule",{value:!0});var s=r(180),u=r(111),l=r(7),c=r(0),h=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return i(t,e),t.prototype._parse=function(e,t){for(var r,n,i,h,p=new s.XMLStringLexer(t,{skipWhitespaceOnlyText:!0}),f=e,d=e,m=p.nextToken();m.type!==u.TokenType.EOF;){switch(m.type){case u.TokenType.Declaration:var y=m,v=this.sanitize(y.version);if("1.0"!==v)throw new Error("Invalid xml version: "+v);var _={version:v};y.encoding&&(_.encoding=this.sanitize(y.encoding)),y.standalone&&(_.standalone="yes"===this.sanitize(y.standalone)),d.set(_);break;case u.TokenType.DocType:var g=m;d=this.docType(d,this.sanitize(g.name),this.sanitize(g.pubId),this.sanitize(g.sysId))||d;break;case u.TokenType.CDATA:var b=m;d=this.cdata(d,this.sanitize(b.data))||d;break;case u.TokenType.Comment:var x=m;d=this.comment(d,this.sanitize(x.data))||d;break;case u.TokenType.PI:var w=m;d=this.instruction(d,this.sanitize(w.target),this.sanitize(w.data))||d;break;case u.TokenType.Text:var E=m;d=this.text(d,this._decodeText(this.sanitize(E.data)))||d;break;case u.TokenType.Element:var D=m,S=this.sanitize(D.name),C=o(c.namespace_extractQName(S),1)[0],A=d.node.lookupNamespaceURI(C),N={};try{for(var T=(r=void 0,a(D.attributes)),O=T.next();!O.done;O=T.next()){var F=o(O.value,2),k=F[0],P=F[1];if(k=this.sanitize(k),P=this.sanitize(P),"xmlns"===k)A=P;else{var I=o(c.namespace_extractQName(k),2),L=I[0],M=I[1];"xmlns"===L&&(M===C&&(A=P),N[M]=P)}}}catch(e){r={error:e}}finally{try{O&&!O.done&&(n=T.return)&&n.call(T)}finally{if(r)throw r.error}}var B=null!==A?this.element(d,A,S):this.element(d,void 0,S);if(void 0===B)break;d.node===e.node&&(f=B);try{for(var j=(i=void 0,a(D.attributes)),R=j.next();!R.done;R=j.next()){var z=o(R.value,2);k=z[0],P=z[1];k=this.sanitize(k),P=this.sanitize(P);var U=o(c.namespace_extractQName(k),2),G=(L=U[0],M=U[1],null);"xmlns"===L||null===L&&"xmlns"===M?G=l.namespace.XMLNS:null!==(G=B.node.lookupNamespaceURI(L))&&B.node.isDefaultNamespace(G)?G=null:null===G&&null!==L&&(G=N[L]||null),null!==G?this.attribute(B,G,k,this._decodeAttributeValue(P)):this.attribute(B,void 0,k,this._decodeAttributeValue(P))}}catch(e){i={error:e}}finally{try{R&&!R.done&&(h=j.return)&&h.call(j)}finally{if(i)throw i.error}}D.selfClosing||(d=B);break;case u.TokenType.ClosingTag:d.node.parentNode&&(d=d.up())}m=p.nextToken()}return f},t}(r(75).BaseReader);t.XMLReader=h},function(e,t,r){var n=r(4),i=r(279);n({target:"Object",stat:!0,forced:Object.assign!==i},{assign:i})},function(e,t,r){"use strict";var n=r(16),i=r(8),o=r(61),a=r(85),s=r(79),u=r(27),l=r(41),c=Object.assign,h=Object.defineProperty;e.exports=!c||i((function(){if(n&&1!==c({b:1},c(h({},"a",{enumerable:!0,get:function(){h(this,"b",{value:3,enumerable:!1})}}),{b:2})).b)return!0;var e={},t={},r=Symbol();return e[r]=7,"abcdefghijklmnopqrst".split("").forEach((function(e){t[e]=e})),7!=c({},e)[r]||"abcdefghijklmnopqrst"!=o(c({},t)).join("")}))?function(e,t){for(var r=u(e),i=arguments.length,c=1,h=a.f,p=s.f;i>c;)for(var f,d=l(arguments[c++]),m=h?o(d).concat(h(d)):o(d),y=m.length,v=0;y>v;)f=m[v++],n&&!p.call(d,f)||(r[f]=d[f]);return r}:c},function(e,t,r){"use strict";var n,i=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});Object.defineProperty(t,"__esModule",{value:!0});var o=r(112),a=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return i(t,e),t.prototype._parse=function(e,t){return new o.ObjectReader(this._builderOptions).parse(e,JSON.parse(t))},t}(r(75).BaseReader);t.JSONReader=a},function(e,t,r){"use strict";var n,i=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});Object.defineProperty(t,"__esModule",{value:!0});var o=r(112),a=r(75),s=r(282),u=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return i(t,e),t.prototype._parse=function(e,t){var r=s.safeLoad(t);if(void 0===r)throw new Error("Unable to parse YAML document.");return new o.ObjectReader(this._builderOptions).parse(e,r)},t}(a.BaseReader);t.YAMLReader=u},function(e,t,r){"use strict";var n=r(283);e.exports=n},function(e,t,r){"use strict";var n=r(284),i=r(303);function o(e){return function(){throw new Error("Function "+e+" is deprecated and cannot be used.")}}e.exports.Type=r(10),e.exports.Schema=r(39),e.exports.FAILSAFE_SCHEMA=r(113),e.exports.JSON_SCHEMA=r(182),e.exports.CORE_SCHEMA=r(181),e.exports.DEFAULT_SAFE_SCHEMA=r(54),e.exports.DEFAULT_FULL_SCHEMA=r(76),e.exports.load=n.load,e.exports.loadAll=n.loadAll,e.exports.safeLoad=n.safeLoad,e.exports.safeLoadAll=n.safeLoadAll,e.exports.dump=i.dump,e.exports.safeDump=i.safeDump,e.exports.YAMLException=r(53),e.exports.MINIMAL_SCHEMA=r(113),e.exports.SAFE_SCHEMA=r(54),e.exports.DEFAULT_SCHEMA=r(76),e.exports.scan=o("scan"),e.exports.parse=o("parse"),e.exports.compose=o("compose"),e.exports.addConstructor=o("addConstructor")},function(e,t,r){"use strict";var n=r(38),i=r(53),o=r(285),a=r(54),s=r(76),u=Object.prototype.hasOwnProperty,l=/[\x00-\x08\x0B\x0C\x0E-\x1F\x7F-\x84\x86-\x9F\uFFFE\uFFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/,c=/[\x85\u2028\u2029]/,h=/[,\[\]\{\}]/,p=/^(?:!|!!|![a-z\-]+!)$/i,f=/^(?:!|[^,\[\]\{\}])(?:%[0-9a-f]{2}|[0-9a-z\-#;\/\?:@&=\+\$,_\.!~\*'\(\)\[\]])*$/i;function d(e){return Object.prototype.toString.call(e)}function m(e){return 10===e||13===e}function y(e){return 9===e||32===e}function v(e){return 9===e||32===e||10===e||13===e}function _(e){return 44===e||91===e||93===e||123===e||125===e}function g(e){var t;return 48<=e&&e<=57?e-48:97<=(t=32|e)&&t<=102?t-97+10:-1}function b(e){return 48===e?"\0":97===e?"":98===e?"\b":116===e||9===e?"\t":110===e?"\n":118===e?"\v":102===e?"\f":114===e?"\r":101===e?"":32===e?" ":34===e?'"':47===e?"/":92===e?"\\":78===e?"":95===e?" ":76===e?"\u2028":80===e?"\u2029":""}function x(e){return e<=65535?String.fromCharCode(e):String.fromCharCode(55296+(e-65536>>10),56320+(e-65536&1023))}for(var w=new Array(256),E=new Array(256),D=0;D<256;D++)w[D]=b(D)?1:0,E[D]=b(D);function S(e,t){this.input=e,this.filename=t.filename||null,this.schema=t.schema||s,this.onWarning=t.onWarning||null,this.legacy=t.legacy||!1,this.json=t.json||!1,this.listener=t.listener||null,this.implicitTypes=this.schema.compiledImplicit,this.typeMap=this.schema.compiledTypeMap,this.length=e.length,this.position=0,this.line=0,this.lineStart=0,this.lineIndent=0,this.documents=[]}function C(e,t){return new i(t,new o(e.filename,e.input,e.position,e.line,e.position-e.lineStart))}function A(e,t){throw C(e,t)}function N(e,t){e.onWarning&&e.onWarning.call(null,C(e,t))}var T={YAML:function(e,t,r){var n,i,o;null!==e.version&&A(e,"duplication of %YAML directive"),1!==r.length&&A(e,"YAML directive accepts exactly one argument"),null===(n=/^([0-9]+)\.([0-9]+)$/.exec(r[0]))&&A(e,"ill-formed argument of the YAML directive"),i=parseInt(n[1],10),o=parseInt(n[2],10),1!==i&&A(e,"unacceptable YAML version of the document"),e.version=r[0],e.checkLineBreaks=o<2,1!==o&&2!==o&&N(e,"unsupported YAML version of the document")},TAG:function(e,t,r){var n,i;2!==r.length&&A(e,"TAG directive accepts exactly two arguments"),n=r[0],i=r[1],p.test(n)||A(e,"ill-formed tag handle (first argument) of the TAG directive"),u.call(e.tagMap,n)&&A(e,'there is a previously declared suffix for "'+n+'" tag handle'),f.test(i)||A(e,"ill-formed tag prefix (second argument) of the TAG directive"),e.tagMap[n]=i}};function O(e,t,r,n){var i,o,a,s;if(t<r){if(s=e.input.slice(t,r),n)for(i=0,o=s.length;i<o;i+=1)9===(a=s.charCodeAt(i))||32<=a&&a<=1114111||A(e,"expected valid JSON character");else l.test(s)&&A(e,"the stream contains non-printable characters");e.result+=s}}function F(e,t,r,i){var o,a,s,l;for(n.isObject(r)||A(e,"cannot merge mappings; the provided source object is unacceptable"),s=0,l=(o=Object.keys(r)).length;s<l;s+=1)a=o[s],u.call(t,a)||(t[a]=r[a],i[a]=!0)}function k(e,t,r,n,i,o,a,s){var l,c;if(Array.isArray(i))for(l=0,c=(i=Array.prototype.slice.call(i)).length;l<c;l+=1)Array.isArray(i[l])&&A(e,"nested arrays are not supported inside keys"),"object"==typeof i&&"[object Object]"===d(i[l])&&(i[l]="[object Object]");if("object"==typeof i&&"[object Object]"===d(i)&&(i="[object Object]"),i=String(i),null===t&&(t={}),"tag:yaml.org,2002:merge"===n)if(Array.isArray(o))for(l=0,c=o.length;l<c;l+=1)F(e,t,o[l],r);else F(e,t,o,r);else e.json||u.call(r,i)||!u.call(t,i)||(e.line=a||e.line,e.position=s||e.position,A(e,"duplicated mapping key")),t[i]=o,delete r[i];return t}function P(e){var t;10===(t=e.input.charCodeAt(e.position))?e.position++:13===t?(e.position++,10===e.input.charCodeAt(e.position)&&e.position++):A(e,"a line break is expected"),e.line+=1,e.lineStart=e.position}function I(e,t,r){for(var n=0,i=e.input.charCodeAt(e.position);0!==i;){for(;y(i);)i=e.input.charCodeAt(++e.position);if(t&&35===i)do{i=e.input.charCodeAt(++e.position)}while(10!==i&&13!==i&&0!==i);if(!m(i))break;for(P(e),i=e.input.charCodeAt(e.position),n++,e.lineIndent=0;32===i;)e.lineIndent++,i=e.input.charCodeAt(++e.position)}return-1!==r&&0!==n&&e.lineIndent<r&&N(e,"deficient indentation"),n}function L(e){var t,r=e.position;return!(45!==(t=e.input.charCodeAt(r))&&46!==t||t!==e.input.charCodeAt(r+1)||t!==e.input.charCodeAt(r+2)||(r+=3,0!==(t=e.input.charCodeAt(r))&&!v(t)))}function M(e,t){1===t?e.result+=" ":t>1&&(e.result+=n.repeat("\n",t-1))}function B(e,t){var r,n,i=e.tag,o=e.anchor,a=[],s=!1;for(null!==e.anchor&&(e.anchorMap[e.anchor]=a),n=e.input.charCodeAt(e.position);0!==n&&45===n&&v(e.input.charCodeAt(e.position+1));)if(s=!0,e.position++,I(e,!0,-1)&&e.lineIndent<=t)a.push(null),n=e.input.charCodeAt(e.position);else if(r=e.line,z(e,t,3,!1,!0),a.push(e.result),I(e,!0,-1),n=e.input.charCodeAt(e.position),(e.line===r||e.lineIndent>t)&&0!==n)A(e,"bad indentation of a sequence entry");else if(e.lineIndent<t)break;return!!s&&(e.tag=i,e.anchor=o,e.kind="sequence",e.result=a,!0)}function j(e){var t,r,n,i,o=!1,a=!1;if(33!==(i=e.input.charCodeAt(e.position)))return!1;if(null!==e.tag&&A(e,"duplication of a tag property"),60===(i=e.input.charCodeAt(++e.position))?(o=!0,i=e.input.charCodeAt(++e.position)):33===i?(a=!0,r="!!",i=e.input.charCodeAt(++e.position)):r="!",t=e.position,o){do{i=e.input.charCodeAt(++e.position)}while(0!==i&&62!==i);e.position<e.length?(n=e.input.slice(t,e.position),i=e.input.charCodeAt(++e.position)):A(e,"unexpected end of the stream within a verbatim tag")}else{for(;0!==i&&!v(i);)33===i&&(a?A(e,"tag suffix cannot contain exclamation marks"):(r=e.input.slice(t-1,e.position+1),p.test(r)||A(e,"named tag handle cannot contain such characters"),a=!0,t=e.position+1)),i=e.input.charCodeAt(++e.position);n=e.input.slice(t,e.position),h.test(n)&&A(e,"tag suffix cannot contain flow indicator characters")}return n&&!f.test(n)&&A(e,"tag name cannot contain such characters: "+n),o?e.tag=n:u.call(e.tagMap,r)?e.tag=e.tagMap[r]+n:"!"===r?e.tag="!"+n:"!!"===r?e.tag="tag:yaml.org,2002:"+n:A(e,'undeclared tag handle "'+r+'"'),!0}function R(e){var t,r;if(38!==(r=e.input.charCodeAt(e.position)))return!1;for(null!==e.anchor&&A(e,"duplication of an anchor property"),r=e.input.charCodeAt(++e.position),t=e.position;0!==r&&!v(r)&&!_(r);)r=e.input.charCodeAt(++e.position);return e.position===t&&A(e,"name of an anchor node must contain at least one character"),e.anchor=e.input.slice(t,e.position),!0}function z(e,t,r,i,o){var a,s,l,c,h,p,f,d,b=1,D=!1,S=!1;if(null!==e.listener&&e.listener("open",e),e.tag=null,e.anchor=null,e.kind=null,e.result=null,a=s=l=4===r||3===r,i&&I(e,!0,-1)&&(D=!0,e.lineIndent>t?b=1:e.lineIndent===t?b=0:e.lineIndent<t&&(b=-1)),1===b)for(;j(e)||R(e);)I(e,!0,-1)?(D=!0,l=a,e.lineIndent>t?b=1:e.lineIndent===t?b=0:e.lineIndent<t&&(b=-1)):l=!1;if(l&&(l=D||o),1!==b&&4!==r||(f=1===r||2===r?t:t+1,d=e.position-e.lineStart,1===b?l&&(B(e,d)||function(e,t,r){var n,i,o,a,s,u=e.tag,l=e.anchor,c={},h={},p=null,f=null,d=null,m=!1,_=!1;for(null!==e.anchor&&(e.anchorMap[e.anchor]=c),s=e.input.charCodeAt(e.position);0!==s;){if(n=e.input.charCodeAt(e.position+1),o=e.line,a=e.position,63!==s&&58!==s||!v(n)){if(!z(e,r,2,!1,!0))break;if(e.line===o){for(s=e.input.charCodeAt(e.position);y(s);)s=e.input.charCodeAt(++e.position);if(58===s)v(s=e.input.charCodeAt(++e.position))||A(e,"a whitespace character is expected after the key-value separator within a block mapping"),m&&(k(e,c,h,p,f,null),p=f=d=null),_=!0,m=!1,i=!1,p=e.tag,f=e.result;else{if(!_)return e.tag=u,e.anchor=l,!0;A(e,"can not read an implicit mapping pair; a colon is missed")}}else{if(!_)return e.tag=u,e.anchor=l,!0;A(e,"can not read a block mapping entry; a multiline key may not be an implicit key")}}else 63===s?(m&&(k(e,c,h,p,f,null),p=f=d=null),_=!0,m=!0,i=!0):m?(m=!1,i=!0):A(e,"incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line"),e.position+=1,s=n;if((e.line===o||e.lineIndent>t)&&(z(e,t,4,!0,i)&&(m?f=e.result:d=e.result),m||(k(e,c,h,p,f,d,o,a),p=f=d=null),I(e,!0,-1),s=e.input.charCodeAt(e.position)),e.lineIndent>t&&0!==s)A(e,"bad indentation of a mapping entry");else if(e.lineIndent<t)break}return m&&k(e,c,h,p,f,null),_&&(e.tag=u,e.anchor=l,e.kind="mapping",e.result=c),_}(e,d,f))||function(e,t){var r,n,i,o,a,s,u,l,c,h,p=!0,f=e.tag,d=e.anchor,m={};if(91===(h=e.input.charCodeAt(e.position)))i=93,s=!1,n=[];else{if(123!==h)return!1;i=125,s=!0,n={}}for(null!==e.anchor&&(e.anchorMap[e.anchor]=n),h=e.input.charCodeAt(++e.position);0!==h;){if(I(e,!0,t),(h=e.input.charCodeAt(e.position))===i)return e.position++,e.tag=f,e.anchor=d,e.kind=s?"mapping":"sequence",e.result=n,!0;p||A(e,"missed comma between flow collection entries"),c=null,o=a=!1,63===h&&v(e.input.charCodeAt(e.position+1))&&(o=a=!0,e.position++,I(e,!0,t)),r=e.line,z(e,t,1,!1,!0),l=e.tag,u=e.result,I(e,!0,t),h=e.input.charCodeAt(e.position),!a&&e.line!==r||58!==h||(o=!0,h=e.input.charCodeAt(++e.position),I(e,!0,t),z(e,t,1,!1,!0),c=e.result),s?k(e,n,m,l,u,c):o?n.push(k(e,null,m,l,u,c)):n.push(u),I(e,!0,t),44===(h=e.input.charCodeAt(e.position))?(p=!0,h=e.input.charCodeAt(++e.position)):p=!1}A(e,"unexpected end of the stream within a flow collection")}(e,f)?S=!0:(s&&function(e,t){var r,i,o,a,s,u=1,l=!1,c=!1,h=t,p=0,f=!1;if(124===(a=e.input.charCodeAt(e.position)))i=!1;else{if(62!==a)return!1;i=!0}for(e.kind="scalar",e.result="";0!==a;)if(43===(a=e.input.charCodeAt(++e.position))||45===a)1===u?u=43===a?3:2:A(e,"repeat of a chomping mode identifier");else{if(!((o=48<=(s=a)&&s<=57?s-48:-1)>=0))break;0===o?A(e,"bad explicit indentation width of a block scalar; it cannot be less than one"):c?A(e,"repeat of an indentation width identifier"):(h=t+o-1,c=!0)}if(y(a)){do{a=e.input.charCodeAt(++e.position)}while(y(a));if(35===a)do{a=e.input.charCodeAt(++e.position)}while(!m(a)&&0!==a)}for(;0!==a;){for(P(e),e.lineIndent=0,a=e.input.charCodeAt(e.position);(!c||e.lineIndent<h)&&32===a;)e.lineIndent++,a=e.input.charCodeAt(++e.position);if(!c&&e.lineIndent>h&&(h=e.lineIndent),m(a))p++;else{if(e.lineIndent<h){3===u?e.result+=n.repeat("\n",l?1+p:p):1===u&&l&&(e.result+="\n");break}for(i?y(a)?(f=!0,e.result+=n.repeat("\n",l?1+p:p)):f?(f=!1,e.result+=n.repeat("\n",p+1)):0===p?l&&(e.result+=" "):e.result+=n.repeat("\n",p):e.result+=n.repeat("\n",l?1+p:p),l=!0,c=!0,p=0,r=e.position;!m(a)&&0!==a;)a=e.input.charCodeAt(++e.position);O(e,r,e.position,!1)}}return!0}(e,f)||function(e,t){var r,n,i;if(39!==(r=e.input.charCodeAt(e.position)))return!1;for(e.kind="scalar",e.result="",e.position++,n=i=e.position;0!==(r=e.input.charCodeAt(e.position));)if(39===r){if(O(e,n,e.position,!0),39!==(r=e.input.charCodeAt(++e.position)))return!0;n=e.position,e.position++,i=e.position}else m(r)?(O(e,n,i,!0),M(e,I(e,!1,t)),n=i=e.position):e.position===e.lineStart&&L(e)?A(e,"unexpected end of the document within a single quoted scalar"):(e.position++,i=e.position);A(e,"unexpected end of the stream within a single quoted scalar")}(e,f)||function(e,t){var r,n,i,o,a,s,u;if(34!==(s=e.input.charCodeAt(e.position)))return!1;for(e.kind="scalar",e.result="",e.position++,r=n=e.position;0!==(s=e.input.charCodeAt(e.position));){if(34===s)return O(e,r,e.position,!0),e.position++,!0;if(92===s){if(O(e,r,e.position,!0),m(s=e.input.charCodeAt(++e.position)))I(e,!1,t);else if(s<256&&w[s])e.result+=E[s],e.position++;else if((a=120===(u=s)?2:117===u?4:85===u?8:0)>0){for(i=a,o=0;i>0;i--)(a=g(s=e.input.charCodeAt(++e.position)))>=0?o=(o<<4)+a:A(e,"expected hexadecimal character");e.result+=x(o),e.position++}else A(e,"unknown escape sequence");r=n=e.position}else m(s)?(O(e,r,n,!0),M(e,I(e,!1,t)),r=n=e.position):e.position===e.lineStart&&L(e)?A(e,"unexpected end of the document within a double quoted scalar"):(e.position++,n=e.position)}A(e,"unexpected end of the stream within a double quoted scalar")}(e,f)?S=!0:!function(e){var t,r,n;if(42!==(n=e.input.charCodeAt(e.position)))return!1;for(n=e.input.charCodeAt(++e.position),t=e.position;0!==n&&!v(n)&&!_(n);)n=e.input.charCodeAt(++e.position);return e.position===t&&A(e,"name of an alias node must contain at least one character"),r=e.input.slice(t,e.position),e.anchorMap.hasOwnProperty(r)||A(e,'unidentified alias "'+r+'"'),e.result=e.anchorMap[r],I(e,!0,-1),!0}(e)?function(e,t,r){var n,i,o,a,s,u,l,c,h=e.kind,p=e.result;if(v(c=e.input.charCodeAt(e.position))||_(c)||35===c||38===c||42===c||33===c||124===c||62===c||39===c||34===c||37===c||64===c||96===c)return!1;if((63===c||45===c)&&(v(n=e.input.charCodeAt(e.position+1))||r&&_(n)))return!1;for(e.kind="scalar",e.result="",i=o=e.position,a=!1;0!==c;){if(58===c){if(v(n=e.input.charCodeAt(e.position+1))||r&&_(n))break}else if(35===c){if(v(e.input.charCodeAt(e.position-1)))break}else{if(e.position===e.lineStart&&L(e)||r&&_(c))break;if(m(c)){if(s=e.line,u=e.lineStart,l=e.lineIndent,I(e,!1,-1),e.lineIndent>=t){a=!0,c=e.input.charCodeAt(e.position);continue}e.position=o,e.line=s,e.lineStart=u,e.lineIndent=l;break}}a&&(O(e,i,o,!1),M(e,e.line-s),i=o=e.position,a=!1),y(c)||(o=e.position+1),c=e.input.charCodeAt(++e.position)}return O(e,i,o,!1),!!e.result||(e.kind=h,e.result=p,!1)}(e,f,1===r)&&(S=!0,null===e.tag&&(e.tag="?")):(S=!0,null===e.tag&&null===e.anchor||A(e,"alias node should not have any properties")),null!==e.anchor&&(e.anchorMap[e.anchor]=e.result)):0===b&&(S=l&&B(e,d))),null!==e.tag&&"!"!==e.tag)if("?"===e.tag){for(null!==e.result&&"scalar"!==e.kind&&A(e,'unacceptable node kind for !<?> tag; it should be "scalar", not "'+e.kind+'"'),c=0,h=e.implicitTypes.length;c<h;c+=1)if((p=e.implicitTypes[c]).resolve(e.result)){e.result=p.construct(e.result),e.tag=p.tag,null!==e.anchor&&(e.anchorMap[e.anchor]=e.result);break}}else u.call(e.typeMap[e.kind||"fallback"],e.tag)?(p=e.typeMap[e.kind||"fallback"][e.tag],null!==e.result&&p.kind!==e.kind&&A(e,"unacceptable node kind for !<"+e.tag+'> tag; it should be "'+p.kind+'", not "'+e.kind+'"'),p.resolve(e.result)?(e.result=p.construct(e.result),null!==e.anchor&&(e.anchorMap[e.anchor]=e.result)):A(e,"cannot resolve a node with !<"+e.tag+"> explicit tag")):A(e,"unknown tag !<"+e.tag+">");return null!==e.listener&&e.listener("close",e),null!==e.tag||null!==e.anchor||S}function U(e){var t,r,n,i,o=e.position,a=!1;for(e.version=null,e.checkLineBreaks=e.legacy,e.tagMap={},e.anchorMap={};0!==(i=e.input.charCodeAt(e.position))&&(I(e,!0,-1),i=e.input.charCodeAt(e.position),!(e.lineIndent>0||37!==i));){for(a=!0,i=e.input.charCodeAt(++e.position),t=e.position;0!==i&&!v(i);)i=e.input.charCodeAt(++e.position);for(n=[],(r=e.input.slice(t,e.position)).length<1&&A(e,"directive name must not be less than one character in length");0!==i;){for(;y(i);)i=e.input.charCodeAt(++e.position);if(35===i){do{i=e.input.charCodeAt(++e.position)}while(0!==i&&!m(i));break}if(m(i))break;for(t=e.position;0!==i&&!v(i);)i=e.input.charCodeAt(++e.position);n.push(e.input.slice(t,e.position))}0!==i&&P(e),u.call(T,r)?T[r](e,r,n):N(e,'unknown document directive "'+r+'"')}I(e,!0,-1),0===e.lineIndent&&45===e.input.charCodeAt(e.position)&&45===e.input.charCodeAt(e.position+1)&&45===e.input.charCodeAt(e.position+2)?(e.position+=3,I(e,!0,-1)):a&&A(e,"directives end mark is expected"),z(e,e.lineIndent-1,4,!1,!0),I(e,!0,-1),e.checkLineBreaks&&c.test(e.input.slice(o,e.position))&&N(e,"non-ASCII line breaks are interpreted as content"),e.documents.push(e.result),e.position===e.lineStart&&L(e)?46===e.input.charCodeAt(e.position)&&(e.position+=3,I(e,!0,-1)):e.position<e.length-1&&A(e,"end of the stream or a document separator is expected")}function G(e,t){t=t||{},0!==(e=String(e)).length&&(10!==e.charCodeAt(e.length-1)&&13!==e.charCodeAt(e.length-1)&&(e+="\n"),65279===e.charCodeAt(0)&&(e=e.slice(1)));var r=new S(e,t),n=e.indexOf("\0");for(-1!==n&&(r.position=n,A(r,"null byte is not allowed in input")),r.input+="\0";32===r.input.charCodeAt(r.position);)r.lineIndent+=1,r.position+=1;for(;r.position<r.length-1;)U(r);return r.documents}function X(e,t,r){null!==t&&"object"==typeof t&&void 0===r&&(r=t,t=null);var n=G(e,r);if("function"!=typeof t)return n;for(var i=0,o=n.length;i<o;i+=1)t(n[i])}function q(e,t){var r=G(e,t);if(0!==r.length){if(1===r.length)return r[0];throw new i("expected a single document in the stream, but found more")}}e.exports.loadAll=X,e.exports.load=q,e.exports.safeLoadAll=function(e,t,r){return"object"==typeof t&&null!==t&&void 0===r&&(r=t,t=null),X(e,t,n.extend({schema:a},r))},e.exports.safeLoad=function(e,t){return q(e,n.extend({schema:a},t))}},function(e,t,r){"use strict";var n=r(38);function i(e,t,r,n,i){this.name=e,this.buffer=t,this.position=r,this.line=n,this.column=i}i.prototype.getSnippet=function(e,t){var r,i,o,a,s;if(!this.buffer)return null;for(e=e||4,t=t||75,r="",i=this.position;i>0&&-1==="\0\r\n\u2028\u2029".indexOf(this.buffer.charAt(i-1));)if(i-=1,this.position-i>t/2-1){r=" ... ",i+=5;break}for(o="",a=this.position;a<this.buffer.length&&-1==="\0\r\n\u2028\u2029".indexOf(this.buffer.charAt(a));)if((a+=1)-this.position>t/2-1){o=" ... ",a-=5;break}return s=this.buffer.slice(i,a),n.repeat(" ",e)+r+s+o+"\n"+n.repeat(" ",e+this.position-i+r.length)+"^"},i.prototype.toString=function(e){var t,r="";return this.name&&(r+='in "'+this.name+'" '),r+="at line "+(this.line+1)+", column "+(this.column+1),e||(t=this.getSnippet())&&(r+=":\n"+t),r},e.exports=i},function(e,t,r){"use strict";var n=r(10);e.exports=new n("tag:yaml.org,2002:str",{kind:"scalar",construct:function(e){return null!==e?e:""}})},function(e,t,r){"use strict";var n=r(10);e.exports=new n("tag:yaml.org,2002:seq",{kind:"sequence",construct:function(e){return null!==e?e:[]}})},function(e,t,r){"use strict";var n=r(10);e.exports=new n("tag:yaml.org,2002:map",{kind:"mapping",construct:function(e){return null!==e?e:{}}})},function(e,t,r){"use strict";var n=r(10);e.exports=new n("tag:yaml.org,2002:null",{kind:"scalar",resolve:function(e){if(null===e)return!0;var t=e.length;return 1===t&&"~"===e||4===t&&("null"===e||"Null"===e||"NULL"===e)},construct:function(){return null},predicate:function(e){return null===e},represent:{canonical:function(){return"~"},lowercase:function(){return"null"},uppercase:function(){return"NULL"},camelcase:function(){return"Null"}},defaultStyle:"lowercase"})},function(e,t,r){"use strict";var n=r(10);e.exports=new n("tag:yaml.org,2002:bool",{kind:"scalar",resolve:function(e){if(null===e)return!1;var t=e.length;return 4===t&&("true"===e||"True"===e||"TRUE"===e)||5===t&&("false"===e||"False"===e||"FALSE"===e)},construct:function(e){return"true"===e||"True"===e||"TRUE"===e},predicate:function(e){return"[object Boolean]"===Object.prototype.toString.call(e)},represent:{lowercase:function(e){return e?"true":"false"},uppercase:function(e){return e?"TRUE":"FALSE"},camelcase:function(e){return e?"True":"False"}},defaultStyle:"lowercase"})},function(e,t,r){"use strict";var n=r(38),i=r(10);function o(e){return 48<=e&&e<=55}function a(e){return 48<=e&&e<=57}e.exports=new i("tag:yaml.org,2002:int",{kind:"scalar",resolve:function(e){if(null===e)return!1;var t,r,n=e.length,i=0,s=!1;if(!n)return!1;if("-"!==(t=e[i])&&"+"!==t||(t=e[++i]),"0"===t){if(i+1===n)return!0;if("b"===(t=e[++i])){for(i++;i<n;i++)if("_"!==(t=e[i])){if("0"!==t&&"1"!==t)return!1;s=!0}return s&&"_"!==t}if("x"===t){for(i++;i<n;i++)if("_"!==(t=e[i])){if(!(48<=(r=e.charCodeAt(i))&&r<=57||65<=r&&r<=70||97<=r&&r<=102))return!1;s=!0}return s&&"_"!==t}for(;i<n;i++)if("_"!==(t=e[i])){if(!o(e.charCodeAt(i)))return!1;s=!0}return s&&"_"!==t}if("_"===t)return!1;for(;i<n;i++)if("_"!==(t=e[i])){if(":"===t)break;if(!a(e.charCodeAt(i)))return!1;s=!0}return!(!s||"_"===t)&&(":"!==t||/^(:[0-5]?[0-9])+$/.test(e.slice(i)))},construct:function(e){var t,r,n=e,i=1,o=[];return-1!==n.indexOf("_")&&(n=n.replace(/_/g,"")),"-"!==(t=n[0])&&"+"!==t||("-"===t&&(i=-1),t=(n=n.slice(1))[0]),"0"===n?0:"0"===t?"b"===n[1]?i*parseInt(n.slice(2),2):"x"===n[1]?i*parseInt(n,16):i*parseInt(n,8):-1!==n.indexOf(":")?(n.split(":").forEach((function(e){o.unshift(parseInt(e,10))})),n=0,r=1,o.forEach((function(e){n+=e*r,r*=60})),i*n):i*parseInt(n,10)},predicate:function(e){return"[object Number]"===Object.prototype.toString.call(e)&&e%1==0&&!n.isNegativeZero(e)},represent:{binary:function(e){return e>=0?"0b"+e.toString(2):"-0b"+e.toString(2).slice(1)},octal:function(e){return e>=0?"0"+e.toString(8):"-0"+e.toString(8).slice(1)},decimal:function(e){return e.toString(10)},hexadecimal:function(e){return e>=0?"0x"+e.toString(16).toUpperCase():"-0x"+e.toString(16).toUpperCase().slice(1)}},defaultStyle:"decimal",styleAliases:{binary:[2,"bin"],octal:[8,"oct"],decimal:[10,"dec"],hexadecimal:[16,"hex"]}})},function(e,t,r){"use strict";var n=r(38),i=r(10),o=new RegExp("^(?:[-+]?(?:0|[1-9][0-9_]*)(?:\\.[0-9_]*)?(?:[eE][-+]?[0-9]+)?|\\.[0-9_]+(?:[eE][-+]?[0-9]+)?|[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+\\.[0-9_]*|[-+]?\\.(?:inf|Inf|INF)|\\.(?:nan|NaN|NAN))$");var a=/^[-+]?[0-9]+e/;e.exports=new i("tag:yaml.org,2002:float",{kind:"scalar",resolve:function(e){return null!==e&&!(!o.test(e)||"_"===e[e.length-1])},construct:function(e){var t,r,n,i;return r="-"===(t=e.replace(/_/g,"").toLowerCase())[0]?-1:1,i=[],"+-".indexOf(t[0])>=0&&(t=t.slice(1)),".inf"===t?1===r?Number.POSITIVE_INFINITY:Number.NEGATIVE_INFINITY:".nan"===t?NaN:t.indexOf(":")>=0?(t.split(":").forEach((function(e){i.unshift(parseFloat(e,10))})),t=0,n=1,i.forEach((function(e){t+=e*n,n*=60})),r*t):r*parseFloat(t,10)},predicate:function(e){return"[object Number]"===Object.prototype.toString.call(e)&&(e%1!=0||n.isNegativeZero(e))},represent:function(e,t){var r;if(isNaN(e))switch(t){case"lowercase":return".nan";case"uppercase":return".NAN";case"camelcase":return".NaN"}else if(Number.POSITIVE_INFINITY===e)switch(t){case"lowercase":return".inf";case"uppercase":return".INF";case"camelcase":return".Inf"}else if(Number.NEGATIVE_INFINITY===e)switch(t){case"lowercase":return"-.inf";case"uppercase":return"-.INF";case"camelcase":return"-.Inf"}else if(n.isNegativeZero(e))return"-0.0";return r=e.toString(10),a.test(r)?r.replace("e",".e"):r},defaultStyle:"lowercase"})},function(e,t,r){"use strict";var n=r(10),i=new RegExp("^([0-9][0-9][0-9][0-9])-([0-9][0-9])-([0-9][0-9])$"),o=new RegExp("^([0-9][0-9][0-9][0-9])-([0-9][0-9]?)-([0-9][0-9]?)(?:[Tt]|[ \\t]+)([0-9][0-9]?):([0-9][0-9]):([0-9][0-9])(?:\\.([0-9]*))?(?:[ \\t]*(Z|([-+])([0-9][0-9]?)(?::([0-9][0-9]))?))?$");e.exports=new n("tag:yaml.org,2002:timestamp",{kind:"scalar",resolve:function(e){return null!==e&&(null!==i.exec(e)||null!==o.exec(e))},construct:function(e){var t,r,n,a,s,u,l,c,h=0,p=null;if(null===(t=i.exec(e))&&(t=o.exec(e)),null===t)throw new Error("Date resolve error");if(r=+t[1],n=+t[2]-1,a=+t[3],!t[4])return new Date(Date.UTC(r,n,a));if(s=+t[4],u=+t[5],l=+t[6],t[7]){for(h=t[7].slice(0,3);h.length<3;)h+="0";h=+h}return t[9]&&(p=6e4*(60*+t[10]+ +(t[11]||0)),"-"===t[9]&&(p=-p)),c=new Date(Date.UTC(r,n,a,s,u,l,h)),p&&c.setTime(c.getTime()-p),c},instanceOf:Date,represent:function(e){return e.toISOString()}})},function(e,t,r){"use strict";var n=r(10);e.exports=new n("tag:yaml.org,2002:merge",{kind:"scalar",resolve:function(e){return"<<"===e||null===e}})},function(e,t,r){"use strict";var n;try{n=r(145).Buffer}catch(e){}var i=r(10),o="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\n\r";e.exports=new i("tag:yaml.org,2002:binary",{kind:"scalar",resolve:function(e){if(null===e)return!1;var t,r,n=0,i=e.length,a=o;for(r=0;r<i;r++)if(!((t=a.indexOf(e.charAt(r)))>64)){if(t<0)return!1;n+=6}return n%8==0},construct:function(e){var t,r,i=e.replace(/[\r\n=]/g,""),a=i.length,s=o,u=0,l=[];for(t=0;t<a;t++)t%4==0&&t&&(l.push(u>>16&255),l.push(u>>8&255),l.push(255&u)),u=u<<6|s.indexOf(i.charAt(t));return 0===(r=a%4*6)?(l.push(u>>16&255),l.push(u>>8&255),l.push(255&u)):18===r?(l.push(u>>10&255),l.push(u>>2&255)):12===r&&l.push(u>>4&255),n?n.from?n.from(l):new n(l):l},predicate:function(e){return n&&n.isBuffer(e)},represent:function(e){var t,r,n="",i=0,a=e.length,s=o;for(t=0;t<a;t++)t%3==0&&t&&(n+=s[i>>18&63],n+=s[i>>12&63],n+=s[i>>6&63],n+=s[63&i]),i=(i<<8)+e[t];return 0===(r=a%3)?(n+=s[i>>18&63],n+=s[i>>12&63],n+=s[i>>6&63],n+=s[63&i]):2===r?(n+=s[i>>10&63],n+=s[i>>4&63],n+=s[i<<2&63],n+=s[64]):1===r&&(n+=s[i>>2&63],n+=s[i<<4&63],n+=s[64],n+=s[64]),n}})},function(e,t,r){"use strict";var n=r(10),i=Object.prototype.hasOwnProperty,o=Object.prototype.toString;e.exports=new n("tag:yaml.org,2002:omap",{kind:"sequence",resolve:function(e){if(null===e)return!0;var t,r,n,a,s,u=[],l=e;for(t=0,r=l.length;t<r;t+=1){if(n=l[t],s=!1,"[object Object]"!==o.call(n))return!1;for(a in n)if(i.call(n,a)){if(s)return!1;s=!0}if(!s)return!1;if(-1!==u.indexOf(a))return!1;u.push(a)}return!0},construct:function(e){return null!==e?e:[]}})},function(e,t,r){"use strict";var n=r(10),i=Object.prototype.toString;e.exports=new n("tag:yaml.org,2002:pairs",{kind:"sequence",resolve:function(e){if(null===e)return!0;var t,r,n,o,a,s=e;for(a=new Array(s.length),t=0,r=s.length;t<r;t+=1){if(n=s[t],"[object Object]"!==i.call(n))return!1;if(1!==(o=Object.keys(n)).length)return!1;a[t]=[o[0],n[o[0]]]}return!0},construct:function(e){if(null===e)return[];var t,r,n,i,o,a=e;for(o=new Array(a.length),t=0,r=a.length;t<r;t+=1)n=a[t],i=Object.keys(n),o[t]=[i[0],n[i[0]]];return o}})},function(e,t,r){"use strict";var n=r(10),i=Object.prototype.hasOwnProperty;e.exports=new n("tag:yaml.org,2002:set",{kind:"mapping",resolve:function(e){if(null===e)return!0;var t,r=e;for(t in r)if(i.call(r,t)&&null!==r[t])return!1;return!0},construct:function(e){return null!==e?e:{}}})},function(e,t,r){"use strict";var n=r(10);e.exports=new n("tag:yaml.org,2002:js/undefined",{kind:"scalar",resolve:function(){return!0},construct:function(){},predicate:function(e){return void 0===e},represent:function(){return""}})},function(e,t,r){"use strict";var n=r(10);e.exports=new n("tag:yaml.org,2002:js/regexp",{kind:"scalar",resolve:function(e){if(null===e)return!1;if(0===e.length)return!1;var t=e,r=/\/([gim]*)$/.exec(e),n="";if("/"===t[0]){if(r&&(n=r[1]),n.length>3)return!1;if("/"!==t[t.length-n.length-1])return!1}return!0},construct:function(e){var t=e,r=/\/([gim]*)$/.exec(e),n="";return"/"===t[0]&&(r&&(n=r[1]),t=t.slice(1,t.length-n.length-1)),new RegExp(t,n)},predicate:function(e){return"[object RegExp]"===Object.prototype.toString.call(e)},represent:function(e){var t="/"+e.source+"/";return e.global&&(t+="g"),e.multiline&&(t+="m"),e.ignoreCase&&(t+="i"),t}})},function(e,t,r){"use strict";var n;try{n=r(302)}catch(e){"undefined"!=typeof window&&(n=window.esprima)}var i=r(10);e.exports=new i("tag:yaml.org,2002:js/function",{kind:"scalar",resolve:function(e){if(null===e)return!1;try{var t="("+e+")",r=n.parse(t,{range:!0});return"Program"===r.type&&1===r.body.length&&"ExpressionStatement"===r.body[0].type&&("ArrowFunctionExpression"===r.body[0].expression.type||"FunctionExpression"===r.body[0].expression.type)}catch(e){return!1}},construct:function(e){var t,r="("+e+")",i=n.parse(r,{range:!0}),o=[];if("Program"!==i.type||1!==i.body.length||"ExpressionStatement"!==i.body[0].type||"ArrowFunctionExpression"!==i.body[0].expression.type&&"FunctionExpression"!==i.body[0].expression.type)throw new Error("Failed to resolve function");return i.body[0].expression.params.forEach((function(e){o.push(e.name)})),t=i.body[0].expression.body.range,"BlockStatement"===i.body[0].expression.body.type?new Function(o,r.slice(t[0]+1,t[1]-1)):new Function(o,"return "+r.slice(t[0],t[1]))},predicate:function(e){return"[object Function]"===Object.prototype.toString.call(e)},represent:function(e){return e.toString()}})},function(e,t,r){var n;n=function(){return function(e){var t={};function r(n){if(t[n])return t[n].exports;var i=t[n]={exports:{},id:n,loaded:!1};return e[n].call(i.exports,i,i.exports,r),i.loaded=!0,i.exports}return r.m=e,r.c=t,r.p="",r(0)}([function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(1),i=r(3),o=r(8),a=r(15);function s(e,t,r){var a=null,s=function(e,t){r&&r(e,t),a&&a.visit(e,t)},u="function"==typeof r?s:null,l=!1;if(t){l="boolean"==typeof t.comment&&t.comment;var c="boolean"==typeof t.attachComment&&t.attachComment;(l||c)&&((a=new n.CommentHandler).attach=c,t.comment=!0,u=s)}var h,p=!1;t&&"string"==typeof t.sourceType&&(p="module"===t.sourceType),h=t&&"boolean"==typeof t.jsx&&t.jsx?new i.JSXParser(e,t,u):new o.Parser(e,t,u);var f=p?h.parseModule():h.parseScript();return l&&a&&(f.comments=a.comments),h.config.tokens&&(f.tokens=h.tokens),h.config.tolerant&&(f.errors=h.errorHandler.errors),f}t.parse=s,t.parseModule=function(e,t,r){var n=t||{};return n.sourceType="module",s(e,n,r)},t.parseScript=function(e,t,r){var n=t||{};return n.sourceType="script",s(e,n,r)},t.tokenize=function(e,t,r){var n,i=new a.Tokenizer(e,t);n=[];try{for(;;){var o=i.getNextToken();if(!o)break;r&&(o=r(o)),n.push(o)}}catch(e){i.errorHandler.tolerate(e)}return i.errorHandler.tolerant&&(n.errors=i.errors()),n};var u=r(2);t.Syntax=u.Syntax,t.version="4.0.1"},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(2),i=function(){function e(){this.attach=!1,this.comments=[],this.stack=[],this.leading=[],this.trailing=[]}return e.prototype.insertInnerComments=function(e,t){if(e.type===n.Syntax.BlockStatement&&0===e.body.length){for(var r=[],i=this.leading.length-1;i>=0;--i){var o=this.leading[i];t.end.offset>=o.start&&(r.unshift(o.comment),this.leading.splice(i,1),this.trailing.splice(i,1))}r.length&&(e.innerComments=r)}},e.prototype.findTrailingComments=function(e){var t=[];if(this.trailing.length>0){for(var r=this.trailing.length-1;r>=0;--r){var n=this.trailing[r];n.start>=e.end.offset&&t.unshift(n.comment)}return this.trailing.length=0,t}var i=this.stack[this.stack.length-1];if(i&&i.node.trailingComments){var o=i.node.trailingComments[0];o&&o.range[0]>=e.end.offset&&(t=i.node.trailingComments,delete i.node.trailingComments)}return t},e.prototype.findLeadingComments=function(e){for(var t,r=[];this.stack.length>0&&((o=this.stack[this.stack.length-1])&&o.start>=e.start.offset);)t=o.node,this.stack.pop();if(t){for(var n=(t.leadingComments?t.leadingComments.length:0)-1;n>=0;--n){var i=t.leadingComments[n];i.range[1]<=e.start.offset&&(r.unshift(i),t.leadingComments.splice(n,1))}return t.leadingComments&&0===t.leadingComments.length&&delete t.leadingComments,r}for(n=this.leading.length-1;n>=0;--n){var o;(o=this.leading[n]).start<=e.start.offset&&(r.unshift(o.comment),this.leading.splice(n,1))}return r},e.prototype.visitNode=function(e,t){if(!(e.type===n.Syntax.Program&&e.body.length>0)){this.insertInnerComments(e,t);var r=this.findTrailingComments(t),i=this.findLeadingComments(t);i.length>0&&(e.leadingComments=i),r.length>0&&(e.trailingComments=r),this.stack.push({node:e,start:t.start.offset})}},e.prototype.visitComment=function(e,t){var r="L"===e.type[0]?"Line":"Block",n={type:r,value:e.value};if(e.range&&(n.range=e.range),e.loc&&(n.loc=e.loc),this.comments.push(n),this.attach){var i={comment:{type:r,value:e.value,range:[t.start.offset,t.end.offset]},start:t.start.offset};e.loc&&(i.comment.loc=e.loc),e.type=r,this.leading.push(i),this.trailing.push(i)}},e.prototype.visit=function(e,t){"LineComment"===e.type||"BlockComment"===e.type?this.visitComment(e,t):this.attach&&this.visitNode(e,t)},e}();t.CommentHandler=i},function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Syntax={AssignmentExpression:"AssignmentExpression",AssignmentPattern:"AssignmentPattern",ArrayExpression:"ArrayExpression",ArrayPattern:"ArrayPattern",ArrowFunctionExpression:"ArrowFunctionExpression",AwaitExpression:"AwaitExpression",BlockStatement:"BlockStatement",BinaryExpression:"BinaryExpression",BreakStatement:"BreakStatement",CallExpression:"CallExpression",CatchClause:"CatchClause",ClassBody:"ClassBody",ClassDeclaration:"ClassDeclaration",ClassExpression:"ClassExpression",ConditionalExpression:"ConditionalExpression",ContinueStatement:"ContinueStatement",DoWhileStatement:"DoWhileStatement",DebuggerStatement:"DebuggerStatement",EmptyStatement:"EmptyStatement",ExportAllDeclaration:"ExportAllDeclaration",ExportDefaultDeclaration:"ExportDefaultDeclaration",ExportNamedDeclaration:"ExportNamedDeclaration",ExportSpecifier:"ExportSpecifier",ExpressionStatement:"ExpressionStatement",ForStatement:"ForStatement",ForOfStatement:"ForOfStatement",ForInStatement:"ForInStatement",FunctionDeclaration:"FunctionDeclaration",FunctionExpression:"FunctionExpression",Identifier:"Identifier",IfStatement:"IfStatement",ImportDeclaration:"ImportDeclaration",ImportDefaultSpecifier:"ImportDefaultSpecifier",ImportNamespaceSpecifier:"ImportNamespaceSpecifier",ImportSpecifier:"ImportSpecifier",Literal:"Literal",LabeledStatement:"LabeledStatement",LogicalExpression:"LogicalExpression",MemberExpression:"MemberExpression",MetaProperty:"MetaProperty",MethodDefinition:"MethodDefinition",NewExpression:"NewExpression",ObjectExpression:"ObjectExpression",ObjectPattern:"ObjectPattern",Program:"Program",Property:"Property",RestElement:"RestElement",ReturnStatement:"ReturnStatement",SequenceExpression:"SequenceExpression",SpreadElement:"SpreadElement",Super:"Super",SwitchCase:"SwitchCase",SwitchStatement:"SwitchStatement",TaggedTemplateExpression:"TaggedTemplateExpression",TemplateElement:"TemplateElement",TemplateLiteral:"TemplateLiteral",ThisExpression:"ThisExpression",ThrowStatement:"ThrowStatement",TryStatement:"TryStatement",UnaryExpression:"UnaryExpression",UpdateExpression:"UpdateExpression",VariableDeclaration:"VariableDeclaration",VariableDeclarator:"VariableDeclarator",WhileStatement:"WhileStatement",WithStatement:"WithStatement",YieldExpression:"YieldExpression"}},function(e,t,r){"use strict";var n,i=this&&this.__extends||(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});Object.defineProperty(t,"__esModule",{value:!0});var o=r(4),a=r(5),s=r(6),u=r(7),l=r(8),c=r(13),h=r(14);function p(e){var t;switch(e.type){case s.JSXSyntax.JSXIdentifier:t=e.name;break;case s.JSXSyntax.JSXNamespacedName:var r=e;t=p(r.namespace)+":"+p(r.name);break;case s.JSXSyntax.JSXMemberExpression:var n=e;t=p(n.object)+"."+p(n.property)}return t}c.TokenName[100]="JSXIdentifier",c.TokenName[101]="JSXText";var f=function(e){function t(t,r,n){return e.call(this,t,r,n)||this}return i(t,e),t.prototype.parsePrimaryExpression=function(){return this.match("<")?this.parseJSXRoot():e.prototype.parsePrimaryExpression.call(this)},t.prototype.startJSX=function(){this.scanner.index=this.startMarker.index,this.scanner.lineNumber=this.startMarker.line,this.scanner.lineStart=this.startMarker.index-this.startMarker.column},t.prototype.finishJSX=function(){this.nextToken()},t.prototype.reenterJSX=function(){this.startJSX(),this.expectJSX("}"),this.config.tokens&&this.tokens.pop()},t.prototype.createJSXNode=function(){return this.collectComments(),{index:this.scanner.index,line:this.scanner.lineNumber,column:this.scanner.index-this.scanner.lineStart}},t.prototype.createJSXChildNode=function(){return{index:this.scanner.index,line:this.scanner.lineNumber,column:this.scanner.index-this.scanner.lineStart}},t.prototype.scanXHTMLEntity=function(e){for(var t="&",r=!0,n=!1,i=!1,a=!1;!this.scanner.eof()&&r&&!n;){var s=this.scanner.source[this.scanner.index];if(s===e)break;if(n=";"===s,t+=s,++this.scanner.index,!n)switch(t.length){case 2:i="#"===s;break;case 3:i&&(r=(a="x"===s)||o.Character.isDecimalDigit(s.charCodeAt(0)),i=i&&!a);break;default:r=(r=r&&!(i&&!o.Character.isDecimalDigit(s.charCodeAt(0))))&&!(a&&!o.Character.isHexDigit(s.charCodeAt(0)))}}if(r&&n&&t.length>2){var u=t.substr(1,t.length-2);i&&u.length>1?t=String.fromCharCode(parseInt(u.substr(1),10)):a&&u.length>2?t=String.fromCharCode(parseInt("0"+u.substr(1),16)):i||a||!h.XHTMLEntities[u]||(t=h.XHTMLEntities[u])}return t},t.prototype.lexJSX=function(){var e=this.scanner.source.charCodeAt(this.scanner.index);if(60===e||62===e||47===e||58===e||61===e||123===e||125===e)return{type:7,value:s=this.scanner.source[this.scanner.index++],lineNumber:this.scanner.lineNumber,lineStart:this.scanner.lineStart,start:this.scanner.index-1,end:this.scanner.index};if(34===e||39===e){for(var t=this.scanner.index,r=this.scanner.source[this.scanner.index++],n="";!this.scanner.eof()&&(u=this.scanner.source[this.scanner.index++])!==r;)n+="&"===u?this.scanXHTMLEntity(r):u;return{type:8,value:n,lineNumber:this.scanner.lineNumber,lineStart:this.scanner.lineStart,start:t,end:this.scanner.index}}if(46===e){var i=this.scanner.source.charCodeAt(this.scanner.index+1),a=this.scanner.source.charCodeAt(this.scanner.index+2),s=46===i&&46===a?"...":".";return t=this.scanner.index,this.scanner.index+=s.length,{type:7,value:s,lineNumber:this.scanner.lineNumber,lineStart:this.scanner.lineStart,start:t,end:this.scanner.index}}if(96===e)return{type:10,value:"",lineNumber:this.scanner.lineNumber,lineStart:this.scanner.lineStart,start:this.scanner.index,end:this.scanner.index};if(o.Character.isIdentifierStart(e)&&92!==e){for(t=this.scanner.index,++this.scanner.index;!this.scanner.eof();){var u=this.scanner.source.charCodeAt(this.scanner.index);if(o.Character.isIdentifierPart(u)&&92!==u)++this.scanner.index;else{if(45!==u)break;++this.scanner.index}}return{type:100,value:this.scanner.source.slice(t,this.scanner.index),lineNumber:this.scanner.lineNumber,lineStart:this.scanner.lineStart,start:t,end:this.scanner.index}}return this.scanner.lex()},t.prototype.nextJSXToken=function(){this.collectComments(),this.startMarker.index=this.scanner.index,this.startMarker.line=this.scanner.lineNumber,this.startMarker.column=this.scanner.index-this.scanner.lineStart;var e=this.lexJSX();return this.lastMarker.index=this.scanner.index,this.lastMarker.line=this.scanner.lineNumber,this.lastMarker.column=this.scanner.index-this.scanner.lineStart,this.config.tokens&&this.tokens.push(this.convertToken(e)),e},t.prototype.nextJSXText=function(){this.startMarker.index=this.scanner.index,this.startMarker.line=this.scanner.lineNumber,this.startMarker.column=this.scanner.index-this.scanner.lineStart;for(var e=this.scanner.index,t="";!this.scanner.eof();){var r=this.scanner.source[this.scanner.index];if("{"===r||"<"===r)break;++this.scanner.index,t+=r,o.Character.isLineTerminator(r.charCodeAt(0))&&(++this.scanner.lineNumber,"\r"===r&&"\n"===this.scanner.source[this.scanner.index]&&++this.scanner.index,this.scanner.lineStart=this.scanner.index)}this.lastMarker.index=this.scanner.index,this.lastMarker.line=this.scanner.lineNumber,this.lastMarker.column=this.scanner.index-this.scanner.lineStart;var n={type:101,value:t,lineNumber:this.scanner.lineNumber,lineStart:this.scanner.lineStart,start:e,end:this.scanner.index};return t.length>0&&this.config.tokens&&this.tokens.push(this.convertToken(n)),n},t.prototype.peekJSXToken=function(){var e=this.scanner.saveState();this.scanner.scanComments();var t=this.lexJSX();return this.scanner.restoreState(e),t},t.prototype.expectJSX=function(e){var t=this.nextJSXToken();7===t.type&&t.value===e||this.throwUnexpectedToken(t)},t.prototype.matchJSX=function(e){var t=this.peekJSXToken();return 7===t.type&&t.value===e},t.prototype.parseJSXIdentifier=function(){var e=this.createJSXNode(),t=this.nextJSXToken();return 100!==t.type&&this.throwUnexpectedToken(t),this.finalize(e,new a.JSXIdentifier(t.value))},t.prototype.parseJSXElementName=function(){var e=this.createJSXNode(),t=this.parseJSXIdentifier();if(this.matchJSX(":")){var r=t;this.expectJSX(":");var n=this.parseJSXIdentifier();t=this.finalize(e,new a.JSXNamespacedName(r,n))}else if(this.matchJSX("."))for(;this.matchJSX(".");){var i=t;this.expectJSX(".");var o=this.parseJSXIdentifier();t=this.finalize(e,new a.JSXMemberExpression(i,o))}return t},t.prototype.parseJSXAttributeName=function(){var e,t=this.createJSXNode(),r=this.parseJSXIdentifier();if(this.matchJSX(":")){var n=r;this.expectJSX(":");var i=this.parseJSXIdentifier();e=this.finalize(t,new a.JSXNamespacedName(n,i))}else e=r;return e},t.prototype.parseJSXStringLiteralAttribute=function(){var e=this.createJSXNode(),t=this.nextJSXToken();8!==t.type&&this.throwUnexpectedToken(t);var r=this.getTokenRaw(t);return this.finalize(e,new u.Literal(t.value,r))},t.prototype.parseJSXExpressionAttribute=function(){var e=this.createJSXNode();this.expectJSX("{"),this.finishJSX(),this.match("}")&&this.tolerateError("JSX attributes must only be assigned a non-empty expression");var t=this.parseAssignmentExpression();return this.reenterJSX(),this.finalize(e,new a.JSXExpressionContainer(t))},t.prototype.parseJSXAttributeValue=function(){return this.matchJSX("{")?this.parseJSXExpressionAttribute():this.matchJSX("<")?this.parseJSXElement():this.parseJSXStringLiteralAttribute()},t.prototype.parseJSXNameValueAttribute=function(){var e=this.createJSXNode(),t=this.parseJSXAttributeName(),r=null;return this.matchJSX("=")&&(this.expectJSX("="),r=this.parseJSXAttributeValue()),this.finalize(e,new a.JSXAttribute(t,r))},t.prototype.parseJSXSpreadAttribute=function(){var e=this.createJSXNode();this.expectJSX("{"),this.expectJSX("..."),this.finishJSX();var t=this.parseAssignmentExpression();return this.reenterJSX(),this.finalize(e,new a.JSXSpreadAttribute(t))},t.prototype.parseJSXAttributes=function(){for(var e=[];!this.matchJSX("/")&&!this.matchJSX(">");){var t=this.matchJSX("{")?this.parseJSXSpreadAttribute():this.parseJSXNameValueAttribute();e.push(t)}return e},t.prototype.parseJSXOpeningElement=function(){var e=this.createJSXNode();this.expectJSX("<");var t=this.parseJSXElementName(),r=this.parseJSXAttributes(),n=this.matchJSX("/");return n&&this.expectJSX("/"),this.expectJSX(">"),this.finalize(e,new a.JSXOpeningElement(t,n,r))},t.prototype.parseJSXBoundaryElement=function(){var e=this.createJSXNode();if(this.expectJSX("<"),this.matchJSX("/")){this.expectJSX("/");var t=this.parseJSXElementName();return this.expectJSX(">"),this.finalize(e,new a.JSXClosingElement(t))}var r=this.parseJSXElementName(),n=this.parseJSXAttributes(),i=this.matchJSX("/");return i&&this.expectJSX("/"),this.expectJSX(">"),this.finalize(e,new a.JSXOpeningElement(r,i,n))},t.prototype.parseJSXEmptyExpression=function(){var e=this.createJSXChildNode();return this.collectComments(),this.lastMarker.index=this.scanner.index,this.lastMarker.line=this.scanner.lineNumber,this.lastMarker.column=this.scanner.index-this.scanner.lineStart,this.finalize(e,new a.JSXEmptyExpression)},t.prototype.parseJSXExpressionContainer=function(){var e,t=this.createJSXNode();return this.expectJSX("{"),this.matchJSX("}")?(e=this.parseJSXEmptyExpression(),this.expectJSX("}")):(this.finishJSX(),e=this.parseAssignmentExpression(),this.reenterJSX()),this.finalize(t,new a.JSXExpressionContainer(e))},t.prototype.parseJSXChildren=function(){for(var e=[];!this.scanner.eof();){var t=this.createJSXChildNode(),r=this.nextJSXText();if(r.start<r.end){var n=this.getTokenRaw(r),i=this.finalize(t,new a.JSXText(r.value,n));e.push(i)}if("{"!==this.scanner.source[this.scanner.index])break;var o=this.parseJSXExpressionContainer();e.push(o)}return e},t.prototype.parseComplexJSXElement=function(e){for(var t=[];!this.scanner.eof();){e.children=e.children.concat(this.parseJSXChildren());var r=this.createJSXChildNode(),n=this.parseJSXBoundaryElement();if(n.type===s.JSXSyntax.JSXOpeningElement){var i=n;if(i.selfClosing){var o=this.finalize(r,new a.JSXElement(i,[],null));e.children.push(o)}else t.push(e),e={node:r,opening:i,closing:null,children:[]}}if(n.type===s.JSXSyntax.JSXClosingElement){e.closing=n;var u=p(e.opening.name);if(u!==p(e.closing.name)&&this.tolerateError("Expected corresponding JSX closing tag for %0",u),!(t.length>0))break;o=this.finalize(e.node,new a.JSXElement(e.opening,e.children,e.closing)),(e=t[t.length-1]).children.push(o),t.pop()}}return e},t.prototype.parseJSXElement=function(){var e=this.createJSXNode(),t=this.parseJSXOpeningElement(),r=[],n=null;if(!t.selfClosing){var i=this.parseComplexJSXElement({node:e,opening:t,closing:n,children:r});r=i.children,n=i.closing}return this.finalize(e,new a.JSXElement(t,r,n))},t.prototype.parseJSXRoot=function(){this.config.tokens&&this.tokens.pop(),this.startJSX();var e=this.parseJSXElement();return this.finishJSX(),e},t.prototype.isStartOfExpression=function(){return e.prototype.isStartOfExpression.call(this)||this.match("<")},t}(l.Parser);t.JSXParser=f},function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r={NonAsciiIdentifierStart:/[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B4\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309B-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AD\uA7B0-\uA7B7\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC03-\uDC37\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDF00-\uDF19]|\uD806[\uDCA0-\uDCDF\uDCFF\uDEC0-\uDEF8]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50\uDF93-\uDF9F]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD83A[\uDC00-\uDCC4]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1]|\uD87E[\uDC00-\uDE1D]/,NonAsciiIdentifierPart:/[\xAA\xB5\xB7\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u08A0-\u08B4\u08E3-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0AF9\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58-\u0C5A\u0C60-\u0C63\u0C66-\u0C6F\u0C81-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D01-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D57\u0D5F-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1369-\u1371\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19DA\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1CD0-\u1CD2\u1CD4-\u1CF6\u1CF8\u1CF9\u1D00-\u1DF5\u1DFC-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u200C\u200D\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AD\uA7B0-\uA7B7\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C4\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA8FD\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2F\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDDFD\uDE80-\uDE9C\uDEA0-\uDED0\uDEE0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF7A\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCA0-\uDCA9\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00-\uDE03\uDE05\uDE06\uDE0C-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE38-\uDE3A\uDE3F\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE6\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC00-\uDC46\uDC66-\uDC6F\uDC7F-\uDCBA\uDCD0-\uDCE8\uDCF0-\uDCF9\uDD00-\uDD34\uDD36-\uDD3F\uDD50-\uDD73\uDD76\uDD80-\uDDC4\uDDCA-\uDDCC\uDDD0-\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE37\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEEA\uDEF0-\uDEF9\uDF00-\uDF03\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3C-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF50\uDF57\uDF5D-\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDC80-\uDCC5\uDCC7\uDCD0-\uDCD9\uDD80-\uDDB5\uDDB8-\uDDC0\uDDD8-\uDDDD\uDE00-\uDE40\uDE44\uDE50-\uDE59\uDE80-\uDEB7\uDEC0-\uDEC9\uDF00-\uDF19\uDF1D-\uDF2B\uDF30-\uDF39]|\uD806[\uDCA0-\uDCE9\uDCFF\uDEC0-\uDEF8]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE60-\uDE69\uDED0-\uDEED\uDEF0-\uDEF4\uDF00-\uDF36\uDF40-\uDF43\uDF50-\uDF59\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50-\uDF7E\uDF8F-\uDF9F]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB\uDFCE-\uDFFF]|\uD836[\uDE00-\uDE36\uDE3B-\uDE6C\uDE75\uDE84\uDE9B-\uDE9F\uDEA1-\uDEAF]|\uD83A[\uDC00-\uDCC4\uDCD0-\uDCD6]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1]|\uD87E[\uDC00-\uDE1D]|\uDB40[\uDD00-\uDDEF]/};t.Character={fromCodePoint:function(e){return e<65536?String.fromCharCode(e):String.fromCharCode(55296+(e-65536>>10))+String.fromCharCode(56320+(e-65536&1023))},isWhiteSpace:function(e){return 32===e||9===e||11===e||12===e||160===e||e>=5760&&[5760,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8239,8287,12288,65279].indexOf(e)>=0},isLineTerminator:function(e){return 10===e||13===e||8232===e||8233===e},isIdentifierStart:function(e){return 36===e||95===e||e>=65&&e<=90||e>=97&&e<=122||92===e||e>=128&&r.NonAsciiIdentifierStart.test(t.Character.fromCodePoint(e))},isIdentifierPart:function(e){return 36===e||95===e||e>=65&&e<=90||e>=97&&e<=122||e>=48&&e<=57||92===e||e>=128&&r.NonAsciiIdentifierPart.test(t.Character.fromCodePoint(e))},isDecimalDigit:function(e){return e>=48&&e<=57},isHexDigit:function(e){return e>=48&&e<=57||e>=65&&e<=70||e>=97&&e<=102},isOctalDigit:function(e){return e>=48&&e<=55}}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(6),i=function(e){this.type=n.JSXSyntax.JSXClosingElement,this.name=e};t.JSXClosingElement=i;var o=function(e,t,r){this.type=n.JSXSyntax.JSXElement,this.openingElement=e,this.children=t,this.closingElement=r};t.JSXElement=o;var a=function(){this.type=n.JSXSyntax.JSXEmptyExpression};t.JSXEmptyExpression=a;var s=function(e){this.type=n.JSXSyntax.JSXExpressionContainer,this.expression=e};t.JSXExpressionContainer=s;var u=function(e){this.type=n.JSXSyntax.JSXIdentifier,this.name=e};t.JSXIdentifier=u;var l=function(e,t){this.type=n.JSXSyntax.JSXMemberExpression,this.object=e,this.property=t};t.JSXMemberExpression=l;var c=function(e,t){this.type=n.JSXSyntax.JSXAttribute,this.name=e,this.value=t};t.JSXAttribute=c;var h=function(e,t){this.type=n.JSXSyntax.JSXNamespacedName,this.namespace=e,this.name=t};t.JSXNamespacedName=h;var p=function(e,t,r){this.type=n.JSXSyntax.JSXOpeningElement,this.name=e,this.selfClosing=t,this.attributes=r};t.JSXOpeningElement=p;var f=function(e){this.type=n.JSXSyntax.JSXSpreadAttribute,this.argument=e};t.JSXSpreadAttribute=f;var d=function(e,t){this.type=n.JSXSyntax.JSXText,this.value=e,this.raw=t};t.JSXText=d},function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.JSXSyntax={JSXAttribute:"JSXAttribute",JSXClosingElement:"JSXClosingElement",JSXElement:"JSXElement",JSXEmptyExpression:"JSXEmptyExpression",JSXExpressionContainer:"JSXExpressionContainer",JSXIdentifier:"JSXIdentifier",JSXMemberExpression:"JSXMemberExpression",JSXNamespacedName:"JSXNamespacedName",JSXOpeningElement:"JSXOpeningElement",JSXSpreadAttribute:"JSXSpreadAttribute",JSXText:"JSXText"}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(2),i=function(e){this.type=n.Syntax.ArrayExpression,this.elements=e};t.ArrayExpression=i;var o=function(e){this.type=n.Syntax.ArrayPattern,this.elements=e};t.ArrayPattern=o;var a=function(e,t,r){this.type=n.Syntax.ArrowFunctionExpression,this.id=null,this.params=e,this.body=t,this.generator=!1,this.expression=r,this.async=!1};t.ArrowFunctionExpression=a;var s=function(e,t,r){this.type=n.Syntax.AssignmentExpression,this.operator=e,this.left=t,this.right=r};t.AssignmentExpression=s;var u=function(e,t){this.type=n.Syntax.AssignmentPattern,this.left=e,this.right=t};t.AssignmentPattern=u;var l=function(e,t,r){this.type=n.Syntax.ArrowFunctionExpression,this.id=null,this.params=e,this.body=t,this.generator=!1,this.expression=r,this.async=!0};t.AsyncArrowFunctionExpression=l;var c=function(e,t,r){this.type=n.Syntax.FunctionDeclaration,this.id=e,this.params=t,this.body=r,this.generator=!1,this.expression=!1,this.async=!0};t.AsyncFunctionDeclaration=c;var h=function(e,t,r){this.type=n.Syntax.FunctionExpression,this.id=e,this.params=t,this.body=r,this.generator=!1,this.expression=!1,this.async=!0};t.AsyncFunctionExpression=h;var p=function(e){this.type=n.Syntax.AwaitExpression,this.argument=e};t.AwaitExpression=p;var f=function(e,t,r){var i="||"===e||"&&"===e;this.type=i?n.Syntax.LogicalExpression:n.Syntax.BinaryExpression,this.operator=e,this.left=t,this.right=r};t.BinaryExpression=f;var d=function(e){this.type=n.Syntax.BlockStatement,this.body=e};t.BlockStatement=d;var m=function(e){this.type=n.Syntax.BreakStatement,this.label=e};t.BreakStatement=m;var y=function(e,t){this.type=n.Syntax.CallExpression,this.callee=e,this.arguments=t};t.CallExpression=y;var v=function(e,t){this.type=n.Syntax.CatchClause,this.param=e,this.body=t};t.CatchClause=v;var _=function(e){this.type=n.Syntax.ClassBody,this.body=e};t.ClassBody=_;var g=function(e,t,r){this.type=n.Syntax.ClassDeclaration,this.id=e,this.superClass=t,this.body=r};t.ClassDeclaration=g;var b=function(e,t,r){this.type=n.Syntax.ClassExpression,this.id=e,this.superClass=t,this.body=r};t.ClassExpression=b;var x=function(e,t){this.type=n.Syntax.MemberExpression,this.computed=!0,this.object=e,this.property=t};t.ComputedMemberExpression=x;var w=function(e,t,r){this.type=n.Syntax.ConditionalExpression,this.test=e,this.consequent=t,this.alternate=r};t.ConditionalExpression=w;var E=function(e){this.type=n.Syntax.ContinueStatement,this.label=e};t.ContinueStatement=E;var D=function(){this.type=n.Syntax.DebuggerStatement};t.DebuggerStatement=D;var S=function(e,t){this.type=n.Syntax.ExpressionStatement,this.expression=e,this.directive=t};t.Directive=S;var C=function(e,t){this.type=n.Syntax.DoWhileStatement,this.body=e,this.test=t};t.DoWhileStatement=C;var A=function(){this.type=n.Syntax.EmptyStatement};t.EmptyStatement=A;var N=function(e){this.type=n.Syntax.ExportAllDeclaration,this.source=e};t.ExportAllDeclaration=N;var T=function(e){this.type=n.Syntax.ExportDefaultDeclaration,this.declaration=e};t.ExportDefaultDeclaration=T;var O=function(e,t,r){this.type=n.Syntax.ExportNamedDeclaration,this.declaration=e,this.specifiers=t,this.source=r};t.ExportNamedDeclaration=O;var F=function(e,t){this.type=n.Syntax.ExportSpecifier,this.exported=t,this.local=e};t.ExportSpecifier=F;var k=function(e){this.type=n.Syntax.ExpressionStatement,this.expression=e};t.ExpressionStatement=k;var P=function(e,t,r){this.type=n.Syntax.ForInStatement,this.left=e,this.right=t,this.body=r,this.each=!1};t.ForInStatement=P;var I=function(e,t,r){this.type=n.Syntax.ForOfStatement,this.left=e,this.right=t,this.body=r};t.ForOfStatement=I;var L=function(e,t,r,i){this.type=n.Syntax.ForStatement,this.init=e,this.test=t,this.update=r,this.body=i};t.ForStatement=L;var M=function(e,t,r,i){this.type=n.Syntax.FunctionDeclaration,this.id=e,this.params=t,this.body=r,this.generator=i,this.expression=!1,this.async=!1};t.FunctionDeclaration=M;var B=function(e,t,r,i){this.type=n.Syntax.FunctionExpression,this.id=e,this.params=t,this.body=r,this.generator=i,this.expression=!1,this.async=!1};t.FunctionExpression=B;var j=function(e){this.type=n.Syntax.Identifier,this.name=e};t.Identifier=j;var R=function(e,t,r){this.type=n.Syntax.IfStatement,this.test=e,this.consequent=t,this.alternate=r};t.IfStatement=R;var z=function(e,t){this.type=n.Syntax.ImportDeclaration,this.specifiers=e,this.source=t};t.ImportDeclaration=z;var U=function(e){this.type=n.Syntax.ImportDefaultSpecifier,this.local=e};t.ImportDefaultSpecifier=U;var G=function(e){this.type=n.Syntax.ImportNamespaceSpecifier,this.local=e};t.ImportNamespaceSpecifier=G;var X=function(e,t){this.type=n.Syntax.ImportSpecifier,this.local=e,this.imported=t};t.ImportSpecifier=X;var q=function(e,t){this.type=n.Syntax.LabeledStatement,this.label=e,this.body=t};t.LabeledStatement=q;var W=function(e,t){this.type=n.Syntax.Literal,this.value=e,this.raw=t};t.Literal=W;var H=function(e,t){this.type=n.Syntax.MetaProperty,this.meta=e,this.property=t};t.MetaProperty=H;var J=function(e,t,r,i,o){this.type=n.Syntax.MethodDefinition,this.key=e,this.computed=t,this.value=r,this.kind=i,this.static=o};t.MethodDefinition=J;var Y=function(e){this.type=n.Syntax.Program,this.body=e,this.sourceType="module"};t.Module=Y;var V=function(e,t){this.type=n.Syntax.NewExpression,this.callee=e,this.arguments=t};t.NewExpression=V;var K=function(e){this.type=n.Syntax.ObjectExpression,this.properties=e};t.ObjectExpression=K;var $=function(e){this.type=n.Syntax.ObjectPattern,this.properties=e};t.ObjectPattern=$;var Q=function(e,t,r,i,o,a){this.type=n.Syntax.Property,this.key=t,this.computed=r,this.value=i,this.kind=e,this.method=o,this.shorthand=a};t.Property=Q;var Z=function(e,t,r,i){this.type=n.Syntax.Literal,this.value=e,this.raw=t,this.regex={pattern:r,flags:i}};t.RegexLiteral=Z;var ee=function(e){this.type=n.Syntax.RestElement,this.argument=e};t.RestElement=ee;var te=function(e){this.type=n.Syntax.ReturnStatement,this.argument=e};t.ReturnStatement=te;var re=function(e){this.type=n.Syntax.Program,this.body=e,this.sourceType="script"};t.Script=re;var ne=function(e){this.type=n.Syntax.SequenceExpression,this.expressions=e};t.SequenceExpression=ne;var ie=function(e){this.type=n.Syntax.SpreadElement,this.argument=e};t.SpreadElement=ie;var oe=function(e,t){this.type=n.Syntax.MemberExpression,this.computed=!1,this.object=e,this.property=t};t.StaticMemberExpression=oe;var ae=function(){this.type=n.Syntax.Super};t.Super=ae;var se=function(e,t){this.type=n.Syntax.SwitchCase,this.test=e,this.consequent=t};t.SwitchCase=se;var ue=function(e,t){this.type=n.Syntax.SwitchStatement,this.discriminant=e,this.cases=t};t.SwitchStatement=ue;var le=function(e,t){this.type=n.Syntax.TaggedTemplateExpression,this.tag=e,this.quasi=t};t.TaggedTemplateExpression=le;var ce=function(e,t){this.type=n.Syntax.TemplateElement,this.value=e,this.tail=t};t.TemplateElement=ce;var he=function(e,t){this.type=n.Syntax.TemplateLiteral,this.quasis=e,this.expressions=t};t.TemplateLiteral=he;var pe=function(){this.type=n.Syntax.ThisExpression};t.ThisExpression=pe;var fe=function(e){this.type=n.Syntax.ThrowStatement,this.argument=e};t.ThrowStatement=fe;var de=function(e,t,r){this.type=n.Syntax.TryStatement,this.block=e,this.handler=t,this.finalizer=r};t.TryStatement=de;var me=function(e,t){this.type=n.Syntax.UnaryExpression,this.operator=e,this.argument=t,this.prefix=!0};t.UnaryExpression=me;var ye=function(e,t,r){this.type=n.Syntax.UpdateExpression,this.operator=e,this.argument=t,this.prefix=r};t.UpdateExpression=ye;var ve=function(e,t){this.type=n.Syntax.VariableDeclaration,this.declarations=e,this.kind=t};t.VariableDeclaration=ve;var _e=function(e,t){this.type=n.Syntax.VariableDeclarator,this.id=e,this.init=t};t.VariableDeclarator=_e;var ge=function(e,t){this.type=n.Syntax.WhileStatement,this.test=e,this.body=t};t.WhileStatement=ge;var be=function(e,t){this.type=n.Syntax.WithStatement,this.object=e,this.body=t};t.WithStatement=be;var xe=function(e,t){this.type=n.Syntax.YieldExpression,this.argument=e,this.delegate=t};t.YieldExpression=xe},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(9),i=r(10),o=r(11),a=r(7),s=r(12),u=r(2),l=r(13),c=function(){function e(e,t,r){void 0===t&&(t={}),this.config={range:"boolean"==typeof t.range&&t.range,loc:"boolean"==typeof t.loc&&t.loc,source:null,tokens:"boolean"==typeof t.tokens&&t.tokens,comment:"boolean"==typeof t.comment&&t.comment,tolerant:"boolean"==typeof t.tolerant&&t.tolerant},this.config.loc&&t.source&&null!==t.source&&(this.config.source=String(t.source)),this.delegate=r,this.errorHandler=new i.ErrorHandler,this.errorHandler.tolerant=this.config.tolerant,this.scanner=new s.Scanner(e,this.errorHandler),this.scanner.trackComment=this.config.comment,this.operatorPrecedence={")":0,";":0,",":0,"=":0,"]":0,"||":1,"&&":2,"|":3,"^":4,"&":5,"==":6,"!=":6,"===":6,"!==":6,"<":7,">":7,"<=":7,">=":7,"<<":8,">>":8,">>>":8,"+":9,"-":9,"*":11,"/":11,"%":11},this.lookahead={type:2,value:"",lineNumber:this.scanner.lineNumber,lineStart:0,start:0,end:0},this.hasLineTerminator=!1,this.context={isModule:!1,await:!1,allowIn:!0,allowStrictDirective:!0,allowYield:!0,firstCoverInitializedNameError:null,isAssignmentTarget:!1,isBindingElement:!1,inFunctionBody:!1,inIteration:!1,inSwitch:!1,labelSet:{},strict:!1},this.tokens=[],this.startMarker={index:0,line:this.scanner.lineNumber,column:0},this.lastMarker={index:0,line:this.scanner.lineNumber,column:0},this.nextToken(),this.lastMarker={index:this.scanner.index,line:this.scanner.lineNumber,column:this.scanner.index-this.scanner.lineStart}}return e.prototype.throwError=function(e){for(var t=[],r=1;r<arguments.length;r++)t[r-1]=arguments[r];var i=Array.prototype.slice.call(arguments,1),o=e.replace(/%(\d)/g,(function(e,t){return n.assert(t<i.length,"Message reference must be in range"),i[t]})),a=this.lastMarker.index,s=this.lastMarker.line,u=this.lastMarker.column+1;throw this.errorHandler.createError(a,s,u,o)},e.prototype.tolerateError=function(e){for(var t=[],r=1;r<arguments.length;r++)t[r-1]=arguments[r];var i=Array.prototype.slice.call(arguments,1),o=e.replace(/%(\d)/g,(function(e,t){return n.assert(t<i.length,"Message reference must be in range"),i[t]})),a=this.lastMarker.index,s=this.scanner.lineNumber,u=this.lastMarker.column+1;this.errorHandler.tolerateError(a,s,u,o)},e.prototype.unexpectedTokenError=function(e,t){var r,n=t||o.Messages.UnexpectedToken;if(e?(t||(n=2===e.type?o.Messages.UnexpectedEOS:3===e.type?o.Messages.UnexpectedIdentifier:6===e.type?o.Messages.UnexpectedNumber:8===e.type?o.Messages.UnexpectedString:10===e.type?o.Messages.UnexpectedTemplate:o.Messages.UnexpectedToken,4===e.type&&(this.scanner.isFutureReservedWord(e.value)?n=o.Messages.UnexpectedReserved:this.context.strict&&this.scanner.isStrictModeReservedWord(e.value)&&(n=o.Messages.StrictReservedWord))),r=e.value):r="ILLEGAL",n=n.replace("%0",r),e&&"number"==typeof e.lineNumber){var i=e.start,a=e.lineNumber,s=this.lastMarker.index-this.lastMarker.column,u=e.start-s+1;return this.errorHandler.createError(i,a,u,n)}return i=this.lastMarker.index,a=this.lastMarker.line,u=this.lastMarker.column+1,this.errorHandler.createError(i,a,u,n)},e.prototype.throwUnexpectedToken=function(e,t){throw this.unexpectedTokenError(e,t)},e.prototype.tolerateUnexpectedToken=function(e,t){this.errorHandler.tolerate(this.unexpectedTokenError(e,t))},e.prototype.collectComments=function(){if(this.config.comment){var e=this.scanner.scanComments();if(e.length>0&&this.delegate)for(var t=0;t<e.length;++t){var r=e[t],n=void 0;n={type:r.multiLine?"BlockComment":"LineComment",value:this.scanner.source.slice(r.slice[0],r.slice[1])},this.config.range&&(n.range=r.range),this.config.loc&&(n.loc=r.loc);var i={start:{line:r.loc.start.line,column:r.loc.start.column,offset:r.range[0]},end:{line:r.loc.end.line,column:r.loc.end.column,offset:r.range[1]}};this.delegate(n,i)}}else this.scanner.scanComments()},e.prototype.getTokenRaw=function(e){return this.scanner.source.slice(e.start,e.end)},e.prototype.convertToken=function(e){var t={type:l.TokenName[e.type],value:this.getTokenRaw(e)};if(this.config.range&&(t.range=[e.start,e.end]),this.config.loc&&(t.loc={start:{line:this.startMarker.line,column:this.startMarker.column},end:{line:this.scanner.lineNumber,column:this.scanner.index-this.scanner.lineStart}}),9===e.type){var r=e.pattern,n=e.flags;t.regex={pattern:r,flags:n}}return t},e.prototype.nextToken=function(){var e=this.lookahead;this.lastMarker.index=this.scanner.index,this.lastMarker.line=this.scanner.lineNumber,this.lastMarker.column=this.scanner.index-this.scanner.lineStart,this.collectComments(),this.scanner.index!==this.startMarker.index&&(this.startMarker.index=this.scanner.index,this.startMarker.line=this.scanner.lineNumber,this.startMarker.column=this.scanner.index-this.scanner.lineStart);var t=this.scanner.lex();return this.hasLineTerminator=e.lineNumber!==t.lineNumber,t&&this.context.strict&&3===t.type&&this.scanner.isStrictModeReservedWord(t.value)&&(t.type=4),this.lookahead=t,this.config.tokens&&2!==t.type&&this.tokens.push(this.convertToken(t)),e},e.prototype.nextRegexToken=function(){this.collectComments();var e=this.scanner.scanRegExp();return this.config.tokens&&(this.tokens.pop(),this.tokens.push(this.convertToken(e))),this.lookahead=e,this.nextToken(),e},e.prototype.createNode=function(){return{index:this.startMarker.index,line:this.startMarker.line,column:this.startMarker.column}},e.prototype.startNode=function(e,t){void 0===t&&(t=0);var r=e.start-e.lineStart,n=e.lineNumber;return r<0&&(r+=t,n--),{index:e.start,line:n,column:r}},e.prototype.finalize=function(e,t){if(this.config.range&&(t.range=[e.index,this.lastMarker.index]),this.config.loc&&(t.loc={start:{line:e.line,column:e.column},end:{line:this.lastMarker.line,column:this.lastMarker.column}},this.config.source&&(t.loc.source=this.config.source)),this.delegate){var r={start:{line:e.line,column:e.column,offset:e.index},end:{line:this.lastMarker.line,column:this.lastMarker.column,offset:this.lastMarker.index}};this.delegate(t,r)}return t},e.prototype.expect=function(e){var t=this.nextToken();7===t.type&&t.value===e||this.throwUnexpectedToken(t)},e.prototype.expectCommaSeparator=function(){if(this.config.tolerant){var e=this.lookahead;7===e.type&&","===e.value?this.nextToken():7===e.type&&";"===e.value?(this.nextToken(),this.tolerateUnexpectedToken(e)):this.tolerateUnexpectedToken(e,o.Messages.UnexpectedToken)}else this.expect(",")},e.prototype.expectKeyword=function(e){var t=this.nextToken();4===t.type&&t.value===e||this.throwUnexpectedToken(t)},e.prototype.match=function(e){return 7===this.lookahead.type&&this.lookahead.value===e},e.prototype.matchKeyword=function(e){return 4===this.lookahead.type&&this.lookahead.value===e},e.prototype.matchContextualKeyword=function(e){return 3===this.lookahead.type&&this.lookahead.value===e},e.prototype.matchAssign=function(){if(7!==this.lookahead.type)return!1;var e=this.lookahead.value;return"="===e||"*="===e||"**="===e||"/="===e||"%="===e||"+="===e||"-="===e||"<<="===e||">>="===e||">>>="===e||"&="===e||"^="===e||"|="===e},e.prototype.isolateCoverGrammar=function(e){var t=this.context.isBindingElement,r=this.context.isAssignmentTarget,n=this.context.firstCoverInitializedNameError;this.context.isBindingElement=!0,this.context.isAssignmentTarget=!0,this.context.firstCoverInitializedNameError=null;var i=e.call(this);return null!==this.context.firstCoverInitializedNameError&&this.throwUnexpectedToken(this.context.firstCoverInitializedNameError),this.context.isBindingElement=t,this.context.isAssignmentTarget=r,this.context.firstCoverInitializedNameError=n,i},e.prototype.inheritCoverGrammar=function(e){var t=this.context.isBindingElement,r=this.context.isAssignmentTarget,n=this.context.firstCoverInitializedNameError;this.context.isBindingElement=!0,this.context.isAssignmentTarget=!0,this.context.firstCoverInitializedNameError=null;var i=e.call(this);return this.context.isBindingElement=this.context.isBindingElement&&t,this.context.isAssignmentTarget=this.context.isAssignmentTarget&&r,this.context.firstCoverInitializedNameError=n||this.context.firstCoverInitializedNameError,i},e.prototype.consumeSemicolon=function(){this.match(";")?this.nextToken():this.hasLineTerminator||(2===this.lookahead.type||this.match("}")||this.throwUnexpectedToken(this.lookahead),this.lastMarker.index=this.startMarker.index,this.lastMarker.line=this.startMarker.line,this.lastMarker.column=this.startMarker.column)},e.prototype.parsePrimaryExpression=function(){var e,t,r,n=this.createNode();switch(this.lookahead.type){case 3:(this.context.isModule||this.context.await)&&"await"===this.lookahead.value&&this.tolerateUnexpectedToken(this.lookahead),e=this.matchAsyncFunction()?this.parseFunctionExpression():this.finalize(n,new a.Identifier(this.nextToken().value));break;case 6:case 8:this.context.strict&&this.lookahead.octal&&this.tolerateUnexpectedToken(this.lookahead,o.Messages.StrictOctalLiteral),this.context.isAssignmentTarget=!1,this.context.isBindingElement=!1,t=this.nextToken(),r=this.getTokenRaw(t),e=this.finalize(n,new a.Literal(t.value,r));break;case 1:this.context.isAssignmentTarget=!1,this.context.isBindingElement=!1,t=this.nextToken(),r=this.getTokenRaw(t),e=this.finalize(n,new a.Literal("true"===t.value,r));break;case 5:this.context.isAssignmentTarget=!1,this.context.isBindingElement=!1,t=this.nextToken(),r=this.getTokenRaw(t),e=this.finalize(n,new a.Literal(null,r));break;case 10:e=this.parseTemplateLiteral();break;case 7:switch(this.lookahead.value){case"(":this.context.isBindingElement=!1,e=this.inheritCoverGrammar(this.parseGroupExpression);break;case"[":e=this.inheritCoverGrammar(this.parseArrayInitializer);break;case"{":e=this.inheritCoverGrammar(this.parseObjectInitializer);break;case"/":case"/=":this.context.isAssignmentTarget=!1,this.context.isBindingElement=!1,this.scanner.index=this.startMarker.index,t=this.nextRegexToken(),r=this.getTokenRaw(t),e=this.finalize(n,new a.RegexLiteral(t.regex,r,t.pattern,t.flags));break;default:e=this.throwUnexpectedToken(this.nextToken())}break;case 4:!this.context.strict&&this.context.allowYield&&this.matchKeyword("yield")?e=this.parseIdentifierName():!this.context.strict&&this.matchKeyword("let")?e=this.finalize(n,new a.Identifier(this.nextToken().value)):(this.context.isAssignmentTarget=!1,this.context.isBindingElement=!1,this.matchKeyword("function")?e=this.parseFunctionExpression():this.matchKeyword("this")?(this.nextToken(),e=this.finalize(n,new a.ThisExpression)):e=this.matchKeyword("class")?this.parseClassExpression():this.throwUnexpectedToken(this.nextToken()));break;default:e=this.throwUnexpectedToken(this.nextToken())}return e},e.prototype.parseSpreadElement=function(){var e=this.createNode();this.expect("...");var t=this.inheritCoverGrammar(this.parseAssignmentExpression);return this.finalize(e,new a.SpreadElement(t))},e.prototype.parseArrayInitializer=function(){var e=this.createNode(),t=[];for(this.expect("[");!this.match("]");)if(this.match(","))this.nextToken(),t.push(null);else if(this.match("...")){var r=this.parseSpreadElement();this.match("]")||(this.context.isAssignmentTarget=!1,this.context.isBindingElement=!1,this.expect(",")),t.push(r)}else t.push(this.inheritCoverGrammar(this.parseAssignmentExpression)),this.match("]")||this.expect(",");return this.expect("]"),this.finalize(e,new a.ArrayExpression(t))},e.prototype.parsePropertyMethod=function(e){this.context.isAssignmentTarget=!1,this.context.isBindingElement=!1;var t=this.context.strict,r=this.context.allowStrictDirective;this.context.allowStrictDirective=e.simple;var n=this.isolateCoverGrammar(this.parseFunctionSourceElements);return this.context.strict&&e.firstRestricted&&this.tolerateUnexpectedToken(e.firstRestricted,e.message),this.context.strict&&e.stricted&&this.tolerateUnexpectedToken(e.stricted,e.message),this.context.strict=t,this.context.allowStrictDirective=r,n},e.prototype.parsePropertyMethodFunction=function(){var e=this.createNode(),t=this.context.allowYield;this.context.allowYield=!0;var r=this.parseFormalParameters(),n=this.parsePropertyMethod(r);return this.context.allowYield=t,this.finalize(e,new a.FunctionExpression(null,r.params,n,!1))},e.prototype.parsePropertyMethodAsyncFunction=function(){var e=this.createNode(),t=this.context.allowYield,r=this.context.await;this.context.allowYield=!1,this.context.await=!0;var n=this.parseFormalParameters(),i=this.parsePropertyMethod(n);return this.context.allowYield=t,this.context.await=r,this.finalize(e,new a.AsyncFunctionExpression(null,n.params,i))},e.prototype.parseObjectPropertyKey=function(){var e,t=this.createNode(),r=this.nextToken();switch(r.type){case 8:case 6:this.context.strict&&r.octal&&this.tolerateUnexpectedToken(r,o.Messages.StrictOctalLiteral);var n=this.getTokenRaw(r);e=this.finalize(t,new a.Literal(r.value,n));break;case 3:case 1:case 5:case 4:e=this.finalize(t,new a.Identifier(r.value));break;case 7:"["===r.value?(e=this.isolateCoverGrammar(this.parseAssignmentExpression),this.expect("]")):e=this.throwUnexpectedToken(r);break;default:e=this.throwUnexpectedToken(r)}return e},e.prototype.isPropertyKey=function(e,t){return e.type===u.Syntax.Identifier&&e.name===t||e.type===u.Syntax.Literal&&e.value===t},e.prototype.parseObjectProperty=function(e){var t,r=this.createNode(),n=this.lookahead,i=null,s=null,u=!1,l=!1,c=!1,h=!1;if(3===n.type){var p=n.value;this.nextToken(),u=this.match("["),i=(h=!(this.hasLineTerminator||"async"!==p||this.match(":")||this.match("(")||this.match("*")||this.match(",")))?this.parseObjectPropertyKey():this.finalize(r,new a.Identifier(p))}else this.match("*")?this.nextToken():(u=this.match("["),i=this.parseObjectPropertyKey());var f=this.qualifiedPropertyName(this.lookahead);if(3===n.type&&!h&&"get"===n.value&&f)t="get",u=this.match("["),i=this.parseObjectPropertyKey(),this.context.allowYield=!1,s=this.parseGetterMethod();else if(3===n.type&&!h&&"set"===n.value&&f)t="set",u=this.match("["),i=this.parseObjectPropertyKey(),s=this.parseSetterMethod();else if(7===n.type&&"*"===n.value&&f)t="init",u=this.match("["),i=this.parseObjectPropertyKey(),s=this.parseGeneratorMethod(),l=!0;else if(i||this.throwUnexpectedToken(this.lookahead),t="init",this.match(":")&&!h)!u&&this.isPropertyKey(i,"__proto__")&&(e.value&&this.tolerateError(o.Messages.DuplicateProtoProperty),e.value=!0),this.nextToken(),s=this.inheritCoverGrammar(this.parseAssignmentExpression);else if(this.match("("))s=h?this.parsePropertyMethodAsyncFunction():this.parsePropertyMethodFunction(),l=!0;else if(3===n.type)if(p=this.finalize(r,new a.Identifier(n.value)),this.match("=")){this.context.firstCoverInitializedNameError=this.lookahead,this.nextToken(),c=!0;var d=this.isolateCoverGrammar(this.parseAssignmentExpression);s=this.finalize(r,new a.AssignmentPattern(p,d))}else c=!0,s=p;else this.throwUnexpectedToken(this.nextToken());return this.finalize(r,new a.Property(t,i,u,s,l,c))},e.prototype.parseObjectInitializer=function(){var e=this.createNode();this.expect("{");for(var t=[],r={value:!1};!this.match("}");)t.push(this.parseObjectProperty(r)),this.match("}")||this.expectCommaSeparator();return this.expect("}"),this.finalize(e,new a.ObjectExpression(t))},e.prototype.parseTemplateHead=function(){n.assert(this.lookahead.head,"Template literal must start with a template head");var e=this.createNode(),t=this.nextToken(),r=t.value,i=t.cooked;return this.finalize(e,new a.TemplateElement({raw:r,cooked:i},t.tail))},e.prototype.parseTemplateElement=function(){10!==this.lookahead.type&&this.throwUnexpectedToken();var e=this.createNode(),t=this.nextToken(),r=t.value,n=t.cooked;return this.finalize(e,new a.TemplateElement({raw:r,cooked:n},t.tail))},e.prototype.parseTemplateLiteral=function(){var e=this.createNode(),t=[],r=[],n=this.parseTemplateHead();for(r.push(n);!n.tail;)t.push(this.parseExpression()),n=this.parseTemplateElement(),r.push(n);return this.finalize(e,new a.TemplateLiteral(r,t))},e.prototype.reinterpretExpressionAsPattern=function(e){switch(e.type){case u.Syntax.Identifier:case u.Syntax.MemberExpression:case u.Syntax.RestElement:case u.Syntax.AssignmentPattern:break;case u.Syntax.SpreadElement:e.type=u.Syntax.RestElement,this.reinterpretExpressionAsPattern(e.argument);break;case u.Syntax.ArrayExpression:e.type=u.Syntax.ArrayPattern;for(var t=0;t<e.elements.length;t++)null!==e.elements[t]&&this.reinterpretExpressionAsPattern(e.elements[t]);break;case u.Syntax.ObjectExpression:for(e.type=u.Syntax.ObjectPattern,t=0;t<e.properties.length;t++)this.reinterpretExpressionAsPattern(e.properties[t].value);break;case u.Syntax.AssignmentExpression:e.type=u.Syntax.AssignmentPattern,delete e.operator,this.reinterpretExpressionAsPattern(e.left)}},e.prototype.parseGroupExpression=function(){var e;if(this.expect("("),this.match(")"))this.nextToken(),this.match("=>")||this.expect("=>"),e={type:"ArrowParameterPlaceHolder",params:[],async:!1};else{var t=this.lookahead,r=[];if(this.match("..."))e=this.parseRestElement(r),this.expect(")"),this.match("=>")||this.expect("=>"),e={type:"ArrowParameterPlaceHolder",params:[e],async:!1};else{var n=!1;if(this.context.isBindingElement=!0,e=this.inheritCoverGrammar(this.parseAssignmentExpression),this.match(",")){var i=[];for(this.context.isAssignmentTarget=!1,i.push(e);2!==this.lookahead.type&&this.match(",");){if(this.nextToken(),this.match(")")){this.nextToken();for(var o=0;o<i.length;o++)this.reinterpretExpressionAsPattern(i[o]);n=!0,e={type:"ArrowParameterPlaceHolder",params:i,async:!1}}else if(this.match("...")){for(this.context.isBindingElement||this.throwUnexpectedToken(this.lookahead),i.push(this.parseRestElement(r)),this.expect(")"),this.match("=>")||this.expect("=>"),this.context.isBindingElement=!1,o=0;o<i.length;o++)this.reinterpretExpressionAsPattern(i[o]);n=!0,e={type:"ArrowParameterPlaceHolder",params:i,async:!1}}else i.push(this.inheritCoverGrammar(this.parseAssignmentExpression));if(n)break}n||(e=this.finalize(this.startNode(t),new a.SequenceExpression(i)))}if(!n){if(this.expect(")"),this.match("=>")&&(e.type===u.Syntax.Identifier&&"yield"===e.name&&(n=!0,e={type:"ArrowParameterPlaceHolder",params:[e],async:!1}),!n)){if(this.context.isBindingElement||this.throwUnexpectedToken(this.lookahead),e.type===u.Syntax.SequenceExpression)for(o=0;o<e.expressions.length;o++)this.reinterpretExpressionAsPattern(e.expressions[o]);else this.reinterpretExpressionAsPattern(e);e={type:"ArrowParameterPlaceHolder",params:e.type===u.Syntax.SequenceExpression?e.expressions:[e],async:!1}}this.context.isBindingElement=!1}}}return e},e.prototype.parseArguments=function(){this.expect("(");var e=[];if(!this.match(")"))for(;;){var t=this.match("...")?this.parseSpreadElement():this.isolateCoverGrammar(this.parseAssignmentExpression);if(e.push(t),this.match(")"))break;if(this.expectCommaSeparator(),this.match(")"))break}return this.expect(")"),e},e.prototype.isIdentifierName=function(e){return 3===e.type||4===e.type||1===e.type||5===e.type},e.prototype.parseIdentifierName=function(){var e=this.createNode(),t=this.nextToken();return this.isIdentifierName(t)||this.throwUnexpectedToken(t),this.finalize(e,new a.Identifier(t.value))},e.prototype.parseNewExpression=function(){var e,t=this.createNode(),r=this.parseIdentifierName();if(n.assert("new"===r.name,"New expression must start with `new`"),this.match("."))if(this.nextToken(),3===this.lookahead.type&&this.context.inFunctionBody&&"target"===this.lookahead.value){var i=this.parseIdentifierName();e=new a.MetaProperty(r,i)}else this.throwUnexpectedToken(this.lookahead);else{var o=this.isolateCoverGrammar(this.parseLeftHandSideExpression),s=this.match("(")?this.parseArguments():[];e=new a.NewExpression(o,s),this.context.isAssignmentTarget=!1,this.context.isBindingElement=!1}return this.finalize(t,e)},e.prototype.parseAsyncArgument=function(){var e=this.parseAssignmentExpression();return this.context.firstCoverInitializedNameError=null,e},e.prototype.parseAsyncArguments=function(){this.expect("(");var e=[];if(!this.match(")"))for(;;){var t=this.match("...")?this.parseSpreadElement():this.isolateCoverGrammar(this.parseAsyncArgument);if(e.push(t),this.match(")"))break;if(this.expectCommaSeparator(),this.match(")"))break}return this.expect(")"),e},e.prototype.parseLeftHandSideExpressionAllowCall=function(){var e,t=this.lookahead,r=this.matchContextualKeyword("async"),n=this.context.allowIn;for(this.context.allowIn=!0,this.matchKeyword("super")&&this.context.inFunctionBody?(e=this.createNode(),this.nextToken(),e=this.finalize(e,new a.Super),this.match("(")||this.match(".")||this.match("[")||this.throwUnexpectedToken(this.lookahead)):e=this.inheritCoverGrammar(this.matchKeyword("new")?this.parseNewExpression:this.parsePrimaryExpression);;)if(this.match(".")){this.context.isBindingElement=!1,this.context.isAssignmentTarget=!0,this.expect(".");var i=this.parseIdentifierName();e=this.finalize(this.startNode(t),new a.StaticMemberExpression(e,i))}else if(this.match("(")){var o=r&&t.lineNumber===this.lookahead.lineNumber;this.context.isBindingElement=!1,this.context.isAssignmentTarget=!1;var s=o?this.parseAsyncArguments():this.parseArguments();if(e=this.finalize(this.startNode(t),new a.CallExpression(e,s)),o&&this.match("=>")){for(var u=0;u<s.length;++u)this.reinterpretExpressionAsPattern(s[u]);e={type:"ArrowParameterPlaceHolder",params:s,async:!0}}}else if(this.match("["))this.context.isBindingElement=!1,this.context.isAssignmentTarget=!0,this.expect("["),i=this.isolateCoverGrammar(this.parseExpression),this.expect("]"),e=this.finalize(this.startNode(t),new a.ComputedMemberExpression(e,i));else{if(10!==this.lookahead.type||!this.lookahead.head)break;var l=this.parseTemplateLiteral();e=this.finalize(this.startNode(t),new a.TaggedTemplateExpression(e,l))}return this.context.allowIn=n,e},e.prototype.parseSuper=function(){var e=this.createNode();return this.expectKeyword("super"),this.match("[")||this.match(".")||this.throwUnexpectedToken(this.lookahead),this.finalize(e,new a.Super)},e.prototype.parseLeftHandSideExpression=function(){n.assert(this.context.allowIn,"callee of new expression always allow in keyword.");for(var e=this.startNode(this.lookahead),t=this.matchKeyword("super")&&this.context.inFunctionBody?this.parseSuper():this.inheritCoverGrammar(this.matchKeyword("new")?this.parseNewExpression:this.parsePrimaryExpression);;)if(this.match("[")){this.context.isBindingElement=!1,this.context.isAssignmentTarget=!0,this.expect("[");var r=this.isolateCoverGrammar(this.parseExpression);this.expect("]"),t=this.finalize(e,new a.ComputedMemberExpression(t,r))}else if(this.match("."))this.context.isBindingElement=!1,this.context.isAssignmentTarget=!0,this.expect("."),r=this.parseIdentifierName(),t=this.finalize(e,new a.StaticMemberExpression(t,r));else{if(10!==this.lookahead.type||!this.lookahead.head)break;var i=this.parseTemplateLiteral();t=this.finalize(e,new a.TaggedTemplateExpression(t,i))}return t},e.prototype.parseUpdateExpression=function(){var e,t=this.lookahead;if(this.match("++")||this.match("--")){var r=this.startNode(t),n=this.nextToken();e=this.inheritCoverGrammar(this.parseUnaryExpression),this.context.strict&&e.type===u.Syntax.Identifier&&this.scanner.isRestrictedWord(e.name)&&this.tolerateError(o.Messages.StrictLHSPrefix),this.context.isAssignmentTarget||this.tolerateError(o.Messages.InvalidLHSInAssignment);var i=!0;e=this.finalize(r,new a.UpdateExpression(n.value,e,i)),this.context.isAssignmentTarget=!1,this.context.isBindingElement=!1}else if(e=this.inheritCoverGrammar(this.parseLeftHandSideExpressionAllowCall),!this.hasLineTerminator&&7===this.lookahead.type&&(this.match("++")||this.match("--"))){this.context.strict&&e.type===u.Syntax.Identifier&&this.scanner.isRestrictedWord(e.name)&&this.tolerateError(o.Messages.StrictLHSPostfix),this.context.isAssignmentTarget||this.tolerateError(o.Messages.InvalidLHSInAssignment),this.context.isAssignmentTarget=!1,this.context.isBindingElement=!1;var s=this.nextToken().value;i=!1,e=this.finalize(this.startNode(t),new a.UpdateExpression(s,e,i))}return e},e.prototype.parseAwaitExpression=function(){var e=this.createNode();this.nextToken();var t=this.parseUnaryExpression();return this.finalize(e,new a.AwaitExpression(t))},e.prototype.parseUnaryExpression=function(){var e;if(this.match("+")||this.match("-")||this.match("~")||this.match("!")||this.matchKeyword("delete")||this.matchKeyword("void")||this.matchKeyword("typeof")){var t=this.startNode(this.lookahead),r=this.nextToken();e=this.inheritCoverGrammar(this.parseUnaryExpression),e=this.finalize(t,new a.UnaryExpression(r.value,e)),this.context.strict&&"delete"===e.operator&&e.argument.type===u.Syntax.Identifier&&this.tolerateError(o.Messages.StrictDelete),this.context.isAssignmentTarget=!1,this.context.isBindingElement=!1}else e=this.context.await&&this.matchContextualKeyword("await")?this.parseAwaitExpression():this.parseUpdateExpression();return e},e.prototype.parseExponentiationExpression=function(){var e=this.lookahead,t=this.inheritCoverGrammar(this.parseUnaryExpression);if(t.type!==u.Syntax.UnaryExpression&&this.match("**")){this.nextToken(),this.context.isAssignmentTarget=!1,this.context.isBindingElement=!1;var r=t,n=this.isolateCoverGrammar(this.parseExponentiationExpression);t=this.finalize(this.startNode(e),new a.BinaryExpression("**",r,n))}return t},e.prototype.binaryPrecedence=function(e){var t=e.value;return 7===e.type?this.operatorPrecedence[t]||0:4===e.type&&("instanceof"===t||this.context.allowIn&&"in"===t)?7:0},e.prototype.parseBinaryExpression=function(){var e=this.lookahead,t=this.inheritCoverGrammar(this.parseExponentiationExpression),r=this.lookahead,n=this.binaryPrecedence(r);if(n>0){this.nextToken(),this.context.isAssignmentTarget=!1,this.context.isBindingElement=!1;for(var i=[e,this.lookahead],o=t,s=this.isolateCoverGrammar(this.parseExponentiationExpression),u=[o,r.value,s],l=[n];!((n=this.binaryPrecedence(this.lookahead))<=0);){for(;u.length>2&&n<=l[l.length-1];){s=u.pop();var c=u.pop();l.pop(),o=u.pop(),i.pop();var h=this.startNode(i[i.length-1]);u.push(this.finalize(h,new a.BinaryExpression(c,o,s)))}u.push(this.nextToken().value),l.push(n),i.push(this.lookahead),u.push(this.isolateCoverGrammar(this.parseExponentiationExpression))}var p=u.length-1;t=u[p];for(var f=i.pop();p>1;){var d=i.pop(),m=f&&f.lineStart;h=this.startNode(d,m),c=u[p-1],t=this.finalize(h,new a.BinaryExpression(c,u[p-2],t)),p-=2,f=d}}return t},e.prototype.parseConditionalExpression=function(){var e=this.lookahead,t=this.inheritCoverGrammar(this.parseBinaryExpression);if(this.match("?")){this.nextToken();var r=this.context.allowIn;this.context.allowIn=!0;var n=this.isolateCoverGrammar(this.parseAssignmentExpression);this.context.allowIn=r,this.expect(":");var i=this.isolateCoverGrammar(this.parseAssignmentExpression);t=this.finalize(this.startNode(e),new a.ConditionalExpression(t,n,i)),this.context.isAssignmentTarget=!1,this.context.isBindingElement=!1}return t},e.prototype.checkPatternParam=function(e,t){switch(t.type){case u.Syntax.Identifier:this.validateParam(e,t,t.name);break;case u.Syntax.RestElement:this.checkPatternParam(e,t.argument);break;case u.Syntax.AssignmentPattern:this.checkPatternParam(e,t.left);break;case u.Syntax.ArrayPattern:for(var r=0;r<t.elements.length;r++)null!==t.elements[r]&&this.checkPatternParam(e,t.elements[r]);break;case u.Syntax.ObjectPattern:for(r=0;r<t.properties.length;r++)this.checkPatternParam(e,t.properties[r].value)}e.simple=e.simple&&t instanceof a.Identifier},e.prototype.reinterpretAsCoverFormalsList=function(e){var t,r=[e],n=!1;switch(e.type){case u.Syntax.Identifier:break;case"ArrowParameterPlaceHolder":r=e.params,n=e.async;break;default:return null}t={simple:!0,paramSet:{}};for(var i=0;i<r.length;++i)(a=r[i]).type===u.Syntax.AssignmentPattern?a.right.type===u.Syntax.YieldExpression&&(a.right.argument&&this.throwUnexpectedToken(this.lookahead),a.right.type=u.Syntax.Identifier,a.right.name="yield",delete a.right.argument,delete a.right.delegate):n&&a.type===u.Syntax.Identifier&&"await"===a.name&&this.throwUnexpectedToken(this.lookahead),this.checkPatternParam(t,a),r[i]=a;if(this.context.strict||!this.context.allowYield)for(i=0;i<r.length;++i){var a;(a=r[i]).type===u.Syntax.YieldExpression&&this.throwUnexpectedToken(this.lookahead)}if(t.message===o.Messages.StrictParamDupe){var s=this.context.strict?t.stricted:t.firstRestricted;this.throwUnexpectedToken(s,t.message)}return{simple:t.simple,params:r,stricted:t.stricted,firstRestricted:t.firstRestricted,message:t.message}},e.prototype.parseAssignmentExpression=function(){var e;if(!this.context.allowYield&&this.matchKeyword("yield"))e=this.parseYieldExpression();else{var t=this.lookahead,r=t;if(e=this.parseConditionalExpression(),3===r.type&&r.lineNumber===this.lookahead.lineNumber&&"async"===r.value&&(3===this.lookahead.type||this.matchKeyword("yield"))){var n=this.parsePrimaryExpression();this.reinterpretExpressionAsPattern(n),e={type:"ArrowParameterPlaceHolder",params:[n],async:!0}}if("ArrowParameterPlaceHolder"===e.type||this.match("=>")){this.context.isAssignmentTarget=!1,this.context.isBindingElement=!1;var i=e.async,s=this.reinterpretAsCoverFormalsList(e);if(s){this.hasLineTerminator&&this.tolerateUnexpectedToken(this.lookahead),this.context.firstCoverInitializedNameError=null;var l=this.context.strict,c=this.context.allowStrictDirective;this.context.allowStrictDirective=s.simple;var h=this.context.allowYield,p=this.context.await;this.context.allowYield=!0,this.context.await=i;var f=this.startNode(t);this.expect("=>");var d=void 0;if(this.match("{")){var m=this.context.allowIn;this.context.allowIn=!0,d=this.parseFunctionSourceElements(),this.context.allowIn=m}else d=this.isolateCoverGrammar(this.parseAssignmentExpression);var y=d.type!==u.Syntax.BlockStatement;this.context.strict&&s.firstRestricted&&this.throwUnexpectedToken(s.firstRestricted,s.message),this.context.strict&&s.stricted&&this.tolerateUnexpectedToken(s.stricted,s.message),e=i?this.finalize(f,new a.AsyncArrowFunctionExpression(s.params,d,y)):this.finalize(f,new a.ArrowFunctionExpression(s.params,d,y)),this.context.strict=l,this.context.allowStrictDirective=c,this.context.allowYield=h,this.context.await=p}}else if(this.matchAssign()){if(this.context.isAssignmentTarget||this.tolerateError(o.Messages.InvalidLHSInAssignment),this.context.strict&&e.type===u.Syntax.Identifier){var v=e;this.scanner.isRestrictedWord(v.name)&&this.tolerateUnexpectedToken(r,o.Messages.StrictLHSAssignment),this.scanner.isStrictModeReservedWord(v.name)&&this.tolerateUnexpectedToken(r,o.Messages.StrictReservedWord)}this.match("=")?this.reinterpretExpressionAsPattern(e):(this.context.isAssignmentTarget=!1,this.context.isBindingElement=!1);var _=(r=this.nextToken()).value,g=this.isolateCoverGrammar(this.parseAssignmentExpression);e=this.finalize(this.startNode(t),new a.AssignmentExpression(_,e,g)),this.context.firstCoverInitializedNameError=null}}return e},e.prototype.parseExpression=function(){var e=this.lookahead,t=this.isolateCoverGrammar(this.parseAssignmentExpression);if(this.match(",")){var r=[];for(r.push(t);2!==this.lookahead.type&&this.match(",");)this.nextToken(),r.push(this.isolateCoverGrammar(this.parseAssignmentExpression));t=this.finalize(this.startNode(e),new a.SequenceExpression(r))}return t},e.prototype.parseStatementListItem=function(){var e;if(this.context.isAssignmentTarget=!0,this.context.isBindingElement=!0,4===this.lookahead.type)switch(this.lookahead.value){case"export":this.context.isModule||this.tolerateUnexpectedToken(this.lookahead,o.Messages.IllegalExportDeclaration),e=this.parseExportDeclaration();break;case"import":this.context.isModule||this.tolerateUnexpectedToken(this.lookahead,o.Messages.IllegalImportDeclaration),e=this.parseImportDeclaration();break;case"const":e=this.parseLexicalDeclaration({inFor:!1});break;case"function":e=this.parseFunctionDeclaration();break;case"class":e=this.parseClassDeclaration();break;case"let":e=this.isLexicalDeclaration()?this.parseLexicalDeclaration({inFor:!1}):this.parseStatement();break;default:e=this.parseStatement()}else e=this.parseStatement();return e},e.prototype.parseBlock=function(){var e=this.createNode();this.expect("{");for(var t=[];!this.match("}");)t.push(this.parseStatementListItem());return this.expect("}"),this.finalize(e,new a.BlockStatement(t))},e.prototype.parseLexicalBinding=function(e,t){var r=this.createNode(),n=this.parsePattern([],e);this.context.strict&&n.type===u.Syntax.Identifier&&this.scanner.isRestrictedWord(n.name)&&this.tolerateError(o.Messages.StrictVarName);var i=null;return"const"===e?this.matchKeyword("in")||this.matchContextualKeyword("of")||(this.match("=")?(this.nextToken(),i=this.isolateCoverGrammar(this.parseAssignmentExpression)):this.throwError(o.Messages.DeclarationMissingInitializer,"const")):(!t.inFor&&n.type!==u.Syntax.Identifier||this.match("="))&&(this.expect("="),i=this.isolateCoverGrammar(this.parseAssignmentExpression)),this.finalize(r,new a.VariableDeclarator(n,i))},e.prototype.parseBindingList=function(e,t){for(var r=[this.parseLexicalBinding(e,t)];this.match(",");)this.nextToken(),r.push(this.parseLexicalBinding(e,t));return r},e.prototype.isLexicalDeclaration=function(){var e=this.scanner.saveState();this.scanner.scanComments();var t=this.scanner.lex();return this.scanner.restoreState(e),3===t.type||7===t.type&&"["===t.value||7===t.type&&"{"===t.value||4===t.type&&"let"===t.value||4===t.type&&"yield"===t.value},e.prototype.parseLexicalDeclaration=function(e){var t=this.createNode(),r=this.nextToken().value;n.assert("let"===r||"const"===r,"Lexical declaration must be either let or const");var i=this.parseBindingList(r,e);return this.consumeSemicolon(),this.finalize(t,new a.VariableDeclaration(i,r))},e.prototype.parseBindingRestElement=function(e,t){var r=this.createNode();this.expect("...");var n=this.parsePattern(e,t);return this.finalize(r,new a.RestElement(n))},e.prototype.parseArrayPattern=function(e,t){var r=this.createNode();this.expect("[");for(var n=[];!this.match("]");)if(this.match(","))this.nextToken(),n.push(null);else{if(this.match("...")){n.push(this.parseBindingRestElement(e,t));break}n.push(this.parsePatternWithDefault(e,t)),this.match("]")||this.expect(",")}return this.expect("]"),this.finalize(r,new a.ArrayPattern(n))},e.prototype.parsePropertyPattern=function(e,t){var r,n,i=this.createNode(),o=!1,s=!1;if(3===this.lookahead.type){var u=this.lookahead;r=this.parseVariableIdentifier();var l=this.finalize(i,new a.Identifier(u.value));if(this.match("=")){e.push(u),s=!0,this.nextToken();var c=this.parseAssignmentExpression();n=this.finalize(this.startNode(u),new a.AssignmentPattern(l,c))}else this.match(":")?(this.expect(":"),n=this.parsePatternWithDefault(e,t)):(e.push(u),s=!0,n=l)}else o=this.match("["),r=this.parseObjectPropertyKey(),this.expect(":"),n=this.parsePatternWithDefault(e,t);return this.finalize(i,new a.Property("init",r,o,n,!1,s))},e.prototype.parseObjectPattern=function(e,t){var r=this.createNode(),n=[];for(this.expect("{");!this.match("}");)n.push(this.parsePropertyPattern(e,t)),this.match("}")||this.expect(",");return this.expect("}"),this.finalize(r,new a.ObjectPattern(n))},e.prototype.parsePattern=function(e,t){var r;return this.match("[")?r=this.parseArrayPattern(e,t):this.match("{")?r=this.parseObjectPattern(e,t):(!this.matchKeyword("let")||"const"!==t&&"let"!==t||this.tolerateUnexpectedToken(this.lookahead,o.Messages.LetInLexicalBinding),e.push(this.lookahead),r=this.parseVariableIdentifier(t)),r},e.prototype.parsePatternWithDefault=function(e,t){var r=this.lookahead,n=this.parsePattern(e,t);if(this.match("=")){this.nextToken();var i=this.context.allowYield;this.context.allowYield=!0;var o=this.isolateCoverGrammar(this.parseAssignmentExpression);this.context.allowYield=i,n=this.finalize(this.startNode(r),new a.AssignmentPattern(n,o))}return n},e.prototype.parseVariableIdentifier=function(e){var t=this.createNode(),r=this.nextToken();return 4===r.type&&"yield"===r.value?this.context.strict?this.tolerateUnexpectedToken(r,o.Messages.StrictReservedWord):this.context.allowYield||this.throwUnexpectedToken(r):3!==r.type?this.context.strict&&4===r.type&&this.scanner.isStrictModeReservedWord(r.value)?this.tolerateUnexpectedToken(r,o.Messages.StrictReservedWord):(this.context.strict||"let"!==r.value||"var"!==e)&&this.throwUnexpectedToken(r):(this.context.isModule||this.context.await)&&3===r.type&&"await"===r.value&&this.tolerateUnexpectedToken(r),this.finalize(t,new a.Identifier(r.value))},e.prototype.parseVariableDeclaration=function(e){var t=this.createNode(),r=this.parsePattern([],"var");this.context.strict&&r.type===u.Syntax.Identifier&&this.scanner.isRestrictedWord(r.name)&&this.tolerateError(o.Messages.StrictVarName);var n=null;return this.match("=")?(this.nextToken(),n=this.isolateCoverGrammar(this.parseAssignmentExpression)):r.type===u.Syntax.Identifier||e.inFor||this.expect("="),this.finalize(t,new a.VariableDeclarator(r,n))},e.prototype.parseVariableDeclarationList=function(e){var t={inFor:e.inFor},r=[];for(r.push(this.parseVariableDeclaration(t));this.match(",");)this.nextToken(),r.push(this.parseVariableDeclaration(t));return r},e.prototype.parseVariableStatement=function(){var e=this.createNode();this.expectKeyword("var");var t=this.parseVariableDeclarationList({inFor:!1});return this.consumeSemicolon(),this.finalize(e,new a.VariableDeclaration(t,"var"))},e.prototype.parseEmptyStatement=function(){var e=this.createNode();return this.expect(";"),this.finalize(e,new a.EmptyStatement)},e.prototype.parseExpressionStatement=function(){var e=this.createNode(),t=this.parseExpression();return this.consumeSemicolon(),this.finalize(e,new a.ExpressionStatement(t))},e.prototype.parseIfClause=function(){return this.context.strict&&this.matchKeyword("function")&&this.tolerateError(o.Messages.StrictFunction),this.parseStatement()},e.prototype.parseIfStatement=function(){var e,t=this.createNode(),r=null;this.expectKeyword("if"),this.expect("(");var n=this.parseExpression();return!this.match(")")&&this.config.tolerant?(this.tolerateUnexpectedToken(this.nextToken()),e=this.finalize(this.createNode(),new a.EmptyStatement)):(this.expect(")"),e=this.parseIfClause(),this.matchKeyword("else")&&(this.nextToken(),r=this.parseIfClause())),this.finalize(t,new a.IfStatement(n,e,r))},e.prototype.parseDoWhileStatement=function(){var e=this.createNode();this.expectKeyword("do");var t=this.context.inIteration;this.context.inIteration=!0;var r=this.parseStatement();this.context.inIteration=t,this.expectKeyword("while"),this.expect("(");var n=this.parseExpression();return!this.match(")")&&this.config.tolerant?this.tolerateUnexpectedToken(this.nextToken()):(this.expect(")"),this.match(";")&&this.nextToken()),this.finalize(e,new a.DoWhileStatement(r,n))},e.prototype.parseWhileStatement=function(){var e,t=this.createNode();this.expectKeyword("while"),this.expect("(");var r=this.parseExpression();if(!this.match(")")&&this.config.tolerant)this.tolerateUnexpectedToken(this.nextToken()),e=this.finalize(this.createNode(),new a.EmptyStatement);else{this.expect(")");var n=this.context.inIteration;this.context.inIteration=!0,e=this.parseStatement(),this.context.inIteration=n}return this.finalize(t,new a.WhileStatement(r,e))},e.prototype.parseForStatement=function(){var e,t,r,n=null,i=null,s=null,l=!0,c=this.createNode();if(this.expectKeyword("for"),this.expect("("),this.match(";"))this.nextToken();else if(this.matchKeyword("var")){n=this.createNode(),this.nextToken();var h=this.context.allowIn;this.context.allowIn=!1;var p=this.parseVariableDeclarationList({inFor:!0});if(this.context.allowIn=h,1===p.length&&this.matchKeyword("in")){var f=p[0];f.init&&(f.id.type===u.Syntax.ArrayPattern||f.id.type===u.Syntax.ObjectPattern||this.context.strict)&&this.tolerateError(o.Messages.ForInOfLoopInitializer,"for-in"),n=this.finalize(n,new a.VariableDeclaration(p,"var")),this.nextToken(),e=n,t=this.parseExpression(),n=null}else 1===p.length&&null===p[0].init&&this.matchContextualKeyword("of")?(n=this.finalize(n,new a.VariableDeclaration(p,"var")),this.nextToken(),e=n,t=this.parseAssignmentExpression(),n=null,l=!1):(n=this.finalize(n,new a.VariableDeclaration(p,"var")),this.expect(";"))}else if(this.matchKeyword("const")||this.matchKeyword("let")){n=this.createNode();var d=this.nextToken().value;this.context.strict||"in"!==this.lookahead.value?(h=this.context.allowIn,this.context.allowIn=!1,p=this.parseBindingList(d,{inFor:!0}),this.context.allowIn=h,1===p.length&&null===p[0].init&&this.matchKeyword("in")?(n=this.finalize(n,new a.VariableDeclaration(p,d)),this.nextToken(),e=n,t=this.parseExpression(),n=null):1===p.length&&null===p[0].init&&this.matchContextualKeyword("of")?(n=this.finalize(n,new a.VariableDeclaration(p,d)),this.nextToken(),e=n,t=this.parseAssignmentExpression(),n=null,l=!1):(this.consumeSemicolon(),n=this.finalize(n,new a.VariableDeclaration(p,d)))):(n=this.finalize(n,new a.Identifier(d)),this.nextToken(),e=n,t=this.parseExpression(),n=null)}else{var m=this.lookahead;if(h=this.context.allowIn,this.context.allowIn=!1,n=this.inheritCoverGrammar(this.parseAssignmentExpression),this.context.allowIn=h,this.matchKeyword("in"))this.context.isAssignmentTarget&&n.type!==u.Syntax.AssignmentExpression||this.tolerateError(o.Messages.InvalidLHSInForIn),this.nextToken(),this.reinterpretExpressionAsPattern(n),e=n,t=this.parseExpression(),n=null;else if(this.matchContextualKeyword("of"))this.context.isAssignmentTarget&&n.type!==u.Syntax.AssignmentExpression||this.tolerateError(o.Messages.InvalidLHSInForLoop),this.nextToken(),this.reinterpretExpressionAsPattern(n),e=n,t=this.parseAssignmentExpression(),n=null,l=!1;else{if(this.match(",")){for(var y=[n];this.match(",");)this.nextToken(),y.push(this.isolateCoverGrammar(this.parseAssignmentExpression));n=this.finalize(this.startNode(m),new a.SequenceExpression(y))}this.expect(";")}}if(void 0===e&&(this.match(";")||(i=this.parseExpression()),this.expect(";"),this.match(")")||(s=this.parseExpression())),!this.match(")")&&this.config.tolerant)this.tolerateUnexpectedToken(this.nextToken()),r=this.finalize(this.createNode(),new a.EmptyStatement);else{this.expect(")");var v=this.context.inIteration;this.context.inIteration=!0,r=this.isolateCoverGrammar(this.parseStatement),this.context.inIteration=v}return void 0===e?this.finalize(c,new a.ForStatement(n,i,s,r)):l?this.finalize(c,new a.ForInStatement(e,t,r)):this.finalize(c,new a.ForOfStatement(e,t,r))},e.prototype.parseContinueStatement=function(){var e=this.createNode();this.expectKeyword("continue");var t=null;if(3===this.lookahead.type&&!this.hasLineTerminator){var r=this.parseVariableIdentifier();t=r;var n="$"+r.name;Object.prototype.hasOwnProperty.call(this.context.labelSet,n)||this.throwError(o.Messages.UnknownLabel,r.name)}return this.consumeSemicolon(),null!==t||this.context.inIteration||this.throwError(o.Messages.IllegalContinue),this.finalize(e,new a.ContinueStatement(t))},e.prototype.parseBreakStatement=function(){var e=this.createNode();this.expectKeyword("break");var t=null;if(3===this.lookahead.type&&!this.hasLineTerminator){var r=this.parseVariableIdentifier(),n="$"+r.name;Object.prototype.hasOwnProperty.call(this.context.labelSet,n)||this.throwError(o.Messages.UnknownLabel,r.name),t=r}return this.consumeSemicolon(),null!==t||this.context.inIteration||this.context.inSwitch||this.throwError(o.Messages.IllegalBreak),this.finalize(e,new a.BreakStatement(t))},e.prototype.parseReturnStatement=function(){this.context.inFunctionBody||this.tolerateError(o.Messages.IllegalReturn);var e=this.createNode();this.expectKeyword("return");var t=(this.match(";")||this.match("}")||this.hasLineTerminator||2===this.lookahead.type)&&8!==this.lookahead.type&&10!==this.lookahead.type?null:this.parseExpression();return this.consumeSemicolon(),this.finalize(e,new a.ReturnStatement(t))},e.prototype.parseWithStatement=function(){this.context.strict&&this.tolerateError(o.Messages.StrictModeWith);var e,t=this.createNode();this.expectKeyword("with"),this.expect("(");var r=this.parseExpression();return!this.match(")")&&this.config.tolerant?(this.tolerateUnexpectedToken(this.nextToken()),e=this.finalize(this.createNode(),new a.EmptyStatement)):(this.expect(")"),e=this.parseStatement()),this.finalize(t,new a.WithStatement(r,e))},e.prototype.parseSwitchCase=function(){var e,t=this.createNode();this.matchKeyword("default")?(this.nextToken(),e=null):(this.expectKeyword("case"),e=this.parseExpression()),this.expect(":");for(var r=[];!(this.match("}")||this.matchKeyword("default")||this.matchKeyword("case"));)r.push(this.parseStatementListItem());return this.finalize(t,new a.SwitchCase(e,r))},e.prototype.parseSwitchStatement=function(){var e=this.createNode();this.expectKeyword("switch"),this.expect("(");var t=this.parseExpression();this.expect(")");var r=this.context.inSwitch;this.context.inSwitch=!0;var n=[],i=!1;for(this.expect("{");!this.match("}");){var s=this.parseSwitchCase();null===s.test&&(i&&this.throwError(o.Messages.MultipleDefaultsInSwitch),i=!0),n.push(s)}return this.expect("}"),this.context.inSwitch=r,this.finalize(e,new a.SwitchStatement(t,n))},e.prototype.parseLabelledStatement=function(){var e,t=this.createNode(),r=this.parseExpression();if(r.type===u.Syntax.Identifier&&this.match(":")){this.nextToken();var n=r,i="$"+n.name;Object.prototype.hasOwnProperty.call(this.context.labelSet,i)&&this.throwError(o.Messages.Redeclaration,"Label",n.name),this.context.labelSet[i]=!0;var s=void 0;if(this.matchKeyword("class"))this.tolerateUnexpectedToken(this.lookahead),s=this.parseClassDeclaration();else if(this.matchKeyword("function")){var l=this.lookahead,c=this.parseFunctionDeclaration();this.context.strict?this.tolerateUnexpectedToken(l,o.Messages.StrictFunction):c.generator&&this.tolerateUnexpectedToken(l,o.Messages.GeneratorInLegacyContext),s=c}else s=this.parseStatement();delete this.context.labelSet[i],e=new a.LabeledStatement(n,s)}else this.consumeSemicolon(),e=new a.ExpressionStatement(r);return this.finalize(t,e)},e.prototype.parseThrowStatement=function(){var e=this.createNode();this.expectKeyword("throw"),this.hasLineTerminator&&this.throwError(o.Messages.NewlineAfterThrow);var t=this.parseExpression();return this.consumeSemicolon(),this.finalize(e,new a.ThrowStatement(t))},e.prototype.parseCatchClause=function(){var e=this.createNode();this.expectKeyword("catch"),this.expect("("),this.match(")")&&this.throwUnexpectedToken(this.lookahead);for(var t=[],r=this.parsePattern(t),n={},i=0;i<t.length;i++){var s="$"+t[i].value;Object.prototype.hasOwnProperty.call(n,s)&&this.tolerateError(o.Messages.DuplicateBinding,t[i].value),n[s]=!0}this.context.strict&&r.type===u.Syntax.Identifier&&this.scanner.isRestrictedWord(r.name)&&this.tolerateError(o.Messages.StrictCatchVariable),this.expect(")");var l=this.parseBlock();return this.finalize(e,new a.CatchClause(r,l))},e.prototype.parseFinallyClause=function(){return this.expectKeyword("finally"),this.parseBlock()},e.prototype.parseTryStatement=function(){var e=this.createNode();this.expectKeyword("try");var t=this.parseBlock(),r=this.matchKeyword("catch")?this.parseCatchClause():null,n=this.matchKeyword("finally")?this.parseFinallyClause():null;return r||n||this.throwError(o.Messages.NoCatchOrFinally),this.finalize(e,new a.TryStatement(t,r,n))},e.prototype.parseDebuggerStatement=function(){var e=this.createNode();return this.expectKeyword("debugger"),this.consumeSemicolon(),this.finalize(e,new a.DebuggerStatement)},e.prototype.parseStatement=function(){var e;switch(this.lookahead.type){case 1:case 5:case 6:case 8:case 10:case 9:e=this.parseExpressionStatement();break;case 7:var t=this.lookahead.value;e="{"===t?this.parseBlock():"("===t?this.parseExpressionStatement():";"===t?this.parseEmptyStatement():this.parseExpressionStatement();break;case 3:e=this.matchAsyncFunction()?this.parseFunctionDeclaration():this.parseLabelledStatement();break;case 4:switch(this.lookahead.value){case"break":e=this.parseBreakStatement();break;case"continue":e=this.parseContinueStatement();break;case"debugger":e=this.parseDebuggerStatement();break;case"do":e=this.parseDoWhileStatement();break;case"for":e=this.parseForStatement();break;case"function":e=this.parseFunctionDeclaration();break;case"if":e=this.parseIfStatement();break;case"return":e=this.parseReturnStatement();break;case"switch":e=this.parseSwitchStatement();break;case"throw":e=this.parseThrowStatement();break;case"try":e=this.parseTryStatement();break;case"var":e=this.parseVariableStatement();break;case"while":e=this.parseWhileStatement();break;case"with":e=this.parseWithStatement();break;default:e=this.parseExpressionStatement()}break;default:e=this.throwUnexpectedToken(this.lookahead)}return e},e.prototype.parseFunctionSourceElements=function(){var e=this.createNode();this.expect("{");var t=this.parseDirectivePrologues(),r=this.context.labelSet,n=this.context.inIteration,i=this.context.inSwitch,o=this.context.inFunctionBody;for(this.context.labelSet={},this.context.inIteration=!1,this.context.inSwitch=!1,this.context.inFunctionBody=!0;2!==this.lookahead.type&&!this.match("}");)t.push(this.parseStatementListItem());return this.expect("}"),this.context.labelSet=r,this.context.inIteration=n,this.context.inSwitch=i,this.context.inFunctionBody=o,this.finalize(e,new a.BlockStatement(t))},e.prototype.validateParam=function(e,t,r){var n="$"+r;this.context.strict?(this.scanner.isRestrictedWord(r)&&(e.stricted=t,e.message=o.Messages.StrictParamName),Object.prototype.hasOwnProperty.call(e.paramSet,n)&&(e.stricted=t,e.message=o.Messages.StrictParamDupe)):e.firstRestricted||(this.scanner.isRestrictedWord(r)?(e.firstRestricted=t,e.message=o.Messages.StrictParamName):this.scanner.isStrictModeReservedWord(r)?(e.firstRestricted=t,e.message=o.Messages.StrictReservedWord):Object.prototype.hasOwnProperty.call(e.paramSet,n)&&(e.stricted=t,e.message=o.Messages.StrictParamDupe)),"function"==typeof Object.defineProperty?Object.defineProperty(e.paramSet,n,{value:!0,enumerable:!0,writable:!0,configurable:!0}):e.paramSet[n]=!0},e.prototype.parseRestElement=function(e){var t=this.createNode();this.expect("...");var r=this.parsePattern(e);return this.match("=")&&this.throwError(o.Messages.DefaultRestParameter),this.match(")")||this.throwError(o.Messages.ParameterAfterRestParameter),this.finalize(t,new a.RestElement(r))},e.prototype.parseFormalParameter=function(e){for(var t=[],r=this.match("...")?this.parseRestElement(t):this.parsePatternWithDefault(t),n=0;n<t.length;n++)this.validateParam(e,t[n],t[n].value);e.simple=e.simple&&r instanceof a.Identifier,e.params.push(r)},e.prototype.parseFormalParameters=function(e){var t;if(t={simple:!0,params:[],firstRestricted:e},this.expect("("),!this.match(")"))for(t.paramSet={};2!==this.lookahead.type&&(this.parseFormalParameter(t),!this.match(")"))&&(this.expect(","),!this.match(")")););return this.expect(")"),{simple:t.simple,params:t.params,stricted:t.stricted,firstRestricted:t.firstRestricted,message:t.message}},e.prototype.matchAsyncFunction=function(){var e=this.matchContextualKeyword("async");if(e){var t=this.scanner.saveState();this.scanner.scanComments();var r=this.scanner.lex();this.scanner.restoreState(t),e=t.lineNumber===r.lineNumber&&4===r.type&&"function"===r.value}return e},e.prototype.parseFunctionDeclaration=function(e){var t=this.createNode(),r=this.matchContextualKeyword("async");r&&this.nextToken(),this.expectKeyword("function");var n,i=!r&&this.match("*");i&&this.nextToken();var s=null,u=null;if(!e||!this.match("(")){var l=this.lookahead;s=this.parseVariableIdentifier(),this.context.strict?this.scanner.isRestrictedWord(l.value)&&this.tolerateUnexpectedToken(l,o.Messages.StrictFunctionName):this.scanner.isRestrictedWord(l.value)?(u=l,n=o.Messages.StrictFunctionName):this.scanner.isStrictModeReservedWord(l.value)&&(u=l,n=o.Messages.StrictReservedWord)}var c=this.context.await,h=this.context.allowYield;this.context.await=r,this.context.allowYield=!i;var p=this.parseFormalParameters(u),f=p.params,d=p.stricted;u=p.firstRestricted,p.message&&(n=p.message);var m=this.context.strict,y=this.context.allowStrictDirective;this.context.allowStrictDirective=p.simple;var v=this.parseFunctionSourceElements();return this.context.strict&&u&&this.throwUnexpectedToken(u,n),this.context.strict&&d&&this.tolerateUnexpectedToken(d,n),this.context.strict=m,this.context.allowStrictDirective=y,this.context.await=c,this.context.allowYield=h,r?this.finalize(t,new a.AsyncFunctionDeclaration(s,f,v)):this.finalize(t,new a.FunctionDeclaration(s,f,v,i))},e.prototype.parseFunctionExpression=function(){var e=this.createNode(),t=this.matchContextualKeyword("async");t&&this.nextToken(),this.expectKeyword("function");var r,n=!t&&this.match("*");n&&this.nextToken();var i,s=null,u=this.context.await,l=this.context.allowYield;if(this.context.await=t,this.context.allowYield=!n,!this.match("(")){var c=this.lookahead;s=this.context.strict||n||!this.matchKeyword("yield")?this.parseVariableIdentifier():this.parseIdentifierName(),this.context.strict?this.scanner.isRestrictedWord(c.value)&&this.tolerateUnexpectedToken(c,o.Messages.StrictFunctionName):this.scanner.isRestrictedWord(c.value)?(i=c,r=o.Messages.StrictFunctionName):this.scanner.isStrictModeReservedWord(c.value)&&(i=c,r=o.Messages.StrictReservedWord)}var h=this.parseFormalParameters(i),p=h.params,f=h.stricted;i=h.firstRestricted,h.message&&(r=h.message);var d=this.context.strict,m=this.context.allowStrictDirective;this.context.allowStrictDirective=h.simple;var y=this.parseFunctionSourceElements();return this.context.strict&&i&&this.throwUnexpectedToken(i,r),this.context.strict&&f&&this.tolerateUnexpectedToken(f,r),this.context.strict=d,this.context.allowStrictDirective=m,this.context.await=u,this.context.allowYield=l,t?this.finalize(e,new a.AsyncFunctionExpression(s,p,y)):this.finalize(e,new a.FunctionExpression(s,p,y,n))},e.prototype.parseDirective=function(){var e=this.lookahead,t=this.createNode(),r=this.parseExpression(),n=r.type===u.Syntax.Literal?this.getTokenRaw(e).slice(1,-1):null;return this.consumeSemicolon(),this.finalize(t,n?new a.Directive(r,n):new a.ExpressionStatement(r))},e.prototype.parseDirectivePrologues=function(){for(var e=null,t=[];;){var r=this.lookahead;if(8!==r.type)break;var n=this.parseDirective();t.push(n);var i=n.directive;if("string"!=typeof i)break;"use strict"===i?(this.context.strict=!0,e&&this.tolerateUnexpectedToken(e,o.Messages.StrictOctalLiteral),this.context.allowStrictDirective||this.tolerateUnexpectedToken(r,o.Messages.IllegalLanguageModeDirective)):!e&&r.octal&&(e=r)}return t},e.prototype.qualifiedPropertyName=function(e){switch(e.type){case 3:case 8:case 1:case 5:case 6:case 4:return!0;case 7:return"["===e.value}return!1},e.prototype.parseGetterMethod=function(){var e=this.createNode(),t=this.context.allowYield;this.context.allowYield=!0;var r=this.parseFormalParameters();r.params.length>0&&this.tolerateError(o.Messages.BadGetterArity);var n=this.parsePropertyMethod(r);return this.context.allowYield=t,this.finalize(e,new a.FunctionExpression(null,r.params,n,!1))},e.prototype.parseSetterMethod=function(){var e=this.createNode(),t=this.context.allowYield;this.context.allowYield=!0;var r=this.parseFormalParameters();1!==r.params.length?this.tolerateError(o.Messages.BadSetterArity):r.params[0]instanceof a.RestElement&&this.tolerateError(o.Messages.BadSetterRestParameter);var n=this.parsePropertyMethod(r);return this.context.allowYield=t,this.finalize(e,new a.FunctionExpression(null,r.params,n,!1))},e.prototype.parseGeneratorMethod=function(){var e=this.createNode(),t=this.context.allowYield;this.context.allowYield=!0;var r=this.parseFormalParameters();this.context.allowYield=!1;var n=this.parsePropertyMethod(r);return this.context.allowYield=t,this.finalize(e,new a.FunctionExpression(null,r.params,n,!0))},e.prototype.isStartOfExpression=function(){var e=!0,t=this.lookahead.value;switch(this.lookahead.type){case 7:e="["===t||"("===t||"{"===t||"+"===t||"-"===t||"!"===t||"~"===t||"++"===t||"--"===t||"/"===t||"/="===t;break;case 4:e="class"===t||"delete"===t||"function"===t||"let"===t||"new"===t||"super"===t||"this"===t||"typeof"===t||"void"===t||"yield"===t}return e},e.prototype.parseYieldExpression=function(){var e=this.createNode();this.expectKeyword("yield");var t=null,r=!1;if(!this.hasLineTerminator){var n=this.context.allowYield;this.context.allowYield=!1,(r=this.match("*"))?(this.nextToken(),t=this.parseAssignmentExpression()):this.isStartOfExpression()&&(t=this.parseAssignmentExpression()),this.context.allowYield=n}return this.finalize(e,new a.YieldExpression(t,r))},e.prototype.parseClassElement=function(e){var t=this.lookahead,r=this.createNode(),n="",i=null,s=null,u=!1,l=!1,c=!1,h=!1;if(this.match("*"))this.nextToken();else if(u=this.match("["),"static"===(i=this.parseObjectPropertyKey()).name&&(this.qualifiedPropertyName(this.lookahead)||this.match("*"))&&(t=this.lookahead,c=!0,u=this.match("["),this.match("*")?this.nextToken():i=this.parseObjectPropertyKey()),3===t.type&&!this.hasLineTerminator&&"async"===t.value){var p=this.lookahead.value;":"!==p&&"("!==p&&"*"!==p&&(h=!0,t=this.lookahead,i=this.parseObjectPropertyKey(),3===t.type&&"constructor"===t.value&&this.tolerateUnexpectedToken(t,o.Messages.ConstructorIsAsync))}var f=this.qualifiedPropertyName(this.lookahead);return 3===t.type?"get"===t.value&&f?(n="get",u=this.match("["),i=this.parseObjectPropertyKey(),this.context.allowYield=!1,s=this.parseGetterMethod()):"set"===t.value&&f&&(n="set",u=this.match("["),i=this.parseObjectPropertyKey(),s=this.parseSetterMethod()):7===t.type&&"*"===t.value&&f&&(n="init",u=this.match("["),i=this.parseObjectPropertyKey(),s=this.parseGeneratorMethod(),l=!0),!n&&i&&this.match("(")&&(n="init",s=h?this.parsePropertyMethodAsyncFunction():this.parsePropertyMethodFunction(),l=!0),n||this.throwUnexpectedToken(this.lookahead),"init"===n&&(n="method"),u||(c&&this.isPropertyKey(i,"prototype")&&this.throwUnexpectedToken(t,o.Messages.StaticPrototype),!c&&this.isPropertyKey(i,"constructor")&&(("method"!==n||!l||s&&s.generator)&&this.throwUnexpectedToken(t,o.Messages.ConstructorSpecialMethod),e.value?this.throwUnexpectedToken(t,o.Messages.DuplicateConstructor):e.value=!0,n="constructor")),this.finalize(r,new a.MethodDefinition(i,u,s,n,c))},e.prototype.parseClassElementList=function(){var e=[],t={value:!1};for(this.expect("{");!this.match("}");)this.match(";")?this.nextToken():e.push(this.parseClassElement(t));return this.expect("}"),e},e.prototype.parseClassBody=function(){var e=this.createNode(),t=this.parseClassElementList();return this.finalize(e,new a.ClassBody(t))},e.prototype.parseClassDeclaration=function(e){var t=this.createNode(),r=this.context.strict;this.context.strict=!0,this.expectKeyword("class");var n=e&&3!==this.lookahead.type?null:this.parseVariableIdentifier(),i=null;this.matchKeyword("extends")&&(this.nextToken(),i=this.isolateCoverGrammar(this.parseLeftHandSideExpressionAllowCall));var o=this.parseClassBody();return this.context.strict=r,this.finalize(t,new a.ClassDeclaration(n,i,o))},e.prototype.parseClassExpression=function(){var e=this.createNode(),t=this.context.strict;this.context.strict=!0,this.expectKeyword("class");var r=3===this.lookahead.type?this.parseVariableIdentifier():null,n=null;this.matchKeyword("extends")&&(this.nextToken(),n=this.isolateCoverGrammar(this.parseLeftHandSideExpressionAllowCall));var i=this.parseClassBody();return this.context.strict=t,this.finalize(e,new a.ClassExpression(r,n,i))},e.prototype.parseModule=function(){this.context.strict=!0,this.context.isModule=!0,this.scanner.isModule=!0;for(var e=this.createNode(),t=this.parseDirectivePrologues();2!==this.lookahead.type;)t.push(this.parseStatementListItem());return this.finalize(e,new a.Module(t))},e.prototype.parseScript=function(){for(var e=this.createNode(),t=this.parseDirectivePrologues();2!==this.lookahead.type;)t.push(this.parseStatementListItem());return this.finalize(e,new a.Script(t))},e.prototype.parseModuleSpecifier=function(){var e=this.createNode();8!==this.lookahead.type&&this.throwError(o.Messages.InvalidModuleSpecifier);var t=this.nextToken(),r=this.getTokenRaw(t);return this.finalize(e,new a.Literal(t.value,r))},e.prototype.parseImportSpecifier=function(){var e,t,r=this.createNode();return 3===this.lookahead.type?(t=e=this.parseVariableIdentifier(),this.matchContextualKeyword("as")&&(this.nextToken(),t=this.parseVariableIdentifier())):(t=e=this.parseIdentifierName(),this.matchContextualKeyword("as")?(this.nextToken(),t=this.parseVariableIdentifier()):this.throwUnexpectedToken(this.nextToken())),this.finalize(r,new a.ImportSpecifier(t,e))},e.prototype.parseNamedImports=function(){this.expect("{");for(var e=[];!this.match("}");)e.push(this.parseImportSpecifier()),this.match("}")||this.expect(",");return this.expect("}"),e},e.prototype.parseImportDefaultSpecifier=function(){var e=this.createNode(),t=this.parseIdentifierName();return this.finalize(e,new a.ImportDefaultSpecifier(t))},e.prototype.parseImportNamespaceSpecifier=function(){var e=this.createNode();this.expect("*"),this.matchContextualKeyword("as")||this.throwError(o.Messages.NoAsAfterImportNamespace),this.nextToken();var t=this.parseIdentifierName();return this.finalize(e,new a.ImportNamespaceSpecifier(t))},e.prototype.parseImportDeclaration=function(){this.context.inFunctionBody&&this.throwError(o.Messages.IllegalImportDeclaration);var e,t=this.createNode();this.expectKeyword("import");var r=[];if(8===this.lookahead.type)e=this.parseModuleSpecifier();else{if(this.match("{")?r=r.concat(this.parseNamedImports()):this.match("*")?r.push(this.parseImportNamespaceSpecifier()):this.isIdentifierName(this.lookahead)&&!this.matchKeyword("default")?(r.push(this.parseImportDefaultSpecifier()),this.match(",")&&(this.nextToken(),this.match("*")?r.push(this.parseImportNamespaceSpecifier()):this.match("{")?r=r.concat(this.parseNamedImports()):this.throwUnexpectedToken(this.lookahead))):this.throwUnexpectedToken(this.nextToken()),!this.matchContextualKeyword("from")){var n=this.lookahead.value?o.Messages.UnexpectedToken:o.Messages.MissingFromClause;this.throwError(n,this.lookahead.value)}this.nextToken(),e=this.parseModuleSpecifier()}return this.consumeSemicolon(),this.finalize(t,new a.ImportDeclaration(r,e))},e.prototype.parseExportSpecifier=function(){var e=this.createNode(),t=this.parseIdentifierName(),r=t;return this.matchContextualKeyword("as")&&(this.nextToken(),r=this.parseIdentifierName()),this.finalize(e,new a.ExportSpecifier(t,r))},e.prototype.parseExportDeclaration=function(){this.context.inFunctionBody&&this.throwError(o.Messages.IllegalExportDeclaration);var e,t=this.createNode();if(this.expectKeyword("export"),this.matchKeyword("default"))if(this.nextToken(),this.matchKeyword("function")){var r=this.parseFunctionDeclaration(!0);e=this.finalize(t,new a.ExportDefaultDeclaration(r))}else this.matchKeyword("class")?(r=this.parseClassDeclaration(!0),e=this.finalize(t,new a.ExportDefaultDeclaration(r))):this.matchContextualKeyword("async")?(r=this.matchAsyncFunction()?this.parseFunctionDeclaration(!0):this.parseAssignmentExpression(),e=this.finalize(t,new a.ExportDefaultDeclaration(r))):(this.matchContextualKeyword("from")&&this.throwError(o.Messages.UnexpectedToken,this.lookahead.value),r=this.match("{")?this.parseObjectInitializer():this.match("[")?this.parseArrayInitializer():this.parseAssignmentExpression(),this.consumeSemicolon(),e=this.finalize(t,new a.ExportDefaultDeclaration(r)));else if(this.match("*")){if(this.nextToken(),!this.matchContextualKeyword("from")){var n=this.lookahead.value?o.Messages.UnexpectedToken:o.Messages.MissingFromClause;this.throwError(n,this.lookahead.value)}this.nextToken();var i=this.parseModuleSpecifier();this.consumeSemicolon(),e=this.finalize(t,new a.ExportAllDeclaration(i))}else if(4===this.lookahead.type){switch(r=void 0,this.lookahead.value){case"let":case"const":r=this.parseLexicalDeclaration({inFor:!1});break;case"var":case"class":case"function":r=this.parseStatementListItem();break;default:this.throwUnexpectedToken(this.lookahead)}e=this.finalize(t,new a.ExportNamedDeclaration(r,[],null))}else if(this.matchAsyncFunction())r=this.parseFunctionDeclaration(),e=this.finalize(t,new a.ExportNamedDeclaration(r,[],null));else{var s=[],u=null,l=!1;for(this.expect("{");!this.match("}");)l=l||this.matchKeyword("default"),s.push(this.parseExportSpecifier()),this.match("}")||this.expect(",");this.expect("}"),this.matchContextualKeyword("from")?(this.nextToken(),u=this.parseModuleSpecifier(),this.consumeSemicolon()):l?(n=this.lookahead.value?o.Messages.UnexpectedToken:o.Messages.MissingFromClause,this.throwError(n,this.lookahead.value)):this.consumeSemicolon(),e=this.finalize(t,new a.ExportNamedDeclaration(null,s,u))}return e},e}();t.Parser=c},function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.assert=function(e,t){if(!e)throw new Error("ASSERT: "+t)}},function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(){this.errors=[],this.tolerant=!1}return e.prototype.recordError=function(e){this.errors.push(e)},e.prototype.tolerate=function(e){if(!this.tolerant)throw e;this.recordError(e)},e.prototype.constructError=function(e,t){var r=new Error(e);try{throw r}catch(e){Object.create&&Object.defineProperty&&(r=Object.create(e),Object.defineProperty(r,"column",{value:t}))}return r},e.prototype.createError=function(e,t,r,n){var i="Line "+t+": "+n,o=this.constructError(i,r);return o.index=e,o.lineNumber=t,o.description=n,o},e.prototype.throwError=function(e,t,r,n){throw this.createError(e,t,r,n)},e.prototype.tolerateError=function(e,t,r,n){var i=this.createError(e,t,r,n);if(!this.tolerant)throw i;this.recordError(i)},e}();t.ErrorHandler=r},function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Messages={BadGetterArity:"Getter must not have any formal parameters",BadSetterArity:"Setter must have exactly one formal parameter",BadSetterRestParameter:"Setter function argument must not be a rest parameter",ConstructorIsAsync:"Class constructor may not be an async method",ConstructorSpecialMethod:"Class constructor may not be an accessor",DeclarationMissingInitializer:"Missing initializer in %0 declaration",DefaultRestParameter:"Unexpected token =",DuplicateBinding:"Duplicate binding %0",DuplicateConstructor:"A class may only have one constructor",DuplicateProtoProperty:"Duplicate __proto__ fields are not allowed in object literals",ForInOfLoopInitializer:"%0 loop variable declaration may not have an initializer",GeneratorInLegacyContext:"Generator declarations are not allowed in legacy contexts",IllegalBreak:"Illegal break statement",IllegalContinue:"Illegal continue statement",IllegalExportDeclaration:"Unexpected token",IllegalImportDeclaration:"Unexpected token",IllegalLanguageModeDirective:"Illegal 'use strict' directive in function with non-simple parameter list",IllegalReturn:"Illegal return statement",InvalidEscapedReservedWord:"Keyword must not contain escaped characters",InvalidHexEscapeSequence:"Invalid hexadecimal escape sequence",InvalidLHSInAssignment:"Invalid left-hand side in assignment",InvalidLHSInForIn:"Invalid left-hand side in for-in",InvalidLHSInForLoop:"Invalid left-hand side in for-loop",InvalidModuleSpecifier:"Unexpected token",InvalidRegExp:"Invalid regular expression",LetInLexicalBinding:"let is disallowed as a lexically bound name",MissingFromClause:"Unexpected token",MultipleDefaultsInSwitch:"More than one default clause in switch statement",NewlineAfterThrow:"Illegal newline after throw",NoAsAfterImportNamespace:"Unexpected token",NoCatchOrFinally:"Missing catch or finally after try",ParameterAfterRestParameter:"Rest parameter must be last formal parameter",Redeclaration:"%0 '%1' has already been declared",StaticPrototype:"Classes may not have static property named prototype",StrictCatchVariable:"Catch variable may not be eval or arguments in strict mode",StrictDelete:"Delete of an unqualified identifier in strict mode.",StrictFunction:"In strict mode code, functions can only be declared at top level or inside a block",StrictFunctionName:"Function name may not be eval or arguments in strict mode",StrictLHSAssignment:"Assignment to eval or arguments is not allowed in strict mode",StrictLHSPostfix:"Postfix increment/decrement may not have eval or arguments operand in strict mode",StrictLHSPrefix:"Prefix increment/decrement may not have eval or arguments operand in strict mode",StrictModeWith:"Strict mode code may not include a with statement",StrictOctalLiteral:"Octal literals are not allowed in strict mode.",StrictParamDupe:"Strict mode function may not have duplicate parameter names",StrictParamName:"Parameter name eval or arguments is not allowed in strict mode",StrictReservedWord:"Use of future reserved word in strict mode",StrictVarName:"Variable name may not be eval or arguments in strict mode",TemplateOctalLiteral:"Octal literals are not allowed in template strings.",UnexpectedEOS:"Unexpected end of input",UnexpectedIdentifier:"Unexpected identifier",UnexpectedNumber:"Unexpected number",UnexpectedReserved:"Unexpected reserved word",UnexpectedString:"Unexpected string",UnexpectedTemplate:"Unexpected quasi %0",UnexpectedToken:"Unexpected token %0",UnexpectedTokenIllegal:"Unexpected token ILLEGAL",UnknownLabel:"Undefined label '%0'",UnterminatedRegExp:"Invalid regular expression: missing /"}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(9),i=r(4),o=r(11);function a(e){return"0123456789abcdef".indexOf(e.toLowerCase())}function s(e){return"01234567".indexOf(e)}var u=function(){function e(e,t){this.source=e,this.errorHandler=t,this.trackComment=!1,this.isModule=!1,this.length=e.length,this.index=0,this.lineNumber=e.length>0?1:0,this.lineStart=0,this.curlyStack=[]}return e.prototype.saveState=function(){return{index:this.index,lineNumber:this.lineNumber,lineStart:this.lineStart}},e.prototype.restoreState=function(e){this.index=e.index,this.lineNumber=e.lineNumber,this.lineStart=e.lineStart},e.prototype.eof=function(){return this.index>=this.length},e.prototype.throwUnexpectedToken=function(e){return void 0===e&&(e=o.Messages.UnexpectedTokenIllegal),this.errorHandler.throwError(this.index,this.lineNumber,this.index-this.lineStart+1,e)},e.prototype.tolerateUnexpectedToken=function(e){void 0===e&&(e=o.Messages.UnexpectedTokenIllegal),this.errorHandler.tolerateError(this.index,this.lineNumber,this.index-this.lineStart+1,e)},e.prototype.skipSingleLineComment=function(e){var t,r,n=[];for(this.trackComment&&(n=[],t=this.index-e,r={start:{line:this.lineNumber,column:this.index-this.lineStart-e},end:{}});!this.eof();){var o=this.source.charCodeAt(this.index);if(++this.index,i.Character.isLineTerminator(o)){if(this.trackComment){r.end={line:this.lineNumber,column:this.index-this.lineStart-1};var a={multiLine:!1,slice:[t+e,this.index-1],range:[t,this.index-1],loc:r};n.push(a)}return 13===o&&10===this.source.charCodeAt(this.index)&&++this.index,++this.lineNumber,this.lineStart=this.index,n}}return this.trackComment&&(r.end={line:this.lineNumber,column:this.index-this.lineStart},a={multiLine:!1,slice:[t+e,this.index],range:[t,this.index],loc:r},n.push(a)),n},e.prototype.skipMultiLineComment=function(){var e,t,r=[];for(this.trackComment&&(r=[],e=this.index-2,t={start:{line:this.lineNumber,column:this.index-this.lineStart-2},end:{}});!this.eof();){var n=this.source.charCodeAt(this.index);if(i.Character.isLineTerminator(n))13===n&&10===this.source.charCodeAt(this.index+1)&&++this.index,++this.lineNumber,++this.index,this.lineStart=this.index;else if(42===n){if(47===this.source.charCodeAt(this.index+1)){if(this.index+=2,this.trackComment){t.end={line:this.lineNumber,column:this.index-this.lineStart};var o={multiLine:!0,slice:[e+2,this.index-2],range:[e,this.index],loc:t};r.push(o)}return r}++this.index}else++this.index}return this.trackComment&&(t.end={line:this.lineNumber,column:this.index-this.lineStart},o={multiLine:!0,slice:[e+2,this.index],range:[e,this.index],loc:t},r.push(o)),this.tolerateUnexpectedToken(),r},e.prototype.scanComments=function(){var e;this.trackComment&&(e=[]);for(var t=0===this.index;!this.eof();){var r=this.source.charCodeAt(this.index);if(i.Character.isWhiteSpace(r))++this.index;else if(i.Character.isLineTerminator(r))++this.index,13===r&&10===this.source.charCodeAt(this.index)&&++this.index,++this.lineNumber,this.lineStart=this.index,t=!0;else if(47===r)if(47===(r=this.source.charCodeAt(this.index+1))){this.index+=2;var n=this.skipSingleLineComment(2);this.trackComment&&(e=e.concat(n)),t=!0}else{if(42!==r)break;this.index+=2,n=this.skipMultiLineComment(),this.trackComment&&(e=e.concat(n))}else if(t&&45===r){if(45!==this.source.charCodeAt(this.index+1)||62!==this.source.charCodeAt(this.index+2))break;this.index+=3,n=this.skipSingleLineComment(3),this.trackComment&&(e=e.concat(n))}else{if(60!==r||this.isModule)break;if("!--"!==this.source.slice(this.index+1,this.index+4))break;this.index+=4,n=this.skipSingleLineComment(4),this.trackComment&&(e=e.concat(n))}}return e},e.prototype.isFutureReservedWord=function(e){switch(e){case"enum":case"export":case"import":case"super":return!0;default:return!1}},e.prototype.isStrictModeReservedWord=function(e){switch(e){case"implements":case"interface":case"package":case"private":case"protected":case"public":case"static":case"yield":case"let":return!0;default:return!1}},e.prototype.isRestrictedWord=function(e){return"eval"===e||"arguments"===e},e.prototype.isKeyword=function(e){switch(e.length){case 2:return"if"===e||"in"===e||"do"===e;case 3:return"var"===e||"for"===e||"new"===e||"try"===e||"let"===e;case 4:return"this"===e||"else"===e||"case"===e||"void"===e||"with"===e||"enum"===e;case 5:return"while"===e||"break"===e||"catch"===e||"throw"===e||"const"===e||"yield"===e||"class"===e||"super"===e;case 6:return"return"===e||"typeof"===e||"delete"===e||"switch"===e||"export"===e||"import"===e;case 7:return"default"===e||"finally"===e||"extends"===e;case 8:return"function"===e||"continue"===e||"debugger"===e;case 10:return"instanceof"===e;default:return!1}},e.prototype.codePointAt=function(e){var t=this.source.charCodeAt(e);if(t>=55296&&t<=56319){var r=this.source.charCodeAt(e+1);r>=56320&&r<=57343&&(t=1024*(t-55296)+r-56320+65536)}return t},e.prototype.scanHexEscape=function(e){for(var t="u"===e?4:2,r=0,n=0;n<t;++n){if(this.eof()||!i.Character.isHexDigit(this.source.charCodeAt(this.index)))return null;r=16*r+a(this.source[this.index++])}return String.fromCharCode(r)},e.prototype.scanUnicodeCodePointEscape=function(){var e=this.source[this.index],t=0;for("}"===e&&this.throwUnexpectedToken();!this.eof()&&(e=this.source[this.index++],i.Character.isHexDigit(e.charCodeAt(0)));)t=16*t+a(e);return(t>1114111||"}"!==e)&&this.throwUnexpectedToken(),i.Character.fromCodePoint(t)},e.prototype.getIdentifier=function(){for(var e=this.index++;!this.eof();){var t=this.source.charCodeAt(this.index);if(92===t)return this.index=e,this.getComplexIdentifier();if(t>=55296&&t<57343)return this.index=e,this.getComplexIdentifier();if(!i.Character.isIdentifierPart(t))break;++this.index}return this.source.slice(e,this.index)},e.prototype.getComplexIdentifier=function(){var e,t=this.codePointAt(this.index),r=i.Character.fromCodePoint(t);for(this.index+=r.length,92===t&&(117!==this.source.charCodeAt(this.index)&&this.throwUnexpectedToken(),++this.index,"{"===this.source[this.index]?(++this.index,e=this.scanUnicodeCodePointEscape()):null!==(e=this.scanHexEscape("u"))&&"\\"!==e&&i.Character.isIdentifierStart(e.charCodeAt(0))||this.throwUnexpectedToken(),r=e);!this.eof()&&(t=this.codePointAt(this.index),i.Character.isIdentifierPart(t));)r+=e=i.Character.fromCodePoint(t),this.index+=e.length,92===t&&(r=r.substr(0,r.length-1),117!==this.source.charCodeAt(this.index)&&this.throwUnexpectedToken(),++this.index,"{"===this.source[this.index]?(++this.index,e=this.scanUnicodeCodePointEscape()):null!==(e=this.scanHexEscape("u"))&&"\\"!==e&&i.Character.isIdentifierPart(e.charCodeAt(0))||this.throwUnexpectedToken(),r+=e);return r},e.prototype.octalToDecimal=function(e){var t="0"!==e,r=s(e);return!this.eof()&&i.Character.isOctalDigit(this.source.charCodeAt(this.index))&&(t=!0,r=8*r+s(this.source[this.index++]),"0123".indexOf(e)>=0&&!this.eof()&&i.Character.isOctalDigit(this.source.charCodeAt(this.index))&&(r=8*r+s(this.source[this.index++]))),{code:r,octal:t}},e.prototype.scanIdentifier=function(){var e,t=this.index,r=92===this.source.charCodeAt(t)?this.getComplexIdentifier():this.getIdentifier();if(3!=(e=1===r.length?3:this.isKeyword(r)?4:"null"===r?5:"true"===r||"false"===r?1:3)&&t+r.length!==this.index){var n=this.index;this.index=t,this.tolerateUnexpectedToken(o.Messages.InvalidEscapedReservedWord),this.index=n}return{type:e,value:r,lineNumber:this.lineNumber,lineStart:this.lineStart,start:t,end:this.index}},e.prototype.scanPunctuator=function(){var e=this.index,t=this.source[this.index];switch(t){case"(":case"{":"{"===t&&this.curlyStack.push("{"),++this.index;break;case".":++this.index,"."===this.source[this.index]&&"."===this.source[this.index+1]&&(this.index+=2,t="...");break;case"}":++this.index,this.curlyStack.pop();break;case")":case";":case",":case"[":case"]":case":":case"?":case"~":++this.index;break;default:">>>="===(t=this.source.substr(this.index,4))?this.index+=4:"==="===(t=t.substr(0,3))||"!=="===t||">>>"===t||"<<="===t||">>="===t||"**="===t?this.index+=3:"&&"===(t=t.substr(0,2))||"||"===t||"=="===t||"!="===t||"+="===t||"-="===t||"*="===t||"/="===t||"++"===t||"--"===t||"<<"===t||">>"===t||"&="===t||"|="===t||"^="===t||"%="===t||"<="===t||">="===t||"=>"===t||"**"===t?this.index+=2:(t=this.source[this.index],"<>=!+-*%&|^/".indexOf(t)>=0&&++this.index)}return this.index===e&&this.throwUnexpectedToken(),{type:7,value:t,lineNumber:this.lineNumber,lineStart:this.lineStart,start:e,end:this.index}},e.prototype.scanHexLiteral=function(e){for(var t="";!this.eof()&&i.Character.isHexDigit(this.source.charCodeAt(this.index));)t+=this.source[this.index++];return 0===t.length&&this.throwUnexpectedToken(),i.Character.isIdentifierStart(this.source.charCodeAt(this.index))&&this.throwUnexpectedToken(),{type:6,value:parseInt("0x"+t,16),lineNumber:this.lineNumber,lineStart:this.lineStart,start:e,end:this.index}},e.prototype.scanBinaryLiteral=function(e){for(var t,r="";!this.eof()&&("0"===(t=this.source[this.index])||"1"===t);)r+=this.source[this.index++];return 0===r.length&&this.throwUnexpectedToken(),this.eof()||(t=this.source.charCodeAt(this.index),(i.Character.isIdentifierStart(t)||i.Character.isDecimalDigit(t))&&this.throwUnexpectedToken()),{type:6,value:parseInt(r,2),lineNumber:this.lineNumber,lineStart:this.lineStart,start:e,end:this.index}},e.prototype.scanOctalLiteral=function(e,t){var r="",n=!1;for(i.Character.isOctalDigit(e.charCodeAt(0))?(n=!0,r="0"+this.source[this.index++]):++this.index;!this.eof()&&i.Character.isOctalDigit(this.source.charCodeAt(this.index));)r+=this.source[this.index++];return n||0!==r.length||this.throwUnexpectedToken(),(i.Character.isIdentifierStart(this.source.charCodeAt(this.index))||i.Character.isDecimalDigit(this.source.charCodeAt(this.index)))&&this.throwUnexpectedToken(),{type:6,value:parseInt(r,8),octal:n,lineNumber:this.lineNumber,lineStart:this.lineStart,start:t,end:this.index}},e.prototype.isImplicitOctalLiteral=function(){for(var e=this.index+1;e<this.length;++e){var t=this.source[e];if("8"===t||"9"===t)return!1;if(!i.Character.isOctalDigit(t.charCodeAt(0)))return!0}return!0},e.prototype.scanNumericLiteral=function(){var e=this.index,t=this.source[e];n.assert(i.Character.isDecimalDigit(t.charCodeAt(0))||"."===t,"Numeric literal must start with a decimal digit or a decimal point");var r="";if("."!==t){if(r=this.source[this.index++],t=this.source[this.index],"0"===r){if("x"===t||"X"===t)return++this.index,this.scanHexLiteral(e);if("b"===t||"B"===t)return++this.index,this.scanBinaryLiteral(e);if("o"===t||"O"===t)return this.scanOctalLiteral(t,e);if(t&&i.Character.isOctalDigit(t.charCodeAt(0))&&this.isImplicitOctalLiteral())return this.scanOctalLiteral(t,e)}for(;i.Character.isDecimalDigit(this.source.charCodeAt(this.index));)r+=this.source[this.index++];t=this.source[this.index]}if("."===t){for(r+=this.source[this.index++];i.Character.isDecimalDigit(this.source.charCodeAt(this.index));)r+=this.source[this.index++];t=this.source[this.index]}if("e"===t||"E"===t)if(r+=this.source[this.index++],"+"!==(t=this.source[this.index])&&"-"!==t||(r+=this.source[this.index++]),i.Character.isDecimalDigit(this.source.charCodeAt(this.index)))for(;i.Character.isDecimalDigit(this.source.charCodeAt(this.index));)r+=this.source[this.index++];else this.throwUnexpectedToken();return i.Character.isIdentifierStart(this.source.charCodeAt(this.index))&&this.throwUnexpectedToken(),{type:6,value:parseFloat(r),lineNumber:this.lineNumber,lineStart:this.lineStart,start:e,end:this.index}},e.prototype.scanStringLiteral=function(){var e=this.index,t=this.source[e];n.assert("'"===t||'"'===t,"String literal must starts with a quote"),++this.index;for(var r=!1,a="";!this.eof();){var s=this.source[this.index++];if(s===t){t="";break}if("\\"===s)if((s=this.source[this.index++])&&i.Character.isLineTerminator(s.charCodeAt(0)))++this.lineNumber,"\r"===s&&"\n"===this.source[this.index]&&++this.index,this.lineStart=this.index;else switch(s){case"u":if("{"===this.source[this.index])++this.index,a+=this.scanUnicodeCodePointEscape();else{var u=this.scanHexEscape(s);null===u&&this.throwUnexpectedToken(),a+=u}break;case"x":var l=this.scanHexEscape(s);null===l&&this.throwUnexpectedToken(o.Messages.InvalidHexEscapeSequence),a+=l;break;case"n":a+="\n";break;case"r":a+="\r";break;case"t":a+="\t";break;case"b":a+="\b";break;case"f":a+="\f";break;case"v":a+="\v";break;case"8":case"9":a+=s,this.tolerateUnexpectedToken();break;default:if(s&&i.Character.isOctalDigit(s.charCodeAt(0))){var c=this.octalToDecimal(s);r=c.octal||r,a+=String.fromCharCode(c.code)}else a+=s}else{if(i.Character.isLineTerminator(s.charCodeAt(0)))break;a+=s}}return""!==t&&(this.index=e,this.throwUnexpectedToken()),{type:8,value:a,octal:r,lineNumber:this.lineNumber,lineStart:this.lineStart,start:e,end:this.index}},e.prototype.scanTemplate=function(){var e="",t=!1,r=this.index,n="`"===this.source[r],a=!1,s=2;for(++this.index;!this.eof();){var u=this.source[this.index++];if("`"===u){s=1,a=!0,t=!0;break}if("$"===u){if("{"===this.source[this.index]){this.curlyStack.push("${"),++this.index,t=!0;break}e+=u}else if("\\"===u)if(u=this.source[this.index++],i.Character.isLineTerminator(u.charCodeAt(0)))++this.lineNumber,"\r"===u&&"\n"===this.source[this.index]&&++this.index,this.lineStart=this.index;else switch(u){case"n":e+="\n";break;case"r":e+="\r";break;case"t":e+="\t";break;case"u":if("{"===this.source[this.index])++this.index,e+=this.scanUnicodeCodePointEscape();else{var l=this.index,c=this.scanHexEscape(u);null!==c?e+=c:(this.index=l,e+=u)}break;case"x":var h=this.scanHexEscape(u);null===h&&this.throwUnexpectedToken(o.Messages.InvalidHexEscapeSequence),e+=h;break;case"b":e+="\b";break;case"f":e+="\f";break;case"v":e+="\v";break;default:"0"===u?(i.Character.isDecimalDigit(this.source.charCodeAt(this.index))&&this.throwUnexpectedToken(o.Messages.TemplateOctalLiteral),e+="\0"):i.Character.isOctalDigit(u.charCodeAt(0))?this.throwUnexpectedToken(o.Messages.TemplateOctalLiteral):e+=u}else i.Character.isLineTerminator(u.charCodeAt(0))?(++this.lineNumber,"\r"===u&&"\n"===this.source[this.index]&&++this.index,this.lineStart=this.index,e+="\n"):e+=u}return t||this.throwUnexpectedToken(),n||this.curlyStack.pop(),{type:10,value:this.source.slice(r+1,this.index-s),cooked:e,head:n,tail:a,lineNumber:this.lineNumber,lineStart:this.lineStart,start:r,end:this.index}},e.prototype.testRegExp=function(e,t){var r=e,n=this;t.indexOf("u")>=0&&(r=r.replace(/\\u\{([0-9a-fA-F]+)\}|\\u([a-fA-F0-9]{4})/g,(function(e,t,r){var i=parseInt(t||r,16);return i>1114111&&n.throwUnexpectedToken(o.Messages.InvalidRegExp),i<=65535?String.fromCharCode(i):"￿"})).replace(/[\uD800-\uDBFF][\uDC00-\uDFFF]/g,"￿"));try{RegExp(r)}catch(e){this.throwUnexpectedToken(o.Messages.InvalidRegExp)}try{return new RegExp(e,t)}catch(e){return null}},e.prototype.scanRegExpBody=function(){var e=this.source[this.index];n.assert("/"===e,"Regular expression literal must start with a slash");for(var t=this.source[this.index++],r=!1,a=!1;!this.eof();)if(t+=e=this.source[this.index++],"\\"===e)e=this.source[this.index++],i.Character.isLineTerminator(e.charCodeAt(0))&&this.throwUnexpectedToken(o.Messages.UnterminatedRegExp),t+=e;else if(i.Character.isLineTerminator(e.charCodeAt(0)))this.throwUnexpectedToken(o.Messages.UnterminatedRegExp);else if(r)"]"===e&&(r=!1);else{if("/"===e){a=!0;break}"["===e&&(r=!0)}return a||this.throwUnexpectedToken(o.Messages.UnterminatedRegExp),t.substr(1,t.length-2)},e.prototype.scanRegExpFlags=function(){for(var e="";!this.eof();){var t=this.source[this.index];if(!i.Character.isIdentifierPart(t.charCodeAt(0)))break;if(++this.index,"\\"!==t||this.eof())e+=t;else if("u"===(t=this.source[this.index])){++this.index;var r=this.index,n=this.scanHexEscape("u");if(null!==n)for(e+=n;r<this.index;++r)this.source[r];else this.index=r,e+="u";this.tolerateUnexpectedToken()}else this.tolerateUnexpectedToken()}return e},e.prototype.scanRegExp=function(){var e=this.index,t=this.scanRegExpBody(),r=this.scanRegExpFlags();return{type:9,value:"",pattern:t,flags:r,regex:this.testRegExp(t,r),lineNumber:this.lineNumber,lineStart:this.lineStart,start:e,end:this.index}},e.prototype.lex=function(){if(this.eof())return{type:2,value:"",lineNumber:this.lineNumber,lineStart:this.lineStart,start:this.index,end:this.index};var e=this.source.charCodeAt(this.index);return i.Character.isIdentifierStart(e)?this.scanIdentifier():40===e||41===e||59===e?this.scanPunctuator():39===e||34===e?this.scanStringLiteral():46===e?i.Character.isDecimalDigit(this.source.charCodeAt(this.index+1))?this.scanNumericLiteral():this.scanPunctuator():i.Character.isDecimalDigit(e)?this.scanNumericLiteral():96===e||125===e&&"${"===this.curlyStack[this.curlyStack.length-1]?this.scanTemplate():e>=55296&&e<57343&&i.Character.isIdentifierStart(this.codePointAt(this.index))?this.scanIdentifier():this.scanPunctuator()},e}();t.Scanner=u},function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.TokenName={},t.TokenName[1]="Boolean",t.TokenName[2]="<end>",t.TokenName[3]="Identifier",t.TokenName[4]="Keyword",t.TokenName[5]="Null",t.TokenName[6]="Numeric",t.TokenName[7]="Punctuator",t.TokenName[8]="String",t.TokenName[9]="RegularExpression",t.TokenName[10]="Template"},function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.XHTMLEntities={quot:'"',amp:"&",apos:"'",gt:">",nbsp:" ",iexcl:"¡",cent:"¢",pound:"£",curren:"¤",yen:"¥",brvbar:"¦",sect:"§",uml:"¨",copy:"©",ordf:"ª",laquo:"«",not:"¬",shy:"­",reg:"®",macr:"¯",deg:"°",plusmn:"±",sup2:"²",sup3:"³",acute:"´",micro:"µ",para:"¶",middot:"·",cedil:"¸",sup1:"¹",ordm:"º",raquo:"»",frac14:"¼",frac12:"½",frac34:"¾",iquest:"¿",Agrave:"À",Aacute:"Á",Acirc:"Â",Atilde:"Ã",Auml:"Ä",Aring:"Å",AElig:"Æ",Ccedil:"Ç",Egrave:"È",Eacute:"É",Ecirc:"Ê",Euml:"Ë",Igrave:"Ì",Iacute:"Í",Icirc:"Î",Iuml:"Ï",ETH:"Ð",Ntilde:"Ñ",Ograve:"Ò",Oacute:"Ó",Ocirc:"Ô",Otilde:"Õ",Ouml:"Ö",times:"×",Oslash:"Ø",Ugrave:"Ù",Uacute:"Ú",Ucirc:"Û",Uuml:"Ü",Yacute:"Ý",THORN:"Þ",szlig:"ß",agrave:"à",aacute:"á",acirc:"â",atilde:"ã",auml:"ä",aring:"å",aelig:"æ",ccedil:"ç",egrave:"è",eacute:"é",ecirc:"ê",euml:"ë",igrave:"ì",iacute:"í",icirc:"î",iuml:"ï",eth:"ð",ntilde:"ñ",ograve:"ò",oacute:"ó",ocirc:"ô",otilde:"õ",ouml:"ö",divide:"÷",oslash:"ø",ugrave:"ù",uacute:"ú",ucirc:"û",uuml:"ü",yacute:"ý",thorn:"þ",yuml:"ÿ",OElig:"Œ",oelig:"œ",Scaron:"Š",scaron:"š",Yuml:"Ÿ",fnof:"ƒ",circ:"ˆ",tilde:"˜",Alpha:"Α",Beta:"Β",Gamma:"Γ",Delta:"Δ",Epsilon:"Ε",Zeta:"Ζ",Eta:"Η",Theta:"Θ",Iota:"Ι",Kappa:"Κ",Lambda:"Λ",Mu:"Μ",Nu:"Ν",Xi:"Ξ",Omicron:"Ο",Pi:"Π",Rho:"Ρ",Sigma:"Σ",Tau:"Τ",Upsilon:"Υ",Phi:"Φ",Chi:"Χ",Psi:"Ψ",Omega:"Ω",alpha:"α",beta:"β",gamma:"γ",delta:"δ",epsilon:"ε",zeta:"ζ",eta:"η",theta:"θ",iota:"ι",kappa:"κ",lambda:"λ",mu:"μ",nu:"ν",xi:"ξ",omicron:"ο",pi:"π",rho:"ρ",sigmaf:"ς",sigma:"σ",tau:"τ",upsilon:"υ",phi:"φ",chi:"χ",psi:"ψ",omega:"ω",thetasym:"ϑ",upsih:"ϒ",piv:"ϖ",ensp:" ",emsp:" ",thinsp:" ",zwnj:"‌",zwj:"‍",lrm:"‎",rlm:"‏",ndash:"–",mdash:"—",lsquo:"‘",rsquo:"’",sbquo:"‚",ldquo:"“",rdquo:"”",bdquo:"„",dagger:"†",Dagger:"‡",bull:"•",hellip:"…",permil:"‰",prime:"′",Prime:"″",lsaquo:"‹",rsaquo:"›",oline:"‾",frasl:"⁄",euro:"€",image:"ℑ",weierp:"℘",real:"ℜ",trade:"™",alefsym:"ℵ",larr:"←",uarr:"↑",rarr:"→",darr:"↓",harr:"↔",crarr:"↵",lArr:"⇐",uArr:"⇑",rArr:"⇒",dArr:"⇓",hArr:"⇔",forall:"∀",part:"∂",exist:"∃",empty:"∅",nabla:"∇",isin:"∈",notin:"∉",ni:"∋",prod:"∏",sum:"∑",minus:"−",lowast:"∗",radic:"√",prop:"∝",infin:"∞",ang:"∠",and:"∧",or:"∨",cap:"∩",cup:"∪",int:"∫",there4:"∴",sim:"∼",cong:"≅",asymp:"≈",ne:"≠",equiv:"≡",le:"≤",ge:"≥",sub:"⊂",sup:"⊃",nsub:"⊄",sube:"⊆",supe:"⊇",oplus:"⊕",otimes:"⊗",perp:"⊥",sdot:"⋅",lceil:"⌈",rceil:"⌉",lfloor:"⌊",rfloor:"⌋",loz:"◊",spades:"♠",clubs:"♣",hearts:"♥",diams:"♦",lang:"⟨",rang:"⟩"}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(10),i=r(12),o=r(13),a=function(){function e(){this.values=[],this.curly=this.paren=-1}return e.prototype.beforeFunctionExpression=function(e){return["(","{","[","in","typeof","instanceof","new","return","case","delete","throw","void","=","+=","-=","*=","**=","/=","%=","<<=",">>=",">>>=","&=","|=","^=",",","+","-","*","**","/","%","++","--","<<",">>",">>>","&","|","^","!","~","&&","||","?",":","===","==",">=","<=","<",">","!=","!=="].indexOf(e)>=0},e.prototype.isRegexStart=function(){var e=this.values[this.values.length-1],t=null!==e;switch(e){case"this":case"]":t=!1;break;case")":var r=this.values[this.paren-1];t="if"===r||"while"===r||"for"===r||"with"===r;break;case"}":if(t=!1,"function"===this.values[this.curly-3])t=!!(n=this.values[this.curly-4])&&!this.beforeFunctionExpression(n);else if("function"===this.values[this.curly-4]){var n;t=!(n=this.values[this.curly-5])||!this.beforeFunctionExpression(n)}}return t},e.prototype.push=function(e){7===e.type||4===e.type?("{"===e.value?this.curly=this.values.length:"("===e.value&&(this.paren=this.values.length),this.values.push(e.value)):this.values.push(null)},e}(),s=function(){function e(e,t){this.errorHandler=new n.ErrorHandler,this.errorHandler.tolerant=!!t&&"boolean"==typeof t.tolerant&&t.tolerant,this.scanner=new i.Scanner(e,this.errorHandler),this.scanner.trackComment=!!t&&"boolean"==typeof t.comment&&t.comment,this.trackRange=!!t&&"boolean"==typeof t.range&&t.range,this.trackLoc=!!t&&"boolean"==typeof t.loc&&t.loc,this.buffer=[],this.reader=new a}return e.prototype.errors=function(){return this.errorHandler.errors},e.prototype.getNextToken=function(){if(0===this.buffer.length){var e=this.scanner.scanComments();if(this.scanner.trackComment)for(var t=0;t<e.length;++t){var r=e[t],n=this.scanner.source.slice(r.slice[0],r.slice[1]),i={type:r.multiLine?"BlockComment":"LineComment",value:n};this.trackRange&&(i.range=r.range),this.trackLoc&&(i.loc=r.loc),this.buffer.push(i)}if(!this.scanner.eof()){var a=void 0;this.trackLoc&&(a={start:{line:this.scanner.lineNumber,column:this.scanner.index-this.scanner.lineStart},end:{}});var s="/"===this.scanner.source[this.scanner.index]&&this.reader.isRegexStart()?this.scanner.scanRegExp():this.scanner.lex();this.reader.push(s);var u={type:o.TokenName[s.type],value:this.scanner.source.slice(s.start,s.end)};if(this.trackRange&&(u.range=[s.start,s.end]),this.trackLoc&&(a.end={line:this.scanner.lineNumber,column:this.scanner.index-this.scanner.lineStart},u.loc=a),9===s.type){var l=s.pattern,c=s.flags;u.regex={pattern:l,flags:c}}this.buffer.push(u)}}return this.buffer.shift()},e}();t.Tokenizer=s}])},e.exports=n()},function(e,t,r){"use strict";var n=r(38),i=r(53),o=r(76),a=r(54),s=Object.prototype.toString,u=Object.prototype.hasOwnProperty,l={0:"\\0",7:"\\a",8:"\\b",9:"\\t",10:"\\n",11:"\\v",12:"\\f",13:"\\r",27:"\\e",34:'\\"',92:"\\\\",133:"\\N",160:"\\_",8232:"\\L",8233:"\\P"},c=["y","Y","yes","Yes","YES","on","On","ON","n","N","no","No","NO","off","Off","OFF"];function h(e){var t,r,o;if(t=e.toString(16).toUpperCase(),e<=255)r="x",o=2;else if(e<=65535)r="u",o=4;else{if(!(e<=4294967295))throw new i("code point within a string may not be greater than 0xFFFFFFFF");r="U",o=8}return"\\"+r+n.repeat("0",o-t.length)+t}function p(e){this.schema=e.schema||o,this.indent=Math.max(1,e.indent||2),this.noArrayIndent=e.noArrayIndent||!1,this.skipInvalid=e.skipInvalid||!1,this.flowLevel=n.isNothing(e.flowLevel)?-1:e.flowLevel,this.styleMap=function(e,t){var r,n,i,o,a,s,l;if(null===t)return{};for(r={},i=0,o=(n=Object.keys(t)).length;i<o;i+=1)a=n[i],s=String(t[a]),"!!"===a.slice(0,2)&&(a="tag:yaml.org,2002:"+a.slice(2)),(l=e.compiledTypeMap.fallback[a])&&u.call(l.styleAliases,s)&&(s=l.styleAliases[s]),r[a]=s;return r}(this.schema,e.styles||null),this.sortKeys=e.sortKeys||!1,this.lineWidth=e.lineWidth||80,this.noRefs=e.noRefs||!1,this.noCompatMode=e.noCompatMode||!1,this.condenseFlow=e.condenseFlow||!1,this.implicitTypes=this.schema.compiledImplicit,this.explicitTypes=this.schema.compiledExplicit,this.tag=null,this.result="",this.duplicates=[],this.usedDuplicates=null}function f(e,t){for(var r,i=n.repeat(" ",t),o=0,a=-1,s="",u=e.length;o<u;)-1===(a=e.indexOf("\n",o))?(r=e.slice(o),o=u):(r=e.slice(o,a+1),o=a+1),r.length&&"\n"!==r&&(s+=i),s+=r;return s}function d(e,t){return"\n"+n.repeat(" ",e.indent*t)}function m(e){return 32===e||9===e}function y(e){return 32<=e&&e<=126||161<=e&&e<=55295&&8232!==e&&8233!==e||57344<=e&&e<=65533&&65279!==e||65536<=e&&e<=1114111}function v(e,t){return y(e)&&65279!==e&&44!==e&&91!==e&&93!==e&&123!==e&&125!==e&&58!==e&&(35!==e||t&&function(e){return y(e)&&!m(e)&&65279!==e&&13!==e&&10!==e}(t))}function _(e){return/^\n* /.test(e)}function g(e,t,r,n,i){var o,a,s,u,l=!1,c=!1,h=-1!==n,p=-1,f=y(u=e.charCodeAt(0))&&65279!==u&&!m(u)&&45!==u&&63!==u&&58!==u&&44!==u&&91!==u&&93!==u&&123!==u&&125!==u&&35!==u&&38!==u&&42!==u&&33!==u&&124!==u&&61!==u&&62!==u&&39!==u&&34!==u&&37!==u&&64!==u&&96!==u&&!m(e.charCodeAt(e.length-1));if(t)for(o=0;o<e.length;o++){if(!y(a=e.charCodeAt(o)))return 5;s=o>0?e.charCodeAt(o-1):null,f=f&&v(a,s)}else{for(o=0;o<e.length;o++){if(10===(a=e.charCodeAt(o)))l=!0,h&&(c=c||o-p-1>n&&" "!==e[p+1],p=o);else if(!y(a))return 5;s=o>0?e.charCodeAt(o-1):null,f=f&&v(a,s)}c=c||h&&o-p-1>n&&" "!==e[p+1]}return l||c?r>9&&_(e)?5:c?4:3:f&&!i(e)?1:2}function b(e,t,r,n){e.dump=function(){if(0===t.length)return"''";if(!e.noCompatMode&&-1!==c.indexOf(t))return"'"+t+"'";var o=e.indent*Math.max(1,r),a=-1===e.lineWidth?-1:Math.max(Math.min(e.lineWidth,40),e.lineWidth-o),s=n||e.flowLevel>-1&&r>=e.flowLevel;switch(g(t,s,e.indent,a,(function(t){return function(e,t){var r,n;for(r=0,n=e.implicitTypes.length;r<n;r+=1)if(e.implicitTypes[r].resolve(t))return!0;return!1}(e,t)}))){case 1:return t;case 2:return"'"+t.replace(/'/g,"''")+"'";case 3:return"|"+x(t,e.indent)+w(f(t,o));case 4:return">"+x(t,e.indent)+w(f(function(e,t){var r,n,i=/(\n+)([^\n]*)/g,o=(s=e.indexOf("\n"),s=-1!==s?s:e.length,i.lastIndex=s,E(e.slice(0,s),t)),a="\n"===e[0]||" "===e[0];var s;for(;n=i.exec(e);){var u=n[1],l=n[2];r=" "===l[0],o+=u+(a||r||""===l?"":"\n")+E(l,t),a=r}return o}(t,a),o));case 5:return'"'+function(e){for(var t,r,n,i="",o=0;o<e.length;o++)(t=e.charCodeAt(o))>=55296&&t<=56319&&(r=e.charCodeAt(o+1))>=56320&&r<=57343?(i+=h(1024*(t-55296)+r-56320+65536),o++):(n=l[t],i+=!n&&y(t)?e[o]:n||h(t));return i}(t)+'"';default:throw new i("impossible error: invalid scalar style")}}()}function x(e,t){var r=_(e)?String(t):"",n="\n"===e[e.length-1];return r+(n&&("\n"===e[e.length-2]||"\n"===e)?"+":n?"":"-")+"\n"}function w(e){return"\n"===e[e.length-1]?e.slice(0,-1):e}function E(e,t){if(""===e||" "===e[0])return e;for(var r,n,i=/ [^ ]/g,o=0,a=0,s=0,u="";r=i.exec(e);)(s=r.index)-o>t&&(n=a>o?a:s,u+="\n"+e.slice(o,n),o=n+1),a=s;return u+="\n",e.length-o>t&&a>o?u+=e.slice(o,a)+"\n"+e.slice(a+1):u+=e.slice(o),u.slice(1)}function D(e,t,r){var n,o,a,l,c,h;for(a=0,l=(o=r?e.explicitTypes:e.implicitTypes).length;a<l;a+=1)if(((c=o[a]).instanceOf||c.predicate)&&(!c.instanceOf||"object"==typeof t&&t instanceof c.instanceOf)&&(!c.predicate||c.predicate(t))){if(e.tag=r?c.tag:"?",c.represent){if(h=e.styleMap[c.tag]||c.defaultStyle,"[object Function]"===s.call(c.represent))n=c.represent(t,h);else{if(!u.call(c.represent,h))throw new i("!<"+c.tag+'> tag resolver accepts not "'+h+'" style');n=c.represent[h](t,h)}e.dump=n}return!0}return!1}function S(e,t,r,n,o,a){e.tag=null,e.dump=r,D(e,r,!1)||D(e,r,!0);var u=s.call(e.dump);n&&(n=e.flowLevel<0||e.flowLevel>t);var l,c,h="[object Object]"===u||"[object Array]"===u;if(h&&(c=-1!==(l=e.duplicates.indexOf(r))),(null!==e.tag&&"?"!==e.tag||c||2!==e.indent&&t>0)&&(o=!1),c&&e.usedDuplicates[l])e.dump="*ref_"+l;else{if(h&&c&&!e.usedDuplicates[l]&&(e.usedDuplicates[l]=!0),"[object Object]"===u)n&&0!==Object.keys(e.dump).length?(!function(e,t,r,n){var o,a,s,u,l,c,h="",p=e.tag,f=Object.keys(r);if(!0===e.sortKeys)f.sort();else if("function"==typeof e.sortKeys)f.sort(e.sortKeys);else if(e.sortKeys)throw new i("sortKeys must be a boolean or a function");for(o=0,a=f.length;o<a;o+=1)c="",n&&0===o||(c+=d(e,t)),u=r[s=f[o]],S(e,t+1,s,!0,!0,!0)&&((l=null!==e.tag&&"?"!==e.tag||e.dump&&e.dump.length>1024)&&(e.dump&&10===e.dump.charCodeAt(0)?c+="?":c+="? "),c+=e.dump,l&&(c+=d(e,t)),S(e,t+1,u,!0,l)&&(e.dump&&10===e.dump.charCodeAt(0)?c+=":":c+=": ",h+=c+=e.dump));e.tag=p,e.dump=h||"{}"}(e,t,e.dump,o),c&&(e.dump="&ref_"+l+e.dump)):(!function(e,t,r){var n,i,o,a,s,u="",l=e.tag,c=Object.keys(r);for(n=0,i=c.length;n<i;n+=1)s="",0!==n&&(s+=", "),e.condenseFlow&&(s+='"'),a=r[o=c[n]],S(e,t,o,!1,!1)&&(e.dump.length>1024&&(s+="? "),s+=e.dump+(e.condenseFlow?'"':"")+":"+(e.condenseFlow?"":" "),S(e,t,a,!1,!1)&&(u+=s+=e.dump));e.tag=l,e.dump="{"+u+"}"}(e,t,e.dump),c&&(e.dump="&ref_"+l+" "+e.dump));else if("[object Array]"===u){var p=e.noArrayIndent&&t>0?t-1:t;n&&0!==e.dump.length?(!function(e,t,r,n){var i,o,a="",s=e.tag;for(i=0,o=r.length;i<o;i+=1)S(e,t+1,r[i],!0,!0)&&(n&&0===i||(a+=d(e,t)),e.dump&&10===e.dump.charCodeAt(0)?a+="-":a+="- ",a+=e.dump);e.tag=s,e.dump=a||"[]"}(e,p,e.dump,o),c&&(e.dump="&ref_"+l+e.dump)):(!function(e,t,r){var n,i,o="",a=e.tag;for(n=0,i=r.length;n<i;n+=1)S(e,t,r[n],!1,!1)&&(0!==n&&(o+=","+(e.condenseFlow?"":" ")),o+=e.dump);e.tag=a,e.dump="["+o+"]"}(e,p,e.dump),c&&(e.dump="&ref_"+l+" "+e.dump))}else{if("[object String]"!==u){if(e.skipInvalid)return!1;throw new i("unacceptable kind of an object to dump "+u)}"?"!==e.tag&&b(e,e.dump,t,a)}null!==e.tag&&"?"!==e.tag&&(e.dump="!<"+e.tag+"> "+e.dump)}return!0}function C(e,t){var r,n,i=[],o=[];for(function e(t,r,n){var i,o,a;if(null!==t&&"object"==typeof t)if(-1!==(o=r.indexOf(t)))-1===n.indexOf(o)&&n.push(o);else if(r.push(t),Array.isArray(t))for(o=0,a=t.length;o<a;o+=1)e(t[o],r,n);else for(i=Object.keys(t),o=0,a=i.length;o<a;o+=1)e(t[i[o]],r,n)}(e,i,o),r=0,n=o.length;r<n;r+=1)t.duplicates.push(i[o[r]]);t.usedDuplicates=new Array(n)}function A(e,t){var r=new p(t=t||{});return r.noRefs||C(e,r),S(r,0,e,!0,!0)?r.dump+"\n":""}e.exports.dump=A,e.exports.safeDump=function(e,t){return A(e,n.extend({schema:a},t))}},function(e,t,r){"use strict";r(31),r(32),r(33),r(64),r(19),r(65),r(20),r(68),r(92),r(144),r(22),r(94),r(23);var n,i=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}),o=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,r=t&&e[t],n=0;if(r)return r.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")},a=this&&this.__read||function(e,t){var r="function"==typeof Symbol&&e[Symbol.iterator];if(!r)return e;var n,i,o=r.call(e),a=[];try{for(;(void 0===t||t-- >0)&&!(n=o.next()).done;)a.push(n.value)}catch(e){i={error:e}}finally{try{n&&!n.done&&(r=o.return)&&r.call(o)}finally{if(i)throw i.error}}return a};Object.defineProperty(t,"__esModule",{value:!0});var s=r(91),u=r(1),l=r(183),c=r(0),h=r(7),p=r(95),f=r(69),d=r(3),m=r(305),y=r(306),v=r(307),_=function(e){function t(t,r){void 0===r&&(r=!1);var n=e.call(this)||this;return n._hasDeclaration=!1,n._docTypeName="",n._hasDocumentElement=!1,n._currentElementSerialized=!1,n._openTags=[],n._ended=!1,n._fragment=r,n._options=u.applyDefaults(t||{},s.DefaultXMLBuilderCBOptions),n._builderOptions={defaultNamespace:n._options.defaultNamespace,namespaceAlias:n._options.namespaceAlias},"json"===n._options.format?n._writer=new y.JSONCBWriter(n._options):"yaml"===n._options.format?n._writer=new v.YAMLCBWriter(n._options):n._writer=new m.XMLCBWriter(n._options),void 0!==n._options.data&&n.on("data",n._options.data),void 0!==n._options.end&&n.on("end",n._options.end),void 0!==n._options.error&&n.on("error",n._options.error),n._prefixMap=new p.NamespacePrefixMap,n._prefixMap.set("xml",h.namespace.XML),n._prefixIndex={value:1},n._push(n._writer.frontMatter()),n}return i(t,e),t.prototype.ele=function(e,t,r){var n,i;if(u.isObject(e)||u.isString(e)&&(/^\s*</.test(e)||/^\s*[\{\[]/.test(e)||/^(\s*|(#.*)|(%.*))*---/.test(e))){var a=l.fragment().set(this._options);try{a.ele(e)}catch(e){return this.emit("error",e),this}try{for(var s=o(a.node.childNodes),c=s.next();!c.done;c=s.next()){var h=c.value;this._fromNode(h)}}catch(e){n={error:e}}finally{try{c&&!c.done&&(i=s.return)&&i.call(s)}finally{if(n)throw n.error}}return this}if(this._serializeOpenTag(!0),!this._fragment&&this._hasDocumentElement&&0===this._writer.level)return this.emit("error",new Error("Document cannot have multiple document element nodes.")),this;try{this._currentElement=l.fragment(this._builderOptions).ele(e,t,r)}catch(e){return this.emit("error",e),this}return this._fragment||this._hasDocumentElement||""===this._docTypeName||this._currentElement.node._qualifiedName===this._docTypeName?(this._currentElementSerialized=!1,this._fragment||(this._hasDocumentElement=!0),this):(this.emit("error",new Error("Document element name does not match DocType declaration name.")),this)},t.prototype.att=function(e,t,r){if(void 0===this._currentElement)return this.emit("error",new Error("Cannot insert an attribute node as child of a document node.")),this;try{this._currentElement.att(e,t,r)}catch(e){return this.emit("error",e),this}return this},t.prototype.com=function(e){var t;this._serializeOpenTag(!0);try{t=l.fragment(this._builderOptions).com(e).first().node}catch(e){return this.emit("error",e),this}return!this._options.wellFormed||c.xml_isLegalChar(t.data)&&-1===t.data.indexOf("--")&&!t.data.endsWith("-")?(this._push(this._writer.comment(t.data)),this):(this.emit("error",new Error("Comment data contains invalid characters (well-formed required).")),this)},t.prototype.txt=function(e){if(!this._fragment&&void 0===this._currentElement)return this.emit("error",new Error("Cannot insert a text node as child of a document node.")),this;var t;this._serializeOpenTag(!0);try{t=l.fragment(this._builderOptions).txt(e).first().node}catch(e){return this.emit("error",e),this}if(this._options.wellFormed&&!c.xml_isLegalChar(t.data))return this.emit("error",new Error("Text data contains invalid characters (well-formed required).")),this;var r=t.data.replace(/(?!&(lt|gt|amp|apos|quot);)&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;");return this._push(this._writer.text(r)),this},t.prototype.ins=function(e,t){var r;void 0===t&&(t=""),this._serializeOpenTag(!0);try{r=l.fragment(this._builderOptions).ins(e,t).first().node}catch(e){return this.emit("error",e),this}return this._options.wellFormed&&(-1!==r.target.indexOf(":")||/^xml$/i.test(r.target))?(this.emit("error",new Error("Processing instruction target contains invalid characters (well-formed required).")),this):this._options.wellFormed&&!c.xml_isLegalChar(r.data)?(this.emit("error",Error("Processing instruction data contains invalid characters (well-formed required).")),this):(this._push(this._writer.instruction(r.target,r.data)),this)},t.prototype.dat=function(e){var t;this._serializeOpenTag(!0);try{t=l.fragment(this._builderOptions).dat(e).first().node}catch(e){return this.emit("error",e),this}return this._push(this._writer.cdata(t.data)),this},t.prototype.dec=function(e){return void 0===e&&(e={version:"1.0"}),this._fragment?(this.emit("error",Error("Cannot insert an XML declaration into a document fragment.")),this):this._hasDeclaration?(this.emit("error",Error("XML declaration is already inserted.")),this):(this._push(this._writer.declaration(e.version||"1.0",e.encoding,e.standalone)),this._hasDeclaration=!0,this)},t.prototype.dtd=function(e){if(this._fragment)return this.emit("error",Error("Cannot insert a DocType declaration into a document fragment.")),this;if(""!==this._docTypeName)return this.emit("error",new Error("DocType declaration is already inserted.")),this;if(this._hasDocumentElement)return this.emit("error",new Error("Cannot insert DocType declaration after document element.")),this;var t;try{t=l.create().dtd(e).first().node}catch(e){return this.emit("error",e),this}return this._options.wellFormed&&!c.xml_isPubidChar(t.publicId)?(this.emit("error",new Error("DocType public identifier does not match PubidChar construct (well-formed required).")),this):this._options.wellFormed&&(!c.xml_isLegalChar(t.systemId)||-1!==t.systemId.indexOf('"')&&-1!==t.systemId.indexOf("'"))?(this.emit("error",new Error("DocType system identifier contains invalid characters (well-formed required).")),this):(this._docTypeName=e.name,this._push(this._writer.docType(e.name,t.publicId,t.systemId)),this)},t.prototype.import=function(e){var t,r,n=l.fragment().set(this._options);try{n.import(e)}catch(e){return this.emit("error",e),this}try{for(var i=o(n.node.childNodes),a=i.next();!a.done;a=i.next()){var s=a.value;this._fromNode(s)}}catch(e){t={error:e}}finally{try{a&&!a.done&&(r=i.return)&&r.call(i)}finally{if(t)throw t.error}}return this},t.prototype.up=function(){return this._serializeOpenTag(!1),this._serializeCloseTag(),this},t.prototype.end=function(){for(this._serializeOpenTag(!1);this._openTags.length>0;)this._serializeCloseTag();return this._push(null),this},t.prototype._serializeOpenTag=function(e){if(!this._currentElementSerialized&&void 0!==this._currentElement){var r=this._currentElement.node;if(!this._options.wellFormed||-1===r.localName.indexOf(":")&&c.xml_isName(r.localName)){var n="",i=!1,o=this._prefixMap.copy(),a={},s=this._recordNamespaceInformation(r,o,a),u=0===this._openTags.length?null:this._openTags[this._openTags.length-1][1],l=r.namespaceURI;if(null===l&&(l=u),u===l)null!==s&&(i=!0),n=l===h.namespace.XML?"xml:"+r.localName:r.localName,this._writer.beginElement(n),this._push(this._writer.openTagBegin(n));else{var p=r.prefix,f=null;if(null===p&&l===s||(f=o.get(p,l)),"xmlns"===p){if(this._options.wellFormed)return void this.emit("error",new Error("An element cannot have the 'xmlns' prefix (well-formed required)."));f=p}null!==f?(n=f+":"+r.localName,null!==s&&s!==h.namespace.XML&&(u=s||null),this._writer.beginElement(n),this._push(this._writer.openTagBegin(n))):null!==p?(p in a&&(p=this._generatePrefix(l,o,this._prefixIndex)),o.set(p,l),n+=p+":"+r.localName,this._writer.beginElement(n),this._push(this._writer.openTagBegin(n)),this._push(this._writer.attribute("xmlns:"+p,this._serializeAttributeValue(l,this._options.wellFormed))),null!==s&&(u=s||null)):null===s||null!==s&&s!==l?(i=!0,n+=r.localName,u=l,this._writer.beginElement(n),this._push(this._writer.openTagBegin(n)),this._push(this._writer.attribute("xmlns",this._serializeAttributeValue(l,this._options.wellFormed)))):(n+=r.localName,u=l,this._writer.beginElement(n),this._push(this._writer.openTagBegin(n)))}this._serializeAttributes(r,o,this._prefixIndex,a,i,this._options.wellFormed);var d=l===h.namespace.HTML;d&&!e&&t._VoidElementNames.has(r.localName)?(this._push(this._writer.openTagEnd(n,!0,!0)),this._writer.endElement(n)):d||e?this._push(this._writer.openTagEnd(n,!1,!1)):(this._push(this._writer.openTagEnd(n,!0,!1)),this._writer.endElement(n)),this._currentElementSerialized=!0,this._openTags.push([n,u,this._prefixMap,e]),this._isPrefixMapModified(this._prefixMap,o)&&(this._prefixMap=o),this._writer.level++}else this.emit("error",new Error("Node local name contains invalid characters (well-formed required)."))}},t.prototype._serializeCloseTag=function(){this._writer.level--;var e=this._openTags.pop();if(void 0!==e){var t=a(e,4),r=t[0],n=(t[1],t[2]),i=t[3];this._prefixMap=n,i&&(this._push(this._writer.closeTag(r)),this._writer.endElement(r))}else this.emit("error",new Error("Last element is undefined."))},t.prototype._push=function(e){null===e?(this._ended=!0,this.emit("end")):this._ended?this.emit("error",new Error("Cannot push to ended stream.")):0!==e.length&&(this._writer.hasData=!0,this.emit("data",e,this._writer.level))},t.prototype._fromNode=function(e){var t,r,n,i;if(d.Guard.isElementNode(e)){var a=e.prefix?e.prefix+":"+e.localName:e.localName;null!==e.namespaceURI?this.ele(e.namespaceURI,a):this.ele(a);try{for(var s=o(e.attributes),u=s.next();!u.done;u=s.next()){var l=u.value,c=l.prefix?l.prefix+":"+l.localName:l.localName;null!==l.namespaceURI?this.att(l.namespaceURI,c,l.value):this.att(c,l.value)}}catch(e){t={error:e}}finally{try{u&&!u.done&&(r=s.return)&&r.call(s)}finally{if(t)throw t.error}}try{for(var h=o(e.childNodes),p=h.next();!p.done;p=h.next()){var f=p.value;this._fromNode(f)}}catch(e){n={error:e}}finally{try{p&&!p.done&&(i=h.return)&&i.call(h)}finally{if(n)throw n.error}}this.up()}else d.Guard.isExclusiveTextNode(e)&&e.data?this.txt(e.data):d.Guard.isCommentNode(e)?this.com(e.data):d.Guard.isCDATASectionNode(e)?this.dat(e.data):d.Guard.isProcessingInstructionNode(e)&&this.ins(e.target,e.data)},t.prototype._serializeAttributes=function(e,t,r,n,i,a){var s,u,l=a?new f.LocalNameSet:void 0;try{for(var p=o(e.attributes),d=p.next();!d.done;d=p.next()){var m=d.value;if(a||i||null!==m.namespaceURI){if(a&&l&&l.has(m.namespaceURI,m.localName))return void this.emit("error",new Error("Element contains duplicate attributes (well-formed required)."));a&&l&&l.set(m.namespaceURI,m.localName);var y=m.namespaceURI,v=null;if(null!==y)if(v=t.get(m.prefix,y),y===h.namespace.XMLNS){if(m.value===h.namespace.XML||null===m.prefix&&i||null!==m.prefix&&(!(m.localName in n)||n[m.localName]!==m.value)&&t.has(m.localName,m.value))continue;if(a&&m.value===h.namespace.XMLNS)return void this.emit("error",new Error("XMLNS namespace is reserved (well-formed required)."));if(a&&""===m.value)return void this.emit("error",new Error("Namespace prefix declarations cannot be used to undeclare a namespace (well-formed required)."));"xmlns"===m.prefix&&(v="xmlns")}else null===v&&(v=null===m.prefix||t.hasPrefix(m.prefix)&&!t.has(m.prefix,y)?this._generatePrefix(y,t,r):m.prefix,this._push(this._writer.attribute("xmlns:"+v,this._serializeAttributeValue(y,this._options.wellFormed))));if(a&&(-1!==m.localName.indexOf(":")||!c.xml_isName(m.localName)||"xmlns"===m.localName&&null===y))return void this.emit("error",new Error("Attribute local name contains invalid characters (well-formed required)."));this._push(this._writer.attribute((null!==v?v+":":"")+m.localName,this._serializeAttributeValue(m.value,this._options.wellFormed)))}else this._push(this._writer.attribute(m.localName,this._serializeAttributeValue(m.value,this._options.wellFormed)))}}catch(e){s={error:e}}finally{try{d&&!d.done&&(u=p.return)&&u.call(p)}finally{if(s)throw s.error}}},t.prototype._serializeAttributeValue=function(e,t){return t&&null!==e&&!c.xml_isLegalChar(e)?(this.emit("error",new Error("Invalid characters in attribute value.")),""):null===e?"":e.replace(/(?!&(lt|gt|amp|apos|quot);)&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;")},t.prototype._recordNamespaceInformation=function(e,t,r){var n,i,a=null;try{for(var s=o(e.attributes),u=s.next();!u.done;u=s.next()){var l=u.value,c=l.namespaceURI,p=l.prefix;if(c===h.namespace.XMLNS){if(null===p){a=l.value;continue}var f=l.localName,d=l.value;if(d===h.namespace.XML)continue;if(""===d&&(d=null),t.has(f,d))continue;t.set(f,d),r[f]=d||""}}}catch(e){n={error:e}}finally{try{u&&!u.done&&(i=s.return)&&i.call(s)}finally{if(n)throw n.error}}return a},t.prototype._generatePrefix=function(e,t,r){var n="ns"+r.value;return r.value++,t.set(n,e),n},t.prototype._isPrefixMapModified=function(e,t){var r=e._items,n=t._items,i=e._nullItems,o=t._nullItems;for(var a in n){var s=r[a];if(void 0===s)return!0;var u=n[a];if(s.length!==u.length)return!0;for(var l=0;l<s.length;l++)if(s[l]!==u[l])return!0}if(i.length!==o.length)return!0;for(l=0;l<i.length;l++)if(i[l]!==o[l])return!0;return!1},t._VoidElementNames=new Set(["area","base","basefont","bgsound","br","col","embed","frame","hr","img","input","keygen","link","menuitem","meta","param","source","track","wbr"]),t}(r(308).EventEmitter);t.XMLBuilderCBImpl=_},function(e,t,r){"use strict";r(74);var n,i=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});Object.defineProperty(t,"__esModule",{value:!0});var o=function(e){function t(t){var r=e.call(this,t)||this;return r._lineLength=0,r}return i(t,e),t.prototype.frontMatter=function(){return""},t.prototype.declaration=function(e,t,r){var n=this._beginLine()+"<?xml";return n+=' version="'+e+'"',void 0!==t&&(n+=' encoding="'+t+'"'),void 0!==r&&(n+=' standalone="'+(r?"yes":"no")+'"'),n+="?>"},t.prototype.docType=function(e,t,r){var n=this._beginLine();return n+=t&&r?"<!DOCTYPE "+e+' PUBLIC "'+t+'" "'+r+'">':t?"<!DOCTYPE "+e+' PUBLIC "'+t+'">':r?"<!DOCTYPE "+e+' SYSTEM "'+r+'">':"<!DOCTYPE "+e+">"},t.prototype.comment=function(e){return this._beginLine()+"\x3c!--"+e+"--\x3e"},t.prototype.text=function(e){return this._beginLine()+e},t.prototype.instruction=function(e,t){return t?this._beginLine()+"<?"+e+" "+t+"?>":this._beginLine()+"<?"+e+"?>"},t.prototype.cdata=function(e){return this._beginLine()+"<![CDATA["+e+"]]>"},t.prototype.openTagBegin=function(e){return this._lineLength+=1+e.length,this._beginLine()+"<"+e},t.prototype.openTagEnd=function(e,t,r){return r?" />":t?this._writerOptions.allowEmptyTags?"></"+e+">":this._writerOptions.spaceBeforeSlash?" />":"/>":">"},t.prototype.closeTag=function(e){return this._beginLine()+"</"+e+">"},t.prototype.attribute=function(e,t){var r=e+'="'+t+'"';return this._writerOptions.prettyPrint&&this._writerOptions.width>0&&this._lineLength+1+r.length>this._writerOptions.width?(r=this._beginLine()+this._indent(1)+r,this._lineLength=r.length,r):(this._lineLength+=1+r.length," "+r)},t.prototype.beginElement=function(e){},t.prototype.endElement=function(e){},t.prototype._beginLine=function(){if(this._writerOptions.prettyPrint){var e=(this.hasData?this._writerOptions.newline:"")+this._indent(this._writerOptions.offset+this.level);return this._lineLength=e.length,e}return""},t.prototype._indent=function(e){return e<=0?"":this._writerOptions.indent.repeat(e)},t}(r(114).BaseCBWriter);t.XMLCBWriter=o},function(e,t,r){"use strict";r(74);var n,i=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});Object.defineProperty(t,"__esModule",{value:!0});var o=function(e){function t(t){var r=e.call(this,t)||this;return r._hasChildren=[],r._additionalLevel=0,r}return i(t,e),t.prototype.frontMatter=function(){return""},t.prototype.declaration=function(e,t,r){return""},t.prototype.docType=function(e,t,r){return""},t.prototype.comment=function(e){return this._comma()+this._beginLine()+"{"+this._sep()+this._key(this._builderOptions.convert.comment)+this._sep()+this._val(e)+this._sep()+"}"},t.prototype.text=function(e){return this._comma()+this._beginLine()+"{"+this._sep()+this._key(this._builderOptions.convert.text)+this._sep()+this._val(e)+this._sep()+"}"},t.prototype.instruction=function(e,t){return this._comma()+this._beginLine()+"{"+this._sep()+this._key(this._builderOptions.convert.ins)+this._sep()+this._val(t?e+" "+t:e)+this._sep()+"}"},t.prototype.cdata=function(e){return this._comma()+this._beginLine()+"{"+this._sep()+this._key(this._builderOptions.convert.cdata)+this._sep()+this._val(e)+this._sep()+"}"},t.prototype.attribute=function(e,t){return this._comma()+this._beginLine(1)+"{"+this._sep()+this._key(this._builderOptions.convert.att+e)+this._sep()+this._val(t)+this._sep()+"}"},t.prototype.openTagBegin=function(e){var t=this._comma()+this._beginLine()+"{"+this._sep()+this._key(e)+this._sep()+"{";return this._additionalLevel++,this.hasData=!0,t+=this._beginLine()+this._key(this._builderOptions.convert.text)+this._sep()+"[",this._hasChildren.push(!1),t},t.prototype.openTagEnd=function(e,t,r){if(t){var n=this._sep()+"]";return this._additionalLevel--,n+=this._beginLine()+"}"+this._sep()+"}"}return""},t.prototype.closeTag=function(e){var t=this._beginLine()+"]";return this._additionalLevel--,t+=this._beginLine()+"}"+this._sep()+"}"},t.prototype.beginElement=function(e){},t.prototype.endElement=function(e){this._hasChildren.pop()},t.prototype._beginLine=function(e){return void 0===e&&(e=0),this._writerOptions.prettyPrint?(this.hasData?this._writerOptions.newline:"")+this._indent(this._writerOptions.offset+this.level+e):""},t.prototype._indent=function(e){return e+this._additionalLevel<=0?"":this._writerOptions.indent.repeat(e+this._additionalLevel)},t.prototype._comma=function(){var e=this._hasChildren[this._hasChildren.length-1]?",":"";return this._hasChildren.length>0&&(this._hasChildren[this._hasChildren.length-1]=!0),e},t.prototype._sep=function(){return this._writerOptions.prettyPrint?" ":""},t.prototype._key=function(e){return'"'+e+'":'},t.prototype._val=function(e){return JSON.stringify(e)},t}(r(114).BaseCBWriter);t.JSONCBWriter=o},function(e,t,r){"use strict";r(74);var n,i=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});Object.defineProperty(t,"__esModule",{value:!0});var o=function(e){function t(t){var r=e.call(this,t)||this;if(r._rootWritten=!1,r._additionalLevel=0,t.indent.length<2)throw new Error("YAML indententation string must be at least two characters long.");if(t.offset<0)throw new Error("YAML offset should be zero or a positive number.");return r}return i(t,e),t.prototype.frontMatter=function(){return this._beginLine()+"---"},t.prototype.declaration=function(e,t,r){return""},t.prototype.docType=function(e,t,r){return""},t.prototype.comment=function(e){return this._beginLine()+this._key(this._builderOptions.convert.comment)+" "+this._val(e)},t.prototype.text=function(e){return this._beginLine()+this._key(this._builderOptions.convert.text)+" "+this._val(e)},t.prototype.instruction=function(e,t){return this._beginLine()+this._key(this._builderOptions.convert.ins)+" "+this._val(t?e+" "+t:e)},t.prototype.cdata=function(e){return this._beginLine()+this._key(this._builderOptions.convert.cdata)+" "+this._val(e)},t.prototype.attribute=function(e,t){this._additionalLevel++;var r=this._beginLine()+this._key(this._builderOptions.convert.att+e)+" "+this._val(t);return this._additionalLevel--,r},t.prototype.openTagBegin=function(e){var t=this._beginLine()+this._key(e);return this._rootWritten||(this._rootWritten=!0),this.hasData=!0,this._additionalLevel++,t+=this._beginLine(!0)+this._key(this._builderOptions.convert.text)},t.prototype.openTagEnd=function(e,t,r){return t?" "+this._val(""):""},t.prototype.closeTag=function(e){return this._additionalLevel--,""},t.prototype.beginElement=function(e){},t.prototype.endElement=function(e){},t.prototype._beginLine=function(e){return void 0===e&&(e=!1),(this.hasData?this._writerOptions.newline:"")+this._indent(this._writerOptions.offset+this.level,e)},t.prototype._indent=function(e,t){if(e+this._additionalLevel<=0)return"";var r=this._writerOptions.indent.repeat(e+this._additionalLevel);return!t&&this._rootWritten?r.substr(0,r.length-2)+"-"+r.substr(-1,1):r},t.prototype._key=function(e){return'"'+e+'":'},t.prototype._val=function(e){return JSON.stringify(e)},t}(r(114).BaseCBWriter);t.YAMLCBWriter=o},function(e,t,r){"use strict";var n,i="object"==typeof Reflect?Reflect:null,o=i&&"function"==typeof i.apply?i.apply:function(e,t,r){return Function.prototype.apply.call(e,t,r)};n=i&&"function"==typeof i.ownKeys?i.ownKeys:Object.getOwnPropertySymbols?function(e){return Object.getOwnPropertyNames(e).concat(Object.getOwnPropertySymbols(e))}:function(e){return Object.getOwnPropertyNames(e)};var a=Number.isNaN||function(e){return e!=e};function s(){s.init.call(this)}e.exports=s,s.EventEmitter=s,s.prototype._events=void 0,s.prototype._eventsCount=0,s.prototype._maxListeners=void 0;var u=10;function l(e){if("function"!=typeof e)throw new TypeError('The "listener" argument must be of type Function. Received type '+typeof e)}function c(e){return void 0===e._maxListeners?s.defaultMaxListeners:e._maxListeners}function h(e,t,r,n){var i,o,a,s;if(l(r),void 0===(o=e._events)?(o=e._events=Object.create(null),e._eventsCount=0):(void 0!==o.newListener&&(e.emit("newListener",t,r.listener?r.listener:r),o=e._events),a=o[t]),void 0===a)a=o[t]=r,++e._eventsCount;else if("function"==typeof a?a=o[t]=n?[r,a]:[a,r]:n?a.unshift(r):a.push(r),(i=c(e))>0&&a.length>i&&!a.warned){a.warned=!0;var u=new Error("Possible EventEmitter memory leak detected. "+a.length+" "+String(t)+" listeners added. Use emitter.setMaxListeners() to increase limit");u.name="MaxListenersExceededWarning",u.emitter=e,u.type=t,u.count=a.length,s=u,console&&console.warn&&console.warn(s)}return e}function p(){if(!this.fired)return this.target.removeListener(this.type,this.wrapFn),this.fired=!0,0===arguments.length?this.listener.call(this.target):this.listener.apply(this.target,arguments)}function f(e,t,r){var n={fired:!1,wrapFn:void 0,target:e,type:t,listener:r},i=p.bind(n);return i.listener=r,n.wrapFn=i,i}function d(e,t,r){var n=e._events;if(void 0===n)return[];var i=n[t];return void 0===i?[]:"function"==typeof i?r?[i.listener||i]:[i]:r?function(e){for(var t=new Array(e.length),r=0;r<t.length;++r)t[r]=e[r].listener||e[r];return t}(i):y(i,i.length)}function m(e){var t=this._events;if(void 0!==t){var r=t[e];if("function"==typeof r)return 1;if(void 0!==r)return r.length}return 0}function y(e,t){for(var r=new Array(t),n=0;n<t;++n)r[n]=e[n];return r}Object.defineProperty(s,"defaultMaxListeners",{enumerable:!0,get:function(){return u},set:function(e){if("number"!=typeof e||e<0||a(e))throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received '+e+".");u=e}}),s.init=function(){void 0!==this._events&&this._events!==Object.getPrototypeOf(this)._events||(this._events=Object.create(null),this._eventsCount=0),this._maxListeners=this._maxListeners||void 0},s.prototype.setMaxListeners=function(e){if("number"!=typeof e||e<0||a(e))throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received '+e+".");return this._maxListeners=e,this},s.prototype.getMaxListeners=function(){return c(this)},s.prototype.emit=function(e){for(var t=[],r=1;r<arguments.length;r++)t.push(arguments[r]);var n="error"===e,i=this._events;if(void 0!==i)n=n&&void 0===i.error;else if(!n)return!1;if(n){var a;if(t.length>0&&(a=t[0]),a instanceof Error)throw a;var s=new Error("Unhandled error."+(a?" ("+a.message+")":""));throw s.context=a,s}var u=i[e];if(void 0===u)return!1;if("function"==typeof u)o(u,this,t);else{var l=u.length,c=y(u,l);for(r=0;r<l;++r)o(c[r],this,t)}return!0},s.prototype.addListener=function(e,t){return h(this,e,t,!1)},s.prototype.on=s.prototype.addListener,s.prototype.prependListener=function(e,t){return h(this,e,t,!0)},s.prototype.once=function(e,t){return l(t),this.on(e,f(this,e,t)),this},s.prototype.prependOnceListener=function(e,t){return l(t),this.prependListener(e,f(this,e,t)),this},s.prototype.removeListener=function(e,t){var r,n,i,o,a;if(l(t),void 0===(n=this._events))return this;if(void 0===(r=n[e]))return this;if(r===t||r.listener===t)0==--this._eventsCount?this._events=Object.create(null):(delete n[e],n.removeListener&&this.emit("removeListener",e,r.listener||t));else if("function"!=typeof r){for(i=-1,o=r.length-1;o>=0;o--)if(r[o]===t||r[o].listener===t){a=r[o].listener,i=o;break}if(i<0)return this;0===i?r.shift():function(e,t){for(;t+1<e.length;t++)e[t]=e[t+1];e.pop()}(r,i),1===r.length&&(n[e]=r[0]),void 0!==n.removeListener&&this.emit("removeListener",e,a||t)}return this},s.prototype.off=s.prototype.removeListener,s.prototype.removeAllListeners=function(e){var t,r,n;if(void 0===(r=this._events))return this;if(void 0===r.removeListener)return 0===arguments.length?(this._events=Object.create(null),this._eventsCount=0):void 0!==r[e]&&(0==--this._eventsCount?this._events=Object.create(null):delete r[e]),this;if(0===arguments.length){var i,o=Object.keys(r);for(n=0;n<o.length;++n)"removeListener"!==(i=o[n])&&this.removeAllListeners(i);return this.removeAllListeners("removeListener"),this._events=Object.create(null),this._eventsCount=0,this}if("function"==typeof(t=r[e]))this.removeListener(e,t);else if(void 0!==t)for(n=t.length-1;n>=0;n--)this.removeListener(e,t[n]);return this},s.prototype.listeners=function(e){return d(this,e,!0)},s.prototype.rawListeners=function(e){return d(this,e,!1)},s.listenerCount=function(e,t){return"function"==typeof e.listenerCount?e.listenerCount(t):m.call(e,t)},s.prototype.listenerCount=m,s.prototype.eventNames=function(){return this._eventsCount>0?n(this._events):[]}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(77);t.createCB=function(e){return new n.XMLBuilderCBImpl(e)},t.fragmentCB=function(e){return new n.XMLBuilderCBImpl(e,!0)}}])}));

/***/ }),

/***/ "./node_modules/base64-js/index.js":
/*!*****************************************!*\
  !*** ./node_modules/base64-js/index.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.byteLength = byteLength
exports.toByteArray = toByteArray
exports.fromByteArray = fromByteArray

var lookup = []
var revLookup = []
var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array

var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
for (var i = 0, len = code.length; i < len; ++i) {
  lookup[i] = code[i]
  revLookup[code.charCodeAt(i)] = i
}

// Support decoding URL-safe base64 strings, as Node.js does.
// See: https://en.wikipedia.org/wiki/Base64#URL_applications
revLookup['-'.charCodeAt(0)] = 62
revLookup['_'.charCodeAt(0)] = 63

function getLens (b64) {
  var len = b64.length

  if (len % 4 > 0) {
    throw new Error('Invalid string. Length must be a multiple of 4')
  }

  // Trim off extra bytes after placeholder bytes are found
  // See: https://github.com/beatgammit/base64-js/issues/42
  var validLen = b64.indexOf('=')
  if (validLen === -1) validLen = len

  var placeHoldersLen = validLen === len
    ? 0
    : 4 - (validLen % 4)

  return [validLen, placeHoldersLen]
}

// base64 is 4/3 + up to two characters of the original data
function byteLength (b64) {
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function _byteLength (b64, validLen, placeHoldersLen) {
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function toByteArray (b64) {
  var tmp
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]

  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))

  var curByte = 0

  // if there are placeholders, only get up to the last complete 4 chars
  var len = placeHoldersLen > 0
    ? validLen - 4
    : validLen

  var i
  for (i = 0; i < len; i += 4) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 18) |
      (revLookup[b64.charCodeAt(i + 1)] << 12) |
      (revLookup[b64.charCodeAt(i + 2)] << 6) |
      revLookup[b64.charCodeAt(i + 3)]
    arr[curByte++] = (tmp >> 16) & 0xFF
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 2) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 2) |
      (revLookup[b64.charCodeAt(i + 1)] >> 4)
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 1) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 10) |
      (revLookup[b64.charCodeAt(i + 1)] << 4) |
      (revLookup[b64.charCodeAt(i + 2)] >> 2)
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  return arr
}

function tripletToBase64 (num) {
  return lookup[num >> 18 & 0x3F] +
    lookup[num >> 12 & 0x3F] +
    lookup[num >> 6 & 0x3F] +
    lookup[num & 0x3F]
}

function encodeChunk (uint8, start, end) {
  var tmp
  var output = []
  for (var i = start; i < end; i += 3) {
    tmp =
      ((uint8[i] << 16) & 0xFF0000) +
      ((uint8[i + 1] << 8) & 0xFF00) +
      (uint8[i + 2] & 0xFF)
    output.push(tripletToBase64(tmp))
  }
  return output.join('')
}

function fromByteArray (uint8) {
  var tmp
  var len = uint8.length
  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
  var parts = []
  var maxChunkLength = 16383 // must be multiple of 3

  // go through the array every three bytes, we'll deal with trailing stuff later
  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))
  }

  // pad the end with zeros, but make sure to not forget the extra bytes
  if (extraBytes === 1) {
    tmp = uint8[len - 1]
    parts.push(
      lookup[tmp >> 2] +
      lookup[(tmp << 4) & 0x3F] +
      '=='
    )
  } else if (extraBytes === 2) {
    tmp = (uint8[len - 2] << 8) + uint8[len - 1]
    parts.push(
      lookup[tmp >> 10] +
      lookup[(tmp >> 4) & 0x3F] +
      lookup[(tmp << 2) & 0x3F] +
      '='
    )
  }

  return parts.join('')
}


/***/ }),

/***/ "./node_modules/buffer/index.js":
/*!**************************************!*\
  !*** ./node_modules/buffer/index.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <http://feross.org>
 * @license  MIT
 */
/* eslint-disable no-proto */



var base64 = __webpack_require__(/*! base64-js */ "./node_modules/base64-js/index.js")
var ieee754 = __webpack_require__(/*! ieee754 */ "./node_modules/ieee754/index.js")
var isArray = __webpack_require__(/*! isarray */ "./node_modules/buffer/node_modules/isarray/index.js")

exports.Buffer = Buffer
exports.SlowBuffer = SlowBuffer
exports.INSPECT_MAX_BYTES = 50

/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Use Object implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * Due to various browser bugs, sometimes the Object implementation will be used even
 * when the browser supports typed arrays.
 *
 * Note:
 *
 *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,
 *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.
 *
 *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.
 *
 *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of
 *     incorrect length in some situations.

 * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they
 * get the Object implementation, which is slower but behaves correctly.
 */
Buffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined
  ? global.TYPED_ARRAY_SUPPORT
  : typedArraySupport()

/*
 * Export kMaxLength after typed array support is determined.
 */
exports.kMaxLength = kMaxLength()

function typedArraySupport () {
  try {
    var arr = new Uint8Array(1)
    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}
    return arr.foo() === 42 && // typed array instances can be augmented
        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`
        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`
  } catch (e) {
    return false
  }
}

function kMaxLength () {
  return Buffer.TYPED_ARRAY_SUPPORT
    ? 0x7fffffff
    : 0x3fffffff
}

function createBuffer (that, length) {
  if (kMaxLength() < length) {
    throw new RangeError('Invalid typed array length')
  }
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = new Uint8Array(length)
    that.__proto__ = Buffer.prototype
  } else {
    // Fallback: Return an object instance of the Buffer class
    if (that === null) {
      that = new Buffer(length)
    }
    that.length = length
  }

  return that
}

/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */

function Buffer (arg, encodingOrOffset, length) {
  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {
    return new Buffer(arg, encodingOrOffset, length)
  }

  // Common case.
  if (typeof arg === 'number') {
    if (typeof encodingOrOffset === 'string') {
      throw new Error(
        'If encoding is specified then the first argument must be a string'
      )
    }
    return allocUnsafe(this, arg)
  }
  return from(this, arg, encodingOrOffset, length)
}

Buffer.poolSize = 8192 // not used by this implementation

// TODO: Legacy, not needed anymore. Remove in next major version.
Buffer._augment = function (arr) {
  arr.__proto__ = Buffer.prototype
  return arr
}

function from (that, value, encodingOrOffset, length) {
  if (typeof value === 'number') {
    throw new TypeError('"value" argument must not be a number')
  }

  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {
    return fromArrayBuffer(that, value, encodingOrOffset, length)
  }

  if (typeof value === 'string') {
    return fromString(that, value, encodingOrOffset)
  }

  return fromObject(that, value)
}

/**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/
Buffer.from = function (value, encodingOrOffset, length) {
  return from(null, value, encodingOrOffset, length)
}

if (Buffer.TYPED_ARRAY_SUPPORT) {
  Buffer.prototype.__proto__ = Uint8Array.prototype
  Buffer.__proto__ = Uint8Array
  if (typeof Symbol !== 'undefined' && Symbol.species &&
      Buffer[Symbol.species] === Buffer) {
    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
    Object.defineProperty(Buffer, Symbol.species, {
      value: null,
      configurable: true
    })
  }
}

function assertSize (size) {
  if (typeof size !== 'number') {
    throw new TypeError('"size" argument must be a number')
  } else if (size < 0) {
    throw new RangeError('"size" argument must not be negative')
  }
}

function alloc (that, size, fill, encoding) {
  assertSize(size)
  if (size <= 0) {
    return createBuffer(that, size)
  }
  if (fill !== undefined) {
    // Only pay attention to encoding if it's a string. This
    // prevents accidentally sending in a number that would
    // be interpretted as a start offset.
    return typeof encoding === 'string'
      ? createBuffer(that, size).fill(fill, encoding)
      : createBuffer(that, size).fill(fill)
  }
  return createBuffer(that, size)
}

/**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/
Buffer.alloc = function (size, fill, encoding) {
  return alloc(null, size, fill, encoding)
}

function allocUnsafe (that, size) {
  assertSize(size)
  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) {
    for (var i = 0; i < size; ++i) {
      that[i] = 0
    }
  }
  return that
}

/**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */
Buffer.allocUnsafe = function (size) {
  return allocUnsafe(null, size)
}
/**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */
Buffer.allocUnsafeSlow = function (size) {
  return allocUnsafe(null, size)
}

function fromString (that, string, encoding) {
  if (typeof encoding !== 'string' || encoding === '') {
    encoding = 'utf8'
  }

  if (!Buffer.isEncoding(encoding)) {
    throw new TypeError('"encoding" must be a valid string encoding')
  }

  var length = byteLength(string, encoding) | 0
  that = createBuffer(that, length)

  var actual = that.write(string, encoding)

  if (actual !== length) {
    // Writing a hex string, for example, that contains invalid characters will
    // cause everything after the first invalid character to be ignored. (e.g.
    // 'abxxcd' will be treated as 'ab')
    that = that.slice(0, actual)
  }

  return that
}

function fromArrayLike (that, array) {
  var length = array.length < 0 ? 0 : checked(array.length) | 0
  that = createBuffer(that, length)
  for (var i = 0; i < length; i += 1) {
    that[i] = array[i] & 255
  }
  return that
}

function fromArrayBuffer (that, array, byteOffset, length) {
  array.byteLength // this throws if `array` is not a valid ArrayBuffer

  if (byteOffset < 0 || array.byteLength < byteOffset) {
    throw new RangeError('\'offset\' is out of bounds')
  }

  if (array.byteLength < byteOffset + (length || 0)) {
    throw new RangeError('\'length\' is out of bounds')
  }

  if (byteOffset === undefined && length === undefined) {
    array = new Uint8Array(array)
  } else if (length === undefined) {
    array = new Uint8Array(array, byteOffset)
  } else {
    array = new Uint8Array(array, byteOffset, length)
  }

  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = array
    that.__proto__ = Buffer.prototype
  } else {
    // Fallback: Return an object instance of the Buffer class
    that = fromArrayLike(that, array)
  }
  return that
}

function fromObject (that, obj) {
  if (Buffer.isBuffer(obj)) {
    var len = checked(obj.length) | 0
    that = createBuffer(that, len)

    if (that.length === 0) {
      return that
    }

    obj.copy(that, 0, 0, len)
    return that
  }

  if (obj) {
    if ((typeof ArrayBuffer !== 'undefined' &&
        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {
      if (typeof obj.length !== 'number' || isnan(obj.length)) {
        return createBuffer(that, 0)
      }
      return fromArrayLike(that, obj)
    }

    if (obj.type === 'Buffer' && isArray(obj.data)) {
      return fromArrayLike(that, obj.data)
    }
  }

  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')
}

function checked (length) {
  // Note: cannot use `length < kMaxLength()` here because that fails when
  // length is NaN (which is otherwise coerced to zero.)
  if (length >= kMaxLength()) {
    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
                         'size: 0x' + kMaxLength().toString(16) + ' bytes')
  }
  return length | 0
}

function SlowBuffer (length) {
  if (+length != length) { // eslint-disable-line eqeqeq
    length = 0
  }
  return Buffer.alloc(+length)
}

Buffer.isBuffer = function isBuffer (b) {
  return !!(b != null && b._isBuffer)
}

Buffer.compare = function compare (a, b) {
  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
    throw new TypeError('Arguments must be Buffers')
  }

  if (a === b) return 0

  var x = a.length
  var y = b.length

  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i]
      y = b[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

Buffer.isEncoding = function isEncoding (encoding) {
  switch (String(encoding).toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'latin1':
    case 'binary':
    case 'base64':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return true
    default:
      return false
  }
}

Buffer.concat = function concat (list, length) {
  if (!isArray(list)) {
    throw new TypeError('"list" argument must be an Array of Buffers')
  }

  if (list.length === 0) {
    return Buffer.alloc(0)
  }

  var i
  if (length === undefined) {
    length = 0
    for (i = 0; i < list.length; ++i) {
      length += list[i].length
    }
  }

  var buffer = Buffer.allocUnsafe(length)
  var pos = 0
  for (i = 0; i < list.length; ++i) {
    var buf = list[i]
    if (!Buffer.isBuffer(buf)) {
      throw new TypeError('"list" argument must be an Array of Buffers')
    }
    buf.copy(buffer, pos)
    pos += buf.length
  }
  return buffer
}

function byteLength (string, encoding) {
  if (Buffer.isBuffer(string)) {
    return string.length
  }
  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&
      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {
    return string.byteLength
  }
  if (typeof string !== 'string') {
    string = '' + string
  }

  var len = string.length
  if (len === 0) return 0

  // Use a for loop to avoid recursion
  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'ascii':
      case 'latin1':
      case 'binary':
        return len
      case 'utf8':
      case 'utf-8':
      case undefined:
        return utf8ToBytes(string).length
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return len * 2
      case 'hex':
        return len >>> 1
      case 'base64':
        return base64ToBytes(string).length
      default:
        if (loweredCase) return utf8ToBytes(string).length // assume utf8
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}
Buffer.byteLength = byteLength

function slowToString (encoding, start, end) {
  var loweredCase = false

  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
  // property of a typed array.

  // This behaves neither like String nor Uint8Array in that we set start/end
  // to their upper/lower bounds if the value passed is out of range.
  // undefined is handled specially as per ECMA-262 6th Edition,
  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
  if (start === undefined || start < 0) {
    start = 0
  }
  // Return early if start > this.length. Done here to prevent potential uint32
  // coercion fail below.
  if (start > this.length) {
    return ''
  }

  if (end === undefined || end > this.length) {
    end = this.length
  }

  if (end <= 0) {
    return ''
  }

  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
  end >>>= 0
  start >>>= 0

  if (end <= start) {
    return ''
  }

  if (!encoding) encoding = 'utf8'

  while (true) {
    switch (encoding) {
      case 'hex':
        return hexSlice(this, start, end)

      case 'utf8':
      case 'utf-8':
        return utf8Slice(this, start, end)

      case 'ascii':
        return asciiSlice(this, start, end)

      case 'latin1':
      case 'binary':
        return latin1Slice(this, start, end)

      case 'base64':
        return base64Slice(this, start, end)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return utf16leSlice(this, start, end)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = (encoding + '').toLowerCase()
        loweredCase = true
    }
  }
}

// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect
// Buffer instances.
Buffer.prototype._isBuffer = true

function swap (b, n, m) {
  var i = b[n]
  b[n] = b[m]
  b[m] = i
}

Buffer.prototype.swap16 = function swap16 () {
  var len = this.length
  if (len % 2 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 16-bits')
  }
  for (var i = 0; i < len; i += 2) {
    swap(this, i, i + 1)
  }
  return this
}

Buffer.prototype.swap32 = function swap32 () {
  var len = this.length
  if (len % 4 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 32-bits')
  }
  for (var i = 0; i < len; i += 4) {
    swap(this, i, i + 3)
    swap(this, i + 1, i + 2)
  }
  return this
}

Buffer.prototype.swap64 = function swap64 () {
  var len = this.length
  if (len % 8 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 64-bits')
  }
  for (var i = 0; i < len; i += 8) {
    swap(this, i, i + 7)
    swap(this, i + 1, i + 6)
    swap(this, i + 2, i + 5)
    swap(this, i + 3, i + 4)
  }
  return this
}

Buffer.prototype.toString = function toString () {
  var length = this.length | 0
  if (length === 0) return ''
  if (arguments.length === 0) return utf8Slice(this, 0, length)
  return slowToString.apply(this, arguments)
}

Buffer.prototype.equals = function equals (b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  if (this === b) return true
  return Buffer.compare(this, b) === 0
}

Buffer.prototype.inspect = function inspect () {
  var str = ''
  var max = exports.INSPECT_MAX_BYTES
  if (this.length > 0) {
    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')
    if (this.length > max) str += ' ... '
  }
  return '<Buffer ' + str + '>'
}

Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
  if (!Buffer.isBuffer(target)) {
    throw new TypeError('Argument must be a Buffer')
  }

  if (start === undefined) {
    start = 0
  }
  if (end === undefined) {
    end = target ? target.length : 0
  }
  if (thisStart === undefined) {
    thisStart = 0
  }
  if (thisEnd === undefined) {
    thisEnd = this.length
  }

  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
    throw new RangeError('out of range index')
  }

  if (thisStart >= thisEnd && start >= end) {
    return 0
  }
  if (thisStart >= thisEnd) {
    return -1
  }
  if (start >= end) {
    return 1
  }

  start >>>= 0
  end >>>= 0
  thisStart >>>= 0
  thisEnd >>>= 0

  if (this === target) return 0

  var x = thisEnd - thisStart
  var y = end - start
  var len = Math.min(x, y)

  var thisCopy = this.slice(thisStart, thisEnd)
  var targetCopy = target.slice(start, end)

  for (var i = 0; i < len; ++i) {
    if (thisCopy[i] !== targetCopy[i]) {
      x = thisCopy[i]
      y = targetCopy[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
//
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into `buffer`; will be clamped to an int32
// - encoding - an optional encoding, relevant is val is a string
// - dir - true for indexOf, false for lastIndexOf
function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {
  // Empty buffer means no match
  if (buffer.length === 0) return -1

  // Normalize byteOffset
  if (typeof byteOffset === 'string') {
    encoding = byteOffset
    byteOffset = 0
  } else if (byteOffset > 0x7fffffff) {
    byteOffset = 0x7fffffff
  } else if (byteOffset < -0x80000000) {
    byteOffset = -0x80000000
  }
  byteOffset = +byteOffset  // Coerce to Number.
  if (isNaN(byteOffset)) {
    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
    byteOffset = dir ? 0 : (buffer.length - 1)
  }

  // Normalize byteOffset: negative offsets start from the end of the buffer
  if (byteOffset < 0) byteOffset = buffer.length + byteOffset
  if (byteOffset >= buffer.length) {
    if (dir) return -1
    else byteOffset = buffer.length - 1
  } else if (byteOffset < 0) {
    if (dir) byteOffset = 0
    else return -1
  }

  // Normalize val
  if (typeof val === 'string') {
    val = Buffer.from(val, encoding)
  }

  // Finally, search either indexOf (if dir is true) or lastIndexOf
  if (Buffer.isBuffer(val)) {
    // Special case: looking for empty string/buffer always fails
    if (val.length === 0) {
      return -1
    }
    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
  } else if (typeof val === 'number') {
    val = val & 0xFF // Search for a byte value [0-255]
    if (Buffer.TYPED_ARRAY_SUPPORT &&
        typeof Uint8Array.prototype.indexOf === 'function') {
      if (dir) {
        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
      } else {
        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
      }
    }
    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)
  }

  throw new TypeError('val must be string, number or Buffer')
}

function arrayIndexOf (arr, val, byteOffset, encoding, dir) {
  var indexSize = 1
  var arrLength = arr.length
  var valLength = val.length

  if (encoding !== undefined) {
    encoding = String(encoding).toLowerCase()
    if (encoding === 'ucs2' || encoding === 'ucs-2' ||
        encoding === 'utf16le' || encoding === 'utf-16le') {
      if (arr.length < 2 || val.length < 2) {
        return -1
      }
      indexSize = 2
      arrLength /= 2
      valLength /= 2
      byteOffset /= 2
    }
  }

  function read (buf, i) {
    if (indexSize === 1) {
      return buf[i]
    } else {
      return buf.readUInt16BE(i * indexSize)
    }
  }

  var i
  if (dir) {
    var foundIndex = -1
    for (i = byteOffset; i < arrLength; i++) {
      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
        if (foundIndex === -1) foundIndex = i
        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
      } else {
        if (foundIndex !== -1) i -= i - foundIndex
        foundIndex = -1
      }
    }
  } else {
    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength
    for (i = byteOffset; i >= 0; i--) {
      var found = true
      for (var j = 0; j < valLength; j++) {
        if (read(arr, i + j) !== read(val, j)) {
          found = false
          break
        }
      }
      if (found) return i
    }
  }

  return -1
}

Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
  return this.indexOf(val, byteOffset, encoding) !== -1
}

Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
}

Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
}

function hexWrite (buf, string, offset, length) {
  offset = Number(offset) || 0
  var remaining = buf.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }

  // must be an even number of digits
  var strLen = string.length
  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')

  if (length > strLen / 2) {
    length = strLen / 2
  }
  for (var i = 0; i < length; ++i) {
    var parsed = parseInt(string.substr(i * 2, 2), 16)
    if (isNaN(parsed)) return i
    buf[offset + i] = parsed
  }
  return i
}

function utf8Write (buf, string, offset, length) {
  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
}

function asciiWrite (buf, string, offset, length) {
  return blitBuffer(asciiToBytes(string), buf, offset, length)
}

function latin1Write (buf, string, offset, length) {
  return asciiWrite(buf, string, offset, length)
}

function base64Write (buf, string, offset, length) {
  return blitBuffer(base64ToBytes(string), buf, offset, length)
}

function ucs2Write (buf, string, offset, length) {
  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
}

Buffer.prototype.write = function write (string, offset, length, encoding) {
  // Buffer#write(string)
  if (offset === undefined) {
    encoding = 'utf8'
    length = this.length
    offset = 0
  // Buffer#write(string, encoding)
  } else if (length === undefined && typeof offset === 'string') {
    encoding = offset
    length = this.length
    offset = 0
  // Buffer#write(string, offset[, length][, encoding])
  } else if (isFinite(offset)) {
    offset = offset | 0
    if (isFinite(length)) {
      length = length | 0
      if (encoding === undefined) encoding = 'utf8'
    } else {
      encoding = length
      length = undefined
    }
  // legacy write(string, encoding, offset, length) - remove in v0.13
  } else {
    throw new Error(
      'Buffer.write(string, encoding, offset[, length]) is no longer supported'
    )
  }

  var remaining = this.length - offset
  if (length === undefined || length > remaining) length = remaining

  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
    throw new RangeError('Attempt to write outside buffer bounds')
  }

  if (!encoding) encoding = 'utf8'

  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'hex':
        return hexWrite(this, string, offset, length)

      case 'utf8':
      case 'utf-8':
        return utf8Write(this, string, offset, length)

      case 'ascii':
        return asciiWrite(this, string, offset, length)

      case 'latin1':
      case 'binary':
        return latin1Write(this, string, offset, length)

      case 'base64':
        // Warning: maxLength not taken into account in base64Write
        return base64Write(this, string, offset, length)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return ucs2Write(this, string, offset, length)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}

Buffer.prototype.toJSON = function toJSON () {
  return {
    type: 'Buffer',
    data: Array.prototype.slice.call(this._arr || this, 0)
  }
}

function base64Slice (buf, start, end) {
  if (start === 0 && end === buf.length) {
    return base64.fromByteArray(buf)
  } else {
    return base64.fromByteArray(buf.slice(start, end))
  }
}

function utf8Slice (buf, start, end) {
  end = Math.min(buf.length, end)
  var res = []

  var i = start
  while (i < end) {
    var firstByte = buf[i]
    var codePoint = null
    var bytesPerSequence = (firstByte > 0xEF) ? 4
      : (firstByte > 0xDF) ? 3
      : (firstByte > 0xBF) ? 2
      : 1

    if (i + bytesPerSequence <= end) {
      var secondByte, thirdByte, fourthByte, tempCodePoint

      switch (bytesPerSequence) {
        case 1:
          if (firstByte < 0x80) {
            codePoint = firstByte
          }
          break
        case 2:
          secondByte = buf[i + 1]
          if ((secondByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
            if (tempCodePoint > 0x7F) {
              codePoint = tempCodePoint
            }
          }
          break
        case 3:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
              codePoint = tempCodePoint
            }
          }
          break
        case 4:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          fourthByte = buf[i + 3]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
              codePoint = tempCodePoint
            }
          }
      }
    }

    if (codePoint === null) {
      // we did not generate a valid codePoint so insert a
      // replacement char (U+FFFD) and advance only 1 byte
      codePoint = 0xFFFD
      bytesPerSequence = 1
    } else if (codePoint > 0xFFFF) {
      // encode to utf16 (surrogate pair dance)
      codePoint -= 0x10000
      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
      codePoint = 0xDC00 | codePoint & 0x3FF
    }

    res.push(codePoint)
    i += bytesPerSequence
  }

  return decodeCodePointsArray(res)
}

// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
var MAX_ARGUMENTS_LENGTH = 0x1000

function decodeCodePointsArray (codePoints) {
  var len = codePoints.length
  if (len <= MAX_ARGUMENTS_LENGTH) {
    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
  }

  // Decode in chunks to avoid "call stack size exceeded".
  var res = ''
  var i = 0
  while (i < len) {
    res += String.fromCharCode.apply(
      String,
      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
    )
  }
  return res
}

function asciiSlice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i] & 0x7F)
  }
  return ret
}

function latin1Slice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i])
  }
  return ret
}

function hexSlice (buf, start, end) {
  var len = buf.length

  if (!start || start < 0) start = 0
  if (!end || end < 0 || end > len) end = len

  var out = ''
  for (var i = start; i < end; ++i) {
    out += toHex(buf[i])
  }
  return out
}

function utf16leSlice (buf, start, end) {
  var bytes = buf.slice(start, end)
  var res = ''
  for (var i = 0; i < bytes.length; i += 2) {
    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)
  }
  return res
}

Buffer.prototype.slice = function slice (start, end) {
  var len = this.length
  start = ~~start
  end = end === undefined ? len : ~~end

  if (start < 0) {
    start += len
    if (start < 0) start = 0
  } else if (start > len) {
    start = len
  }

  if (end < 0) {
    end += len
    if (end < 0) end = 0
  } else if (end > len) {
    end = len
  }

  if (end < start) end = start

  var newBuf
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    newBuf = this.subarray(start, end)
    newBuf.__proto__ = Buffer.prototype
  } else {
    var sliceLen = end - start
    newBuf = new Buffer(sliceLen, undefined)
    for (var i = 0; i < sliceLen; ++i) {
      newBuf[i] = this[i + start]
    }
  }

  return newBuf
}

/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */
function checkOffset (offset, ext, length) {
  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
}

Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }

  return val
}

Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    checkOffset(offset, byteLength, this.length)
  }

  var val = this[offset + --byteLength]
  var mul = 1
  while (byteLength > 0 && (mul *= 0x100)) {
    val += this[offset + --byteLength] * mul
  }

  return val
}

Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  return this[offset]
}

Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return this[offset] | (this[offset + 1] << 8)
}

Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return (this[offset] << 8) | this[offset + 1]
}

Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return ((this[offset]) |
      (this[offset + 1] << 8) |
      (this[offset + 2] << 16)) +
      (this[offset + 3] * 0x1000000)
}

Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] * 0x1000000) +
    ((this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    this[offset + 3])
}

Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var i = byteLength
  var mul = 1
  var val = this[offset + --i]
  while (i > 0 && (mul *= 0x100)) {
    val += this[offset + --i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  if (!(this[offset] & 0x80)) return (this[offset])
  return ((0xff - this[offset] + 1) * -1)
}

Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset] | (this[offset + 1] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset + 1] | (this[offset] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset]) |
    (this[offset + 1] << 8) |
    (this[offset + 2] << 16) |
    (this[offset + 3] << 24)
}

Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] << 24) |
    (this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    (this[offset + 3])
}

Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, true, 23, 4)
}

Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, false, 23, 4)
}

Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, true, 52, 8)
}

Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, false, 52, 8)
}

function checkInt (buf, value, offset, ext, max, min) {
  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
}

Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var mul = 1
  var i = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var i = byteLength - 1
  var mul = 1
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  this[offset] = (value & 0xff)
  return offset + 1
}

function objectWriteUInt16 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {
    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>
      (littleEndian ? i : 1 - i) * 8
  }
}

Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = (value & 0xff)
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

function objectWriteUInt32 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffffffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {
    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff
  }
}

Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset + 3] = (value >>> 24)
    this[offset + 2] = (value >>> 16)
    this[offset + 1] = (value >>> 8)
    this[offset] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = 0
  var mul = 1
  var sub = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = byteLength - 1
  var mul = 1
  var sub = 0
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  if (value < 0) value = 0xff + value + 1
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = (value & 0xff)
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
    this[offset + 2] = (value >>> 16)
    this[offset + 3] = (value >>> 24)
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (value < 0) value = 0xffffffff + value + 1
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

function checkIEEE754 (buf, value, offset, ext, max, min) {
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
  if (offset < 0) throw new RangeError('Index out of range')
}

function writeFloat (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
  }
  ieee754.write(buf, value, offset, littleEndian, 23, 4)
  return offset + 4
}

Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
  return writeFloat(this, value, offset, true, noAssert)
}

Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
  return writeFloat(this, value, offset, false, noAssert)
}

function writeDouble (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
  }
  ieee754.write(buf, value, offset, littleEndian, 52, 8)
  return offset + 8
}

Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
  return writeDouble(this, value, offset, true, noAssert)
}

Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
  return writeDouble(this, value, offset, false, noAssert)
}

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function copy (target, targetStart, start, end) {
  if (!start) start = 0
  if (!end && end !== 0) end = this.length
  if (targetStart >= target.length) targetStart = target.length
  if (!targetStart) targetStart = 0
  if (end > 0 && end < start) end = start

  // Copy 0 bytes; we're done
  if (end === start) return 0
  if (target.length === 0 || this.length === 0) return 0

  // Fatal error conditions
  if (targetStart < 0) {
    throw new RangeError('targetStart out of bounds')
  }
  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')
  if (end < 0) throw new RangeError('sourceEnd out of bounds')

  // Are we oob?
  if (end > this.length) end = this.length
  if (target.length - targetStart < end - start) {
    end = target.length - targetStart + start
  }

  var len = end - start
  var i

  if (this === target && start < targetStart && targetStart < end) {
    // descending copy from end
    for (i = len - 1; i >= 0; --i) {
      target[i + targetStart] = this[i + start]
    }
  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {
    // ascending copy from start
    for (i = 0; i < len; ++i) {
      target[i + targetStart] = this[i + start]
    }
  } else {
    Uint8Array.prototype.set.call(
      target,
      this.subarray(start, start + len),
      targetStart
    )
  }

  return len
}

// Usage:
//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])
Buffer.prototype.fill = function fill (val, start, end, encoding) {
  // Handle string cases:
  if (typeof val === 'string') {
    if (typeof start === 'string') {
      encoding = start
      start = 0
      end = this.length
    } else if (typeof end === 'string') {
      encoding = end
      end = this.length
    }
    if (val.length === 1) {
      var code = val.charCodeAt(0)
      if (code < 256) {
        val = code
      }
    }
    if (encoding !== undefined && typeof encoding !== 'string') {
      throw new TypeError('encoding must be a string')
    }
    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
      throw new TypeError('Unknown encoding: ' + encoding)
    }
  } else if (typeof val === 'number') {
    val = val & 255
  }

  // Invalid ranges are not set to a default, so can range check early.
  if (start < 0 || this.length < start || this.length < end) {
    throw new RangeError('Out of range index')
  }

  if (end <= start) {
    return this
  }

  start = start >>> 0
  end = end === undefined ? this.length : end >>> 0

  if (!val) val = 0

  var i
  if (typeof val === 'number') {
    for (i = start; i < end; ++i) {
      this[i] = val
    }
  } else {
    var bytes = Buffer.isBuffer(val)
      ? val
      : utf8ToBytes(new Buffer(val, encoding).toString())
    var len = bytes.length
    for (i = 0; i < end - start; ++i) {
      this[i + start] = bytes[i % len]
    }
  }

  return this
}

// HELPER FUNCTIONS
// ================

var INVALID_BASE64_RE = /[^+\/0-9A-Za-z-_]/g

function base64clean (str) {
  // Node strips out invalid characters like \n and \t from the string, base64-js does not
  str = stringtrim(str).replace(INVALID_BASE64_RE, '')
  // Node converts strings with length < 2 to ''
  if (str.length < 2) return ''
  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
  while (str.length % 4 !== 0) {
    str = str + '='
  }
  return str
}

function stringtrim (str) {
  if (str.trim) return str.trim()
  return str.replace(/^\s+|\s+$/g, '')
}

function toHex (n) {
  if (n < 16) return '0' + n.toString(16)
  return n.toString(16)
}

function utf8ToBytes (string, units) {
  units = units || Infinity
  var codePoint
  var length = string.length
  var leadSurrogate = null
  var bytes = []

  for (var i = 0; i < length; ++i) {
    codePoint = string.charCodeAt(i)

    // is surrogate component
    if (codePoint > 0xD7FF && codePoint < 0xE000) {
      // last char was a lead
      if (!leadSurrogate) {
        // no lead yet
        if (codePoint > 0xDBFF) {
          // unexpected trail
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        } else if (i + 1 === length) {
          // unpaired lead
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        }

        // valid lead
        leadSurrogate = codePoint

        continue
      }

      // 2 leads in a row
      if (codePoint < 0xDC00) {
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
        leadSurrogate = codePoint
        continue
      }

      // valid surrogate pair
      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
    } else if (leadSurrogate) {
      // valid bmp char, but last char was a lead
      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
    }

    leadSurrogate = null

    // encode utf8
    if (codePoint < 0x80) {
      if ((units -= 1) < 0) break
      bytes.push(codePoint)
    } else if (codePoint < 0x800) {
      if ((units -= 2) < 0) break
      bytes.push(
        codePoint >> 0x6 | 0xC0,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x10000) {
      if ((units -= 3) < 0) break
      bytes.push(
        codePoint >> 0xC | 0xE0,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x110000) {
      if ((units -= 4) < 0) break
      bytes.push(
        codePoint >> 0x12 | 0xF0,
        codePoint >> 0xC & 0x3F | 0x80,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else {
      throw new Error('Invalid code point')
    }
  }

  return bytes
}

function asciiToBytes (str) {
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    // Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF)
  }
  return byteArray
}

function utf16leToBytes (str, units) {
  var c, hi, lo
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    if ((units -= 2) < 0) break

    c = str.charCodeAt(i)
    hi = c >> 8
    lo = c % 256
    byteArray.push(lo)
    byteArray.push(hi)
  }

  return byteArray
}

function base64ToBytes (str) {
  return base64.toByteArray(base64clean(str))
}

function blitBuffer (src, dst, offset, length) {
  for (var i = 0; i < length; ++i) {
    if ((i + offset >= dst.length) || (i >= src.length)) break
    dst[i + offset] = src[i]
  }
  return i
}

function isnan (val) {
  return val !== val // eslint-disable-line no-self-compare
}

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "./node_modules/buffer/node_modules/isarray/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/buffer/node_modules/isarray/index.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var toString = {}.toString;

module.exports = Array.isArray || function (arr) {
  return toString.call(arr) == '[object Array]';
};


/***/ }),

/***/ "./node_modules/ieee754/index.js":
/*!***************************************!*\
  !*** ./node_modules/ieee754/index.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */
exports.read = function (buffer, offset, isLE, mLen, nBytes) {
  var e, m
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var nBits = -7
  var i = isLE ? (nBytes - 1) : 0
  var d = isLE ? -1 : 1
  var s = buffer[offset + i]

  i += d

  e = s & ((1 << (-nBits)) - 1)
  s >>= (-nBits)
  nBits += eLen
  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  m = e & ((1 << (-nBits)) - 1)
  e >>= (-nBits)
  nBits += mLen
  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  if (e === 0) {
    e = 1 - eBias
  } else if (e === eMax) {
    return m ? NaN : ((s ? -1 : 1) * Infinity)
  } else {
    m = m + Math.pow(2, mLen)
    e = e - eBias
  }
  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
}

exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
  var e, m, c
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
  var i = isLE ? 0 : (nBytes - 1)
  var d = isLE ? 1 : -1
  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

  value = Math.abs(value)

  if (isNaN(value) || value === Infinity) {
    m = isNaN(value) ? 1 : 0
    e = eMax
  } else {
    e = Math.floor(Math.log(value) / Math.LN2)
    if (value * (c = Math.pow(2, -e)) < 1) {
      e--
      c *= 2
    }
    if (e + eBias >= 1) {
      value += rt / c
    } else {
      value += rt * Math.pow(2, 1 - eBias)
    }
    if (value * c >= 2) {
      e++
      c /= 2
    }

    if (e + eBias >= eMax) {
      m = 0
      e = eMax
    } else if (e + eBias >= 1) {
      m = ((value * c) - 1) * Math.pow(2, mLen)
      e = e + eBias
    } else {
      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
      e = 0
    }
  }

  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

  e = (e << mLen) | m
  eLen += mLen
  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

  buffer[offset + i - d] |= s * 128
}


/***/ }),

/***/ "./node_modules/process/browser.js":
/*!*****************************************!*\
  !*** ./node_modules/process/browser.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };


/***/ }),

/***/ "./node_modules/setimmediate/setImmediate.js":
/*!***************************************************!*\
  !*** ./node_modules/setimmediate/setImmediate.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global, process) {(function (global, undefined) {
    "use strict";

    if (global.setImmediate) {
        return;
    }

    var nextHandle = 1; // Spec says greater than zero
    var tasksByHandle = {};
    var currentlyRunningATask = false;
    var doc = global.document;
    var registerImmediate;

    function setImmediate(callback) {
      // Callback can either be a function or a string
      if (typeof callback !== "function") {
        callback = new Function("" + callback);
      }
      // Copy function arguments
      var args = new Array(arguments.length - 1);
      for (var i = 0; i < args.length; i++) {
          args[i] = arguments[i + 1];
      }
      // Store and register the task
      var task = { callback: callback, args: args };
      tasksByHandle[nextHandle] = task;
      registerImmediate(nextHandle);
      return nextHandle++;
    }

    function clearImmediate(handle) {
        delete tasksByHandle[handle];
    }

    function run(task) {
        var callback = task.callback;
        var args = task.args;
        switch (args.length) {
        case 0:
            callback();
            break;
        case 1:
            callback(args[0]);
            break;
        case 2:
            callback(args[0], args[1]);
            break;
        case 3:
            callback(args[0], args[1], args[2]);
            break;
        default:
            callback.apply(undefined, args);
            break;
        }
    }

    function runIfPresent(handle) {
        // From the spec: "Wait until any invocations of this algorithm started before this one have completed."
        // So if we're currently running a task, we'll need to delay this invocation.
        if (currentlyRunningATask) {
            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a
            // "too much recursion" error.
            setTimeout(runIfPresent, 0, handle);
        } else {
            var task = tasksByHandle[handle];
            if (task) {
                currentlyRunningATask = true;
                try {
                    run(task);
                } finally {
                    clearImmediate(handle);
                    currentlyRunningATask = false;
                }
            }
        }
    }

    function installNextTickImplementation() {
        registerImmediate = function(handle) {
            process.nextTick(function () { runIfPresent(handle); });
        };
    }

    function canUsePostMessage() {
        // The test against `importScripts` prevents this implementation from being installed inside a web worker,
        // where `global.postMessage` means something completely different and can't be used for this purpose.
        if (global.postMessage && !global.importScripts) {
            var postMessageIsAsynchronous = true;
            var oldOnMessage = global.onmessage;
            global.onmessage = function() {
                postMessageIsAsynchronous = false;
            };
            global.postMessage("", "*");
            global.onmessage = oldOnMessage;
            return postMessageIsAsynchronous;
        }
    }

    function installPostMessageImplementation() {
        // Installs an event handler on `global` for the `message` event: see
        // * https://developer.mozilla.org/en/DOM/window.postMessage
        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages

        var messagePrefix = "setImmediate$" + Math.random() + "$";
        var onGlobalMessage = function(event) {
            if (event.source === global &&
                typeof event.data === "string" &&
                event.data.indexOf(messagePrefix) === 0) {
                runIfPresent(+event.data.slice(messagePrefix.length));
            }
        };

        if (global.addEventListener) {
            global.addEventListener("message", onGlobalMessage, false);
        } else {
            global.attachEvent("onmessage", onGlobalMessage);
        }

        registerImmediate = function(handle) {
            global.postMessage(messagePrefix + handle, "*");
        };
    }

    function installMessageChannelImplementation() {
        var channel = new MessageChannel();
        channel.port1.onmessage = function(event) {
            var handle = event.data;
            runIfPresent(handle);
        };

        registerImmediate = function(handle) {
            channel.port2.postMessage(handle);
        };
    }

    function installReadyStateChangeImplementation() {
        var html = doc.documentElement;
        registerImmediate = function(handle) {
            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted
            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.
            var script = doc.createElement("script");
            script.onreadystatechange = function () {
                runIfPresent(handle);
                script.onreadystatechange = null;
                html.removeChild(script);
                script = null;
            };
            html.appendChild(script);
        };
    }

    function installSetTimeoutImplementation() {
        registerImmediate = function(handle) {
            setTimeout(runIfPresent, 0, handle);
        };
    }

    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.
    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);
    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;

    // Don't get fooled by e.g. browserify environments.
    if ({}.toString.call(global.process) === "[object process]") {
        // For Node.js before 0.9
        installNextTickImplementation();

    } else if (canUsePostMessage()) {
        // For non-IE10 modern browsers
        installPostMessageImplementation();

    } else if (global.MessageChannel) {
        // For web workers, where supported
        installMessageChannelImplementation();

    } else if (doc && "onreadystatechange" in doc.createElement("script")) {
        // For IE 6–8
        installReadyStateChangeImplementation();

    } else {
        // For older browsers
        installSetTimeoutImplementation();
    }

    attachTo.setImmediate = setImmediate;
    attachTo.clearImmediate = clearImmediate;
}(typeof self === "undefined" ? typeof global === "undefined" ? this : global : self));

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js"), __webpack_require__(/*! ./../process/browser.js */ "./node_modules/process/browser.js")))

/***/ }),

/***/ "./node_modules/timers-browserify/main.js":
/*!************************************************!*\
  !*** ./node_modules/timers-browserify/main.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {var scope = (typeof global !== "undefined" && global) ||
            (typeof self !== "undefined" && self) ||
            window;
var apply = Function.prototype.apply;

// DOM APIs, for completeness

exports.setTimeout = function() {
  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);
};
exports.setInterval = function() {
  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);
};
exports.clearTimeout =
exports.clearInterval = function(timeout) {
  if (timeout) {
    timeout.close();
  }
};

function Timeout(id, clearFn) {
  this._id = id;
  this._clearFn = clearFn;
}
Timeout.prototype.unref = Timeout.prototype.ref = function() {};
Timeout.prototype.close = function() {
  this._clearFn.call(scope, this._id);
};

// Does not start the time, just sets up the members needed.
exports.enroll = function(item, msecs) {
  clearTimeout(item._idleTimeoutId);
  item._idleTimeout = msecs;
};

exports.unenroll = function(item) {
  clearTimeout(item._idleTimeoutId);
  item._idleTimeout = -1;
};

exports._unrefActive = exports.active = function(item) {
  clearTimeout(item._idleTimeoutId);

  var msecs = item._idleTimeout;
  if (msecs >= 0) {
    item._idleTimeoutId = setTimeout(function onTimeout() {
      if (item._onTimeout)
        item._onTimeout();
    }, msecs);
  }
};

// setimmediate attaches itself to the global object
__webpack_require__(/*! setimmediate */ "./node_modules/setimmediate/setImmediate.js");
// On some exotic environments, it's not clear which object `setimmediate` was
// able to install onto.  Search each possibility in the same order as the
// `setimmediate` library.
exports.setImmediate = (typeof self !== "undefined" && self.setImmediate) ||
                       (typeof global !== "undefined" && global.setImmediate) ||
                       (this && this.setImmediate);
exports.clearImmediate = (typeof self !== "undefined" && self.clearImmediate) ||
                         (typeof global !== "undefined" && global.clearImmediate) ||
                         (this && this.clearImmediate);

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "./node_modules/webpack/buildin/amd-define.js":
/*!***************************************!*\
  !*** (webpack)/buildin/amd-define.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function() {
	throw new Error("define cannot be used indirect");
};


/***/ }),

/***/ "./node_modules/webpack/buildin/amd-options.js":
/*!****************************************!*\
  !*** (webpack)/buildin/amd-options.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/* WEBPACK VAR INJECTION */(function(__webpack_amd_options__) {/* globals __webpack_amd_options__ */
module.exports = __webpack_amd_options__;

/* WEBPACK VAR INJECTION */}.call(this, {}))

/***/ }),

/***/ "./node_modules/webpack/buildin/global.js":
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || new Function("return this")();
} catch (e) {
	// This works if the window reference is available
	if (typeof window === "object") g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),

/***/ "./node_modules/webpack/buildin/module.js":
/*!***********************************!*\
  !*** (webpack)/buildin/module.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function(module) {
	if (!module.webpackPolyfill) {
		module.deprecate = function() {};
		module.paths = [];
		// module.parent = undefined by default
		if (!module.children) module.children = [];
		Object.defineProperty(module, "loaded", {
			enumerable: true,
			get: function() {
				return module.l;
			}
		});
		Object.defineProperty(module, "id", {
			enumerable: true,
			get: function() {
				return module.i;
			}
		});
		module.webpackPolyfill = 1;
	}
	return module;
};


/***/ }),

/***/ "./src/lib/ReactVTK.js":
/*!*****************************!*\
  !*** ./src/lib/ReactVTK.js ***!
  \*****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react_vtk_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react-vtk-js */ "../dist/esm/index.js");

/* harmony default export */ __webpack_exports__["default"] = (react_vtk_js__WEBPACK_IMPORTED_MODULE_0__);

/***/ }),

/***/ 0:
/*!************************!*\
  !*** crypto (ignored) ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports) {

/* (ignored) */

/***/ })

}]);
//# sourceMappingURL=async-ReactVTK.js.map
//# sourceMappingURL=async-ReactVTK.js.map